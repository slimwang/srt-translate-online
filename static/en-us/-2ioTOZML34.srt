1
00:00:00,258 --> 00:00:02,440
So, it seems we can use plus with numbers and we can

2
00:00:02,440 --> 00:00:06,460
use plus with strings. What if someone tries to use plus with

3
00:00:06,460 --> 00:00:08,690
a string and a number at the same time? So, suppose my

4
00:00:08,690 --> 00:00:11,750
name is actually the number 9. Well, when we try and run

5
00:00:11,750 --> 00:00:15,610
this, what we get is an error. Here's the error we get.

6
00:00:15,610 --> 00:00:18,680
This is a little different from the syntax errors we've seen before.

7
00:00:18,680 --> 00:00:21,600
This is still in the Python grammar. But it's something that doesn't

8
00:00:21,600 --> 00:00:25,340
make sense. What we tried to do was concatenate a string, which is

9
00:00:25,340 --> 00:00:28,130
the string My name is, and the number, which is

10
00:00:28,130 --> 00:00:30,870
the integer 9, and it doesn't make sense to paste

11
00:00:30,870 --> 00:00:32,910
those together. At least Python doesn't know what it means.

12
00:00:32,910 --> 00:00:36,820
So this produces an error, we can't add numbers and strings

13
00:00:36,820 --> 00:00:40,225
together. We can multiply strings though, this is a little

14
00:00:40,225 --> 00:00:43,630
strange. And so, here I'm doing the exclamation point string

15
00:00:43,630 --> 00:00:47,980
times 12, and what I get is 12 exclamation points.

16
00:00:47,980 --> 00:00:50,720
This is better than having to type them all out. So

17
00:00:50,720 --> 00:00:53,040
I can change, instead of doing Hello

18
00:00:53,040 --> 00:00:56,000
name, exclamation point plus exclamation point, I

19
00:00:56,000 --> 00:01:02,240
could do exclamation point times 3 here. And this would be the Hello Dave with

20
00:01:02,240 --> 00:01:05,390
3. So if I'm very excited to say hello to myself, I could do

21
00:01:05,390 --> 00:01:07,720
exclamation point times 38. And then I'll

22
00:01:07,720 --> 00:01:10,500
get Hello Dave, followed by 38 exclamation points.
