1
00:00:00,320 --> 00:00:05,310
In the case of full virtualization, the operating system thinks that it

2
00:00:05,310 --> 00:00:10,090
owns all the devices already. And the way devices are virtualized, is the

3
00:00:10,090 --> 00:00:15,230
familiar trap and emulate technique. That is for the devices

4
00:00:15,230 --> 00:00:20,220
that the operating system thinks it owns when it tries to make

5
00:00:20,220 --> 00:00:25,320
any access. To those devices, it's going to result in a trap into

6
00:00:25,320 --> 00:00:28,850
the hyperviser and the hyperviser will emulate

7
00:00:28,850 --> 00:00:32,650
the functionality that the Operating System intends for

8
00:00:32,650 --> 00:00:34,800
that particular device. In this sense, there

9
00:00:34,800 --> 00:00:37,390
is not much scope for innovation in the

10
00:00:37,390 --> 00:00:40,790
way devices are virtualized in a fully

11
00:00:40,790 --> 00:00:44,400
virtualized environment. A lots of details of course,

12
00:00:44,400 --> 00:00:46,810
that the hyperviser has to worry about,

13
00:00:46,810 --> 00:00:50,700
once the guest. Trans into the hypervisor to

14
00:00:50,700 --> 00:00:57,600
ensure the legality of the I/O operation and also whether the guest is allowed

15
00:00:57,600 --> 00:01:03,220
to make those I/O operations and so on, but nothing fundamental conceptually.

16
00:01:03,220 --> 00:01:05,590
Is there in terms of device

17
00:01:05,590 --> 00:01:09,390
virtualization in a fully virtualized environment. Para

18
00:01:09,390 --> 00:01:15,820
virtualized setting is much more interesting. The IO devices seen by the guest

19
00:01:15,820 --> 00:01:19,360
operating system are exactly the ones that

20
00:01:19,360 --> 00:01:22,560
are available to the hypervisor. That is, the

21
00:01:22,560 --> 00:01:24,890
set of hardware devices That are available

22
00:01:24,890 --> 00:01:28,110
in the platform are exactly the one that

23
00:01:28,110 --> 00:01:30,269
the para-virtualized guest operating system is going

24
00:01:30,269 --> 00:01:33,010
to be able to manipulate. This gives an

25
00:01:33,010 --> 00:01:37,280
opportunity for innovating the interaction between the

26
00:01:37,280 --> 00:01:41,130
guest operating system and the hypervisor, in particular

27
00:01:41,130 --> 00:01:46,935
ways in which we can make Device virtualization more efficient when we have this

28
00:01:46,935 --> 00:01:50,000
para-virtualized environment. So for one thing, it

29
00:01:50,000 --> 00:01:52,250
is possible for the hypervisor to come up

30
00:01:52,250 --> 00:01:55,920
with clean and simple device abstractions that

31
00:01:55,920 --> 00:01:59,048
can be used by the para-virtualized operating

32
00:01:59,048 --> 00:02:02,570
system. Further, through APIs, it becomes possible

33
00:02:02,570 --> 00:02:06,190
For the hypervisor to expose shared buffers to

34
00:02:06,190 --> 00:02:09,740
the guest operating system. So that efficiently

35
00:02:09,740 --> 00:02:11,530
data can be passed between the guest

36
00:02:11,530 --> 00:02:13,930
operating system and the hypervisor and to

37
00:02:13,930 --> 00:02:18,740
the devices without incurring the overhead of

38
00:02:18,740 --> 00:02:22,600
copying multiple times data from one address

39
00:02:22,600 --> 00:02:25,360
space into another. And similarly, there can

40
00:02:25,360 --> 00:02:28,340
be innovations in the way event delivery

41
00:02:28,340 --> 00:02:31,460
happens between the hypervisor and the guest

42
00:02:31,460 --> 00:02:34,180
operating system. So, in order to do

43
00:02:34,180 --> 00:02:37,380
device virtualization, we have to worry about two

44
00:02:37,380 --> 00:02:40,590
things. One is how to transfer control

45
00:02:40,590 --> 00:02:43,200
back and forth between the hypervisor and the

46
00:02:43,200 --> 00:02:47,580
guest. Because, devices being hardware entities They

47
00:02:47,580 --> 00:02:51,550
need manipulation by the hypervisor in a privileged

48
00:02:51,550 --> 00:02:57,370
state. And there is a data transfer that needs to be done because the hypervisor

49
00:02:57,370 --> 00:03:01,890
is in a different protection domain compared to the guest operating system.

50
00:03:01,890 --> 00:03:04,860
So these are two things that one has to worry about in

51
00:03:04,860 --> 00:03:10,070
device virtualization and we'll see how both control transfer. And data transfer

52
00:03:10,070 --> 00:03:14,870
at accomplished in both the fully virtualized and the para virtualized settings.
