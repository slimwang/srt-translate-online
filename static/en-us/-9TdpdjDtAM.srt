1
00:00:00,260 --> 00:00:02,940
Okay.
So Michael, for the last 15 minutes or

2
00:00:02,940 --> 00:00:07,700
so we've been talking about decision
trees, sort of in the abstract without

3
00:00:07,700 --> 00:00:10,690
saying too much about the kinds of
functions they can actually represent.

4
00:00:10,690 --> 00:00:14,050
So, for the next few minutes or so I
want to talk a little bit about not just

5
00:00:14,050 --> 00:00:18,570
decision trees in the abstract, but
exactly how expressive they can be.

6
00:00:18,570 --> 00:00:19,460
Is that okay?
>> Yeah,

7
00:00:19,460 --> 00:00:21,280
I think that would be really helpful.

8
00:00:21,280 --> 00:00:21,980
>> I think so too.

9
00:00:21,980 --> 00:00:24,150
So in fact, I want to look
at a set of functions, and

10
00:00:24,150 --> 00:00:27,090
in particular I'm interested in
looking at Boolean functions.

11
00:00:28,450 --> 00:00:29,840
>> Boolean.

12
00:00:29,840 --> 00:00:32,240
>> So what's your favorite
simple Boolean function?

13
00:00:32,240 --> 00:00:33,170
>> Implication.

14
00:00:33,170 --> 00:00:35,250
>> What's your other favorite
simple boolean function?

15
00:00:35,250 --> 00:00:37,940
>> Well I like Nor.

16
00:00:37,940 --> 00:00:38,500
>> Right.
So what I

17
00:00:38,500 --> 00:00:41,190
just heard you say is you like And,
so let's do that one.

18
00:00:41,190 --> 00:00:41,800
>> Oh, that's great.

19
00:00:41,800 --> 00:00:42,530
That is my favorite.

20
00:00:43,570 --> 00:00:44,080
>> All right.

21
00:00:44,080 --> 00:00:45,800
So, in fact, let's do very simple And.

22
00:00:45,800 --> 00:00:47,250
So, how does And work, right?

23
00:00:47,250 --> 00:00:49,360
So, you've got two attributes.

24
00:00:49,360 --> 00:00:50,560
Let's say A and B.

25
00:00:51,850 --> 00:00:56,420
And, this expression,
A and B, is true when?

26
00:00:56,420 --> 00:00:57,600
>> When A and B are true.

27
00:00:57,600 --> 00:00:59,861
When they are both
true at the same time.

28
00:00:59,861 --> 00:01:00,661
>> Right, exactly.

29
00:01:00,661 --> 00:01:03,346
So, how would you build a decision tree,

30
00:01:03,346 --> 00:01:09,250
given that there are only two attribute,
A and B, to represent that function?

31
00:01:09,250 --> 00:01:11,000
>> Okay so
I'd have a note that's A and B.

32
00:01:12,020 --> 00:01:13,441
And if that's true.
>> Nope, you're not allowed to do that.

33
00:01:13,441 --> 00:01:14,750
>> Oh.

34
00:01:14,750 --> 00:01:17,470
>> Every node can be,
have at most one attribute.

35
00:01:17,470 --> 00:01:20,390
>> All right well let's
let's put A in an attribute.

36
00:01:21,820 --> 00:01:23,310
>> Okay, so here's a little node.

37
00:01:23,310 --> 00:01:25,520
Let's call it A.

38
00:01:25,520 --> 00:01:26,560
>> Okay.
>> Now what?

39
00:01:26,560 --> 00:01:27,780
>> And well I mean, for

40
00:01:27,780 --> 00:01:29,680
it to be a node it needs to have
the little two branchy things.

41
00:01:30,750 --> 00:01:31,490
True and false.

42
00:01:31,490 --> 00:01:31,990
>> Okay.

43
00:01:33,160 --> 00:01:35,980
All right, so how about true on
the left and false on the right?

44
00:01:37,060 --> 00:01:38,410
>> Sure, as long as you label them.

45
00:01:38,410 --> 00:01:39,020
So, all right.

46
00:01:39,020 --> 00:01:42,120
So then A, if A is true,
okay, I don't know.

47
00:01:42,120 --> 00:01:46,860
But oh, but if A is false,
then we know that A and B must be false.

48
00:01:46,860 --> 00:01:48,030
Doesn't matter what B is.

49
00:01:48,030 --> 00:01:49,400
So we can just put a leaf under the F.

50
00:01:49,400 --> 00:01:49,900
>> That's correct.

51
00:01:51,020 --> 00:01:51,860
All right, I like that.

52
00:01:51,860 --> 00:01:52,890
>> Okay.

53
00:01:52,890 --> 00:01:53,950
What about when A is true?

54
00:01:53,950 --> 00:01:54,780
>> What, is that an F?

55
00:01:56,020 --> 00:01:57,643
>> That is an F, and
that is a minus sign for false.

56
00:01:57,643 --> 00:01:58,271
>> Oh, a minus sign.

57
00:01:58,271 --> 00:01:58,853
I get it, okay.

58
00:01:58,853 --> 00:02:01,800
I thought you were just not
done drawing the F yet.

59
00:02:01,800 --> 00:02:02,750
>> good.
All right.

60
00:02:02,750 --> 00:02:03,550
So, oh yeah.

61
00:02:03,550 --> 00:02:05,180
On the true side then,
I don't think we know.

62
00:02:05,180 --> 00:02:07,850
So I think we need to split on B also.

63
00:02:07,850 --> 00:02:08,699
>> Okay.

64
00:02:08,699 --> 00:02:09,960
>> So put a little B under there.

65
00:02:09,960 --> 00:02:11,340
>> All right, done.

66
00:02:11,340 --> 00:02:13,768
>> All right, and
then true-false split on B.

67
00:02:17,638 --> 00:02:19,500
All right and so
now we've got these two cases.

68
00:02:19,500 --> 00:02:23,410
So if B is false, then again,
it doesn't matter what A was but

69
00:02:23,410 --> 00:02:24,560
A turns out to be true.

70
00:02:24,560 --> 00:02:27,470
But it's still the, the, it should
be a minus sign underneath that.

71
00:02:28,540 --> 00:02:29,120
>> Okay.

72
00:02:29,120 --> 00:02:31,110
>> So it's not A and B is not true.

73
00:02:31,110 --> 00:02:34,610
But if A is true and
B is true then A and B is true.

74
00:02:34,610 --> 00:02:36,240
So there should be
a plus sign on the left.

75
00:02:37,410 --> 00:02:38,245
>> That's exactly right.

76
00:02:38,245 --> 00:02:39,590
>> Woo.

77
00:02:39,590 --> 00:02:41,850
>> So clearly decision trees proof by,

78
00:02:41,850 --> 00:02:45,720
we just drew it here,
can represent the Boolean function And.

79
00:02:45,720 --> 00:02:46,634
>> Sure.
>> [CROSSTALK].

80
00:02:46,634 --> 00:02:49,712
>> You said something int,
you said something interesting, Michael.

81
00:02:49,712 --> 00:02:52,310
You said it doesn't matter
what A is if B is false.

82
00:02:52,310 --> 00:02:58,920
So what would happen if I switch,
A and B around.

83
00:02:58,920 --> 00:02:59,620
>> That's the same.

84
00:02:59,620 --> 00:03:03,000
So if B, okay, in the beginning,
we say, if B is false, it's false.

85
00:03:03,000 --> 00:03:04,910
If B is true, we check A.

86
00:03:04,910 --> 00:03:06,420
If A is false, then it's false.

87
00:03:06,420 --> 00:03:08,750
But if A is true, then it's true.

88
00:03:08,750 --> 00:03:12,180
So it actually still represents
exactly the same function, A and B.

89
00:03:12,180 --> 00:03:15,530
Oh, because A and B is collaborative.

90
00:03:15,530 --> 00:03:17,580
No, commutative.

91
00:03:17,580 --> 00:03:19,020
Yes?
No?

92
00:03:19,020 --> 00:03:20,540
Hello?
>> It's one of those things.

93
00:03:20,540 --> 00:03:21,210
It's commutative.

94
00:03:21,210 --> 00:03:22,990
As opposed to associative.

95
00:03:22,990 --> 00:03:23,560
>> As opposed to what?

96
00:03:24,620 --> 00:03:25,280
>> Associative.

97
00:03:25,280 --> 00:03:26,450
>> Well I mean it, it's that too.

98
00:03:26,450 --> 00:03:28,830
But I mean, it's the reason that you
can just switch those two things and

99
00:03:28,830 --> 00:03:31,480
it didn't make a difference is because
they play the same role in the function.

100
00:03:32,480 --> 00:03:36,170
>> That's true in, in terms of
representation of the decision trees.

101
00:03:36,170 --> 00:03:38,470
You know, it doesn't really matter
which attribute you pick or

102
00:03:38,470 --> 00:03:39,450
the order in which you do them.

103
00:03:39,450 --> 00:03:42,820
You might get a better tree or a worse
tree or a longer tree or a shorter tree.

104
00:03:42,820 --> 00:03:45,790
But for something simple like,
two valued And,

105
00:03:45,790 --> 00:03:47,200
it really just doesn't matter.

106
00:03:47,200 --> 00:03:48,610
>> Okay.

107
00:03:48,610 --> 00:03:49,380
>> kind of neat, huh?

108
00:03:49,380 --> 00:03:49,880
>> Yeah.
