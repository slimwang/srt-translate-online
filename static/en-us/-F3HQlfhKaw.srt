1
00:00:00,330 --> 00:00:03,850
Great work. Thumbs up. The data has landed safely on

2
00:00:03,850 --> 00:00:07,065
our phones. But I was thinking about it, and actually

3
00:00:07,065 --> 00:00:10,057
instead of hard coding our post code in, we'd really

4
00:00:10,057 --> 00:00:12,515
[SOUND] like our sun train app user, to be able

5
00:00:12,515 --> 00:00:15,726
to change their location in the settings. So let's make

6
00:00:15,726 --> 00:00:19,183
the FetchWeatherTask more flexible by having it take as input

7
00:00:19,183 --> 00:00:22,890
a postal code parameter. While we're doing that, we should

8
00:00:22,890 --> 00:00:26,340
also take this opportunity to do a little bit of refactoring.

9
00:00:26,340 --> 00:00:29,600
Instead of concatenating the strings for the server query

10
00:00:29,600 --> 00:00:32,369
URL, we should use a UriBuilder Class to build

11
00:00:32,369 --> 00:00:35,580
up he URL. We can declare a base URL

12
00:00:35,580 --> 00:00:39,120
and then append each pair of query PARAM and

13
00:00:39,120 --> 00:00:43,100
PARAM values onto it. This includes PARAM's for post

14
00:00:43,100 --> 00:00:46,890
code. JSON format, metric units, and date count. This'll

15
00:00:46,890 --> 00:00:49,080
make it easier in the future if we ever

16
00:00:49,080 --> 00:00:51,610
have to make these options configurable by the user.

17
00:00:52,710 --> 00:00:55,950
If you want to verify that the URL is built up properly. After

18
00:00:55,950 --> 00:00:59,110
you do these tasks, you can use verbose logging to print it out.
