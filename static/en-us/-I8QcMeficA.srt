1
00:00:00,006 --> 00:00:03,776
Now, InGrids, we allow any entity definition to have a physics object, that is

2
00:00:03,776 --> 00:00:09,200
an entity doesn't inherit from physics object and isn't required to have one e.

3
00:00:09,200 --> 00:00:11,990
Now from those daring digital souls who want one, they'll need to actually

4
00:00:11,990 --> 00:00:14,735
create a handle to the physics body and keep it around over time so they can

5
00:00:14,735 --> 00:00:19,670
manipulate it. Before they can do that, of course they have to first fill out

6
00:00:19,670 --> 00:00:22,904
the entity definition object and pass that out to the gPhysicsEngine.addBody

7
00:00:22,904 --> 00:00:27,597
which we've coded up previously. Now for grids, every object in the world is in

8
00:00:27,597 --> 00:00:31,760
a box. So our description is pretty easy to generate. First off, we passed the

9
00:00:31,760 --> 00:00:34,928
x and y position values to the class, alongside the halfWidth and halfHeight of

10
00:00:34,928 --> 00:00:39,060
the box representing its size. In addition to that, box 2d expects some

11
00:00:39,060 --> 00:00:42,360
specific surface properties such as dampening, friction, things along those

12
00:00:42,360 --> 00:00:46,080
lines. So we go ahead and set them here as well if we want them.
