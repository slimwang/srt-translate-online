1
00:00:00,345 --> 00:00:04,298
Whoa, that was a tough concept,
but you handled it really well.

2
00:00:04,298 --> 00:00:08,210
This unlocks the ability to build some
really awesome layouts in Android

3
00:00:08,210 --> 00:00:11,420
because almost all screens contain
some type of nested layouts,

4
00:00:11,420 --> 00:00:15,080
which Correll was actually mentioning
earlier in the Google Play app.

5
00:00:15,080 --> 00:00:17,980
After all of that prep work,
now we're ready to go back into

6
00:00:17,980 --> 00:00:21,630
Android Studio land to implement the
changes for an improved quantity picker.

7
00:00:22,860 --> 00:00:26,620
In case you're wondering, Katherine,
what if I'm trying to build a layout and

8
00:00:26,620 --> 00:00:29,230
I don't have three
options of XML layouts

9
00:00:29,230 --> 00:00:31,360
magically appear before me
that I have to choose from.

10
00:00:31,360 --> 00:00:33,920
Well, that's a fair question.

11
00:00:33,920 --> 00:00:37,390
So far we've practiced
being able to read XML and

12
00:00:37,390 --> 00:00:39,500
draw a view hierarchy diagram.

13
00:00:39,500 --> 00:00:41,708
We've also practiced
reading XML layouts and

14
00:00:41,708 --> 00:00:44,600
drawing a sketch of what
the screen would look like.

15
00:00:44,600 --> 00:00:48,610
But now it's time to practice seeing
a design of what we want to build and

16
00:00:48,610 --> 00:00:50,920
being able to write the XML from it.

17
00:00:50,920 --> 00:00:54,380
I do realize that I gave you
the solution XML in the previous quiz.

18
00:00:54,380 --> 00:00:58,190
I was somewhat paying attention, but I
don't want you to look at that solution.

19
00:00:58,190 --> 00:01:01,550
I want you to practice the skill
of seeing a screenshot or

20
00:01:01,550 --> 00:01:05,480
a mock of what you want to build and
then being able to write the XML for it.

21
00:01:06,820 --> 00:01:08,835
Normally, we would start
with the desired screenshot

22
00:01:08,835 --> 00:01:10,135
of what we want to build.

23
00:01:10,135 --> 00:01:13,085
You can get this from a designer
that's working on your team who's

24
00:01:13,085 --> 00:01:13,985
designing the app for you.

25
00:01:13,985 --> 00:01:16,215
Or if you're working without a designer,

26
00:01:16,215 --> 00:01:18,795
you could also sketch
this out on your own.

27
00:01:18,795 --> 00:01:22,367
Then you would imagine how to break
this down into views and ViewGroups.

28
00:01:22,367 --> 00:01:26,797
You can mark it up and then try to draw
out the view hierarchy diagram for

29
00:01:26,797 --> 00:01:30,327
the relationship between
the children and the parent views.

30
00:01:30,327 --> 00:01:33,617
After you finish this diagram, you can
start writing out the skeleton for

31
00:01:33,617 --> 00:01:36,437
what the XML layout
code would look like.

32
00:01:36,437 --> 00:01:38,297
I'll leave these parts
as an exercise for you.

33
00:01:38,297 --> 00:01:43,157
You'll make your changes in
the activity_main.xml layout file.

34
00:01:43,157 --> 00:01:45,197
Aside from writing your XML here and

35
00:01:45,197 --> 00:01:49,220
seeing a preview of it, you can
also click on the design pane here.

36
00:01:49,220 --> 00:01:52,240
This is Design tab as
opposed to the Text tab.

37
00:01:52,240 --> 00:01:56,690
The Design pane allows you to drag and
drop views onto the device.

38
00:01:56,690 --> 00:01:59,950
You can also see the component
tree in the top right corner here.

39
00:01:59,950 --> 00:02:03,930
This is, essentially, a tree of
all the views in your hierarchy.

40
00:02:03,930 --> 00:02:07,030
Currently we have vertical LinearLayout,
that's the parent view, and

41
00:02:07,030 --> 00:02:09,180
all these children views inside of it.

42
00:02:09,180 --> 00:02:11,420
If you had nested ViewGroups,
they would also show up here.

43
00:02:12,800 --> 00:02:15,790
Now go ahead and
build this layout in Android Studio.

44
00:02:15,790 --> 00:02:18,870
After you've selected and positioned
the views, remember to style them so

45
00:02:18,870 --> 00:02:20,290
it looks like this.

46
00:02:20,290 --> 00:02:22,420
The style of the views
is mostly the same,

47
00:02:22,420 --> 00:02:25,620
except note that there's eight dp of
space in-between the minus button and

48
00:02:25,620 --> 00:02:28,330
the two and in-between the two and
the plus button.

49
00:02:28,330 --> 00:02:30,710
As mentioned earlier,
avoid looking at the code and

50
00:02:30,710 --> 00:02:32,710
try implementing it yourself.

51
00:02:32,710 --> 00:02:34,410
When you're done,
check this box to continue.
