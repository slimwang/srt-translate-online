1
00:00:00,000 --> 00:00:03,000
But if we can't figure out a way to make the calls easier,

2
00:00:03,000 --> 00:00:07,000
then we're going to have to concentrate on having fewer calls.

3
00:00:07,000 --> 00:00:11,000
Let me write down some possibilities for fewer calls and see which ones

4
00:00:11,000 --> 00:00:13,000
you think make sense.

5
00:00:13,000 --> 00:00:18,000
One possibility would be for each equation, like ODD plus ODD equals EVEN,

6
00:00:18,000 --> 00:00:27,000
rather than evaluating them all N factorial times, maybe we could combine all of those

7
00:00:27,000 --> 00:00:29,000
into one big equation.

8
00:00:29,000 --> 00:00:33,000
Certainly that would result in fewer calls if we could figure out a way to do that

9
00:00:33,000 --> 00:00:35,000
and still get the right answer.

10
00:00:35,000 --> 00:00:42,000
Another way might be to, say, could we figure out a way to fill in one digit at a time?

11
00:00:42,000 --> 00:00:46,000
Rather than do all N factorial permutations of digits,

12
00:00:46,000 --> 00:00:52,000
if we could do one digit, see if that works, and if it does then do the next digit.

13
00:00:52,000 --> 00:00:57,000
That would certainly help us do a smaller number of calls.

14
00:00:57,000 --> 00:01:01,000
That's the approach we took with the zebra function where we started out

15
00:01:01,000 --> 00:01:05,000
by doing all the permutations, and then we figured out let's go through

16
00:01:05,000 --> 00:01:09,000
and if there's a contradiction, let's stop and not do the remaining ones.

17
00:01:09,000 --> 00:01:15,000
The question is can we figure out a way to take that general approach for this problem.

18
00:01:15,000 --> 00:01:22,000
Then the third approach would be to eval the formula once but eval it as a function

19
00:01:22,000 --> 00:01:24,000
with parameters.

20
00:01:24,000 --> 00:01:31,000
To do all the work of figuring out how to understand number plus number equals number,

21
00:01:31,000 --> 00:01:37,000
do that just once and then call that function repeatedly with all the permutations.

22
00:01:37,000 --> 00:01:42,000
There'd still be lots of calls to the function, but there'd be fewer calls to eval.

23
00:01:42,000 --> 00:01:45,000
Tell me which one of these three do you think is the most promising.

24
00:01:45,000 --> 00:01:48,000
Again, it's a matter of opinion.

25
00:01:48,000 --> 00:01:51,000
You might have better ideas, but I want you to think about it

26
00:01:51,000 --> 99:59:59,999
and tell me what you think.
