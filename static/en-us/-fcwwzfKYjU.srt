1
00:00:00,000 --> 00:00:02,000
The answer is we get a smooth path.

2
00:00:02,000 --> 00:00:06,000
To see why that's the case, let me just simulate the optimization.

3
00:00:06,000 --> 00:00:10,000
Suppose we're given a solution to the planning problem like this,

4
00:00:10,000 --> 00:00:13,000
and you run the optimization algorithm. Consider a place like this.

5
00:00:13,000 --> 00:00:16,000
By shifting this point into that direction,

6
00:00:16,000 --> 00:00:19,000
and perhaps shifting the other points in other directions,

7
00:00:19,000 --> 00:00:22,000
we can decrease the second error term,

8
00:00:22,000 --> 00:00:25,000
both for this pair of points, and this pair of points.

9
00:00:25,000 --> 00:00:28,000
However, we do this at the expense of the first error term,

10
00:00:28,000 --> 00:00:32,000
since we're now shifting the point away from the original x.

11
00:00:32,000 --> 00:00:36,000
Depending on the weight of these error terms, we might arrive with like the following.

12
00:00:36,000 --> 00:00:42,000
This new path suffers an error of the first type that we moved the points away

13
00:00:42,000 --> 00:00:48,000
from the original points, but it drastically reduces the inter-point distance

14
00:00:48,000 --> 00:00:50,000
as in this error term over here.

15
00:00:50,000 --> 00:00:53,000
If you insist that the original points are not changed,

16
00:00:53,000 --> 00:00:56,000
then just exclude those from the optimization.

17
00:00:56,000 --> 00:01:00,000
In fact, in our exercise, we will not consider those points

18
00:01:00,000 --> 00:01:07,000
Y0 will always been the same as x0, and yn-1 will always be the same as xn-1,

19
00:01:07,000 --> 00:01:10,000
assuming we have n points starting in x0.

20
00:01:10,000 --> 99:59:59,999
The optimization is only applied to the intermediary points.
