1
00:00:00,530 --> 00:00:04,330
All right so hopefully you have a better
understanding of why OnClickListener is

2
00:00:04,330 --> 00:00:07,830
interface with an abstract
method called OnClick.

3
00:00:07,830 --> 00:00:11,450
Your role as the developer is to
set up the event listeners for

4
00:00:11,450 --> 00:00:14,220
the input events you want
to handle in your app.

5
00:00:14,220 --> 00:00:18,496
More specifically, for each listener,
you will need to follow three steps.

6
00:00:18,496 --> 00:00:22,634
Number one, define the event
listener and a custom behavior for

7
00:00:22,634 --> 00:00:24,251
when the event happens.

8
00:00:24,251 --> 00:00:28,260
Number two, create a new object instance
of the event listener by calling

9
00:00:28,260 --> 00:00:29,305
the constructor.

10
00:00:29,305 --> 00:00:32,878
And number three, attach a listener
to the view you want to listen for

11
00:00:32,878 --> 00:00:36,170
events on, and I'll show you
the code you need at each step.

12
00:00:36,170 --> 00:00:39,070
First we need to define an event
listener class that implements

13
00:00:39,070 --> 00:00:40,000
the interface.

14
00:00:40,000 --> 00:00:43,460
You can call anything you want as long
as it falls the Java conventions for

15
00:00:43,460 --> 00:00:44,840
naming classes.

16
00:00:44,840 --> 00:00:48,230
In this case, we name the class
NumbersClickListener, and

17
00:00:48,230 --> 00:00:52,570
this code is located in a new file
called NumbersClickListener.java.

18
00:00:52,570 --> 00:00:56,710
When we define the NumbersClickListener
class, the declaration should say public

19
00:00:56,710 --> 00:01:00,320
class followed by the name of the class,
followed by the word implements, and

20
00:01:00,320 --> 00:01:03,920
then the interface name,
which is OnClickListener in this case.

21
00:01:03,920 --> 00:01:07,581
So note that implements is a Java
keyword that has a special meaning, and

22
00:01:07,581 --> 00:01:10,642
you can find a list of these
special keywords in In Java Oracle

23
00:01:10,642 --> 00:01:11,798
documentation here.

24
00:01:11,798 --> 00:01:16,159
We use implements to express that the
NumbersClickListener class will support

25
00:01:16,159 --> 00:01:20,440
the specified interface and provide
code for all its abstract methods.

26
00:01:20,440 --> 00:01:23,158
By implementing
the OnClickListener interface for

27
00:01:23,158 --> 00:01:27,233
every piece in the Android code that
expects an OnClickListener object type,

28
00:01:27,233 --> 00:01:29,285
we can use the NumbersClickListener.

29
00:01:29,285 --> 00:01:33,800
And right before the method we
have this @override annotation.

30
00:01:33,800 --> 00:01:37,530
This means that we are overrriding
the blank method in the interface and

31
00:01:37,530 --> 00:01:39,270
providing our own implementation.

32
00:01:39,270 --> 00:01:42,320
Our implementation of the OnClick
method is that we want a toast

33
00:01:42,320 --> 00:01:45,390
message to pop up that says
open the list of numbers.

34
00:01:45,390 --> 00:01:49,000
We could have provided any other custom
behavior here, this is just an example.

35
00:01:49,000 --> 00:01:51,470
Once we define our
NumbersClickListener class,

36
00:01:51,470 --> 00:01:53,630
we need to create
an object instance of it.

37
00:01:53,630 --> 00:01:57,050
If you remember from the last course,
we have the class template, but

38
00:01:57,050 --> 00:01:59,340
we need to create
object instances of it.

39
00:01:59,340 --> 00:02:03,000
We just created the floor plan,
but we need an actual house.

40
00:02:03,000 --> 00:02:06,230
Remember back to the syntax for
creating an object using a constructor.

41
00:02:06,230 --> 00:02:09,220
To create a NumbersClickListener
object instance,

42
00:02:09,220 --> 00:02:12,660
we can call the constructor for
the class with the new keyword.

43
00:02:12,660 --> 00:02:16,100
This creates a new object,
though we can store in this variable

44
00:02:16,100 --> 00:02:19,210
on the left-hand side, where
the variable is of the static type.

45
00:02:19,210 --> 00:02:20,188
Within the Miwok app,

46
00:02:20,188 --> 00:02:23,070
this is what the code looks
like in the MainActivity file.

47
00:02:23,070 --> 00:02:26,900
We modify the MainActivity so that we
can immediately start listening for

48
00:02:26,900 --> 00:02:29,600
click events as soon as
the activity is created.

49
00:02:29,600 --> 00:02:32,860
We're creating a new
NumbersClickListener object, and

50
00:02:32,860 --> 00:02:35,470
storing it in a variable
called clickListener,

51
00:02:35,470 --> 00:02:38,970
which is of the variable data
type NumbersClickListener.

52
00:02:38,970 --> 00:02:42,030
So once we have an object instance
of the NumbersClickListener,

53
00:02:42,030 --> 00:02:45,780
we need to attach it to the view that
we want to listen for clicks on.

54
00:02:45,780 --> 00:02:47,130
And this is the code for that.

55
00:02:47,130 --> 00:02:51,070
Assuming we have the view stored as a
variable called ButtonView, we just need

56
00:02:51,070 --> 00:02:54,150
to call the setOnClickListener
method on that view and

57
00:02:54,150 --> 00:02:58,230
pass in one parameter argument,
the clickListener variable.

58
00:02:58,230 --> 00:03:01,610
Well how do we know to call this method
with this particular input argument?

59
00:03:01,610 --> 00:03:03,882
Back to our handy dandy documentation.

60
00:03:03,882 --> 00:03:07,380
Here we'll take a look at the View
class, and it has a method

61
00:03:07,380 --> 00:03:11,510
called setOnClickListener,
where you pass in an onClickListener.

62
00:03:11,510 --> 00:03:14,260
Since the NumbersClickListener
implements this interface,

63
00:03:14,260 --> 00:03:17,050
it is also considered an onClick
listener data type, and

64
00:03:17,050 --> 00:03:20,170
we can pass that in as
an input to the method.

65
00:03:20,170 --> 00:03:23,640
Now let's see what the code looks
like within the context of the app.

66
00:03:23,640 --> 00:03:26,720
However, you won't need to
make these changes just yet.

67
00:03:26,720 --> 00:03:29,670
The quiz in the next video will
give you more specific instructions

68
00:03:29,670 --> 00:03:34,420
on what we need to do, so just follow
along and try to understand the logic.

69
00:03:34,420 --> 00:03:37,010
So here I've created
a NumbersClickListener class and

70
00:03:37,010 --> 00:03:39,450
defined it in its own Java file.

71
00:03:39,450 --> 00:03:42,830
Remember that we specify
the package name in the code, so

72
00:03:42,830 --> 00:03:46,410
that our code is bundled under
this unique package name.

73
00:03:46,410 --> 00:03:49,160
Then we have the import statements
because we are using the View and

74
00:03:49,160 --> 00:03:51,880
the Toast classes and we can use them
even though we didn't create them

75
00:03:51,880 --> 00:03:53,890
ourselves because we're importing them.

76
00:03:53,890 --> 00:03:59,650
Then in the class declaration,
we have implements View.OnClickListener.

77
00:03:59,650 --> 00:04:03,320
And I'd like to point out that
we add View.OnClickListener

78
00:04:03,320 --> 00:04:06,980
to be very explicit that we're
referring to the OnClickListener

79
00:04:06,980 --> 00:04:10,070
that is part of the View.java
file in this package.

80
00:04:10,070 --> 00:04:14,470
And recall that we use the dot
operator to access Java class members.

81
00:04:14,470 --> 00:04:18,160
So here in the NumbersClickListener,
I've created an onClick method.

82
00:04:18,160 --> 00:04:21,300
And in it, I've said that when
the numbers category is clicked on,

83
00:04:21,300 --> 00:04:26,030
we choose to display a toast message
that says, Open the list of numbers.

84
00:04:26,030 --> 00:04:28,800
And there you have it,
this is the NumbersClickListener.

85
00:04:28,800 --> 00:04:30,950
Now I want to switch
over to the MainActivity.

86
00:04:30,950 --> 00:04:32,650
And at the end of the onCreate method,

87
00:04:32,650 --> 00:04:35,420
we need to create a new
ClickListener object.

88
00:04:35,420 --> 00:04:38,420
Now, we need to attach the ClickListener
to the numbers category view.

89
00:04:38,420 --> 00:04:42,030
However, first we need to find that
view object in the view hierarchy.

90
00:04:42,030 --> 00:04:44,860
And this process should be
familiar to you from the Just-Java

91
00:04:44,860 --> 00:04:46,190
app in the last course.

92
00:04:46,190 --> 00:04:48,590
So here's how we're
going to write that code.

93
00:04:48,590 --> 00:04:54,190
So to find the view that
shows the number category, so

94
00:04:54,190 --> 00:04:59,860
here I call the findViewById method and
request the view with the id numbers.

95
00:04:59,860 --> 00:05:02,912
So once we find the TextView we can
store it in a variable that I'm going to

96
00:05:02,912 --> 00:05:03,598
call numbers.

97
00:05:03,598 --> 00:05:07,344
Then we can call the setOnClickListener
method on this text view and

98
00:05:07,344 --> 00:05:10,360
pass the ClickListener
object as the input.

99
00:05:10,360 --> 00:05:12,100
So here's how that would look.

100
00:05:12,100 --> 00:05:15,960
So here we set the setOnClickListener
method on the text view and

101
00:05:15,960 --> 00:05:18,260
pass in the ClickListener
object as its input.

102
00:05:18,260 --> 00:05:21,788
So the text view numbers in our case
will store the ClickListener object, and

103
00:05:21,788 --> 00:05:25,810
later, if this text view is pressed,
the ClickListener jumps into action.

104
00:05:25,810 --> 00:05:28,170
In order to test that this Java
code I wrote actually works,

105
00:05:28,170 --> 00:05:31,600
I have to delete some old code that
we wrote for the button click.

106
00:05:31,600 --> 00:05:35,220
So in the activity_main.xml file,

107
00:05:35,220 --> 00:05:39,910
I'll need to delete the Android onClick
attribute on the numbers TextView.

108
00:05:39,910 --> 00:05:44,316
So in the MainActivity, I'll also need
to remove the openNumbersList method,

109
00:05:44,316 --> 00:05:49,020
and this leaves the main activity
with one method, onCreate method.

110
00:05:49,020 --> 00:05:50,475
Now when I run the app on my device,

111
00:05:50,475 --> 00:05:54,580
clicking the numbers category
pops up a toast message, great!

112
00:05:54,580 --> 00:05:55,900
So now my ClickListener code is working.
