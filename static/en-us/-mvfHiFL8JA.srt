1
00:00:00,150 --> 00:00:04,460
Now that you have seen how the, ROB based processor works,

2
00:00:04,460 --> 00:00:07,600
when we have reservation stations for separate units separately,

3
00:00:07,600 --> 00:00:12,030
let's talk about unified reservation stations. So, this is what we had so

4
00:00:12,030 --> 00:00:16,670
far. We had three reservation stations for the add unit, and we had two for

5
00:00:16,670 --> 00:00:21,430
the multiply unit. This also does subtracts, this also does divides. And

6
00:00:21,430 --> 00:00:24,940
we have seen it in at least one of our examples that we can run out of

7
00:00:24,940 --> 00:00:29,070
these reservation stations while we still have plenty of these left.

8
00:00:29,070 --> 00:00:31,899
However, we still couldn't issue instructions. Basically, once we

9
00:00:31,899 --> 00:00:35,361
cannot issue instruction because it needs one of these reservation stations,

10
00:00:35,361 --> 00:00:38,500
because issue needs to happen in order. We cannot issue a new this,

11
00:00:38,500 --> 00:00:42,100
either. So until these reservation stations become available,

12
00:00:42,100 --> 00:00:45,720
we cannot really use the available ones here. Note that, these reservation

13
00:00:45,720 --> 00:00:49,620
stations are exactly the same, except that this one is feeding this unit, and

14
00:00:49,620 --> 00:00:53,320
this one is feeding this unit. But the logic in them is exactly the same.

15
00:00:53,320 --> 00:00:56,580
They're monitoring all of the results that are broadcast, capturing results, and

16
00:00:56,580 --> 00:01:01,470
then going to execution units. So to improve our ability to use the expensive

17
00:01:01,470 --> 00:01:06,000
reservation stations. We can go with the so called unified reservation stations

18
00:01:06,000 --> 00:01:11,420
approach. Where all of the reservation stations are in one big array. Now,

19
00:01:11,420 --> 00:01:14,950
when we need to issue, we need to grab one of these reservation stations. But

20
00:01:14,950 --> 00:01:16,620
it doesn't matter which unit it is for.

21
00:01:16,620 --> 00:01:19,950
Basically all of the reservation stations are equal. So the benefit of

22
00:01:19,950 --> 00:01:23,150
this is that, as long as there are any available reservation stations,

23
00:01:23,150 --> 00:01:27,480
we can issue instructions. The drawback here is that the logic for dispatching

24
00:01:27,480 --> 00:01:30,920
instructions into these execution units becomes a little bit more complication.

25
00:01:31,990 --> 00:01:36,610
Here, for issue into the multiplication we only need it to see whether one of

26
00:01:36,610 --> 00:01:41,880
these is available, and if, one or more or available, select one. Meanwhile,

27
00:01:41,880 --> 00:01:46,390
here we're selecting one of these three. And sending it to the add you need.

28
00:01:46,390 --> 00:01:49,320
And if more than one are available we have to figure out just which one of

29
00:01:49,320 --> 00:01:56,020
the three. Here however, every cycle we need to select one of these, for

30
00:01:56,020 --> 00:02:00,700
the add and one of these for the multiply, so we need to actually consider which

31
00:02:00,700 --> 00:02:04,650
one of these are adds to go here, which one of these are multiplies to go here,

32
00:02:04,650 --> 00:02:07,840
and then every cycle we need to select one of the adds and one of the multiplies

33
00:02:07,840 --> 00:02:12,375
to go there. So, the logic for. Dispatching becomes more complicated here

34
00:02:12,375 --> 00:02:16,050
because we have more reservation stations to look at. And we also for each unit

35
00:02:16,050 --> 00:02:18,870
we need to look at reservation stations that just have wrong things for

36
00:02:18,870 --> 00:02:23,000
that unit, so we have to ignore that. But again, reservation stations are very,

37
00:02:23,000 --> 00:02:28,330
very expensive. So, usually processes will use some variant of this

38
00:02:28,330 --> 00:02:32,590
organization rather than this one. Basically we don't have each unit. Having its

39
00:02:32,590 --> 00:02:35,890
own reservation station's typically a group of units who have a reservation

40
00:02:35,890 --> 00:02:39,510
station so that we can benefit from, our reservation stations if we have them.
