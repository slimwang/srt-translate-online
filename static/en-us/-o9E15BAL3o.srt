1
00:00:00,000 --> 00:00:06,000
[Norvig] I want to describe a notation which we call classical planning,

2
00:00:06,000 --> 00:00:13,000
which is a representation language for dealing with states and actions and plans,

3
00:00:13,000 --> 00:00:17,000
and it's also an approach for dealing with the problem of complexity

4
00:00:17,000 --> 00:00:21,000
by factoring the world into variables.

5
00:00:21,000 --> 00:00:28,000
So under classical planning, a state space consists of all the possible assignments

6
00:00:28,000 --> 00:00:32,000
to k Boolean variables.

7
00:00:32,000 --> 00:00:38,000
So that means they'll be 2 to the k states in that state space.

8
00:00:38,000 --> 00:00:41,000
And if we think about the 2 location vacuum world,

9
00:00:41,000 --> 00:00:44,000
we would have 3 Boolean variables.

10
00:00:44,000 --> 00:00:57,000
We could have dirt in location A, dirt in location B, and vacuum in location A.

11
00:00:57,000 --> 00:01:00,000
The vacuum has to be in either A or B.

12
00:01:00,000 --> 00:01:06,000
So these 3 variables will do, and there will be 8 possible states in that world,

13
00:01:06,000 --> 00:01:11,000
but they can be succinctly represented through the 3 variables.

14
00:01:11,000 --> 00:01:18,000
And then a world state consists of a complete assignment of true or false

15
00:01:18,000 --> 00:01:20,000
through each of the 3 variables.

16
00:01:20,000 --> 00:01:24,000
And then a belief state.

17
00:01:24,000 --> 00:01:28,000
Just as in problem solving, the belief state depends on

18
00:01:28,000 --> 00:01:31,000
what type of environment you want to deal with.

19
00:01:31,000 --> 00:01:38,000
In the core classical planning, the belief state had to be a complete assignment,

20
00:01:38,000 --> 00:01:43,000
and that was useful for dealing with deterministic fully observable domains.

21
00:01:43,000 --> 00:01:47,000
But we can easily extend classical planning,

22
00:01:47,000 --> 00:01:51,000
and we can deal with belief states that are partial assignments--

23
00:01:51,000 --> 00:01:56,000
that is, some of the variables have values and others don't.

24
00:01:56,000 --> 00:02:01,000
So we could have the belief state consisting of vacuum in A is true

25
00:02:01,000 --> 00:02:08,000
and the others are unknown, and that small formula represents 4 possible world states.

26
00:02:08,000 --> 00:02:18,000
We can even have a belief state which is an arbitrary formula in Boolean logic,

27
00:02:18,000 --> 00:02:20,000
and that can represent anything we want.

28
00:02:20,000 --> 00:02:22,000
So that's what states look like.

29
00:02:22,000 --> 00:02:25,000
Now we have to figure out what actions look like

30
00:02:25,000 --> 00:02:28,000
and what the results of those actions look like.

31
00:02:28,000 --> 00:02:34,000
These are represented in classical planning by something called an action schema.

32
00:02:34,000 --> 00:02:40,000
It's called a schema because it represents many possible actions that are similar to each other.

33
00:02:40,000 --> 00:02:46,000
So let's take an example of we want to send cargo around the world,

34
00:02:46,000 --> 00:02:50,000
and we've got a bunch of planes in airports, and we have cargo and so on.

35
00:02:50,000 --> 00:02:56,000
I'll show you the action for having a plane fly from one location to another.

36
00:02:56,000 --> 00:02:59,000
Here's one possible representation.

37
00:02:59,000 --> 00:03:03,000
We say it's an action schema, so we write the word Action

38
00:03:03,000 --> 00:03:08,000
and then we write the action operator and its arguments,

39
00:03:08,000 --> 00:03:15,000
so it's a Fly of P from X to Y.

40
00:03:15,000 --> 00:03:19,000
And then we list the preconditions,

41
00:03:19,000 --> 00:03:24,000
what needs to be true in order to be able to execute this action.

42
00:03:24,000 --> 00:03:29,000
We can say something like P better be a plane.

43
00:03:29,000 --> 00:03:35,000
It's no good trying to fly a truck or a submarine.

44
00:03:35,000 --> 00:03:43,000
And we'll use the And formula from Boolean propositional logic.

45
00:03:43,000 --> 00:03:47,000
X better be an airport.

46
00:03:47,000 --> 00:03:50,000
We don't want to try to take off from my backyard.

47
00:03:50,000 --> 00:03:55,000
And similarly, Y better be an airport.

48
00:03:55,000 --> 00:04:02,000
And, most importantly, P better be at airport X in order to take off from there.

49
00:04:02,000 --> 00:04:08,000
And then we represent the effects of the action by saying

50
00:04:08,000 --> 00:04:10,000
what's going to happen.

51
00:04:10,000 --> 00:04:13,000
Once we fly from X to Y,

52
00:04:13,000 --> 00:04:16,000
the plane is no longer at X,

53
00:04:16,000 --> 00:04:23,000
so we say not at P,X--the plane is no longer at X--

54
00:04:23,000 --> 00:04:27,000
and the plane is now at Y.

55
00:04:27,000 --> 00:04:30,000
This is called an action schema.

56
00:04:30,000 --> 00:04:36,000
It represents a set of actions for all possible planes, for all X and for all Y,

57
00:04:36,000 --> 00:04:39,000
represents all of those actions in one schema

58
00:04:39,000 --> 00:04:45,000
that says what we need to know in order to apply the action and it says what will happen.

59
00:04:45,000 --> 00:04:50,000
In terms of the transition from state spaces, this variable will become false

60
00:04:50,000 --> 00:04:53,000
and this one will become true.

61
00:04:53,000 --> 00:05:00,000
When we look at this formula, this looks like a term in first order logic,

62
00:05:00,000 --> 00:05:04,000
but we're actually dealing with a completely propositional world.

63
00:05:04,000 --> 00:05:08,000
It just looks like that because this is a schema.

64
00:05:08,000 --> 00:05:15,000
We can apply this schema to specific ground states, specific world states,

65
00:05:15,000 --> 00:05:18,000
and then P and X would have specific values,

66
00:05:18,000 --> 00:05:21,000
and you could just think of it as concatenating their names all together,

67
00:05:21,000 --> 00:05:24,000
and that's just the name of one variable.

68
00:05:24,000 --> 00:05:29,000
The name just happens to have this complex form with parentheses and commas in it

69
00:05:29,000 --> 99:59:59,999
to make it easier to write one schema that covers all the individual fly actions.
