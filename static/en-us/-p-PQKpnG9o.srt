1
00:00:01,300 --> 00:00:06,900
The upshot of attacking and fixing the three sources of latency of concern for

2
00:00:06,900 --> 00:00:12,470
real time task is that TS-Linux is able to provide quality of

3
00:00:12,470 --> 00:00:16,079
service guarantees for real time applications

4
00:00:16,079 --> 00:00:18,460
running on commodity operating systems such as

5
00:00:18,460 --> 00:00:20,904
Linux. At the same time, by

6
00:00:20,904 --> 00:00:25,696
admission control, using the proportional period scheduling,

7
00:00:25,696 --> 00:00:31,140
TS-Linux ensures that throughput-oriented tasks are not

8
00:00:31,140 --> 00:00:34,489
shut out from getting CPU time. The

9
00:00:34,489 --> 00:00:38,920
proof of the pudding is in the eating. I encourage you to read the details

10
00:00:38,920 --> 00:00:41,430
of performance evaluation carried out in this

11
00:00:41,430 --> 00:00:43,230
paper that I've assigned to you for

12
00:00:43,230 --> 00:00:47,150
reading, wherein the authors show that both

13
00:00:47,150 --> 00:00:50,060
the above objectives are achieved by their design.
