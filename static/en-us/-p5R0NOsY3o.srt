1
00:00:00,000 --> 00:00:03,000
The first part of our return value is just the word function.

2
00:00:03,000 --> 00:00:07,000
This is to separate it from a number like 3 or 4

3
00:00:07,000 --> 00:00:09,000
and to allow us to tell if the user mistakenly tries to call something

4
00:00:09,000 --> 00:00:11,000
that's not a function later.

5
00:00:11,000 --> 00:00:15,000
We then list the parameters which we got right from the abstract syntax tree,

6
00:00:15,000 --> 00:00:18,000
the body of the function, which we also got right from the abstract syntax tree,

7
00:00:18,000 --> 00:00:23,000
and the environment in which it was defined--this one, env.

8
00:00:23,000 --> 00:00:27,000
And we're passing in env here instead of some global environment or whatnot

9
00:00:27,000 --> 00:00:33,000
and this is what's going to allow local functions to see local variables.

10
00:00:33,000 --> 00:00:36,000
This is why things like makegreeter work.

11
00:00:36,000 --> 00:00:39,000
They can refer back to variables that were currently in scope

12
00:00:39,000 --> 00:00:42,000
when they were defined.

13
00:00:42,000 --> 00:00:46,000
Many of you may notice a striking similarity between this and our previous code

14
00:00:46,000 --> 00:00:48,000
for handling function declarations.

15
00:00:48,000 --> 00:00:50,000
In fact, our previous code just had 1 more step

16
00:00:50,000 --> 00:00:54,000
where we added this value to the environment.

17
00:00:54,000 --> 00:00:57,000
For an anonymous function, we don't add it to the environment

18
00:00:57,000 --> 00:00:59,000
unless the user assigns it.

19
00:00:59,000 --> 00:01:01,000
But this code should look really, really familiar.

20
00:01:01,000 --> 00:01:05,000
We have something almost exactly like it for handling functions at the top level

21
00:01:05,000 --> 99:59:59,999
as JavaScript elements.
