1
00:00:00,315 --> 00:00:03,440
As part of this class you're going to
have to write some software.

2
00:00:03,440 --> 00:00:08,109
In particular, you're going to have to
write some machine learning algorithms.

3
00:00:08,109 --> 00:00:12,850
It's useful if we standardize on
what the application programmer

4
00:00:12,850 --> 00:00:15,930
interface ought to look like for
the code you're going to write.

5
00:00:15,930 --> 00:00:17,600
So here's what it looks like.

6
00:00:17,600 --> 00:00:20,930
For a linear regression
learning algorithm,

7
00:00:20,930 --> 00:00:24,780
your API ought to implement
something that works like this.

8
00:00:24,780 --> 00:00:29,140
A constructor that creates
an instance of one of these learners,

9
00:00:29,140 --> 00:00:31,020
which is now learner.

10
00:00:31,020 --> 00:00:36,690
A method called train that can take
our training data and train the model.

11
00:00:36,690 --> 00:00:42,200
And a query function that takes a list
of X values that you want to test and

12
00:00:42,200 --> 00:00:46,440
returns a list of Y values according to
what the model thinks they should be.

13
00:00:46,440 --> 00:00:50,780
These Y values, in turn, are the ones
that we'll compare to Y test

14
00:00:50,780 --> 00:00:53,152
to see how well the algorithm works.

15
00:00:53,152 --> 00:00:57,740
Our KNNLearner ought to
have the same methods.

16
00:00:57,740 --> 00:01:02,920
The only difference is the constructor
here has this additional argument, K,

17
00:01:02,920 --> 00:01:05,730
which would allow you to set
how large you want K to be.

18
00:01:05,730 --> 00:01:09,280
So if K is 3, that means you
use the 3 nearest neighbors.

19
00:01:09,280 --> 00:01:13,270
But it also has a train and a query
function, just like linear regression.
