1
00:00:00,000 --> 00:00:06,000
We switched to a thing called Thing DB. I think it's still called TDB in the Reddit code.

2
00:00:06,000 --> 00:00:09,000
If you find any code that's called TDB or TDB2, I think,

3
00:00:09,000 --> 00:00:12,000
this one was the second version of the Thing DB that I wrote at some point,

4
00:00:12,000 --> 00:00:15,000
this is what it's referring to, instead of having a table that looked like this--a link table

5
00:00:15,000 --> 00:00:19,000
with a bunch of different columns on it for different things--we would instead do something like this,

6
00:00:19,000 --> 00:00:22,000
we would have a table that just had a couple of properties on it,

7
00:00:22,000 --> 00:00:24,000
a couple of properties that everything had.

8
00:00:24,000 --> 00:00:29,000
Let me see if I can remember these things. Everything has a score, an author, and a date.

9
00:00:29,000 --> 00:00:33,000
There might be a few other fields like ups and downs, kind of encapsulated in the score,

10
00:00:33,000 --> 00:00:36,000
but basically, everything whether it's a link, whether it's a comment,

11
00:00:36,000 --> 00:00:39,000
whether it's a subreddit, anything has these fixed columns.

12
00:00:39,000 --> 00:00:42,000
It's not useful for all of them. It's pretty common enough.

13
00:00:42,000 --> 00:00:45,000
This was called the thing table, and we had a separate table

14
00:00:45,000 --> 00:00:49,000
that every data type had called the data table, and the data table basically had three columns.

15
00:00:49,000 --> 00:00:54,000
It had the thing ID, which thing are we referring to, and it had a key and a value.

16
00:00:54,000 --> 00:00:59,000
For a particular data type--for a link, for example--a link might be represented like this,

17
00:00:59,000 --> 00:01:03,000
we'd have an entry in the thing table, it might have a score of 5 and of course it has an ID 1,

18
00:01:03,000 --> 00:01:08,000
an author of 0, that was my user ID, a date when it was submitted and then it might have a data table.

19
00:01:08,000 --> 00:01:10,000
It may have a bunch of rows in the data table.

20
00:01:10,000 --> 00:01:16,000
It would have 1 row that would be like thing ID 1 equal the URL and another row thing ID 1 title.

21
00:01:16,000 --> 00:01:19,000
So, for every property of a thing that wasn't common across all of the things,

22
00:01:19,000 --> 00:01:23,000
we would have a row in the data table, and these are actually different database tables.

23
00:01:23,000 --> 00:01:26,000
They could be on different machines. This allowed us to add features much quicker.

24
00:01:26,000 --> 00:01:28,000
Because if we wanted to add a new data type to links,

25
00:01:28,000 --> 00:01:30,000
the new links would start getting that new row.

26
00:01:30,000 --> 00:01:34,000
We wouldn't have to go fiddle around with adding it for all the old links. We could just keep our code.

27
00:01:34,000 --> 00:01:36,000
The difference of the link doesn't have this property

28
00:01:36,000 --> 00:01:38,000
pretended it has a default value, and this was really cool.

29
00:01:38,000 --> 00:01:43,000
It also allows us to add all sorts of features without having to get the data types right way in advance.

30
00:01:43,000 --> 00:01:45,000
It also allows us to add all these new data types.

31
00:01:45,000 --> 00:01:47,000
For example, down the road, we'd add subreddits,

32
00:01:47,000 --> 00:01:51,000
so users can make their own kind of categories--their own Reddits--and that's just a thing.

33
00:01:51,000 --> 00:01:55,000
It made our development process a lot simpler, and I wrote this whole layer

34
00:01:55,000 --> 00:01:59,000
that would kind of map our Python objects to these data tables.
