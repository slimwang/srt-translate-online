1
00:00:00,070 --> 00:00:04,390
We had three requirements for
a trusted computing base.

2
00:00:04,390 --> 00:00:09,014
Isolation or tamper-proof was
one of those requirements.

3
00:00:09,014 --> 00:00:13,440
And we've been talking about
isolation and memory protection.

4
00:00:13,440 --> 00:00:18,330
All that is done to get that
tamper-proof requirement.

5
00:00:18,330 --> 00:00:23,280
Untrusted code cannot be altering
the operating system data and code.

6
00:00:23,280 --> 00:00:27,010
So that was all to do with meeting
one of those requirements,

7
00:00:27,010 --> 00:00:28,390
which is tamper-proof.

8
00:00:28,390 --> 00:00:31,590
The other requirement is complete
mediation, that you should not be able

9
00:00:31,590 --> 00:00:36,940
to bypass the operating system and
go directly to a protected resource.

10
00:00:36,940 --> 00:00:39,783
So how do we implement
complete mediation?

11
00:00:39,783 --> 00:00:43,748
Well, the way we do that is we make
sure that no protected resource,

12
00:00:43,748 --> 00:00:48,339
whether it's a memory page or a file,
could be accessed without going through

13
00:00:48,339 --> 00:00:50,860
the trusted computing base or
the kernel.

14
00:00:50,860 --> 00:00:54,290
Okay, so the TCB is also the kernel.

15
00:00:54,290 --> 00:00:58,585
The way we do that is by making
the trusted computing base,

16
00:00:58,585 --> 00:01:02,480
or having it act as a reference monitor.

17
00:01:02,480 --> 00:01:07,210
Any time you have a reference for
a particular resource, the TCB

18
00:01:07,210 --> 00:01:10,870
has to come into the picture before
you can get to the resource, okay.

19
00:01:10,870 --> 00:01:15,300
The reference has to be monitored
by the trusted computing base.

20
00:01:15,300 --> 00:01:20,070
So there should be no way for
you to bypass,

21
00:01:20,070 --> 00:01:23,510
where one way you can get around
complete mediation is by that bypassing

22
00:01:23,510 --> 00:01:27,780
the trusted computing base, there should
be no way for you to bypass this.

23
00:01:27,780 --> 00:01:29,600
So how is that implemented?
