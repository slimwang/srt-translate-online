1
00:00:00,000 --> 00:00:02,953
Let’s analyze them one by one. This requires at

2
00:00:02,953 --> 00:00:07,340
least 1C and then you can have zero or more As.

3
00:00:07,340 --> 00:00:10,412
This is CA star and we’re suppose to match

4
00:00:10,412 --> 00:00:13,701
optional CA star, so this isn’t quite right. A string

5
00:00:13,701 --> 00:00:16,690
that’s accepted up here A or even the empty string

6
00:00:16,690 --> 00:00:19,797
is not accepted down here. Down here this finite

7
00:00:19,797 --> 00:00:21,333
state machine would allow you to do

8
00:00:21,333 --> 00:00:24,747
A, C, A, C, A, C, to alternate between them

9
00:00:24,747 --> 00:00:26,353
because there is only one state. The regular

10
00:00:26,353 --> 00:00:29,207
expression up top does not. Over here this is

11
00:00:29,207 --> 00:00:31,771
looking relatively promising; if we have no C's we

12
00:00:31,771 --> 00:00:34,763
can have a star that’s pretty good and we can also

13
00:00:34,763 --> 00:00:37,294
have an optional C. But here is a string accepted

14
00:00:37,294 --> 00:00:40,869
by this first regular expression C, AA that is not

15
00:00:40,869 --> 00:00:43,358
accepted by this machine. C and then we would

16
00:00:43,358 --> 00:00:45,694
fall off. So this is not a good bat, so either I’m

17
00:00:45,694 --> 00:00:48,634
super evil or this last one is the winner and it turns

18
00:00:48,634 --> 00:00:50,697
out that the last one is the winner. And essentially

19
00:00:50,712 --> 00:00:55,284
up here we have A star and down here we have

20
00:00:55,284 --> 00:00:58,539
CA star. When I put these two paths together, I

21
00:00:58,539 --> 00:01:01,431
get optional C followed by A star.
