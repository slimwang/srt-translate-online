1
00:00:00,430 --> 00:00:03,260
As with any other software API or
framework, you'll want to become

2
00:00:03,260 --> 00:00:06,340
very comfortable with finding your
way around the Gradle documentation.

3
00:00:06,340 --> 00:00:08,830
Gradle provides a few different
forms of documentation, but

4
00:00:08,830 --> 00:00:12,570
we'll focus specifically on the DSL
reference, which is a good first place

5
00:00:12,570 --> 00:00:16,590
to look if you want to know what all
configuration options are available,

6
00:00:16,590 --> 00:00:18,590
in any given part of your build script.

7
00:00:18,590 --> 00:00:22,390
The Gradle DSL reference covers all
the different build script components.

8
00:00:22,390 --> 00:00:24,670
Many of which we'll talk
about later in this course.

9
00:00:24,670 --> 00:00:27,880
Since we're currently concerned with
tasks, let's take a look at the task

10
00:00:27,880 --> 00:00:30,790
types that are available as part
of the Gradle distribution.

11
00:00:30,790 --> 00:00:33,310
As you can see there are a number
of built in task types,

12
00:00:33,310 --> 00:00:37,340
varying from followup operations to
compilation, to source code analysis.

13
00:00:37,340 --> 00:00:40,830
Since one of the most common build
actions involves copying files.

14
00:00:40,830 --> 00:00:43,230
Let's take a look at the copy task API.

15
00:00:43,230 --> 00:00:45,780
For most built in task types
examples are provided for

16
00:00:45,780 --> 00:00:47,970
common configuration use cases.

17
00:00:47,970 --> 00:00:51,420
If we look further, we can see the
various task configuration properties

18
00:00:51,420 --> 00:00:53,340
as well as methods available.

19
00:00:53,340 --> 00:00:57,060
Many of the method descriptions
reference other greater API types.

20
00:00:57,060 --> 00:01:00,270
Since many API methods take
a groovy closure as an argument,

21
00:01:00,270 --> 00:01:03,340
it's helpful to know what arguments
will be passed into the closure.

22
00:01:03,340 --> 00:01:06,450
The eachFile method, for example,
takes a closure as an argument.

23
00:01:06,450 --> 00:01:08,540
The closure that we
pass in as an argument,

24
00:01:08,540 --> 00:01:11,930
is then given an instance of
FileCopyDetails as its argument.

25
00:01:11,930 --> 00:01:15,150
We can click this link, and then get
additional details about the options

26
00:01:15,150 --> 00:01:16,830
that are available on this class.

27
00:01:16,830 --> 00:01:19,230
The Gradle DSL reference
is your best friend.

28
00:01:19,230 --> 00:01:21,960
Learn it, love it, and it will
help you out of all sorts of jams.
