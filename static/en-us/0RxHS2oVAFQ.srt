1
00:00:00,580 --> 00:00:05,000
The way we're going to deal with this is by pasting together the segments,

2
00:00:05,000 --> 00:00:10,240
leaving out the J position. In particular, we're going to say that in order for

3
00:00:10,240 --> 00:00:12,520
the output to be a permutation of the input,

4
00:00:12,520 --> 00:00:16,820
in the case where, we don't have a match in the first position, okay? And

5
00:00:16,820 --> 00:00:21,910
it better be the case that, the following two things are permutations of

6
00:00:21,910 --> 00:00:26,240
each other. First thing in our permu, in, in our check is the tail of X.

7
00:00:26,240 --> 00:00:28,730
That is we're going to leave off that first element. And then,

8
00:00:28,730 --> 00:00:33,900
we want to compare that permutation wise with the results of

9
00:00:33,900 --> 00:00:39,010
pasting together the first segment of Y with the last segment of Y.

10
00:00:40,210 --> 00:00:42,360
So, we have left out the first element in X. And now,

11
00:00:42,360 --> 00:00:46,280
we are going to leave out that same element in Y by pasting together the first,

12
00:00:46,280 --> 00:00:51,497
remember, which J minus one elements, okay? Then from J plus one to N,

13
00:00:51,497 --> 00:00:55,040
we're going to paste those together, leaving out the J position. And

14
00:00:55,040 --> 00:00:59,020
we are going to ask the question, is the tale of X a permutation of that? Now we

15
00:00:59,020 --> 00:01:04,120
know from our equality check, that in that J position, we matched the first one

16
00:01:04,120 --> 00:01:07,840
of X. We've left that out. We've left out the one in the J position. And

17
00:01:07,840 --> 00:01:11,260
we're now asking recursively the question about whether the remainder of

18
00:01:11,260 --> 00:01:15,230
X matches is the permutation of those two segments pasted together.
