1
00:00:00,280 --> 00:00:02,930
So I hope it's clear that the aggregation framework is

2
00:00:02,930 --> 00:00:06,270
designed to allow you to create a data processing pipeline, as

3
00:00:06,270 --> 00:00:10,270
we've seen several times. Now, you can include as many

4
00:00:10,270 --> 00:00:13,750
stages as you need in order to achieve a goal. For

5
00:00:13,750 --> 00:00:16,190
each stage, you just need to consider what input that

6
00:00:16,190 --> 00:00:19,660
stage needs to receive and what output it needs to produce.

7
00:00:19,660 --> 00:00:22,230
Now, what I want to talk about here, is the fact that

8
00:00:22,230 --> 00:00:25,370
many tasks require us to use more than one stage with

9
00:00:25,370 --> 00:00:29,120
the same operator. For example, we frequently need multiple

10
00:00:29,120 --> 00:00:32,650
group stages, in order to achieve our goal. So, let's

11
00:00:32,650 --> 00:00:35,630
look at another example. This time I really want you

12
00:00:35,630 --> 00:00:38,460
to consider each stage individually and just think about the

13
00:00:38,460 --> 00:00:41,310
inputs and outputs. We're going to do a tweak

14
00:00:41,310 --> 00:00:45,280
on our original question of user mentions. And this time

15
00:00:45,280 --> 00:00:47,130
we're going to look at who has mentioned the most

16
00:00:47,130 --> 00:00:50,550
unique users. So, in the same way that we looked

17
00:00:50,550 --> 00:00:53,990
at unique hashtags just a minute ago, now

18
00:00:53,990 --> 00:00:57,360
we're going to, look at modifying this pipeline

19
00:00:57,360 --> 00:01:01,580
so that we're only counting mentions of users

20
00:01:01,580 --> 00:01:05,519
not already accounted for in our grouping. So

21
00:01:05,519 --> 00:01:10,760
here's the code for this. We have our same unwind stage as before, but the group

22
00:01:10,760 --> 00:01:12,240
stage is different, and you'll notice that there's

23
00:01:12,240 --> 00:01:15,610
another unwind stage here and another group stage here.

24
00:01:15,610 --> 00:01:18,440
In the first group stage, what we're doing is,

25
00:01:18,440 --> 00:01:24,020
aggregating still on the user's screen name but, rather

26
00:01:24,020 --> 00:01:26,460
than simply summing up all of the documents that

27
00:01:26,460 --> 00:01:29,200
this group stage received in order to calculate all the

28
00:01:29,200 --> 00:01:31,840
user mentions, because of course unwind is going to generate

29
00:01:31,840 --> 00:01:35,190
one document for every user mention. Instead what we're

30
00:01:35,190 --> 00:01:37,770
going to do here is use the addToSet operator

31
00:01:37,770 --> 00:01:41,120
that we looked at just a couple minutes ago. Now,

32
00:01:41,120 --> 00:01:43,102
what we're paying attention to here is the

33
00:01:43,102 --> 00:01:45,570
screen name for the user that was actually

34
00:01:45,570 --> 00:01:49,040
mentioned in the tweet. So we're accumulating an

35
00:01:49,040 --> 00:01:51,680
array here in this group stage of a unique

36
00:01:51,680 --> 00:01:56,030
set of users mentioned in tweets produced by

37
00:01:56,030 --> 00:02:00,090
this user, or by each user. Okay, but that

38
00:02:00,090 --> 00:02:02,070
doesn't get us what we want, because again

39
00:02:02,070 --> 00:02:06,600
remember our question is, who has mentioned the most

40
00:02:06,600 --> 00:02:10,880
unique users? Okay, so to this point, all we

41
00:02:10,880 --> 00:02:14,510
have is a list of unique users. We haven't counted

42
00:02:14,510 --> 00:02:17,500
them yet. Now in order to do that, what we're

43
00:02:17,500 --> 00:02:19,910
going to need to do is think about what's the

44
00:02:19,910 --> 00:02:23,190
output from this group stage? Well, the output is

45
00:02:23,190 --> 00:02:25,990
going to be exactly what we defined here as the

46
00:02:25,990 --> 00:02:29,090
structure of documents coming out of this. All documents will

47
00:02:29,090 --> 00:02:32,130
have an underscore id field. Which will be the username

48
00:02:32,130 --> 00:02:34,290
that forms the basis for the grouping that

49
00:02:34,290 --> 00:02:37,720
that document represents. And there will be this

50
00:02:37,720 --> 00:02:43,042
mset field, our mentions set. Okay? So this

51
00:02:43,042 --> 00:02:46,191
stage here, will receive documents with an underscore

52
00:02:46,191 --> 00:02:50,966
id field and an mset field. So, what that means is that we can use unwind

53
00:02:50,966 --> 00:02:54,446
again here, and produce one document for every

54
00:02:54,446 --> 00:02:57,245
item in this array. And again remember this is

55
00:02:57,245 --> 00:03:00,957
going to be an array of unique elements because we used the addToSet operator to

56
00:03:00,957 --> 00:03:05,875
produce it. So unwind then will generate one document for every item found, in

57
00:03:05,875 --> 00:03:11,590
the mset field where each document in its input. So this stage then,

58
00:03:11,590 --> 00:03:17,060
will unwind this array of unique user mentions and pass

59
00:03:17,060 --> 00:03:22,550
those along to this second group stage. And it's this group stage where

60
00:03:22,550 --> 00:03:26,050
we end up calculating the count that we want.

61
00:03:26,050 --> 00:03:28,070
So instead of just counting all user mentions as we

62
00:03:28,070 --> 00:03:32,170
did before, here, instead what we're going to do,

63
00:03:32,170 --> 00:03:35,290
is now count those unique mentions that get passed along

64
00:03:35,290 --> 00:03:38,680
to us here after unwinding the mset array. Okay?

65
00:03:38,680 --> 00:03:41,591
So the documents then to be passed along from this

66
00:03:41,591 --> 00:03:44,502
second group stage to sort are going to contain an

67
00:03:44,502 --> 00:03:47,669
id. This is just a, copying over essentially of the

68
00:03:47,669 --> 00:03:49,839
id that we got as input to this stage,

69
00:03:49,839 --> 00:03:52,429
which, is going to be the id that is produced

70
00:03:52,429 --> 00:03:55,670
here at this stage. And then we're simply counting

71
00:03:55,670 --> 00:03:58,872
how many documents did I receive that have that id?

72
00:03:58,872 --> 00:04:02,824
Or how many unique user mentions did I receive

73
00:04:02,824 --> 00:04:06,510
for this specific user? Okay? Then we're simply going to

74
00:04:06,510 --> 00:04:09,020
sort based on the count field, in descending order as

75
00:04:09,020 --> 00:04:12,530
we've been doing through most of our examples. And, finally,

76
00:04:12,530 --> 00:04:15,170
here I'm going to limit it to ten so we can actually see what the

77
00:04:15,170 --> 00:04:17,290
counts are for unique user mentions for the

78
00:04:17,290 --> 00:04:19,990
top ten tweeters. Okay. So, let's run this.

79
00:04:22,270 --> 00:04:24,700
Okay. So, we can see the names of the users,

80
00:04:24,700 --> 00:04:28,590
and their respective number of unique user mentions throughout this collection.
