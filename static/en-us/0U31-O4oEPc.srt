1
00:00:00,310 --> 00:00:02,050
And what we need to make a network work is

2
00:00:02,050 --> 00:00:05,820
a Protocol. And what a protocol is, a set of rules

3
00:00:05,820 --> 00:00:08,460
that people agree to, that tell you how two entities

4
00:00:08,460 --> 00:00:12,530
can talk to each other. So, for the web, the protocol

5
00:00:12,530 --> 00:00:15,610
gives rules about how a client and a server talk

6
00:00:15,610 --> 00:00:18,570
to each other. The client is the web browser and the

7
00:00:18,570 --> 00:00:22,300
server, is the web server. So that might be udacity

8
00:00:22,300 --> 00:00:25,220
dot com. The web browser is what you're running at home.

9
00:00:26,420 --> 00:00:29,670
And what the protocol says is, if you want to

10
00:00:29,670 --> 00:00:31,370
get the server to do something, the client has

11
00:00:31,370 --> 00:00:34,180
to send a message in a particular way. The

12
00:00:34,180 --> 00:00:37,400
protocol that we use on the web, is called hypertext

13
00:00:37,400 --> 00:00:43,760
transfer proto, protocol. Which is abbreviated as HTTP. When

14
00:00:43,760 --> 00:00:46,210
you look in your browser, almost all the URLs that

15
00:00:46,210 --> 00:00:49,090
you use start with HTTP. That indicates that the

16
00:00:49,090 --> 00:00:51,890
protocol, that you should use to talk to the sever,

17
00:00:51,890 --> 00:00:55,380
that you're requesting a document from, is this protocol, called

18
00:00:55,380 --> 00:00:59,040
hyper text transfer protocol. An it's a very simple protocol.

19
00:00:59,040 --> 00:01:02,245
There aren't, too many messages. There's actually only two main

20
00:01:02,245 --> 00:01:05,095
messages and there is only one, we'll talk about. That's

21
00:01:05,095 --> 00:01:08,610
the message called GET. The client can send a message

22
00:01:08,610 --> 00:01:12,150
to the server, where the message says get, and then

23
00:01:12,150 --> 00:01:15,090
the name of that object that you want to get.

24
00:01:15,090 --> 00:01:17,032
So that's all the client does. It sense the message

25
00:01:17,032 --> 00:01:19,450
like this, and if you remember the python code for get

26
00:01:19,450 --> 00:01:23,060
page. Well, lets call in some library function that actually does

27
00:01:23,060 --> 00:01:26,460
this. That's sending the get message to the server. The server

28
00:01:26,460 --> 00:01:29,920
will get that message. It will do some, run some code

29
00:01:29,920 --> 00:01:33,310
on it. It will find a file that was requested. It

30
00:01:33,310 --> 00:01:36,220
might run some more code to get the result. Take the

31
00:01:36,220 --> 00:01:39,920
web application course to understand more about what the server does,

32
00:01:39,920 --> 00:01:42,780
but what matters to the client, and what matters to us

33
00:01:42,780 --> 00:01:45,710
in using this, is what happens after that. The server

34
00:01:45,710 --> 00:01:49,650
sends back a response, which is the contents of the

35
00:01:49,650 --> 00:01:53,440
requested object. So that's the whole protocol, that's what's going

36
00:01:53,440 --> 00:01:57,040
on whether you send a web request using your browser, by

37
00:01:57,040 --> 00:01:59,370
clicking on a link. Well then the browsers doing a

38
00:01:59,370 --> 00:02:02,220
lot of things to figure out what you requested and then

39
00:02:02,220 --> 00:02:05,080
its sending a get message to the right web server.

40
00:02:05,080 --> 00:02:07,830
That was the server specified by the URL, to know which

41
00:02:07,830 --> 00:02:10,780
server it is, and then its getting a response and its

42
00:02:10,780 --> 00:02:13,990
doing processing on that response to render it. If you want to

43
00:02:13,990 --> 00:02:17,060
understand more about what the web browser is doing, take the

44
00:02:17,060 --> 00:02:20,100
programming languages class that focuses on how to build a web browser.
