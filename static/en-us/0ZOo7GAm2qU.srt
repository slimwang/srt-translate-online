1
00:00:00,270 --> 00:00:02,900
So now that we've created our empty hash table, the next

2
00:00:02,900 --> 00:00:05,100
steps are to figure out how to do lookups as well

3
00:00:05,100 --> 00:00:08,630
as adds. Both lookups and adds depend on the same first

4
00:00:08,630 --> 00:00:10,800
step. We need to find the right bucket, so that's what

5
00:00:10,800 --> 00:00:13,890
we'll do next. So remember the idea for a hash table,

6
00:00:13,890 --> 00:00:17,400
so we have a list of buckets, each bucket is a

7
00:00:17,400 --> 00:00:21,710
list of entries, and each entry is a key, and the

8
00:00:21,710 --> 00:00:25,860
list of values. So regardless of whether we want to do lookups and

9
00:00:25,860 --> 00:00:29,200
added, and find the value associated with the word, or if we

10
00:00:29,200 --> 00:00:33,340
want to do add and add a new value associated with a word.

11
00:00:33,340 --> 00:00:35,760
The first thing we always have to do is find the right bucket.

12
00:00:35,760 --> 00:00:38,020
So if you find the right bucket if we're doing a lookup, the

13
00:00:38,020 --> 00:00:41,060
next thing we're going to do is need to look through all the entries

14
00:00:41,060 --> 00:00:44,260
in that bucket to find if there's one that matches the key word.

15
00:00:44,260 --> 00:00:46,950
If we're doing add, we also need to start by finding the right

16
00:00:46,950 --> 00:00:50,760
bucket. Then we're going to look through and see if that word already exists.

17
00:00:50,760 --> 00:00:53,740
If it doesn't exist, we can add a new word

18
00:00:53,740 --> 00:00:56,400
and we'll have a new entry, with that word and that

19
00:00:56,400 --> 00:00:59,170
value. So both of those depend on first being able to

20
00:00:59,170 --> 00:01:01,620
find the right bucket, so we'll do that once and be

21
00:01:01,620 --> 00:01:04,489
able to reuse that code in both lookup and add.

22
00:01:04,489 --> 00:01:07,350
So our goal is to define a procedure, and we'll call

23
00:01:07,350 --> 00:01:11,300
it hashtable_get_bucket, and it'll take two inputs. So it'll take a

24
00:01:11,300 --> 00:01:16,080
hashtable, and a keyword, and it will output the bucket where

25
00:01:16,080 --> 00:01:18,400
that keyword could occur. We don't know yet whether

26
00:01:18,400 --> 00:01:20,740
that keyword's actually in the table. It might be somewhere

27
00:01:20,740 --> 00:01:23,020
in that bucket. It might not. But the important

28
00:01:23,020 --> 00:01:26,870
thing that hashtable_get_bucket should do, is find the bucket. One

29
00:01:26,870 --> 00:01:28,840
function that will be useful for doing that is

30
00:01:28,840 --> 00:01:32,570
the hash_string procedure that you defined earlier. And hash_string takes

31
00:01:32,570 --> 00:01:36,150
two inputs. It takes a string, which is the

32
00:01:36,150 --> 00:01:41,150
keyword, and it took a size, the number of buckets,

33
00:01:41,150 --> 00:01:44,890
and it outputs the number which is the index

34
00:01:44,890 --> 00:01:46,980
of that bucket. There's a bit of a mismatch

35
00:01:46,980 --> 00:01:49,315
here that you'll have to think about to define

36
00:01:49,315 --> 00:01:53,610
hashtable_get_bucket. That hash_string, the input is the size, the

37
00:01:53,610 --> 00:01:57,010
number of buckets, it's a number. The two inputs

38
00:01:57,010 --> 00:02:00,520
to hashtable_get_bucket are just the hashtable and a keyword.

39
00:02:00,520 --> 00:02:02,200
So you need to also figure out how to

40
00:02:02,200 --> 00:02:06,420
get the size of the hashtable to pass into hash_string.

41
00:02:06,420 --> 00:02:09,288
And if you remember the structure of the hashtable, you

42
00:02:09,288 --> 00:02:11,550
should be able to figure out how to do that.

43
00:02:11,550 --> 00:02:14,902
Remember our hashtable is a list of buckets, so the

44
00:02:14,902 --> 00:02:18,870
value that we want to pass in to the hash_string is the

45
00:02:18,870 --> 00:02:21,960
size of that hashtable, the number of elements in the

46
00:02:21,960 --> 00:02:24,730
list of buckets, that is the hash table. So see if

47
00:02:24,730 --> 00:02:29,360
you can define hashtable_get_bucket, and as a hint, you can

48
00:02:29,360 --> 00:02:31,870
do the whole definition with a very small amount of code.

49
00:02:31,870 --> 00:02:33,760
It should only take one line to do this.
