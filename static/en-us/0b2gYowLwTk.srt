1
00:00:00,080 --> 00:00:04,000
Hopefully you found this exercise interesting as a way to modify topologies.

2
00:00:04,000 --> 00:00:07,650
So this is the topology we're starting out with, and we have our random

3
00:00:07,650 --> 00:00:15,440
sentence spout linked to the exclaim1 bolt using a shuffleGrouping

4
00:00:15,440 --> 00:00:20,030
that appends three exclamation points to the end of our sentence.

5
00:00:20,030 --> 00:00:25,970
Next we have the exclaim2 bolt, linked with a shuffleGrouping to exclaim1.

6
00:00:25,970 --> 00:00:29,570
That appends three more exclamations for

7
00:00:29,570 --> 00:00:33,210
a total of six, to each of our random sentence.

8
00:00:33,210 --> 00:00:37,270
To tackle the first topology, we simply want the random

9
00:00:37,270 --> 00:00:41,090
sentence spout connected to exclaim1 only, using the shuffle grouping.

10
00:00:41,090 --> 00:00:41,860
This one is simple.

11
00:00:43,570 --> 00:00:47,190
We simply break the connection between exclaim1 and exclaim2.

12
00:00:47,190 --> 00:00:52,022
In code, we can simply comment out exclaim2.

13
00:00:52,022 --> 00:00:54,110
Once exclaim2 is commented out,

14
00:00:54,110 --> 00:00:57,290
we see that the random sentence connects to exclaim1.

15
00:00:57,290 --> 00:01:00,260
And we should have, not six, but three.

16
00:01:00,260 --> 00:01:04,170
Let's run through the maven package and submitting our program to Storm.

17
00:01:04,170 --> 00:01:07,150
Remember that your lesson should say lesson1, stage2, but

18
00:01:07,150 --> 00:01:10,340
I'm working on lesson1, stage3 in this solution.

19
00:01:10,340 --> 00:01:14,850
So, in lesson1, stage2 type mvn package.

20
00:01:14,850 --> 00:01:17,400
Once we have BUILD SUCCESS, we submit our program,

21
00:01:17,400 --> 00:01:21,775
storm jar target/udacity remember with dependencies,

22
00:01:21,775 --> 00:01:27,770
udacity.storm, and this is ReporterExclamationTopology.

23
00:01:28,890 --> 00:01:32,220
Once the program is submitted, we can go back to our visualization, and

24
00:01:32,220 --> 00:01:35,580
sure enough our sentences have three exclamation points.

25
00:01:35,580 --> 00:01:39,290
So I think our topology number 1 is a success.

26
00:01:39,290 --> 00:01:43,570
Going on to topology 2, notice that our random sentence spout is

27
00:01:43,570 --> 00:01:49,140
connected only to exclaim2, bypassing exclaim1 using a shuffle grouping.

28
00:01:49,140 --> 00:01:53,810
To do this, notice that we'll need to break the connection of our

29
00:01:53,810 --> 00:01:56,820
random sentence spout to exclaim1.

30
00:01:56,820 --> 00:02:00,810
And instead connect our random sentence bout directly to exclaim2.

31
00:02:00,810 --> 00:02:03,450
In code this is also very straightforward.

32
00:02:03,450 --> 00:02:08,669
In our topology we first uncomment exclaim2 and comment exclaim1.

33
00:02:08,669 --> 00:02:11,480
But notice that exclaim2 connects to exclaim1,

34
00:02:11,480 --> 00:02:13,880
which is no longer in our topology.

35
00:02:13,880 --> 00:02:18,230
If we were to build and run this topology, we would get a build success, but

36
00:02:18,230 --> 00:02:20,070
a runtime failure.

37
00:02:20,070 --> 00:02:20,940
Let's try it.

38
00:02:20,940 --> 00:02:23,620
We mvn package, we get a BUILD SUCCESS.

39
00:02:23,620 --> 00:02:27,060
But when we submit our topology, we get a failure and

40
00:02:27,060 --> 00:02:28,780
our visualization does not run.

41
00:02:28,780 --> 00:02:32,520
To fix this, we need to link exclaim2 to rand-sentence, and

42
00:02:32,520 --> 00:02:36,720
that simply is defining the shuffleGrouping to rand-sentence.

43
00:02:36,720 --> 00:02:40,810
So we delete our our exclaim1 and we enter in rand-sentence.

44
00:02:40,810 --> 00:02:44,670
That forms this connection from rand-sentence to exclaim2.

45
00:02:44,670 --> 00:02:46,860
And we should get three exclamations.

46
00:02:46,860 --> 00:02:47,910
Let's try this.

47
00:02:47,910 --> 00:02:49,630
We'll mvn package again.

48
00:02:49,630 --> 00:02:54,910
And once we get build success, I'm using the up arrow and submit our job again.

49
00:02:54,910 --> 00:02:56,940
Finally we come back to our visualization.

50
00:02:56,940 --> 00:02:59,540
We see the Storm program running in the background.

51
00:02:59,540 --> 00:03:02,230
And here are our sentences with three exclamations.

52
00:03:02,230 --> 00:03:06,040
This is just off the side of our SVG container.

53
00:03:06,040 --> 00:03:07,140
And there we go.

54
00:03:07,140 --> 00:03:09,800
So that completes topology number 2.

55
00:03:09,800 --> 00:03:13,540
Finally, for our last topology, notice how exclaim1 and

56
00:03:13,540 --> 00:03:17,880
exclaim2 are both connected to the random sentence spout.

57
00:03:17,880 --> 00:03:21,300
In code, we already have one connection to the random sentence spout for

58
00:03:21,300 --> 00:03:24,460
exclaim two we simply want this topology.

59
00:03:24,460 --> 00:03:29,200
Both bolts will add on three exclamation points to a random sentence, but

60
00:03:29,200 --> 00:03:33,150
the total output coming from both bolts will only be three exclamations.

61
00:03:33,150 --> 00:03:35,760
To do this in code is also very simple.

62
00:03:35,760 --> 00:03:40,620
We simply uncomment exclaim1 which is already connected to the random sentence.

63
00:03:40,620 --> 00:03:42,110
And our topology is complete.

64
00:03:42,110 --> 00:03:43,430
We run mvn package again.

65
00:03:43,430 --> 00:03:45,280
Remember to save your file.

66
00:03:45,280 --> 00:03:47,970
And once we get a build success, I won't use the up arrow this but

67
00:03:47,970 --> 00:03:51,628
I'll write in store jar target, using the tab key

68
00:03:51,628 --> 00:03:58,987
udacity-jar-with-dependencies udacity.storm.ReporterExclamationTopology.

69
00:03:58,987 --> 00:04:02,320
Once we submit our jar we go back to our visualization.

70
00:04:02,320 --> 00:04:06,990
You can hit refresh just to make sure that your visualization starts out blank,

71
00:04:06,990 --> 00:04:08,650
and finally our topology three is correct.

72
00:04:08,650 --> 00:04:12,580
We see three exclamations coming on our random sentences.

73
00:04:12,580 --> 00:04:17,149
So finally our, we can say that our final topology is correct.

74
00:04:17,149 --> 00:04:18,473
And for the final point,

75
00:04:18,473 --> 00:04:22,580
remember that you can go to stage2 > spout > RandomSentenceSpout.

76
00:04:22,580 --> 00:04:26,810
Scroll down to the sentences and uncomment the sentences and

77
00:04:26,810 --> 00:04:30,010
add in your own to personalize your visualization.

78
00:04:30,010 --> 00:04:33,100
You can take a screenshot or video and post this to the forum.

79
00:04:33,100 --> 00:04:37,620
And why don't you comment on two of your other fellow learners visualizations.

80
00:04:37,620 --> 00:04:39,820
Great job completing stage2 and lesson1.
