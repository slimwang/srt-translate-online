1
00:00:00,230 --> 00:00:02,870
In both Egyptian and Greek mythology, it's said that art was invented by

2
00:00:02,870 --> 00:00:06,727
someone tracing the shadow of a person on a cave wall. Shadows give a scene

3
00:00:06,727 --> 00:00:10,412
more realism and solidity. An object's shadow firmly establishes its location

4
00:00:10,412 --> 00:00:14,242
in relation to its surroundings. Rasterization is focused on triangles rendered

5
00:00:14,242 --> 00:00:18,158
from the eye, so we have to work a bit to generate shadows. One popular method

6
00:00:18,158 --> 00:00:22,610
of adding these is called shadow mapping. This algorithm dates way back. It was

7
00:00:22,610 --> 00:00:26,598
first described by Lance Williams in 1978. The idea is to render the scene from

8
00:00:26,598 --> 00:00:30,520
the point of view of the light. Whatever the light sees, is what gets lit.

9
00:00:30,520 --> 00:00:33,890
Remember our firefly with human eyeballs? This is where that answer comes into

10
00:00:33,890 --> 00:00:38,640
play. If a light doesn't see a surface, that means the surface is in shadow. In

11
00:00:38,640 --> 00:00:41,806
fact, this is exactly how the basic algorithm is done. The scene is rendered

12
00:00:41,806 --> 00:00:44,784
from the view of the light. And the distance of the closest objects is stored

13
00:00:44,784 --> 00:00:48,409
at each pixel. Because the light has to look in a particular direction, and has

14
00:00:48,409 --> 00:00:51,032
a limited field of view the light source used for shadow mapping is often a

15
00:00:51,032 --> 00:00:54,888
spotlight of some sort. A spotlight can be pointed in a direction, and has a

16
00:00:54,888 --> 00:00:58,754
constrained view of the world. In 3JS the only lights capable of casting

17
00:00:58,754 --> 00:01:02,366
shadows are spotlights and directional lights. For directional lights, you

18
00:01:02,366 --> 00:01:04,729
specify the limits of how wide the light extends.
