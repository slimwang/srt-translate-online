1
00:00:00,850 --> 00:00:04,049
Okay, so you're sold and
want to implement Auto Layout.

2
00:00:04,049 --> 00:00:06,320
There's more than one
way to skin that cat.

3
00:00:06,320 --> 00:00:08,080
Actually, there's four.

4
00:00:08,080 --> 00:00:09,580
Let's check them out.

5
00:00:09,580 --> 00:00:12,280
First of all, you can do it
with Swift Code by creating

6
00:00:12,279 --> 00:00:15,519
instances of constraints and
adding them to a view.

7
00:00:15,519 --> 00:00:17,469
That's the Chuck Norris way.

8
00:00:17,469 --> 00:00:19,230
We won't get into that.

9
00:00:19,230 --> 00:00:21,289
Then there is the visual formats.

10
00:00:21,289 --> 00:00:24,839
This is kind of a micro
language different from Swift

11
00:00:24,839 --> 00:00:28,780
that you insert into strings and
then feed those to views.

12
00:00:28,780 --> 00:00:32,289
It's weird as in wavy gravy weird.

13
00:00:32,289 --> 00:00:34,009
You won't use it either.

14
00:00:34,009 --> 00:00:36,839
You may also create the constraints
in interface builder.

15
00:00:36,840 --> 00:00:39,680
This is exactly the same as option one.

16
00:00:39,679 --> 00:00:42,240
But using a graphic
tool instead of code.

17
00:00:42,240 --> 00:00:46,990
We'll add a pinch of this stuff to
our stew but only as a last resort.

18
00:00:46,990 --> 00:00:50,480
Finally, we have the holy grail,
the one and

19
00:00:50,479 --> 00:00:56,359
only way of implementing auto layout
without losing your, StackViews.

20
00:00:56,359 --> 00:00:59,560
This will be our bread and
butter along all this course.

21
00:00:59,560 --> 00:01:01,920
We will always use StackViews first.

22
00:01:01,920 --> 00:01:03,660
And only if we can't move forward,

23
00:01:03,659 --> 00:01:07,179
will we resort to creating
constraints in Interface Builder.

24
00:01:07,180 --> 00:01:08,735
Let's learn more about StackViews.

