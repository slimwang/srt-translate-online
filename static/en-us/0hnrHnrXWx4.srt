1
00:00:00,330 --> 00:00:04,630
In just a second, we'll see with some live coding the functions in

2
00:00:04,630 --> 00:00:08,420
D3 that actually help us produce and manipulate scales.

3
00:00:09,590 --> 00:00:13,570
For now I wanted to talk from still a relatively high level and

4
00:00:13,570 --> 00:00:18,050
using a lot of graphics to help explain what's happening behind the scenes.

5
00:00:18,050 --> 00:00:22,000
This green rectangle here represents the scale of the life

6
00:00:22,000 --> 00:00:24,740
expectancy of the Gapminder plot.

7
00:00:24,740 --> 00:00:27,410
We see at the bottom, there's a minimum value of 15 and

8
00:00:27,410 --> 00:00:31,290
at the top, is a maximum value of 90.

9
00:00:31,290 --> 00:00:36,560
The green score on the left represents the value of our data,

10
00:00:36,560 --> 00:00:41,940
in this case, the actual numeric representation of what the life expectancy is.

11
00:00:41,940 --> 00:00:46,110
And this blue rectangle represents what pixel values you want to

12
00:00:46,110 --> 00:00:48,260
map the data values to.

13
00:00:48,260 --> 00:00:53,550
D3 refers to the input values as the domain of your data

14
00:00:53,550 --> 00:00:58,040
often are represented by the minimum value and the maximum value, but

15
00:00:58,040 --> 00:01:02,320
the domain actually refers to the entire extent between the min and

16
00:01:02,320 --> 00:01:07,850
the max, and D3 refers to the pixel values you want to map the domain to

17
00:01:07,850 --> 00:01:12,620
the range also represented by a minimum and a maximum value.

18
00:01:12,620 --> 00:01:16,290
In order to transform our domain into the range,

19
00:01:16,290 --> 00:01:19,930
we often have to specify what type of function you would like to

20
00:01:19,930 --> 00:01:25,730
use to convert the values from the data into pixel values.

21
00:01:25,730 --> 00:01:31,318
In the case of the life expectancy, this scale was linear in a Gapminder plot.

22
00:01:31,318 --> 00:01:37,770
So we want to use a linear function to map the domain values to the range.

23
00:01:37,770 --> 00:01:42,970
In the very mathematical sense and literal sense of a function that maps from

24
00:01:42,970 --> 00:01:48,060
our domain into our range, we can think of the transform, that converts

25
00:01:48,060 --> 00:01:53,250
the values from our domain in the data to pixel values as an equation.

26
00:01:53,250 --> 00:01:59,660
In this case mapping the domain as x into the range as y.

27
00:01:59,660 --> 00:02:02,020
Since we are using a linear scale,

28
00:02:02,020 --> 00:02:05,540
the function is simply the equation of a line.

29
00:02:05,540 --> 00:02:10,080
You do not have to worry what the value of m or the value of b are in this case.

30
00:02:10,080 --> 00:02:14,400
That is one of the very nice conveniences that D3 provides for us.

31
00:02:14,400 --> 00:02:20,040
All we need to specify are the minimum and the maximum of our domain, and

32
00:02:20,040 --> 00:02:25,870
the minimum and maximum of where we want to map our values to.

33
00:02:25,870 --> 00:02:30,040
And the D3 scale function figures out the appropriate values and

34
00:02:30,040 --> 00:02:35,090
constants for the linear function that maps the domain into the range.

35
00:02:35,090 --> 00:02:40,120
So far we haven't actually specified the values we want to map our domain into.

36
00:02:40,120 --> 00:02:42,150
For the live coding example we will get into,

37
00:02:42,150 --> 00:02:46,680
we will simply pick a max and min for the range.

38
00:02:47,720 --> 00:02:48,370
In our case,

39
00:02:48,370 --> 00:02:53,400
we can simply set a max and min of where we want to output range to be.

40
00:02:53,400 --> 00:02:58,590
In this case, I choose a maximum of 200 pixels, since that's around

41
00:02:58,590 --> 00:03:01,840
the size of the box we would be working with on the web page.

42
00:03:01,840 --> 00:03:04,250
A minimum range value of zero.

43
00:03:04,250 --> 00:03:09,430
Does not mean we plot our point in one of the corners of our webpage,

44
00:03:09,430 --> 00:03:14,800
it's simply an offset from the root SVG element which we will be working with.

45
00:03:14,800 --> 00:03:20,520
One less quark I want to cover is that the coordinate plane in the SVG

46
00:03:20,520 --> 00:03:26,780
in the webpage actually has a value of zero at the top left, and as you go out.

47
00:03:26,780 --> 00:03:30,860
Right from that origin, x values are increasing and

48
00:03:30,860 --> 00:03:35,230
as you go down from the origin, y values are increasing.

49
00:03:35,230 --> 00:03:40,010
So a value of zero actually corresponds to the upper left and

50
00:03:40,010 --> 00:03:46,000
a y value of 200 actually will correspond to the bottom of our SVG elemen.

51
00:03:46,000 --> 00:03:50,860
Now that we have some conceptual idea of why D3 scales are important, and

52
00:03:50,860 --> 00:03:55,800
how to map data values into pixel values to display on the screen,

53
00:03:55,800 --> 00:03:59,620
we can get into some live code and actually see this put into practice.
