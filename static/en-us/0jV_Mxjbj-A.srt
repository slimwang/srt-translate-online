1
00:00:00,510 --> 00:00:07,370
The solution that they took in Andrew is as follows. Only for logging into

2
00:00:07,370 --> 00:00:13,400
a workstation the user name and password are used. And of course, they have to

3
00:00:13,400 --> 00:00:17,470
be securely communicated to the server Over

4
00:00:17,470 --> 00:00:19,170
insecure links, we'll see how that is

5
00:00:19,170 --> 00:00:25,830
done. But the key point is that username and password is only useful logging in.

6
00:00:25,830 --> 00:00:31,390
Once a user is logged into a workstation, at that point onwards for the

7
00:00:31,390 --> 00:00:37,080
rest of the log-in session, the intent is to use ephemeral IDs and

8
00:00:37,080 --> 00:00:41,260
ephemeral keys But all the subsequent

9
00:00:41,260 --> 00:00:45,050
Venus to vize communication. Recall that Venus

10
00:00:45,050 --> 00:00:47,830
is the process that resides on the

11
00:00:47,830 --> 00:00:50,840
virtual workstation, acting as a surrogate for

12
00:00:50,840 --> 00:00:55,990
the user for file caching. And vize is, of course, the server that

13
00:00:55,990 --> 00:01:01,480
is living inside A secure environment. And this venus-vize communication

14
00:01:01,480 --> 00:01:06,890
happens over insecure links, that's where we going to use ephemeral

15
00:01:06,890 --> 00:01:11,980
ids and keys. So this gives rise to three classes of client-server

16
00:01:11,980 --> 00:01:16,430
interactions. The first interaction is logging

17
00:01:16,430 --> 00:01:19,050
in, imagine you're a student, and you're doing

18
00:01:19,050 --> 00:01:21,540
a course project. What is that you're going to do.

19
00:01:21,540 --> 00:01:23,500
You're going to walk up to a work station and

20
00:01:23,500 --> 00:01:26,160
log in presenting your username and password to the

21
00:01:26,160 --> 00:01:30,420
workstation. And this username and password is going

22
00:01:30,420 --> 00:01:33,750
to be used as the basis for, the client

23
00:01:33,750 --> 00:01:38,250
server communication that lets you authenticate yourself to the

24
00:01:38,250 --> 00:01:42,450
server. Now once you authenticate yourself to the server

25
00:01:42,450 --> 00:01:46,720
what are you going to do, well you want to do a cost project, and for

26
00:01:46,720 --> 00:01:49,740
the cost project you probably need to download

27
00:01:49,740 --> 00:01:54,290
some files to the server. And that requires that

28
00:01:54,290 --> 00:01:58,210
Venus that is running on your workstation establish

29
00:01:58,210 --> 00:02:02,680
an RPC session with the server in order

30
00:02:02,680 --> 00:02:05,170
to fetch the files that you need to

31
00:02:05,170 --> 00:02:08,350
work on for your course project. That's the second

32
00:02:08,350 --> 00:02:11,640
class of client-server communication, establishing an

33
00:02:11,640 --> 00:02:15,090
RPC session. Now once you establish an

34
00:02:15,090 --> 00:02:22,700
RPC session, then you can request the files that you want as a user.

35
00:02:22,700 --> 00:02:28,690
As a student you want certain files to be accessed during this RPC session.

36
00:02:28,690 --> 00:02:34,070
You bring those files and once you brought in the file that you want,

37
00:02:34,070 --> 00:02:39,900
you can close the RPC session, work on your project locally on the workstation.

38
00:02:39,900 --> 00:02:45,260
And once you're done with completing whatever work you needed to do, you

39
00:02:45,260 --> 00:02:52,350
may establish a new RPC session to upload the results,of your work back into the

40
00:02:52,350 --> 00:02:59,060
file server. So the three classes of client-server interactions are logging in,

41
00:02:59,060 --> 00:03:02,410
which happens exactly once for the entire loin

42
00:03:02,410 --> 00:03:06,690
session, and RPC session establishment, which may happen several

43
00:03:06,690 --> 00:03:09,620
times during the time that you're logged into work

44
00:03:09,620 --> 00:03:12,080
station. Every time you decide oh, I want to

45
00:03:12,080 --> 00:03:14,980
fetch a new file. Oh, I want to store

46
00:03:14,980 --> 00:03:17,390
this file back into the server. The third set

47
00:03:17,390 --> 00:03:20,870
of interaction is the actual file system access during

48
00:03:20,870 --> 00:03:24,460
the session. Once this RPC session has been established

49
00:03:24,460 --> 00:03:28,910
by venus with vize, then you as the user,

50
00:03:28,910 --> 00:03:31,520
you may want to work on a particular file

51
00:03:31,520 --> 00:03:34,730
You may open a file. At that point, Venus

52
00:03:34,730 --> 00:03:38,480
will go, using this RPC session, and fetch the

53
00:03:38,480 --> 00:03:40,590
required file and cache it locally for you to

54
00:03:40,590 --> 00:03:43,910
use it, and later on, if you close the

55
00:03:43,910 --> 00:03:47,770
file, at that point, Venus will commit the changes

56
00:03:47,770 --> 00:03:49,740
that you made to the file to the central

57
00:03:49,740 --> 00:03:53,660
file server again. So that's the kind of file system operation

58
00:03:53,660 --> 00:03:58,650
that's the third class of client server interaction. And for both RPC

59
00:03:58,650 --> 00:04:04,330
session establishment, and for the actual access to the file system

60
00:04:04,330 --> 00:04:09,020
during an RPC session, we want to use ephemeral ID's and keys.
