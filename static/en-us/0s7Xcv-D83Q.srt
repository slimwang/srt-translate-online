1
00:00:00,025 --> 00:00:04,672
Finally, we initialize the algorithm by setting the starting nodes depth to 0

2
00:00:04,672 --> 00:00:07,248
and the initial frontier to that node's neighbor list.

3
00:00:07,248 --> 00:00:09,185
So let's recap the big idea here.

4
00:00:09,185 --> 00:00:11,647
The basic step is a sparse copy.

5
00:00:11,647 --> 00:00:16,322
We start with a frontier, we look up the adjacency lists for the vertices in that frontier,

6
00:00:16,322 --> 00:00:20,760
and then we copy them into a contiguous block to make the next frontier, and then repeat.

7
00:00:20,760 --> 00:00:24,533
The result is a really fast breadth first search, one that runs in linear work

8
00:00:24,533 --> 00:00:28,736
and achieves on the order of 3.3 billion vertices per second on a GPU.

9
00:00:28,736 --> 00:00:33,120
This is conservatively 4 times faster than a optimized CPU implementation.
