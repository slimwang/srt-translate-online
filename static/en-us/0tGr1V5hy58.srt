1
00:00:00,530 --> 00:00:01,780
I love smoothies.

2
00:00:01,780 --> 00:00:04,030
Let's look some code from
the SmoothieActivity.

3
00:00:05,100 --> 00:00:09,169
First, we create an integer variable
called numberOfSmoothiesTillPrize and

4
00:00:09,169 --> 00:00:11,060
we initialize that to a value of ten.

5
00:00:11,060 --> 00:00:13,930
Then we have an if-else statement.

6
00:00:13,930 --> 00:00:16,940
It spans from line two to line seven.

7
00:00:16,940 --> 00:00:20,710
If the numberOfSmoothiesTillPrize
is greater than nine,

8
00:00:20,710 --> 00:00:23,890
then do the code within the opening and
closing braces here.

9
00:00:23,890 --> 00:00:29,690
If this statement is not true, then do
the code in this else block right here.

10
00:00:29,690 --> 00:00:33,805
Since the numberOfSmoothiesTillPrize
has a value of ten, and

11
00:00:33,805 --> 00:00:38,450
ten is greater than nine,
then we fall into the if case here.

12
00:00:38,450 --> 00:00:40,260
We print out a log message that says,

13
00:00:40,260 --> 00:00:42,930
'Congratulations, you
get a free smoothie!".

14
00:00:42,930 --> 00:00:46,690
Then we update
the numberOfSmoothiesTillPrize variable

15
00:00:46,690 --> 00:00:48,740
to be this new value.

16
00:00:48,740 --> 00:00:53,010
This evaluates to ten minus ten,

17
00:00:53,010 --> 00:00:58,290
which is zero, so we essentially
update this to have zero smoothies.

18
00:00:58,290 --> 00:01:01,960
That makes sense, because once you've
reached ten smoothies, and you get

19
00:01:01,960 --> 00:01:06,660
a free one, your count goes back to zero
and and you have to buy ten more again.

20
00:01:06,660 --> 00:01:10,150
So this has a value of zero,
let's continue.

21
00:01:10,150 --> 00:01:13,388
Well, we've reached then end
of this if block of code,

22
00:01:13,388 --> 00:01:18,050
and we skip over the else lock
because we only do one or the other.

23
00:01:18,050 --> 00:01:20,380
And so we immediately go down here.

24
00:01:20,380 --> 00:01:24,424
In this last code statement, we add
a log message that says, you currently

25
00:01:24,424 --> 00:01:30,010
have blank out of 10 smoothies
needed for your next free smoothie.

26
00:01:30,010 --> 00:01:34,040
This blank here is actually a variable
called numberOfSmoothiesTillPrize.

27
00:01:34,040 --> 00:01:38,770
And this currently has a value of zero,
because we updated it here.

28
00:01:38,770 --> 00:01:42,126
So this message would say,
you currently have zero out or

29
00:01:42,126 --> 00:01:44,310
ten smoothies until your next free one.

30
00:01:44,310 --> 00:01:46,360
Therefore, the answer is C.

31
00:01:46,360 --> 00:01:49,770
By stepping through the code,
we got the message, Congratulations,

32
00:01:49,770 --> 00:01:51,340
you get a free smoothie!

33
00:01:51,340 --> 00:01:53,200
And we also saw the message,

34
00:01:53,200 --> 00:01:57,150
You currently have 0 out of 10
smoothies until your next one.

35
00:01:57,150 --> 00:02:00,700
Option A, is incorrect, because we
definitely did get a free smoothie.

36
00:02:00,700 --> 00:02:03,560
Option B, is incorrect because
we updated the number of

37
00:02:03,560 --> 00:02:05,690
smoothies count back to zero.

38
00:02:05,690 --> 00:02:09,258
Nice job trying to recode that
you didn't understand before and

39
00:02:09,258 --> 00:02:11,240
trying to pick the answer.

40
00:02:11,240 --> 00:02:13,890
Continue on to learn
exactly what is going on.
