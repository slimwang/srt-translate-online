1
00:00:00,340 --> 00:00:04,030
So continuous integration just means
that whenever you check in new code,

2
00:00:04,030 --> 00:00:05,800
it gets integrated, and built.

3
00:00:05,800 --> 00:00:09,090
But seriously we're not
going to do that by hand.

4
00:00:09,090 --> 00:00:12,220
Running the compiler and
test suite is a job for a program.

5
00:00:12,220 --> 00:00:15,820
And no surprise there are a lot
of pieces of software to do this.

6
00:00:15,820 --> 00:00:17,640
One of the most popular ones is Jenkins.

7
00:00:17,640 --> 00:00:19,800
It's an open source
project written in Java.

8
00:00:19,800 --> 00:00:21,380
You have to host it yourself.

9
00:00:21,380 --> 00:00:24,120
There are also several
hosted CI solutions.

10
00:00:24,120 --> 00:00:27,210
Like Travis CI and Circle CI and others.

11
00:00:27,210 --> 00:00:29,190
All of them work on the same principals.

12
00:00:29,190 --> 00:00:32,101
The CI system,
watches a code repo or branch.

13
00:00:32,101 --> 00:00:36,350
What it is looking for
is new commits written by developers.

14
00:00:36,350 --> 00:00:40,200
When a new commit occurs the CI
systems grabs the new commit and

15
00:00:40,200 --> 00:00:41,920
spawns a build process.

16
00:00:41,920 --> 00:00:46,830
The build process runs and builds things
such as compiled binaries or data files.

17
00:00:46,830 --> 00:00:48,920
Once the build is successfully complete,

18
00:00:48,920 --> 00:00:52,900
the CI system then spawns tests that
can be run on the build artifacts and

19
00:00:52,900 --> 00:00:55,390
then it reports the results
back to the developer.

20
00:00:55,390 --> 00:00:59,340
Now, since most of the hosted CI
solutions require subscription, for

21
00:00:59,340 --> 00:01:01,550
the next part of this course,
you will be setting up and

22
00:01:01,550 --> 00:01:02,940
using your own Jenkins server
