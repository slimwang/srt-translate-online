1
00:00:00,760 --> 00:00:01,425
Hey Chris.

2
00:00:01,425 --> 00:00:02,060
>> Hey.

3
00:00:02,060 --> 00:00:03,562
>> I got those burgers we
ordered from the restaurant.

4
00:00:03,562 --> 00:00:04,874
>> Awesome, they look great.

5
00:00:04,874 --> 00:00:06,187
>> Looks awesome.

6
00:00:06,187 --> 00:00:07,896
>> I'm going to dig in here.

7
00:00:07,896 --> 00:00:10,561
Wait a second, this doesn't
look like a Hawaiian burger.

8
00:00:10,561 --> 00:00:12,497
Where's my runny egg?

9
00:00:12,497 --> 00:00:15,008
>> Yeah and they kind of got
the wrong bun on mine, didn't they?

10
00:00:15,008 --> 00:00:16,900
>> Dude, but did you tell them
what kind of burgers we ordered?

11
00:00:16,900 --> 00:00:21,612
No, I just called and said,
I'd like two burgers to go, please.

12
00:00:21,612 --> 00:00:23,546
And they said it'd be
ready in 15 minutes.

13
00:00:23,546 --> 00:00:24,466
>> Dude, really?

14
00:00:24,466 --> 00:00:25,286
You gotta be more specific.

15
00:00:25,286 --> 00:00:26,467
>> I figured they'd just know.

16
00:00:26,467 --> 00:00:28,950
We get the same thing every time.

17
00:00:28,950 --> 00:00:32,845
Maybe I should've told them
who I was when I was ordering.

18
00:00:32,845 --> 00:00:33,842
>> Yeah, you think?

19
00:00:33,842 --> 00:00:38,785
Making an HTTP request is like
ordering a burger at a restaurant.

20
00:00:38,785 --> 00:00:42,037
If you don't specifically order the
cheeseburger medium rare with a fried

21
00:00:42,037 --> 00:00:44,576
egg, you might get a turkey
burger on sourdough instead.

22
00:00:44,576 --> 00:00:49,141
>> Yeah, HTTP requests likewise
specify explicitly what content you're

23
00:00:49,141 --> 00:00:52,710
looking for and
how you'd like it delivered.

24
00:00:52,710 --> 00:00:56,835
>> In this next lesson, we'll talk
about how HTTP requests are used to get

25
00:00:56,835 --> 00:00:59,333
the information that
we need over the web.

26
00:00:59,333 --> 00:01:02,730
>> HTTP requests are a basic part of
how devices get information from other

27
00:01:02,730 --> 00:01:04,530
computers on the Internet.

28
00:01:04,530 --> 00:01:09,050
The idea is you ask for some
information, you get a response, and

29
00:01:09,050 --> 00:01:12,060
then you extract the information
in a way that's useful.

30
00:01:12,060 --> 00:01:15,653
Every time you visit a page like
Google.com on your computer

31
00:01:15,653 --> 00:01:19,747
the web browser sends an HTP request
to the address that you entered.

32
00:01:19,747 --> 00:01:23,053
It gets received by the computers
on the Internet that Google owns,

33
00:01:23,053 --> 00:01:26,770
which process the request and create
a response to send back to your device.

34
00:01:26,770 --> 00:01:29,470
Then the browser on your device
interprets the response and

35
00:01:29,470 --> 00:01:33,144
updates the screen, which is the Google
home page that you probably recognize.

36
00:01:33,144 --> 00:01:37,204
Now check this out, I'm going to give
you a little sneak peak into some neat

37
00:01:37,204 --> 00:01:39,685
developer tools in
the Chrome web browser.

38
00:01:39,685 --> 00:01:41,890
Feel free to try this out on your own.

39
00:01:41,890 --> 00:01:47,841
To access Chrome's developer tools,
I'm going to activate contacts menu.

40
00:01:47,841 --> 00:01:52,239
That's a right-click usually,
chose Inspect.

41
00:01:52,239 --> 00:01:55,377
Now you can see Chrome developer tools
has a lot of information about each page

42
00:01:55,377 --> 00:01:56,251
and how it's drawn.

43
00:01:56,251 --> 00:02:00,630
It's got HTML CSS and
this stuff here, the Elements tab.

44
00:02:00,630 --> 00:02:02,512
What we want is the Network tab,

45
00:02:02,512 --> 00:02:06,433
the Network tab is going to show us
what loaded to create the webpage.

46
00:02:06,433 --> 00:02:09,110
There is a lot of
different resources and

47
00:02:09,110 --> 00:02:12,419
we'll see HTML, CSS,
JavaScript and images and

48
00:02:12,419 --> 00:02:16,936
that sort of thing all getting loaded
into the page at the same time.

49
00:02:16,936 --> 00:02:19,642
So let me do a refresh on this page, and

50
00:02:19,642 --> 00:02:23,290
you can see all this files
just loaded themselves.

51
00:02:23,290 --> 00:02:27,209
You can even see the timeline here of
how long it took for each one to load.

52
00:02:27,209 --> 00:02:32,029
If I scroll up you can see here's
the main google.com resource that we got

53
00:02:32,029 --> 00:02:37,336
with use to get method, to retrieve the
page and the status response was 200.

54
00:02:37,336 --> 00:02:42,526
And it even tells us the size and
how long it took to retrieve the page.

55
00:02:42,526 --> 00:02:46,926
And if I resize this window a bit so
I can see the content down here,

56
00:02:46,926 --> 00:02:51,886
I can even see the request headers that
made up the request that came from my

57
00:02:51,886 --> 00:02:55,390
device and
was sent to the Google servers.

58
00:02:55,390 --> 00:02:59,239
Now the same communication and transfer
happens when you request data on

59
00:02:59,239 --> 00:03:02,900
a mobile device whether it's the web
browser app viewing a website or

60
00:03:02,900 --> 00:03:04,370
any other app using an API.

61
00:03:04,370 --> 00:03:09,032
Apps can fetch data from some
remote source across the Internet,

62
00:03:09,032 --> 00:03:11,669
such as computers owned by the USGS.

63
00:03:11,669 --> 00:03:15,123
Let's explore HTTP in
a little more detail.

64
00:03:15,123 --> 00:03:18,542
When we make an HTTP request,
we're basically including very specific

65
00:03:18,542 --> 00:03:22,960
directions on what information we want
from another computer on a network.

66
00:03:22,960 --> 00:03:26,604
In the request we include
a uniform resource olcator or

67
00:03:26,604 --> 00:03:31,128
URL which is the address or location
of the data source that we want.

68
00:03:31,128 --> 00:03:35,265
The URL tells us that we need to
communicate with computers at USGS as

69
00:03:35,265 --> 00:03:39,122
opposed to the computers at Google or
any other organization.

70
00:03:39,122 --> 00:03:41,750
A URL should look
pretty familiar to you.

71
00:03:41,750 --> 00:03:44,890
It's a string of characters you type
into your web browser whenever you want

72
00:03:44,890 --> 00:03:48,470
to visit a web page like google.com or
udacity.com.

73
00:03:48,470 --> 00:03:50,860
Let's take a look at this example URL.

74
00:03:50,860 --> 00:03:54,280
The first part is called the protocol or
scheme.

75
00:03:54,280 --> 00:03:58,030
This is usually going to be http or
https.

76
00:03:58,030 --> 00:04:01,199
The next part is called the host,
domain, or authority.

77
00:04:01,199 --> 00:04:05,152
These all pretty much mean the same
thing, the main identity of the web

78
00:04:05,152 --> 00:04:09,060
resource you're connecting to
like udacity.com or google.com.

79
00:04:09,060 --> 00:04:11,270
The next part is the resource path.

80
00:04:11,270 --> 00:04:14,980
This is analogous to a file or
folder structure on your computer, or

81
00:04:14,980 --> 00:04:18,940
some other hierarchical
organization of information.

82
00:04:18,940 --> 00:04:21,570
The final part is called the query.

83
00:04:21,570 --> 00:04:24,576
The begin of the query is
indicated by the question mark.

84
00:04:24,576 --> 00:04:28,935
The query is an optional way to include
information about things you're looking

85
00:04:28,935 --> 00:04:31,830
for like search terms or
categories of information.
