1
00:00:00,230 --> 00:00:04,530
Now let's look into the details of the
Diffie-Hellman key exchange algorithm.

2
00:00:04,530 --> 00:00:08,928
There are two publicly known numbers,
a prime number Q and

3
00:00:08,928 --> 00:00:12,445
an integer alpha that is
a primitive root of Q.

4
00:00:12,445 --> 00:00:13,872
Now suppose users A and

5
00:00:13,872 --> 00:00:19,530
B wish to exchange a key using the
Diffie-Hellman key exchange algorithm.

6
00:00:19,530 --> 00:00:24,150
User A selects a random integer
XA that's less than q, and

7
00:00:24,150 --> 00:00:30,460
computes you that's raised alpha
to the power of XA and then mod q.

8
00:00:30,460 --> 00:00:36,200
Likewise, User B independently selects
a random integer XB that's less than q,

9
00:00:36,200 --> 00:00:39,790
and then computes YB, that is,

10
00:00:39,790 --> 00:00:43,890
alpha raised to the power of XB and
then mod q.

11
00:00:43,890 --> 00:00:46,840
Each side keeps the X value private and

12
00:00:46,840 --> 00:00:50,100
then sends the Y value
to the other side.

13
00:00:50,100 --> 00:00:54,930
Because the Y value is transmitted,
in effect it is public.

14
00:00:54,930 --> 00:00:59,469
User A upon receiving YB
would compute a key as YB

15
00:00:59,469 --> 00:01:02,427
raised to the power of XA mod q.

16
00:01:02,427 --> 00:01:07,314
This is actually the same
as alpha raised to power of

17
00:01:07,314 --> 00:01:09,920
XB times XA then mod q.

18
00:01:09,920 --> 00:01:14,954
Likewise, User B upon
receiving you computes

19
00:01:14,954 --> 00:01:19,986
a key that is you raised
to the power of XB mod q,

20
00:01:19,986 --> 00:01:27,151
which is the same as alpha raised
to the power of XA times XB mod q.

21
00:01:27,151 --> 00:01:32,580
That is, both sides have,
in effect, computed the same key.

22
00:01:32,580 --> 00:01:37,320
In other words, now User A and
User B have a shared secure key.

23
00:01:37,320 --> 00:01:41,040
Furthermore, XA and XB are private, and

24
00:01:41,040 --> 00:01:46,456
an adversary such as User C only
knows Q and alpha, which are public,

25
00:01:46,456 --> 00:01:52,040
and you and YB, which is transmitted,
and they are also public.

26
00:01:52,040 --> 00:01:55,290
If the attacker wants to
compute the shared key,

27
00:01:55,290 --> 00:01:58,250
he must first compute the X value.

28
00:01:58,250 --> 00:01:59,120
For example,

29
00:01:59,120 --> 00:02:05,840
the attacker must compute the discrete
log of YB in order to get XB.

30
00:02:05,840 --> 00:02:08,949
If the attacker can compute
a discrete log and obtain XB,

31
00:02:08,949 --> 00:02:14,610
he can then compute the shared
secret key by using the you value.

32
00:02:14,610 --> 00:02:19,230
The security of the Diffie-Hellman key
exchange algorithm lies in the fact that

33
00:02:19,230 --> 00:02:25,010
while it's relatively easy to calculate
the exponents modulo a prime,

34
00:02:25,010 --> 00:02:28,110
it is very difficult to
compute a discrete logarithm.

35
00:02:28,110 --> 00:02:33,290
For large primes such as Q
at at least 300 digit long,

36
00:02:33,290 --> 00:02:35,360
this task is considered infeasible.
