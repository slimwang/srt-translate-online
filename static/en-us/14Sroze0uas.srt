1
00:00:00,000 --> 00:00:04,000
I want to show you an example of the kinds of things that go wrong

2
00:00:04,000 --> 00:00:07,000
when people attempt to use one-time pads in practice.

3
00:00:07,000 --> 00:00:12,000
This is a story that is very important to the history of computing

4
00:00:12,000 --> 00:00:14,000
as well as the history of the world.

5
00:00:14,000 --> 00:00:18,000
It's how the Allies at Bletchley Park were able to break the Lorenz cipher,

6
00:00:18,000 --> 00:00:24,000
which was a cipher used by the Nazis to communicate between the capitals of the cities of Europe.

7
00:00:24,000 --> 00:00:26,000
[Vernam's "One-Time" Pad (1919)]

8
00:00:26,000 --> 00:00:32,000
The story goes back at least to the 1919 patent that Gilbert Vernam,

9
00:00:32,000 --> 00:00:36,000
who was an engineering working at Bell Labs, got on a one-time pad system.

10
00:00:36,000 --> 00:00:38,000
It shouldn't really be called a one-time pad.

11
00:00:38,000 --> 00:00:40,000
It was a re-use pad system.

12
00:00:40,000 --> 00:00:44,000
The idea behind this is somewhat clear from the patent,

13
00:00:44,000 --> 00:00:47,000
especially if we rotate it so we can see it more clearly.

14
00:00:47,000 --> 00:00:50,000
One thing you can see is that there are five wires going into it.

15
00:00:50,000 --> 00:00:56,000
This is the output from reading a tape that encodes the message.

16
00:00:56,000 --> 00:00:59,000
The key was also on a paper tape.

17
00:00:59,000 --> 00:01:03,000
The encoding used just five bits. This was the Baudot code.

18
00:01:03,000 --> 00:01:07,000
With five bits we can encode 32 different symbols.

19
00:01:07,000 --> 00:01:11,000
That's enough for the alphabet and a few punctuation marks.

20
00:01:11,000 --> 00:01:14,000
You can see the letters were encoded.

21
00:01:14,000 --> 00:01:18,000
There's the strip down the middle that was used to align the tape.

22
00:01:18,000 --> 00:01:21,000
There are five bits to encode each letter.

23
00:01:21,000 --> 00:01:24,000
Managing paper tapes like this was difficult,

24
00:01:24,000 --> 00:01:27,000
and the keys needed to be distributed on paper tapes.

25
00:01:27,000 --> 00:01:30,000
If the keys were constructed in a perfectly random way

26
00:01:30,000 --> 00:01:33,000
and you had enough key that you never needed to reuse it,

27
00:01:33,000 --> 00:01:38,000
this would actually be a perfect cipher. This would be a perfectly good one-time pad.

28
00:01:38,000 --> 00:01:42,000
The problem is distributing large paper tapes is pretty difficult,

29
00:01:42,000 --> 00:01:45,000
especially if you're trying to do this in war time.

30
00:01:45,000 --> 00:01:50,000
The machine that was built based around the same ideas, the Lorenz Cipher Machine,

31
00:01:50,000 --> 00:01:56,000
where instead of having a paper tape with the key you had a machine that would

32
00:01:56,000 --> 00:02:00,000
attempt to produce a good sequence of key bits.

33
00:02:00,000 --> 00:02:04,000
Of course, it's impossible for a machine to produce a perfectly random sequence.

34
00:02:04,000 --> 00:02:12,000
The structure of the machine determines properties of the sequence that's produced.

35
00:02:12,000 --> 00:02:16,000
The machine would generate a key sequence based on its configuration.

36
00:02:16,000 --> 00:02:20,000
That configuration is the initial settings of all the rotors and other parameters

37
00:02:20,000 --> 00:02:22,000
that we'll talk about soon.

38
00:02:22,000 --> 00:02:26,000
If there are two machines that start in the same configuration,

39
00:02:26,000 --> 00:02:29,000
say one in Berlin and one in Paris,

40
00:02:29,000 --> 00:02:31,000
then they produce the same key.

41
00:02:31,000 --> 00:02:37,000
Their encryption is just the message XOR'd with the key that produces the ciphertext

42
00:02:37,000 --> 00:02:44,000
that's sent over radio wireless, received at the other end,

43
00:02:44,000 --> 00:02:47,000
which puts it into a machine starting with the same configuration.

44
00:02:47,000 --> 00:02:53,000
That means that ciphertext XOR'd with the key generated by this machine,

45
00:02:53,000 --> 00:02:57,000
starting from the same configuration will decrypt to receive the message.

46
00:02:57,000 --> 00:03:01,000
The machine was designed to produce a large number of possible sequences.

47
00:03:01,000 --> 00:03:05,000
There are a lot of complex operations, which we'll talk about a little next,

48
00:03:05,000 --> 00:03:09,000
but the key would not repeat for 10^19 letters.

49
00:03:09,000 --> 00:03:13,000
Given that this number was larger than the amount of text written by humans,

50
00:03:13,000 --> 00:03:18,000
at least at the time, this lead the Nazis using it to believe that it provided

51
00:03:18,000 --> 00:03:20,000
the highest security they needed.

52
00:03:20,000 --> 00:03:25,000
They also were confident that because these machines operated in capitals--

53
00:03:25,000 --> 00:03:28,000
they weren't like the enigma machines, which operated in the field--

54
00:03:28,000 --> 00:03:31,000
that they never lost one of these machines.

55
00:03:31,000 --> 00:03:34,000
The Allies never actually had access to the actual machine

56
00:03:34,000 --> 99:59:59,999
to try to figure out how it worked.
