1
00:00:00,100 --> 00:00:04,260
Recall we discussed that public key
encryption is typically used to

2
00:00:04,260 --> 00:00:10,470
establish a symmetric key for encrypting
messages for say between Alice and Bob.

3
00:00:10,470 --> 00:00:14,050
That is, before Alice and
Bob can communicate securely

4
00:00:14,050 --> 00:00:18,950
they would use public key's encryption
to exchange a sure and secret key.

5
00:00:18,950 --> 00:00:22,820
Of course, Alice and
Bob can first establish this key

6
00:00:22,820 --> 00:00:27,350
before Alice can send Bob the first
message encrypted using this key.

7
00:00:27,350 --> 00:00:30,900
But with Public Key Encryption we can
do better, meaning that we can do

8
00:00:30,900 --> 00:00:34,600
it in a more efficient way with so
called digital envelopes.

9
00:00:34,600 --> 00:00:40,500
Alice can send Bob a message encrypted
using a share key that she just created,

10
00:00:40,500 --> 00:00:45,340
and this share secret key itself is
encrypted using Bob's public key, so

11
00:00:45,340 --> 00:00:49,710
that only Bob can decrypt and
extract the share secret key.

12
00:00:49,710 --> 00:00:52,400
This is similar to the situation where

13
00:00:52,400 --> 00:00:55,910
only the intended recipient
can open the sealed envelope.

14
00:00:55,910 --> 00:00:57,050
To illustrate,

15
00:00:57,050 --> 00:01:01,480
Alice first creates a symmetric key
that she wants to share with Bob.

16
00:01:01,480 --> 00:01:04,019
She can encrypt a message
using this share key,

17
00:01:04,019 --> 00:01:08,480
then she also uses Bob's public
key to encrypt this share key.

18
00:01:08,480 --> 00:01:10,980
And then she can put
the encrypted message and

19
00:01:10,980 --> 00:01:12,780
the encrypted key in envelope.

20
00:01:12,780 --> 00:01:17,180
Then she can put the encrypted message
and the encrypted key together and

21
00:01:17,180 --> 00:01:18,810
send them to Bob.

22
00:01:18,810 --> 00:01:20,390
On the receiving end,

23
00:01:20,390 --> 00:01:25,270
Bob can use his private key to
decrypt the encrypted share key.

24
00:01:25,270 --> 00:01:28,990
Once he gets a shared key, he can now
decrypt the encrypted message and

25
00:01:28,990 --> 00:01:29,970
get a plain text message.
