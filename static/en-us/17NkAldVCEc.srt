1
00:00:00,080 --> 00:00:04,900
So we've been talking the trusted
computing base, what it has to do.

2
00:00:04,900 --> 00:00:09,270
The fact that it has to be small, but
it has to be sort of the kernel or

3
00:00:09,270 --> 00:00:11,430
be at the center of everything,
isn't it.

4
00:00:11,430 --> 00:00:15,340
We talked about,
it should do complete mediation.

5
00:00:15,340 --> 00:00:19,650
You have to go through it to get
to physical hardware resources.

6
00:00:19,650 --> 00:00:22,700
Or, we shouldn't be able to bypass it.

7
00:00:22,700 --> 00:00:25,830
So that means this is something
you always go through and

8
00:00:25,830 --> 00:00:28,810
this is at the hardware core
of any system that we have.

9
00:00:28,810 --> 00:00:32,700
So, the Kernel is that core,
the inner-most.

10
00:00:32,700 --> 00:00:35,930
The most trusted, hopefully
something that you can trust for

11
00:00:35,930 --> 00:00:36,990
things to be right.

12
00:00:36,990 --> 00:00:42,460
And this kernel is where the security
mechanisms have to be enforced.

13
00:00:42,460 --> 00:00:45,550
So the security kernel is sort
of at the center or the core.

14
00:00:45,550 --> 00:00:48,690
It has to enforce anything
to do with security.

15
00:00:48,690 --> 00:00:51,820
The fact that all it's at the center and
small.

16
00:00:51,820 --> 00:00:54,650
It's just a kernel, and
it's not everything,

17
00:00:54,650 --> 00:00:57,820
an entire blob, hopefully that
helps with good isolation.

18
00:00:57,820 --> 00:01:02,890
Small size is good for verifiability so
kernel design basically says look for

19
00:01:02,890 --> 00:01:07,090
the smallest possible system where
you can put your security mechanisms.

20
00:01:07,090 --> 00:01:10,480
The reference monitor that
controls access to objects

21
00:01:10,480 --> 00:01:12,430
where all references are monitored.

22
00:01:12,430 --> 00:01:16,890
Enforcement all security mechanisms
access to protected objects or

23
00:01:16,890 --> 00:01:18,220
resources, one of those.

24
00:01:18,220 --> 00:01:20,960
The reference monitor function
of course has to be wanted.

25
00:01:20,960 --> 00:01:23,510
The security kernel has to address and

26
00:01:23,510 --> 00:01:25,970
the security kernel
sends good isolation.

27
00:01:25,970 --> 00:01:29,840
Actually, it becomes the core
of the trusted computing base or

28
00:01:29,840 --> 00:01:32,470
the trusted computing base,
so it has to be tamper proof.

29
00:01:32,470 --> 00:01:35,240
You shouldn't be able to bypass it,
always gets in the way,

30
00:01:35,240 --> 00:01:36,980
it's always invoked.

31
00:01:36,980 --> 00:01:39,250
That's our complete
mediation function or

32
00:01:39,250 --> 00:01:43,570
reference monitor that has
to check every reference.

33
00:01:43,570 --> 00:01:48,680
And going back to the small size we
had before, we want, the small size

34
00:01:48,680 --> 00:01:53,060
is going to help us be able to analyze
it and understand it and make sure that

35
00:01:53,060 --> 00:01:57,820
it does enforce or implement
the security mechanisms that we need.

36
00:01:57,820 --> 00:01:59,690
And those implementations are correct.

37
00:01:59,690 --> 00:02:03,760
So the idea here is that trusted
computing base, one approach is

38
00:02:03,760 --> 00:02:07,710
the security kernel approach where you
bring the security relevant functions

39
00:02:07,710 --> 00:02:11,220
together and that goes at the core of
the system that you're trying to build.
