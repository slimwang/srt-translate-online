1
00:00:00,430 --> 00:00:02,070
Here's your next challenge app.

2
00:00:02,070 --> 00:00:05,120
At the beginning of the lesson we
created a make your own adventure app

3
00:00:05,120 --> 00:00:06,780
using static segues.

4
00:00:06,780 --> 00:00:10,660
Now we're going to expand on that
app using data driven stories.

5
00:00:10,660 --> 00:00:13,790
Here's the completed version of data
driven make your own adventure.

6
00:00:13,790 --> 00:00:17,110
Here's the tiger story from
the beginning of the lesson.

7
00:00:17,110 --> 00:00:20,660
Just like before we navigate through the
different nodes by clicking on different

8
00:00:20,660 --> 00:00:21,290
prompts.

9
00:00:22,710 --> 00:00:24,990
Most of the story nodes
have two prompts.

10
00:00:24,990 --> 00:00:27,490
But of course the nodes that
ends the story have none.

11
00:00:29,010 --> 00:00:30,610
In a second will look at the code for

12
00:00:30,610 --> 00:00:33,540
the data model that
drives these stories.

13
00:00:33,540 --> 00:00:35,650
Each node in the story has a struct.

14
00:00:35,650 --> 00:00:37,770
That describes the nodes message.

15
00:00:37,770 --> 00:00:40,850
And the prompts to move
on to other story nodes.

16
00:00:40,850 --> 00:00:43,780
Right now, you're looking at
a completed version of the app.

17
00:00:43,780 --> 00:00:45,910
But in the branch for step 5.5.

18
00:00:45,910 --> 00:00:48,830
The table view delegate and
data source methods for

19
00:00:48,830 --> 00:00:51,770
the story node view controller
have been left blank.

20
00:00:51,770 --> 00:00:55,160
When we run this incomplete version,
notice that there are no prompts.

21
00:00:55,160 --> 00:00:59,460
Your task is to modify the story no View
Controller so this table is working.

22
00:00:59,460 --> 00:01:02,160
Let's take a closer look
at the data structure.

23
00:01:02,160 --> 00:01:06,070
The app has four stories stored as
serialized versions of arrays in

24
00:01:06,070 --> 00:01:09,200
dictionaries here in
the supporting files group.

25
00:01:09,200 --> 00:01:10,880
You'll learn more about
how to store arrays and

26
00:01:10,880 --> 00:01:13,670
dictionaries in the iOS
persistence course.

27
00:01:13,670 --> 00:01:16,150
So for
now let's focus on how stored data

28
00:01:16,150 --> 00:01:20,240
is parsed into these model
objects that represent stories.

29
00:01:20,240 --> 00:01:23,670
Here you can see that there's
a class to represent each adventure.

30
00:01:23,670 --> 00:01:26,170
It has a credit's property for
the author's name and

31
00:01:26,170 --> 00:01:29,710
the start node property which
contains the first line of the story.

32
00:01:29,710 --> 00:01:33,700
Initially, these adventures get shown
by the route table view controller.

33
00:01:33,700 --> 00:01:38,100
Here's the table view it governs and
when the user selects a story,

34
00:01:38,100 --> 00:01:41,910
the story node View Controller gets
pushed on to the navigation stack.

35
00:01:41,910 --> 00:01:43,740
Let's take a look at that code.

36
00:01:43,740 --> 00:01:46,490
So here we are in the route
table view controller and

37
00:01:46,490 --> 00:01:51,010
we want to scroll down to
the method didSelectRowAtIndexPath.

38
00:01:51,010 --> 00:01:54,440
So here's what happens when
a user chooses a story.

39
00:01:54,440 --> 00:01:57,060
First you get the adventure object.

40
00:01:57,060 --> 00:02:00,720
Then you grab the first
node in that adventure.

41
00:02:00,720 --> 00:02:05,060
You instantiate the story node View
Controller from the storyboard object.

42
00:02:05,060 --> 00:02:07,990
Then you set the story node that's
going to start that adventure, and

43
00:02:07,990 --> 00:02:10,788
get loaded into the story
node view controller.

44
00:02:10,788 --> 00:02:14,440
And you push the story node view
controller on to the navigation stack.

45
00:02:14,440 --> 00:02:18,170
The story node view controller
shows one story note at a time.

46
00:02:18,170 --> 00:02:20,920
Let's take a look at the struct for
that story node.

47
00:02:20,920 --> 00:02:24,560
Here you can see the message property
that provides the text for the story.

48
00:02:24,560 --> 00:02:28,740
And then there are three different
methods related to the story prompts.

49
00:02:28,740 --> 00:02:33,510
The prompt count which tells you how
many rows that prompt table should have.

50
00:02:33,510 --> 00:02:36,740
The prompt text for a given index and

51
00:02:36,740 --> 00:02:39,920
then the story node objects to
that a given prompt leads to.

52
00:02:39,920 --> 00:02:43,380
You can see that now that we
have an underlying data model,

53
00:02:43,380 --> 00:02:47,180
we don't need all those view controllers
like we had before, we just need this

54
00:02:47,180 --> 00:02:50,920
one story node view controller and
we populate it with different data.

55
00:02:50,920 --> 00:02:54,750
Your challenge is to write the code
that will populate the table of Prompts.

56
00:02:54,750 --> 00:02:57,400
And then perform a push segueway
to the next story node when

57
00:02:57,400 --> 00:02:59,030
a prompt is selected.

58
00:02:59,030 --> 00:03:01,450
If you open up the story
node View Controller, and

59
00:03:01,450 --> 00:03:05,010
you scroll down to the table view
delegate and data source methods,

60
00:03:05,010 --> 00:03:08,880
you'll notice that they're either empty,
or they just have placeholder data.

61
00:03:08,880 --> 00:03:11,900
Your challenge is to fill these
methods in and get the app working.
