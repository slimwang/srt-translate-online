1
00:00:00,310 --> 00:00:04,810
The answer is that L is not
recognizable, but L complement is.

2
00:00:04,810 --> 00:00:07,880
Note that there are some Turing
machines that accept nothing

3
00:00:07,880 --> 00:00:09,130
that we can tell accept nothing.

4
00:00:10,170 --> 00:00:14,089
We can examine the code, for instance
of the Turing machine that immediately

5
00:00:14,089 --> 00:00:16,570
transitions to the reject
state no matter what.

6
00:00:16,570 --> 00:00:20,220
And we can see that such a Turing
machine never accepts anything.

7
00:00:20,220 --> 00:00:22,400
But it's not clear that we
can do that in general.

8
00:00:22,400 --> 00:00:25,420
On the other hand, it turns out
that we can recognize L complement,

9
00:00:25,420 --> 00:00:27,290
the set of Turing machines
that accept something.

10
00:00:28,290 --> 00:00:32,950
We just run the Turing machine on all
strings and see if accepts any of them.

11
00:00:32,950 --> 00:00:36,480
Now, if you answered no here because
you thought of this possibility, but

12
00:00:36,480 --> 00:00:39,920
were worried that some of these
computations might not halt and

13
00:00:39,920 --> 00:00:43,010
that that would ruin it,
then actually good for you.

14
00:00:43,010 --> 00:00:45,110
It shows that you're thinking carefully.

15
00:00:45,110 --> 00:00:49,680
This is a real problem, because we can't
just run M on the empty string, and

16
00:00:49,680 --> 00:00:52,840
then run it on the zero string,
and so forth.

17
00:00:52,840 --> 00:00:55,460
The computation on the empty
string might never halt.

18
00:00:55,460 --> 00:00:58,870
The solution is essentially to run
all these computations in parallel.

19
00:00:59,890 --> 00:01:01,440
Note that this is challenging, but

20
00:01:01,440 --> 00:01:03,660
it can be done through
a strategy called dovetailing.
