1
00:00:00,342 --> 00:00:06,230
Using D3, we can create, remove and manipulate DOM nodes programmatically.

2
00:00:06,230 --> 00:00:11,830
Lets try to change the background color of the navbar in the audacity player.

3
00:00:11,830 --> 00:00:15,660
First, we need to find some identifier for the navbar.

4
00:00:15,660 --> 00:00:20,070
A shortcut I like to use to finding which DOM element is represented by

5
00:00:20,070 --> 00:00:23,940
a visual element is to right click and select inspect element.

6
00:00:23,940 --> 00:00:28,010
This is going to bring me to the navbar or a portion of the navbar.

7
00:00:28,010 --> 00:00:32,189
But if you notice here, the selection doesn't extend the width of the window,

8
00:00:32,189 --> 00:00:36,230
which leads me to believe that we've actually selected a child of

9
00:00:36,230 --> 00:00:38,040
the navbar that we're looking for.

10
00:00:38,040 --> 00:00:42,200
Going up, we see a header tag, and when we hover,

11
00:00:42,200 --> 00:00:46,900
spans the full width of the window and has classes defined on it.

12
00:00:46,900 --> 00:00:52,250
Which might mean that we can select it by using the D3 select function,

13
00:00:52,250 --> 00:00:54,770
since the header is actually a header tag,

14
00:00:54,770 --> 00:00:58,720
we can be more specific in our CSS query and look for a header tag

15
00:00:58,720 --> 00:01:04,450
with class navbar-static-top, which returned is another one of these D3 arrays.

16
00:01:04,450 --> 00:01:09,084
If we open it up, we see its actually the header element we want and

17
00:01:09,084 --> 00:01:13,822
again hovering over it in the console highlights it in the window.

18
00:01:13,822 --> 00:01:16,002
In order to manipulate the selection,

19
00:01:16,002 --> 00:01:18,990
D3 defines a set of transformation functions.

20
00:01:18,990 --> 00:01:25,040
To change any of the CSS styling, we call the .style method on the D3 selection.

21
00:01:25,040 --> 00:01:28,700
The first argument to style being the CSS property we'd like to

22
00:01:28,700 --> 00:01:30,500
change or return.

23
00:01:30,500 --> 00:01:33,450
If we don't pass a second argument to .style and

24
00:01:33,450 --> 00:01:36,870
many of the other D3 transformation functions work the same way.

25
00:01:36,870 --> 00:01:40,370
This actually accesses the appropriate style,

26
00:01:40,370 --> 00:01:43,820
in this case background color, and returns it to us.

27
00:01:43,820 --> 00:01:46,490
As you can see here, the D3 syntax says,

28
00:01:46,490 --> 00:01:51,200
using D3 select a header with class navbar-static-top and

29
00:01:51,200 --> 00:01:56,280
return to me the background color styling defined on the header element.

30
00:01:56,280 --> 00:02:00,370
As you can see here, returns a string of RGB values.

31
00:02:00,370 --> 00:02:02,570
If we would actually like to manipulate and

32
00:02:02,570 --> 00:02:07,040
change the background color, we simply need to pass a second argument which will

33
00:02:07,040 --> 00:02:09,419
replace the current background color.

34
00:02:09,419 --> 00:02:13,340
In this case, as a second argument, I'm simply passing a string,

35
00:02:13,340 --> 00:02:16,090
corresponding to the color I would like to change the background to.

36
00:02:16,090 --> 00:02:18,140
In this case, green.

37
00:02:18,140 --> 00:02:20,670
Two things to note of what just happened.

38
00:02:20,670 --> 00:02:23,880
One, the bar did indeed change to green.

39
00:02:23,880 --> 00:02:28,530
But another strange thing is that the style method actually returned to

40
00:02:28,530 --> 00:02:33,140
me another array that's the same object as returned from select,

41
00:02:33,140 --> 00:02:34,740
corresponding to the navbar.

42
00:02:34,740 --> 00:02:38,750
This is what I mean when I say D3's chainable API.

43
00:02:38,750 --> 00:02:43,510
Most methods defined in D3 return whatever object they were called on.

44
00:02:43,510 --> 00:02:48,925
In this case, D3 select finds and returns a D3 selection object.

45
00:02:48,925 --> 00:02:54,060
.style mutates that object and then returns the mutated object, and so forth.

46
00:02:54,060 --> 00:02:57,610
So we can call a somewhat arbitrary number of functions.

47
00:02:57,610 --> 00:03:01,080
Chaining one after each other, and D3 knows how to handle it,

48
00:03:01,080 --> 00:03:04,640
changing at each step of the chain the object being passed through.
