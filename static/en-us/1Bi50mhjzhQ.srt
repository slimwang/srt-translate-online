1
00:00:00,290 --> 00:00:02,960
Let's look at the solution
to our Raid4 quiz.

2
00:00:04,200 --> 00:00:06,790
We have a Raid4 array with five disks.

3
00:00:06,790 --> 00:00:09,980
And one disk has 200 GB in capacity.

4
00:00:09,980 --> 00:00:15,340
The data capacity of the array is
the data capacity of all but one disk.

5
00:00:15,340 --> 00:00:18,970
Because we sacrifice
a single disk to parity.

6
00:00:18,970 --> 00:00:24,440
So among the five disks one is
parity the other ones contain data.

7
00:00:24,440 --> 00:00:29,680
So we have four times this
much which is 800 gigabytes.

8
00:00:29,680 --> 00:00:32,110
The throughput of the array for

9
00:00:32,110 --> 00:00:36,570
reads is going to be the throughput
of the four data disks.

10
00:00:36,570 --> 00:00:41,050
So we have 40 megabytes per
second throughput for reads.

11
00:00:41,050 --> 00:00:45,980
But for writes, it's going to be half
a throughput of a single disk and that's

12
00:00:45,980 --> 00:00:50,150
because the parity disk need to be
both read and written for every write.

13
00:00:51,200 --> 00:00:55,910
So, we get five megabytes
per second here.

14
00:00:55,910 --> 00:00:58,860
So now we need to figure out
what happens during one second.

15
00:00:58,860 --> 00:01:04,430
Well, this throughput is eight
times the throughput of the writes.

16
00:01:04,430 --> 00:01:08,260
Which means in every
given second one-ninth

17
00:01:08,260 --> 00:01:11,500
of a second will be spent on reads.

18
00:01:11,500 --> 00:01:15,560
And eight-ninths of a second
will be spent on writes.

19
00:01:15,560 --> 00:01:20,380
That way we spent eight times as
much time on writes as we do for

20
00:01:20,380 --> 00:01:24,370
reads, which allows us to do
the same number of reads and writes.

21
00:01:24,370 --> 00:01:29,585
So now the overall throughput
will be what we can read in

22
00:01:29,585 --> 00:01:35,280
one-ninth of a second plus what we can
write in eight-ninths of a second.

23
00:01:35,280 --> 00:01:39,530
And that ends up being
80 over 9 megabytes.

24
00:01:39,530 --> 00:01:42,240
So this is what we can do in a second.

25
00:01:42,240 --> 00:01:47,930
So our average throughput ends up
being 8.89 megabytes per second.

26
00:01:47,930 --> 00:01:53,670
Again, just like in our Raid1 quiz, we
cannot simply average the throughput for

27
00:01:53,670 --> 00:01:55,920
reads and the throughputs for writes.

28
00:01:55,920 --> 00:02:00,190
We would get something more than 20
megabytes a second if we do that.

29
00:02:00,190 --> 00:02:05,010
But that would do a lot more reads than
writes, because it assumes that half

30
00:02:05,010 --> 00:02:10,000
a second we are reading, and
we managed to read 20 megabytes, and

31
00:02:10,000 --> 00:02:14,760
then half a second we are writing,
and managed to write 2.5 megabytes.

32
00:02:14,760 --> 00:02:17,770
As you can see, the read to
write ratio is not 50/50 here.

33
00:02:19,020 --> 00:02:24,310
So that is, again, why, we get this, and
not just a simple average of these two.

34
00:02:24,310 --> 00:02:27,160
So the final question
here is what's the MTTF?

35
00:02:28,320 --> 00:02:34,040
We know that the MTTF of RAID4 is
equal to the MTTF of 1 disk squared

36
00:02:34,040 --> 00:02:42,570
divided by N, times N-1 times the time
it takes us to replace a disk.

37
00:02:42,570 --> 00:02:46,730
Our N in this case is 5 so
we get 5 x 4 times the s.

38
00:02:46,730 --> 00:02:52,190
And in this expression
again this is the time

39
00:02:53,390 --> 00:02:58,280
that we get to work with the full RAID4
array until we have a failed disk.

40
00:02:58,280 --> 00:03:01,790
And this is how many times we
survived the repair without

41
00:03:01,790 --> 00:03:03,750
the second disk failing.

42
00:03:03,750 --> 00:03:09,680
The overall number is
20,833,333.33 hours,

43
00:03:09,680 --> 00:03:14,500
which, again, much better than this.

44
00:03:14,500 --> 00:03:18,140
And we already said that this
is about 11 to 12 years.

45
00:03:18,140 --> 00:03:19,650
This is more then 2,000 years.

46
00:03:20,900 --> 00:03:25,716
Remember that our RAID1 had 20,000
years, so this is significantly worse

47
00:03:25,716 --> 00:03:30,240
than RAID1, but on the other hand we
are working with 5 disks here and

48
00:03:30,240 --> 00:03:34,140
spending only one-fifth of
our capacity on parity.

49
00:03:34,140 --> 00:03:37,510
With Raid 1,
we were working with only two disks, and

50
00:03:37,510 --> 00:03:41,140
spending half of the capacity
of the array on parity.

51
00:03:41,140 --> 00:03:46,440
So we sacrifice some MTTF to
get better cost per gigabyte.

52
00:03:46,440 --> 00:03:49,550
But we still achieve a very,
very high MTTF.
