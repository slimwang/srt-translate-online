1
00:00:00,380 --> 00:00:01,950
Okay. Let's write some code.

2
00:00:01,950 --> 00:00:04,980
We'll use one dimensional data to begin with.

3
00:00:04,980 --> 00:00:09,010
Given a discrete signal s as a vector and

4
00:00:09,010 --> 00:00:14,550
a template t our job is to find where that template occurs in the signal.

5
00:00:14,550 --> 00:00:18,080
This is just like finding a substring in a longer string.

6
00:00:18,080 --> 00:00:22,230
Here we are playing with numerical values which has some implications.

7
00:00:22,230 --> 00:00:27,280
Note that here we want to find the starting index where the template occurs.

8
00:00:27,280 --> 00:00:30,820
Let's print out the signal and template to see what we mean.

9
00:00:30,820 --> 00:00:34,240
Here we've used colon to generate the sequence of column numbers.

10
00:00:35,570 --> 00:00:40,090
Size of s, 2 is the number of columns in s.

11
00:00:40,090 --> 00:00:42,360
Let's see what the output looks like.

12
00:00:42,360 --> 00:00:44,910
The top row here is the column numbers.

13
00:00:44,910 --> 00:00:46,790
Can you find the template?

14
00:00:46,790 --> 00:00:47,340
Yes.

15
00:00:47,340 --> 00:00:48,760
It is located here.

16
00:00:48,760 --> 00:00:52,180
Starting at index 5 in the signal.

17
00:00:52,180 --> 00:00:54,230
So this is what I want you to do.

18
00:00:54,230 --> 00:00:57,890
I want you to write a function find_template_1D.

19
00:00:57,890 --> 00:01:02,330
That takes two parameters, t and s, the template and signal.

20
00:01:02,330 --> 00:01:07,370
It should return the index, where template is found in s.

21
00:01:07,370 --> 00:01:11,010
Once the index is found we should be able to display it.

22
00:01:11,010 --> 00:01:13,620
Let me get you started with some template code.

23
00:01:14,860 --> 00:01:19,160
By the way, you most likely need to use the image package.

24
00:01:19,160 --> 00:01:23,710
Make sure you test out your function with different signal and template values.

25
00:01:23,710 --> 00:01:27,470
When you submit your code your function will be evaluated against other

26
00:01:27,470 --> 00:01:28,380
test sets.
