1
00:00:00,000 --> 00:00:04,000
Here I'm going to add in Lucretia Mott and Elizabeth Cady Stanton.

2
00:00:04,000 --> 00:00:07,000
To make the output easier to read, I'll just comment out this debugging,

3
00:00:07,000 --> 00:00:11,000
and now we can see that, oh, this wasn't quite the right answer.

4
00:00:11,000 --> 00:00:13,000
We didn't actually fix the problem.

5
00:00:13,000 --> 00:00:17,000
We should have both of them, Lucretia alone,

6
00:00:17,000 --> 00:00:19,000
Elizabeth alone, and none of them.

7
00:00:19,000 --> 00:00:21,000
We have both of them.

8
00:00:21,000 --> 00:00:23,000
We have Elizabeth alone, and we have none of them,

9
00:00:23,000 --> 00:00:28,000
but we don't have Lucretia alone, so this wasn't quite the right answer.

10
00:00:28,000 --> 00:00:30,000
And what do we do now?

11
00:00:30,000 --> 00:00:32,000
We put back in our print statement debugging

12
00:00:32,000 --> 00:00:34,000
and take a look and see what happens.

13
00:00:34,000 --> 00:00:38,000
We really want one of these to be either Lucretia alone or Elizabeth alone.

14
00:00:38,000 --> 00:00:42,000
Hmm, but this is a lot of debugging output, and it's hard to read.

15
00:00:42,000 --> 00:00:44,000
I don't like it. This is much too annoying.

16
00:00:44,000 --> 00:00:48,000
Now this is a time when you want to narrow things down

17
00:00:48,000 --> 00:00:50,000
and have more localized debugging.

18
00:00:50,000 --> 00:00:54,000
We already know that the problem is with one of these 2 expressions,

19
00:00:54,000 --> 00:00:59,000
and currently, we're not getting Lucretia and Elizabeth in sort of the right orders.

20
00:00:59,000 --> 00:01:01,000
I'll add some new print debugging here

21
00:01:01,000 --> 00:01:04,000
indicating what the current element I'm selecting is,

22
00:01:04,000 --> 00:01:08,000
so I'm changing the debugging information so that it's more localized

23
00:01:08,000 --> 00:01:11,000
to what I actually care about, and now, surprisingly,

24
00:01:11,000 --> 00:01:14,000
this actually gives us a better feel for the problem.

25
00:01:14,000 --> 00:01:17,000
When we come in at the beginning, Lucretia is our current element,

26
00:01:17,000 --> 00:01:21,000
so we expect our 2 recursive calls to have her

27
00:01:21,000 --> 00:01:23,000
and not have her.

28
00:01:23,000 --> 00:01:26,000
Our first recursive call is this part,

29
00:01:26,000 --> 00:01:29,000
and our second recursive call is this part.

30
00:01:29,000 --> 00:01:33,000
In the second recursive call where we don't select her,

31
00:01:33,000 --> 00:01:36,000
things are looking okay, but in the first recursive call

32
00:01:36,000 --> 00:01:40,000
where we do select her, somehow we're remembering her the first time

33
00:01:40,000 --> 00:01:42,000
but not the second time.

34
00:01:42,000 --> 00:01:45,000
Let me add just a little bit more debugging information

35
00:01:45,000 --> 00:01:48,000
to keep track of what's been selected so far,

36
00:01:48,000 --> 00:01:50,000
and now we can really see exactly what's going on.

37
00:01:50,000 --> 00:01:52,000
Our current element is Lucretia,

38
00:01:52,000 --> 00:01:57,000
so in some recursive calls, she should be one of the things we've selected so far,

39
00:01:57,000 --> 00:02:00,000
but we're not seeing that some of the time,

40
00:02:00,000 --> 00:02:04,000
and that points us exactly to this line in the code

41
00:02:04,000 --> 00:02:08,000
where we're not copying down what has been selected so far.

42
00:02:08,000 --> 00:02:11,000
I try making this change, comment out my print statement debugging,

43
00:02:11,000 --> 00:02:13,000
and rerun.

44
00:02:13,000 --> 00:02:16,000
Now we're getting the 4 elements we expect.

45
00:02:16,000 --> 00:02:18,000
Now let's try adding in Susan B. Anthony,

46
00:02:18,000 --> 00:02:21,000
and we do get the 8 answers we wanted, so we fixed the bug,

47
00:02:21,000 --> 00:02:25,000
but it involved print statement debugging at a high level

48
00:02:25,000 --> 99:59:59,999
and then at a more concentrated level to get a better feel for what was going on.
