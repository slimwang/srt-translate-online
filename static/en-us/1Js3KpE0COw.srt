1
00:00:00,660 --> 00:00:02,826
Before I write the code for this, I want to work it out for a couple other

2
00:00:02,826 --> 00:00:07,624
examples. Probably the easiest example would be January 2nd, 1900 since I know

3
00:00:07,624 --> 00:00:12,991
that would be a Tuesday. I can calculate the days that January 2nd is after

4
00:00:12,991 --> 00:00:19,654
January 1st, by using the daysFrom method on the day object. In this case, it

5
00:00:19,654 --> 00:00:23,890
would give 1. Now, the day of the week would be the reference day plus the

6
00:00:23,890 --> 00:00:29,043
number of days that we are away from it. So, in our case, Monday, plus the

7
00:00:29,043 --> 00:00:34,027
number of days after. And this will work for this case. But if I take a

8
00:00:34,027 --> 00:00:39,679
slightly farther away case, like January 8th, 1900. I know that would be a

9
00:00:39,679 --> 00:00:44,828
Monday again. But it's seven days after. So, I would get that it was 1 plus 7,

10
00:00:44,828 --> 00:00:51,990
which is weekday 8. Weekday 8 doesn't exist. We only have up to weekday six.

11
00:00:51,990 --> 00:00:57,213
So, what I really mean to do is start on Monday, and add seven days. One, two,

12
00:00:57,213 --> 00:01:04,837
three, four, five. Six, seven. So, instead of continuing up to, day 7 and day

13
00:01:04,837 --> 00:01:11,915
8, I go back to day zero and up to day one. So, that means that I'm using mod.

14
00:01:11,915 --> 00:01:18,916
In this case mod 7. So, the uncorrected value in that case would of been 8, and

15
00:01:18,916 --> 00:01:23,092
to correct it, I would calculate that the actual day of the week was the

16
00:01:23,092 --> 00:01:29,144
original one, the uncorrected one, mod 7. The first thing I need to do is

17
00:01:29,144 --> 00:01:31,645
create a day for the reference day and I'm actually not going to use birthday

18
00:01:31,645 --> 00:01:35,540
in this case. So, this is actually the wrong way to do this, because I might

19
00:01:35,540 --> 00:01:39,992
want to use this program to calculate lots of different days. While I'm

20
00:01:39,992 --> 00:01:43,650
testing, I'll make this an easy day, like I just mentioned so, January 8th,

21
00:01:43,650 --> 00:01:48,350
1900 and I'll set up my reference day. So, now I'm going to calculate the days

22
00:01:48,350 --> 00:01:52,466
between the referenceDay and the desiredDay. Using that good old daysFrom

23
00:01:52,466 --> 00:01:58,270
method and now the uncorrectedWeekDay would be the weekday of the referenceDay.

24
00:01:58,270 --> 00:02:03,522
I'll call is referenceWeekDay. Which is a Monday, plus the number of days

25
00:02:03,522 --> 00:02:09,389
between the referenceDay and the day we're interested in. And now to get the

26
00:02:09,389 --> 00:02:15,214
correctedWeekDay, we take mod 7 from the uncorrectedWeekDay. Lets check if I

27
00:02:15,214 --> 00:02:18,628
made any mistakes. I'm pretty sure that my answers should be Monday, that was

28
00:02:18,628 --> 00:02:25,534
what I calculated before. Forgot to say that this is a day. And that one too

29
00:02:25,534 --> 00:02:30,748
and the referenceWeekDay was an int and I can't find a variable weekday.

30
00:02:30,748 --> 00:02:35,440
Because what I called correctedWeekDay should actually just be weekday and that

31
00:02:35,440 --> 00:02:39,841
one should work better. So, now if I run the method, I get that weekday is

32
00:02:39,841 --> 00:02:44,357
minus 6. Must be a bug. So, where could I have gone wrong? Somehow I got a

33
00:02:44,357 --> 00:02:47,994
negative number here. I must have got a negative number because

34
00:02:47,994 --> 00:02:53,923
referenceWeekDay plus daysBetween is a negative number. ReferenceWeekDay is

35
00:02:53,923 --> 00:02:57,587
definitely 1. So, daysBetween must have been negative. It looks like

36
00:02:57,587 --> 00:03:02,076
referenceDay.daysFrom desiredDay is a negative number, but I'm here assuming

37
00:03:02,076 --> 00:03:06,414
that I'm using it to count up. I'm going to check that using the debugger. I'll

38
00:03:06,414 --> 00:03:11,882
put a break point in and I'll run the method. So, when I step over the line

39
00:03:11,882 --> 00:03:16,107
where I initialized daysBetween, I can now see that daysBetween is coming out

40
00:03:16,107 --> 00:03:21,124
as negative seven. So, my suspicion is confirmed. Instead of calling

41
00:03:21,124 --> 00:03:25,476
referenceDay.daysFrom desiredDay, I should have called desiredDay.daysFrom

42
00:03:25,476 --> 00:03:29,484
referenceDay. Let's try this one out. Now I actually get the weekday I

43
00:03:29,484 --> 00:03:33,214
expected. And I'm ready to go back and reset this day to the day I was

44
00:03:33,214 --> 00:03:38,160
interested in, which was June 18th, 1983. Looks like Sally Ride entered low

45
00:03:38,160 --> 00:03:39,600
Earth orbit on a Saturday.
