1
00:00:00,000 --> 00:00:02,000
Let's go through it together.

2
00:00:02,000 --> 00:00:06,000
We need to make a new environment, and the parent pointer of that new environment

3
00:00:06,000 --> 00:00:10,000
should point to the environment the function was declared in.

4
00:00:10,000 --> 00:00:13,000
This is tricky, and it's easy to get this wrong.

5
00:00:13,000 --> 00:00:16,000
Don't use the environment we already have lying around;

6
00:00:16,000 --> 00:00:19,000
use the one we got out of the function. Currently it's empty.

7
00:00:19,000 --> 00:00:21,000
There is nothing in our mapping.

8
00:00:21,000 --> 00:00:26,000
So our next step is to evaluate the actual arguments and make room for them.

9
00:00:26,000 --> 00:00:29,000
The actual arguments may be as simple as the number 2,

10
00:00:29,000 --> 00:00:32,000
or they may be complicated mathematical expressions.

11
00:00:32,000 --> 00:00:36,000
We will go over each one in turn, and for that particular argument

12
00:00:36,000 --> 00:00:40,000
we will evaluate it in the current environment.

13
00:00:40,000 --> 00:00:43,000
Not in the function declaration environment; in the current one.

14
00:00:43,000 --> 00:00:45,000
We haven't really made this new one yet.

15
00:00:45,000 --> 00:00:48,000
And now we'll add to our environment.

16
00:00:48,000 --> 00:00:52,000
This line was particularly tricky because it requires you to remember

17
00:00:52,000 --> 00:00:54,000
what our environment really is.

18
00:00:54,000 --> 00:00:58,000
It's a tuple with 2 parts: a parent pointer and a dictionary.

19
00:00:58,000 --> 00:01:01,000
We want to get out the oneth part, the dictionary,

20
00:01:01,000 --> 00:01:05,000
and extend it so that when it refers to the ith formal parameter,

21
00:01:05,000 --> 00:01:10,000
that binds to the value of the ith actual argument.

22
00:01:10,000 --> 00:01:14,000
So in our example up here with calling the function square root on 2,

23
00:01:14,000 --> 00:01:20,000
the parameter name is x, the actual argument value is the number 2.

24
00:01:20,000 --> 00:01:22,000
X is now bound to 2.

25
00:01:22,000 --> 00:01:24,000
fparams[i]] is the variable name x,

26
00:01:24,000 --> 00:01:26,000
argval is the number 2.

27
00:01:26,000 --> 00:01:28,000
That's actually it for our new environment,

28
00:01:28,000 --> 00:01:31,000
so now we just want to evaluate the body in that environment.

29
00:01:31,000 --> 00:01:33,000
One line suffices.

30
00:01:33,000 --> 00:01:36,000
Remember that much like the if-then-else statement we've seen before

31
00:01:36,000 --> 00:01:42,000
with the curly braces in JavaScript, a function body may have many statements,

32
00:01:42,000 --> 00:01:47,000
so we'll use our eval-stmts procedure on the body in the new environment.

33
00:01:47,000 --> 00:01:50,000
This is critical. We don't want to use any of the old environments.

34
00:01:50,000 --> 00:01:54,000
We need the new ones where the formal parameters are bound to the actual arguments.

35
00:01:54,000 --> 00:01:55,000
And that's it.
