1
00:00:00,280 --> 00:00:03,810
Let's look at the solution
to our MSI access quiz.

2
00:00:03,810 --> 00:00:07,960
We have two cores with private caches
and MSI coherence, initially block

3
00:00:07,960 --> 00:00:12,970
access in Memory, which means that it's
really invalid in both of the caches.

4
00:00:12,970 --> 00:00:15,497
After we read X and C1s cache,

5
00:00:15,497 --> 00:00:21,520
C1s cache with transition this block
from I to S, the shared state.

6
00:00:22,630 --> 00:00:25,500
Because this was a read we
move to the shared state.

7
00:00:25,500 --> 00:00:30,060
Even though it is not really shared,
this is our way of saying basically that

8
00:00:30,060 --> 00:00:33,570
the block is clean, and
that we only want to read it.

9
00:00:33,570 --> 00:00:36,810
In C2s cache it stay invalid.

10
00:00:36,810 --> 00:00:42,020
When C2 then does a read, it also
gets the block in the shared state.

11
00:00:42,020 --> 00:00:45,740
And if we snoop a read
request in the shared state,

12
00:00:45,740 --> 00:00:48,170
we stay in the shared state.

13
00:00:48,170 --> 00:00:53,250
So finally when C1 writes to X, because
it has a block in the shared state,

14
00:00:53,250 --> 00:00:56,820
it needs to send an invalidation out.

15
00:00:56,820 --> 00:01:01,450
That results in C2 moving
the block to the invalid state.

16
00:01:01,450 --> 00:01:06,130
It can no longer be read until
we get the new copy from C1,

17
00:01:06,130 --> 00:01:09,520
and C1 after writing has
the block in the modified state.
