1
00:00:00,320 --> 00:00:03,830
Let's try that same example
function now in Python code.

2
00:00:05,030 --> 00:00:11,180
So up here we have our normal imports,
here is where we define the function

3
00:00:12,220 --> 00:00:18,910
and again we're simply
using X-1.5 squared +0.5.

4
00:00:20,180 --> 00:00:22,720
Now within this function
we're going to go ahead and

5
00:00:22,720 --> 00:00:25,910
print what the value
is when we get called.

6
00:00:25,910 --> 00:00:30,500
It just is a little bit handier so that
we can see what exactly is going on.

7
00:00:30,500 --> 00:00:33,070
But you don't have to
have that of course.

8
00:00:33,070 --> 00:00:34,120
And then we return y.

9
00:00:35,120 --> 00:00:41,420
Now this is going to be the function
that we're going to Ask SciPy,

10
00:00:41,420 --> 00:00:46,740
or in particular the optimizer,
to minimize for us.

11
00:00:46,740 --> 00:00:51,960
And by the way, we've included
this optimize package as spo.

12
00:00:51,960 --> 00:00:56,510
So scipy.optimize as spo.

13
00:00:56,510 --> 00:01:01,040
This is our call now to the optimizer or
the minimizer.

14
00:01:01,040 --> 00:01:05,515
Before we call it we first set
our guess value to be 2.0.

15
00:01:05,515 --> 00:01:12,542
And we're using the function minimize so
we call spo.minimize.

16
00:01:12,542 --> 00:01:16,455
F, that's our function here,
so we're saying minimizer,

17
00:01:16,455 --> 00:01:19,850
please minimize find the minimum for
this function.

18
00:01:20,920 --> 00:01:22,670
X guess is our guess.

19
00:01:23,750 --> 00:01:31,570
Method is, we're directing minimize to
use a particular minimizing algorithm.

20
00:01:31,570 --> 00:01:35,310
We'll talk a little bit about
that a little bit later.

21
00:01:35,310 --> 00:01:38,200
But this is one of those particular
algorithms that happens to

22
00:01:38,200 --> 00:01:39,010
work pretty nicely.

23
00:01:40,030 --> 00:01:46,020
We send it one more option here,
disp, which is True.

24
00:01:46,020 --> 00:01:50,850
Which means we just want it to be
verbose about things that it discovers.

25
00:01:50,850 --> 00:01:52,250
Anyways, that's it.

26
00:01:52,250 --> 00:01:54,150
That calls the minimizer.

27
00:01:54,150 --> 00:01:57,820
The minimizer repeatedly
calls our function and

28
00:01:57,820 --> 00:02:02,430
finds the minimum value,
then it prints out those results.

29
00:02:02,430 --> 00:02:04,440
Let's try a test run and
see what happens.

30
00:02:05,480 --> 00:02:08,900
Remember, in our function
that we wanted to minimize,

31
00:02:08,900 --> 00:02:11,950
we explicitly printed X and Y.

32
00:02:11,950 --> 00:02:16,580
So here you can see each time it gets
called it prints these values out.

33
00:02:16,580 --> 00:02:22,160
And so the minimizer is repeatedly
calling that function f and

34
00:02:22,160 --> 00:02:24,150
it's printing these things out.

35
00:02:24,150 --> 00:02:26,460
So it gets called initially
with an X of 2 and

36
00:02:26,460 --> 00:02:29,515
it discovers that the value is 0.75.

37
00:02:29,515 --> 00:02:35,610
Then a value slightly greater than 2,
a value slightly less than 2.

38
00:02:35,610 --> 00:02:42,820
And the minimizer very quickly converges
on 1.5 as the answer, and here

39
00:02:42,820 --> 00:02:49,110
it prints out those values and finds the
minima at 1.5 with a value of 0.5 there.

40
00:02:49,110 --> 00:02:52,830
So pretty efficient and
effective discovery of the minimization.

41
00:02:52,830 --> 00:02:57,259
I added a few more lines of
code here which I'll highlight,

42
00:02:58,430 --> 00:03:03,000
merely to plot the answer, so
all the rest of the code is the same.

43
00:03:03,000 --> 00:03:06,310
But let's take a look now
if we plot it as well.

44
00:03:06,310 --> 00:03:13,200
So, same result as before but nice plot
with our minima identified right here.

45
00:03:14,310 --> 00:03:22,840
So, that is how to code up a minimizer,
it's really very easy and very powerful.

46
00:03:22,840 --> 00:03:24,310
Let's look at it a little bit further.
