1
00:00:01,020 --> 00:00:06,010
Hi everybody welcome to another edition of
the hangout on air for Front-End Nanodegree.

2
00:00:06,010 --> 00:00:10,620
Today i'm joined with Mike Wales and
I'm Jonathan Mavroudis.

3
00:00:10,620 --> 00:00:14,320
Today we're going to talk about
project three which Mike Wales

4
00:00:14,320 --> 00:00:16,200
actually put together for everybody.

5
00:00:16,200 --> 00:00:19,100
And we hope you can enjoying it so far.

6
00:00:19,100 --> 00:00:22,740
We wanted to talk a little bit
about like our expectations.

7
00:00:22,740 --> 00:00:26,045
And sort of what the minimum
requirements for the project are.

8
00:00:26,045 --> 00:00:26,830
>> Mm-hm.

9
00:00:26,830 --> 00:00:29,080
>> So as you can see here
when we load up the game.

10
00:00:29,080 --> 00:00:31,690
We have our little player character.

11
00:00:31,690 --> 00:00:35,170
Starting in the middle of the grass and
he can realistically start anywhere.

12
00:00:35,170 --> 00:00:36,290
>> He can start anywhere, yeah.

13
00:00:36,290 --> 00:00:37,210
>> Yeah.

14
00:00:37,210 --> 00:00:38,990
So the minimum requirements
we usually ask for

15
00:00:38,990 --> 00:00:42,600
is first of all that the little
guy can move around.

16
00:00:42,600 --> 00:00:44,090
This is using the direction keys.

17
00:00:44,090 --> 00:00:48,320
And that functionality's
pretty much already built in.

18
00:00:48,320 --> 00:00:51,010
The key handling is already put in.

19
00:00:51,010 --> 00:00:52,660
You just have to, kind of watch, for

20
00:00:52,660 --> 00:00:55,840
the key handling and
adjust the data of your player.

21
00:00:55,840 --> 00:00:58,630
So that whenever it draws,
it draws in a new position.

22
00:00:58,630 --> 00:01:01,925
There are player should be sort
of confined in that window.

23
00:01:01,925 --> 00:01:03,870
Right.
So if I kind of move my player.

24
00:01:03,870 --> 00:01:06,019
I can't go any further right
even though I'm mashing right,

25
00:01:06,019 --> 00:01:07,510
I can't go any further left.

26
00:01:07,510 --> 00:01:13,530
Even though I'm mashing left and
if he happens to fall off the window.

27
00:01:13,530 --> 00:01:15,660
Then he's kind of not on the game.

28
00:01:15,660 --> 00:01:16,810
Right.
So, we want to try to

29
00:01:16,810 --> 00:01:21,200
avoid things like this where the player
can just sort of step out of bounds.

30
00:01:21,200 --> 00:01:24,420
And then, the second thing is that
the bugs move across the screen.

31
00:01:24,420 --> 00:01:29,130
So, here we got a bunch of bugs flying
across the screen at different speeds.

32
00:01:29,130 --> 00:01:31,360
And these are the vehicles.

33
00:01:31,360 --> 00:01:32,257
>> The bad guys [LAUGH].

34
00:01:32,257 --> 00:01:35,560
>> The bad guys, yeah.
That's what you got to try to avoid.

35
00:01:35,560 --> 00:01:38,820
So, we can see that there is just
this constant stream of bugs.

36
00:01:38,820 --> 00:01:40,690
So, let's kind of recap those
three things real quick.

37
00:01:40,690 --> 00:01:42,140
Player moves.

38
00:01:42,140 --> 00:01:43,320
Bugs move.

39
00:01:43,320 --> 00:01:44,568
And player doesn't fall off the screen.

40
00:01:44,568 --> 00:01:45,283
>> Mm-hm.

41
00:01:45,283 --> 00:01:48,270
>> The fourth piece of
functionality we're looking for

42
00:01:48,270 --> 00:01:49,605
which you probably just saw.

43
00:01:49,605 --> 00:01:52,580
[LAUGH] Is if I happen to get
hit by one of these bugs.

44
00:01:52,580 --> 00:01:57,170
Here no I fall the way
back to the beginning.

45
00:01:57,170 --> 00:01:57,790
>> Yep.

46
00:01:57,790 --> 00:02:00,370
>> The last little piece
of functionality is sort of

47
00:02:00,370 --> 00:02:01,630
winning the game in a sense.

48
00:02:01,630 --> 00:02:04,910
And that's if I'm able to get
all the way across the road.

49
00:02:04,910 --> 00:02:07,830
And again we've not hit anything here.

50
00:02:07,830 --> 00:02:09,880
I get across it recessed
the game as well.

51
00:02:09,880 --> 00:02:11,060
>> Which is acceptable.

52
00:02:11,060 --> 00:02:13,460
You can go as crazy as you
want with this project.

53
00:02:13,460 --> 00:02:15,450
>> Yeah.
>> This is the minimum viable passing

54
00:02:15,450 --> 00:02:17,100
product project.

55
00:02:17,100 --> 00:02:20,280
>> So then the next thing we have is
sort of the criteria called object

56
00:02:20,280 --> 00:02:22,780
oriented code.

57
00:02:22,780 --> 00:02:24,090
Let's talk a little bit about that.

58
00:02:24,090 --> 00:02:26,780
So the whole course this is built off of

59
00:02:26,780 --> 00:02:29,300
is the object-oriented
JavaScript course.

60
00:02:29,300 --> 00:02:30,930
>> Right.
>> Can we go into a little detail about

61
00:02:30,930 --> 00:02:35,470
what we mean by object-oriented,
and sort of how that differs from

62
00:02:35,470 --> 00:02:37,780
maybe some of the programming
people are familiar with?

63
00:02:37,780 --> 00:02:39,820
>> Yeah, so object-oriented programming,

64
00:02:39,820 --> 00:02:43,750
particularly in JavaScript, is whenever
you write what we call a class.

65
00:02:43,750 --> 00:02:48,080
And so in JavaScript we really don't
have classes, but we kind of fake it.

66
00:02:48,080 --> 00:02:51,030
A class in JavaScript is
any structure that can

67
00:02:51,030 --> 00:02:54,060
create a fleet of objects
that are similar in nature.

68
00:02:54,060 --> 00:02:56,830
So your bugs for
instance you have three different bugs.

69
00:02:57,850 --> 00:03:01,395
There's really no point in having to
write this out three different times.

70
00:03:01,395 --> 00:03:02,390
>> Mm-hm.
>> You just create

71
00:03:02,390 --> 00:03:04,800
the general structure
that defines a bug.

72
00:03:04,800 --> 00:03:06,460
And then you instantiate
that object a few times.

73
00:03:06,460 --> 00:03:08,950
One of the biggest
things we're looking for

74
00:03:08,950 --> 00:03:12,240
is using the prototype object correctly.

75
00:03:12,240 --> 00:03:16,140
You don't want to define your render and

76
00:03:16,140 --> 00:03:19,080
update functions on every
single object on the screen.

77
00:03:19,080 --> 00:03:23,630
You want that type of
functionality to be on the class.

78
00:03:23,630 --> 00:03:25,970
That instantiates the objects.

79
00:03:27,210 --> 00:03:29,850
So then the last three sections in

80
00:03:29,850 --> 00:03:32,450
the rubric I think should
be pretty straightforward.

81
00:03:32,450 --> 00:03:35,380
Code quality, we're just asking that you

82
00:03:35,380 --> 00:03:37,670
kind of adhere to the style
guide we provide you.

83
00:03:37,670 --> 00:03:41,190
You format your code, it's easy to read.

84
00:03:41,190 --> 00:03:43,990
I think that's sort of the biggest
point is that if you were to give

85
00:03:43,990 --> 00:03:46,730
this to your mom,
who doesn't know any JavaScript,

86
00:03:46,730 --> 00:03:48,760
she'd at least be able
to look at it like.

87
00:03:48,760 --> 00:03:51,470
Be able to point out like
you know long lines yeah.

88
00:03:51,470 --> 00:03:53,180
>> Like this makes sense.

89
00:03:53,180 --> 00:03:54,260
>> Yeah.

90
00:03:54,260 --> 00:03:57,040
Just be consistent, we've had some
questions are going like spaces

91
00:03:57,040 --> 00:03:59,790
do I use more spaces to spaces or
use tabs.

92
00:03:59,790 --> 00:04:05,460
Just be consistent with your spacing and
your the way you lay things out.

93
00:04:05,460 --> 00:04:10,870
And like you said, we want it to
be readable by our coaches and

94
00:04:10,870 --> 00:04:13,320
not just one line string of symbols.

95
00:04:14,580 --> 00:04:16,200
>> Then the next one is comments.

96
00:04:16,200 --> 00:04:18,959
I think comments should be

97
00:04:18,959 --> 00:04:22,310
pretty common practice in any
sort of programming you do.

98
00:04:22,310 --> 00:04:23,210
Even with HTML,

99
00:04:23,210 --> 00:04:27,340
leaving comments in to just say this
is what sort of this section is for.

100
00:04:29,520 --> 00:04:33,640
Comments are just sort of a programmer
to programmer way of communicating.

101
00:04:33,640 --> 00:04:37,360
>> Exactly, so you don't want to have
a comment that says like draw the book.

102
00:04:37,360 --> 00:04:40,420
Because it's pretty obvious that
that line is drawing the book.

103
00:04:40,420 --> 00:04:41,850
Comments are really good for

104
00:04:41,850 --> 00:04:45,840
answering the question of why
am I doing something this way.

105
00:04:45,840 --> 00:04:48,410
It really is programmer
to programmer talk.

106
00:04:48,410 --> 00:04:50,970
Ten years down the road when you
move on to a new company and

107
00:04:50,970 --> 00:04:54,020
some guy takes over your application.

108
00:04:54,020 --> 00:04:55,360
You want to leave enough comments that

109
00:04:55,360 --> 00:04:57,186
he doesn't want to track you down and
kill you.

110
00:04:57,186 --> 00:04:57,988
>> Yeah [LAUGH].

111
00:04:57,988 --> 00:04:58,541
>> [LAUGH].

112
00:04:58,541 --> 00:05:00,580
>> The last one, documentation.

113
00:05:00,580 --> 00:05:04,330
Where we asked the students
to provide us a read me file.

114
00:05:05,480 --> 00:05:09,225
I'd say that's more just so you get into
the habit of writing sort of a read me.

115
00:05:09,225 --> 00:05:09,870
>> Mm-hm.

116
00:05:09,870 --> 00:05:12,500
>> Write this is if you
were sending this game

117
00:05:12,500 --> 00:05:14,520
to a friend didn't want to
be able to show it to them.

118
00:05:14,520 --> 00:05:15,160
>> Yeah.

119
00:05:15,160 --> 00:05:18,340
>> And especially if you
really go above and beyond.

120
00:05:18,340 --> 00:05:20,550
Kind of make this game your own.

121
00:05:20,550 --> 00:05:23,375
A little bit of a read me at
some of the additions you added.

122
00:05:23,375 --> 00:05:24,740
>> Mm-hm.
>> How you did them.

123
00:05:24,740 --> 00:05:26,760
That would all be really, really great.

124
00:05:26,760 --> 00:05:31,270
I mean as documentative as
you can make your project.

125
00:05:31,270 --> 00:05:32,560
The better it's going to look.

126
00:05:32,560 --> 00:05:33,060
>> Yeah.
