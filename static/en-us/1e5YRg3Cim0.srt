1
00:00:00,000 --> 00:00:04,250
Welcome to problem set five. Let's talk a bit about approximating vertex cover.

2
00:00:04,250 --> 00:00:07,660
Suppose someone comes up to you and tells you that they devised

3
00:00:07,660 --> 00:00:12,490
a really really clever algorithm for approximating vertex cover.

4
00:00:12,490 --> 00:00:14,030
Let's call it clever_vc.

5
00:00:14,030 --> 00:00:17,600
Now, this is so clever that they don't actually want to show you the source code.

6
00:00:17,600 --> 00:00:19,650
They want to keep it secret so you can't see that,

7
00:00:19,650 --> 00:00:24,440
and they don't even return the list of vertices that are in the cover.

8
00:00:24,440 --> 00:00:26,520
They just tell you the size of the cover.

9
00:00:26,520 --> 00:00:31,290
So, how would you go about figuring out the performance of this and how it works?

10
00:00:31,290 --> 00:00:34,290
In order to test the performance of clever_vc,

11
00:00:34,290 --> 00:00:39,570
how about we test it against four fairly large graphs

12
00:00:39,570 --> 00:00:43,540
of 10,000; 20,000; 30,000; and 40,000 vertices,

13
00:00:43,540 --> 00:00:48,060
and let's compare that against factor-2 approximation algorithm that we have.

14
00:00:48,060 --> 00:00:51,440
See what the sizes that both come up with are.

15
00:00:51,440 --> 00:00:55,920
So, you can see that the sizes of minimum vertex cover for clever_vc

16
00:00:55,920 --> 00:01:00,190
is always smaller than factor-2 approximation, sometimes, not very much.

17
00:01:00,190 --> 00:01:05,069
For example in this run, 233 versus 234, not much of a difference.

18
00:01:05,069 --> 00:01:11,580
In other cases, it's a rather large difference like 295 versus 600 in the 30,000 verticy graph.

19
00:01:11,580 --> 00:01:17,450
Now, based on this table, there are number of things that we can say about clever-vc.

20
00:01:17,450 --> 00:01:20,770
And these are the questions that I would like you to answer for me,

21
00:01:20,770 --> 00:01:24,790
the statements that we can definitely say about clever_vc,

22
00:01:24,790 --> 00:01:27,820
and if you need to refer back to the table,

23
00:01:27,820 --> 00:01:30,520
then we'll have that below in the instruction comments.

24
00:01:30,520 --> 00:01:35,610
Can we say that given any graph, clever_vc will outperform the 2-approximation algorithm

25
00:01:35,610 --> 00:01:40,570
since in the graph that we gave it, it most certainly did outperform the 2-approximation algorithm?

26
00:01:40,570 --> 00:01:46,530
Now, can we also say that clever_vc is a factor-1.75 approximation algorithm

27
00:01:46,530 --> 00:01:51,650
or finally could we actually say that clever-vc is not a correct algorithm?

28
00:01:51,650 --> 99:59:59,999
And check true or false for all three of these.
