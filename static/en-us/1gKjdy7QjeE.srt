1
00:00:00,390 --> 00:00:02,520
So if images are just functions,

2
00:00:03,620 --> 00:00:06,520
then we can do things to images that we can do to functions.

3
00:00:06,520 --> 00:00:09,340
Like we can just add them, right?

4
00:00:09,340 --> 00:00:10,980
You can add two functions, right?

5
00:00:10,980 --> 00:00:13,470
Well, then we can add two images.

6
00:00:13,470 --> 00:00:14,830
And to introduce this a little bit,

7
00:00:14,830 --> 00:00:17,680
we're going to introduce the concept of noise, okay?

8
00:00:17,680 --> 00:00:19,290
So noise in an image.

9
00:00:19,290 --> 00:00:24,400
Is just another function that, combined with the original image,

10
00:00:24,400 --> 00:00:26,380
gives us a new function.

11
00:00:26,380 --> 00:00:30,050
So, we'll just write this, this way as our new image.

12
00:00:30,050 --> 00:00:30,880
We'll call it I prime.

13
00:00:30,880 --> 00:00:34,930
It's just I of x, y plus this noise function.

14
00:00:34,930 --> 00:00:35,980
You know, well what does that mean?

15
00:00:35,980 --> 00:00:40,090
Well, we have to take a look at what this noise function would be.

16
00:00:40,090 --> 00:00:42,950
Okay, so there are lots of different kinds of noise functions.

17
00:00:42,950 --> 00:00:45,470
Here's one, and this stuff's courtesy of Steve Sites,

18
00:00:45,470 --> 00:00:48,160
there's a type of noise called salt and pepper noise.

19
00:00:48,160 --> 00:00:49,910
Which doesn't take a rocket scientist for

20
00:00:49,910 --> 00:00:54,570
you to figure out that probably what it does is, it takes your original picture

21
00:00:54,570 --> 00:00:58,830
and it sprinkles occasional white spots and occasional dark spots.

22
00:00:58,830 --> 00:01:02,260
And that's called salt and pepper noise for the, for the obvious reason.

23
00:01:02,260 --> 00:01:04,410
A, a relative to that is something called an impulse noise,

24
00:01:04,410 --> 00:01:07,390
where you just get little white specks now and then.

25
00:01:07,390 --> 00:01:10,540
Different kind of imaging systems might give you that kind of noise.

26
00:01:10,540 --> 00:01:14,550
But by far, the noise that you're most familiar with

27
00:01:14,550 --> 00:01:18,070
is typically Gaussian noise, or normally distributed noise.

28
00:01:18,070 --> 00:01:22,720
Where we basically assume that at every pixel we take the original image and

29
00:01:22,720 --> 00:01:28,320
we stick on here some value that is independent identically

30
00:01:28,320 --> 00:01:31,890
distributed from some normal or some Gaussian distribution.

31
00:01:31,890 --> 00:01:34,080
All right, and that's Gaussian noise.

32
00:01:34,080 --> 00:01:38,330
And most of the time when we talk about noise we'll talk about that function.

33
00:01:38,330 --> 00:01:39,090
Okay?

34
00:01:39,090 --> 00:01:41,600
We can actually have Matlab make us a noise function.

35
00:01:41,600 --> 00:01:42,220
It's real easy.

36
00:01:42,220 --> 00:01:47,650
So here we say, look we're going to make a noise array, which is just,

37
00:01:47,650 --> 00:01:50,950
I take the size of my image, random n,

38
00:01:50,950 --> 00:01:55,640
randn generates a noise signal that has a mean of zero and

39
00:01:55,640 --> 00:02:00,620
a standard deviation of one, and if we scale that up by some sigma.

40
00:02:00,620 --> 00:02:01,340
Okay?

41
00:02:01,340 --> 00:02:04,310
That will spread that out and make it bigger so that's

42
00:02:04,310 --> 00:02:08,669
essentially the noise with mean of zero and a, a standard deviation of sigma.

43
00:02:08,669 --> 00:02:11,140
And because functions are just functions and

44
00:02:11,140 --> 00:02:13,310
images are functions, I can just add them.

45
00:02:13,310 --> 00:02:17,170
I can say let my output just be the image plus the noise.

46
00:02:17,170 --> 00:02:20,180
And if I were to plot that, you would see what's here, right?

47
00:02:20,180 --> 00:02:24,570
And on the right you can see that there's all this noise in our peppers.

48
00:02:24,570 --> 00:02:28,270
And if we plot this, you can see here we get this nice clean plot and

49
00:02:28,270 --> 00:02:30,850
here we have all this extra noise that's been added.

50
00:02:30,850 --> 00:02:32,220
And so that's our noise function.
