1
00:00:00,222 --> 00:00:04,140
We're going to talk about how
we control access to resources.

2
00:00:04,140 --> 00:00:06,280
These are protected resources.

3
00:00:06,280 --> 00:00:10,250
Any program can make a request for
such a resource,

4
00:00:10,250 --> 00:00:15,000
and we need to decide if the request
should be allowed to go ahead,

5
00:00:15,000 --> 00:00:18,220
it should be granted,
or we have to deny it.

6
00:00:18,220 --> 00:00:20,800
So we've been talking
about the importance

7
00:00:20,800 --> 00:00:22,690
of the trusted computing base.

8
00:00:22,690 --> 00:00:24,900
In fact, when someone is asking for

9
00:00:24,900 --> 00:00:29,400
a resource, they are generating
a reference for that.

10
00:00:29,400 --> 00:00:33,080
They have to reference the resource they
are interested in or they want to use,

11
00:00:33,080 --> 00:00:37,410
so the trusted computing base has
to act as a reference monitor.

12
00:00:37,410 --> 00:00:41,230
No request for resource should go
without the trusted computing base being

13
00:00:41,230 --> 00:00:44,230
involved in checking that request.

14
00:00:44,230 --> 00:00:48,310
Obviously, it'll have to see
the source of the request is,

15
00:00:48,310 --> 00:00:51,800
what the target, or
what resource is being requested.

16
00:00:51,800 --> 00:00:57,030
And then we're going to discuss how
do we decide if it should be granted.

17
00:00:57,030 --> 00:01:01,840
As a quick example, let's say John is
a student in a class and there's a file

18
00:01:01,840 --> 00:01:05,810
that has the grades of all the students
who are enrolled in that class.

19
00:01:05,810 --> 00:01:08,980
John, obviously,
can make a request to read that file.

20
00:01:08,980 --> 00:01:11,180
Not only he wants to see his own grade,

21
00:01:11,180 --> 00:01:15,530
maybe he's curious about how other
people did on a certain test or an exam.

22
00:01:15,530 --> 00:01:19,090
So John could make
a request to read a file.

23
00:01:19,090 --> 00:01:23,550
In this case,
we not only have to monitor the request

24
00:01:23,550 --> 00:01:28,000
that is going to come from John, but
our access control that we going to do

25
00:01:28,000 --> 00:01:31,670
should decide that John should not be
able to see other people's grades.

26
00:01:31,670 --> 00:01:35,810
So, in this case,
the result may be denying the request.

27
00:01:35,810 --> 00:01:39,900
But the idea here is that references
have to be monitored, and

28
00:01:39,900 --> 00:01:43,230
then we have to make some sort of
a decision when a request comes,

29
00:01:43,230 --> 00:01:45,944
whether it should go ahead or
it should be denied.

30
00:01:45,944 --> 00:01:48,060
So we talked about authentication.

31
00:01:48,060 --> 00:01:52,070
Authentication basically tells
us when an application or

32
00:01:52,070 --> 00:01:56,740
a process makes a request, on whose
behalf that request is being made.

33
00:01:56,740 --> 00:01:59,990
So the example that we're just
talking about, it's a process

34
00:01:59,990 --> 00:02:04,600
that John launched, then it is
going to have John's User ID or UID.

35
00:02:04,600 --> 00:02:09,229
And authentication is how we know that
this particular UID should be associated

36
00:02:09,229 --> 00:02:10,150
with the process.

37
00:02:10,150 --> 00:02:13,390
Authentication tells
us about the source.

38
00:02:13,390 --> 00:02:18,860
Authorization, or access control,
which is the topic for this lesson,

39
00:02:18,860 --> 00:02:22,650
is going to answer the question
knowing the source of a request,

40
00:02:22,650 --> 00:02:24,710
authentication is going to tell us that.

41
00:02:24,710 --> 00:02:28,880
Once we know the source of a request,
in this case a User ID, and

42
00:02:28,880 --> 00:02:32,880
the target of the request, which is a
file, and what they want to do with this

43
00:02:32,880 --> 00:02:36,570
resource is read this file,
should we let them do it or not?

44
00:02:36,570 --> 00:02:39,820
So access control is similar
to what we have in real world.

45
00:02:39,820 --> 00:02:44,510
You want to access something, and
somebody has to decide, in this case,

46
00:02:44,510 --> 00:02:48,860
the TCB, or the reference monitor that
is implemented by the TCB, whether that

47
00:02:48,860 --> 00:02:54,660
access is one that should be allowed to
proceed or go forward, or it should not.

48
00:02:54,660 --> 00:02:58,550
So let's quickly talk about how
do we actually decide this.

49
00:02:58,550 --> 00:03:01,220
Resources that we have in the system,
for

50
00:03:01,220 --> 00:03:05,690
example, files are created by
certain users or subjects.

51
00:03:05,690 --> 00:03:09,820
You can, perhaps,
think if Alice is creating a file,

52
00:03:09,820 --> 00:03:15,010
maybe she has the ability to decide who
should be able to access it or not.

53
00:03:15,010 --> 00:03:16,340
The intention here being,

54
00:03:16,340 --> 00:03:19,810
it's her file, she chooses to
decide who to share it with.

55
00:03:19,810 --> 00:03:24,490
So in many systems, actually, the idea
of an owner of a resource is defined.

56
00:03:24,490 --> 00:03:27,230
This is the subject who
creates the resource, and

57
00:03:27,230 --> 00:03:31,030
it is at the discretion of the owner
how that resource can be shared.

58
00:03:31,030 --> 00:03:34,690
There are other kind of systems
where this may not be the case and

59
00:03:34,690 --> 00:03:36,330
we're going to talk about that.

60
00:03:36,330 --> 00:03:41,050
For example, if you work for a company,
the company may not allow you to

61
00:03:41,050 --> 00:03:45,350
decide how you can share certain
sensitive data about that company.
