1
00:00:00,025 --> 00:00:02,260
Angular's got a ton of moving parts, but

2
00:00:02,260 --> 00:00:06,110
we finally made it to the last
one we'll be looking at, routing.

3
00:00:06,110 --> 00:00:08,890
Up until this point we've worked
with apps that have just one view.

4
00:00:08,890 --> 00:00:13,390
And that's fine, but
it's not very functional or interactive.

5
00:00:13,390 --> 00:00:16,260
Single page applications typically
have many different views or

6
00:00:16,260 --> 00:00:18,500
screens that you can interact with.

7
00:00:18,500 --> 00:00:21,700
A router handles loading
these views based on the URL.

8
00:00:21,700 --> 00:00:24,220
When we generate an angular
app with Yo Angular,

9
00:00:24,220 --> 00:00:27,070
it asks us if we want to
include a number of modules.

10
00:00:27,070 --> 00:00:28,780
One of the options is angular-route.

11
00:00:28,780 --> 00:00:30,500
This routing module works well, but

12
00:00:30,500 --> 00:00:33,310
it's kind of limited since it
doesn't allow for nested views.

13
00:00:33,310 --> 00:00:35,870
We want to have specific
sections of the page update and

14
00:00:35,870 --> 00:00:37,560
change while the rest stays the same.

15
00:00:37,560 --> 00:00:39,860
So instead of using this
angular-route module,

16
00:00:39,860 --> 00:00:42,509
we'll use the community built
routing module called UI Router.

17
00:00:43,660 --> 00:00:46,890
The documentation for the UI Router
module is incredibly detailed.

18
00:00:46,890 --> 00:00:49,790
Make sure to also check out the website
in the sample app to see all

19
00:00:49,790 --> 00:00:52,550
of the functionality UI Router offers.

20
00:00:52,550 --> 00:00:55,780
Since UI Router doesn't come as
part of the default installation,

21
00:00:55,780 --> 00:00:57,700
we need to add it to our project.

22
00:00:57,700 --> 00:01:00,380
The Angular generator uses
Bower to install Angular.

23
00:01:00,380 --> 00:01:02,860
So let's use Bower to install ui-router.

24
00:01:02,860 --> 00:01:06,950
Don't forget to add the -s to save
ui-router to the Bower config file.

25
00:01:06,950 --> 00:01:10,110
One of the files that's created when
we generate an app with the yoangular

26
00:01:10,110 --> 00:01:11,890
command is a Grunt file.

27
00:01:11,890 --> 00:01:14,180
This file manages a lot of
the development process,

28
00:01:14,180 --> 00:01:17,340
from watching files for
changes to reloading the browser.

29
00:01:17,340 --> 00:01:20,190
One of the cool things is that
it can pair with other commands,

30
00:01:20,190 --> 00:01:22,180
like the bower command we just used.

31
00:01:22,180 --> 00:01:25,210
When we installed ui-router with bower,
grunt saw that and

32
00:01:25,210 --> 00:01:27,450
included it in our index file.

33
00:01:27,450 --> 00:01:30,335
Everything that we've been building up
to this point has all been inside our

34
00:01:30,335 --> 00:01:32,220
udaciMeals module.

35
00:01:32,220 --> 00:01:35,625
We created the module and then attached
controllers and services to it.

36
00:01:35,625 --> 00:01:39,350
Ui-router is a module itself and
contains its own inner components.

37
00:01:39,350 --> 00:01:42,870
Back when we created our module we
passed an empty array of dependencies.

38
00:01:42,870 --> 00:01:46,370
Now we have to add ui-router
to that list so we can use it.

39
00:01:46,370 --> 00:01:48,690
Just like injecting
a service into a controller,

40
00:01:48,690 --> 00:01:52,730
to inject one module into another
we just add the name as a string.

41
00:01:52,730 --> 00:01:56,542
So this is injecting the ui-router
module into our udaciMealsApp module.

42
00:01:56,542 --> 00:02:00,742
A word of caution though,
all over the docs it's ui-router, but

43
00:02:00,742 --> 00:02:03,250
when you include it it's ui.router.

44
00:02:03,250 --> 00:02:05,230
This little guy's tripped
me up several times.

45
00:02:05,230 --> 00:02:07,320
So watch out that he
doesn't get you too.

46
00:02:07,320 --> 00:02:10,970
We've looked at why ui-router is
better than the default router module.

47
00:02:10,970 --> 00:02:12,784
We've added ui-router to our project,
and

48
00:02:12,784 --> 00:02:15,670
we've injected it into
the udaciMeals module.

49
00:02:15,670 --> 00:02:18,420
Let's take a look at how to
set up ui-router to manage

50
00:02:18,420 --> 00:02:19,160
the state of our app.
