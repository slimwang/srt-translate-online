1
00:00:00,180 --> 00:00:04,050
So a couple of practical tips with voting for the Hough transform.

2
00:00:04,050 --> 00:00:07,350
One thing you want to do is try to not do too many irrelevant votes.

3
00:00:07,350 --> 00:00:09,110
So try to minimize, sort of,

4
00:00:09,110 --> 00:00:13,320
edge elements that are not robust or are highly unlikely to be useful.

5
00:00:13,320 --> 00:00:16,270
Because remember, we don't have to find all the points along the line,

6
00:00:16,270 --> 00:00:17,680
just enough of the points.

7
00:00:17,680 --> 00:00:20,510
You want to choose a good grid discretization for

8
00:00:20,510 --> 00:00:22,350
your Hough accumulator array, right?

9
00:00:22,350 --> 00:00:23,950
How many bins you make.

10
00:00:23,950 --> 00:00:26,740
And there's no, sort of, magic answer to that.

11
00:00:26,740 --> 00:00:28,030
It's a little bit of an art.

12
00:00:28,030 --> 00:00:31,340
The problem is if things are too large, the bins are too large,

13
00:00:31,340 --> 00:00:36,640
then too many sort of false points vote for the same bin, and if the thing is

14
00:00:36,640 --> 00:00:40,750
too fine, then a little bit of noise will cause you to vote for the wrong bin.

15
00:00:40,750 --> 00:00:43,670
So it's, this, this trade off it's sort of the how course and

16
00:00:43,670 --> 00:00:45,100
fine the data structure is.

17
00:00:45,100 --> 00:00:48,560
The other things you can do, you can actually say,

18
00:00:48,560 --> 00:00:52,510
well I'm going to take my point, and I'm going to vote for the bin.

19
00:00:52,510 --> 00:00:53,910
But maybe I'll also vote for

20
00:00:53,910 --> 00:00:56,880
bins nearby, because maybe I'm not exactly where I need to be.

21
00:00:56,880 --> 00:00:59,500
It's a little bit like smoothing in the accumulator array.

22
00:00:59,500 --> 00:01:01,180
That actually can help.

23
00:01:01,180 --> 00:01:03,940
Using the gradient or the edge direction reduces the degrees of

24
00:01:03,940 --> 00:01:07,290
freedom of your voting by one, and sometimes that's very useful.

25
00:01:07,290 --> 00:01:11,060
And then the last thing is, once you've found, let's say, the circle or

26
00:01:11,060 --> 00:01:11,970
the line.

27
00:01:11,970 --> 00:01:13,360
You could go and draw it in the image, but

28
00:01:13,360 --> 00:01:16,310
if you actually wanted to find the edge points,

29
00:01:16,310 --> 00:01:17,370
well you could do a couple of things.

30
00:01:17,370 --> 00:01:20,200
One is you could actually try to look along that circle looking for

31
00:01:20,200 --> 00:01:21,220
those edge points.

32
00:01:21,220 --> 00:01:23,840
Or you could have been more clever to begin with.

33
00:01:23,840 --> 00:01:27,270
You could have, when you voted in those buckets, in those bins,

34
00:01:27,270 --> 00:01:31,630
you could have kept track of every point that voted for that bucket.

35
00:01:31,630 --> 00:01:34,100
And then once you have a winning bucket, you go and

36
00:01:34,100 --> 00:01:37,670
you look at, in that bucket and there's the list of points that voted for it.

37
00:01:37,670 --> 00:01:40,940
And that way you could find the points in the edge image that

38
00:01:40,940 --> 00:01:43,110
actually selected that object.
