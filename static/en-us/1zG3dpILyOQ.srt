1
00:00:00,160 --> 00:00:03,540
With this kind of star network in particular, 
the datastructure that you need to set up is

2
00:00:03,540 --> 00:00:08,010
actually quite simple. We need to be able to compute 
the distance between any pair of nodes

3
00:00:08,010 --> 00:00:12,949
called say a which is labelled here in the graph, and b labelled here in the graph

4
00:00:12,949 --> 00:00:16,268
and they have to have lists of hubs such that

5
00:00:16,268 --> 00:00:20,629
the uh... the hub has to be on a shortest path from a to b,
well all the paths from a to b

6
00:00:20,629 --> 00:00:25,649
in fact all the paths between anything in the network have to pass through x

7
00:00:25,649 --> 00:00:28,589
so as long as everybody has their distance to x

8
00:00:28,589 --> 00:00:33,120
which is 1 if it's an unweighed network but there could be weights on these edges

9
00:00:33,120 --> 00:00:37,230
as long as each node knows its distance to x 
we'll be able to intersect the lists

10
00:00:37,230 --> 00:00:42,560
for any pair of nodes and know the total distance 
from node a to node b.

11
00:00:42,560 --> 00:00:45,530
uh... one little bit of trickiness there though is that

12
00:00:45,530 --> 00:00:48,610
notice that x's list also has to have x on it

13
00:00:48,610 --> 00:00:52,710
but that's ok. It can just have x with
a distance of zero so it can be its own hub

14
00:00:52,710 --> 00:00:56,610
and then we still should be fine we'll
get the distance from a to x

15
00:00:56,610 --> 00:01:00,210
which is whatever the distance from a
to x is plus zero so one is the

16
00:01:00,210 --> 00:01:00,890
answer I was looking for.
