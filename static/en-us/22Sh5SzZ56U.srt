1
00:00:00,000 --> 00:00:03,081
[BLANK_AUDIO]

2
00:00:03,081 --> 00:00:05,286
To succeed in a Kaggle competition,

3
00:00:05,286 --> 00:00:09,120
there's a couple core skills
that you need to have.

4
00:00:09,120 --> 00:00:13,120
The first is that you need to be really
fluent and learn to be fluent in working

5
00:00:13,120 --> 00:00:18,500
with a data programming
language such as Python or

6
00:00:18,500 --> 00:00:23,160
R, that has a lot of libraries installed
that really facilitate machine learning.

7
00:00:24,550 --> 00:00:28,400
The second, is you need to be good
at interactively exploring and

8
00:00:28,400 --> 00:00:30,920
understanding for
data and its structure.

9
00:00:30,920 --> 00:00:35,400
So tools like ggplot2 and all,
really facilitate rapid visualization

10
00:00:35,400 --> 00:00:37,830
and exploratory
analytics over that data.

11
00:00:37,830 --> 00:00:42,300
And then the third component is that
you need to set up an environment that

12
00:00:42,300 --> 00:00:45,370
enables rapid aeration and
experimentation.

13
00:00:45,370 --> 00:00:50,130
So to do that includes things
like having, get set up for

14
00:00:50,130 --> 00:00:51,150
code version control.

15
00:00:51,150 --> 00:00:53,180
So you can go back to
any point in time and

16
00:00:53,180 --> 00:00:56,940
rerun work that you've done before and
reproduce that work.

17
00:00:56,940 --> 00:01:01,880
As well as having a standardized
computational environment set

18
00:01:01,880 --> 00:01:06,493
up with a lot of good machine learning
packages in it, like xgboost for

19
00:01:06,493 --> 00:01:11,900
To Python R To boost the machines or
another library called

20
00:01:11,900 --> 00:01:16,010
is really good for flexibly
exploring deep neutral networks.

21
00:01:16,010 --> 00:01:17,850
One of the patterns that we've seen for

22
00:01:17,850 --> 00:01:21,190
people who do competitions is
there's kind of two categories.

23
00:01:21,190 --> 00:01:24,310
There's a category of people
who approach a problem and

24
00:01:24,310 --> 00:01:28,270
think I have this great idea that I'm
really confident that'll work out.

25
00:01:28,270 --> 00:01:30,810
I think it's creative,
I think it's innovative and new,

26
00:01:30,810 --> 00:01:34,600
then they spend two months going and
trying to develop that great idea,

27
00:01:34,600 --> 00:01:37,880
implement it in code and
then see how it performs.

28
00:01:37,880 --> 00:01:41,120
Inevitably when they actually go and
submit it, then see how it performs,

29
00:01:41,120 --> 00:01:45,310
it doesn't work out, and
that's a wrong mindset to take too,

30
00:01:45,310 --> 00:01:47,580
trying to do well in a machine
learning competition.

31
00:01:47,580 --> 00:01:49,700
Instead the mindset to have is,

32
00:01:49,700 --> 00:01:53,220
I have a lot of different ideas
that I think might work out.

33
00:01:53,220 --> 00:01:54,470
I want to experiment with them and

34
00:01:54,470 --> 00:01:58,170
explore to see how they work
in this specific problem, and

35
00:01:58,170 --> 00:02:01,535
I want to get through as many of these
ideas as possible, to find the couple

36
00:02:01,535 --> 00:02:04,285
that really matter and
the couple that make a big difference.

37
00:02:04,285 --> 00:02:08,294
One very common pattern that we've
seen amongst the winners is that they

38
00:02:08,294 --> 00:02:11,835
make hundreds to close to
a thousand submissions and

39
00:02:11,835 --> 00:02:18,480
they get through the iterative loop of
making a new results that measuring

40
00:02:18,480 --> 00:02:22,090
it's performance and then learning from
how it performed very, very quickly.

41
00:02:22,090 --> 00:02:23,547
And they optimize their environments and

42
00:02:23,547 --> 00:02:26,093
their workflows to get through that
iterative loop as fast as possible.

43
00:02:26,093 --> 00:02:30,136
[BLANK_AUDIO]

44
00:02:30,136 --> 00:02:35,750
The two most popular programming
languages are platform R R and Python.

45
00:02:35,750 --> 00:02:37,880
The scientific computing ecosystem for

46
00:02:37,880 --> 00:02:41,730
Python over the last five years
has really evolved and matured.

47
00:02:41,730 --> 00:02:46,305
The big advantage that people have when
they're working with Python is it's very

48
00:02:46,305 --> 00:02:49,300
easy to go from experimentation
to production code.

49
00:02:49,300 --> 00:02:53,065
And we have access to all
the capabilities, a rich and

50
00:02:53,065 --> 00:02:56,084
full featured programming language has.

51
00:02:56,084 --> 00:02:58,784
Then on the flip side,
R is really great for

52
00:02:58,784 --> 00:03:02,100
machine learning and
exploratory data analytics.

53
00:03:02,100 --> 00:03:05,510
However it doesn't necessarily have
the same set of web capabilities, for

54
00:03:05,510 --> 00:03:07,360
example, that Python has.

55
00:03:07,360 --> 00:03:10,740
So we see those two languages
as being the ones that

56
00:03:10,740 --> 00:03:13,960
are predominantly
successful on our platform.

57
00:03:13,960 --> 00:03:17,550
However it's by no
means limited to that,

58
00:03:17,550 --> 00:03:22,600
we see some people in competitions
using C++ or C# or Java as well but

59
00:03:22,600 --> 00:03:26,640
those are very much outliers,
more unusual results.

60
00:03:28,060 --> 00:03:33,130
One of the kind of things that's
funnier is we have many people

61
00:03:33,130 --> 00:03:36,860
participate in our competitions
using tools like SaaS.

62
00:03:36,860 --> 00:03:41,029
I think at one point I surveyed the user
base, about 20% of the user base used

63
00:03:41,029 --> 00:03:44,900
SaaS, however not a single person has
ever won a competition with SaaS.
