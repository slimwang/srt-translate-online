1
00:00:00,130 --> 00:00:02,320
Let's understand what happens when you click

2
00:00:02,320 --> 00:00:04,910
the mouse on your computer. Let's say you're

3
00:00:04,910 --> 00:00:09,030
running the Google Earth application and you select

4
00:00:09,030 --> 00:00:10,970
the point that you want to visit on

5
00:00:10,970 --> 00:00:13,380
the globe by clicking the mouse. When

6
00:00:13,380 --> 00:00:17,800
you click the mouse, first the hardware controller

7
00:00:17,800 --> 00:00:22,190
that is interfacing the mouse, which is a

8
00:00:22,190 --> 00:00:26,070
hardware device. To the system using the conduit

9
00:00:26,070 --> 00:00:30,030
of the bus is going to raise an interrupt

10
00:00:30,030 --> 00:00:32,200
on the interupt line which is one of the

11
00:00:32,200 --> 00:00:35,060
dedicated lines on the bus. This conduit, which I

12
00:00:35,060 --> 00:00:38,280
call the bus, contains, as you know, data lines and

13
00:00:38,280 --> 00:00:40,150
address lines and one of the things it also

14
00:00:40,150 --> 00:00:43,200
contains is an interrupt line or multiple interrupt lines.

15
00:00:43,200 --> 00:00:47,870
And the controller asserts this interrupt line to indicate

16
00:00:47,870 --> 00:00:51,060
to the CPU that it wants attention. It's sort of like,

17
00:00:51,060 --> 00:00:53,480
if I'm teaching a class and you all

18
00:00:53,480 --> 00:00:56,230
were a live audience. If you have a question,

19
00:00:56,230 --> 00:00:58,350
you might raise your hand and that's exactly

20
00:00:58,350 --> 00:01:01,090
what happens when you click the mouse. The equivalent

21
00:01:01,090 --> 00:01:05,140
of raising your hand in a classroom is

22
00:01:05,140 --> 00:01:08,790
what the controller is doing, but asserting the interrupt

23
00:01:08,790 --> 00:01:12,300
line on the bus. Asserting the interrupt line on

24
00:01:12,300 --> 00:01:16,380
the bus results in an interrupt to the CPU,

25
00:01:16,380 --> 00:01:18,670
now the processor at this point of time,

26
00:01:18,670 --> 00:01:21,960
is running some program. Perhaps your Google Earth

27
00:01:21,960 --> 00:01:24,260
application is being run on the CPU at

28
00:01:24,260 --> 00:01:27,690
this point of time. An interrupt is a hardware

29
00:01:27,690 --> 00:01:32,680
mechanism for alerting the processor that something external,

30
00:01:32,680 --> 00:01:35,440
in this case the mouse click, requires the

31
00:01:35,440 --> 00:01:38,170
attention of the processor. It's sort of like a

32
00:01:38,170 --> 00:01:42,020
doorbell in a house. Someone is ringing the doorbell,

33
00:01:42,020 --> 00:01:47,290
someone has got to pay attention to who is at the door. Remember that the CPU is

34
00:01:47,290 --> 00:01:49,930
a dumb animal. All it can do is execute

35
00:01:49,930 --> 00:01:54,620
instructions. Right now, it's executing some application. Now, an

36
00:01:54,620 --> 00:01:57,870
interrupt comes in, some other program has to run

37
00:01:57,870 --> 00:02:00,870
on it, in order to field that interrupt, answer

38
00:02:00,870 --> 00:02:03,780
the doorbell. Who's that entity? That is the operating

39
00:02:03,780 --> 00:02:07,700
system. The operating system, which is also a collection

40
00:02:07,700 --> 00:02:14,930
of programs, schedules itself to run on the processor so that it can answer the

41
00:02:14,930 --> 00:02:20,030
doorbell. So the operating system is the one that fields this interrupt, finds

42
00:02:20,030 --> 00:02:25,860
out, who it is intended for, and passes it to the program for appropriate

43
00:02:25,860 --> 00:02:30,130
action for this particular interrupt. This example

44
00:02:30,130 --> 00:02:33,700
of a mouse click and what happens between

45
00:02:33,700 --> 00:02:40,840
the hardware and the software is a good way to segue into the abstractions

46
00:02:40,840 --> 00:02:45,650
provided by an operating system for managing the hardware resources.
