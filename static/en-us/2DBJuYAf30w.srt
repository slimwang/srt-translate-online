1
00:00:00,350 --> 00:00:02,370
There's a lot to learn 
with making

2
00:00:02,370 --> 00:00:04,990
background transactions efficient,
but the good news

3
00:00:04,990 --> 00:00:07,470
is that Android gives you 
the SyncManager framework

4
00:00:07,470 --> 00:00:09,860
that implements many
of these best practices.

5
00:00:09,860 --> 00:00:13,190
You utilize that framework
by implementing a SyncAdapter.

6
00:00:13,190 --> 00:00:15,120
The framework, originally introduced

7
00:00:15,120 --> 00:00:18,845
in Android 2.0 Eclair
or Android API level 5,

8
00:00:18,845 --> 00:00:21,880
allows Android applications 
to leverage the same

9
00:00:21,880 --> 00:00:23,916
basic framework that Google apps

10
00:00:23,916 --> 00:00:25,952
use for efficient synchronization.

11
00:00:25,952 --> 00:00:28,060
Ultimately, it's a 
centralized place to put

12
00:00:28,060 --> 00:00:31,060
all of the device data transfers
in one place.

13
00:00:31,060 --> 00:00:34,820
So that they all be scheduled
intelligently by the OS.

14
00:00:34,820 --> 00:00:38,460
In other words, that's one big cookie!

15
00:00:38,460 --> 00:00:41,710
Android SyncManager handles 
synchronization requests

16
00:00:41,710 --> 00:00:43,463
using SyncAdapters.

17
00:00:43,463 --> 00:00:45,736
The SyncManager batches
and time shifts these requests,

18
00:00:45,736 --> 00:00:47,800
when possible, to allow 
your data transfers

19
00:00:47,800 --> 00:00:50,710
to be scheduled with transfers 
from other apps,

20
00:00:50,710 --> 00:00:53,600
all working towards the goal 
of reducing the number of times

21
00:00:53,600 --> 00:00:55,700
the system has 
to switch on the radio.

22
00:00:55,700 --> 00:00:58,100
If your device has less memory,

23
00:00:58,100 --> 00:01:01,620
it will schedule fewer 
simultaneous synchs.

24
00:01:01,620 --> 00:01:03,650
The SyncManager also
takes care of things

25
00:01:03,650 --> 00:01:06,980
like checking for network connectivity 
before initiating transfers

26
00:01:06,980 --> 00:01:10,060
and retrying downloads
when connectivity is dropped.

27
00:01:10,060 --> 00:01:12,873
The synchronization framework 
works with content providers

28
00:01:12,873 --> 00:01:15,686
for two way synchronization
and leverages

29
00:01:15,686 --> 00:01:17,840
the Android Account Manager to provide

30
00:01:17,840 --> 00:01:20,320
synchronization services 
that are tied to accounts.

31
00:01:20,320 --> 00:01:22,640
Our application will do neither
of these things,

32
00:01:22,640 --> 00:01:25,320
but we'll still have to deal 
with some of the complexity

33
00:01:25,320 --> 00:01:26,820
of these features.

34
00:01:26,820 --> 00:01:29,170
This can make SyncAdapter 
seem daunting at first.

35
00:01:29,170 --> 00:01:32,680
What does the SyncManager do 
to help you fetch

36
00:01:32,680 --> 00:01:35,230
data from the network?

37
00:01:35,230 --> 00:01:39,520
Does it schedule your network jobs 
with other apps,

38
00:01:39,520 --> 00:01:44,810
implement a syncrhonization protocol,
store account information,

39
00:01:44,810 --> 00:01:48,400
or has logic to retry your request?

40
00:01:48,442 --> 00:01:50,922
Select all of these that match.
