1
00:00:00,180 --> 00:00:02,640
For this programming exercise, you just needed to add a

2
00:00:02,640 --> 00:00:06,070
new layer onto our code, and that was the cord translayer.

3
00:00:06,070 --> 00:00:09,130
I'll pass at the y variable, and I'll set that

4
00:00:09,130 --> 00:00:11,790
y equal to square root, which is the function we'll use

5
00:00:11,790 --> 00:00:15,390
to transform the y axis. With this plot, it's much

6
00:00:15,390 --> 00:00:19,170
easier to see the distribution of friend count, conditional, and age.

7
00:00:19,170 --> 00:00:22,130
For example, we can see thresholds of friend count above

8
00:00:22,130 --> 00:00:25,370
which there are very few users. Now, you might have noticed

9
00:00:25,370 --> 00:00:28,770
I went back from geom_jitter to geom_point. If we wanted to

10
00:00:28,770 --> 00:00:31,610
also add jitter to the points, we'd have to use a bit

11
00:00:31,610 --> 00:00:34,840
more elaborate syntax to specify that we only want to jitter the

12
00:00:34,840 --> 00:00:38,150
ages. We also need to be careful since some people have a

13
00:00:38,150 --> 00:00:41,690
friend count of 0. If we add noise to 0 friend counts,

14
00:00:41,690 --> 00:00:44,260
we might end up with negative numbers for some of our friend

15
00:00:44,260 --> 00:00:47,260
counts and those square roots would be imaginary, okay. So to make

16
00:00:47,260 --> 00:00:50,420
this adjustment I'm going to set the position parameter equal to position

17
00:00:50,420 --> 00:00:54,560
jitter and then I'll pass it a minimum height of 0. This

18
00:00:54,560 --> 00:00:57,570
is a bit more advanced in terms of syntax but it prevents us

19
00:00:57,570 --> 00:00:59,090
from having that warning message and

20
00:00:59,090 --> 00:01:01,970
getting negative friend counts over here. Remember

21
00:01:01,970 --> 00:01:05,220
that jitter can add positive or negative noise to each of our points.
