1
00:00:00,420 --> 00:00:01,630
So let's take a look at the code

2
00:00:01,630 --> 00:00:05,030
for the set announcement servlet. You'll need to

3
00:00:05,030 --> 00:00:08,500
have imported the memcache service and the memcache

4
00:00:08,500 --> 00:00:11,630
service factory. Obviously import all the things you

5
00:00:11,630 --> 00:00:14,250
need for attp servlet, and you'll have to

6
00:00:14,250 --> 00:00:17,980
import the conference and the constants. The set

7
00:00:17,980 --> 00:00:23,230
announcement servlet extends http servlet, and then basically

8
00:00:23,230 --> 00:00:25,660
we write the logic to find out the conferences

9
00:00:25,660 --> 00:00:32,141
that are nearly sold out. So this is just a query. So we do the ofy.load. We're

10
00:00:32,141 --> 00:00:36,552
loading entities of kind conference. We're filtering first on

11
00:00:36,552 --> 00:00:39,505
seats available less than five, but there's no point

12
00:00:39,505 --> 00:00:41,881
in telling us about conferences that have no

13
00:00:41,881 --> 00:00:44,278
seats left at all. So obviously we need to

14
00:00:44,278 --> 00:00:47,279
filter on seat available at least one, ie, which

15
00:00:47,279 --> 00:00:50,669
is greater than, greater than zero. And then we

16
00:00:50,669 --> 00:00:53,054
create an array, and basically just add each of the

17
00:00:53,054 --> 00:00:56,280
conference names to the array. And then, if we do have

18
00:00:56,280 --> 00:00:59,320
some conferences, we're going to build a string that we're going to

19
00:00:59,320 --> 00:01:03,000
use as the announcement. We get the announcement key, which is

20
00:01:03,000 --> 00:01:05,690
stored in the Constants file. Obviously, we have to get

21
00:01:05,690 --> 00:01:08,690
the Memcache service, so we use the MemcacheServiceFactory to get the

22
00:01:08,690 --> 00:01:12,890
Memcache Service. We use announcement key, and we save our announcement in

23
00:01:12,890 --> 00:01:18,804
Memcache. We set the status of the response to 204.
