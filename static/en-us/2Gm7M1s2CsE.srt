1
00:00:00,000 --> 00:00:05,000
We need an input function that will return the command to be executed.

2
00:00:05,000 --> 00:00:12,000
If these were an interactive program, that is if we would run this in a console on our own machine,

3
00:00:12,000 --> 00:00:14,000
this is the command to be used until we could interact with it.

4
00:00:14,000 --> 00:00:19,000
This is what you can use on your own machine in order to get your debugger to work.

5
00:00:19,000 --> 00:00:23,000
In this web IDE, however, such an interactive program does not work,

6
00:00:23,000 --> 00:00:25,000
so we need to simulate this.

7
00:00:25,000 --> 00:00:30,000
So what we have here is, I have set up a list of predefined commands to execute.

8
00:00:30,000 --> 00:00:37,000
In here, this would be step, step, and quit, and we're using the method pop(0)

9
00:00:37,000 --> 00:00:42,000
to return the first element of the command list and at the same time also

10
00:00:42,000 --> 00:00:45,000
to remove the first element from the commands list.

11
00:00:45,000 --> 00:00:48,000
So the command is now missing its quit, so we have to add this.

12
00:00:48,000 --> 00:00:55,000
If we have a command that starts with quit, we call sys.exit of 0--meaning that our debugger exits.

13
00:00:55,000 --> 00:00:59,000
All is set now--initially, we do not step through the program,

14
00:00:59,000 --> 00:01:03,000
but we have a breakpoint in line 9 and in line 14.

15
00:01:03,000 --> 00:01:07,000
We want to execute three commands--step, step, and quit.

16
00:01:07,000 --> 00:01:12,000
What should happen is that execution is normal until it reaches line 9,

17
00:01:12,000 --> 00:01:16,000
then we step through two more lines and then we quit the program.

18
00:01:16,000 --> 00:01:22,000
Let's see whether this actually works and indeed--it has worked exactly as we wanted.

19
00:01:22,000 --> 00:01:28,000
First, we reached line 9, then we step--we reached line 11, then we step--we reached line 13,

20
00:01:28,000 --> 00:01:30,000
and then we quit and this is precisely the output we would have expected.
