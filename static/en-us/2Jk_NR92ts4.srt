1
00:00:00,000 --> 00:00:03,900
Now, the important thing to notice here is that clique is a maximization problem.

2
00:00:03,900 --> 00:00:07,310
That is, we're trying to find a clique that is as large as possible.

3
00:00:07,310 --> 00:00:10,680
So we have already found a clique with 100 vertices.

4
00:00:10,680 --> 00:00:15,370
So an optimum solution has to contain at least 100 vertices,

5
00:00:15,370 --> 00:00:19,410
because we already know that a clique of this size is contained in the input network.

6
00:00:19,410 --> 00:00:21,570
So this time, this 1 over here is easy.

7
00:00:21,570 --> 00:00:24,500
Now, what about the maximum number of vertices in an optimum solution?

8
00:00:24,500 --> 00:00:28,580
There could be a clique that is bigger than 100 vertices, but we just haven't found it.

9
00:00:28,580 --> 00:00:32,810
Well, since clique is a maximization problem, we have to plug it into this equation here.

10
00:00:32,810 --> 00:00:39,540
So our solution was 100 vertices which is ≥ 1/C.

11
00:00:39,540 --> 00:00:44,240
C is the approximation factor, 1/C x the optimum, and if we solve that equation,

12
00:00:44,240 --> 00:00:49,320
we find out that the optimum solution contains ≤ 200 vertices.

13
00:00:49,320 --> 00:00:52,450
So this gives you a good intuition: For a minimization problem,

14
00:00:52,450 --> 00:00:57,520
a factor-2 approximation algorithm means that we could have found a smaller solution,

15
00:00:57,520 --> 00:01:01,790
but it is limited by this factor-2, and for a maximization problem,

16
00:01:01,790 --> 00:01:06,480
we could have found a larger solution, but this is also limited by this factor-2,

17
00:01:06,480 --> 00:01:08,800
or, more precisely, by 1 over this factor of 2.

18
00:01:08,800 --> 00:01:11,470
So the factor here kind of gives us a range that tells us,

19
00:01:11,470 --> 99:59:59,999
in a worst case scenario, how far away we are from the optimum solution.
