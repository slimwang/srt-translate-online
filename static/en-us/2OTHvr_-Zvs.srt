1
00:00:00,120 --> 00:00:04,596
So here's the answers. That a dynamic language will require less code. And there

2
00:00:04,596 --> 00:00:07,470
are two reasons for that. One is because you don't need all the type

3
00:00:07,470 --> 00:00:11,515
declarations. The other is code can be more versatile, in our python code we can

4
00:00:11,515 --> 00:00:15,734
write a double procedure that works on both numbers and strings. Probably a bad

5
00:00:15,734 --> 00:00:19,862
idea, but we can do it. With a statically typed language like Java, there's no

6
00:00:19,862 --> 00:00:22,790
way to do that. You've got to write different procedures if you want them to

7
00:00:22,790 --> 00:00:26,395
work on different types. A static language would be less likely for programs to

8
00:00:26,395 --> 00:00:30,091
crash and the reason for that is because you find your bugs earlier. You find

9
00:00:30,091 --> 00:00:33,642
them when you compile the program before their program is running, at least some

10
00:00:33,642 --> 00:00:38,122
of the bugs. The more fun is a fairly subjective question. I'm going to go with

11
00:00:38,122 --> 00:00:41,834
dynamic as more fun and it's more fun 'cause usually get things to happen more

12
00:00:41,834 --> 00:00:45,928
quickly. It requires less effort to get a program working and behaving, pretty

13
00:00:45,928 --> 00:00:49,216
close to correct. If it's a static language you have to get you program a lot

14
00:00:49,216 --> 00:00:53,180
closer to correct before you can start playing with it. It's also easier to make

15
00:00:53,180 --> 00:00:56,897
changes in a dynamic language. Other people might disagree and one problem with

16
00:00:56,897 --> 00:01:00,431
that dynamic language, when all is going well, you can be nice and happy, if

17
00:01:00,431 --> 00:01:04,193
things start to break with a dynamic language, you might have a much harder time

18
00:01:04,193 --> 00:01:08,238
figuring out what's wrong than you would with a static language. But I'll stick

19
00:01:08,238 --> 00:01:12,926
with my dynamic answer and I hope you enjoy Paranian Python. Which is a

20
00:01:12,926 --> 00:01:17,242
dynamically typed language. Programs should execute faster, if they're written

21
00:01:17,242 --> 00:01:21,531
as statically typed language. This depends a lot on the language. And the tools

22
00:01:21,531 --> 00:01:25,130
that are used to do this and there's been a lot of improvements in making

23
00:01:25,130 --> 00:01:29,420
dynamically typed languages run fast. But the execution tools have an advantage

24
00:01:29,420 --> 00:01:33,337
in a statically typed language. There's less that they have to determine at run

25
00:01:33,337 --> 00:01:36,535
time, and there's more they can do in advance. So they should still always be

26
00:01:36,535 --> 00:01:41,653
able to run fast. Finally, which one is better for programming avionics? Well,

27
00:01:41,653 --> 00:01:45,488
you really don't want to discover your type errors when you're at 30,000 feet,

28
00:01:45,488 --> 00:01:49,505
much better to discover them before you take off. So there, static languages

29
00:01:49,505 --> 00:01:50,683
have a big advantage.
