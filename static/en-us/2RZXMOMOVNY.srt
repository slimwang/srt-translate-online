1
00:00:00,280 --> 00:00:02,280
There's an old saying in AI,

2
00:00:02,280 --> 00:00:06,210
which goes like, if you have the right knowledge representation,

3
00:00:06,210 --> 00:00:10,990
problem solving becomes very easy. Let's see whether that also works here.

4
00:00:10,990 --> 00:00:14,410
We now have a knowledge representation for this problem of guards and prisoners.

5
00:00:15,480 --> 00:00:19,230
Does this knowledge representation immediately afford effective problem solving?

6
00:00:20,300 --> 00:00:25,530
So, here we are in the first node, the first state. There are three guards and

7
00:00:25,530 --> 00:00:29,650
three prisoners in the boat, all in the left-hand side. Let us see what moves

8
00:00:29,650 --> 00:00:34,280
are possible from this initial state. Now, using this representation, we can

9
00:00:34,280 --> 00:00:39,430
quickly figure out that there are five possible moves from the initial state.

10
00:00:39,430 --> 00:00:45,590
And the first move, we move only guard to the right. On the second move,

11
00:00:45,590 --> 00:00:50,800
we move a guard and a prisoner to the right. In the third move, we can move two

12
00:00:50,800 --> 00:00:56,460
guards, or two prisoners. Or, in the fifth move, just one prisoner to the right.

13
00:00:56,460 --> 00:01:02,290
Five possible moves. Of course, we know that some of these moves are illegal and

14
00:01:02,290 --> 00:01:06,510
some of them are likely to be not very productive. Will the semantic network

15
00:01:06,510 --> 00:01:09,950
allow us to make inferences about which moves are productive and

16
00:01:09,950 --> 00:01:13,450
which moves are not productive? Let's see further. So, let's look at

17
00:01:13,450 --> 00:01:18,090
the legal moves first. So we can immediately make out from this representation,

18
00:01:18,090 --> 00:01:21,970
that the first move is not legal because we are not allowed to

19
00:01:21,970 --> 00:01:27,750
have more prisoners than guards on one side, of the river.

20
00:01:27,750 --> 00:01:32,460
Similarly, we know that the third move is illegal for the same reason.

21
00:01:32,460 --> 00:01:35,810
So, we can immediately rule out the first and the third moves. The fifth move,

22
00:01:35,810 --> 00:01:41,370
too, can be ruled out. Let's see how. We have one prisoner on the other side.

23
00:01:41,370 --> 00:01:44,350
But the only way to go back would be to take the prisoner to the,

24
00:01:44,350 --> 00:01:47,990
back to the previous side. And if we do that, we reach the initial state.

25
00:01:47,990 --> 00:01:51,580
So we did not make any forward progress. Therefore, we can rule out this move

26
00:01:51,580 --> 00:01:57,110
as well. This leaves us with two possible moves that are both legal and

27
00:01:57,110 --> 00:02:01,060
productive. The, we have already removed the moves that were not legal and

28
00:02:01,060 --> 00:02:06,440
not productive. Later, we will see how AI programs can use various

29
00:02:06,440 --> 00:02:10,419
methods to figure out what moves are productive and what moves are unproductive.

30
00:02:10,419 --> 00:02:13,290
For the time being, let's go along with our problem solving.
