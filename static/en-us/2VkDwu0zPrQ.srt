1
00:00:00,230 --> 00:00:02,958
Implementing remove lowest this way was nice because we already had these

2
00:00:02,958 --> 00:00:07,165
methods and we could just use them. And this almost reads like a kind of

3
00:00:07,165 --> 00:00:12,030
English now. What's the low score, find the low score, remove the low score.

4
00:00:12,030 --> 00:00:16,664
But these first two steps were kind of repetitive. In this example we had to go

5
00:00:16,664 --> 00:00:22,170
through every item to find what the lowest one was. And then go through them

6
00:00:22,170 --> 00:00:26,356
again to find the index of it. If this were a very long array with millions of

7
00:00:26,356 --> 00:00:30,200
items in it, we wouldn't want to have to go through all of the data twice just

8
00:00:30,200 --> 00:00:34,868
to get the location. We would want to think a little deeper and try to combine

9
00:00:34,868 --> 00:00:39,158
some of these loops. So, what if we had a method, getlowScorePosition, that

10
00:00:39,158 --> 00:00:42,812
would replace the two steps of finding the minimum element and also finding

11
00:00:42,812 --> 00:00:44,757
it's index.
