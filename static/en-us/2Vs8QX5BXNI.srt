1
00:00:00,068 --> 00:00:02,480
The rules of the programming model are just as simple.

2
00:00:02,480 --> 00:00:06,310
They are based on something called composability. Let me tell you a little bit about that.

3
00:00:06,310 --> 00:00:11,147
If you recall how CUDA works, kernels launched into a given stream are interdependent.

4
00:00:11,147 --> 00:00:15,051
That means that in this case, for example, B cannot run before A has finished,

5
00:00:15,051 --> 00:00:17,153
and C cannot run before B has finished.

6
00:00:17,153 --> 00:00:20,808
It's how CUDA streams work, which I think you probably learned about in a previous lecture.

7
00:00:20,808 --> 00:00:27,898
So if B creates its own work X, Y, Z, we call this child work to B

8
00:00:27,898 --> 00:00:36,245
where B is the parent of X, Y and Z. Now composability says that whatever B does is entirely private to B.

9
00:00:36,245 --> 00:00:41,681
That means C has no idea and quite honestly doesn't care what B is doing.

10
00:00:41,681 --> 00:00:47,757
B is not considered to have finished until all of its other children, X, Y, and Z in this case, have also finished,

11
00:00:47,757 --> 00:00:51,254
so A, B and C still execute in sequence as expected,

12
00:00:51,254 --> 00:00:58,230
and B follows the rules of composability such that whatever B does has no effect on Cs ability to execute.

13
00:00:58,230 --> 00:01:05,441
So, in effect, B actually looks like a single kernel, even though internally it is doing all of these other steps.

14
00:01:05,441 --> 00:01:09,524
So it does not just stop here. Note you can have child kernels start their own children,

15
00:01:09,524 --> 00:01:11,840
P, Q and R in this case for example,

16
00:01:11,840 --> 00:01:17,143
so you have got grandchildren of B, you can go on to generations of great, great, great grandchildren if you like,

17
00:01:17,143 --> 00:01:21,816
until you run out of memory, the point being that it all composes and stacks back

18
00:01:21,816 --> 00:01:24,985
into looking like it's a single part of B, and that's composability.
