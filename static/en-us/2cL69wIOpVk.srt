1
00:00:00,390 --> 00:00:03,320
So, lets assume for now that we have a perfect hash

2
00:00:03,320 --> 00:00:07,670
function. That it distributes keys evenly across all the buckets. And then

3
00:00:07,670 --> 00:00:10,640
the question is which of the following will leave the expected

4
00:00:10,640 --> 00:00:14,040
look up time for a given keyword essentially unchanged. For the first

5
00:00:14,040 --> 00:00:16,890
choice is we can double the number of keywords, without changing

6
00:00:16,890 --> 00:00:19,550
the number of buckets. The second choice is we can keep the

7
00:00:19,550 --> 00:00:22,900
number of keywords the same. But double the number of buckets.

8
00:00:22,900 --> 00:00:25,410
The third choice is, we can double the number of keywords and

9
00:00:25,410 --> 00:00:27,600
double the number of buckets. The fourth choice

10
00:00:27,600 --> 00:00:29,960
is we can halve the number of keywords, keeping

11
00:00:29,960 --> 00:00:32,360
the number of buckets the same. And the final

12
00:00:32,360 --> 00:00:35,010
choice is we can have half as many keywords,

13
00:00:35,010 --> 00:00:36,970
and half as many buckets. And the question

14
00:00:36,970 --> 00:00:38,580
is, which of these five, and there could be

15
00:00:38,580 --> 00:00:42,050
more than one that's correct, Will essentially leave the

16
00:00:42,050 --> 00:00:44,580
time it takes to look up a keyword unchanged.
