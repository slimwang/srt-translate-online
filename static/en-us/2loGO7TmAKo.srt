1
00:00:00,400 --> 00:00:02,300
When dealing with strings in Java,

2
00:00:02,300 --> 00:00:05,190
an important concept to understand
is string concatenation.

3
00:00:05,190 --> 00:00:07,190
Now that's a really big word, but

4
00:00:07,190 --> 00:00:10,980
it just means we're joining character
strings together end to end.

5
00:00:10,980 --> 00:00:12,680
If this is a string and
this is a string,

6
00:00:12,680 --> 00:00:16,740
you can combine them by concatenating
them to make an even longer string.

7
00:00:16,740 --> 00:00:20,750
To concatenate these strings together,
we use the plus operator.

8
00:00:20,750 --> 00:00:24,000
This is the same addition
symbol that we know from math.

9
00:00:24,000 --> 00:00:29,180
Just like you can add numbers together,
you can concatenate strings together.

10
00:00:29,180 --> 00:00:30,750
Let's look at an example.

11
00:00:30,750 --> 00:00:35,220
Say I have three different strings,
one string literal says I need,

12
00:00:35,220 --> 00:00:36,940
another string literal
says 2 cups of coffee,

13
00:00:36,940 --> 00:00:39,620
and another string
literal says on Monday.

14
00:00:39,620 --> 00:00:43,100
I can use the plus symbol to
concatenate all these strings together.

15
00:00:44,190 --> 00:00:49,350
That forms a ginormous string that
says I need2 cups of coffeeon Monday.

16
00:00:49,350 --> 00:00:52,590
Whenever I see something like this,
I imagine the plus symbols are gone, and

17
00:00:52,590 --> 00:00:54,190
I imagine the quotes are gone, and

18
00:00:54,190 --> 00:00:57,140
I just imagine literally squishing
all of these things together.

19
00:00:58,250 --> 00:01:01,650
And when I say squished,
we're really squishing them together.

20
00:01:01,650 --> 00:01:06,420
There's even no extra space in
between this string and this string.

21
00:01:06,420 --> 00:01:07,700
If you want to add a space here,

22
00:01:07,700 --> 00:01:13,125
you would have to explicitly add a space
in this string literal at the end of it,

23
00:01:13,125 --> 00:01:15,985
or you add a space at the beginning
of this string literal.

24
00:01:17,125 --> 00:01:18,645
Same with coffeeon Monday.

25
00:01:18,645 --> 00:01:22,845
I want a space here, so I'd have to
either add it at the end of this string

26
00:01:22,845 --> 00:01:23,995
or the beginning of this string.

27
00:01:25,065 --> 00:01:27,495
I added a space here and
a space here, so

28
00:01:27,495 --> 00:01:29,705
when I concatenate all of this together,

29
00:01:29,705 --> 00:01:34,300
I squish them together, and the sentence
comes out correct like this.

30
00:01:34,300 --> 00:01:36,630
There's a space here and a space here.

31
00:01:36,630 --> 00:01:39,743
Adding spaces in the right place is
a little bit tricky because you have

32
00:01:39,743 --> 00:01:42,330
the quotation marks everywhere and
the plus symbols, and

33
00:01:42,330 --> 00:01:44,750
there's even spaces
around the plus symbol.

34
00:01:44,750 --> 00:01:47,620
But these spaces around the plus
symbol don't contribute

35
00:01:47,620 --> 00:01:50,025
to the overall display string.

36
00:01:50,025 --> 00:01:53,010
The space must be inside
the double quotes.

37
00:01:53,010 --> 00:01:55,220
Here's an example of string
concatenation in our app.

38
00:01:55,220 --> 00:01:58,234
I'm going to change the text so

39
00:01:58,234 --> 00:02:02,900
that it says "Amount due " + "$10".

40
00:02:02,900 --> 00:02:05,910
I'm concatenating this string
literal with this string literal.

41
00:02:07,190 --> 00:02:08,310
When I run it on my device, and

42
00:02:08,310 --> 00:02:12,770
then I hit the order button,
then I see Amount Due $10.

43
00:02:12,770 --> 00:02:17,490
You can also concatenate strings
with integers like I have here.

44
00:02:17,490 --> 00:02:19,590
Before, the ten was in quotes so

45
00:02:19,590 --> 00:02:22,830
that was a string representation
of the number ten.

46
00:02:22,830 --> 00:02:27,530
But here I just have 100 without quotes,
so this is the integer value for 100.

47
00:02:27,530 --> 00:02:31,470
If I concatenate a string
with an integer,

48
00:02:31,470 --> 00:02:34,590
then it immediately turns this
whole thing into a string.

49
00:02:34,590 --> 00:02:38,360
If I hit the Order button, then I
see $100 showing up on the screen.

50
00:02:38,360 --> 00:02:41,210
In a moment, I'll have you play around
with string concatenation to try

51
00:02:41,210 --> 00:02:42,900
different values.

52
00:02:42,900 --> 00:02:46,290
You could get compile errors,
so be careful of those.

53
00:02:46,290 --> 00:02:49,580
If I forget a closing quote,
I could get an error.

54
00:02:49,580 --> 00:02:52,180
In a moment, I'll have you play
around with string concatenation and

55
00:02:52,180 --> 00:02:53,890
try different values.

56
00:02:53,890 --> 00:02:56,280
According to Android
code style guidelines,

57
00:02:56,280 --> 00:02:59,050
we should have a space before and
after each operator.

58
00:02:59,050 --> 00:03:01,900
And this string concatenation
operator counts as an operator.

59
00:03:03,080 --> 00:03:05,480
Now it's your turn to
practice in your app.

60
00:03:05,480 --> 00:03:08,710
Experiment with combining different
strings using the plus operator.

61
00:03:08,710 --> 00:03:12,420
You can also combine it with
integer literal values as well.

62
00:03:12,420 --> 00:03:14,640
Once you feel comfortable
with string concatenation,

63
00:03:14,640 --> 00:03:16,200
I want you to answer these questions.
