1
00:00:00,280 --> 00:00:02,050
Okay, so let's look at the solution for

2
00:00:02,050 --> 00:00:06,460
this part of the quiz. Do we dispatch an instruction in cycle five?

3
00:00:06,460 --> 00:00:10,090
No we do not. All of these instructions are waiting for

4
00:00:10,090 --> 00:00:15,380
something to be broadcast. So until we actually broadcast some results, and

5
00:00:15,380 --> 00:00:20,020
these instructions can capture the values, they will not be able to dispatch.

6
00:00:20,020 --> 00:00:24,530
Both of them are waiting for something. So this should be empty.

7
00:00:25,670 --> 00:00:31,780
Do we write any results? Yes. The instruction in ROB3 is an add.

8
00:00:31,780 --> 00:00:37,470
It began executing in cycle four. It takes one cycle to execute. So

9
00:00:37,470 --> 00:00:42,810
in cycle five it will write its result. So the correct answer here is ROB3.

10
00:00:42,810 --> 00:00:47,330
This is which instruction writes its result in cycle five.

11
00:00:47,330 --> 00:00:53,048
As a result of this right result. In cycle five, we mark this

12
00:00:53,048 --> 00:00:58,660
ROB3 entry as done. The value of three is broadcast with the tag of ROB3.

13
00:00:58,660 --> 00:01:04,450
It gets captured here because this instruction is waiting for ROB3. So in fact,

14
00:01:05,600 --> 00:01:09,160
because we can dispatch this instruction in the same cycle, in cycle five.

15
00:01:09,160 --> 00:01:15,210
This subtract does dispatch. So the instruction in ROB5 will dispatch,

16
00:01:16,330 --> 00:01:20,570
and it will begin executing in cycle six. So this is somewhat of a trick

17
00:01:20,570 --> 00:01:24,760
question because you needed to first figure out that this write result happens,

18
00:01:24,760 --> 00:01:28,810
and as a result of this we enabled the dispatch of this instruction. So

19
00:01:28,810 --> 00:01:33,210
it's kind of interesting in that in this cycle this instruction has been issued.

20
00:01:33,210 --> 00:01:35,650
Captured a result and dispatched.
