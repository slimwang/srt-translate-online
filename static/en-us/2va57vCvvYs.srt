1
00:00:00,190 --> 00:00:04,120
Map coloring is another classic
example of constraint satisfaction.

2
00:00:04,120 --> 00:00:07,089
>> We are trying to color this map of
Australia using the minimum number of

3
00:00:07,089 --> 00:00:11,070
colors possible, but making sure that no
neighboring regions have the same color.

4
00:00:11,070 --> 00:00:12,500
>> I guess if they had the same color,

5
00:00:12,500 --> 00:00:16,160
it'd be hard to tell where one territory
stopped and where the next began.

6
00:00:16,160 --> 00:00:19,379
>> Exactly, we can set up the problem
more formally by first listing

7
00:00:19,379 --> 00:00:22,559
all the variables,
in this case the territories.

8
00:00:22,559 --> 00:00:25,829
>> And the possible colors of the
territories are listed as the domains

9
00:00:25,829 --> 00:00:26,779
of the problem.

10
00:00:26,780 --> 00:00:28,350
>> Finally the rules of the problem,

11
00:00:28,350 --> 00:00:31,840
that no territory can be assigned the
same color as a neighboring territory,

12
00:00:31,839 --> 00:00:33,740
are listed as the constraints.

13
00:00:33,740 --> 00:00:38,030
>> We can do that explicitly by listing
all the possible pairwise constraints,

14
00:00:38,030 --> 00:00:41,740
like how Western Australia's color can't
be the same as the Northern Territory.

15
00:00:41,740 --> 00:00:43,710
Or we could list all
the allowable assignments for

16
00:00:43,710 --> 00:00:45,500
each pair of territories.

17
00:00:45,500 --> 00:00:48,450
>> A solution is an assignment of
colors to each of the territories that

18
00:00:48,450 --> 00:00:50,520
satisfied all of the constraints.

19
00:00:50,520 --> 00:00:52,140
>> I always wanted to
paint Australia red.

