1
00:00:00,330 --> 00:00:03,690
In this section, we explore Storm's multi-language capabilities by

2
00:00:03,690 --> 00:00:06,140
readying a bolt in Python.

3
00:00:06,140 --> 00:00:08,960
Due to implementation details Python is rarely used in

4
00:00:08,960 --> 00:00:12,920
production Storm topologies due to Python's inefficiencies.

5
00:00:12,920 --> 00:00:16,484
However, Python is useful as a prototype or low usage process.

6
00:00:16,484 --> 00:00:17,044
And many of our

7
00:00:17,044 --> 00:00:20,630
Udacity students are more comfortable with Python compared to Java.

8
00:00:20,630 --> 00:00:22,750
Let's get started with basic usage.

9
00:00:22,750 --> 00:00:25,049
In step 0, navigate to Lesson 3, Stage 1 and

10
00:00:25,049 --> 00:00:29,320
remember to add your Twitter credentials into the TweetTopology.java file.

11
00:00:29,320 --> 00:00:34,060
Also you'll need to install the Beautiful Soup python module in Ubuntu.

12
00:00:34,060 --> 00:00:41,081
In your virtual machine run the following command sudo space apt-get

13
00:00:41,081 --> 00:00:46,447
install python-bs4 this stands for super user do.

14
00:00:46,447 --> 00:00:50,830
And install command for Ubuntu for the python module, beautiful soup.

15
00:00:50,830 --> 00:00:54,950
You can simply copy and paste the command and after downloading,

16
00:00:54,950 --> 00:00:57,350
you'll see your command prompt once again.

17
00:00:57,350 --> 00:01:02,470
Next, in Step 1, maven requires a folder resources to contain the storm.py and

18
00:01:02,470 --> 00:01:04,250
all python files.

19
00:01:04,250 --> 00:01:07,910
We need to register in the folder location in the palm.xml file.

20
00:01:07,910 --> 00:01:09,960
Scrolling up in the TweetTopology file,

21
00:01:11,030 --> 00:01:15,155
you'll see the section, ADDING MAVEN RESOURCES FOR PYTHON SHELL.

22
00:01:15,155 --> 00:01:22,230
Open your pom.xml file here and add in your Maven resources here.

23
00:01:22,230 --> 00:01:26,750
Once you've added in the Maven resource file, in Step 2 in your text editor or

24
00:01:26,750 --> 00:01:30,909
command line, add a Resources folder to /storm.

25
00:01:32,330 --> 00:01:35,020
This new resources folder allows Maven to

26
00:01:35,020 --> 00:01:40,300
package your python files in the resources directory within your final jar file.

27
00:01:40,300 --> 00:01:42,888
You're now ready to write python bolts.

28
00:01:42,888 --> 00:01:45,050
In Step 3 in your browser,

29
00:01:45,050 --> 00:01:48,060
find the Storm multilang resources by following the link below.

30
00:01:49,460 --> 00:01:53,400
In Step 4, create new files, copy and paste Storm.py and

31
00:01:53,400 --> 00:01:57,630
split sentence py into your resources directory created in Step 2.

32
00:01:57,630 --> 00:02:01,290
In step 5 you can review the usage of python bolts linked to

33
00:02:01,290 --> 00:02:04,240
Java in WordCountTopology here.

34
00:02:04,240 --> 00:02:07,630
And in Step 6 we see that the inner class SplitSentence extends

35
00:02:07,630 --> 00:02:11,260
Shellbolt implements IRichBolt is needed.

36
00:02:11,260 --> 00:02:14,190
In Step 7, create a new file in your Storm folder.

37
00:02:14,190 --> 00:02:16,140
Not the resources folder.

38
00:02:16,140 --> 00:02:19,540
And name the file SplitSentence.java.

39
00:02:19,540 --> 00:02:23,440
Copy and paste the interclass SplitSentence into your new java file along with

40
00:02:23,440 --> 00:02:25,119
the required import statements.

41
00:02:26,360 --> 00:02:30,275
Remember as well that your package structure needs to change to Udacity.storm.

42
00:02:31,410 --> 00:02:34,340
And to complete your split sentence class definition in step eight,

43
00:02:34,340 --> 00:02:35,510
remove the static statement.

44
00:02:35,510 --> 00:02:38,950
Since you are now defining a class instead of a static nested class.

45
00:02:38,950 --> 00:02:43,339
In Step 9, update your topology to use the SplitSentence bolt that

46
00:02:43,339 --> 00:02:47,190
internally calls the python program splitsentence.py.

47
00:02:48,210 --> 00:02:50,950
You answer the implementation question, what grouping is needed for

48
00:02:50,950 --> 00:02:51,720
this topology link.

49
00:02:52,810 --> 00:02:55,580
Finally, in Step 10, package and run your topology.

50
00:02:55,580 --> 00:02:58,690
When one's completed, you'll see the visualization will be the split sentence

51
00:02:58,690 --> 00:03:01,070
word count using a python bolt.

52
00:03:01,070 --> 00:03:02,993
Remember that your code should now match Lesson 2,

53
00:03:02,993 --> 00:03:07,410
Stage 2 for reference, including file structure and Palm to XML file.

54
00:03:07,410 --> 00:03:08,370
Good luck with the assignment
