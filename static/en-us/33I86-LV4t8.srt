1
00:00:00,280 --> 00:00:03,362
I could also write the function
reverseString like this.

2
00:00:03,362 --> 00:00:07,160
Here forwardString is a second name for
the parameter being passed in.

3
00:00:08,189 --> 00:00:13,450
Undoubtedly you're wondering, as i was,
why does this parameter need two names?

4
00:00:13,450 --> 00:00:16,580
stringToReverse is
the local parameter name.

5
00:00:16,580 --> 00:00:20,820
You can see here that it's used locally,
inside the function itself.

6
00:00:20,820 --> 00:00:25,940
This other parameter name forwardString
is the external parameter name, and

7
00:00:25,940 --> 00:00:29,570
it's used externally, in other
words when the function is called.

8
00:00:29,570 --> 00:00:31,730
We'll see more external
parameters in a minute,

9
00:00:31,730 --> 00:00:33,599
when we talk about how
to call functions.

10
00:00:34,760 --> 00:00:38,395
So to update our model,
functions can take this general form.

11
00:00:38,395 --> 00:00:40,899
When you see a name on
the left with no colon,

12
00:00:40,899 --> 00:00:45,326
that's the external parameter name,
and the local parameter name is here.

13
00:00:45,326 --> 00:00:48,217
Now, if you think this is weird,
you're right.

14
00:00:48,217 --> 00:00:52,315
This syntax is very peculiar and
particular to Swift.

15
00:00:52,315 --> 00:00:55,185
And if you think two parameter
names seems excessive,

16
00:00:55,185 --> 00:00:56,765
you would have a good argument.

17
00:00:56,765 --> 00:00:58,485
I won't go into why it's like this, but

18
00:00:58,485 --> 00:01:00,775
it has to do with Swift's
ancestry in Objective C.
