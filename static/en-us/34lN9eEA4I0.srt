1
00:00:00,000 --> 00:00:05,000
So the first thing to observe is that no non-tree edge can be a bridge.

2
00:00:05,000 --> 00:00:08,000
They have to be the green edges not the red edges, and why is that?

3
00:00:08,000 --> 00:00:11,000
Well, the red edges are the ones that get added for a node

4
00:00:11,000 --> 00:00:13,000
that had already been reached by some other path.

5
00:00:13,000 --> 00:00:18,000
So the red edges can't be bridge edges it's because deleting the red edge--the node

6
00:00:18,000 --> 00:00:22,000
from both sides of these were reachable from the beginning some other way.

7
00:00:22,000 --> 00:00:29,000
Next, we can test whether or not a given node is in the subtree rooted at--at some node W,

8
00:00:29,000 --> 00:00:32,000
pretty simply using the numbers that we've already calculated.

9
00:00:32,000 --> 00:00:38,000
Post order of W, the number of descendants of W, and the high and low values and why is that.

10
00:00:38,000 --> 00:00:43,000
So when we go to do the post ordering at W, we go it down here,

11
00:00:43,000 --> 00:00:47,000
we number somebody, then we number everybody, then we number W itself.

12
00:00:47,000 --> 00:00:51,000
The post order number of everyone in here has to be less than the post order of the value of W

13
00:00:51,000 --> 00:00:57,000
but the total number of numbers in these set they're all--they're all continuous, they're all in order

14
00:00:57,000 --> 00:01:02,000
and the total of numbers--numbers in this set is blue is the number of descendants.

15
00:01:02,000 --> 00:01:08,000
So black minus blue is one smaller than the smallest number in this collection.

16
00:01:08,000 --> 00:01:12,000
That property is kind of obvious, perhaps, but we were almost there.

17
00:01:12,000 --> 00:01:19,000
The only way that this edge is not a bridge is if there's some non tree edge

18
00:01:19,000 --> 00:01:25,000
that takes us out somehow and connects to something else in the tree.

19
00:01:25,000 --> 00:01:30,000
Now what would happen to the H value or the L value if we had one of these edges.

20
00:01:30,000 --> 00:01:34,000
Remember the H value and the L value were defined specifically to be

21
00:01:34,000 --> 00:01:37,000
well, you follow a bunch of green edges and then you follow one red edge.

22
00:01:37,000 --> 00:01:45,000
Well, if a red edge takes us to in a sort of in the left of this tree, then the in order value is going to be

23
00:01:45,000 --> 00:01:50,000
outside of this range and it pretty good will be too small and that we'll tell us

24
00:01:50,000 --> 00:01:54,000
that we've link to something outside to the left.

25
00:01:54,000 --> 00:01:58,000
If we link to something outside to the right then the H number is going to be bigger than

26
00:01:58,000 --> 00:02:04,000
the in order value of W and similarly if we hop up to high that same thing happens it's because

27
00:02:04,000 --> 00:02:09,000
that the blobs in here, the nodes in this blob all have exactly the values in here.

28
00:02:09,000 --> 00:02:13,000
Anything that connects outside of their is going to

29
00:02:13,000 --> 00:02:17,000
cause either the H value or the L value to pop outside of this range.

30
00:02:17,000 --> 00:02:21,000
So with those values in hand, we have a very easy test to see whether or not

31
00:02:21,000 --> 00:02:25,000
there's some red edge that will actually connect up the graph in a way

32
00:02:25,000 --> 00:02:28,000
that this is no longer a bridge and that's all we need to do.

33
00:02:28,000 --> 00:02:33,000
Now in the homework, I'm going to ask you to actually carry out this test on a real graph.

34
00:02:33,000 --> 00:02:38,000
Actually code it up and it's not terrible but it is a little bit tricky.

35
00:02:38,000 --> 00:02:43,000
You have to be very careful to figure out how to compute the post order values

36
00:02:43,000 --> 00:02:49,000
the number of descendants H and L without taking a lot of running time in the graph.

37
00:02:49,000 --> 00:02:52,000
Really needs to be able to do it essentially with

38
00:02:52,000 --> 00:02:56,000
one or two sweeps through the set of all the nodes and edges in the graphs.

39
00:02:56,000 --> 00:02:58,000
But you can do it--I have confidence.
