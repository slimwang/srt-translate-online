1
00:00:00,730 --> 00:00:05,260
The first step in your project should
be to think about the database schema.

2
00:00:05,260 --> 00:00:07,570
Remember to write your
create table statements in

3
00:00:07,570 --> 00:00:09,580
a file called tournament.sql.

4
00:00:09,580 --> 00:00:14,100
You'll be submitting this along with
your code as part of your final project.

5
00:00:14,100 --> 00:00:17,270
Remember that after you've created your
database, if you decide you've made

6
00:00:17,270 --> 00:00:22,930
a mistake, you can always drop a table,
or the whole database and recreate it.

7
00:00:22,930 --> 00:00:27,140
And if you need to clear out the data
in a table, you can use delete.

8
00:00:27,140 --> 00:00:29,950
Remember that drop table will
remove the table completely, and

9
00:00:29,950 --> 00:00:33,170
you will have to recreate it
using the recreate table command.

10
00:00:33,170 --> 00:00:37,010
Whereas delete from that table
will just remove the rows leaving

11
00:00:37,010 --> 00:00:39,340
the column definitions,
constraints, and so forth.

12
00:00:39,340 --> 00:00:39,840
Intact.

13
00:00:41,200 --> 00:00:43,230
A few more things to keep in mind.

14
00:00:43,230 --> 00:00:46,420
When players are added to a tournament
the database should assign each

15
00:00:46,420 --> 00:00:48,460
player a unique ID.

16
00:00:48,460 --> 00:00:51,460
You've seen how to do that
using the serial type.

17
00:00:51,460 --> 00:00:52,740
There's an extra credit option,

18
00:00:52,740 --> 00:00:55,620
where you can extend the project
to support multiple tournaments.

19
00:00:55,620 --> 00:00:59,060
If you do that you'll want
unique IDs for those too.

20
00:00:59,060 --> 00:01:02,020
Second, remember that you
can use SQL aggregations,

21
00:01:02,020 --> 00:01:04,360
when you want to count things or
add them up.

22
00:01:04,360 --> 00:01:07,410
If you find yourself pulling lots of
rows from the database into your code,

23
00:01:07,410 --> 00:01:11,740
and then using len to count them,
or using a loop to add them up,

24
00:01:11,740 --> 00:01:14,600
trying doing that in
the database query instead.

25
00:01:14,600 --> 00:01:17,760
Last, if you notice your queries
start to get really complicated,

26
00:01:17,760 --> 00:01:20,060
don't forget about views.

27
00:01:20,060 --> 00:01:21,820
Views work nicely with aggregations,

28
00:01:21,820 --> 00:01:24,350
when you want to present
summary data quickly.

29
00:01:24,350 --> 00:01:27,310
If you use views,
make sure to put your create view

30
00:01:27,310 --> 00:01:31,350
statements into tournament.sql,
along with your create tables.

31
00:01:31,350 --> 00:01:34,180
With that, it's time to get into
designing your database and

32
00:01:34,180 --> 00:01:35,270
writing your code.

33
00:01:35,270 --> 00:01:37,910
On the next page, you'll find a full
description of the project, and

34
00:01:37,910 --> 00:01:39,460
an outline of the functions
you'll be writing.
