1
00:00:00,220 --> 00:00:03,610
In this exercise, we start with a square tessellated into a grid of smaller

2
00:00:03,610 --> 00:00:08,420
squares. This grid allows us to deform the surface. Deformation happens in the

3
00:00:08,420 --> 00:00:12,930
vertex shader. What I want you to do is modify the incoming vertex position.

4
00:00:12,930 --> 00:00:16,760
Since this value is passed in, you can't just change it. You'll need to copy it

5
00:00:16,760 --> 00:00:20,560
over to a temporary variable and modify that. You also need to use this

6
00:00:20,560 --> 00:00:24,130
temporary variable in the rest of the shader instead of the position. How I

7
00:00:24,130 --> 00:00:28,150
want you to modify the position is by using this formula. The first half of the

8
00:00:28,150 --> 00:00:31,430
function finds a point on the sphere. The second half translates the whole

9
00:00:31,430 --> 00:00:36,060
object down by a constant amount so that it stays in view. The uSphereRadius2

10
00:00:36,060 --> 00:00:39,980
is a value passed in by the main program. It's the square of the radius set

11
00:00:39,980 --> 00:00:45,620
with the slider. XPOS, YPOS and ZPOS are the position coordinates. To access an

12
00:00:45,620 --> 00:00:49,970
individual value of a vector, use x, y or z. When you're done, you should see

13
00:00:49,970 --> 00:00:53,840
something on the screen that looks like part of a sphere. It's a bit bland and

14
00:00:53,840 --> 00:00:57,730
we'll talk more about this later. Definitely save your work since we'll build

15
00:00:57,730 --> 00:00:58,289
on it.
