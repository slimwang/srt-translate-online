1
00:00:00,160 --> 00:00:03,672
I'll sum up some of the major concepts we've covered. First of all WebGL and

2
00:00:03,672 --> 00:00:08,798
THREE.JS matrices are in column order. With column order matrices we record the

3
00:00:08,798 --> 00:00:13,206
transforms to the object from right to left. We apply the frame of reference

4
00:00:13,206 --> 00:00:17,496
from left to right. Matrices themselves are associative. You can multiply

5
00:00:17,496 --> 00:00:21,634
whichever two neighboring matrices you want in whatever order you want. Finally

6
00:00:21,634 --> 00:00:26,575
matrices are not commutative. That means matrix ordered does matter. Well I

7
00:00:26,575 --> 00:00:30,988
should say matrix order usually matters. Sometimes for example if you have a

8
00:00:30,988 --> 00:00:34,905
series of translations in a row you can do the translations in any order. Now

9
00:00:34,905 --> 00:00:38,590
that you know a lot about transforms I recommend poking around in documentation

10
00:00:38,590 --> 00:00:42,178
and reading through all functions available for vectors and matrices. More

11
00:00:42,178 --> 00:00:46,422
important still go and try them out. Take a three.js program of any sort and

12
00:00:46,422 --> 00:00:50,329
mess with it. Change things and see what happens. Having java script, an

13
00:00:50,329 --> 00:00:54,617
interpretive language with a built in debugger makes it easy to dig in and see

14
00:00:54,617 --> 00:00:56,793
what all sorts of programs are doing.
