1
00:00:00,270 --> 00:00:02,969
CSS allows us to scope styles to particular

2
00:00:02,969 --> 00:00:05,890
conditions. For example, consider the file we have

3
00:00:05,890 --> 00:00:08,210
in front of us. The body rule applies

4
00:00:08,210 --> 00:00:11,200
in all conditions. However, when the device is

5
00:00:11,200 --> 00:00:14,050
in landscape mode, we apply a special rule

6
00:00:14,050 --> 00:00:18,320
to float the menu on the right. Similarly,

7
00:00:18,320 --> 00:00:21,750
if someone decides to print the page, we

8
00:00:21,750 --> 00:00:24,420
resize the text to use a smaller font size.

9
00:00:24,420 --> 00:00:25,540
>> Yeah,

10
00:00:25,540 --> 00:00:28,320
media queries are important for a responsive web design, but

11
00:00:28,320 --> 00:00:31,430
how does this help us optimize a critical rendering path?

12
00:00:31,430 --> 00:00:33,420
>> Great question. First of all, check out

13
00:00:33,420 --> 00:00:34,980
the link in the instructor notes to learn

14
00:00:34,980 --> 00:00:38,040
about media queries. The web fundamentals slide has

15
00:00:38,040 --> 00:00:40,020
a great and detailed explanation of how they

16
00:00:40,020 --> 00:00:43,320
work. And to answer your actual question, let's

17
00:00:43,320 --> 00:00:46,050
say I'm rendering a page that's using this

18
00:00:46,050 --> 00:00:48,370
CSS file. We noted the browser would block

19
00:00:48,370 --> 00:00:50,810
rendering until it parses all of these styles

20
00:00:50,810 --> 00:00:55,290
but intuitively do you think it should block rendering on the parentherials?

21
00:00:55,290 --> 00:00:58,360
>> Mm, well, I guess if we're not printing the

22
00:00:58,360 --> 00:01:01,070
page then there's really no reason to block rendering, right?

23
00:01:01,070 --> 00:01:04,650
>> Exactly. This is why it makes sense to sometimes split

24
00:01:04,650 --> 00:01:08,700
the CSS into multiple files. Let's give this a try. Our

25
00:01:08,700 --> 00:01:12,040
first step is to move our print styles into separate file.

26
00:01:12,040 --> 00:01:15,930
Let's call it Style Print CSS. Next, we add an extra

27
00:01:15,930 --> 00:01:21,120
link to our HTML mark up. And here's the important part, by default the browser

28
00:01:21,120 --> 00:01:24,590
assumes that each specified style sheet is

29
00:01:24,590 --> 00:01:26,930
render blocking. However, we can also tell the

30
00:01:26,930 --> 00:01:28,590
browser when the style sheet should be

31
00:01:28,590 --> 00:01:31,010
applied by adding a media attribute with the

32
00:01:31,010 --> 00:01:34,060
media query. In this case, sense style-print.css

33
00:01:34,060 --> 00:01:37,700
is only used for print, we add media-print.

34
00:01:37,700 --> 00:01:41,120
>> Oh, so now when the browser sees a style sheet it knows that it only

35
00:01:41,120 --> 00:01:44,310
needs to apply it for printing and hence it doesn't need to block rendering when

36
00:01:44,310 --> 00:01:46,690
we're loading on the phone. You got it.

37
00:01:46,690 --> 00:01:49,814
The browser still downloads both style sheets, but

38
00:01:49,814 --> 00:01:53,248
it wouldn't block rendering on style-print.css. And

39
00:01:53,248 --> 00:01:55,123
in this particular case it just means that

40
00:01:55,123 --> 00:01:56,946
the browser has to download less data for

41
00:01:56,946 --> 00:01:59,760
style.css which would help with the download speed.

42
00:01:59,760 --> 00:02:03,280
>> That makes sense. But this is a pretty trivial example. Let's say

43
00:02:03,280 --> 00:02:07,040
I've got a much more complicated set of styles with multiple break points.

44
00:02:07,040 --> 00:02:08,930
Would this technique help here as well?

45
00:02:08,930 --> 00:02:12,520
>> Absolutely, you can specify any media query on

46
00:02:12,520 --> 00:02:15,150
the link attribute, and the browser will do the right

47
00:02:15,150 --> 00:02:17,760
thing. Once again, check out the article in the

48
00:02:17,760 --> 00:02:21,290
instructor notes for directions on how to use media queries.

49
00:02:21,290 --> 00:02:24,629
>> Okay, now the page feed recommendations about reducing the

50
00:02:24,629 --> 00:02:27,716
number of critical CSS elements makes a lot more sense.

51
00:02:27,716 --> 00:02:30,720
>> Glad to hear. Lets do a quick quiz to test your understanding.
