1
00:00:00,430 --> 00:00:03,719
The first problem we'll consider,
is the problem of sequence alignment or

2
00:00:03,719 --> 00:00:05,040
at a distance.

3
00:00:05,040 --> 00:00:09,450
This often comes up in the study of
genetics, or as part of spell checkers.

4
00:00:09,450 --> 00:00:13,470
For example suppose that we
are given two genetic sequences and

5
00:00:13,470 --> 00:00:15,850
we want to line them up
as best as possible,

6
00:00:15,850 --> 00:00:18,920
minimizing the needed insertions,
deletions, and

7
00:00:18,920 --> 00:00:22,510
changes to the characters, that would
be needed to convert one to the other.

8
00:00:23,600 --> 00:00:26,180
And we'll do this according
to some cost function

9
00:00:26,180 --> 00:00:30,150
that represents how likely these
changes are to have occurred in nature.

10
00:00:30,150 --> 00:00:31,390
Another way to think about this,

11
00:00:31,390 --> 00:00:34,810
is to say that I have aligned these
elements of the sequence here.

12
00:00:34,810 --> 00:00:37,670
And left some of the elements unmatched.

13
00:00:37,670 --> 00:00:42,970
In general we say that we're given two
sequences, X and Y, over some alphabet.

14
00:00:42,970 --> 00:00:47,940
And we want to find an alignment between
them, that is, a subset of the pairs

15
00:00:47,940 --> 00:00:53,130
of elements of the sequence, so
that each letter appears only once

16
00:00:53,130 --> 00:00:58,730
in this alignment and the pairs don't
cross, like in this example here.

17
00:00:58,730 --> 00:01:01,480
The cost of an alignment
comes from two sources.

18
00:01:01,480 --> 00:01:04,069
What is the number of
unmatched characters,

19
00:01:04,069 --> 00:01:09,808
which we can write mathematically as n +
m minus twice the size of the alignment.

20
00:01:09,808 --> 00:01:13,270
This corresponds to the number
of insertions or deletions, or

21
00:01:13,270 --> 00:01:16,450
matching with these dashed
characters in this figure.

22
00:01:16,450 --> 00:01:19,930
The other part of the cost comes form
the matching of the two characters.

23
00:01:19,930 --> 00:01:23,660
We will notate that cost
with this function alpha.

24
00:01:23,660 --> 00:01:27,120
Typically alpha is zero,
when the two characters are the same.

25
00:01:27,120 --> 00:01:29,126
And the problem here of course,

26
00:01:29,126 --> 00:01:32,330
is to find the alignment
that minimizes this cost.
