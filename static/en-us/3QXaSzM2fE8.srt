1
00:00:00,260 --> 00:00:03,840
Now let's go back to
the topic of raid 4 writes.

2
00:00:03,840 --> 00:00:07,689
Let's say we have raid
4 with five disks here.

3
00:00:07,689 --> 00:00:12,600
And let's look at just one set
of stripes with their parity.

4
00:00:12,600 --> 00:00:14,860
And now let's say we want
to write new content to D0.

5
00:00:14,860 --> 00:00:18,910
So of course here,
we will have changed the data.

6
00:00:18,910 --> 00:00:23,080
And the remaining data disks don't
have any changes to their data.

7
00:00:23,080 --> 00:00:26,790
But the question is how do
we compute a new parity?

8
00:00:26,790 --> 00:00:32,855
One way of doing that would be to read
the data from the other three disks and

9
00:00:32,855 --> 00:00:36,570
XOR that with the new
content in the fourth disk.

10
00:00:36,570 --> 00:00:41,150
But that would result in three reads and
a write.

11
00:00:41,150 --> 00:00:44,650
If N is even larger that will
increase the number of reads we need

12
00:00:44,650 --> 00:00:46,230
to do the write.

13
00:00:46,230 --> 00:00:51,670
So instead, we are going to figure
out how to update this parity.

14
00:00:51,670 --> 00:00:55,660
What we need to know is
what was the old data and

15
00:00:55,660 --> 00:01:01,800
the new data with we XOR these we get
which bits of the data have changed.

16
00:01:01,800 --> 00:01:07,170
If we know the old parity,
and this XOR change and

17
00:01:07,170 --> 00:01:11,910
we XOR the two together, we get to flip

18
00:01:11,910 --> 00:01:15,780
all the bits of the old parity that
would change as a result of the bits.

19
00:01:15,780 --> 00:01:18,530
So basically a flip in the data

20
00:01:18,530 --> 00:01:20,890
here would result in
a flip in the parity here.

21
00:01:20,890 --> 00:01:25,630
We can compute it, what to flip,
XORing with the old parity flips it and

22
00:01:25,630 --> 00:01:27,760
that's what you write to the new parity.

23
00:01:27,760 --> 00:01:31,960
So that's why we have a read and
a write of the old parity.

24
00:01:31,960 --> 00:01:36,260
In addition we have a read of the old
data if we don't already know it.

25
00:01:36,260 --> 00:01:38,320
And we know the new data.

26
00:01:38,320 --> 00:01:41,850
So basically we have
a read from the data disk.

27
00:01:41,850 --> 00:01:43,900
A read from the parity disk.

28
00:01:43,900 --> 00:01:48,170
A write to the data disk and
a write to the parity disk.

29
00:01:48,170 --> 00:01:54,080
And the parity disk will be a bottleneck
because the four disks here

30
00:01:54,080 --> 00:01:58,660
are accessed by writes in a way
that reads and writes one disk.

31
00:01:58,660 --> 00:02:01,880
Another write would maybe read and write
this disk but all of these read and

32
00:02:01,880 --> 00:02:04,400
write the parity disk, so
it becomes a bottleneck.

33
00:02:05,450 --> 00:02:09,090
Because the parity disk is
a bottleneck for writes,

34
00:02:09,090 --> 00:02:14,550
we have RAID 5 which has exactly the
same reliability property as RAID 4 and

35
00:02:14,550 --> 00:02:18,130
very similar read performance, but
it fixes the write performance.
