1
00:00:00,290 --> 00:00:04,830
So you've seen how to make projections,
selection and selection arguments, and

2
00:00:04,830 --> 00:00:06,830
then add them to a query statement.

3
00:00:06,830 --> 00:00:09,180
Now it's time to do that for
your pets app.

4
00:00:09,180 --> 00:00:13,220
Remember, the visual here, and what
we'll be doing in the next exercise,

5
00:00:13,220 --> 00:00:15,200
are not the final states of the app.

6
00:00:15,200 --> 00:00:19,210
Instead, this visual corresponds with
what we'll see at the end of lesson two.

7
00:00:19,210 --> 00:00:23,410
So later on in a future lesson, we'll
learn how to create a beautiful UI for

8
00:00:23,410 --> 00:00:25,540
the pets catalog activity.

9
00:00:25,540 --> 00:00:29,290
But for now I just want you to focus
on reading data from the database and

10
00:00:29,290 --> 00:00:32,810
then putting that information
out into this text field.

11
00:00:32,810 --> 00:00:36,500
In this case I want you to show just
basic information about the pets coming

12
00:00:36,500 --> 00:00:38,230
from the pets database.

13
00:00:38,230 --> 00:00:42,450
Let's move forward making incremental
steps building out a more detailed UI,

14
00:00:42,450 --> 00:00:45,790
that will show more information about
the pets coming from the database table.

15
00:00:46,810 --> 00:00:51,190
In our catalog activity we're going to
replace the sloppy raw query method call

16
00:00:51,190 --> 00:00:55,830
with the correct call to the query
method of the SQLite database class.

17
00:00:55,830 --> 00:00:57,310
Let's go ahead and delete this one.

18
00:00:58,460 --> 00:01:02,470
To start writing the query method you
need to first write the projection and

19
00:01:02,470 --> 00:01:04,140
any selection that's needed.

20
00:01:04,140 --> 00:01:07,470
To help you with that,
take a look at the final app state.

21
00:01:07,470 --> 00:01:10,540
Here's with the apps state will look
like by the end of this exercise.

22
00:01:10,540 --> 00:01:13,330
Notice what shown in
the text output here.

23
00:01:13,330 --> 00:01:16,000
Do you need to select any
specific rows or columns?

24
00:01:16,000 --> 00:01:19,900
And if so, you should create a
projection and selections appropriately.

25
00:01:19,900 --> 00:01:23,950
Next step, you need to call the query
method with the correct parameters.

26
00:01:23,950 --> 00:01:26,190
Remember, if you don't
need to use a parameter,

27
00:01:26,190 --> 00:01:28,690
you can simply pass in the value null.

28
00:01:28,690 --> 00:01:32,520
So I've linked both the documentation
about the SQLite query method and

29
00:01:32,520 --> 00:01:34,170
the tutorial example down below.

30
00:01:34,170 --> 00:01:37,760
Now here's the state of the app
after this exercise, and

31
00:01:37,760 --> 00:01:41,340
notice that nothing new appears on
the screen because we're just issuing

32
00:01:41,340 --> 00:01:44,890
a query call, which is similar
to our old raw query call.

33
00:01:44,890 --> 00:01:47,010
And you'll be learning how to
print out the values later on.

34
00:01:48,290 --> 00:01:50,590
Here's what I'd like you to do for
this exercise.

35
00:01:50,590 --> 00:01:53,950
Modify the catalog activity, so
that the result looks like this.

36
00:01:53,950 --> 00:01:57,180
In order to do so,
replace the SQLite database,

37
00:01:57,180 --> 00:02:01,700
rawQuery line with a call to
our query method instead.

38
00:02:01,700 --> 00:02:06,720
If you need, specify a projection,
selection, and selection arguments as

39
00:02:06,720 --> 00:02:10,430
well as any other variables that you'll
need in order to make this happen.

40
00:02:10,430 --> 00:02:13,830
Final note,
the UI should stay the same as before.

41
00:02:13,830 --> 00:02:17,850
Number of rows in your database table
may differ, but that's totally okay.
