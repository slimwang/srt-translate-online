1
00:00:00,810 --> 00:00:03,828
Now let's implement the method which returns the plural form of a word. We'll

2
00:00:03,828 --> 00:00:07,115
make some simplifying assumptions because plurals in English has a lot of

3
00:00:07,115 --> 00:00:10,816
rules. Check out the Wikipedia article if you don't believe me, or if you think

4
00:00:10,816 --> 00:00:14,986
phoenetics are interesting. We're just going to look at regular plurals, like

5
00:00:14,986 --> 00:00:21,105
dish, which becomes dishes. Or cherry, which becomes cherries. Or clock, which

6
00:00:21,105 --> 00:00:24,382
becomes clocks. Here are the rules I want you to implement for the initial

7
00:00:24,382 --> 00:00:27,382
version. If you want to make a more comprehensive version, nothing's stopping

8
00:00:27,382 --> 00:00:31,638
you, but get these ones down first. If the word ends in y, preceded by a

9
00:00:31,638 --> 00:00:39,810
consonant, take away the y an add ies, like in cherries. If the word ends in y

10
00:00:39,810 --> 00:00:47,046
preceded by a vowel, just add s, like in day which becomes days. If the word

11
00:00:47,046 --> 00:00:56,278
ends in o, s, sh, or ch, add es, likes in dishes. Otherwise, just add an s. You

12
00:00:56,278 --> 00:00:59,222
can use the is vowel and is consonant methods that you wrote before, as well as

13
00:00:59,222 --> 00:01:04,870
another method that I added. The method is takes an index, and the letter to

14
00:01:04,870 --> 00:01:10,800
compare it to, and returns true if the letter at that index matches the letter.

15
00:01:10,800 --> 00:01:13,080
There's also a tester program with a bunch of examples of correct plural

16
00:01:13,080 --> 00:01:17,879
spellings of the words. As a bonus, what happens if you give your program a

17
00:01:17,879 --> 00:01:25,180
single letter word, like a. What if you give it an empty string? Does it crash?
