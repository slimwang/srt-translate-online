1
00:00:00,440 --> 00:00:02,500
So in the DOS-like structure, the main

2
00:00:02,500 --> 00:00:05,900
difference from the monolithic structure that I

3
00:00:05,900 --> 00:00:08,430
showed you earlier is that the red

4
00:00:08,430 --> 00:00:12,110
line separating the application from the operating system

5
00:00:12,110 --> 00:00:18,730
is now replaced by a dotted line. What that means, the main difference is

6
00:00:18,730 --> 00:00:21,810
there is no hard separation between the

7
00:00:21,810 --> 00:00:25,450
address space of the application And the address

8
00:00:25,450 --> 00:00:28,150
space of the operating system. The good

9
00:00:28,150 --> 00:00:32,259
news is an application can access all the

10
00:00:32,259 --> 00:00:36,160
operating system services very quickly. As they would

11
00:00:36,160 --> 00:00:38,460
any procedures that they may execute within their

12
00:00:38,460 --> 00:00:41,260
own application with the same speed. At

13
00:00:41,260 --> 00:00:44,760
memory speeds, an application can make calls into

14
00:00:44,760 --> 00:00:48,050
the operating system and get system services. That's

15
00:00:48,050 --> 00:00:50,570
the good news. But the bad news is

16
00:00:50,570 --> 00:00:52,810
that there is no protection of the

17
00:00:52,810 --> 00:00:56,604
operating system from inerrant application. So, the

18
00:00:56,604 --> 00:00:59,125
integrity of the operating system can be

19
00:00:59,125 --> 00:01:03,830
compromised by a runaway application, either maliciously

20
00:01:03,830 --> 00:01:07,360
or unintentionally corrupting the data structures that

21
00:01:07,360 --> 00:01:09,050
are in the operating system. Now, you

22
00:01:09,050 --> 00:01:16,060
may wonder why DOS Chose this particular structure. Well, at least in the early

23
00:01:16,060 --> 00:01:22,560
days of PC, it was thought that a personal computer, as the name

24
00:01:22,560 --> 00:01:28,750
suggests, is a platform for a single user and, more importantly, the vision was,

25
00:01:28,750 --> 00:01:34,170
there will be exactly one app that is running at a time. Not even multitasking.

26
00:01:34,170 --> 00:01:41,670
So performance and simplicity was the key and protection was not primary concern

27
00:01:41,670 --> 00:01:44,290
in the DOS-like structure. And that you can

28
00:01:44,290 --> 00:01:49,760
get good performance comes from the simple observation

29
00:01:49,760 --> 00:01:52,640
that there is No hard separation between the

30
00:01:52,640 --> 00:01:55,420
application and the operating system. The operating system

31
00:01:55,420 --> 00:01:57,550
is not living in its own address space.

32
00:01:57,550 --> 00:02:00,060
The application and the operating system are in

33
00:02:00,060 --> 00:02:02,750
the same address space. And therefore, making a

34
00:02:02,750 --> 00:02:07,060
system call by an application is going to happen as

35
00:02:07,060 --> 00:02:10,880
quickly as the application would call a procedure

36
00:02:10,880 --> 00:02:14,560
which the application developer wrote himself or herself.
