1
00:00:00,410 --> 00:00:03,830
Now when we know how to time
an operation an operation in

2
00:00:03,830 --> 00:00:06,540
Python let's check how fast Num-Py is.

3
00:00:06,540 --> 00:00:10,460
Let's define a really large array so
that the time taken for

4
00:00:10,460 --> 00:00:13,300
the operation will be
significant to compare.

5
00:00:13,300 --> 00:00:18,100
So here is our large array of
1,000 rows and 10,000 columns.

6
00:00:18,100 --> 00:00:20,720
Before I go ahead,
I would like to mention

7
00:00:20,720 --> 00:00:24,490
that this is just a demo code
to show the speed of Num-Py.

8
00:00:24,490 --> 00:00:28,570
So, I will be giving a high
level explanation of this code.

9
00:00:28,570 --> 00:00:32,810
Moving ahead, we will be comparing
how to compute mean of the array

10
00:00:32,810 --> 00:00:36,560
using Num-Py and
using standard iteration.

11
00:00:36,560 --> 00:00:40,630
Here is the manual mean function
which computes the mean of the values

12
00:00:40,630 --> 00:00:42,240
in the defined area.

13
00:00:42,240 --> 00:00:47,540
We trade over each row, and for
each row it trade over each column.

14
00:00:47,540 --> 00:00:51,020
We then sum present all
the values throughout the array.

15
00:00:51,020 --> 00:00:55,840
Finally, we divide by the size of
the array and hence we get the mean.

16
00:00:55,840 --> 00:00:58,870
In case of using Num-Py for
calculating the mean,

17
00:00:58,870 --> 00:01:03,280
we just write array.mean to get
the mean of the entire array.

18
00:01:04,349 --> 00:01:09,250
How long function will just compute
the time each matter takes.

19
00:01:09,250 --> 00:01:12,260
Now, let's check what's
the time difference.

20
00:01:12,260 --> 00:01:14,060
Do you see the difference?

21
00:01:14,060 --> 00:01:17,440
This is the time taken by
the numpy.mean function

22
00:01:17,440 --> 00:01:19,960
to calculate the mean
of the entire array.

23
00:01:19,960 --> 00:01:23,080
And remember the size of
the array are in thousands.

24
00:01:23,080 --> 00:01:29,260
On the other hand, the time taken by
the manual method is about 5 seconds.

25
00:01:29,260 --> 00:01:31,139
Hence proved, Num-Py is super fast.

26
00:01:32,370 --> 00:01:38,210
We also compute the rate of how fast
the Num-Py is and the numbers are crazy.

27
00:01:38,210 --> 00:01:42,218
It's about 290 times faster
than the manual for loops.

28
00:01:42,218 --> 00:01:47,840
Observe that Num-Py not only makes
the code more cleaner as compared

29
00:01:47,840 --> 00:01:53,060
to the manual method, but there's about
290 times faster than other method.

30
00:01:53,060 --> 00:01:54,600
Don't you think it's just awesome?
