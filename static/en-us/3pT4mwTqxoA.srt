1
00:00:00,280 --> 00:00:02,430
We need an expression here in order to subset our

2
00:00:02,430 --> 00:00:05,630
data frame. So really I'll just run the subset command

3
00:00:05,630 --> 00:00:08,920
on our pf data frame or pseudo-Facebook users and I'll

4
00:00:08,920 --> 00:00:12,810
take ages that are less than 70. Now the question

5
00:00:12,810 --> 00:00:14,850
said 70 or less so I should really use less

6
00:00:14,850 --> 00:00:17,650
than or equals here. Running this code we get a

7
00:00:17,650 --> 00:00:21,790
very different summary statistic. In fact, this tells a different

8
00:00:21,790 --> 00:00:25,660
story about a negative relationship between age and friend count.

9
00:00:25,660 --> 00:00:28,530
As age increases, we can see that friend count

10
00:00:28,530 --> 00:00:31,950
decreases. It's important to note that one variable doesn't

11
00:00:31,950 --> 00:00:34,720
cause the other. For example, it'd be unwise to

12
00:00:34,720 --> 00:00:36,850
say that growing old means that you have fewer

13
00:00:36,850 --> 00:00:39,480
internet friends. We'd really need to have data from

14
00:00:39,480 --> 00:00:43,470
experimental research and make use of inferential statistics. Rather

15
00:00:43,470 --> 00:00:47,340
than descriptive statistics to address causality. You may have

16
00:00:47,340 --> 00:00:50,940
noticed that I left off the method parameter from cor.test.

17
00:00:50,940 --> 00:00:53,965
And that's because cor.test defaults to using the Pearson

18
00:00:53,965 --> 00:00:57,390
Product-Moment Correlation. No matter what we do. Adding this

19
00:00:57,390 --> 00:00:59,350
in as a parameter, we should get the same

20
00:00:59,350 --> 00:01:02,500
result. And running this code, sure enough, I do.
