1
00:00:00,290 --> 00:00:03,950
The key claim in the analysis of the
scaling algorithm is that the maximum

2
00:00:03,950 --> 00:00:08,840
number of iterations for a scaling phase
is at most twice the number of edges.

3
00:00:08,840 --> 00:00:12,090
By scaling phase, I mean
an iteration of the outer loop here

4
00:00:12,090 --> 00:00:14,250
where we have a fixed value of delta.

5
00:00:14,250 --> 00:00:15,550
We start with the following lemma.

6
00:00:16,710 --> 00:00:20,860
If the residual graph,
with threshold delta, has no s-t paths,

7
00:00:20,860 --> 00:00:26,410
then there exists an s-t cut, A, B,
such that the capacity of the cut

8
00:00:26,410 --> 00:00:32,619
is at most the value of the flow, plus
the number of edges times delta minus 1.

9
00:00:32,619 --> 00:00:36,490
The proof will fill up like
the max flow min cut proof.

10
00:00:36,490 --> 00:00:42,440
We let A be the center of vertices
reachable from s in our residual graph.

11
00:00:42,440 --> 00:00:45,720
And we let B be the complement
of those set of vertices.

12
00:00:46,760 --> 00:00:49,950
Edges from A to B in this graph
must have residual capacity

13
00:00:49,950 --> 00:00:54,330
at most delta minus 1,
otherwise the vertex in

14
00:00:54,330 --> 00:00:58,580
B would be reachable from
the source s and hence a part of A.

15
00:00:58,580 --> 00:01:04,030
And edges from B to A can't have
flow more than delta minus 1,

16
00:01:04,030 --> 00:01:06,720
or their reverse edge would
appear in the residual graph.

17
00:01:08,070 --> 00:01:13,310
The value of the flow then is the flow
out of A minus the flow back into A.

18
00:01:14,410 --> 00:01:19,760
And using these bounds here we can
bound this by the capacity minus

19
00:01:19,760 --> 00:01:20,530
delta minus 1.

20
00:01:20,530 --> 00:01:22,900
And similarly for

21
00:01:22,900 --> 00:01:26,520
these back edges, we can do that
with the delta minus 1 bound.

22
00:01:27,720 --> 00:01:31,790
This then is just the capacity of
the cut, and combining the delta minus 1

23
00:01:31,790 --> 00:01:37,150
terms, well that can only appear
in E number of terms here.

24
00:01:37,150 --> 00:01:41,062
So that gives us the remaining
part of the bound.

25
00:01:41,062 --> 00:01:44,850
With this lemma complete, we now return
to the main claim that we want to prove.

26
00:01:45,940 --> 00:01:48,970
The base case where delta
is equal to C is trivial.

27
00:01:48,970 --> 00:01:52,000
Since each augmenting flow
here saturates one of the edge

28
00:01:52,000 --> 00:01:52,740
out of the source.

29
00:01:53,760 --> 00:01:59,460
For subsequent iterations we let f be
the flow after the scaling phase delta,

30
00:01:59,460 --> 00:02:01,820
and we'll let g be the flow before.

31
00:02:01,820 --> 00:02:06,875
That is, the flow after the previous
scaling, which would be either 2 delta,

32
00:02:06,875 --> 00:02:11,662
or 2 delta + 1, depending on how
the integer division rounding worked.

33
00:02:11,662 --> 00:02:15,800
The value of the flow f is at
most the maximum flow, but

34
00:02:15,800 --> 00:02:21,500
this is at most the capacity of
the s-t cut induced by the flow g,

35
00:02:21,500 --> 00:02:25,232
in the previous iteration, or
the threshold was two delta.

36
00:02:25,232 --> 00:02:27,330
Our lemma then says,

37
00:02:27,330 --> 00:02:32,850
that this is at most, the flow of g,
plus the number of edges, times 2 delta.

38
00:02:32,850 --> 00:02:35,000
Now we let k be
the number of iterations,

39
00:02:35,000 --> 00:02:37,868
that we use to go between the flow g,
and the flow f.

40
00:02:37,868 --> 00:02:41,850
Well then k times delta is a lower bound

41
00:02:41,850 --> 00:02:45,320
on the difference between the value of
the flow f and the value of the flow g.

42
00:02:45,320 --> 00:02:48,310
Each iteration increased
the flow by at least delta.

43
00:02:49,610 --> 00:02:52,310
But from this bound here we have that

44
00:02:52,310 --> 00:02:55,180
this is at most twice the number
of edges times delta.

45
00:02:56,220 --> 00:02:59,180
And so from this then we conclude
that the number of iterations

46
00:02:59,180 --> 00:03:01,570
is at most twice the number of edges.

47
00:03:01,570 --> 00:03:04,770
This then completes the analysis
of the scaling algorithm.

48
00:03:04,770 --> 00:03:09,160
We have at most log C iterations at
the outer loop, order E iterations

49
00:03:09,160 --> 00:03:12,880
of the inner loop, and each one of
these iterations takes order E time.

50
00:03:13,930 --> 00:03:17,450
For a total of E squared log C
as we state in this theorem.

51
00:03:18,580 --> 00:03:23,740
The scaling algorithm returns a maximum
flow in time order e squared log c,

52
00:03:23,740 --> 00:03:28,350
where c is the maximum capacity of
an edge coming out of the source.
