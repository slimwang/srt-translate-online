1
00:00:00,200 --> 00:00:02,969
So now that we have seen how function inlining works,

2
00:00:02,969 --> 00:00:08,420
let's do function inlining quiz. So let's say we have a load into A 0,

3
00:00:08,420 --> 00:00:12,220
which would be the first argument of a function. And then we call a function,

4
00:00:12,220 --> 00:00:15,350
and then we store the result of the function somewhere else. Let's say

5
00:00:15,350 --> 00:00:20,130
that what the function is doing is it's computing the square of this value, and

6
00:00:20,130 --> 00:00:23,150
then adding the second parameter to it, and that's what it returns. So it's

7
00:00:23,150 --> 00:00:26,810
simply returning the, you know, square of the first parameter plus the second

8
00:00:26,810 --> 00:00:30,810
parameter. Let's say we have a processor where load takes 2 cycles to do,

9
00:00:30,810 --> 00:00:36,050
CALL takes 2 cycles to do, RET takes 2 cycles to do, and Store Word and

10
00:00:36,050 --> 00:00:41,210
ADD are one cycle per instruction. And the multiply instruction takes 3 cycles

11
00:00:41,210 --> 00:00:46,200
before we can use the result. The question for you is, after scheduling this and

12
00:00:46,200 --> 00:00:50,310
this together will take how many cycles? So how many cycles from the point we

13
00:00:50,310 --> 00:00:54,490
start to load, until we are done with the store. And after inlining and

14
00:00:54,490 --> 00:00:56,740
then scheduling, how many cycles does this take?
