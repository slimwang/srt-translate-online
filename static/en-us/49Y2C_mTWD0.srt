1
00:00:00,110 --> 00:00:01,330
Okay Marco, you got an answer for me?

2
00:00:01,330 --> 00:00:03,800
>> Yeah, yeah. I, this is, the way I was thinking about

3
00:00:03,800 --> 00:00:09,280
it was essentially, well for the theta min. Wait, so we're maximixing, right?

4
00:00:09,280 --> 00:00:09,760
>> yes.

5
00:00:09,760 --> 00:00:13,200
>> All right. So theta max, then, is going to

6
00:00:13,200 --> 00:00:15,760
be the largest value if, that f can return.

7
00:00:15,760 --> 00:00:16,180
>> Yep.

8
00:00:16,180 --> 00:00:17,900
>> Which is actually the optimum

9
00:00:17,900 --> 00:00:21,385
of the function. So that probability distribution

10
00:00:21,385 --> 00:00:25,200
assigns a probability of well one, if there's a unique optimum, it'll decide

11
00:00:25,200 --> 00:00:27,430
a probability of one to that single point.

12
00:00:27,430 --> 00:00:29,890
>> That's exactly right, but you were getting at something else when

13
00:00:29,890 --> 00:00:32,430
you said if there's one optimum. What if there are multiple optima?

14
00:00:32,430 --> 00:00:34,790
>> Then it's uniform over all of them.

15
00:00:34,790 --> 00:00:38,010
>> Right. So, it is the distribution that generates

16
00:00:38,010 --> 00:00:41,696
only optimal points. So, it's a distribution over optima,

17
00:00:41,696 --> 00:00:44,192
which is just you said and we'd accept optimum

18
00:00:44,192 --> 00:00:46,960
point or anything that sort of captures this idea.

19
00:00:46,960 --> 00:00:48,410
>> Okay.

20
00:00:48,410 --> 00:00:49,760
>> Okay? Well, what about theta submit?

21
00:00:51,150 --> 00:00:54,050
>> So, if it's the minimum that the function can

22
00:00:54,050 --> 00:00:57,190
achieve then it, it ought to be the case that everything

23
00:00:57,190 --> 00:01:00,640
in this space of X's is part of that. So it

24
00:01:00,640 --> 00:01:04,150
should assign uniform probability to all points in the input space.

25
00:01:04,150 --> 00:01:09,080
>> That's exactly right. So it is in fact, simply, the uniform distribution.

26
00:01:09,080 --> 00:01:10,700
>> Nice.

27
00:01:10,700 --> 00:01:13,110
>> Now, this is going to be pretty cool, because in this,

28
00:01:13,110 --> 00:01:16,790
in this slide right here we basically have the mimic algorithm.

29
00:01:16,790 --> 00:01:19,070
>> I'm not seeing it.

30
00:01:19,070 --> 00:01:20,708
>> Well I'm about to tell you, we

31
00:01:20,708 --> 00:01:23,606
are basically going to try to estimate this particular

32
00:01:23,606 --> 00:01:26,140
distribution; P sub theta of X. We're going to

33
00:01:26,140 --> 00:01:29,224
start out with P sub theta of min, P

34
00:01:29,224 --> 00:01:32,320
sub theta min of x, which is the

35
00:01:32,320 --> 00:01:36,560
uniform distribution. So we're going to sample uniformly from

36
00:01:36,560 --> 00:01:39,410
all of the points, and then somehow use those

37
00:01:39,410 --> 00:01:42,335
points to do better and better, and better and

38
00:01:42,335 --> 00:01:46,160
better estimates until we get from uniform to a distribution

39
00:01:46,160 --> 00:01:49,481
of only the optimal points. And that's the basic idea.

40
00:01:49,481 --> 00:01:52,181
>> So, okay, so, and, and the first one being something that's really

41
00:01:52,181 --> 00:01:55,320
easy to sample from, because we're just sampling uniformly from the input space.

42
00:01:55,320 --> 00:01:55,690
>> Right.

43
00:01:55,690 --> 00:01:57,340
>> And the second being something that'd

44
00:01:57,340 --> 00:01:59,480
be really useful to sample from, because if

45
00:01:59,480 --> 00:02:02,920
we could sample from the set of optima, it's really easy to find an optimum.

46
00:02:02,920 --> 00:02:07,360
>> Exactly. So we'll start out here. And we're, the goal is to start

47
00:02:07,360 --> 00:02:10,038
out here and then to end up here. Gotcha.

48
00:02:10,038 --> 00:02:12,280
>> And so let's actually write out a out rhythm that's does that.

49
00:02:12,280 --> 00:02:14,710
>> Yeah, because that's not an algorithm that's just a goal.

50
00:02:14,710 --> 00:02:16,740
>> But many algorithms start out as goals.

51
00:02:16,740 --> 00:02:17,600
>> Hm.
