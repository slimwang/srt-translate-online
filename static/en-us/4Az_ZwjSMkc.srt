1
00:00:00,000 --> 00:00:03,000
What we want to prove is that both parties obtained the same key.

2
00:00:03,000 --> 00:00:08,000
For the server to obtain the key, it needed to be able to decrypt this message

3
00:00:08,000 --> 00:00:10,000
using the password.

4
00:00:10,000 --> 00:00:12,000
And so what we're going to add to the message

5
00:00:12,000 --> 00:00:17,000
is instead of just sending this value, we're going to also send a challenge,

6
00:00:17,000 --> 00:00:19,000
and that challenge is going to be encrypted using the key.

7
00:00:19,000 --> 00:00:23,000
The challenge is just some random value selected by the server.

8
00:00:23,000 --> 00:00:27,000
And now Alice needs to be able to obtain the right key.

9
00:00:27,000 --> 00:00:29,000
That proves that she knew the password.

10
00:00:29,000 --> 00:00:33,000
And using that key, she can decrypt this message and obtain r.

11
00:00:33,000 --> 00:00:37,000
This effectively demonstrates to Alice that she's talking to the right server--

12
00:00:37,000 --> 00:00:39,000
at least a server that knew her password--

13
00:00:39,000 --> 00:00:43,000
because the key that's produced here could only be produced correctly

14
00:00:43,000 --> 00:00:49,000
if the server was able to decrypt the message that Alice sent encrypted with that password.

15
00:00:49,000 --> 00:00:51,000
This hasn't yet proven anything to the server.

16
00:00:51,000 --> 00:00:56,000
So to finish the protocol, Alice has to send a response back to the server

17
00:00:56,000 --> 00:00:59,000
that proves that she was able to obtain r.

18
00:00:59,000 --> 00:01:01,000
So Alice could do this by proving that she learned r.

19
00:01:01,000 --> 00:01:06,000
She could send the message encrypting with the key r back to the server.

20
00:01:06,000 --> 99:59:59,999
Does this work?
