1
00:00:00,250 --> 00:00:03,360
Let's try the loop for just the first line first. It seems like the minute

2
00:00:03,360 --> 00:00:06,708
isn't changing, only the hour is changing, so I'll declare a loop variable

3
00:00:06,708 --> 00:00:11,818
called hour that's going to go through all of the hours. It will start at one,

4
00:00:11,818 --> 00:00:15,906
and will go as long as hour is less than or equal to twelve, and we won't skip

5
00:00:15,906 --> 00:00:20,456
any. Inside, I want to print the hour, followed by a colon, followed by the

6
00:00:20,456 --> 00:00:24,460
minute. And I don't want to print it on a line because all of the hours should

7
00:00:24,460 --> 00:00:28,367
go on the same line. Hopefully, you notice I'm using a descriptive name for the

8
00:00:28,367 --> 00:00:32,033
counter. And that's because in a moment we're going to have multiple loops and

9
00:00:32,033 --> 00:00:36,747
it'll be confusing to see which loop counter is which. Lets try this and see

10
00:00:36,747 --> 00:00:43,280
how far we got -if I fix the compiler errors. Okay, this is a good start. We

11
00:00:43,280 --> 00:00:47,882
have the first line. Now, the loop for the second line would look like this.

12
00:00:47,882 --> 00:00:52,224
The only difference is this number, the minute. So, I'm going to add a loop

13
00:00:52,224 --> 00:00:57,121
that counts up the minutes. The minutes will go from 0 to 59. And for each

14
00:00:57,121 --> 00:01:01,471
minute, I'll print out all of the possible hours with the current minute. Which

15
00:01:01,471 --> 00:01:05,761
I'll pass into print def so I can get rid of my comparison code down here. And

16
00:01:05,761 --> 00:01:09,704
let's see how that worked. Well, it's kind of hard to tell, because it's all on

17
00:01:09,704 --> 00:01:13,683
one line. What I really want is to have a line break after I finish the first

18
00:01:13,683 --> 00:01:18,073
line. So after I've printed out all of the hours, I want to print an empty line

19
00:01:18,073 --> 00:01:22,804
to advance down to the next line. And now my table prints out, but there are a

20
00:01:22,804 --> 00:01:28,880
couple of issues here. It only goes up to 58 and I said it should go up to 59.

21
00:01:28,880 --> 00:01:32,452
And it looks like some is missing up at the top. The stuff that was missing at

22
00:01:32,452 --> 00:01:36,379
the bottom Is because of my loop condition. I should have gone to less than or

23
00:01:36,379 --> 00:01:41,042
equals and the parts that I'm missing at the top are. Probably because bluej

24
00:01:41,042 --> 00:01:45,770
has limited the amount of output that it remembers in the terminal. I'm

25
00:01:45,770 --> 00:01:49,310
going to try to going to options and unlimited buffering and then try this

26
00:01:49,310 --> 00:01:53,685
again. Now it actually saves all of the data that I wanting to see. Alright, I

27
00:01:53,685 --> 00:01:57,068
think we're already for another practice question.
