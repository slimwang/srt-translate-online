1
00:00:00,000 --> 00:00:04,000
[Narrator] Now let's look into particle filters, the subject of today's class,

2
00:00:04,000 --> 00:00:09,000
and it's really interesting to see the answers for particle filters.

3
00:00:09,000 --> 00:00:14,000
First, the state space for particle filters is usually continuous.

4
00:00:14,000 --> 00:00:17,000
So, you can get into the more interesting version of state spaces,

5
00:00:17,000 --> 00:00:20,000
but we're not confined to unimodal distributions.

6
00:00:20,000 --> 00:00:25,000
We can actually represent arbitrarily multimodal distributions.

7
00:00:25,000 --> 00:00:29,000
They are also approximate just like the other 2 filters,

8
00:00:29,000 --> 00:00:34,000
and in terms of efficiency the world is still out there.

9
00:00:34,000 --> 00:00:37,000
In certain incarnations, they clearly scale exponentially,

10
00:00:37,000 --> 00:00:42,000
and it is a mistake to represent particle filters over anything more than say 4 dimensions.

11
00:00:42,000 --> 00:00:45,000
But in other domains, mostly in tracking domains,

12
00:00:45,000 --> 00:00:49,000
they tend to scale much, much better, and I've not seen a good treatment

13
00:00:49,000 --> 00:00:54,000
yet of the complexity in practice for particle filters.

14
00:00:54,000 --> 00:00:56,000
However, the key advantage of particle filters

15
00:00:56,000 --> 00:00:58,000
is actually none of those things over here.

16
00:00:58,000 --> 00:01:01,000
The key advantage, at least in my life, has been

17
00:01:01,000 --> 00:01:04,000
they're really easy to program.

18
00:01:04,000 --> 00:01:06,000
As you hopefully see today,

19
00:01:06,000 --> 00:01:09,000
writing a particle filter is really, really easy.

20
00:01:09,000 --> 00:01:15,000
In fact, you will write your own particle filter for a continuous value localization problem,

21
00:01:15,000 --> 00:01:19,000
which is in many ways more difficult than any of the problems we talked about before.

22
00:01:19,000 --> 00:01:24,000
So, let's dive in and see a particle filter in action.

23
00:01:24,000 --> 00:01:28,000
So, here is a floor plan of an environment

24
00:01:28,000 --> 00:01:32,000
where a robot is located and it has to perform what's called global localization,

25
00:01:32,000 --> 00:01:37,000
which is it has no clue where it is and it has to find out

26
00:01:37,000 --> 00:01:40,000
where it is just based on sensor measurements.

27
00:01:40,000 --> 00:01:44,000
This provides his range sensors as indicated by the blue stripes

28
00:01:44,000 --> 00:01:50,000
those use sonar sensors, which means sound, to range the distance of nearer obstacles,

29
00:01:50,000 --> 00:01:55,000
and it has to use these range sensors to determine a good posterior distribution as to where it is.

30
00:01:55,000 --> 00:01:59,000
What the robot doesn't know it's starting in the middle of the corridor.

31
00:01:59,000 --> 00:02:03,000
In fact, it is completely uncertain as to where it is.

32
00:02:03,000 --> 00:02:06,000
Now, the particle filter represents this using particles.

33
00:02:06,000 --> 00:02:10,000
Each of these red dots of which there are several thousand here

34
00:02:10,000 --> 00:02:14,000
is a discrete guess where the road might be.

35
00:02:14,000 --> 00:02:19,000
It's structured as an X coordinate, a Y coordinate, and also a heading direction,

36
00:02:19,000 --> 00:02:24,000
and these 3 values together comprise a single guess,

37
00:02:24,000 --> 00:02:26,000
but a single guess is not a filter.

38
00:02:26,000 --> 00:02:29,000
It is the set of several thousands of such guesses

39
00:02:29,000 --> 00:02:35,000
that together comprise an approximate representation for the posterior of the robot.

40
00:02:35,000 --> 00:02:37,000
So, let's start the video.

41
00:02:37,000 --> 00:02:41,000
In the beginning the particles are uniformly spread,

42
00:02:41,000 --> 00:02:44,000
but the particle filter makes them survive

43
00:02:44,000 --> 00:02:50,000
in proportion of how consistent 1 of these particles is with a sensor measurement.

44
00:02:50,000 --> 00:02:54,000
Very quickly the robot has figured out it's in the corridor, but 2 clouds survive

45
00:02:54,000 --> 00:02:57,000
because of the symmetry of the corridor.

46
00:02:57,000 --> 00:03:00,000
As the robot then enters 1 of the offices,

47
00:03:00,000 --> 00:03:06,000
the symmetry is broken and the correct set of particles survive.

48
00:03:06,000 --> 00:03:09,000
Let me play this again.

49
00:03:09,000 --> 00:03:11,000
The essence of particle filters is to have

50
00:03:11,000 --> 00:03:15,000
these particles guess where the road might be moving,

51
00:03:15,000 --> 00:03:20,000
but also have them survive using effectively survival of the fittest

52
00:03:20,000 --> 00:03:23,000
so that particles that are more consistent with the measurements

53
00:03:23,000 --> 00:03:26,000
are more likely to survive and as a result

54
00:03:26,000 --> 00:03:29,000
places of high probability will collect more particles,

55
00:03:29,000 --> 00:03:33,000
and therefore be more representative of the robot's posterior belief.

56
00:03:33,000 --> 00:03:36,000
Those particles together--those thousands of particles

57
00:03:36,000 --> 00:03:38,000
are now clustered in a single location.

58
00:03:38,000 --> 00:03:46,000
Those comprise the approximate belief of the robot as it localizes itself.
