1
00:00:00,370 --> 00:00:03,030
The init method you wrote for
RPS turn and

2
00:00:03,030 --> 00:00:06,280
RPS game probably looked
something like this.

3
00:00:06,280 --> 00:00:09,350
Let's walk through the method
definition syntax one more time.

4
00:00:09,350 --> 00:00:12,100
The dash tells us that this
is an instance method.

5
00:00:12,100 --> 00:00:15,670
Then in parentheses here,
we have the type of the method returns,

6
00:00:15,670 --> 00:00:19,570
which in this case, matches the type of
the class to which the method belongs.

7
00:00:19,570 --> 00:00:23,030
After the return type becomes
the method name, followed by a colon,

8
00:00:23,030 --> 00:00:26,340
then we have the parameter type in
between parentheses followed by

9
00:00:26,340 --> 00:00:30,850
the parameter name, and then the body
of the method in between curly braces.

10
00:00:30,850 --> 00:00:33,530
What about when we're passing
in more than one parameter?

11
00:00:33,530 --> 00:00:36,025
Like in the RPSGames init method?

12
00:00:36,025 --> 00:00:38,175
When you're passing in
more than one parameter,

13
00:00:38,175 --> 00:00:41,375
the parameters get interspersed
with the method name.

14
00:00:41,375 --> 00:00:45,045
So in the RPS came example,
the method name is here and

15
00:00:45,045 --> 00:00:48,909
here, and the general form
would look something like this.

16
00:00:50,250 --> 00:00:54,370
Also notice that when we pass in
an RPS turn object as a parameter.

17
00:00:54,370 --> 00:00:58,420
We need an asterisk to indicate
the pointer to the object but

18
00:00:58,420 --> 00:01:01,020
when we pass in a move
which is an integer.

19
00:01:01,020 --> 00:01:01,880
We don't need a pointer.
