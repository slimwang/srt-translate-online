1
00:00:00,350 --> 00:00:03,500
There are a couple possibilities here. We're working with a partially

2
00:00:03,500 --> 00:00:06,230
filled array. So, do we want to use an enhanced for loop or

3
00:00:06,230 --> 00:00:09,420
a regular for loop? If we use the enhanced for loop, it'll

4
00:00:09,420 --> 00:00:12,610
add up every single item, even the ones in the part of

5
00:00:12,610 --> 00:00:14,970
the array that we've said is empty. We know that the

6
00:00:14,970 --> 00:00:18,390
current size is four but the enhanced for loop. Just notice how

7
00:00:18,390 --> 00:00:21,580
much space there is in the whole array. In this case, the

8
00:00:21,580 --> 00:00:25,430
enhanced for loop will work, but only because the array was initialized

9
00:00:25,430 --> 00:00:28,430
full of zeros. So, when we take the sum and we add

10
00:00:28,430 --> 00:00:31,760
all of these zeros, it won't actually give us the wrong answer.

11
00:00:31,760 --> 00:00:34,130
But if I were dealing with an array that might have extra

12
00:00:34,130 --> 00:00:37,620
junk left over in the empty space, I would probably want to use a

13
00:00:37,620 --> 00:00:41,090
regular for loop. And only go up to the currentsize of four.

14
00:00:41,090 --> 00:00:44,020
I'll show you both of those. Either way, I'll need my sum that

15
00:00:44,020 --> 00:00:46,780
starts at 0, and I'll return that sum at the end. If

16
00:00:46,780 --> 00:00:50,450
I used the enhanced for loop, I just increment the sum by score,

17
00:00:50,450 --> 00:00:53,110
each time, and that should work. But if I'm nervous that there

18
00:00:53,110 --> 00:00:56,150
might be other junk left over, in the end of my array,

19
00:00:56,150 --> 00:00:59,410
then I would declare a loop counter variable. And stop before it

20
00:00:59,410 --> 00:01:02,120
gets up to current size, and look at each item one at

21
00:01:02,120 --> 00:01:04,769
a time. And here I would have to get item out of

22
00:01:04,769 --> 00:01:08,510
scores, because I'm not using an enhanced for loop anymore, and I

23
00:01:08,510 --> 00:01:13,410
should actually give my, [LAUGH], loop counter variable an initial value. Now

24
00:01:13,410 --> 00:01:15,970
we can see this in action, if I run the demo and

25
00:01:15,970 --> 00:01:17,960
enter my scores, I get their total.
