1
00:00:00,000 --> 00:00:05,000
The first thing that it's important to notice about the supplied code is that in the array angles,

2
00:00:05,000 --> 00:00:09,000
the angles are measured in degrees but as we said earlier,

3
00:00:09,000 --> 00:00:13,000
the cosine and sine functions in Python's math library take arguments

4
00:00:13,000 --> 00:00:16,000
that are measured in radians not in degrees.

5
00:00:16,000 --> 00:00:22,000
So first thing that we need to do is convert each of the angles in the array angles into radians.

6
00:00:22,000 --> 00:00:26,000
We do that by multiplying each angle by Ï€ and dividing by 180.

7
00:00:26,000 --> 00:00:30,000
This gives us a new variable angle in radians or angle rad.

8
00:00:30,000 --> 00:00:34,000
The next step is to set the initial position and velocity of the particle.

9
00:00:34,000 --> 00:00:37,000
As you can see from these two lines, we've decided that

10
00:00:37,000 --> 00:00:41,000
the particle is going to be in a zero in both the horizontal and vertical planes.

11
00:00:41,000 --> 00:00:43,000
This means that it's starting at the origin.

12
00:00:43,000 --> 00:00:48,000
Moving on to velocity, we set both the horizontal and the vertical velocity

13
00:00:48,000 --> 00:00:51,000
by taking the initial speed which we set up here,

14
00:00:51,000 --> 00:00:55,000
and multiplying by the cosine of the angle which we just converted

15
00:00:55,000 --> 00:00:59,000
for the horizontal velocity or the sine for the vertical velocity.

16
00:00:59,000 --> 00:01:03,000
Lastly, we finally make use of the Forward Euler Method.

17
00:01:03,000 --> 00:01:07,000
If we want to find out what the position after the next step is going to be,

18
00:01:07,000 --> 00:01:10,000
then we begin with a position at the step they were at

19
00:01:10,000 --> 00:01:15,000
and then add the time step times the velocity at that present step.

20
00:01:15,000 --> 00:01:18,000
You remember that this makes sense in terms of units because h is measured in time

21
00:01:18,000 --> 00:01:23,000
and v is measured in distance over time which makes this term

22
00:01:23,000 --> 00:01:26,000
also measured in distance just like x.

23
00:01:26,000 --> 00:01:29,000
We do something very similar with velocity except that this time,

24
00:01:29,000 --> 00:01:34,000
the acceleration is a constant which we set up here as the gravitational constant.

25
00:01:34,000 --> 00:01:37,000
This means that the value of the acceleration is not going to change

26
00:01:37,000 --> 00:01:40,000
from step to step although the value of the velocity will.

27
00:01:40,000 --> 00:01:43,000
Something else that you might want to know is that we've only set the range

28
00:01:43,000 --> 00:01:46,000
to go from 0 to num steps - 1.

29
00:01:46,000 --> 00:01:52,000
You might initially have thought that we should insert num steps +1 as the argument of the range.

30
00:01:52,000 --> 00:01:57,000
But because we're looking at the step +1 row in both x and v,

31
00:01:57,000 --> 00:02:01,000
we need to restrict the range to be one less than we would have otherwise needed.

32
00:02:01,000 --> 00:02:04,000
In fact, I made this error myself when I was looking over the code.

33
00:02:04,000 --> 00:02:06,000
So it makes perfect sense if you were thinking that too.

34
00:02:06,000 --> 00:02:10,000
After all this has been filled in, we can run the program and get this plot.

35
00:02:10,000 --> 00:02:13,000
Now this is a plot of the position, not of the velocity.

36
00:02:13,000 --> 00:02:17,000
You can see that the horizontal axis measures the horizontal position in meters.

37
00:02:17,000 --> 00:02:20,000
The vertical axis measures the vertical position in meters.

38
00:02:20,000 --> 00:02:26,000
Each different series here corresponds to each different element in the angles array.

39
00:02:26,000 --> 00:02:31,000
As you can see, because each of these particles is leaving out a different initial angle.

40
00:02:31,000 --> 00:02:34,000
From this graph, we can see that as we change the initial angle,

41
00:02:34,000 --> 00:02:38,000
we also drastically change where the particles going to end up landing.

42
00:02:38,000 --> 00:02:43,000
Now, we move on to a problem that combines both this idea of ballistic trajectory

43
00:02:43,000 --> 00:02:45,000
and the idea of orbits from the previous problem.
