1
00:00:00,540 --> 00:00:05,020
Traditionally design documentation has included information about the components

2
00:00:05,020 --> 00:00:09,150
you've carved the system up into, what their responsibilities are,

3
00:00:09,150 --> 00:00:14,000
what their primary data flows are and so on. Other elements of traditional

4
00:00:14,000 --> 00:00:18,160
documentation include, how you going to deal with performance considerations.

5
00:00:18,160 --> 00:00:21,670
And resource consumption, by resource here we might mean memory,

6
00:00:21,670 --> 00:00:26,830
we might mean use of peripherals, bandwidth and so on. It that's not enough for

7
00:00:26,830 --> 00:00:30,560
you, if your organization needs more detail documentation,

8
00:00:30,560 --> 00:00:36,202
you might rely on some IEEE standards, such as standard 1016.

9
00:00:38,110 --> 00:00:42,700
Some of the key elements that the standard add to the list

10
00:00:42,700 --> 00:00:47,080
that is traditionally used are things like who is the designer? It might be

11
00:00:47,080 --> 00:00:51,670
nice to know if you have to go back for a question, who was responsible for

12
00:00:51,670 --> 00:00:55,970
a particular piece of the design. What are the dependencies among the elements?

13
00:00:55,970 --> 00:00:59,750
Are there hidden assumptions that one component is making about other

14
00:00:59,750 --> 00:01:02,980
components? What are the tradeoffs among the non-functional constraints?

15
00:01:04,090 --> 00:01:08,110
How did you decide to take a particular tradeoff? What assumptions are you

16
00:01:08,110 --> 00:01:12,370
making about your users, about the technology that will be available for

17
00:01:12,370 --> 00:01:15,830
the hardware, and about the changing customer base? And

18
00:01:15,830 --> 00:01:22,240
which particular. Views of the software system as your documentation providing.
