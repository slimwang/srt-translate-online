1
00:00:00,340 --> 00:00:02,910
With our previous discussion
of the classes, P and

2
00:00:02,910 --> 00:00:06,210
NP in mind,
you can visualize the classes like this.

3
00:00:07,290 --> 00:00:10,381
Clearly P is contained inside of NP.

4
00:00:10,381 --> 00:00:13,310
And we're pretty sure that
this containment is strict.

5
00:00:13,310 --> 00:00:17,629
That is to say there are some
problems in NP but not in P.

6
00:00:17,629 --> 00:00:19,871
Where the answer can be
verified efficiently, but

7
00:00:19,871 --> 00:00:22,200
it can't be found efficiently.

8
00:00:22,200 --> 00:00:24,610
But no one knows how to prove this yet.

9
00:00:24,610 --> 00:00:27,790
In this picture then, you can imagine
the harder problems being at the top.

10
00:00:29,150 --> 00:00:29,760
Now, suppose for

11
00:00:29,760 --> 00:00:33,560
a moment that you encounter some problem
where you know how to verify the answer

12
00:00:33,560 --> 00:00:37,800
but where you think that finding
an answer is intractable.

13
00:00:37,800 --> 00:00:41,456
Unfortunately, you boss or maybe your
advisor doesn't agree with you, and

14
00:00:41,456 --> 00:00:43,434
keeps asking for an efficient solution.

15
00:00:43,434 --> 00:00:47,080
How would you go about showing that
the problem is, in fact, intractable?

16
00:00:47,080 --> 00:00:49,610
One idea is to show that
the problem is not in P.

17
00:00:50,710 --> 00:00:54,853
That would indeed show that it is not
intractable, but it would do much more.

18
00:00:54,853 --> 00:00:58,083
It would show that P is not equal to NP.

19
00:00:58,083 --> 00:00:59,870
You would be famous.

20
00:00:59,870 --> 00:01:01,480
As we talked about in the last lecture,

21
00:01:01,480 --> 00:01:05,730
whether P is equal to NP is one of
the great open questions in mathematics.

22
00:01:05,730 --> 00:01:06,620
So I'm going to cross that out.

23
00:01:06,620 --> 00:01:09,447
I don't want to discourage you
from trying to prove this theorem

24
00:01:09,447 --> 00:01:10,720
necessarily.

25
00:01:10,720 --> 00:01:12,760
You should just know
what you're getting into.

26
00:01:12,760 --> 00:01:17,410
Another option is to reduce another
intractable problem to your problem.

27
00:01:17,410 --> 00:01:20,200
If you were working in the early or
mid-1970s,

28
00:01:20,200 --> 00:01:23,280
you might have reduced linear
programming to your problem.

29
00:01:23,280 --> 00:01:26,950
Practical methods for solving some
linear programs were available, but

30
00:01:26,950 --> 00:01:29,900
most people thought that in general
it was not polynomially solvable.

31
00:01:31,360 --> 00:01:35,000
Since the solution to your problem
would solve any linear program

32
00:01:35,000 --> 00:01:36,980
your problem must be harder.

33
00:01:36,980 --> 00:01:39,800
The trouble with this approach is
that it was later shown that linear

34
00:01:39,800 --> 00:01:43,180
programming actually was
polynomially solvable.

35
00:01:43,180 --> 00:01:46,480
Hence the fact that your problem
is as hard as linear programming

36
00:01:46,480 --> 00:01:48,260
doesn't mean much anymore.

37
00:01:48,260 --> 00:01:50,940
The Class P swallowed
linear programming.

38
00:01:50,940 --> 00:01:52,680
Why couldn't it swallow your program,
as well?

39
00:01:53,780 --> 00:01:56,020
This type of argument isn't worthless,
but

40
00:01:56,020 --> 00:01:57,290
it's not as convincing as it might be.

41
00:01:57,290 --> 00:02:00,070
It would be much better
to reduce your problem

42
00:02:00,070 --> 00:02:02,720
to a problem that we knew was
one of the hardest in NP.

43
00:02:03,750 --> 00:02:06,335
So hard that if P were to swallow it,

44
00:02:06,335 --> 00:02:09,621
it would've had to have
swallowed all of NP.

45
00:02:09,621 --> 00:02:10,441
In other words,

46
00:02:10,441 --> 00:02:13,380
it would have to move this line
here all the way up to the top.

47
00:02:14,700 --> 00:02:17,280
Such a problem would
have to be NP complete.

48
00:02:17,280 --> 00:02:20,130
Meaning that we can reduce
every language in NP to it.

49
00:02:21,480 --> 00:02:25,840
Remarkable as it may seem, it turns
out there are lots of such languages,

50
00:02:25,840 --> 00:02:29,080
satisfiability being the first one for
which this was proved.

51
00:02:30,170 --> 00:02:32,760
In other words, we know that it has
to be at the top of this image.

52
00:02:34,590 --> 00:02:37,546
Turning back to how to show that
your problem is intractable.

53
00:02:37,546 --> 00:02:41,707
Short of proving that P is not equal
to NP, the best we can do is reduce

54
00:02:41,707 --> 00:02:45,680
an NP-complete problem
like SAT to your problem.

55
00:02:45,680 --> 00:02:48,740
Then your problem would
also be NP-complete and

56
00:02:48,740 --> 00:02:51,730
the only way that your problem could
be polynomially solvable is if

57
00:02:51,730 --> 00:02:57,090
this line moves up here and everything
in NP Is polynomially solvable.

58
00:02:57,090 --> 00:02:58,900
There are two parts to this argument.

59
00:02:58,900 --> 00:03:02,330
The first is the idea of
a polynomial reduction.

60
00:03:02,330 --> 00:03:05,603
We've seen reductions before in
the context of computability.

61
00:03:05,603 --> 00:03:08,843
Here, are the reductions we not
only have to be computable, but

62
00:03:08,843 --> 00:03:11,400
to be computable in polynomial time.

63
00:03:11,400 --> 00:03:14,540
This idea will occupy
the first half of the lesson.

64
00:03:14,540 --> 00:03:18,170
The second half, we'll consider
this idea of NP completeness and

65
00:03:18,170 --> 00:03:20,400
we'll go over the famous
Cook-Levin theorem.

66
00:03:20,400 --> 00:03:24,234
Which showed that bouillon
satisfiability is NP-complete
