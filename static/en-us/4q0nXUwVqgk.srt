1
00:00:00,000 --> 00:00:03,740
We started out with a brute force algorithm,

2
00:00:03,740 --> 00:00:10,640
and the brute force algorithm basically considered 2 to the power of N assignments.

3
00:00:10,640 --> 00:00:14,510
Now let's look at our smart search tree or intelligent search tree

4
00:00:14,510 --> 00:00:16,379
and see how that is structured.

5
00:00:16,379 --> 00:00:19,320
We're going to do a worst case analysis here.

6
00:00:19,320 --> 00:00:22,360
We start out with a graph where we don't have any assignments,

7
00:00:22,360 --> 00:00:26,760
and then we branch into 3 different possibilities.

8
00:00:26,760 --> 00:00:30,660
Up here we don't know anything, so we have 0 vertices assigned.

9
00:00:30,660 --> 00:00:32,340
Now, since we know that we can construct it

10
00:00:32,340 --> 00:00:36,150
so that in the next level we will have at least 2 more vertices assigned,

11
00:00:36,150 --> 00:00:39,240
here we know that we have at least 2 vertices assigned.

12
00:00:39,240 --> 00:00:43,970
We can go 1 level deeper and again we will branch into 3 possibilities all of the time.

13
00:00:43,970 --> 00:00:47,110
Because we're doing a worst case analysis, of course we could already be done.

14
00:00:47,110 --> 00:00:48,860
Or let's say we just continue.

15
00:00:48,860 --> 00:00:52,480
In the next level we have again at least 2 more,

16
00:00:52,480 --> 00:00:56,150
so we have at least 4 vertices assigned and so on.

17
00:00:56,150 --> 00:00:59,250
So let's say we continue the search tree in this manner,

18
00:00:59,250 --> 00:01:01,290
so we will always get wider and wider and wider.

19
00:01:01,290 --> 00:01:03,010
Then we know 2 things.

20
00:01:03,010 --> 00:01:08,220
One is that the number of levels that we have can be, at most, N/2

21
00:01:08,220 --> 00:01:11,190
because every time we assign at least 2 vertices.

22
00:01:11,190 --> 00:01:14,940
So N and a half levels is the maximum number of levels that we can have

23
00:01:14,940 --> 00:01:17,700
because after that, all vertices have been assigned.

24
00:01:17,700 --> 00:01:23,030
And another thing that we know is that while we start out with 1 possibility

25
00:01:23,030 --> 00:01:27,760
and each time we go 1 level deeper, again doing a worse case analysis here,

26
00:01:27,760 --> 00:01:31,120
the number of possibilities that we consider triples.

27
00:01:31,120 --> 00:01:34,220
The tree basically gets wider by a factor of 3.

28
00:01:34,220 --> 00:01:36,460
The width is times 3 at each level.

29
00:01:36,460 --> 00:01:41,610
My question for you is if you look at the lowest level of the search tree,

30
00:01:41,610 --> 00:01:46,930
each of these ones down here is an assignment of 0 and 1 to the vertices.

31
00:01:46,930 --> 00:01:51,070
What I would like you to think about is how many different assignments

32
00:01:51,070 --> 00:01:54,500
do we have at this level down here, level N/2?

33
00:01:54,500 --> 00:01:59,050
You can assume for simplicity that N is an even number, so N/2 will be some integer.

34
00:01:59,050 --> 00:02:00,650
I'll give you a number of choices.

35
00:02:00,650 --> 00:02:04,430
Is it 2 to the power of N assignments that we have down here?

36
00:02:04,430 --> 00:02:09,330
Is it 3 to the power of N/2 assignments that we have down here?

37
00:02:09,330 --> 00:02:14,540
Is it 3 to the power of N? Is it 2 to the power of 3 times N?

38
00:02:14,540 --> 00:02:19,010
Or is it 2 to the power of N/2 times 3?

39
00:02:19,010 --> 00:02:21,000
You might have to think about this for a little bit,

40
00:02:21,000 --> 00:02:23,070
but just keep in mind the facts.

41
00:02:23,070 --> 00:02:27,220
The number of assignments that we are considering triples at each level,

42
00:02:27,220 --> 99:59:59,999
and we have N and a half levels.
