1
00:00:00,290 --> 00:00:03,280
So we're going to look at
an example of a relation or

2
00:00:03,280 --> 00:00:05,880
a table that we just talked about.

3
00:00:05,880 --> 00:00:10,080
This example that we have here
is- the name of this relation or

4
00:00:10,080 --> 00:00:12,860
table is Employee because it store

5
00:00:12,860 --> 00:00:17,330
Information about employees that we
have, maybe in a certain company.

6
00:00:17,330 --> 00:00:19,460
So, the columns or

7
00:00:19,460 --> 00:00:23,970
the attributes schema that we're
talking about is defined as follows.

8
00:00:23,970 --> 00:00:27,650
You're going to have an employee name,
going to have an identifier for

9
00:00:27,650 --> 00:00:30,040
the department in which they work,
that's Did,

10
00:00:30,040 --> 00:00:34,670
the salary we don't have the value,
but we have a code for the salary.

11
00:00:34,670 --> 00:00:37,740
We have the employee's ID and
then we have their phone.

12
00:00:37,740 --> 00:00:42,620
The information about a given employee
consists of their name, the department,

13
00:00:42,620 --> 00:00:46,640
the salary code, their ID, and their
phone numbers, so you can reach them.

14
00:00:46,640 --> 00:00:50,230
Now, in this particular organization,
we have a bunch of employees.

15
00:00:50,230 --> 00:00:54,090
Robin, Neil, Jasmine,
Cody, Holly, and so on.

16
00:00:54,090 --> 00:00:56,510
So for each of them we're
going to have a tuple.

17
00:00:56,510 --> 00:01:00,070
So if you look at sort of
a given row in this table here,

18
00:01:00,070 --> 00:01:02,440
that is what we are calling a tuple.

19
00:01:02,440 --> 00:01:06,030
And we uniquely identify
those by the employee ID.

20
00:01:06,030 --> 00:01:07,920
So in case of Robin for

21
00:01:07,920 --> 00:01:13,170
example 2345 is the primary
key value for employee Robin.

22
00:01:13,170 --> 00:01:17,370
So we are going to see primary keys
are how we actually say what set of

23
00:01:17,370 --> 00:01:18,360
employees.

24
00:01:18,360 --> 00:01:20,440
You may want to get
information about them.

25
00:01:20,440 --> 00:01:21,120
Things like that.

26
00:01:21,120 --> 00:01:24,440
So this is the key, and these
are the key values that we have here.

27
00:01:24,440 --> 00:01:25,390
So as you can see,

28
00:01:25,390 --> 00:01:29,460
for each employee that information
makes up a tuple in the table.

29
00:01:29,460 --> 00:01:32,420
The collection of those
instructed organize this way.

30
00:01:32,420 --> 00:01:34,490
That's what makes a table.

31
00:01:34,490 --> 00:01:38,350
The various attributes that
we have which define what's

32
00:01:38,350 --> 00:01:42,980
stored in this table is based on
this schema that we have here.

33
00:01:42,980 --> 00:01:46,030
I have something else here
which a foreign key and

34
00:01:46,030 --> 00:01:49,270
the reason I included that
here is because sometimes

35
00:01:49,270 --> 00:01:52,590
you may want to do operations
across different tables.

36
00:01:52,590 --> 00:01:56,220
So foreign key basically is going
to be key in some other table,

37
00:01:56,220 --> 00:01:59,580
and we can do what is called joins for
example.

38
00:01:59,580 --> 00:02:02,130
Put data together from multiple tables.

39
00:02:02,130 --> 00:02:03,610
Well you can say,

40
00:02:03,610 --> 00:02:09,090
this is the foreign key that should
match a primary key in another table.

41
00:02:09,090 --> 00:02:14,190
And then I want to pull information
about Robin's department salary code and

42
00:02:14,190 --> 00:02:18,460
employee ID from here and
her Social Security, address,

43
00:02:18,460 --> 00:02:20,840
other things from different table and
things like that.

44
00:02:20,840 --> 00:02:25,570
So there maybe the department IDs that
keep for example and won't be unique

45
00:02:25,570 --> 00:02:28,640
if you're trying to pull Social Security
numbers and things like that.

46
00:02:28,640 --> 00:02:32,560
So foreign key is essentially a primary
key somewhere else and somehow,

47
00:02:32,560 --> 00:02:36,410
sometimes you may have to sort of
combine information from multiple tables

48
00:02:36,410 --> 00:02:40,180
and we use these keys for doing that.

49
00:02:40,180 --> 00:02:43,760
And so some of the fields may be
the attribute values that we have here.

50
00:02:43,760 --> 00:02:47,660
You're not going to use them as the key
for accessing Tuples from here, but

51
00:02:47,660 --> 00:02:52,410
when you referred another relation and
operation across multiple tables,

52
00:02:52,410 --> 00:02:54,040
that's where they get used.

53
00:02:54,040 --> 00:02:56,070
Again, if you've done
your database scores,

54
00:02:56,070 --> 00:02:59,850
you probably have learnt a lot more
about it than what we need here.
