1
00:00:00,420 --> 00:00:03,750
If you've gotten this far,
you've done some really cool stuff with

2
00:00:03,750 --> 00:00:07,510
understanding the location and
context of your device.

3
00:00:07,510 --> 00:00:08,930
From the skills you've learned,

4
00:00:08,930 --> 00:00:12,510
you'll be able to write applications
that know where your phone is,

5
00:00:12,510 --> 00:00:16,280
where it's going, and maybe even
how high off the ground it is.

6
00:00:16,280 --> 00:00:18,690
Now how about we take
it to the next level?

7
00:00:18,690 --> 00:00:23,010
How about an app that tells you when
you enter or leave a specific location?

8
00:00:23,010 --> 00:00:25,620
You could use this for
social checkings, or maybe,

9
00:00:25,620 --> 00:00:29,020
as a parent, you can use this
to tell when your kids get home.

10
00:00:29,020 --> 00:00:32,840
I've even seen games that use this,
where they virtually hide loot, and

11
00:00:32,840 --> 00:00:36,120
when you go to the real world location,
your device knows and can react.

12
00:00:37,720 --> 00:00:41,508
A great and easy way to implement
this is using a geofence.

13
00:00:41,508 --> 00:00:44,530
Simply, a geofence is
a location in latitude and

14
00:00:44,530 --> 00:00:48,950
longitude, a radius around that location
and a time for which it's active.

15
00:00:48,950 --> 00:00:50,910
So for example,
you could put the latitude and

16
00:00:50,910 --> 00:00:52,860
longitude of your lute stash.

17
00:00:52,860 --> 00:00:57,570
A radius of, say, ten meters and
data that is only active on weekends.

18
00:00:57,570 --> 00:01:00,500
The location APIs will take this and
when you exit or

19
00:01:00,500 --> 00:01:04,030
enter that space, it can be used
to generate a notification.

20
00:01:04,030 --> 00:01:07,350
It's up to you, as a developer,
how you handle this.

21
00:01:07,350 --> 00:01:08,590
Does that sound exciting?

22
00:01:08,590 --> 00:01:09,430
Well I think so.

23
00:01:09,430 --> 00:01:11,080
So let's dive in and learn how it works.
