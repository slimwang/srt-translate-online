1
00:00:00,000 --> 00:00:03,000
[Evans] I hope you're starting to feel fairly confident that you understand lists,

2
00:00:03,000 --> 00:00:06,000
you understand the operations we can do on lists,

3
00:00:06,000 --> 00:00:11,000
and you understand how to use for and while to loop through elements of a list.

4
00:00:11,000 --> 00:00:15,000
For this quiz we're going to try something a fair bit tougher than what you've seen so far.

5
00:00:15,000 --> 00:00:19,000
Your goal is to define a procedure, named find_element, that takes 2 inputs.

6
00:00:19,000 --> 00:00:21,000
The first input is a list.

7
00:00:21,000 --> 00:00:24,000
It can be a list of any type of element,

8
00:00:24,000 --> 00:00:27,000
and the second input is a value which can be of any type,

9
00:00:27,000 --> 00:00:30,000
and it outputs the index of the first element in the input list

10
00:00:30,000 --> 00:00:34,000
that matches the value that's passed in as the second input.

11
00:00:34,000 --> 00:00:37,000
One of the things you should think about when you define a procedure

12
00:00:37,000 --> 00:00:41,000
is whether there are any special cases that it's not clear what you should do.

13
00:00:41,000 --> 00:00:43,000
In this case the question as I've stated it so far

14
00:00:43,000 --> 00:00:47,000
doesn't explain what to do if the input list doesn't contain any element

15
00:00:47,000 --> 00:00:51,000
that matches the value that's passed in as the second input.

16
00:00:51,000 --> 00:00:54,000
We'll change it to make that more clear,

17
00:00:54,000 --> 00:00:57,000
and we'll make it behave like the find method that we saw in strings.

18
00:00:57,000 --> 00:01:01,000
So if the element doesn't exist, we'll return -1.

19
00:01:01,000 --> 00:01:04,000
Here's a few examples.

20
00:01:04,000 --> 00:01:08,000
If you call find_element, passing in as the list the list 1, 2, 3

21
00:01:08,000 --> 00:01:12,000
and passing in as the value to match the number 3,

22
00:01:12,000 --> 00:01:16,000
we find the match here, which is position 2,

23
00:01:16,000 --> 00:01:19,000
so the output should be 2.

24
00:01:19,000 --> 00:01:25,000
If we pass in as the list the list containing the strings alpha and beta

25
00:01:25,000 --> 00:01:29,000
and we pass in as the element to find the string gamma,

26
00:01:29,000 --> 00:01:34,000
there's no such element in the list, so the output should be -1.

27
00:01:34,000 --> 00:01:36,000
There are many different ways you could define find_element

28
00:01:36,000 --> 00:01:39,000
using the things that we've seen so far.

29
00:01:39,000 --> 00:01:42,000
See if you can find a way to define it that has this behavior.
