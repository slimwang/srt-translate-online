1
00:00:00,400 --> 00:00:04,210
In the next few videos we'll cover the
code for working with scales, but for

2
00:00:04,210 --> 00:00:06,610
now I'd like to stay at
a very high level and

3
00:00:06,610 --> 00:00:09,580
use graphics to explain what's
happening when you use a scale.

4
00:00:10,980 --> 00:00:15,140
The first thing you need to know is
that when working with an SVG canvas

5
00:00:15,140 --> 00:00:19,450
the coordinates, in particular
the Y coordinates start at 0 and

6
00:00:19,450 --> 00:00:21,260
then increase going down.

7
00:00:21,260 --> 00:00:25,100
This is a little bit counterintuitive
to what you typically think of

8
00:00:25,100 --> 00:00:25,980
when you think of a graph.

9
00:00:27,300 --> 00:00:32,299
Usually the Y values start at 0 at
the bottom of an increase going up, but

10
00:00:32,299 --> 00:00:35,400
the opposite is true for SVGs.

11
00:00:35,400 --> 00:00:40,170
As you move to the right on an SVG
element, the X values increase.

12
00:00:40,170 --> 00:00:45,510
And as you move down on an SVG element,
the Y values will increase.

13
00:00:45,510 --> 00:00:49,700
This means that for our gapminder plot,
life expectancy values, which are really

14
00:00:49,700 --> 00:00:54,740
high in the case for China's dot,
need to map to lower pixel values.

15
00:00:54,740 --> 00:00:56,320
And conversely, countries for

16
00:00:56,320 --> 00:01:00,779
which the life expectancy is low need
to map to higher Y pixel values.

17
00:01:02,120 --> 00:01:06,290
This green bar represents the scale of
life expectancy on the gap minder plot.

18
00:01:06,290 --> 00:01:10,430
At the bottom,
there's a minimum value of 15 years, and

19
00:01:10,430 --> 00:01:13,010
at the top,
there's a maximum value of 90 years.

20
00:01:14,020 --> 00:01:18,400
So what we'd like to do is map
all the values between 15 and

21
00:01:18,400 --> 00:01:22,670
90 to pixel values between 0 and 250.

22
00:01:22,670 --> 00:01:26,150
This blue bar will represent all
the pixel values that we'd like to map

23
00:01:26,150 --> 00:01:28,080
our data into.

24
00:01:28,080 --> 00:01:33,590
So our highest life expectancy value
of 90 needs to map to 0 pixels.

25
00:01:33,590 --> 00:01:38,039
And our lowest life expectancy value
of 15 needs to map to 250 pixels.

26
00:01:39,760 --> 00:01:43,770
D3 refers to the input values
as the domain of the data.

27
00:01:43,770 --> 00:01:46,560
We'll use this when we
construct our d3 scale.

28
00:01:46,560 --> 00:01:49,920
In d3, can be represented
by the minimum number and

29
00:01:49,920 --> 00:01:52,030
the maximum value in terms in an array.

30
00:01:53,070 --> 00:01:57,940
So we'll be using this when we
construct our life expectancy scale.

31
00:01:57,940 --> 00:02:00,210
And note that we're not just
mapping the minimum and

32
00:02:00,210 --> 00:02:05,000
the maximum value, we're also mapping
all the other values that are in between

33
00:02:05,000 --> 00:02:06,919
two corresponding pixel values.

34
00:02:08,800 --> 00:02:12,900
D3 refers to the pixel values you want
to map the input data to as the range.

35
00:02:12,900 --> 00:02:17,390
This is also represented by
a minimum value and a maximum value.

36
00:02:17,390 --> 00:02:19,500
You'll see this part of the code later.

37
00:02:20,550 --> 00:02:25,070
In order to map or transform
our input data to pixel values,

38
00:02:25,070 --> 00:02:29,760
we need to specify a function to take in
a data value and produce a pixel value.

39
00:02:30,950 --> 00:02:33,150
In the case of life expectancy,

40
00:02:33,150 --> 00:02:36,820
the scale that we want was
linear in the Gapminder plot.

41
00:02:36,820 --> 00:02:41,300
Thinking mathematically about this
transform, we want to map our domain,

42
00:02:41,300 --> 00:02:46,780
these values, into a range of pixel
values using some type of function.

43
00:02:46,780 --> 00:02:48,580
Since we're using a linear scale,

44
00:02:48,580 --> 00:02:51,530
the function is simply
the equation of a line.

45
00:02:51,530 --> 00:02:54,600
Now, you don't need to worry
about the values of m and b,

46
00:02:54,600 --> 00:02:57,130
since D3 can calculate
these two values for you.

47
00:02:58,210 --> 00:03:01,600
Just know that you're
inputting some data value here

48
00:03:01,600 --> 00:03:04,820
to get out some pixel value here.

49
00:03:04,820 --> 00:03:07,530
D3 does this all behind the scenes for
you.

50
00:03:07,530 --> 00:03:10,780
The only thing that you need to do,
is specify a minimum and

51
00:03:10,780 --> 00:03:15,190
maximum for the domain and
a minimum and maximum for the range.

52
00:03:15,190 --> 00:03:17,820
And also the type of scale
that you'll be using.

53
00:03:17,820 --> 00:03:22,000
The D3 scale function figures out
the appropriate values or constants

54
00:03:22,000 --> 00:03:26,950
to transform each life expectancy value
into its corresponding pixel value.

55
00:03:28,270 --> 00:03:32,510
Now that we have some conceptual idea
of why D3 scales are important and

56
00:03:32,510 --> 00:03:36,870
how they work, let's jump into some
live code to put scales into practice
