1
00:00:00,300 --> 00:00:02,940
To answer this question we need to know the number of

2
00:00:02,940 --> 00:00:05,730
users who did check in using mobile and the total number of

3
00:00:05,730 --> 00:00:09,790
users in our sample. Now I could have just used these two

4
00:00:09,790 --> 00:00:13,890
numbers and divided them, but I want to do this programmatically. To

5
00:00:13,890 --> 00:00:16,570
do that I can take the sum of my mobile check

6
00:00:16,570 --> 00:00:19,290
in variables when it's equal to one. And then divide that by

7
00:00:19,290 --> 00:00:22,040
the length of that vector. This is how many users are in

8
00:00:22,040 --> 00:00:24,638
our sample. Running that code I can see that I get about

9
00:00:24,638 --> 00:00:30,430
64.5%, or 64.6%. Rounding to the nearest percent, that's just

10
00:00:30,430 --> 00:00:33,370
65. Now that's over half of the users in the data

11
00:00:33,370 --> 00:00:35,330
set, so it wouldn't make a whole lot of sense

12
00:00:35,330 --> 00:00:38,500
to continue the development of the mobile experience. At least based

13
00:00:38,500 --> 00:00:41,750
on this sample data set. So when you're answering questions,

14
00:00:41,750 --> 00:00:44,140
it's important not to just think about what kind of data

15
00:00:44,140 --> 00:00:46,850
you're looking at but maybe what types of transformations you can

16
00:00:46,850 --> 00:00:50,280
make to the variables themselves. Sometimes you want raw counts, and

17
00:00:50,280 --> 00:00:52,940
other times you just want a binary yes or no, did a

18
00:00:52,940 --> 00:00:56,160
user use this. It's important to think about what kind of data you

19
00:00:56,160 --> 00:01:00,260
need to answer a specific question. So not every sort of transformation

20
00:01:00,260 --> 00:01:04,080
you do has to be a functional transformation like square root or log.
