1
00:00:00,012 --> 00:00:02,347
It's also important to understand what it is you're trying to accomplish

2
00:00:02,347 --> 00:00:04,246
by parallelizing the code.

3
00:00:04,246 --> 00:00:07,795
Say you have a serial program that solves a certain problem size P in time T.

4
00:00:07,795 --> 00:00:11,022
Maybe you're simulating how a certain protein molecule folds,

5
00:00:11,022 --> 00:00:13,525
and that simulation takes an hour to run.

6
00:00:13,525 --> 00:00:16,770
Weak scaling is what we refer to when we're talking about using parallel computing

7
00:00:16,770 --> 00:00:20,091
to run a larger problem or perhaps to run more problems.

8
00:00:20,091 --> 00:00:22,160
So if you wanted to run a bigger protein,

9
00:00:22,160 --> 00:00:25,536
if you wanted to fold a bigger protein in your simulation and still take an hour,

10
00:00:25,536 --> 00:00:29,334
or if you wanted to fold many small proteins in the same hour,

11
00:00:29,334 --> 00:00:32,077
then that would be an example of weak scaling.

12
00:00:32,077 --> 00:00:36,999
Strong scaling means using parallel computing to run a problem faster, a single problem size.

13
00:00:36,999 --> 00:00:40,374
So if you wanted to fold that same protein that you were folding in an hour

14
00:00:40,374 --> 00:00:44,842
and you wanted to fold it in a minute, then that would be an example of strong scaling.

15
00:00:44,842 --> 00:00:48,787
More formally, we could say that weak scaling describes how the solution size

16
00:00:48,787 --> 00:00:53,624
varies with a fixed problem size per processor as you add processors.

17
00:00:53,624 --> 00:00:57,473
We would say that strong scaling describes how the solution size varies

18
00:00:57,473 --> 00:01:01,639
as you add processors to tackle a fixed total problem size.
