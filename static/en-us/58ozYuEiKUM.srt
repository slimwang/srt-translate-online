1
00:00:00,012 --> 00:00:03,732
>> Just like we computed the xy position of the tile index for our atlas, we can

2
00:00:03,732 --> 00:00:07,572
use the same math magic to determine what position in the worldX and worldY we

3
00:00:07,572 --> 00:00:11,607
need to draw this tile. We change the numbers, right? Given the tile index, we

4
00:00:11,607 --> 00:00:15,327
modulate it by the number of x tiles, and divide it by the number of x tiles

5
00:00:15,327 --> 00:00:19,434
times by the tile size, to give us our pixel offsets in the world. From there,

6
00:00:19,434 --> 00:00:23,850
we go back to our accelerated draw image API, that passes the image, x, y in the

7
00:00:23,850 --> 00:00:28,181
source, tile size and tile x in the source. And then, where we would like to

8
00:00:28,181 --> 00:00:32,436
draw it in the world X and Y? Notice that the tile size for the source and the

9
00:00:32,436 --> 00:00:37,071
destination are identical here. This means we'd actually like to draw a 64 pixel

10
00:00:37,071 --> 00:00:41,487
by 64 pixel atlas image, to represent a 64 pixel by 64 pixel image inside of our

11
00:00:41,487 --> 00:00:41,985
world.
