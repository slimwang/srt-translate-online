1
00:00:00,280 --> 00:00:02,420
That's what I wanted to say about components.

2
00:00:02,420 --> 00:00:05,920
In a sense components are easier because, you're going to,

3
00:00:05,920 --> 00:00:09,760
devise them in terms of the functionality, and the functionality is,

4
00:00:09,760 --> 00:00:15,010
dominates what's in the requirements, specification. Connectors are trickier.

5
00:00:15,010 --> 00:00:20,460
Okay. Connectors, are, where the designer has to make some specific choices

6
00:00:20,460 --> 00:00:24,740
about how to deal with problems. Taylor's definition is a, a connector is a,

7
00:00:24,740 --> 00:00:28,620
a software connector is an architectural element tasked with effecting and

8
00:00:28,620 --> 00:00:33,750
regulating interactions among components, the piping between those components.

9
00:00:33,750 --> 00:00:37,750
The key way that I like to look at connectors is they provide a protocol for

10
00:00:37,750 --> 00:00:42,300
interaction among those components. A protocol is a kind of a language saying

11
00:00:42,300 --> 00:00:46,040
who speaks in what order. What information is passed back and forth, and

12
00:00:46,040 --> 00:00:50,220
what to do if something goes wrong. We're going to later in the course,

13
00:00:50,220 --> 00:00:53,300
devote a whole class to discussing connectors.
