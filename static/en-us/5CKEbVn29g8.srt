1
00:00:00,280 --> 00:00:03,749
The first answer doesn't solve anything. It's just saying to do what we already

2
00:00:03,749 --> 00:00:07,753
pretty much do. Shade the surface only if it points towards the light. The

3
00:00:07,753 --> 00:00:12,088
second answer works. You can use a slightly different vertex shader to render an

4
00:00:12,088 --> 00:00:16,238
objects geometry a second time, reversing the normal before using it. The third

5
00:00:16,238 --> 00:00:20,385
answer doesn't work because culling is off. If you render two meshes in exactly

6
00:00:20,385 --> 00:00:25,080
the same location, you will get z fighting. If culling was turned on in the data

7
00:00:25,080 --> 00:00:29,490
set properly, this solution would work. Well, this solution doubles the size of

8
00:00:29,490 --> 00:00:33,230
the geometry need to store. It does have the advantage of not needing any

9
00:00:33,230 --> 00:00:36,806
special treatment. It's just another object to render in the normal way. The

10
00:00:36,806 --> 00:00:41,275
fourth answer will make almost all surfaces get some light. This fix will have

11
00:00:41,275 --> 00:00:44,874
the effect of properly making the dark inside of the object be lit. However,

12
00:00:44,874 --> 00:00:48,778
there are also areas inside that are lit that shouldn't be, and these will

13
00:00:48,778 --> 00:00:53,339
continue to be lit. Similarly, the outside of the object would now be lit in

14
00:00:53,339 --> 00:00:57,323
both sides, which gets too much light, so this answer is wrong.
