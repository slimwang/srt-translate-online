1
00:00:00,400 --> 00:00:03,460
So this required some guesswork, since we hadn't actually run

2
00:00:03,460 --> 00:00:06,850
any examples this large. But if you understood the examples

3
00:00:06,850 --> 00:00:08,970
we saw with the smaller inputs, you should have been

4
00:00:08,970 --> 00:00:11,610
able to guess that it would take about a second to

5
00:00:11,610 --> 00:00:15,410
do a look up for a table with ten million keywords. And the reason for this, if

6
00:00:15,410 --> 00:00:21,540
we look at the previous executions, we saw, based on the keywords in the index,

7
00:00:21,540 --> 00:00:26,900
the time increased linearly. So, when we had 10,000

8
00:00:26,900 --> 00:00:30,280
keywords we measured the time as 0.0009 seconds. When

9
00:00:30,280 --> 00:00:34,410
we had 100,000, we measured the time as 0.009

10
00:00:34,410 --> 00:00:39,220
seconds. We didn't measure any times beyond that. The

11
00:00:39,220 --> 00:00:41,410
suggestion from looking at this is, well when, when

12
00:00:41,410 --> 00:00:43,620
we increased the number of keywords by ten, the

13
00:00:43,620 --> 00:00:45,990
time also increased by a factor of ten. So

14
00:00:45,990 --> 00:00:48,080
maybe if we could guess, that if we had

15
00:00:48,080 --> 00:00:52,484
a million keywords, it would probably take about 0.09

16
00:00:52,484 --> 00:00:55,564
seconds, to do a look up. If we had

17
00:00:55,564 --> 00:01:00,460
ten million, the time would take 0.9 seconds, which

18
00:01:00,460 --> 00:01:03,800
is close to one second. If we had a

19
00:01:03,800 --> 00:01:06,900
100 million, then the time would take about nine seconds.
