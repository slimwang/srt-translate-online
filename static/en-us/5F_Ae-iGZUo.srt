1
00:00:00,680 --> 00:00:03,610
For this style we will organize the components into layers.

2
00:00:03,610 --> 00:00:07,610
For the higher level components register their interest in lower level events

3
00:00:07,610 --> 00:00:10,760
and are then called back when the events occur.

4
00:00:10,760 --> 00:00:14,030
In particular, the upper level components don't know the identity of

5
00:00:14,030 --> 00:00:16,800
the lower level components providing the events.

6
00:00:16,800 --> 00:00:20,660
The lower layers are going to handle the external events

7
00:00:20,660 --> 00:00:23,790
propagating status changes upward.

8
00:00:23,790 --> 00:00:28,240
So when the user moves the handle, that particular event ultimately has to

9
00:00:28,240 --> 00:00:31,710
be handled so that the user sees something different.

10
00:00:31,710 --> 00:00:36,290
So the event has to be propagated to higher layers into the architecture.

11
00:00:36,290 --> 00:00:39,842
Which then handle it to, to affect all those indirect

12
00:00:39,842 --> 00:00:45,060
indirect implications of, of the requirements of the system.

13
00:00:45,060 --> 00:00:49,420
Well, I should say that the upper layers receive these notifications and

14
00:00:49,420 --> 00:00:51,370
they prepare and present the results.

15
00:00:51,370 --> 00:00:56,840
This propagation of events is implicit, so we call it implicit invocation.

16
00:00:56,840 --> 00:01:01,570
Event announcement is made without the source component knowing the recipient

17
00:01:01,570 --> 00:01:04,510
which is, which reduces the coupling between all the components.
