1
00:00:00,370 --> 00:00:01,839
Let's walk through
each of these steps so

2
00:00:01,839 --> 00:00:04,000
that you can see how to localize
the strings in your app.

3
00:00:05,090 --> 00:00:08,070
First we want to extract all
the hardcoded strings from the XML and

4
00:00:08,070 --> 00:00:11,570
Java files into a default
strings.xml file.

5
00:00:11,570 --> 00:00:12,870
Then we're going to update the XML and

6
00:00:12,870 --> 00:00:15,649
Java files to refer to
the appropriate string resources.

7
00:00:16,680 --> 00:00:19,796
And then we're going to provide
alternate translations in another

8
00:00:19,796 --> 00:00:20,367
language.

9
00:00:20,367 --> 00:00:22,840
Let's start with step one.

10
00:00:22,840 --> 00:00:24,231
In our activity_main layout,

11
00:00:24,231 --> 00:00:28,420
let's look at the strings that
are currently hardcoded into our layout.

12
00:00:28,420 --> 00:00:32,200
We have a TextView that displays
the word Toppings as a header in the UI.

13
00:00:33,210 --> 00:00:36,160
Currently, the English word is
hardcoded into the layout, and

14
00:00:36,160 --> 00:00:39,540
we even get a warning from
the Android Studio talking about it.

15
00:00:39,540 --> 00:00:42,340
It recommends that we use a @string
resource, so let's do that now.

16
00:00:43,600 --> 00:00:44,850
When I delete this, and

17
00:00:44,850 --> 00:00:48,208
then type in @string/toppings
as the name of the resource.

18
00:00:48,208 --> 00:00:52,010
But now I get an error saying that
Android Studio doesn't recognize

19
00:00:52,010 --> 00:00:53,160
this resource.

20
00:00:53,160 --> 00:00:56,260
I need to go into the strings.xml
file and define it.

21
00:00:56,260 --> 00:00:58,839
Looking at the file
structure of our app,

22
00:00:58,839 --> 00:01:03,201
I can go into the res values folder and
look for the strings.xml file.

23
00:01:03,201 --> 00:01:05,604
There are a couple of strings that
are already populated here and

24
00:01:05,604 --> 00:01:06,680
I'm going to add another one.

25
00:01:07,850 --> 00:01:11,390
I just declared a new string
resource with the name toppings.

26
00:01:11,390 --> 00:01:14,110
And the value is the English word for
toppings.

27
00:01:14,110 --> 00:01:16,760
The name of the string resource
isn't going to change, but

28
00:01:16,760 --> 00:01:20,520
the translated value will change
depending on the language.

29
00:01:20,520 --> 00:01:23,140
Notice that I added a comment
here to describe where

30
00:01:23,140 --> 00:01:25,390
the string is being used in the app.

31
00:01:25,390 --> 00:01:29,340
This will help the translator, or the
translation service who's helping out,

32
00:01:29,340 --> 00:01:33,860
to understand the context in which
this string is being used in our app.

33
00:01:33,860 --> 00:01:36,120
We also specify a character limit.

34
00:01:36,120 --> 00:01:39,860
This is also helpful for the translator
when space in the UI is limited.

35
00:01:41,160 --> 00:01:44,540
For example, the translator won't
pick a really long translation

36
00:01:44,540 --> 00:01:47,920
if they understand that we have
limited screen real estate.

37
00:01:47,920 --> 00:01:49,550
Going back to our layout file,

38
00:01:49,550 --> 00:01:52,340
now the error is gone because
this string resource exists.
