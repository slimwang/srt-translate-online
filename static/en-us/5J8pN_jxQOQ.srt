1
00:00:00,670 --> 00:00:04,121
Okay that was a simple case. Okay, and now have to consider the,

2
00:00:04,121 --> 00:00:07,113
the case in which the vectors do have elements, and

3
00:00:07,113 --> 00:00:11,430
we're going to also break this down into two more cases, depending on whether or

4
00:00:11,430 --> 00:00:15,980
not the first elements of x and y are identical. Okay? So

5
00:00:15,980 --> 00:00:19,330
first case is, yes they are identical. So in this case,

6
00:00:19,330 --> 00:00:23,330
determining whether X and Y are permutation, boils down to whether or

7
00:00:23,330 --> 00:00:29,000
not the tails of X and the tail of Y are permutations of each other.

8
00:00:29,000 --> 00:00:33,250
And the tail of a vector is everything except the first element. So we could say

9
00:00:33,250 --> 00:00:38,380
that, for this case, in order for the output to be a permutation of the input,

10
00:00:38,380 --> 00:00:44,330
the syntax on the. That you see on the slide holds. In particular that says,

11
00:00:44,330 --> 00:00:48,750
if the length of X is greater than 0, that's our special case.

12
00:00:48,750 --> 00:00:53,890
And our second special case was that the value in the first position of

13
00:00:53,890 --> 00:00:58,950
X is equal to the value of the first position in Y. And the third condition is

14
00:00:58,950 --> 00:01:03,770
if the permutation if, if the tail of X is a permutation of the tail of Y

15
00:01:03,770 --> 00:01:08,010
than we can conclude that in fact X and Y are permutations of each other.

16
00:01:08,010 --> 00:01:12,360
So what were doing now we, we handled the case where they were empty vectors and

17
00:01:12,360 --> 00:01:16,390
said they were permutations and in this case if these three conditions hold,

18
00:01:16,390 --> 00:01:21,360
they are permutations, okay? The other thing to note, is that, what we've

19
00:01:21,360 --> 00:01:26,320
defined here. Is a recursive definition. Now I warned you before about recursive

20
00:01:26,320 --> 00:01:32,160
definitions, often leading to cases where the definition is not meaningful.

21
00:01:32,160 --> 00:01:36,180
Now here I'm going to give you a specific situation in which you

22
00:01:36,180 --> 00:01:40,920
are allowed to do that. And we're allowed to do that because it essentially is,

23
00:01:40,920 --> 00:01:46,520
is an inductive argument. Okay? The permutations that we're using

24
00:01:47,690 --> 00:01:53,130
in our definition, are permutations on the tails of the input and output,

25
00:01:53,130 --> 00:01:58,410
okay? And the tails are everything but the first element and so they're shorter.

26
00:01:58,410 --> 00:02:02,000
And we also already have handled the case where we got down to 0 length.

27
00:02:03,190 --> 00:02:06,940
So we handled 0 length, and we handled everything in terms of its tail.

28
00:02:06,940 --> 00:02:10,320
We have a well founded induction here. And so

29
00:02:10,320 --> 00:02:14,490
in fact, our definition of permutation is in fact meaningful.

30
00:02:14,490 --> 00:02:18,895
We couldn't say that, X is a permutation of Y if X is a permutation of Y.

31
00:02:18,895 --> 00:02:22,700
Okay? That wouldn't be a meaningful induction. But here because we're

32
00:02:22,700 --> 00:02:26,310
shrinking it at every step, it is in fact a meaningful induction.
