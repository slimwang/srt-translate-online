1
00:00:00,017 --> 00:00:04,057
Now that we have actually looked at how
we can estimate the camera paths, let's

2
00:00:04,057 --> 00:00:07,813
talk about how we can go to figuring
out how to stabilize this camera path.

3
00:00:07,813 --> 00:00:11,043
So, again, I'm just showing
you these paths as before.

4
00:00:11,043 --> 00:00:15,958
What we're interested in now is
approximately find a path that as stable

5
00:00:15,958 --> 00:00:16,933
is possible.

6
00:00:16,933 --> 00:00:20,583
Here we refer back to some of
the simple cinematography principles.

7
00:00:20,583 --> 00:00:24,984
That is what are the best properties
of a stable path of a camera?

8
00:00:24,984 --> 00:00:28,050
Well, if I had a tripod and
this was my, you know,

9
00:00:28,050 --> 00:00:30,751
degree of freedom etc,
of the path itself,

10
00:00:30,751 --> 00:00:35,431
what I basically assume is that green
line here will keep the camera stable.

11
00:00:35,431 --> 00:00:38,414
Right?
There would be no changes in the degrees

12
00:00:38,414 --> 00:00:41,840
of freedom in x and y here,
so that would be my path.

13
00:00:41,840 --> 00:00:44,173
So, I need to find
a smooth path like this.

14
00:00:44,173 --> 00:00:48,220
Then the second one would basically be
I'm putting it on some sort of a railing

15
00:00:48,220 --> 00:00:51,102
and moving it around, so
that would be a dolly or a pan.

16
00:00:51,102 --> 00:00:54,484
This, in this case of differential,
it would be a linear segment.

17
00:00:54,484 --> 00:00:58,023
So, again, we have the red
path is the original one.

18
00:00:58,023 --> 00:01:02,050
We now added constraints to it and
found a path that has the yellows and

19
00:01:02,050 --> 00:01:02,823
the greens.

20
00:01:02,823 --> 00:01:06,832
And then basically, we need to
start dealing with the ease in and

21
00:01:06,832 --> 00:01:09,143
outs, which would be this and this.

22
00:01:09,143 --> 00:01:11,071
And here, it would be this here.

23
00:01:11,071 --> 00:01:15,434
So these ease in and out with respect
to all of this kind of start giving me

24
00:01:15,434 --> 00:01:17,545
a set of different constraints and

25
00:01:17,545 --> 00:01:21,135
different paths moving functions
on the red line itself.

26
00:01:21,135 --> 00:01:24,042
That's what we want to do in figuring
out how we want to smooth the path.

27
00:01:24,042 --> 00:01:29,206
So what we basically do is look at
these different types of models and

28
00:01:29,206 --> 00:01:32,565
use that as a constraint
on the path itself.

29
00:01:32,565 --> 00:01:35,338
And again, we do this with various
types of smoothing algorithms.

30
00:01:35,338 --> 00:01:38,956
Again, I refer you to the paper
that allows us to do this much more

31
00:01:38,956 --> 00:01:39,831
efficiently.

32
00:01:39,831 --> 00:01:42,066
So now, let's look at what this means.

33
00:01:42,066 --> 00:01:46,904
Basically, what we are interested in is
finding a crop window within a frame,

34
00:01:46,904 --> 00:01:48,752
which is for example, this.

35
00:01:48,752 --> 00:01:51,811
And what that basically means
is that there's a path.

36
00:01:51,811 --> 00:01:55,258
This whole window itself basically
is the envelope in this path

37
00:01:55,258 --> 00:01:56,436
right here, right?

38
00:01:56,436 --> 00:01:58,903
So for example,
I just made this small and

39
00:01:58,903 --> 00:02:02,569
this is the whole region that I
can actually cover within it and

40
00:02:02,569 --> 00:02:07,011
as long as I keep myself within this
region, I would be actually able to find

41
00:02:07,011 --> 00:02:11,275
the best possible crop window that
traverses through this range.

42
00:02:11,275 --> 00:02:12,750
Let's look at that again.

43
00:02:15,669 --> 00:02:18,678
So here basically,
this size kind of defines the window,

44
00:02:18,678 --> 00:02:20,190
the envelope in this thing.
