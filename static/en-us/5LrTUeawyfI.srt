1
00:00:00,000 --> 00:00:07,000
For this question, you're asked to produce a list of words from a string,

2
00:00:07,000 --> 00:00:10,000
which is separated either by white space or tags.

3
00:00:10,000 --> 00:00:13,000
You've got to strip out all the tags.

4
00:00:13,000 --> 00:00:19,000
We have tags here, here, here, here and here.

5
00:00:19,000 --> 00:00:23,000
Now, we can't just remove the tags completely, because then we'd have

6
00:00:23,000 --> 00:00:29,000
"Title" and this written as one word, and we don't want that.

7
00:00:29,000 --> 00:00:32,000
The first thing I'm going to do is I'm going to remove the tags.

8
00:00:32,000 --> 00:00:37,000
I'm going to search for the first tag, the opening tag and the closing tag,

9
00:00:37,000 --> 00:00:40,000
and then I'm going to remove the whole of the tag.

10
00:00:40,000 --> 00:00:47,000
But I'm not just going to remove it. I'm going to replace it with a space,

11
00:00:47,000 --> 00:00:52,000
because replacing it by a space means that I don't have the problem with things like

12
00:00:52,000 --> 00:00:56,000
"Titlethis" being run into one word.

13
00:00:56,000 --> 00:01:02,000
Once I've got all the tags replaced by spaces, I'm going to use the split

14
00:01:02,000 --> 00:01:06,000
that we've used before, which splits on white space.

15
00:01:06,000 --> 00:01:09,000
Having several spaces in a row is not a problem,

16
00:01:09,000 --> 00:01:12,000
because split removes the lot of them.

17
00:01:12,000 --> 00:01:16,000
Now to look at how to code that.

18
00:01:16,000 --> 00:01:19,000
We're asked to define a function remove_tag.

19
00:01:19,000 --> 00:01:26,000
It takes a string as its input, and what I'm going to do first is I'm going to look for

20
00:01:26,000 --> 00:01:34,000
the start position in the string--the start position of the first opening bracket.

21
00:01:34,000 --> 00:01:40,000
I'm also going to need to find the end of the bracket--the end of the same tag.

22
00:01:40,000 --> 00:01:45,000
Just to be on the safe side, make sure I find the right one, I'm going to start by looking at the start position.

23
00:01:45,000 --> 00:01:50,000
I'm going to start the find from the initial opening bracket

24
00:01:50,000 --> 00:01:53,000
and so I'll find the next closing bracket.

25
00:01:53,000 --> 00:01:57,000
Now, that would find the first tag, but I'm going to have to do this multiple times

26
00:01:57,000 --> 00:02:01,000
if there is more than one tag in the string.

27
00:02:01,000 --> 00:02:09,000
While I have an opening tag--remember, if we have the string we're looking for non found,

28
00:02:09,000 --> 00:02:12,000
then it returns -1.

29
00:02:12,000 --> 00:02:19,000
As soon as we haven't got -1, we're going to keep looking for the tags and removing them.

30
00:02:19,000 --> 00:02:23,000
Now to actually remove the tag, I'm going to break the string up.

31
00:02:23,000 --> 00:02:28,000
I'm going to take the part before the tag and the part afterwards and joint them together.

32
00:02:28,000 --> 00:02:31,000
I'm going to take the string up to start.

33
00:02:31,000 --> 00:02:39,000
Now, this will actually exclude the opening tag, because it ends at one position less than start.

34
00:02:39,000 --> 00:02:48,000
I'll replace the tag with a space and then I'll put the rest of the string after the tag at the end.

35
00:02:48,000 --> 00:02:54,000
Now, I'll start at one position after the end, because end is the position of the closing tag,

36
00:02:54,000 --> 00:02:58,000
and we don't want to include that.

37
00:02:58,000 --> 00:03:04,000
Now I've got a new string. I'm going to see if I've got another tag that I'm going to have to remove.

38
00:03:04,000 --> 00:03:08,000
I'm going to look for the next opening tag.

39
00:03:08,000 --> 00:03:13,000
If I find an opening tag when it comes to the top of the while loop, it'll go through again.

40
00:03:13,000 --> 00:03:17,000
If I don't find another opening tag, the while look will finish.

41
00:03:17,000 --> 00:03:22,000
In that case, I want to return the string but not just the string.

42
00:03:22,000 --> 00:03:25,000
I want it split into individual words.

43
00:03:25,000 --> 00:03:29,000
Then I'm just going to split, and that almost completes the code,

44
00:03:29,000 --> 00:03:33,000
except that I've misnamed the procedure and called it "remove_tag"

45
00:03:33,000 --> 00:03:36,000
instead of remove_tags. And now we're done.
