1
00:00:00,610 --> 00:00:03,270
The reason our image is
not showing up immediately

2
00:00:03,270 --> 00:00:07,120
has to do with the fact that our code
is being executed in the background.

3
00:00:07,120 --> 00:00:10,335
Now, I know what you may be thinking,
what's the background?

4
00:00:10,335 --> 00:00:13,230
Why's our code there, and
how does this affect my app?

5
00:00:13,230 --> 00:00:13,980
Don't panic.

6
00:00:13,980 --> 00:00:15,470
Without getting into the details,

7
00:00:15,470 --> 00:00:18,300
we're going to use a method
that fixes this problem.

8
00:00:18,300 --> 00:00:21,690
The method we'll use will take any
updates that we're making to the UI,

9
00:00:21,690 --> 00:00:24,950
like displaying our image, and
then run them in the foreground, or

10
00:00:24,950 --> 00:00:26,820
the main executing environment.

11
00:00:26,820 --> 00:00:28,120
Let's see this now.

12
00:00:28,120 --> 00:00:29,100
Back in our project,

13
00:00:29,100 --> 00:00:33,880
we've been provided with a special
function called performUIUpdatesOnMain.

14
00:00:33,880 --> 00:00:37,650
This function is defined on
the GCDBlackBox Swift file.

15
00:00:37,650 --> 00:00:41,220
Now the reason we use the term blackbox
in the name of that Swift file

16
00:00:41,220 --> 00:00:44,040
is because a blackbox refers to
something you can use without

17
00:00:44,040 --> 00:00:46,130
knowing the internal details.

18
00:00:46,130 --> 00:00:49,045
So for the purposes of this course,
you can use the function to

19
00:00:49,045 --> 00:00:52,870
performUIUpdatesOnMain without
knowing how it's implemented.

20
00:00:52,870 --> 00:00:55,780
You should just call this function
anytime you need to make updates to

21
00:00:55,780 --> 00:01:00,340
the UI inside of the completion
handler of a network task.

22
00:01:00,340 --> 00:01:03,880
Now, looking at this method,
we can see that it takes a closure

23
00:01:03,880 --> 00:01:07,760
that has no parameters, and
returns void or nothing.

24
00:01:07,760 --> 00:01:09,880
And since the closure
is the only parameter,

25
00:01:09,880 --> 00:01:12,660
we can use the trailing closure syntax.

26
00:01:12,660 --> 00:01:15,710
All we need to do is just
relocate any code responsible for

27
00:01:15,710 --> 00:01:18,740
updating the UI, and
place it inside this closure.

28
00:01:18,740 --> 00:01:20,504
So in our case it's just
this line of code here.

29
00:01:27,288 --> 00:01:28,211
Now let's run the project.

30
00:01:35,674 --> 00:01:37,450
Nice, there we go.

31
00:01:37,450 --> 00:01:38,060
That's what we want.
