1
00:00:00,210 --> 00:00:04,340
Remember that manager that we were talking about earlier? Maybe it was you,

2
00:00:04,340 --> 00:00:07,400
maybe it was somebody else. Well, that manager is still handing out assignments

3
00:00:07,400 --> 00:00:11,699
manually. Let's write the program that will assign them automatically. I've got

4
00:00:11,699 --> 00:00:16,192
it started for you. I wrote a class simulation. You don't need to look at it

5
00:00:16,192 --> 00:00:20,315
too hard. There's a lot of stuff in here that you don't need to know yet.

6
00:00:20,315 --> 00:00:25,680
Mostly what it's doing is it's reading in a story. The story is a text file,

7
00:00:25,680 --> 00:00:32,424
inside the directory with the code. It's called story.txt. The simulation class

8
00:00:32,424 --> 00:00:37,010
reads these lines of the story on a manager object. Let's look again at this

9
00:00:37,010 --> 00:00:41,452
story. First, the manager hires photographers. There's a photographer Danny,

10
00:00:41,452 --> 00:00:45,337
then a photographer Leslie. Each day, there's a meeting, where the manager

11
00:00:45,337 --> 00:00:50,322
gives out assignments. The manager's going to start with the first photographer

12
00:00:50,322 --> 00:00:54,681
and give out the highest priority assignment available first. So in this case,

13
00:00:54,681 --> 00:00:59,210
that would be the parrot assignment, which has priority 5. In between daily

14
00:00:59,210 --> 00:01:03,312
meetings, the manager gets assignments. These assignments need to be added to

15
00:01:03,312 --> 00:01:06,790
the to-do list. Since choosing a priority is a complicated task, I just

16
00:01:06,790 --> 00:01:10,410
included the priorities for you. The priorities will be Ints, and a higher

17
00:01:10,410 --> 00:01:13,610
number means a higher priority assignment, so the assignment should be done

18
00:01:13,610 --> 00:01:18,370
sooner. When we come to the end of the story, we'll check the portfolio and

19
00:01:18,370 --> 00:01:23,460
display all of the pictures. Your task will be to complete the methods inside

20
00:01:23,460 --> 00:01:28,087
the manager class, using whatever other classes you need to create. So that

21
00:01:28,087 --> 00:01:31,559
when you run the main method in the stimulation class, it will print out the

22
00:01:31,559 --> 00:01:35,087
finished photos from left to right with no space between them and the name of

23
00:01:35,087 --> 00:01:40,409
photographer under each picture. So when you run the main method of the

24
00:01:40,409 --> 00:01:44,739
finished code, you should see something like this. The first photo is of a

25
00:01:44,739 --> 00:01:48,043
parrot and it was done by Danny, the second one is of the mountain done by

26
00:01:48,043 --> 00:01:53,120
Leslie and so on. Make sure that their signature has its top left corner, right

27
00:01:53,120 --> 00:01:57,616
at the bottom left corner of the photo. Now I've written one other thing for

28
00:01:57,616 --> 00:02:01,144
you, the photographer has the complicated job of creating a photo based on a

29
00:02:01,144 --> 00:02:05,813
description. If this were real life, a person would be taking the photo and

30
00:02:05,813 --> 00:02:10,747
loading it into the system, but we don't have time to wait for that. So I've

31
00:02:10,747 --> 00:02:14,780
included some photos, and a method in the photographer class, that gives the

32
00:02:14,780 --> 00:02:19,998
name of a file with a photo, when you give it a description. All of the

33
00:02:19,998 --> 00:02:24,930
descriptions in the story, so all of these ones already have photos for them.

34
00:02:24,930 --> 00:02:29,115
And the photographer knows how to find those photos. Aside from that, you have

35
00:02:29,115 --> 00:02:34,818
free reign. You can add whatever classes you need to make this work. Though to

36
00:02:34,818 --> 00:02:37,014
submit your answer, you'll need to find a way to use the classes that are in

37
00:02:37,014 --> 00:02:42,451
the Udacity IDE. You can't make new files in the Udacity IDE. But if you use

38
00:02:42,451 --> 00:02:46,352
BlueJ, you can create whatever classes you want. I'll give you a little tour of

39
00:02:46,352 --> 00:02:49,790
how I designed my solution at the end. But there are a lot of ways to do this,

40
00:02:49,790 --> 00:02:53,845
and many of them are good for different reasons. One last thing. I understand

41
00:02:53,845 --> 00:02:57,845
that this is very open ended. So if you'd like more guidance, check out the

42
00:02:57,845 --> 00:03:01,935
hint links that will show up here. And if you can't make it work, it's not your

43
00:03:01,935 --> 00:03:04,860
fault. And if you're satisfied with your progress and what you've learned from

44
00:03:04,860 --> 00:03:06,420
the question it's okay to move on.
