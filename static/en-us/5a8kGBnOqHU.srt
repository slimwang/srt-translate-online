1
00:00:00,000 --> 00:00:04,000
So a useful thing to know about a social network

2
00:00:04,000 --> 00:00:07,000
is whether everything is connected to everything else

3
00:00:07,000 --> 00:00:10,000
or whether there's some subset of nodes that's isolated

4
00:00:10,000 --> 00:00:13,000
from the main body of nodes.

5
00:00:13,000 --> 00:00:16,000
To put it in another way: whether any given pair of nodes in the network

6
00:00:16,000 --> 00:00:18,000
can communicate by passing messages

7
00:00:18,000 --> 00:00:22,000
from friend to friend, from one place to another.

8
00:00:22,000 --> 00:00:27,000
So this graph is actually separated into two different components.

9
00:00:27,000 --> 00:00:29,000
We'll call them A and B,

10
00:00:29,000 --> 00:00:32,000
where A has three nodes and B has five nodes.

11
00:00:32,000 --> 00:00:35,000
In this case we can do it just by looking at it,

12
00:00:35,000 --> 00:00:37,000
but sometimes this problem is easier and sometimes it's harder.

13
00:00:37,000 --> 00:00:40,000
So it's good to have an algorithmic approach so that the computer

14
00:00:40,000 --> 00:00:42,000
can do it on our behalf.

15
00:00:42,000 --> 00:00:45,000
Just to make sure you understand, here's another graph.

16
00:00:45,000 --> 00:00:48,000
How many disconnected components are in this graph?

17
00:00:48,000 --> 00:00:51,000
If every node can communicate with every other node

18
00:00:51,000 --> 00:00:53,000
by passing messages along the green links,

19
00:00:53,000 --> 00:00:55,000
then you should put one.

20
00:00:55,000 --> 00:00:59,000
If there's actually two separate groups of nodes within each group,

21
00:00:59,000 --> 00:01:02,000
they can communicate but between them they can't, then put two.

22
00:01:02,000 --> 00:01:05,000
If there's three such groups, put three, and so on.

23
00:01:05,000 --> 00:01:08,000
Just write it in the box.
