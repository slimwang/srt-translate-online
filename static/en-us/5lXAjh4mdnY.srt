1
00:00:00,000 --> 00:00:07,000
Using formal terminology, regular expressions describe regular languages.

2
00:00:07,000 --> 00:00:10,000
Remember that officially a language is a set of strings.

3
00:00:10,000 --> 00:00:14,000
These grammars that we've been introducing describe something new--

4
00:00:14,000 --> 00:00:17,000
context-free languages.

5
00:00:17,000 --> 00:00:21,000
For now, context free just means that if you have a rule

6
00:00:21,000 --> 00:00:26,000
A can be replaces by B in your grammar and you have an A,

7
00:00:26,000 --> 00:00:31,000
you can replace it with a B regardless of what this nearby context is

8
00:00:31,000 --> 00:00:34,000
as long as you hold the context the same.

9
00:00:34,000 --> 00:00:39,000
If I can use the rule now, I can also use it if there's no x on one side,

10
00:00:39,000 --> 00:00:43,000
no z on the other, if there's nothing on the left, if there's nothing on the right,

11
00:00:43,000 --> 00:00:46,000
if there are flying monkeys on the left and flying monkeys on the right

12
00:00:46,000 --> 00:00:51,000
regardless of the context I can apply this rule.

13
00:00:51,000 --> 00:00:55,000
The set of languages that can be described by re-write rules or grammers like this

14
00:00:55,000 --> 00:00:58,000
are called "context-free languages."

15
00:00:58,000 --> 00:01:02,000
All the formal grammars we are going over describe context-free languages--

16
00:01:02,000 --> 00:01:08,000
a more powerful set of string than our old friends the regular languages.

17
00:01:08,000 --> 00:01:13,000
Here I've drawn a little chart showing three different regular expression forms

18
00:01:13,000 --> 00:01:17,000
and the corresponding context-free grammar forms on the right.

19
00:01:17,000 --> 00:01:20,000
If you had a regular expression concatenation--

20
00:01:20,000 --> 00:01:23,000
regular expression a followed by regular expression b--

21
00:01:23,000 --> 00:01:26,000
we could build a grammar than did the same thing

22
00:01:26,000 --> 00:01:29,000
just by putting a and b next to each other on the right-hand side.

23
00:01:29,000 --> 00:01:34,000
If you had a star--regular expression a*--we could do the same thing--

24
00:01:34,000 --> 00:01:38,000
the same effect of having zero or more a's--with two rules.

25
00:01:38,000 --> 00:01:44,000
Either we have nothing or we have an a followed by zero or more a's.

26
00:01:44,000 --> 00:01:49,000
Finally, here we have regular expression disjunction or choice--either a or b--

27
00:01:49,000 --> 00:01:52,000
that's easy to write with two separate grammar rules.

28
00:01:52,000 --> 00:01:55,000
G goes to a or g goes to b.

29
00:01:55,000 --> 00:01:58,000
For all three of these cases and regular expressions there is something

30
00:01:58,000 --> 00:02:01,000
corresponding we can do in the world of context-free grammars.

31
00:02:01,000 --> 00:02:04,000
Now, I haven't shown you how to do something like a+,

32
00:02:04,000 --> 00:02:08,000
but remember that a+ is just a a*.

33
00:02:08,000 --> 00:02:12,000
I've already shown you how to do concatenation and the star.

34
00:02:12,000 --> 00:02:14,000
In theory, you could compose it over here as well.

35
00:02:14,000 --> 00:02:17,000
At this point it might seem like regular expressions and context-free grammars

36
00:02:17,000 --> 99:59:59,999
are equal, but they are not.
