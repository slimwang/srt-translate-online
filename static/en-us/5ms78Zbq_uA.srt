1
00:00:00,000 --> 00:00:02,909
Rather than having each thread read 3 neighboring elements,

2
00:00:02,909 --> 00:00:05,789
average their value, and write a single output result,

3
00:00:05,789 --> 00:00:08,271
we can have each thread read a single input result

4
00:00:08,271 --> 00:00:12,267
and add 1/3 of its element's value to the 3 neighboring elements.

5
00:00:12,267 --> 00:00:17,284
So each of these writes would really be an increment operation.

6
00:00:17,284 --> 00:00:20,177
You can imagine the same thing on our 2D image blurring example,

7
00:00:20,177 --> 00:00:23,154
where each thread takes 1 input element or pixel

8
00:00:23,154 --> 00:00:26,877
and writes a fraction of its value to the neighboring pixels.

9
00:00:27,267 --> 00:00:31,743
So when each parallel task needs to write its result in a different place or in multiple places,

10
00:00:31,743 --> 00:00:35,576
we call this scatter because the threads are scattering the results over memory.

11
00:00:35,576 --> 00:00:38,276
You can see already a problem that we're going to have with scatter.

12
00:00:38,276 --> 00:00:44,104
You've got several threads attempting to write to the same place at more or less the same time.

13
00:00:44,104 --> 00:00:47,203
This is something we'll have to talk about later.

14
00:00:47,203 --> 00:00:50,692
Let's have a quick quiz on this. Suppose you have a list of basketball players.

15
00:00:50,692 --> 00:00:53,524
So you've got a bunch of records and each one has the name of the player

16
00:00:53,524 --> 00:00:57,547
and the height of the player, and the rank in the height, okay?

17
00:00:57,547 --> 00:01:02,311
So in the league or on the team, whether this is the first tallest, the second tallest,

18
00:01:02,311 --> 00:01:06,987
the third tallest, the last tallest, or so on, okay? So you've got the rank and height.

19
00:01:06,987 --> 00:01:11,686
And say that your goal now is to write each player's record into its location in a sorted list.

20
00:01:11,686 --> 00:01:16,584
So if we implement this in CUDA by having each thread read a record and look at the rank

21
00:01:16,584 --> 00:01:19,916
and use that rank to determine where to write into the array,

22
00:01:19,916 --> 00:01:25,015
is this a map operation or a gather operation or a scatter operation?
