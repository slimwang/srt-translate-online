1
00:00:00,150 --> 00:00:01,910
So, okay, so, how we, how we going to solve this?

2
00:00:01,910 --> 00:00:05,840
>> Okay, so, I guess the first thing to do is if you look at the

3
00:00:05,840 --> 00:00:09,400
table you have at the bottom, it tells us what the truth tables are for AND

4
00:00:09,400 --> 00:00:13,520
and XOR, alright? So, we know that Boolean

5
00:00:13,520 --> 00:00:18,060
functions, can all be represented as combinations of

6
00:00:18,060 --> 00:00:24,320
AND OR and NOT. So, I'm going to recommend you fill out that empty column with OR.

7
00:00:27,290 --> 00:00:29,330
>> So, OR is like that.

8
00:00:29,330 --> 00:00:31,810
>> Right. And you'll notice, if you look at AND OR and

9
00:00:31,810 --> 00:00:39,600
XOR that, OR looks just like XOR except ,at the very last row.

10
00:00:39,600 --> 00:00:42,360
>> In the second, okay good, uh-huh, and in that row.

11
00:00:42,360 --> 00:00:47,430
>> Right, and, AND on the other hand, tells us a one only on the

12
00:00:47,430 --> 00:00:52,570
last row. So what, I'm going to suggest that we really want that last node

13
00:00:52,570 --> 00:00:57,340
to do in your drawing, is to compute the or of X1 or X2.

14
00:00:58,340 --> 00:01:03,600
And produce the right answer, except in the case of the last row,

15
00:01:04,950 --> 00:01:10,170
which we only want to turn off when and happens to be true.

16
00:01:10,170 --> 00:01:15,280
So ,really what that node is, is computing or minus and.

17
00:01:15,280 --> 00:01:17,540
>> Alright, so how do we make this or minus and?

18
00:01:17,540 --> 00:01:20,470
So the way we did or before Well we did it a couple of different

19
00:01:20,470 --> 00:01:25,320
ways. But one is we gave weights of one on the two inputs. And then a

20
00:01:25,320 --> 00:01:28,230
threshold of one. And that made, ignoring

21
00:01:28,230 --> 00:01:30,180
everything else at the moment, this unit will

22
00:01:30,180 --> 00:01:33,980
now turn on if either x1 or x2 are on. And otherwise it will stay off.

23
00:01:33,980 --> 00:01:38,870
>> Right. So what's the worst case? The lowest value that you can

24
00:01:38,870 --> 00:01:42,460
get. Is when one of those is one and one of those is zero,

25
00:01:42,460 --> 00:01:46,460
which means that the, sum into those will be, in fact, one.

26
00:01:46,460 --> 00:01:47,580
>> Yeah.

27
00:01:47,580 --> 00:01:52,250
>> Right? So, if the AND comes out as being true, it's

28
00:01:52,250 --> 00:01:56,790
going to give us some positive value. So, if we just simply have

29
00:01:56,790 --> 00:02:01,990
a negative weight there, that will subtract out. Exactly in the

30
00:02:01,990 --> 00:02:07,470
case ,when AND is on. It's not going to quite give us the answer we

31
00:02:07,470 --> 00:02:09,695
want, but it's a good place to start to think about it.

32
00:02:09,695 --> 00:02:12,150
>> Alright, so like just a negative weight, like negative one.

33
00:02:12,150 --> 00:02:15,241
>> Mm-hmm.

34
00:02:15,241 --> 00:02:16,700
>> Alright. So does that work?

35
00:02:16,700 --> 00:02:18,360
>> Not quite.

36
00:02:18,360 --> 00:02:21,680
>> Alright, and why doesn't it work? Because if, well certainly when and

37
00:02:21,680 --> 00:02:24,350
is off then we really are just getting the or, that's all good.

38
00:02:24,350 --> 00:02:24,660
>> Yeah.

39
00:02:24,660 --> 00:02:28,330
>> But if both x1 and x2 are both on, then the sum here is

40
00:02:28,330 --> 00:02:32,440
going to be two minus the one that we get from the AND which is still one.

41
00:02:32,440 --> 00:02:33,860
>> So,

42
00:02:33,860 --> 00:02:35,250
minus one isn't enough?

43
00:02:35,250 --> 00:02:37,310
>> Minus with both, maybe we can do more than that.

44
00:02:37,310 --> 00:02:39,870
Maybe we can do minus two What happens if we do

45
00:02:39,870 --> 00:02:43,030
minus two? Then we've got ,X1 and X2 if they're both

46
00:02:43,030 --> 00:02:47,340
on, then we get a sum of one minus two plus

47
00:02:47,340 --> 00:02:50,120
one or zero. Which is less than our threshold so it

48
00:02:50,120 --> 00:02:53,720
will output zero. And in the other two cases, right, when

49
00:02:53,720 --> 00:02:55,750
and is off than it just acts like or. So this

50
00:02:55,750 --> 00:02:59,360
actually kind of does the right thing. Its actually OR minus kind of and

51
00:02:59,360 --> 00:03:00,849
times two. [LAUGH]

52
00:03:00,849 --> 00:03:02,740
>> Right. And there you go. And of

53
00:03:02,740 --> 00:03:04,730
course there's an infinite number of solutions to this.
