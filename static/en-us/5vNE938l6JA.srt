1
00:00:00,000 --> 00:00:04,000
So now let's go back and analyze this maximize differential strategy

2
00:00:04,000 --> 00:00:09,000
versus the maximizing probability of winning strategy.

3
00:00:09,000 --> 00:00:11,000
The question is, how do these 2 compare?

4
00:00:11,000 --> 00:00:13,000
When are they different, and when are they the same?

5
00:00:13,000 --> 00:00:18,000
If you're trying to impress the scouts, you're not going to be making some crazy moves,

6
00:00:18,000 --> 00:00:22,000
so probably most of the time, you'd expect the 2 strategies to agree,

7
00:00:22,000 --> 00:00:25,000
but some of the time, maybe 1 of them is going to be more aggressive

8
00:00:25,000 --> 00:00:27,000
or taking more chances than the other.

9
00:00:27,000 --> 00:00:29,000
Let's see if we can analyze that.

10
00:00:29,000 --> 00:00:33,000
So I start off by defining a bunch of states, and I'm just going to look

11
00:00:33,000 --> 00:00:34,000
from 1 player's point of view.

12
00:00:34,000 --> 00:00:37,000
It doesn't really matter to have both since it's symmetric,

13
00:00:37,000 --> 00:00:42,000
so for all these values of me, you, and pending, collect all those states.

14
00:00:42,000 --> 00:00:44,000
It turns out that there's 35,000 of them.

15
00:00:44,000 --> 00:00:49,000
Then I define a variable r to be a default dictionary, which counts up integers,

16
00:00:49,000 --> 00:00:53,000
so it starts at 0, and then I go through all the states,

17
00:00:53,000 --> 00:00:59,000
and I increment the count for a result for the tuple of the action that's taken by

18
00:00:59,000 --> 00:01:03,000
max_wins and the action that's taken by max_diffs.

19
00:01:03,000 --> 00:01:04,000
I want to count up.

20
00:01:04,000 --> 00:01:07,000
This is going to be hold, hold, roll, roll. etc.

21
00:01:07,000 --> 00:01:10,000
I want to see how many of each do we have,

22
00:01:10,000 --> 00:01:14,000
and let's convert r back to standard dict, and there we have it.

23
00:01:14,000 --> 00:01:22,000
So most of the time, 29,700 out of the 35,000--both strategies agree that roll

24
00:01:22,000 --> 00:01:23,000
is the right thing to do.

25
00:01:23,000 --> 00:01:27,000
Then another 1200 times, both strategies agree that hold is the right thing to do.

26
00:01:27,000 --> 00:01:29,000
But in 2 cases, they differ.

27
00:01:29,000 --> 00:01:34,000
So sometimes, max_wins says hold and max_diffs says roll.

28
00:01:34,000 --> 00:01:39,000
That happened 381 times, but 10 times more often, it's max_wins that says roll

29
00:01:39,000 --> 00:01:40,000
and max_diff that says hold.

30
00:01:40,000 --> 00:01:42,000
That actually surprised me.

31
00:01:42,000 --> 00:01:46,000
So it's the max_wins strategy that's really more aggressive.

32
00:01:46,000 --> 00:01:47,000
It's rolling more often.

33
00:01:47,000 --> 00:01:49,000
I thought it was going to be the max_diffs strategy.

34
00:01:49,000 --> 00:01:52,000
I thought that was going to be more aggressive, right?

35
00:01:52,000 --> 00:01:55,000
So that's the one that's trying to impress the scouts.

36
00:01:55,000 --> 00:02:00,000
I thought it was going to be rolling trying to rack up a really big score.

37
00:02:00,000 --> 00:02:02,000
But no! So the data tells a different story.

38
00:02:02,000 --> 00:02:05,000
It's not trying to rack up a really big score.

39
00:02:05,000 --> 00:02:06,000
So what's going on?

40
00:02:06,000 --> 00:02:10,000
Well, first it might be nice just to quantify how different they are

41
00:02:10,000 --> 00:02:12,000
since I kind of asked that question.

42
00:02:12,000 --> 00:02:19,000
So there's 35, 301 states all together and they differ on 3975 + 381,

43
00:02:19,000 --> 00:02:21,000
and that's 12% of the states that they differ on.

44
00:02:21,000 --> 00:02:23,000
So what's the story?

45
00:02:23,000 --> 00:02:25,000
Where do those 12% of the states come from?

46
00:02:25,000 --> 00:02:29,000
We still don't know, and we don't even quite know what questions to ask,

47
00:02:29,000 --> 00:02:33,000
but it's here that some of our design choices start to pay off.

48
00:02:33,000 --> 00:02:38,000
So remember we always start our design with an inventory of concepts,

49
00:02:38,000 --> 00:02:41,000
and we have things like the dice and the score,

50
00:02:41,000 --> 00:02:45,000
and then we got into things like the utility function and the quality function,

51
00:02:45,000 --> 00:02:50,000
so we built all these up, and yes, we're building from the ground up,

52
00:02:50,000 --> 00:02:55,000
and yes, at the top, we have a play_pig function, and we can still call that function,

53
00:02:55,000 --> 00:02:58,000
but at the bottom, we have all these useful tools.

54
00:02:58,000 --> 00:03:04,000
So now when we're not just about playing pig, now we're trying to analyze the situation

55
00:03:04,000 --> 00:03:08,000
to understand this story of why are these 2 different?

56
00:03:08,000 --> 00:03:12,000
Well, play_pig by itself--the top level function we define--that's not going to help us,

57
00:03:12,000 --> 00:03:17,000
but all these little tools that we built down here, they will be helpful.

58
00:03:17,000 --> 00:03:19,000
We can start to put them together and explore.

59
00:03:19,000 --> 00:03:25,000
So we built this tower, and the tower built up to define the play pig function,

60
00:03:25,000 --> 00:03:28,000
and in some languages, it's all about building the tower.

61
00:03:28,000 --> 00:03:30,000
When you're done, that's all you have.

62
00:03:30,000 --> 00:03:35,000
But in Python, it's common and in many languages, it's a good design and strategy

63
00:03:35,000 --> 00:03:41,000
to say let's just build up components along the way so that we--yes, we have the tower,

64
00:03:41,000 --> 00:03:44,000
but we can also go out in other directions.

65
00:03:44,000 --> 00:03:50,000
If we're interested--not just in playing pig--but we're interested in figuring out this story,

66
00:03:50,000 --> 00:03:53,000
then we can quickly assemble pieces from down here

67
00:03:53,000 --> 00:03:56,000
and build something that can address that.

68
00:03:56,000 --> 00:04:00,000
So I've got all the pieces available. It makes it easy to explore.

69
00:04:00,000 --> 00:04:02,000
But I still need an idea, and here's my idea.

70
00:04:02,000 --> 00:04:07,000
I expected maximize differential to be aggressive, to try to rack up the big points,

71
00:04:07,000 --> 00:04:11,000
and I found out that it was actually maximizing the probability of winning

72
00:04:11,000 --> 00:04:14,000
that was more aggressive that rolled more often.

73
00:04:14,000 --> 00:04:16,000
Why could that be? I think I might know the answer.

74
00:04:16,000 --> 00:04:22,000
I think it might be that the maximized differential is more willing to lose

75
00:04:22,000 --> 00:04:25,000
rather than more excited about winning by a lot.

76
00:04:25,000 --> 00:04:26,000
What do I mean by that?

77
00:04:26,000 --> 00:04:28,000
Well, if you're maximizing the probability of winning,

78
00:04:28,000 --> 00:04:32,000
you don't care if you lose by 1 or if you lose by 40,

79
00:04:32,000 --> 00:04:33,000
it's all a loss.

80
00:04:33,000 --> 00:04:38,000
The maximized differential--if he's losing by a fair amount, he might say,

81
00:04:38,000 --> 00:04:42,000
well--say he's behind 39-0 in a game to 40,

82
00:04:42,000 --> 00:04:44,000
and say he's accumulated 30 points,

83
00:04:44,000 --> 00:04:47,000
If he's trying to maximize the probability of winning,

84
00:04:47,000 --> 00:04:49,000
he would keep on rolling.

85
00:04:49,000 --> 00:04:51,000
He says, well, I don't have that good of a chance of winning,

86
00:04:51,000 --> 00:04:53,000
but all that counts is winning.

87
00:04:53,000 --> 00:04:56,000
If I stop now, the opponent's going to win on the next move,

88
00:04:56,000 --> 00:04:57,000
so I've got to keep rolling.

89
00:04:57,000 --> 00:05:03,000
Probably I'll pig out and only get 1 point, but it's worth it for that small chance of winning.

90
00:05:03,000 --> 00:05:06,000
That's what the maximize win probability strategy would do.

91
00:05:06,000 --> 00:05:12,000
The maximize differential strategy would say, hey, if I can get 30 points rather than 1,

92
00:05:12,000 --> 00:05:16,000
that cuts the differential way down, so that's worth doing.

93
00:05:16,000 --> 00:05:19,000
I'll sacrifice winning in order to maximize the differential.

94
00:05:19,000 --> 00:05:22,000
Now that's a suggestion of a story, but I don't know yet.

95
00:05:22,000 --> 99:59:59,999
Is that the right story? Let's find out.
