1
00:00:00,360 --> 00:00:02,246
Okay. Now, of course, the answer is a bunch of

2
00:00:02,246 --> 00:00:04,647
hex characters that I'm not going to type here, but I'll go

3
00:00:04,647 --> 00:00:07,157
ahead and show you in the terminal. Here I've imported

4
00:00:07,157 --> 00:00:12,807
hash, hashlib. hashlib.sha256 of the string udacity, returning the hex digest,

5
00:00:12,807 --> 00:00:15,825
is this big long string here. So, if you did

6
00:00:15,825 --> 00:00:19,523
this, now you know how to take hashes of, of simple

7
00:00:19,523 --> 00:00:21,990
strings. And, of course, you can send more than simple strings

8
00:00:21,990 --> 00:00:25,080
in here. And get a hash that in this particular case,

9
00:00:25,080 --> 00:00:27,680
it is 256 bits long. This is the hex

10
00:00:27,680 --> 00:00:30,260
representation so obviously it's not that many characters. Of course

11
00:00:30,260 --> 00:00:31,470
you can put whatever you want in here and the

12
00:00:31,470 --> 00:00:35,120
output will be 256 bits cause that's what sha 256

13
00:00:35,120 --> 00:00:40,230
does, and of course if we were to change our

14
00:00:40,230 --> 00:00:43,660
string just in the slightest, we get a totally different

15
00:00:43,660 --> 00:00:47,870
hash outlook, so we can use this technique now to

16
00:00:47,870 --> 00:00:49,940
solve some problems we are having in our cookie application.
