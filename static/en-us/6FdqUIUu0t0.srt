1
00:00:00,600 --> 00:00:04,440
Layout includes help reduce
code duplication quite a bit.

2
00:00:04,440 --> 00:00:09,590
But for more targeted land adaptations
we can get even more fine-grained.

3
00:00:09,590 --> 00:00:12,240
Using all those resource
qualifiers we learned about,

4
00:00:12,240 --> 00:00:16,430
we can vary everything from
number of columns to heights and

5
00:00:16,430 --> 00:00:20,070
widths to margins and
spacing and beyond.

6
00:00:20,070 --> 00:00:20,700
Let's take a look.

7
00:00:21,980 --> 00:00:26,840
You could use the w600dp qualifier
to variant integer resource.

8
00:00:26,840 --> 00:00:29,330
Changing the number of
columns in a grid of items.

9
00:00:30,500 --> 00:00:35,050
An integer resource is basically
a number with no units like pixels or

10
00:00:35,050 --> 00:00:36,820
dp or anything like that.

11
00:00:36,820 --> 00:00:37,590
On a phone,

12
00:00:37,590 --> 00:00:41,970
you could have one column, which is
basically the same as a vertical list.

13
00:00:43,000 --> 00:00:44,500
And on a tablet or

14
00:00:44,500 --> 00:00:49,530
with the w600dp qualifier,
we could bump it up to three columns.

15
00:00:49,530 --> 00:00:52,220
This approach works for
both grid view and

16
00:00:52,220 --> 00:00:55,200
the grid based layout managers
bundled with recycler view.

17
00:00:56,240 --> 00:00:59,830
When switching from a list
type presentation to a grid,

18
00:00:59,830 --> 00:01:03,460
you'll likely want to use
a different layout for each item.

19
00:01:03,460 --> 00:01:04,190
To do this,

20
00:01:04,190 --> 00:01:09,550
you can access your column count integer
resource from code in your adapter.

21
00:01:09,550 --> 00:01:12,740
And use that to decide
which layout to inflate.

22
00:01:12,740 --> 00:01:15,420
It's worth noting that in
addition to integer resources,

23
00:01:15,420 --> 00:01:17,900
there are also Boolean resources.

24
00:01:17,900 --> 00:01:21,498
So you could have a Boolean like multi
column, which defaults to false,

25
00:01:21,498 --> 00:01:24,645
but in w600dp gets set to true.

26
00:01:24,645 --> 00:01:29,265
And then you could decide to use a tile
versus a card type presentation.

27
00:01:30,645 --> 00:01:34,785
Another super powerful technique is
to just vary specific metrics like

28
00:01:34,785 --> 00:01:38,945
paddings, margins, or
even button widths and heights.

29
00:01:38,945 --> 00:01:42,665
Here's our same UI, but this time
we're defining the tool bar and

30
00:01:42,665 --> 00:01:44,630
content view once.

31
00:01:44,630 --> 00:01:50,190
And specifying height and margins
that change on a 600dp wide screen.

32
00:01:50,190 --> 00:01:52,950
This technique is really,
really powerful and

33
00:01:52,950 --> 00:01:56,110
let's you minimize code
duplication quite a bit.

34
00:01:56,110 --> 00:01:57,730
Here's another example.

35
00:01:57,730 --> 00:02:02,210
A full width button on a phone
might get too wide past 400dp.

36
00:02:03,400 --> 00:02:06,276
So you can create a dimension
resource called button_width,

37
00:02:06,276 --> 00:02:08,560
that's match_parent on phone, and

38
00:02:08,560 --> 00:02:15,050
exactly 400dp once the screen was this
larger using the w400dp qualifier.

39
00:02:15,050 --> 00:02:19,110
Note that simply typing match_parent
won't work in dimension resources

40
00:02:19,110 --> 00:02:23,890
because it's a special value,
-1, that doesn't have any units.

41
00:02:23,890 --> 00:02:26,940
Here's a quick trick that
works around that limitation.

42
00:02:26,940 --> 00:02:29,710
Just put this item tag
in your dimensions file

43
00:02:29,710 --> 00:02:32,910
that's equivalent to
the integer value -1.

44
00:02:32,910 --> 00:02:36,280
Then you can reference it in
other dimension values like so,

45
00:02:36,280 --> 00:02:38,800
using @dimen/match_parent.

46
00:02:38,800 --> 00:02:41,630
And hey,
remember key lines from Lesson 3?

47
00:02:41,630 --> 00:02:45,940
On smaller devices the standard
keylines are 16dp and

48
00:02:45,940 --> 00:02:48,930
72dp, but once you get to larger sizes

49
00:02:48,930 --> 00:02:53,450
you can start using the standard
tablet keylines of 24dp and 80dp.

50
00:02:53,450 --> 00:02:57,140
This too can be done with
varying dimension resources.

51
00:02:57,140 --> 00:02:59,670
In this example we're
telling the toolbar

52
00:02:59,670 --> 00:03:02,650
to inset the title from
the left edge of the screen.

53
00:03:02,650 --> 00:03:03,920
To the second key line.

54
00:03:03,920 --> 00:03:06,490
So we're going to inset by 72 or

55
00:03:06,490 --> 00:03:09,480
80dp, depending on which
device we're running on.
