1
00:00:00,000 --> 00:00:05,439
So another way that we can understand this is that we start out with a random assignment

2
00:00:05,439 --> 00:00:10,680
that has a distance of n/2 to the satisfying assignment

3
00:00:10,680 --> 00:00:12,500
Again, assuming that assignment exists.

4
00:00:12,500 --> 00:00:16,500
So, by distance, I mean the number of variables we need to flip.

5
00:00:16,500 --> 00:00:19,169
We can expect this to be about n/2 as we just found out.

6
00:00:19,169 --> 00:00:24,850
Each time this algorithm here goes through the loop, there's two things that can happen

7
00:00:24,850 --> 00:00:29,960
The first thing is that we move closer to the satisfying assignment

8
00:00:29,960 --> 00:00:31,980
and by closer, I mean that we gained one more variable

9
00:00:31,980 --> 00:00:35,700
that is set to the same as it would be in the satisfying assignment.

10
00:00:35,700 --> 00:00:39,550
So basically, making a step forward happens with probability one-third

11
00:00:39,550 --> 00:00:44,260
but of course as we also just found out, we can also make a step backward

12
00:00:44,260 --> 00:00:50,130
and kind of flip the wrong variable and the probability for doing that is at most two-thirds.

13
00:00:50,130 --> 00:00:53,550
Let's show worse case analysis here so we will erase this one here

14
00:00:53,550 --> 00:00:58,190
and say in a worse case, we make a step forward with probability exactly one-third

15
00:00:58,190 --> 00:01:02,970
and we make a step backward with probability exactly two-thirds.

16
00:01:02,970 --> 00:01:07,900
And how often do we make this step? Well, the loop here is executed 3n*.

17
00:01:07,900 --> 00:01:15,479
So what happens is the following, we start off here with our random assignment and then 3n*

18
00:01:15,479 --> 00:01:22,830
We either move forward with probability one-third or we move backward with probability two-thirds.

19
00:01:22,830 --> 00:01:26,340
And then the next time assume that we are lucky, we have move forward,

20
00:01:26,340 --> 00:01:31,050
we again move forward with probability one-third and backwards with probability two-thirds

21
00:01:31,050 --> 00:01:36,920
and this goes on and on and on and on until we either reach the satisfying assignment

22
00:01:36,920 --> 00:01:39,490
or which is much more likely, we don't reach the satisfying assignment.

23
00:01:39,490 --> 00:01:41,860
We might even get farther away from it.

24
00:01:41,860 --> 00:01:44,470
Actually, chances are pretty good that we are.

25
00:01:44,470 --> 00:01:48,759
Now, the nasty thing here of course is that we move forward

26
00:01:48,759 --> 00:01:51,150
with the lower probability than moving backward.

27
00:01:51,150 --> 00:01:56,440
So, the probability of coming from a random assignment to the satisfying assignment

28
00:01:56,440 --> 00:01:59,830
by running the algorithm once actually doesn't seem too good

29
00:01:59,830 --> 00:02:02,500
and the exact probability analysis here is somewhat complicated

30
00:02:02,500 --> 00:02:05,960
especially if you haven't had an intermediate course in statistics yet,

31
00:02:05,960 --> 00:02:09,889
but what we can try to do even if the statistic analysis is may be a bit complicated

32
00:02:09,889 --> 00:02:11,160
is at least do a simulation.

33
00:02:11,160 --> 00:02:14,890
So, run a program to do simulation for me.

34
00:02:14,890 --> 00:02:19,290
Assuming you start at a distance one half from a satisfying assignment

35
00:02:19,290 --> 00:02:21,790
What's the probability of making n/2 steps in the right direction

36
00:02:21,790 --> 00:02:25,500
if the probability of making a step in the right direction is one-third

37
00:02:25,500 --> 00:02:29,230
and the probability of making a step in the wrong direction is two-thirds

38
00:02:29,230 --> 00:02:34,860
and you try 3n* and then run this for different values of n and here's what I got.

39
00:02:34,860 --> 00:02:39,070
Now, of course, when you run such a simulation yourself, you might get a little bit different results,

40
00:02:39,070 --> 00:02:41,730
but you will be more or less in the same range, I hope.

41
00:02:41,730 --> 00:02:43,450
Here are the results that I got.

42
00:02:43,450 --> 00:02:49,050
For n equals 10, you end up at 2.8% probability of making n/2 steps in the right direction.

43
00:02:49,050 --> 00:02:55,360
For n equals 20, it's 0.084% and you can see that it rather quickly decreases.

44
00:02:55,360 --> 00:02:58,270
Now, my question to you here, does the probability decrease

45
00:02:58,270 --> 99:59:59,999
as a function of n again logarithmically with n, linearly with n, or exponentially with n.
