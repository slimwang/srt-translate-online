1
00:00:00,360 --> 00:00:03,530
Now TCP serves many applications well, but others want

2
00:00:03,530 --> 00:00:06,240
to handle the problems of liability and flow control in

3
00:00:06,240 --> 00:00:08,420
their own way. For this, they often use the

4
00:00:08,420 --> 00:00:12,930
User Datagram Protocol or UDP, which is much simpler. The

5
00:00:12,930 --> 00:00:16,059
header that gets attached to the payload includes only

6
00:00:16,059 --> 00:00:19,180
the source and destination ports, the length of the data,

7
00:00:19,180 --> 00:00:21,365
and a check sum to help detect data corruption.

8
00:00:22,390 --> 00:00:25,370
There's no initial handshake or enforced mechanism for the order

9
00:00:25,370 --> 00:00:28,740
of packets, they're just fired across the network. When

10
00:00:28,740 --> 00:00:31,770
is UDP used? Well, if you have a very reliable

11
00:00:31,770 --> 00:00:34,655
local network, then there's no need for the reliability or

12
00:00:34,655 --> 00:00:38,805
out-of-order protections of TCP. All those acknowledgements would just be

13
00:00:38,805 --> 00:00:42,090
wasted bandwidth. You would rather have the lower overhead

14
00:00:42,090 --> 00:00:45,670
of the smaller UDP header and protocol. Streaming applications, where

15
00:00:45,670 --> 00:00:47,300
it is more important to be on time than to

16
00:00:47,300 --> 00:00:51,210
be right, prefer UDP. Think of voice over IP. A

17
00:00:51,210 --> 00:00:54,320
user would much prefer a temporary degradation in the quality

18
00:00:54,320 --> 00:00:57,710
of sound to incurring a delay, which makes conversation difficult.

19
00:00:58,760 --> 00:01:01,500
If a packet is dropped, we might want to simply

20
00:01:01,500 --> 00:01:03,550
say that it is too late and not bother trying

21
00:01:03,550 --> 00:01:07,560
to incorporate its data. Similarly for video, a user would

22
00:01:07,560 --> 00:01:10,620
much prefer an occasional low quality frame to having the

23
00:01:10,620 --> 00:01:14,120
video intermittently start and stop, but with a perfect picture.

24
00:01:14,120 --> 00:01:16,790
UDP tends to be more popular for these types of applications.
