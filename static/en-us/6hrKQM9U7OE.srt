1
00:00:00,100 --> 00:00:03,400
Now having the body object from inclusion is good, but it lacks specific

2
00:00:03,400 --> 00:00:08,315
information that allows us to react with our game logic code. As such, we need

3
00:00:08,315 --> 00:00:12,450
some way to correlate a body to an entity that created that body. Now there's

4
00:00:12,450 --> 00:00:15,057
number of ways to do this. We could create hash tables and lookups and all this

5
00:00:15,057 --> 00:00:18,860
other stuff. Or, we can use one of the interesting nuances of box 2D,

6
00:00:18,860 --> 00:00:22,388
specifically physics bodies in box 2D contain a user data property that can

7
00:00:22,388 --> 00:00:27,795
point to any other object in memory, or some subset of data. For our purposes,

8
00:00:27,795 --> 00:00:30,504
we're going to use that member and assign it to whatever the owning entity is

9
00:00:30,504 --> 00:00:34,454
for this body. That way, when a collision call back occurs, each body will have

10
00:00:34,454 --> 00:00:37,430
a pointer to its owning entity, allowing us to do game-specific logic as we

11
00:00:37,430 --> 00:00:42,416
need to. To get started with this, we need to modify the physics engine addBody

12
00:00:42,416 --> 00:00:46,007
code, and assign body.userData if a userData variable has been passed in as

13
00:00:46,007 --> 00:00:50,210
part of the calling settings to this function.
