1
00:00:00,390 --> 00:00:03,100
Let's just have a look for a minute at the let clause,

2
00:00:03,100 --> 00:00:07,730
which is way of doing a local abbreviation or a local definition.

3
00:00:07,730 --> 00:00:11,870
Say you have you a relatively complex computation that you're going to

4
00:00:11,870 --> 00:00:16,630
include in one of your constraints, and you're going to use it more than once.

5
00:00:16,630 --> 00:00:20,600
Now, you could type it out more than once, but that's extra effort and

6
00:00:20,600 --> 00:00:26,020
you might make a mistake. So instead, you could use a let clause to

7
00:00:26,020 --> 00:00:31,520
introduce a new identifier that has the value of that expression, and

8
00:00:31,520 --> 00:00:37,600
then use that identifier in a subsequent constraint. So for example,

9
00:00:37,600 --> 00:00:44,300
if our income is expressed in terms of the sum of our of our salaries for

10
00:00:44,300 --> 00:00:49,350
all of our jobs, okay, we could use a let clause which says exactly that.

11
00:00:49,350 --> 00:00:51,467
We could introduce a new variable, or

12
00:00:51,467 --> 00:00:56,270
identifier called income and then we could have expression, in this case is

13
00:00:56,270 --> 00:01:01,090
an if then else expression that says if someone is unemployed then their income

14
00:01:01,090 --> 00:01:05,610
is less than 100 else their income is greater then or equal to 100. It's just as

15
00:01:05,610 --> 00:01:09,360
if we've typed in the long expression in both the places where we used to.
