1
00:00:00,190 --> 00:00:04,730
Let's have a closer look at how methods are described in javadoc. Here is an

2
00:00:04,730 --> 00:00:09,190
example. Before the parenthesis you have the name of the method, in this case

3
00:00:09,190 --> 00:00:14,170
pixels. Before the name, you have the type of the return value. In this case,

4
00:00:14,170 --> 00:00:19,338
that's int because the pixels method returns the number of pixels in an image

5
00:00:19,338 --> 00:00:24,920
as an integer since you can't have half a pixel. Let's look at another example,

6
00:00:24,920 --> 00:00:30,310
the grow method. Again, the name is before the parentheses and before that is

7
00:00:30,310 --> 00:00:34,420
the return type but in this case, remember the grow method doesn't return

8
00:00:34,420 --> 00:00:40,790
anything and we use this special word void to denote that. Void means that

9
00:00:40,790 --> 00:00:46,060
nothing is returned. Now this method call has another feature. It describes

10
00:00:46,060 --> 00:00:52,160
what kind of arguments to pass. You call this method with two arguments and

11
00:00:52,160 --> 00:00:57,450
here you find the types you can grow by any decimal number. It doesn't have to

12
00:00:57,450 --> 00:01:01,730
be an integer. Now actually and that's a minor detail, that you don't really

13
00:01:01,730 --> 00:01:06,735
need to think about until the next lesson. What you see inside here, the double

14
00:01:06,735 --> 00:01:13,090
dw and the double dh are themselves variable declarations. They declare two

15
00:01:13,090 --> 00:01:17,690
variables that are called the parameter variables. Like I said, right now you

16
00:01:17,690 --> 00:01:21,220
don't yet have to worry about the parameter variables but when you see the word

17
00:01:21,220 --> 00:01:26,670
parameters in javadoc, then you'll know where that comes from. Now you know all

18
00:01:26,670 --> 00:01:31,300
the technical terms that you need to decipher a javadoc documentation.
