1
00:00:00,370 --> 00:00:04,580
A lot of folks when they hear about SQL
features like order by, or limit and

2
00:00:04,580 --> 00:00:09,140
offset, ask the question,
why do that in the database?

3
00:00:09,140 --> 00:00:11,680
I already know how to sort
a list in Python, and

4
00:00:11,680 --> 00:00:13,510
I already know how to do slices.

5
00:00:13,510 --> 00:00:16,860
Why don't I just fetch the data back
to my application code unsorted, and

6
00:00:16,860 --> 00:00:18,220
do the work there?

7
00:00:18,220 --> 00:00:21,866
And it's true that count is
an awful lot like length.

8
00:00:21,866 --> 00:00:24,852
And limit 100 offset ten is an awful lot

9
00:00:24,852 --> 00:00:30,470
like taking a slice from elements
ten to a 110 of the result list.

10
00:00:30,470 --> 00:00:35,430
And order by column is an awful lot
like, sorting by a a key that's

11
00:00:35,430 --> 00:00:38,968
actually kind of complicated, but
there are a couple of big differences.

12
00:00:38,968 --> 00:00:42,080
Speed and space.

13
00:00:42,080 --> 00:00:45,830
The database can generally do these
things a lot faster than Python can.

14
00:00:45,830 --> 00:00:48,410
Especially when you get to
tables with lots of rows or

15
00:00:48,410 --> 00:00:51,120
complicated queues that
join several tables.

16
00:00:51,120 --> 00:00:54,350
And you can easily have
a table with millions of rows,

17
00:00:54,350 --> 00:00:57,830
sorting a million items in
Python can take around a second.

18
00:00:57,830 --> 00:01:01,280
If you're writing a web app, that's
a second that you're user is staring at

19
00:01:01,280 --> 00:01:03,410
their browser,
wondering why your app is so

20
00:01:03,410 --> 00:01:07,470
freaking slow, and
it's taking up memory to do that too.

21
00:01:07,470 --> 00:01:11,510
In contrast, a database can generally
do these operations much faster.

22
00:01:11,510 --> 00:01:14,600
There are a number of tricks you
can use to make it faster still.

23
00:01:14,600 --> 00:01:16,410
The big one is called indexing.

24
00:01:16,410 --> 00:01:18,850
We won't deal with indexing
directly in this course, but

25
00:01:18,850 --> 00:01:21,610
later on there will be some
notes on how to apply it.

26
00:01:21,610 --> 00:01:25,130
In any event, doing restrictions and
aggregations in the database,

27
00:01:25,130 --> 00:01:28,220
instead of in Python,
is a good practice to get in to.

28
00:01:28,220 --> 00:01:29,290
So let's do more of that.
