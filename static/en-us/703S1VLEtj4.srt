1
00:00:00,000 --> 00:00:02,000
Welcome to the Homework 2 solutions.

2
00:00:02,000 --> 00:00:06,000
In this first question we're going to go over how to reason about the state of a chart

3
00:00:06,000 --> 00:00:09,000
when parsing a token in a given grammar.

4
00:00:09,000 --> 00:00:13,000
Right here I have a grammar that identifies JavaScript function calls.

5
00:00:13,000 --> 00:00:18,000
Let's say I have a function, pow, which computes the power of a number

6
00:00:18,000 --> 00:00:20,000
to another number--doesn't really matter.

7
00:00:20,000 --> 00:00:23,000
The idea is that this function computes 5 to the 6th.

8
00:00:23,000 --> 00:00:27,000
But what we care about is the tokens right here.

9
00:00:27,000 --> 00:00:30,000
And to show that this string is in this grammar, we're going to walk through it.

10
00:00:30,000 --> 00:00:35,000
Here I've written our first starting rule, which goes to id, some parentheses,

11
00:00:35,000 --> 00:00:37,000
and then optional arguments.

12
00:00:37,000 --> 00:00:41,000
So the id in this case is pow, and then we have 2 parentheses,

13
00:00:41,000 --> 00:00:45,000
and the optional arguments in the case of our example is 5 and 6.

14
00:00:45,000 --> 00:00:48,000
We don't have to have anything here. As the title implies, it's optional.

15
00:00:48,000 --> 00:00:51,000
It could go right to the empty string. But we do have arguments.

16
00:00:51,000 --> 00:00:54,000
In this case, we're going to have some kind of expression

17
00:00:54,000 --> 00:00:58,000
or an expression followed by a comma with more arguments.

18
00:00:58,000 --> 00:01:02,000
And in this case we have 2, so the optional arguments goes to arguments.

19
00:01:02,000 --> 00:01:04,000
It's not empty, so it's going to go to this rule.

20
00:01:04,000 --> 00:01:08,000
And then from arguments we're going to go to this rule

21
00:01:08,000 --> 00:01:10,000
where expression is going to be 5.

22
00:01:10,000 --> 00:01:12,000
We have the comma. That matches our comma.

23
00:01:12,000 --> 00:01:16,000
The rest of the rule is going to be ARGS, which goes to--

24
00:01:16,000 --> 00:01:21,000
Since this is our last argument, it's just going to go straight to expression, which is 6.

25
00:01:21,000 --> 00:01:25,000
And we were able to match this string to the grammar

26
00:01:25,000 --> 00:01:28,000
using the set of replacement rules given.

27
00:01:28,000 --> 00:01:33,000
So I just went through that to demonstrate how this grammar matches JavaScript function calls.

28
00:01:33,000 --> 00:01:35,000
But that's not really what the question is asking.

29
00:01:35,000 --> 00:01:38,000
The question is asking about the chart.

30
00:01:38,000 --> 00:01:43,000
We're going to see what happens when we parse a certain set of tokens.

31
00:01:43,000 --> 00:01:46,000
Instead of writing the actual string, I just have the tokens that matter.

32
00:01:46,000 --> 00:01:49,000
And for the sake of parsing, that's all we care about.

33
00:01:49,000 --> 00:01:51,000
This can be matched by what I had before.

34
00:01:51,000 --> 00:01:54,000
But all we care about is the tokens.

35
00:01:54,000 --> 00:01:57,000
Now, when we parse this, what we want to ask is

36
00:01:57,000 --> 00:02:01,000
what is in Chart 2, the third entry in our chart?

37
00:02:01,000 --> 00:02:05,000
And so we're given a set of rules that may be in the chart.

38
00:02:05,000 --> 00:02:08,000
I'm just going to go through them real quick. So here are your choices.

39
00:02:08,000 --> 00:02:12,000
We're trying to figure out--as a reminder--what's in the second entry in our chart

40
00:02:12,000 --> 00:02:17,000
when we parse this list of tokens and this grammar.

41
00:02:17,000 --> 00:02:20,000
And since we're asking a question, we should remember question marks.

42
00:02:20,000 --> 00:02:22,000
So there's really 2 ways to solve this.

43
00:02:22,000 --> 00:02:26,000
The first is you work out the chart by hand.

44
00:02:26,000 --> 00:02:29,000
That's what we're going to do because it's easier to kind of explain what's going on.

45
00:02:29,000 --> 00:02:34,000
An alternative which is equally valid is to take the code that we wrote in lecture

46
00:02:34,000 --> 00:02:37,000
and modify it to print the chart at every given state.

47
00:02:37,000 --> 00:02:41,000
This is probably what you would want to do if you were asked this question more than once.

48
00:02:41,000 --> 00:02:46,000
But, like I said, for the sake of going over the answer, we're going to work it out by hand.

49
00:02:46,000 --> 00:02:48,000
Okay. Here's our input. Here is our grammar.

50
00:02:48,000 --> 00:02:51,000
We want to know what's in Chart 0.

51
00:02:51,000 --> 00:02:54,000
We haven't read anything in yet, so we're just going to be at the beginning

52
00:02:54,000 --> 00:02:57,000
of the start substitution rule.

53
00:02:57,000 --> 00:03:02,000
We introduced this in Chart State 0.

54
00:03:02,000 --> 00:03:06,000
So now we're on Chart 1 and we've read in 1 token, id.

55
00:03:06,000 --> 00:03:11,000
We're just going to shift on this rule because id is the first token in this rule.

56
00:03:11,000 --> 00:03:14,000
And this comes from 0 as well.

57
00:03:14,000 --> 00:03:18,000
So now the moment of truth, Chart 2.

58
00:03:18,000 --> 00:03:20,000
Let's see what we can do.

59
00:03:20,000 --> 00:03:24,000
We're going to see the token--that's the left parenthesis--and we're going to shift.

60
00:03:24,000 --> 00:03:27,000
So here there are 2 things that are possible.

61
00:03:27,000 --> 00:03:30,000
One is that optional arguments is empty.

62
00:03:30,000 --> 00:03:34,000
We don't know yet because we haven't seen the rest of the input token list.

63
00:03:34,000 --> 00:03:37,000
In that case, we're going to be past optional arguments.

64
00:03:37,000 --> 00:03:40,000
There's also the case where optional arguments isn't empty,

65
00:03:40,000 --> 00:03:43,000
which is actually what's going on with our input list.

66
00:03:43,000 --> 00:03:45,000
So let's write both those out.

67
00:03:45,000 --> 00:03:48,000
Here we've moved past optional arguments,

68
00:03:48,000 --> 00:03:51,000
presumably because it's empty by this rule right here.

69
00:03:51,000 --> 00:03:55,000
Then we have the other choice where optional arguments is not empty

70
00:03:55,000 --> 00:03:57,000
and we're going to be processing it.

71
00:03:57,000 --> 00:04:03,000
So regarding this first rule in our chart, we have the optional arguments being empty.

72
00:04:03,000 --> 00:04:05,000
So we need to make sure to add that.

73
00:04:05,000 --> 00:04:07,000
We introduced this in Chart State 2.

74
00:04:07,000 --> 00:04:10,000
We have the other case where optional arguments is not empty,

75
00:04:10,000 --> 00:04:12,000
and we're going to go through ARGS now.

76
00:04:12,000 --> 00:04:15,000
So I have written out both ARGS rules,

77
00:04:15,000 --> 00:04:17,000
and since we haven't read in this next token, we don't have anything

78
00:04:17,000 --> 00:04:19,000
to go further on in either rule,

79
00:04:19,000 --> 00:04:21,000
so at the beginning of each rule.

80
00:04:21,000 --> 00:04:28,000
And presumably, the next chart state we will shift over with the new expression.

81
00:04:28,000 --> 00:04:32,000
So now we have everything we need to answer the question.

82
00:04:32,000 --> 99:59:59,999
We're just going to check off the choices that were in our Chart State 2.
