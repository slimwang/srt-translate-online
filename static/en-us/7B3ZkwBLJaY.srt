1
00:00:00,130 --> 00:00:04,670
So the math of what we just did is referred to as correlation or

2
00:00:04,670 --> 00:00:06,160
correlation filtering.

3
00:00:06,160 --> 00:00:09,190
And what we just did is we did it with uniform weights.

4
00:00:09,190 --> 00:00:13,100
So let's assume that our averaging window is size 2k plus 1 by 2k plus 1.

5
00:00:13,100 --> 00:00:14,794
So remember it's odd right, so

6
00:00:14,794 --> 00:00:17,930
if k were, were a three that would be a seven by seven.

7
00:00:17,930 --> 00:00:21,420
If k was one that'd be a three by three, right?

8
00:00:21,420 --> 00:00:23,230
So we have a odd sized window.

9
00:00:23,230 --> 00:00:26,410
So what we do is we're going to loop over all of

10
00:00:26,410 --> 00:00:31,960
our pixels around some location F of i,j, i,j being the row and column.

11
00:00:31,960 --> 00:00:37,041
And we loop over all the u's and all the v's going from minus k to plus k,

12
00:00:37,041 --> 00:00:39,170
summing up all of the pixels.

13
00:00:39,170 --> 00:00:43,269
And then, since we have the uniform weight right, so you have a weight of one

14
00:00:43,269 --> 00:00:47,900
there, we divide the whole thing by the number of weights in the filter, right?

15
00:00:47,900 --> 00:00:49,810
So if I had a 3 by 3 that would be 9.

16
00:00:49,810 --> 00:00:51,010
So if k was one, two, three.

17
00:00:51,010 --> 00:00:52,370
Yeah, it would be one-ninth.

18
00:00:52,370 --> 00:00:54,950
But that was uniform weights, and I don't know about you but

19
00:00:54,950 --> 00:00:56,830
I don't look any good in a uniform anymore.

20
00:00:56,830 --> 00:00:59,080
So, we're going to do something totally different here.

21
00:00:59,080 --> 00:01:00,638
No, all we're going to do is we're going to do

22
00:01:00,638 --> 00:01:02,410
what are called non-uniform weights.

23
00:01:02,410 --> 00:01:06,720
And what that means is instead of having 1 over 2k plus 1 squared we're going to

24
00:01:06,720 --> 00:01:09,420
have a different weight at each location.

25
00:01:09,420 --> 00:01:14,262
And so these non-uniform weights are written here as H of u, v.

26
00:01:14,262 --> 00:01:17,071
And those are simply the weights that you're going to,

27
00:01:17,071 --> 00:01:21,129
still some over the whole thing, but now these different weights are going to be

28
00:01:21,129 --> 00:01:23,780
applied as you move around with inside that mask.

29
00:01:23,780 --> 00:01:26,170
This operation is referred to as correlation or

30
00:01:26,170 --> 00:01:29,040
the cross-correlation and I've written this here.

31
00:01:29,040 --> 00:01:34,160
We would say that G was the correlation or cross-correlation of H with F.

32
00:01:34,160 --> 00:01:38,140
So this H by the way is referred to by many things, okay?

33
00:01:38,140 --> 00:01:40,770
It's called a kernel, it's called the mask, it's all,

34
00:01:40,770 --> 00:01:42,790
it's called the coefficients.

35
00:01:42,790 --> 00:01:47,110
It is just the matrix of the linear weights that get used.

36
00:01:47,110 --> 00:01:51,490
By the way, in case any of you have taken a machine learning class, and

37
00:01:51,490 --> 00:01:56,490
you've turk, talked about machine learning kernels and the kernel trick.

38
00:01:56,490 --> 00:01:59,980
There's a sli, very very slight relation here but really it's,

39
00:01:59,980 --> 00:02:00,990
it's a totally different thing.

40
00:02:00,990 --> 00:02:03,830
We're thinking about these kernels as these masks that we do the computation.
