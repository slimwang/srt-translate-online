1
00:00:00,370 --> 00:00:04,418
Up until now, we've been declaring lots
of variables with the keyword var.

2
00:00:04,418 --> 00:00:07,470
Now, I want to talk about its companion,
the keyword let.

3
00:00:08,689 --> 00:00:11,769
In Swift, there are two different
ways to assign a name to a value.

4
00:00:12,970 --> 00:00:16,010
They are constants and variables.

5
00:00:16,010 --> 00:00:19,718
Constants are defined
using the keyword let, and

6
00:00:19,718 --> 00:00:23,167
variables are defined
using the keyword var.

7
00:00:23,167 --> 00:00:28,539
Not surprisingly, once the value of a
constant is set, it can't be reassigned.

8
00:00:28,539 --> 00:00:30,029
The value remains constant.

9
00:00:31,640 --> 00:00:35,189
So one should use let when assigning
a value that's not expected to change.

10
00:00:37,369 --> 00:00:39,479
Variables, on the other hand,
can be reassigned.

11
00:00:40,670 --> 00:00:44,379
So one should use var when assigning
a value that's expected to change.

12
00:00:45,820 --> 00:00:48,700
And if we output our personalized
encouragement we see that it

13
00:00:48,700 --> 00:00:49,690
takes the change.

14
00:00:49,689 --> 00:00:52,960
So it started as, you can do it,
Stephanie and then we changed it to,

15
00:00:52,960 --> 00:00:53,925
you can do it, Ryder.

16
00:00:55,509 --> 00:01:01,030
Here's another example, the constant
birthYear doesn't change but

17
00:01:01,030 --> 00:01:04,780
as time progresses forward
the current year changes, so

18
00:01:04,780 --> 00:01:09,308
at first it's 2016 and
then maybe it changes to 2016.

19
00:01:10,920 --> 00:01:13,600
And therefore the age also changes and

20
00:01:13,599 --> 00:01:17,549
we could see printed at the bottom
our age was initially seven and

21
00:01:17,549 --> 00:01:21,099
then after the year changed to 2016,
the age became eight.

22
00:01:22,629 --> 00:01:25,793
But notice that context matters as well.

23
00:01:25,793 --> 00:01:28,866
This example assumes that
the variable age is going to

24
00:01:28,867 --> 00:01:30,719
be calculated multiple times.

25
00:01:31,840 --> 00:01:34,884
If age were only intended
to be calculated once,

26
00:01:34,884 --> 00:01:39,501
then we could go ahead and declare age
and even current year as constants.

27
00:01:39,501 --> 00:01:43,320
When in doubt,
declare constants over variables.

28
00:01:43,319 --> 00:01:46,259
Any time a value is altered,
it should be explicit.

29
00:01:46,260 --> 00:01:49,490
And this protects our code from
inadvertently changing values that we

30
00:01:49,489 --> 00:01:50,390
don't want changed.

