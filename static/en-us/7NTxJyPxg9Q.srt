1
00:00:00,000 --> 00:00:04,370
Now, if we put all of this knowledge together and just look at the problems that are in NP

2
00:00:04,370 --> 00:00:09,210
then there's a lot of different possibilities for the properties of that problem.

3
00:00:09,210 --> 00:00:14,140
So either the problem if it's an NP could be in P or this NP complete

4
00:00:14,140 --> 00:00:16,010
or it might even be something else.

5
00:00:16,010 --> 00:00:20,030
Now, we haven't really talked about this something else here, but they are some problems,

6
00:00:20,030 --> 00:00:26,170
which are believed to be somewhere in between P and NP at least if P does not equal NP, of course.

7
00:00:26,170 --> 00:00:29,060
One example here, for example, would be factoring two large numbers.

8
00:00:29,060 --> 00:00:33,770
Now, if your problem is NP complete, there are still very very many possibilities.

9
00:00:33,770 --> 00:00:36,140
Your problem could be fixed-parameter tractable.

10
00:00:36,140 --> 00:00:38,930
Your problem could have an approximation algorithm

11
00:00:38,930 --> 00:00:43,970
and that approximation algorithm might either be a PTAS, a constant-factor approximation algorithm,

12
00:00:43,970 --> 00:00:47,390
or also something else, and again, we haven't really talked about this something else,

13
00:00:47,390 --> 00:00:51,460
but for example, there are some approximation algorithms where you can have a

14
00:00:51,460 --> 00:00:55,250
logarithmic approximation factor and then there are randomized algorithms,

15
00:00:55,250 --> 00:01:00,570
Monte Carlo algorithms and Las Vegas algorithms, and there are many many other things

16
00:01:00,570 --> 00:01:05,920
that we haven't touched upon so really a lot of different complexities.

17
00:01:05,920 --> 00:01:09,250
Now, one final thing I should mention, they are two notions here

18
00:01:09,250 --> 00:01:12,580
especially if you talked to somebody who has studied theoretical computer science.

19
00:01:12,580 --> 00:01:17,460
They will nitpick you about the NP completeness, because NP completeness

20
00:01:17,460 --> 00:01:20,080
is technically only defined for decision problems.

21
00:01:20,080 --> 00:01:24,330
So if you're talking about optimization problems and you want to be very correct

22
00:01:24,330 --> 00:01:27,410
then you should call that problem an NP hard problem.

23
00:01:27,410 --> 00:01:32,110
But many people use this term interchangeably, and actually, when you are working in practice

24
00:01:32,110 --> 00:01:35,680
on hard problems, it doesn't really make much of a difference at least in my opinion,

25
00:01:35,680 --> 00:01:39,240
but it is not the most precise way to say it so decision problems,

26
00:01:39,240 --> 00:01:42,330
NP complete, optimization problems, NP hard.

27
00:01:42,330 --> 00:01:45,550
What would happen if we were able to show that P equals NP?

28
00:01:45,550 --> 00:01:51,430
Would then each single class we have shown here become P? Or would the classes separate?

29
00:01:51,430 --> 00:01:54,750
And what I mean by this is could be then showed that not every NP complete problem

30
00:01:54,750 --> 00:02:00,230
is fixed-parameter tractable or not every NP complete problem has an approximation algorithm.

31
00:02:00,230 --> 99:59:59,999
And more than one of these here can be correct.
