1
00:00:00,000 --> 00:00:02,880
And, of course, this is 1 of those easy intro quizzes just to

2
00:00:02,880 --> 00:00:05,160
get you thinking a bit about approximation.

3
00:00:05,160 --> 00:00:08,910
So it's clear, when the stakes are low, yes, approximate solutions are acceptable.

4
00:00:08,910 --> 00:00:11,080
If we gain running time, why not?

5
00:00:11,080 --> 00:00:15,450
If the approximation is very good then usually those solutions are also acceptable.

6
00:00:15,450 --> 00:00:18,860
The important thing that I wanted to emphasize is that, in this case here,

7
00:00:18,860 --> 00:00:23,560
I said that we have a provable guarantee on how good the algorithm is.

8
00:00:23,560 --> 00:00:27,520
So we'll not get into Â±1%, unfortunately, in this unit,

9
00:00:27,520 --> 00:00:31,330
but what we will be doing is, we will be analysing approximation algorithms

10
00:00:31,330 --> 00:00:33,330
to see how good they really are.

11
00:00:33,330 --> 00:00:38,270
Because the thing is this: Approximation algorithms, where you have not done the analysis

12
00:00:38,270 --> 00:00:42,680
and they just sound good, can actually lead to very, very bad solutions,

13
00:00:42,680 --> 00:00:46,180
and I'll show you 1 example for vertex cover in this unit.

14
00:00:46,180 --> 00:00:50,550
So using approximation is okay, but you have to do the analysis nevertheless

15
00:00:50,550 --> 00:00:52,950
to see how good that approximation will be.

16
00:00:52,950 --> 00:00:56,840
Otherwise, you can walk into some rather nasty traps, I would say.

17
00:00:56,840 --> 00:01:00,090
And finally, whenever an exact solution cannot be obtained,

18
00:01:00,090 --> 00:01:04,250
yeah, of course, then we have to try an approximation if the problem is important to us.

19
00:01:04,250 --> 00:01:08,170
The important thing here, that I would like you to keep in mind, is what we found out in the last unit:

20
00:01:08,170 --> 00:01:13,260
that often it is possible to find exact solutions for NP-complete problems and practice.

21
00:01:13,260 --> 00:01:16,880
So many people tend to start out with approximation algorithms

22
00:01:16,880 --> 00:01:20,940
once they hear that a problem is NP-complete, and actually, I would like you

23
00:01:20,940 --> 00:01:22,980
to think about this the other way around.

24
00:01:22,980 --> 00:01:27,190
So first of all, NP-completeness can definitely mean that there still is a possibility

25
00:01:27,190 --> 00:01:33,140
for finding exact solutions, and only when that approach fails, or you're under time pressure,

26
00:01:33,140 --> 00:01:36,960
or there's no really good known search tree for your problem,

27
00:01:36,960 --> 00:01:39,310
and you have to solve it nevertheless.

28
00:01:39,310 --> 00:01:42,010
Only then would I like you to think about approximation.

29
00:01:42,010 --> 00:01:45,210
So I guess my message is this: Whenever you encounter an NP-complete problem,

30
00:01:45,210 --> 99:59:59,999
be demanding an exact solution unless you really know it's not possible.
