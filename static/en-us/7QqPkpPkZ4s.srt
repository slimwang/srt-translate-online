1
00:00:00,250 --> 00:00:03,340
Let's compare the difference between a token bucket

2
00:00:03,340 --> 00:00:07,050
and a leaky bucket. The token bucket permits traffic

3
00:00:07,050 --> 00:00:12,260
to be bursty, but it bounds it by the rate row. On the other hand, a leaky

4
00:00:12,260 --> 00:00:15,420
bucket simply forces the bursty traffic to be

5
00:00:15,420 --> 00:00:18,815
smoothed. The bound in a token bucket is as

6
00:00:18,815 --> 00:00:22,070
follows. If our bucket size is beta, then we

7
00:00:22,070 --> 00:00:25,720
know that in any interval T, then the rate

8
00:00:25,720 --> 00:00:28,860
is always less than beta, that is, the

9
00:00:28,860 --> 00:00:31,300
maximum number of tokens that can be accumulated

10
00:00:31,300 --> 00:00:33,710
in the bucket, plus the rate at which

11
00:00:33,710 --> 00:00:37,220
tokens accumulate, times that time interval. We also know

12
00:00:37,220 --> 00:00:38,880
that the long term rate will always be

13
00:00:38,880 --> 00:00:42,040
less than rho. Token buckets have no discard

14
00:00:42,040 --> 00:00:46,370
or priority policies, whereas leaky buckets typically implement

15
00:00:46,370 --> 00:00:50,490
priority policies for flows that exceed the smoothing rate.

16
00:00:50,490 --> 00:00:53,590
Both are relatively easy to implement, but the token

17
00:00:53,590 --> 00:00:55,550
bucket is a little bit more flexible since it

18
00:00:55,550 --> 00:00:57,750
has some additional parameters that we can use to

19
00:00:57,750 --> 00:01:01,570
configure burst size. One of the limitations of token

20
00:01:01,570 --> 00:01:05,310
buckets is the fact that in any traffic interval

21
00:01:05,310 --> 00:01:08,910
of length T, the flow can send beta plus

22
00:01:08,910 --> 00:01:12,200
T times rho tokens of data. If a network

23
00:01:12,200 --> 00:01:15,660
tries to police the flows by simply measuring their traffic

24
00:01:15,660 --> 00:01:20,430
over intervals of length T, the flow can cheat by sending this amount of data in

25
00:01:20,430 --> 00:01:23,980
each interval. Consider, for example, an interval of

26
00:01:23,980 --> 00:01:27,430
twice this length. Well if the flow can send

27
00:01:27,430 --> 00:01:33,880
beta plus T times rho in each interval, then over 2T the flow can consume 2

28
00:01:33,880 --> 00:01:37,410
times beta plus tau times rho tokens. But

29
00:01:37,410 --> 00:01:40,680
actually this is greater than how much the flow

30
00:01:40,680 --> 00:01:45,730
is actually supposed to be able to send which is beta plus 2T times rho. So

31
00:01:45,730 --> 00:01:49,990
policing traffic being sent by token buckets is

32
00:01:49,990 --> 00:01:54,270
actually rather difficult. So, token buckets allow for long

33
00:01:54,270 --> 00:01:56,780
bursts, and if the bursts are of high

34
00:01:56,780 --> 00:02:00,490
priority traffic, they are difficult to police and

35
00:02:00,490 --> 00:02:03,570
may interfere with other high priority traffic. So

36
00:02:03,570 --> 00:02:05,690
there's some need to limit how long a token

37
00:02:05,690 --> 00:02:08,000
bucket sender can monopolize the network.
