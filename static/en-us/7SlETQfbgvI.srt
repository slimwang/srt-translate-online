1
00:00:00,033 --> 00:00:07,166
And as I said, this is a bit subjective. I think for x1, it's kind of very clear that this variable actually has to be set to true.

2
00:00:07,167 --> 00:00:12,832
And the reason is the following: If you look at all of the clauses here, they are connected by "and"s.

3
00:00:12,833 --> 00:00:20,132
So, if one of these clauses here becomes false, the whole Boolean formula here is also set to false.

4
00:00:20,133 --> 00:00:28,166
Now, here, x1 is in a very lonely position, so to say, because x1 makes up a whole clause.

5
00:00:28,167 --> 00:00:34,432
So if we set x1 to false, then this formula here, the whole formula here will also become false.

6
00:00:34,433 --> 00:00:43,032
So it's clear that x1 has to be set to true, and it's also easy to see that, because the variable just appears once.

7
00:00:43,033 --> 00:00:48,866
And this can be done in polynomial time; it's rather easy, because you just go through this whole Boolean formula here,

8
00:00:48,867 --> 00:00:52,132
or an algorithm could do it, then it finds a clause with just one variable.

9
00:00:52,133 --> 00:00:57,632
And it knows if you have a clause with just one variable, then it's immediately clear how you have to set this.

10
00:00:57,633 --> 00:01:02,866
So for example, if we had not x1 here, we would also know that we would have to set it to false.

11
00:01:02,867 --> 00:01:08,666
So what's the other variable where I think that it's rather easy to see if it should be set to true or false?

12
00:01:08,667 --> 00:01:17,732
Well, x2, if you look around it--so here's x2, here's not x2, not x2, not x2. So it appears a couple of times.

13
00:01:17,733 --> 00:01:24,299
It appears as x2 and as not x2. So without trying any other assignments, I think it's not that easy to see.

14
00:01:24,300 --> 00:01:31,266
X3 is the same. So here we have x3, here we have not x3, here again we have x3, not x3.

15
00:01:31,267 --> 00:01:38,599
That's also not easy to see. So what about x4? Well, the thing with x4 is this variable appears only once; namely, here.

16
00:01:38,600 --> 00:01:45,066
There's no x4 anywhere else. And that is why, in my opinion, it's very easy to see what to do with x4.

17
00:01:45,067 --> 00:01:50,399
The thing that makes SAT hard is when variables appear in different forms, right?

18
00:01:50,400 --> 00:01:58,699
So it appears here as x1, and here it appears as not x1. So if we set x1 to true, this clause here becomes satisfied.

19
00:01:58,700 --> 00:02:02,832
But we get one less variable to satisfy the clause over here.

20
00:02:02,833 --> 00:02:09,666
And vice versa: If we set x1 to false, then this clause here becomes satisfied, but we get one less variable over here

21
00:02:09,667 --> 00:02:15,032
because x1 is now set to false, so we have to either set x3 to true or x5 to true.

22
00:02:15,033 --> 00:02:21,599
So if a variable appears just once, we have nothing to lose; we can just set x4 to true, satisfying this clause here,

23
00:02:21,600 --> 00:02:24,499
and it has no secondary effects on any of the other clauses.

24
00:02:24,500 --> 00:02:29,632
And of course, an algorithm could also do this very easily. The algorithm just looks at each variable

25
00:02:29,633 --> 00:02:35,066
and counts how often does that variable appear? And if a variable appears just once, it knows how to set it.

26
00:02:35,067 --> 00:02:40,299
So here we have x4, we would set it to true. If we had not x4, we would set it to false.

27
00:02:40,300 --> 00:02:46,432
So let's try a bit more challenging example, actually. We have found two very easy pre-processing rules for SAT.

28
00:02:46,433 --> 00:02:52,766
If there's a clause with just a single variable, and of course if the Boolean formula is written in conjunctive normal form,

29
00:02:52,767 --> 00:02:57,966
then we know how to set that variable. And second pre-processing rule that we found out for x4:

30
00:02:57,967 --> 00:03:04,999
If a variable just appears once in a whole formula, then we also know how to set that variable.

31
00:03:05,000 --> 00:03:08,933
So now let me give you one more example, which is going to be a bit more challenging.
