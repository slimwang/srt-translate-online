1
00:00:00,241 --> 00:00:02,415
So let's dive in.

2
00:00:02,415 --> 00:00:03,971
Here are our kittens again.

3
00:00:03,971 --> 00:00:06,887
By the way, that's Lyes,
the boy kitten on the right.

4
00:00:06,887 --> 00:00:08,943
We don't have a name for the girl yet.

5
00:00:08,943 --> 00:00:12,019
Anyway here's what a picture
element looks like.

6
00:00:12,019 --> 00:00:16,391
You'll notice that this picture
element contains two source elements.

7
00:00:16,391 --> 00:00:20,155
You might have seen those used for
video or audio elements.

8
00:00:20,155 --> 00:00:22,200
Source elements do what you'd expect.

9
00:00:22,200 --> 00:00:24,667
They provide optional file sources.

10
00:00:24,667 --> 00:00:27,408
If the browser can use
the first source it will.

11
00:00:27,408 --> 00:00:29,836
Otherwise, it keeps
looking down the list.

12
00:00:29,836 --> 00:00:34,029
The picture element is a great way
to provide alternative sources for

13
00:00:34,029 --> 00:00:34,904
image files.

14
00:00:34,904 --> 00:00:39,352
So the browser can choose
depending on device capabilities.

15
00:00:39,352 --> 00:00:42,940
We've used the source element
here to specify webp for

16
00:00:42,940 --> 00:00:46,691
for browsers that support
the webp with a JPEG fallback.

17
00:00:46,691 --> 00:00:50,667
This is a great way to make use of
the high performance webp format on

18
00:00:50,667 --> 00:00:54,501
platforms that support it,
while providing an alternative for

19
00:00:54,501 --> 00:00:55,996
platforms that don't.

20
00:00:55,996 --> 00:01:00,132
You can find out more about webp from
the article linked to below the video.

21
00:01:00,132 --> 00:01:02,381
By the way, that webp file is massive,

22
00:01:02,381 --> 00:01:05,733
looks like I should have saved
it with lossy compression.

23
00:01:05,733 --> 00:01:07,581
Talking about fall backs again,

24
00:01:07,581 --> 00:01:11,080
what about browsers that don't
support the picture element?

25
00:01:11,080 --> 00:01:12,106
Well, that's easy.

26
00:01:12,106 --> 00:01:15,351
We just include a plain
old image element.

27
00:01:15,351 --> 00:01:17,952
In fact,
the image element is non optional,

28
00:01:17,952 --> 00:01:21,659
because that's the element that
actually displays the image.

29
00:01:21,659 --> 00:01:24,264
The picture element scaffolding,
so to speak.

30
00:01:24,264 --> 00:01:27,501
Simply tells the image
what source to choose.

31
00:01:27,501 --> 00:01:30,604
In fact,
we can rewrite the example like this.

32
00:01:30,604 --> 00:01:34,504
Because the browser defaults to
the image element if it can't use any of

33
00:01:34,504 --> 00:01:37,762
the sources, earlier on you
learned about art direction.

34
00:01:37,762 --> 00:01:42,470
One of the core problems you have
when serving images to a variety of

35
00:01:42,470 --> 00:01:47,094
screen sizes and display sizes is
that although some images scale

36
00:01:47,094 --> 00:01:51,989
quite nicely from large to small,
other images don't work so well.

37
00:01:51,989 --> 00:01:56,075
They may have too much detail to
work well on a small screen or

38
00:01:56,075 --> 00:02:00,350
be too wide to work on a view
port with a portrait orientation.
