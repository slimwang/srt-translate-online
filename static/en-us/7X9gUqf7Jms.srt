1
00:00:00,150 --> 00:00:03,306
In this exercise, you'll start with a different procedural texture. It works

2
00:00:03,306 --> 00:00:07,062
fine, but I want you to know about an important debugging technique. Since you

3
00:00:07,062 --> 00:00:11,081
can't put break points inside a shader, it's hard to know what's going on. The

4
00:00:11,081 --> 00:00:15,120
answer is to send various shader computations to the screen itself. In other

5
00:00:15,120 --> 00:00:18,470
words, instead of putting your final result into GL_FRAGColor, put these other

6
00:00:18,470 --> 00:00:22,150
intermediate values. In fact, you have three whole color channels to use and

7
00:00:22,150 --> 00:00:26,560
view on the screen. Your task is to send the following program values, diffuse,

8
00:00:26,560 --> 00:00:30,945
ugain alpha, and attenuation to each of these channels. All three of these

9
00:00:30,945 --> 00:00:35,008
values is in the proper range of zero to one, so need no adjustment. Here's

10
00:00:35,008 --> 00:00:38,152
what things will look like when you're done. Under material control in the user

11
00:00:38,152 --> 00:00:42,046
interface is a slider called gain alpha. So, I think it will change the green

12
00:00:42,046 --> 00:00:45,499
channel to match the value selected. One bit to notice in the code is that

13
00:00:45,499 --> 00:00:49,570
there's a sub routine called compute bias. It's fine to use sub routines inside

14
00:00:49,570 --> 00:00:52,509
shaders, and they have a C language type of interface.
