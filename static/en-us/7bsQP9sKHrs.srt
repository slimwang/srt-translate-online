1
00:00:00,390 --> 00:00:03,560
So first thing you probably notice about
tcpdump data is that there's a lot of

2
00:00:03,560 --> 00:00:05,180
details here.

3
00:00:05,180 --> 00:00:08,560
What is all this options sack stuff?

4
00:00:08,560 --> 00:00:10,417
We're not going to look
at that in this course.

5
00:00:10,417 --> 00:00:12,570
I'm going to wave my magic
wand to make it go away.

6
00:00:13,680 --> 00:00:16,430
I know it's kind of silly to say,
but don't panic about the fact that

7
00:00:16,430 --> 00:00:19,030
this output probably looks
like a big pile of weird.

8
00:00:19,030 --> 00:00:21,996
Some parts of it may jump out at you
as already saying something, and

9
00:00:21,996 --> 00:00:24,142
if not right now,
maybe by the end of this video.

10
00:00:24,142 --> 00:00:26,825
So there are some things in here
you might already recognize.

11
00:00:26,825 --> 00:00:31,540
If you're using your own data, you'll
see your machine's IP address here.

12
00:00:31,540 --> 00:00:32,689
Here's mine.

13
00:00:32,689 --> 00:00:35,760
Notice the just as we saw with ping,
sometimes it shows up to the left of

14
00:00:35,760 --> 00:00:39,300
this little angle bracket and
sometimes it shows up to the right.

15
00:00:39,300 --> 00:00:41,890
That's because some of these
packets are going from our machine

16
00:00:41,890 --> 00:00:45,700
to example.net and
some of them are coming back.

17
00:00:45,700 --> 00:00:49,040
Likewise, here's the IP address for
example.net.

18
00:00:49,040 --> 00:00:50,620
If you want to check that,

19
00:00:50,620 --> 00:00:53,590
you can use the host command
to look it up in the DNS.

20
00:00:53,590 --> 00:00:56,000
Now let's look at something that
differs across these packets.

21
00:00:57,010 --> 00:00:58,020
At the end of each record,

22
00:00:58,020 --> 00:01:02,240
there's a length field that's telling us
how much data was sent in that packet.

23
00:01:02,240 --> 00:01:05,510
That's just the payload,
the actual HTTP, data

24
00:01:05,510 --> 00:01:09,850
as opposed to all the TCP overhead, like
addresses, import numbers, and such.

25
00:01:09,850 --> 00:01:13,000
So the interesting thing here is
that out of all of these packets,

26
00:01:13,000 --> 00:01:16,230
only a few of them even
have any payload data.

27
00:01:16,230 --> 00:01:19,510
For most of them, the length value is 0.

28
00:01:19,510 --> 00:01:21,330
This is an important fact about TCP.

29
00:01:22,370 --> 00:01:25,470
Even before the client and
server get to exchange any real data,

30
00:01:25,470 --> 00:01:28,180
they've got some set up to do
to bring up the connection.

31
00:01:28,180 --> 00:01:32,020
And after they're done with the real
data, they have some tear down to do.

32
00:01:32,020 --> 00:01:35,687
So looking at the first of
these that has any real data,

33
00:01:35,687 --> 00:01:39,939
it says length 38, and
the only other one has length 321.

34
00:01:39,939 --> 00:01:42,133
Well, where did those numbers come from?

35
00:01:42,133 --> 00:01:45,050
Well, let's look back at
what data we actually sent.

36
00:01:45,050 --> 00:01:48,770
Here's our HTTP request, and
if you count these newline characters at

37
00:01:48,770 --> 00:01:52,614
the end of each line as only one,
as the backslash doesn't really count,

38
00:01:52,614 --> 00:01:55,690
it's going to come out
to exactly 38 bytes.

39
00:01:55,690 --> 00:02:00,390
Which means that this record in
the tcpdump data exactly represents

40
00:02:00,390 --> 00:02:04,338
the transmission of the HTTP request
from our client, the example.net server.
