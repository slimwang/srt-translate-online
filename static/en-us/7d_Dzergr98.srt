1
00:00:00,450 --> 00:00:04,320
Our fourth principle was a Knowledge Based AI agents match methods to tasks.

2
00:00:04,320 --> 00:00:07,080
At the beginning of this course we covered several very

3
00:00:07,080 --> 00:00:09,498
powerful problem solving methods like Generate & Test, and

4
00:00:09,498 --> 00:00:13,470
Means-Ends Analysis. But because they were very powerful and very general,

5
00:00:13,470 --> 00:00:16,820
they also weren't necessarily the best for solving any one problem.

6
00:00:16,820 --> 00:00:20,020
We also covered some more specific problem solving methods like planning

7
00:00:20,020 --> 00:00:23,000
that addressed a narrower set of problems but addressed those problems very,

8
00:00:23,000 --> 00:00:26,770
very well. We also covered several tasks in this class, like configuration and

9
00:00:26,770 --> 00:00:30,800
diagnosis and design. These tasks could all be carried out by a variety of

10
00:00:30,800 --> 00:00:34,764
methods. For example, we can imagine doing configuration with Generate & Test or

11
00:00:34,764 --> 00:00:38,600
we generate every possible configuration of a certain plan and

12
00:00:38,600 --> 00:00:42,070
then test to see which one is best. We could also do configuration by

13
00:00:42,070 --> 00:00:45,010
Problem Reduction where we reduce the problem down into the sub parts and

14
00:00:45,010 --> 00:00:48,820
solve them individually and then compose them into an overall solution.

15
00:00:48,820 --> 00:00:53,170
In this way, knowledge based AI agents match methods to tasks.

16
00:00:53,170 --> 00:00:56,640
In some cases we do the matching, we decide that generate and

17
00:00:56,640 --> 00:01:00,370
test is the best way to address this diagnosis problem. In other cases we might

18
00:01:00,370 --> 00:01:03,620
design AI agents with their own meta-reasoning such that they themselves can

19
00:01:03,620 --> 00:01:06,850
decide which method is best for the task that they're facing right now.

20
00:01:06,850 --> 00:01:08,500
Note that this distinction between methods and

21
00:01:08,500 --> 00:01:13,660
tasks is not always necessarily absolute. Methods can spawn different sub tasks,

22
00:01:13,660 --> 00:01:16,920
so for example, if we're doing design by case-based reasoning that spawns new

23
00:01:16,920 --> 00:01:19,700
problems to address. And we might address those new problems,

24
00:01:19,700 --> 00:01:23,660
those new tasks, with analogical reasoning, or with problem reduction. This gets

25
00:01:23,660 --> 00:01:27,230
back to our meta-reasoning notion of strategy integration. In this way,

26
00:01:27,230 --> 00:01:31,110
knowledge based AI agents match methods to tasks not only at the top level, but

27
00:01:31,110 --> 00:01:33,740
also at every level of the task-subtask hierarchy.
