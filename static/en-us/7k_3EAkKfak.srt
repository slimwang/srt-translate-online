1
00:00:00,100 --> 00:00:04,250
So we have seen what a single
bit in memory looks like.

2
00:00:04,250 --> 00:00:07,120
Now let's see how the whole
chip is organized.

3
00:00:07,120 --> 00:00:11,730
We said already that we have these
word lines that activate cells.

4
00:00:11,730 --> 00:00:14,150
We have a number of word lines, and

5
00:00:14,150 --> 00:00:20,210
the thing that decides which word line
gets activated is called a row decoder.

6
00:00:20,210 --> 00:00:25,340
What we give to the row decoder is
some bits of the address that tallied

7
00:00:25,340 --> 00:00:27,260
which of the word lines to activate.

8
00:00:27,260 --> 00:00:30,270
It can only activate one
word line at a time.

9
00:00:30,270 --> 00:00:32,442
So this is a real decoder.

10
00:00:32,442 --> 00:00:34,280
You give it a number.

11
00:00:34,280 --> 00:00:38,070
It activates a line that
corresponds to that number.

12
00:00:38,070 --> 00:00:42,120
In memory, we call this row address.

13
00:00:42,120 --> 00:00:46,900
There is also a bit line here, and
if you remember, a memory cell

14
00:00:46,900 --> 00:00:52,290
exists at every intersection between
this bit line and a word line.

15
00:00:52,290 --> 00:00:57,140
So what a word line does
is it connects this cell,

16
00:00:57,140 --> 00:01:00,630
this cell, this cell, or
this cell to the bit line.

17
00:01:00,630 --> 00:01:03,100
So by supplying, let's say,
two bits of the address,

18
00:01:03,100 --> 00:01:08,670
which was which of the four bits would
be outputting on this one bit line.

19
00:01:08,670 --> 00:01:12,640
Of course,
there are more bit lines than just one.

20
00:01:12,640 --> 00:01:15,670
And this, for example,
is a 16 bit memory.

21
00:01:15,670 --> 00:01:17,920
It's a four-by-four bit memory.

22
00:01:17,920 --> 00:01:21,060
Four bits can output to
the same bit line, and

23
00:01:21,060 --> 00:01:25,290
there are four bits activated
by each of the word lines, so

24
00:01:25,290 --> 00:01:29,340
when we select the row,
four bits get output out of here.

25
00:01:30,420 --> 00:01:32,740
Now bit lines are very long.

26
00:01:32,740 --> 00:01:38,850
And as we said, the cell is either
a relatively weak SRAM cell, so

27
00:01:38,850 --> 00:01:44,298
it will slowly pull the bit line one way
or the other, or it is a DRAM cell that

28
00:01:44,298 --> 00:01:49,740
discharges a relatively small capacitor
into this relatively long bit line.

29
00:01:49,740 --> 00:01:53,580
If we discharge a small
capacitor into a long bit line,

30
00:01:53,580 --> 00:01:58,030
the voltage on the bit line will change,
but it will change relatively little.

31
00:01:58,030 --> 00:02:02,230
It will not change all the way to
the level that corresponds to a one or

32
00:02:02,230 --> 00:02:02,960
to a zero.

33
00:02:02,960 --> 00:02:05,860
If we have a weak cell,
we don't want to wait for

34
00:02:05,860 --> 00:02:10,669
that cell to raise the whole
bit line one way or the other.

35
00:02:10,669 --> 00:02:17,020
This is why the bit lines are connected
to a device called sense amplifier.

36
00:02:17,020 --> 00:02:22,180
What it does is it senses the small
changes on the bit line and

37
00:02:22,180 --> 00:02:23,030
amplifies them.

38
00:02:23,030 --> 00:02:29,050
So it's really helping the cell raise or
lower the voltage on the bit line.

39
00:02:29,050 --> 00:02:33,335
And it has relatively
powerful circuitry for

40
00:02:33,335 --> 00:02:38,515
each bit line, so it's significantly
bigger than a single row of cells,

41
00:02:38,515 --> 00:02:40,845
but you only need one of these
at the end of the bit line.

42
00:02:40,845 --> 00:02:42,985
You don't need one of
these at every cell.

43
00:02:42,985 --> 00:02:46,495
So you have relatively small and
weak cells, and you have this

44
00:02:46,495 --> 00:02:50,540
beefy thing here that is helping
them raise or lower the bit line.

45
00:02:50,540 --> 00:02:54,240
The signals that are produced by
the sense amplifier, which are now

46
00:02:54,240 --> 00:02:59,420
correctly one or zero bits, go to
a storage element called row buffer.

47
00:02:59,420 --> 00:03:03,980
The row buffer stores
the correct values that we read

48
00:03:03,980 --> 00:03:05,910
from the whole row of cells.

49
00:03:05,910 --> 00:03:09,440
So in this case, the row buffer will
contain four bits because that's how

50
00:03:09,440 --> 00:03:11,390
many bits are there in the row.

51
00:03:11,390 --> 00:03:14,430
The row buffer feeds the data it latched

52
00:03:14,430 --> 00:03:17,690
to another decoder that is
called a column decoder.

53
00:03:17,690 --> 00:03:21,690
This decoder selects the correct
bit among these four,

54
00:03:21,690 --> 00:03:24,410
let's say, using the column address,

55
00:03:24,410 --> 00:03:29,650
which is another part of the data
address, and it outputs a single bit.

56
00:03:29,650 --> 00:03:33,680
If we want to build something that has
more than just one bit of data for

57
00:03:33,680 --> 00:03:36,500
each location, we will replicate this.

58
00:03:36,500 --> 00:03:40,250
So we will have, let's say,
two of these, give them the same row and

59
00:03:40,250 --> 00:03:42,802
column address, and
now they output a two bit value.
