1
00:00:00,000 --> 00:00:05,000
At the low level--I count as low-level things like the roll of a die,

2
00:00:05,000 --> 00:00:08,000
the implementation of scores,

3
00:00:08,000 --> 00:00:12,000
the implementation of the players and of the player to move,

4
00:00:12,000 --> 00:00:17,000
the goal--so these are all things that we're going to have to represent.

5
00:00:17,000 --> 00:00:20,000
And then at the high level, I'm going to have a function play-pig, that

6
00:00:20,000 --> 00:00:23,000
plays a game between two players,

7
00:00:23,000 --> 00:00:27,000
and I have the notion of a strategy--a strategy that a player is taking

8
00:00:27,000 --> 00:00:29,000
in order to play the game.

9
00:00:29,000 --> 00:00:31,000
Now let's think about how to implement these things,

10
00:00:31,000 --> 00:00:33,000
and when I'm doing the implementation,

11
00:00:33,000 --> 00:00:35,000
I'm going to move top-down.

12
00:00:35,000 --> 00:00:40,000
So I started sort of middle-out saying these are the kinds of things I think I'm going to need;

13
00:00:40,000 --> 00:00:44,000
now I have a good enough feel for them that I feel confident in moving top-down.

14
00:00:44,000 --> 00:00:48,000
I don't see any difficulties in implementing any of these pieces.

15
00:00:48,000 --> 00:00:54,000
If I start at the top, then I'll be able to make choices later on without feeling constrained.

16
00:00:54,000 --> 00:00:57,000
If I thought there was something down here that was difficult to deal with,

17
00:00:57,000 --> 00:01:02,000
I might spend more time now, at the low level, trying to resolve

18
00:01:02,000 --> 00:01:05,000
what the right representation is for one of these difficult pieces,

19
00:01:05,000 --> 00:01:08,000
and that would inform my high-level decisions.

20
00:01:08,000 --> 00:01:11,000
But since I don't see any difficulty, I'm going to jump to the high level.

21
00:01:11,000 --> 00:01:13,000
Now, what's play-pig?

22
00:01:13,000 --> 00:01:15,000
Well, I think that's going to be a function,

23
00:01:15,000 --> 00:01:19,000
and let's just say that its input is two players, A and B,

24
00:01:19,000 --> 00:01:22,000
and we haven't decided yet how we're going to represent those.

25
00:01:22,000 --> 00:01:29,000
And its output is--let's say it's going to be the winner of the game.

26
00:01:29,000 --> 00:01:31,000
Maybe A is the winner.

27
00:01:31,000 --> 00:01:36,000
And we'll have to make a choice of how we represent these players.

28
00:01:36,000 --> 00:01:38,000
Now what's a strategy?

29
00:01:38,000 --> 00:01:42,000
Well, a strategy--people sometimes use the word "policy" for that.

30
00:01:42,000 --> 00:01:45,000
We can also represent that as a function.

31
00:01:45,000 --> 00:01:49,000
And it takes as input a state, and it returns an action or a move in the game.

32
00:01:49,000 --> 00:01:54,000
In this game we said that the actions are roll and hold.

33
00:01:54,000 --> 00:01:56,000
We're starting to move down.

34
00:01:56,000 --> 00:02:00,000
Let's just say now how are we going to represent these actions?

35
00:02:00,000 --> 00:02:02,000
Well, we can call the actions just by strings,

36
00:02:02,000 --> 00:02:06,000
so we use the strings "roll" and "hold"

37
00:02:06,000 --> 00:02:09,000
and that could be what the strategy returns.

38
00:02:09,000 --> 00:02:12,000
But then we'll also need something that implements these actions,

39
00:02:12,000 --> 00:02:16,000
so we'll have to have something that's a function that says--let's say--

40
00:02:16,000 --> 00:02:21,000
the function "roll" takes a state and returns a new state;

41
00:02:21,000 --> 00:02:27,000
function "hold" takes a state and returns a new state.

42
00:02:27,000 --> 00:02:30,000
But that doesn't seem quite right; there's a problem here.

43
00:02:30,000 --> 00:02:36,000
What about the die? That seems to take and effect

44
00:02:36,000 --> 00:02:41,000
that roll by itself is not a function from state to state.

45
00:02:41,000 --> 00:02:48,000
Rather, roll--if we wanted to specify it--would be a function from a state to a set of states,

46
00:02:48,000 --> 00:02:50,000
and that represents the fundamental uncertainty.

47
00:02:50,000 --> 00:02:53,000
That's why we need probability to deal with it.

48
00:02:53,000 --> 00:02:58,000
That's why we have an uncertain or a nondeterministic domain

49
00:02:58,000 --> 00:03:01,000
is because an action doesn't have a single result;

50
00:03:01,000 --> 00:03:04,000
rather, it can have a set of possible results.

51
00:03:04,000 --> 00:03:09,000
And, in some cases it makes sense to go ahead and implement these actions as functions

52
00:03:09,000 --> 00:03:12,000
that look like that, that return sets of states.

53
00:03:12,000 --> 00:03:18,000
And I considered that as a possibility, but I ended up with an implementation

54
00:03:18,000 --> 00:03:21,000
where I talk about the different possibilities for the dice.

55
00:03:21,000 --> 00:03:25,000
So the dice can come up as D, one of the numbers 1 to 6,

56
00:03:25,000 --> 00:03:30,000
and now roll, from a particular state with the particular die roll,

57
00:03:30,000 --> 00:03:33,000
that is going to return a single state rather than a set of states.

58
00:03:33,000 --> 00:03:37,000
And I just think it's easier to deal this way, although in other applications

59
00:03:37,000 --> 00:03:39,000
you might want to deal that way.

60
00:03:39,000 --> 00:03:41,000
Now the rest seems to be pretty easy.

61
00:03:41,000 --> 00:03:44,000
The die can be represented as an integer.

62
00:03:44,000 --> 00:03:47,000
Scores can be represented as integers.

63
00:03:47,000 --> 00:03:49,000
Likewise the goal.

64
00:03:49,000 --> 00:03:54,000
The player to move--we can represent that as an index, 0 or 1,

65
00:03:54,000 --> 00:03:57,000
into an array of players.

66
00:03:57,000 --> 00:03:59,000
And the players themselves?

67
00:03:59,000 --> 00:04:03,000
Well, the simplest way to do it is just to represent the player by their strategy.

68
00:04:03,000 --> 00:04:06,000
The strategy is a function, and that could represent the player.

69
00:04:06,000 --> 00:04:08,000
We could have something more complex,

70
00:04:08,000 --> 00:04:11,000
but it seems like we don't need anything more than that.

71
00:04:11,000 --> 99:59:59,999
So players will be strategy functions.
