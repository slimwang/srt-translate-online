1
00:00:00,171 --> 00:00:03,140
Now that we have some background on why GPUs look the way they do,

2
00:00:03,140 --> 00:00:06,810
we'll now discuss what a GPU looks like from the point of view of a software developer.

3
00:00:06,810 --> 00:00:10,317
One of the themes of this class is the importance of programming in parallel.

4
00:00:10,317 --> 00:00:14,719
This is a crucial skill, not just for GPUs, but also for CPUs even.

5
00:00:14,719 --> 00:00:20,290
If you buy an 8 core Intel Ivy Bridge processor, we see that it has 8 cores.

6
00:00:20,290 --> 00:00:23,195
Each core has 8-wide AVX vector operations.

7
00:00:23,195 --> 00:00:26,234
Each core supports two simultaneously running threads.

8
00:00:26,234 --> 00:00:29,700
Multiply those together and you get 128-way parallelism.

9
00:00:29,700 --> 00:00:33,945
On this processor, if you run a completely serial, C program with no parallelism at all,

10
00:00:33,945 --> 00:00:37,475
you're going to use less than 1% of the capabilities of this machine.

11
00:00:37,475 --> 00:00:41,946
There's no doubt that parallel programming is harder than serial programming, no matter what your target.

12
00:00:41,946 --> 00:00:44,149
But I hope by the end of the class, we'll convince you

13
00:00:44,149 --> 00:00:47,887
that this additional complexity is worthwhile for the potential performance gains.

14
00:00:47,887 --> 00:00:49,321
And throughout the course of the class,

15
00:00:49,321 --> 00:00:52,790
we'll try to lay out the benefits and the limitations of this programming model.

16
00:00:52,790 --> 00:00:56,395
One of the really exciting things about GPU computing is that it moves quickly,

17
00:00:56,395 --> 00:01:00,433
and some of today's limitations may disappear in the next generation of GPUs.
