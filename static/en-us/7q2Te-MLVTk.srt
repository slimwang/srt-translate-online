1
00:00:00,250 --> 00:00:06,050
In your iPython notebook you'll find
a function that says MahalanobisDist.

2
00:00:06,050 --> 00:00:08,109
It takes in two variable, x and y.

3
00:00:09,190 --> 00:00:14,480
It calculates the covariant matrix
as well as the difference arrays for

4
00:00:14,480 --> 00:00:17,490
each of the variables from their means.

5
00:00:17,490 --> 00:00:20,000
It returns the Mahalanobis distance.

6
00:00:21,000 --> 00:00:22,820
Lets execute the scope.

7
00:00:22,820 --> 00:00:27,870
Once this is done running,
we can use the MahalanobisDist function

8
00:00:27,870 --> 00:00:32,580
to calculate the distances between
all the points in x and x bar.

9
00:00:32,580 --> 00:00:34,140
Let's run this line of code.

10
00:00:34,140 --> 00:00:38,350
The next function implements
an outlier detector.

11
00:00:38,350 --> 00:00:42,600
In this case, we call the previous
MahalanobisDist function

12
00:00:42,600 --> 00:00:45,600
between the two variables x and y.

13
00:00:45,600 --> 00:00:50,661
We set a threshold of
-2 times log of 1-p.

14
00:00:50,661 --> 00:00:55,576
Here p is the probability with
which I believe that a point is

15
00:00:55,576 --> 00:00:59,260
in the distribution of x and y together.

16
00:00:59,260 --> 00:01:01,200
Let's run this code.

17
00:01:01,200 --> 00:01:05,170
Now that we have defined
the function FindOutliers,

18
00:01:05,170 --> 00:01:08,260
we can call it with our variables.

19
00:01:08,260 --> 00:01:15,630
We use x,xbar and a probability
of 2.43 times 10 to the -6.

20
00:01:15,630 --> 00:01:22,450
This corresponds to a five sigma
significance in a normal distribution.

21
00:01:22,450 --> 00:01:26,960
Let's see if we can find outliers
with five sigma significance.

22
00:01:28,022 --> 00:01:33,280
The FindOutliers function returns
the outliers in an array.

23
00:01:33,280 --> 00:01:37,723
We want to plot the outliers and see
what the indices of these outliers are.

24
00:01:37,723 --> 00:01:41,725
Use the PlotOutliers
function to do that.

25
00:01:41,725 --> 00:01:45,735
Once it's done running,
you will see the following output.

26
00:01:45,735 --> 00:01:48,421
Total Outliers found : 4.

27
00:01:48,421 --> 00:01:53,594
The indices of the variables for
the outliers are given here.

28
00:01:53,594 --> 00:02:01,550
The plot here shows the values where
the outliers lie in the x x-bar PDF.
