1
00:00:00,190 --> 00:00:04,702
RPC is intended to simplify
the development of cross-address space

2
00:00:04,702 --> 00:00:07,390
and/or cross-machine interactions.

3
00:00:07,390 --> 00:00:09,510
So what are the benefits?

4
00:00:09,510 --> 00:00:14,460
RPC offers a higher-level interface
that captures all aspects of data

5
00:00:14,460 --> 00:00:19,100
movement and communications, including
communication establishment, requests,

6
00:00:19,100 --> 00:00:21,420
responses, acknowledgements, et cetera.

7
00:00:21,420 --> 00:00:23,870
What this also allows it permits for

8
00:00:23,870 --> 00:00:27,830
RPC's to capture a lot of
the error handling and automated,

9
00:00:27,830 --> 00:00:31,880
and the programmer doesn't
really have to worry about that.

10
00:00:31,880 --> 00:00:35,940
Or at least the programmer doesn't have
to explicitly reimplement the handling

11
00:00:35,940 --> 00:00:37,920
of all types of errors.

12
00:00:37,920 --> 00:00:42,705
And finally, another benefit from RPC
is that it hides the complexities of

13
00:00:42,705 --> 00:00:47,000
cross-machines interactions, so the fact
that machines may be of different types,

14
00:00:47,000 --> 00:00:51,360
that the network between them may fail,
that the machines themselves may fail.

15
00:00:51,360 --> 00:00:53,580
That will be hidden from the developer.

16
00:00:53,580 --> 00:00:55,580
So as a programmer, when using RPC,

17
00:00:55,580 --> 00:00:57,480
we don't have to worry
about those differences.
