1
00:00:00,000 --> 00:00:04,000
We're going to do that while we introduce graphics.

2
00:00:04,000 --> 00:00:09,000
Remember our goal is to render a webpage to make a picture that corresponds

3
00:00:09,000 --> 00:00:10,000
to a webpage.

4
00:00:10,000 --> 00:00:14,000
That means we need some way to make a picture, and it may not be obvious

5
00:00:14,000 --> 00:00:15,000
how we'll do that in Python.

6
00:00:15,000 --> 00:00:21,000
It turns out that just as we used a library for regular expressions and parsing

7
00:00:21,000 --> 00:00:25,000
and even timing procedures--if you remember that example from before--

8
00:00:25,000 --> 00:00:29,000
we're going to use a library--someone else's code--to do graphics.

9
00:00:29,000 --> 00:00:33,000
This ability, by the way, to build on existing off-the-shelf components

10
00:00:33,000 --> 00:00:36,000
is one of the phenomenal advantages of computer science compared to

11
00:00:36,000 --> 00:00:38,000
other parts of engineering.

12
00:00:38,000 --> 00:00:41,000
It's very easy to copy someone else's library and build on top of it--

13
00:00:41,000 --> 00:00:46,000
much harder to copy someone else's building without actually reconstructing it yourself.

14
00:00:46,000 --> 00:00:50,000
So there are 4 key functions in our graphics library that are worth knowing about.

15
00:00:50,000 --> 00:00:55,000
In graphics.word, you pass in a single word, and we'll draw it on the screen

16
00:00:55,000 --> 00:00:57,000
or on the picture we're making for you.

17
00:00:57,000 --> 00:01:00,000
Graphics.begtintag is a bit more complicated.

18
00:01:00,000 --> 00:01:04,000
You have to tell us both the type of the tag and also any arguments it might have.

19
00:01:04,000 --> 00:01:08,000
For example, suppose it's an anchor tag--a link in a webpage--

20
00:01:08,000 --> 00:01:11,000
we need to know what the destination of the link is.

21
00:01:11,000 --> 00:01:16,000
I'll have you pass that in as a dictionary, mapping href to "google".

22
00:01:16,000 --> 00:01:19,000
Then after that you could call and display a bunch of other words

23
00:01:19,000 --> 00:01:22,000
and those would all be underlined or they would show up in blue

24
00:01:22,000 --> 00:01:24,000
or however we draw web links.

25
00:01:24,000 --> 00:01:26,000
Eventually, we can end the most recent tag,

26
00:01:26,000 --> 00:01:31,000
and there's also a way to display warnings, which is basically just for your benefit

27
00:01:31,000 --> 00:01:33,000
if you're trying this out in later assigments.

28
00:01:33,000 --> 00:01:34,000
This gives you a way of debugging.

29
00:01:34,000 --> 00:01:38,000
Maybe this will show up in some bold, red color or something like that

30
00:01:38,000 --> 00:01:39,000
so that you can't miss it.

31
00:01:39,000 --> 00:01:41,000
So let's imagine that we have the following webpage input.

32
00:01:41,000 --> 00:01:45,000
Nelson Mandela was elected democratically.

33
00:01:45,000 --> 00:01:48,000
I'm going to show you the sequence of calls to the graphics library

34
00:01:48,000 --> 00:01:49,000
that we would want.

35
00:01:49,000 --> 00:01:52,000
Well, conceptually, the first thing we're going to do is print out the word Nelson

36
00:01:52,000 --> 00:01:53,000
on the screen.

37
00:01:53,000 --> 00:01:56,000
Then we'll want to print out the word Mandela on the screen.

38
00:01:56,000 --> 00:02:01,000
Then we want to tell the graphics library that for while, subsequent words

39
00:02:01,000 --> 00:02:02,000
should be bolded.

40
00:02:02,000 --> 00:02:03,000
So we'll begin a bold tag.

41
00:02:03,000 --> 00:02:07,000
This bold tag doesn't have any arguments, so we'll just pass in the empty dictionary.

42
00:02:07,000 --> 00:02:10,000
That didn't actually draw anything on the screen.

43
00:02:10,000 --> 00:02:13,000
It's just a note to begin drawing in bold.

44
00:02:13,000 --> 00:02:17,000
You can imagine changing out your pen for something that draws in a different color.

45
00:02:17,000 --> 00:02:21,000
Now we instruct our graphics library to write the word "was,"

46
00:02:21,000 --> 00:02:22,000
but it's going to be bolded.

47
00:02:22,000 --> 00:02:26,000
Now we write the world elected, and now we're done with things in bold,

48
00:02:26,000 --> 00:02:28,000
so we back out of our most recent tag.

49
00:02:28,000 --> 00:02:32,000
Finally, we'll add the word "democratically" and a period.

50
00:02:32,000 --> 00:02:35,000
This depends on how our lexer works, but remember that our definition for word

51
00:02:35,000 --> 00:02:39,000
was sort of anything that's not whitespace or angle brackets,

52
00:02:39,000 --> 00:02:41,000
so this period will be part of the same word.

53
00:02:41,000 --> 00:02:45,000
Then it will be the responsibility of our graphics library to do things like wrapping

54
00:02:45,000 --> 00:02:49,000
when we get to the end of the page to decide what bold looks like.

55
00:02:49,000 --> 00:02:50,000
And then to display the image back to you.

56
00:02:50,000 --> 00:02:55,000
So these 1, 2, 3, 4, 5, 6, 7 calls produce this image.

57
00:02:55,000 --> 00:02:57,000
That's how we're going to make our web browser.

58
00:02:57,000 --> 00:03:01,000
While we're here, Nelson Mandela was actually the first South African President

59
00:03:01,000 --> 00:03:04,000
in a fully representative democratic election,

60
00:03:04,000 --> 99:59:59,999
and he went on to win the 1993 Nobel Peace Prize, plus a host of other honors.
