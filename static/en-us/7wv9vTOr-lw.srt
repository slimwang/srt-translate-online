1
00:00:00,470 --> 00:00:03,570
I've just resolved the merge conflict
by moving my change of splitting

2
00:00:03,570 --> 00:00:07,450
the asteroid into two fragments into
the new breakIntoFragments function.

3
00:00:08,580 --> 00:00:12,110
However, I still need to let git
know that the conflict is resolved.

4
00:00:12,110 --> 00:00:14,520
I can do this by
committing the resolution.

5
00:00:14,520 --> 00:00:16,170
First I'll save the file.

6
00:00:16,170 --> 00:00:19,390
Then I'll go back to the command
line and run git status.

7
00:00:19,390 --> 00:00:22,810
This time, instead of showing
game.js as simply modified,

8
00:00:22,810 --> 00:00:25,550
git shows the file was both modified.

9
00:00:25,550 --> 00:00:29,470
That's because both branches modified
the file and then there was a conflict.

10
00:00:29,470 --> 00:00:32,950
I resolved the conflict, though, so
I'll add the file to the staging area.

11
00:00:34,390 --> 00:00:39,000
Now I'll run git status again, and
git says, all conflicts are fixed but

12
00:00:39,000 --> 00:00:40,460
you are still merging.

13
00:00:40,460 --> 00:00:42,790
Use git commit to conclude the merge.

14
00:00:42,790 --> 00:00:43,780
So I'll go ahead and

15
00:00:43,780 --> 00:00:48,860
do that, and once again git has already
filled in a commit message for me.

16
00:00:48,860 --> 00:00:52,830
This time it notes that I just merged
the master branch into easy-mode, and

17
00:00:52,830 --> 00:00:54,739
that there was a conflict in game.js.

18
00:00:55,780 --> 00:00:58,480
Like before, I could change
this message if I wanted to.

19
00:00:58,480 --> 00:01:00,800
But this message describes
the commit well, so

20
00:01:00,800 --> 00:01:03,240
I'll leave the message as it is and
quit.

21
00:01:03,240 --> 00:01:04,819
Now I'll run git log.

22
00:01:04,819 --> 00:01:07,070
Notice that only one
new commit was created.

23
00:01:08,180 --> 00:01:12,030
Git didn't create a separate merge
commit and a conflict resolution.

24
00:01:12,030 --> 00:01:14,020
Instead, it just put them
both in the same commit.

25
00:01:15,350 --> 00:01:18,290
Now to get practice resolving
a merge conflict, go and

26
00:01:18,290 --> 00:01:21,550
merge master into easy-mode
on your own computer.

27
00:01:21,550 --> 00:01:24,692
When you're done,
run the command, git log -n 1 and

28
00:01:24,692 --> 00:01:26,430
paste the output in this box.

29
00:01:26,430 --> 00:01:30,950
The -n flag means that git log will
only show that number of commits,

30
00:01:30,950 --> 00:01:31,720
in this case, one.
