1
00:00:00,360 --> 00:00:03,390
Let's look at the solution
to our page size quiz.

2
00:00:03,390 --> 00:00:05,747
Our physical memory's 2 GB.

3
00:00:05,747 --> 00:00:09,030
Our page size is 4 kB.

4
00:00:09,030 --> 00:00:11,140
How many page frames we have?

5
00:00:11,140 --> 00:00:17,690
Well, a page frame is a place in
physical memory where a page might fit.

6
00:00:17,690 --> 00:00:21,190
So, the number of frames is simply 2 GB,

7
00:00:21,190 --> 00:00:25,120
the physical memory size,
divided by the page size.

8
00:00:25,120 --> 00:00:29,110
The frame is the same size as a page
because it's basically a place for

9
00:00:29,110 --> 00:00:30,980
a page to be in.

10
00:00:30,980 --> 00:00:33,360
When we are doing things like this,

11
00:00:33,360 --> 00:00:38,120
usually it's a lot easier to think
about this as what power of two is it.

12
00:00:38,120 --> 00:00:42,992
So, 2 GB is 2 to the 31st bytes.

13
00:00:42,992 --> 00:00:46,860
4 kB is 2 to the 12th bytes, so

14
00:00:46,860 --> 00:00:52,520
we end up with 2 to the 19th frames,
so the answer here is 2 to the 19th.

15
00:00:52,520 --> 00:00:56,020
How many entries do we
have in each page table?

16
00:00:56,020 --> 00:01:01,210
We need one entry in a page table for
each page in the virtual memory.

17
00:01:01,210 --> 00:01:07,240
So the answer here is 4
GB divided by 4 kB, and

18
00:01:07,240 --> 00:01:12,780
that is 2 to the 20th, or
one mega entry as they would say.

19
00:01:12,780 --> 00:01:16,600
Note that we need a separate
page table for each process.

20
00:01:16,600 --> 00:01:19,250
Each process is 4 GB of virtual memory.

21
00:01:19,250 --> 00:01:23,975
So each process in our system will
need a page table that is this large,

22
00:01:23,975 --> 00:01:28,510
2 to the 20th or
slightly more than one million entries.
