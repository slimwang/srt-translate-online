1
00:00:00,025 --> 00:00:01,905
To show how this algorithm works,

2
00:00:01,905 --> 00:00:05,765
let's assume that we have a list of nodes that are on the current frontier.

3
00:00:05,765 --> 00:00:09,210
What we want to find are all nodes that are 1 hop away from the frontier,

4
00:00:09,210 --> 00:00:11,508
so let's use this example here,

5
00:00:11,508 --> 00:00:14,364
and we're going to assume that we're 1 step into the breadth-first search,

6
00:00:14,364 --> 00:00:16,851
so the frontier is nodes 1 and 3.

7
00:00:16,851 --> 00:00:19,151
So now we're going to walk through the algorithm.

8
00:00:19,151 --> 00:00:23,478
Step 1, In parallel: For each node in the frontier, find the starting point of its neighbors.

9
00:00:23,478 --> 00:00:27,668
This is pretty simple; for vertex V, that's just R of V.

10
00:00:27,668 --> 00:00:30,534
In our example, node 1's neighbors start at offset 2,

11
00:00:30,534 --> 00:00:33,515
and node 3's neighbors start at offset 5.
