1
00:00:00,140 --> 00:00:04,689
Let's look at the solution to our latest
virtual to physical translation quiz,

2
00:00:04,689 --> 00:00:08,470
where we had the memory access times and
the hit rates for the cache, and

3
00:00:08,470 --> 00:00:11,090
we were assuming that
the three-level page table

4
00:00:11,090 --> 00:00:14,630
now can be cached just like
data with the same hit rate.

5
00:00:14,630 --> 00:00:19,760
Now we have one cycle to compute
the virtual address, followed by,

6
00:00:19,760 --> 00:00:25,040
for each level of the page table,
three times, we need to do

7
00:00:25,040 --> 00:00:31,220
one cycle to access the cache plus
10% of the time for each of those.

8
00:00:31,220 --> 00:00:35,332
We will have a miss and go to memory
to fetch the page table entry.

9
00:00:35,332 --> 00:00:41,550
And then after we do that, We can
access the data, which takes one cycle

10
00:00:41,550 --> 00:00:47,540
plus 10% of the time, it takes
ten more cycles to access memory.

11
00:00:47,540 --> 00:00:51,380
So now we have nine cycles altogether,

12
00:00:51,380 --> 00:00:56,470
six of which are used by virtual
to physical translation.

13
00:00:56,470 --> 00:01:00,090
And only three for
the instruction itself and

14
00:01:00,090 --> 00:01:03,060
the memory access, including the misses.

15
00:01:03,060 --> 00:01:06,600
So we can see that the virtual to
physical translation is expensive,

16
00:01:06,600 --> 00:01:10,470
even if we allow page table entries
to be treated as data and cached.
