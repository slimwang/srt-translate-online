1
00:00:00,500 --> 00:00:04,510
A platform which terminates apps on its own is a pretty radical departure for

2
00:00:04,510 --> 00:00:07,920
anyone like me who cut their teeth on desktop Winforms development.

3
00:00:07,920 --> 00:00:10,910
If you come from a similar background you probably have

4
00:00:10,910 --> 00:00:14,912
a pretty good idea of what to expect in terms of lifecycle event handles.

5
00:00:20,300 --> 00:00:24,380
You start with the onCreate call back where you build and wire up your UI.

6
00:00:24,380 --> 00:00:28,910
Once that's done, your activity has been created. It likely won't be a surprise

7
00:00:28,910 --> 00:00:32,650
to you that there are also event handlers for when the activity becomes visible.

8
00:00:32,650 --> 00:00:36,970
Which is onStart and another for when it gets focus and becomes the active

9
00:00:36,970 --> 00:00:42,255
foreground app, which is onResume. That same sequence, then happens in reverse.

10
00:00:42,255 --> 00:00:48,542
[SOUND] onPause indicates that the activity has lost focus, followed by

11
00:00:48,542 --> 00:00:54,283
onStop when the app is no longer visible. Finally, there's an onDestroy method,

12
00:00:54,283 --> 00:00:58,540
indicating the end of the app lifecycle. When your app is first launched, you'll

13
00:00:58,540 --> 00:01:03,265
quickly move through these states. Create, Start, Resume, one after the other

14
00:01:03,265 --> 00:01:06,803
[BLANK_AUDIO]

15
00:01:06,803 --> 00:01:10,985
But within the full application lifetime, from when onCreate is first called and

16
00:01:10,985 --> 00:01:16,480
till the app is finally terminated. It will move through the active lifetime and

17
00:01:16,480 --> 00:01:22,640
the physical lifetime, many times. Let's look at those in a little more detail.
