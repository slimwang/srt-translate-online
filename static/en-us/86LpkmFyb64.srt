1
00:00:00,000 --> 00:00:04,880
So which of these problems here are computer problems? So, let's just check the three rules.

2
00:00:04,880 --> 00:00:10,490
Given an essay by a student, that is definitely a finite string using a constant number of symbols.

3
00:00:10,490 --> 00:00:14,900
So rule 1 here is okay. Does that essay have at least 10,000 characters?

4
00:00:14,900 --> 00:00:17,680
Where the output is same, either yes or no?

5
00:00:17,680 --> 00:00:22,220
So that is easily fulfill-able and of course the answer here is also objectively correct.

6
00:00:22,220 --> 00:00:26,900
You can easily count the number of characters and say, yes it's at least 10,000 or no, it's not.

7
00:00:26,900 --> 00:00:28,940
So this is definitely a computer problem.

8
00:00:28,940 --> 00:00:32,500
The second, one of course, well, the output would still be a finite string,

9
00:00:32,500 --> 00:00:37,250
because you could say depending on the grading system, A, B, C, D, or 1, 2, 3, 4,

10
00:00:37,250 --> 00:00:41,240
of course, the output is not objectively correct because different instructors

11
00:00:41,240 --> 00:00:45,550
tend to sometimes at least disagree on the grade that an essay deserves.

12
00:00:45,550 --> 00:00:48,900
So this is not a computer problem although there have been attempts for

13
00:00:48,900 --> 00:00:52,620
automated grading which is just weird to say at least.

14
00:00:52,620 --> 00:00:57,050
Does the essay contain any misspelled words? Now this is a tricky one.

15
00:00:57,050 --> 00:01:03,600
So the input again is finite. The output basically just says yes or no or it can even specify the word.

16
00:01:03,600 --> 00:01:09,110
The problem is that it's sometimes very hard to say if something is a spelling mistake.

17
00:01:09,110 --> 00:01:12,560
I'll give you one example. Consider for example this sentence here.

18
00:01:12,560 --> 00:01:14,180
He was attacked by a rat.

19
00:01:14,180 --> 00:01:19,170
At first sight, this sentence--at least if I'd written it in the correct way--

20
00:01:19,170 --> 00:01:23,790
does not contain any misspelled words, but actually it could contain a misspelled word,

21
00:01:23,790 --> 00:01:28,340
because what if the author actually had meant to type he was attacked by a bat.

22
00:01:28,340 --> 00:01:33,410
That sentence by itself might make perfect sense but you could still have

23
00:01:33,410 --> 00:01:37,690
simply mistyped this word here although of course your computer has a spell checker,

24
00:01:37,690 --> 00:01:40,930
you might've noticed that the spell checker sometimes is wrong

25
00:01:40,930 --> 00:01:45,150
because it sometimes just cannot figure out in which context your saying your sentence.

26
00:01:45,150 --> 00:01:48,860
And even if it were a very very strong computer and this example here,

27
00:01:48,860 --> 00:01:51,870
you cannot objectively determine if this is the right answer.

28
00:01:51,870 --> 00:01:54,660
It can be dependent more or less totally on the author.

29
00:01:54,660 --> 00:01:59,190
This problem here is actually not a computer problem in the way that it's stated here.

30
00:01:59,190 --> 00:02:03,200
But this was a bit of a tricky one, so I hope you're not frustrated if you didn't get that.

31
00:02:03,200 --> 00:02:06,390
But it tells you that sometimes you have to watch out very careful with these rules.

32
00:02:06,390 --> 00:02:11,400
They sound very simple but actually there are some tricky details seen in here.

33
00:02:11,400 --> 00:02:14,600
So let's go to the next set of problems. Given two integers, what is their sum?

34
00:02:14,600 --> 00:02:18,430
That, of course, is a very classic computer problem.

35
00:02:18,430 --> 00:02:24,350
The integers are given as numbers 1, 2, 3, 4, 5. The output is a number that's also fine. It's finite.

36
00:02:24,350 --> 00:02:29,390
And adding something where you can definitely have a definitive and objective answer.

37
00:02:29,390 --> 00:02:33,760
Does the smaller integer divide the larger one? Yes absolutely a computer problem.

38
00:02:33,760 --> 00:02:38,050
The answer is yes or no and you can objectively say if the answer is correct or no.

39
00:02:38,050 --> 00:02:41,610
This one down here is not a computer problem and actually

40
00:02:41,610 --> 00:02:43,530
it's not a computer problem for two reasons.

41
00:02:43,530 --> 00:02:47,360
One reason which is a bit technical is the RAM computer

42
00:02:47,360 --> 00:02:50,570
or a normal computer doesn't really have true randomness.

43
00:02:50,570 --> 00:02:54,000
A normal computer generates numbers that seem like random

44
00:02:54,000 --> 00:02:58,000
using an algorithm but that is not random, but as I said this is a bit technical.

45
00:02:58,000 --> 00:03:02,220
I think the main reason why this is not a computer problem is that it's not possible

46
00:03:02,220 --> 00:03:06,360
once you have the answer to actually know if this answer is correct.

47
00:03:06,360 --> 00:03:10,290
So if the number was indeed generated at random. So let me give you one example.

48
00:03:10,290 --> 00:03:14,580
So for example, I have the numbers 7 and 10, and now I say that

49
00:03:14,580 --> 00:03:17,770
I have randomly generated a 9 which lies between the two.

50
00:03:17,770 --> 00:03:21,790
You have no way of checking this I really generated this number using coin flips,

51
00:03:21,790 --> 00:03:27,680
or throwing a dice, or if I just made that up, or maybe if I use an algorithm that always outputs a 9.

52
00:03:27,680 --> 00:03:31,060
So there's no way to determine from an output if that output

53
00:03:31,060 --> 00:03:34,230
has really been generated using a random process.

54
00:03:34,230 --> 00:03:39,440
And that is basically also the same reason why this one here is not correct.

55
00:03:39,440 --> 00:03:44,080
Of course you can kind of determine the likelihood if this is a very long string of 0s and 1s,

56
00:03:44,080 --> 00:03:49,140
you can say well this looks more or less like a random string or not random string,

57
00:03:49,140 --> 00:03:54,290
but actually if the string is generated choosing uniformly between 0s and 1s,

58
00:03:54,290 --> 00:03:59,860
any string is as likely as any other string, so it's not possible to objectively check the answer yes.

59
00:03:59,860 --> 00:04:03,820
So for example, if I say I generated a string using a number of coin flips

60
00:04:03,820 --> 00:04:10,170
and I have heads, heads, heads, heads, heads, heads, heads, heads,

61
00:04:10,170 --> 00:04:13,410
it might not look random but maybe I was just lucky at that moment.

62
00:04:13,410 --> 00:04:18,839
Now the final answer here and if you got that right without checking this answer video,

63
00:04:18,839 --> 00:04:21,550
then you're almost a master of theoretical computer science

64
00:04:21,550 --> 00:04:24,540
because this again is a quite tricky one in my mind.

65
00:04:24,540 --> 00:04:30,520
I will tell you that this is not a computer problem. Why is that not a computer problem?

66
00:04:30,520 --> 00:04:36,900
You can enter a √5 into your computer, which you need to do like this, into Google for example,

67
00:04:36,900 --> 00:04:43,890
and then we'll tell you that the √5 is 2.23606798 but that is actually not the correct answer.

68
00:04:43,890 --> 00:04:47,580
For example, if I enter it into another calculator or webpage that has more digits,

69
00:04:47,580 --> 00:04:51,750
then that will tell me that it's actually not 6798, but actually

70
00:04:51,750 --> 00:05:02,480
2.23606606797749978969640917366973 and so on.

71
00:05:02,480 --> 00:05:10,710
The √5 is an infinite string. If I ask a computer to calculate √5 to within a certain position,

72
00:05:10,710 --> 00:05:14,110
say, I want the first 10 digits or so, then it is a computer problem

73
00:05:14,110 --> 00:05:19,040
but just asking a computer to calculate the √5, then this way is not correct.

74
00:05:19,040 --> 00:05:21,190
Why am I nitpicking you here like this?

75
00:05:21,190 --> 00:05:25,340
Well the thing is this, infinities will play a very important role here in this unit

76
00:05:25,340 --> 00:05:27,930
when it comes to problem set no computer can ever solve.

77
00:05:27,930 --> 00:05:32,420
This is why it's very important to make sure that the input is finite and the output is finite.

78
00:05:32,420 --> 00:05:35,890
So if you do not phrase the question here very precisely,

79
00:05:35,890 --> 00:05:38,430
then some of the results will change or not be correct.

80
00:05:38,430 --> 99:59:59,999
So, it's very important to ensure finiteness and later in this unit you will see why it's so important.
