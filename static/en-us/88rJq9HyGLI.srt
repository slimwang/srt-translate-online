1
00:00:00,880 --> 00:00:03,650
The active life cycle is when your activity is in the foreground and

2
00:00:03,650 --> 00:00:10,600
has focus. Here it is actively receiving input from user events and

3
00:00:10,600 --> 00:00:16,140
no other activities are obscuring it. On [UNKNOWN] and

4
00:00:16,140 --> 00:00:20,570
the active lifetime ends as soon as your activity is partially obscured,

5
00:00:20,570 --> 00:00:27,120
like in this example. [SOUND] You can see here the permissions dialogue

6
00:00:27,120 --> 00:00:31,828
is displayed in front of Google Play for

7
00:00:31,828 --> 00:00:36,826
an app in store. Or the same thing happens when you have another activity trying

8
00:00:36,826 --> 00:00:41,290
to fulfill an implicit intent and the user needs to make a selection. So

9
00:00:41,290 --> 00:00:43,790
to make efficient use of limited resources,

10
00:00:43,790 --> 00:00:46,590
you'll want to use these signals to adjust your app's resource burden.

11
00:00:47,660 --> 00:00:52,140
So, most updates through a UI, can be paused when this lifetime ends,

12
00:00:52,140 --> 00:00:57,400
which is announced by onPause. But as you see, the app is still visible, so

13
00:00:57,400 --> 00:01:01,650
you shouldn't pause any processes that are drawing your UI. The visible

14
00:01:01,650 --> 00:01:05,459
lifetime on the other hand continues whenever the app is at all visible and

15
00:01:05,459 --> 00:01:11,112
ends as soon as it's completely obscured by another app. Like this.

16
00:01:11,112 --> 00:01:16,844
[SOUND] At this point, our app is moved to the background.

17
00:01:16,844 --> 00:01:22,000
So when you see on stop, you know the user can't see your app at all. So, while

18
00:01:22,000 --> 00:01:26,410
OnCreate and OnDestroy will be called at most once, each time your app is run,

19
00:01:26,410 --> 00:01:29,740
these handlers are likely to be called many times, while the app is running.

20
00:01:29,740 --> 00:01:34,310
Now, this is where things get a little different. On almost al platforms,

21
00:01:34,310 --> 00:01:38,260
app life cycles are deterministic. Generally, you'll start a program and

22
00:01:38,260 --> 00:01:42,140
it'll keep running, until it either completes or the user cancels it. You look

23
00:01:42,140 --> 00:01:45,660
at traditional desktop development that means your app keeps running until your

24
00:01:45,660 --> 00:01:50,280
user chooses quit or exit from the file menu. At that point you can say stay and

25
00:01:50,280 --> 00:01:55,350
free resources. But as we know on Android life cycles work a little differently.

26
00:01:55,350 --> 00:01:58,010
So, let's take a closer look at exactly how that works now.
