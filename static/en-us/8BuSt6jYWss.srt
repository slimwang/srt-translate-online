1
00:00:00,190 --> 00:00:06,290
In the first case when we used the local implementation and used only the remote

2
00:00:06,290 --> 00:00:09,430
interface. The implement that makes instances of

3
00:00:09,430 --> 00:00:12,400
the object remotely accessible. So the heavy lifting

4
00:00:12,400 --> 00:00:13,830
needs to be done by the implementer.

5
00:00:13,830 --> 00:00:17,410
That's not quite preferable. One virtue of the

6
00:00:17,410 --> 00:00:21,260
local implementation is that the service provider can

7
00:00:21,260 --> 00:00:24,860
make selected servers visible to the selected clients.

8
00:00:24,860 --> 00:00:27,730
So that's the only virtue that one can

9
00:00:27,730 --> 00:00:31,860
associate with the first implementation that uses local. You

10
00:00:31,860 --> 00:00:34,680
cannot make a hard case, a strong case

11
00:00:34,680 --> 00:00:39,030
for this choice. So this choice where we are

12
00:00:39,030 --> 00:00:43,130
extending remote object and the remote server. We

13
00:00:43,130 --> 00:00:45,920
are letting Java RMI do all the heavy lifting

14
00:00:45,920 --> 00:00:47,530
to make the server object visible to the

15
00:00:47,530 --> 00:00:50,020
network lines. And that's the more preferred way of

16
00:00:50,020 --> 00:00:54,330
building a network service, and making it available for clients anywhere.
