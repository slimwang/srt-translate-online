1
00:00:01,070 --> 00:00:02,940
So they've identified
a flaw in your game.

2
00:00:02,940 --> 00:00:04,880
But you aren't sure about how to fix it.

3
00:00:04,880 --> 00:00:06,200
What do you do?

4
00:00:06,200 --> 00:00:08,130
Well you can make an educated guess.

5
00:00:08,130 --> 00:00:10,010
But the best developers don't guess.

6
00:00:10,010 --> 00:00:12,740
They know, they use A/B testing,

7
00:00:12,740 --> 00:00:16,290
which is testing different versions
of a game at the same time.

8
00:00:16,290 --> 00:00:19,590
And seeing which version gets
the best response from players.

9
00:00:19,590 --> 00:00:23,500
It's called AB, because the simplest
test compared two versions.

10
00:00:23,500 --> 00:00:25,600
An A and B version.

11
00:00:25,600 --> 00:00:28,520
The A version is given to
one half of the games users.

12
00:00:28,520 --> 00:00:30,860
And the B is given to the other half,
and

13
00:00:30,860 --> 00:00:32,540
we see how each group of users respond.

14
00:00:33,720 --> 00:00:37,510
These tests can help you repair any
game content that you're unsure about.

15
00:00:37,510 --> 00:00:40,520
From the color scheme to game content.

16
00:00:40,520 --> 00:00:44,120
And you can test out two versions or
as many as you want.

17
00:00:44,120 --> 00:00:47,600
Let's walk through an example of
creating effective AB testing scenarios.

18
00:00:49,770 --> 00:00:52,910
Let's say we've made a platform a game,
where we jump around and

19
00:00:52,910 --> 00:00:55,180
shoot enemies to advance levels.

20
00:00:55,180 --> 00:01:00,250
Our analytics have shown us that only
20% of players make it past Level 3.

21
00:01:00,250 --> 00:01:03,860
We think that the level might
be too hard, so let's change it.

22
00:01:03,860 --> 00:01:07,340
Let's test out different levels of
difficulty and see how users respond.

23
00:01:08,380 --> 00:01:13,040
To see how players respond to different
scenarios, we can use A/B testing,

24
00:01:13,040 --> 00:01:16,100
which is a method of testing that
compares the performance of two or

25
00:01:16,100 --> 00:01:19,670
more game versions A and B and so on.

26
00:01:19,670 --> 00:01:23,210
The most effective A/B testing
scenarios are designed to test out

27
00:01:23,210 --> 00:01:26,660
one main variable, X,
Y, count, color, etc.

28
00:01:26,660 --> 00:01:31,420
And they monitor one or two results
like level completion or profitability,

29
00:01:31,420 --> 00:01:32,440
things like that.

30
00:01:32,440 --> 00:01:35,350
Our game versions are distributed
amongst our players.

31
00:01:35,350 --> 00:01:39,340
And so there are usually only
2-4 versions tested at one time.

32
00:01:39,340 --> 00:01:41,940
So for
our game we want to change level 3.

33
00:01:41,940 --> 00:01:46,120
Let's create three different test cases
where we change the number of enemies

34
00:01:46,120 --> 00:01:49,180
and see how many more players
will complete the level.

35
00:01:49,180 --> 00:01:53,240
You also want to test your original
version and comparison to the new ones.

36
00:01:53,240 --> 00:01:55,360
So we have an A, original version.

37
00:01:56,640 --> 00:01:59,861
A version B with 10% fewer enemies.

38
00:01:59,861 --> 00:02:03,146
And a version C with 20% fewer enemies.

39
00:02:03,146 --> 00:02:06,333
The next step is to distribute
these versions to our players, so

40
00:02:06,333 --> 00:02:09,570
that about a third of our
players play each version.

41
00:02:09,570 --> 00:02:11,490
This is usually done by percentage.

42
00:02:11,490 --> 00:02:17,080
So, we have 33%, 33% and 34%,
which adds up to a total of 100%,

43
00:02:17,080 --> 00:02:20,400
distributed to versions A, B, and C.

44
00:02:20,400 --> 00:02:23,870
Then we get our results and
see how many players complete the level.

45
00:02:23,870 --> 00:02:27,675
We see that only 20% of our group
A players completed the level.

46
00:02:27,675 --> 00:02:34,260
80% of group B completed level 3, and
70% completed level 3 for group C.

47
00:02:34,260 --> 00:02:38,420
So both B and
C seem like a lot better options than A.

48
00:02:38,420 --> 00:02:43,261
And maybe the reason that C isn't as
high as B is because it's too easy, so

49
00:02:43,261 --> 00:02:45,067
people get bored playing.

50
00:02:45,067 --> 00:02:49,920
Either way, A/B testing lets us know for
sure that version B is our best option.
