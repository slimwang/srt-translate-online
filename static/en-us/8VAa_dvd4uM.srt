1
00:00:00,140 --> 00:00:02,930
Good job completing lesson two stage two.

2
00:00:02,930 --> 00:00:07,570
Now, we're going to modify the distributed sentence count topology that you

3
00:00:07,570 --> 00:00:12,230
just created, by creating a new sentence word count topology.

4
00:00:12,230 --> 00:00:15,550
What we're going to do is count the words in the sentences,

5
00:00:15,550 --> 00:00:16,930
that you're now inventing.

6
00:00:16,930 --> 00:00:20,460
In part one, navigate to lesson two stage three.

7
00:00:20,460 --> 00:00:23,830
And duplicate the sentence count topology, and

8
00:00:23,830 --> 00:00:27,000
call it the sentence word count topology.

9
00:00:27,000 --> 00:00:30,130
Following the Java convention, you'll need to update the required class and

10
00:00:30,130 --> 00:00:32,740
constructor names again to match the file name.

11
00:00:32,740 --> 00:00:33,740
In part two,

12
00:00:33,740 --> 00:00:38,820
implement a new bolt SplitSentenceBolt that extends the base ritual.

13
00:00:38,820 --> 00:00:41,570
Your SplitSentenceBolt takes in a tupal,

14
00:00:41,570 --> 00:00:45,850
with a sentence at position zero, extracts the sentence.

15
00:00:45,850 --> 00:00:50,720
And splits the sentence into words, and emits the words in tuple.

16
00:00:50,720 --> 00:00:52,095
My suggestion is to copy and

17
00:00:52,095 --> 00:00:56,840
paste a similar bolt such as the count bolt, update the class name, and

18
00:00:56,840 --> 00:01:01,500
implement the prepare, execute, and declare output field method.

19
00:01:01,500 --> 00:01:04,379
To clear the new field, sentence dash word.

20
00:01:04,379 --> 00:01:09,470
I also list a few helpful Syntax hints in the written instructions.

21
00:01:09,470 --> 00:01:13,340
In part three, scroll down again to your topology builder, and

22
00:01:13,340 --> 00:01:16,380
update the topology to make a random sentence.

23
00:01:16,380 --> 00:01:19,820
Split the sentence using your new Split Sentence Bolt and

24
00:01:19,820 --> 00:01:22,110
send the output to with the Count Bolt.

25
00:01:22,110 --> 00:01:24,270
One implementation question to consider.

26
00:01:24,270 --> 00:01:26,080
What stream method should you use,

27
00:01:26,080 --> 00:01:29,320
to connect a sentence to the split sentence bolt?

28
00:01:29,320 --> 00:01:32,990
Do sentences need to be sorted by field in order to be split?

29
00:01:32,990 --> 00:01:36,100
Finally, in part four build, and run your new topology.

30
00:01:36,100 --> 00:01:38,920
Once that's running correctly notice that the report bolt is already

31
00:01:38,920 --> 00:01:40,310
connect to the count.

32
00:01:40,310 --> 00:01:43,397
Again personalize your random sentences, take a screenshot, or

33
00:01:43,397 --> 00:01:46,380
screencast in video, and upload it to the forum.

34
00:01:46,380 --> 00:01:48,390
And comment onto other posts.

35
00:01:48,390 --> 00:01:49,870
Finally, your sentence,

36
00:01:49,870 --> 00:01:53,660
word count topology should now match less than two stage four.

37
00:01:53,660 --> 00:01:57,940
When you're on your final storm solution, you'll see that the random

38
00:01:57,940 --> 00:02:02,580
sentences are going to be split, and the words are going to be counted.

39
00:02:02,580 --> 00:02:05,720
So now, the words instead of the sentences are going to show up in

40
00:02:05,720 --> 00:02:07,240
our visualization.

41
00:02:07,240 --> 00:02:11,050
As the topology is running, you see that word seven grows,

42
00:02:11,050 --> 00:02:15,380
because my sentences have two sentences with the word seven, four score and

43
00:02:15,380 --> 00:02:18,950
seven years ago and Snow White and the Seven Dwarfs.

44
00:02:18,950 --> 00:02:20,060
And good luck with the assignment!
