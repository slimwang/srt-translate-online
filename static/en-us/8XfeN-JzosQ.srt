1
00:00:00,710 --> 00:00:02,920
Let's go ahead and
create a new Android project and

2
00:00:02,920 --> 00:00:04,540
then have a look at
the default build scripts.

3
00:00:06,570 --> 00:00:08,650
We'll give our app a domain and
a location.

4
00:00:08,650 --> 00:00:14,460
We'll set a main SDK and we'll add
a blank activity with a fragment.

5
00:00:14,460 --> 00:00:15,810
We'll leave the defaults for
the fragment.

6
00:00:17,820 --> 00:00:20,400
So here we are in our
newly created Android app.

7
00:00:20,400 --> 00:00:23,730
If we go ahead and
haul out the ancient test device and

8
00:00:23,730 --> 00:00:25,860
then run our application,
let's see what happens.

9
00:00:27,260 --> 00:00:29,400
All right sweet,
looks like we're up and running.

10
00:00:29,400 --> 00:00:33,090
So let's dive into what gradle
configuration is present by default.

11
00:00:33,090 --> 00:00:36,720
Again the project pain has defaulted
to this Android centric setup.

12
00:00:36,720 --> 00:00:39,850
But I find this kind of confusing so
I'm going to switch back to the project

13
00:00:39,850 --> 00:00:41,680
to just show the straight
up project layout.

14
00:00:43,210 --> 00:00:45,807
So here's our project and
here's our build.gradle file.

15
00:00:46,900 --> 00:00:50,370
There's a whole lot going on in
the default Android build scripts.

16
00:00:50,370 --> 00:00:53,280
For starters this is actually
a multi project build.

17
00:00:53,280 --> 00:00:56,130
An Android app itself as a sub project.

18
00:00:56,130 --> 00:00:59,450
We'll talk all about multi
project builds in lesson four but

19
00:00:59,450 --> 00:01:03,150
it set up this way so it's easy to add
other sub projects that we want to

20
00:01:03,150 --> 00:01:07,260
build together with the app like
libraries or even a backend.

21
00:01:07,260 --> 00:01:09,800
There are two things to notice
in this route build script.

22
00:01:09,800 --> 00:01:12,450
First we declare a build
script dependency

23
00:01:12,450 --> 00:01:17,260
on com.android.tools.build:gradle:1.2.2.

24
00:01:17,260 --> 00:01:20,080
There are two things to
note in this build script.

25
00:01:20,080 --> 00:01:24,210
First, we declare a build script
dependency on this artifact coordinate.

26
00:01:24,210 --> 00:01:27,040
This is where the Android plug in for
where gradle lives.

27
00:01:27,040 --> 00:01:30,360
Second, and we'll talk about this
part of the gradle API soon.

28
00:01:30,360 --> 00:01:33,120
But this block adds the jcenter
repository to every sub

29
00:01:33,120 --> 00:01:34,640
project of this build.

30
00:01:34,640 --> 00:01:37,410
That means every sub project can
just declare dependencies and

31
00:01:37,410 --> 00:01:40,240
they'll automatically be
retrieved from jcenter.

32
00:01:40,240 --> 00:01:42,120
Now let's take a look at
the build scripts specifically for

33
00:01:42,120 --> 00:01:42,950
the android build.

34
00:01:42,950 --> 00:01:44,350
Which is in the app directory.

35
00:01:46,060 --> 00:01:48,200
So here's the build script for
the Android app.

36
00:01:48,200 --> 00:01:51,285
Note that first applies the Android
plugin which it fetched from jcenter.

37
00:01:52,360 --> 00:01:56,210
All configuration happens in
the Android configuration block.

38
00:01:56,210 --> 00:02:00,190
All that's absolutely required are the
first two lines defining the SDK version

39
00:02:00,190 --> 00:02:01,165
and the buildtoolsversion.

40
00:02:02,420 --> 00:02:06,620
The default configured block, configures
attributes of the Android manifest.

41
00:02:06,620 --> 00:02:09,520
We'll talk about the build
typeâ€™s block momentarily.

42
00:02:09,520 --> 00:02:13,038
Finally the dependencies block
works just like java dependencies.

43
00:02:13,038 --> 00:02:16,500
This declares the compile time
dependencies on every jar in the libs

44
00:02:16,500 --> 00:02:18,670
directory and
on the Android support library.
