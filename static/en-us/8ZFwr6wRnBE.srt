1
00:00:00,920 --> 00:00:04,440
All right, you're done. 
Let's go look at the solution.

2
00:00:04,770 --> 00:00:06,810
Where we left off last time,
as you can see,

3
00:00:06,810 --> 00:00:10,536
we have two empty queries
for LOCATION_ID and LOCATION.

4
00:00:11,156 --> 00:00:14,410
These two queries look a lot like
the queries we have for Weather.

5
00:00:15,130 --> 00:00:16,391
For LOCATION_ID,

6
00:00:16,391 --> 00:00:19,370
this looks almost exactly
like what we do for Weather,

7
00:00:19,370 --> 00:00:21,690
except we use a hard-coded query

8
00:00:21,690 --> 00:00:24,620
rather than relying on the one 
passed into the function.

9
00:00:24,620 --> 00:00:28,210
Since we know that this is always
going to be a long integer value,

10
00:00:28,210 --> 00:00:31,429
it is easy to just build the value
into the query string.

11
00:00:31,879 --> 00:00:33,926
LOCATION, on the other hand,

12
00:00:33,926 --> 00:00:36,873
looks almost exactly 
like the Weather query.

13
00:00:36,873 --> 00:00:39,580
We just pass all the parameters
into the database.

14
00:00:39,580 --> 00:00:42,540
You didn't think you're going 
to get away without testing, did you?

15
00:00:42,540 --> 00:00:44,980
Don't worry, it's really easy
to add this test.

16
00:00:44,980 --> 00:00:47,810
It turns out that calling 
our function within the provider

17
00:00:47,810 --> 00:00:51,360
works almost exactly the same 
as the way we did the weather table.

18
00:00:51,570 --> 00:00:54,841
All we have to do is replace 
WeatherEntry.CONTENT_URI

19
00:00:54,841 --> 00:00:57,645
with LocationEntry.CONTENT_URI.

20
00:00:58,665 --> 00:01:02,420
And of course we still have to delete 
the two columns that we can't support.

21
00:01:02,420 --> 00:01:03,873
Now that will actually work.

22
00:01:03,873 --> 00:01:05,786
So, let's test that to make sure that works.

23
00:01:06,566 --> 00:01:09,270
And our test passed, as expected.

24
00:01:09,270 --> 00:01:10,490
The interesting thing about this test

25
00:01:10,490 --> 00:01:12,800
is that it's just only testing 
the first query

26
00:01:12,800 --> 00:01:16,070
and it just happens to work because 
we deleted the database before the start.

27
00:01:16,070 --> 00:01:19,160
It'd be much more interesting to query
for the row that we just inserted.

28
00:01:19,160 --> 00:01:21,030
And this will test the other query.

29
00:01:21,550 --> 00:01:22,970
Now, let's run the test again.

30
00:01:23,280 --> 00:01:24,833
And those also passed.

31
00:01:24,833 --> 00:01:28,246
So, we have some of our queries within
our content provider functioning.

32
00:01:28,246 --> 00:01:29,360
But unfortunately,

33
00:01:29,360 --> 00:01:32,280
we still have to do some of the 
more complicated things in the provider.

34
00:01:32,280 --> 00:01:33,680
Let's talk about joins.
