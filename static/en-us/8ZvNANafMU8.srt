1
00:00:00,390 --> 00:00:02,310
An image template is useful for

2
00:00:02,310 --> 00:00:05,650
detecting things that do not
vary in their appearance much.

3
00:00:05,650 --> 00:00:08,250
For instance, icons or
emojis on the screen.

4
00:00:09,349 --> 00:00:13,529
But for most real world objects that do
appear in different forms, orientation,

5
00:00:13,529 --> 00:00:16,449
sizes, this technique
doesn't work quite well.

6
00:00:17,449 --> 00:00:22,283
In template matching, you depend on raw
color values laid out in a specific

7
00:00:22,283 --> 00:00:25,810
order, and that can vary a lot,
so you need to find some

8
00:00:25,809 --> 00:00:29,748
transformations that are robust
to changes in appearance.

9
00:00:29,748 --> 00:00:34,850
Once a transform is to compute the
histogram of color values in an image.

10
00:00:34,850 --> 00:00:40,012
When you compare the histogram of
a known object with regions of a test

11
00:00:40,012 --> 00:00:46,065
image, locations with similar color
distributions will reveal a close match.

12
00:00:46,066 --> 00:00:49,753
Here, we have removed our
dependents on structure, that is,

13
00:00:49,753 --> 00:00:53,451
we are no longer sensitive to
a perfect arrangement of pixels.

14
00:00:53,451 --> 00:00:57,115
Therefore, objects that appear in
slightly different aspects and

15
00:00:57,115 --> 00:00:59,760
orientations will still be matched.

16
00:00:59,759 --> 00:01:00,530
Variations and

17
00:01:00,530 --> 00:01:05,000
image size can also be accommodated
by normalizing the histograms.

18
00:01:05,000 --> 00:01:09,129
However, note that you are now solely
relying on the distribution of color

19
00:01:09,129 --> 00:01:12,280
values which might match
some unwanted regions.

