1
00:00:00,550 --> 00:00:03,910
Now, once you've setup the layout of the
app, it's time to take a moment to talk

2
00:00:03,910 --> 00:00:06,300
about what's actually
happening in the final app.

3
00:00:06,300 --> 00:00:08,430
If you remember,
we have the map on the screen,

4
00:00:08,430 --> 00:00:11,710
which is somehow modified by
pressing the buttons at the top.

5
00:00:11,710 --> 00:00:14,250
Now, thus far, we've learned
how to make a map fragment and

6
00:00:14,250 --> 00:00:16,430
change that through user activity.

7
00:00:16,430 --> 00:00:19,840
But we haven't learned how to create
a Google Map object, which is the thing

8
00:00:19,840 --> 00:00:24,000
that within code will be able to change
the contents of the map fragment.

9
00:00:24,000 --> 00:00:26,110
So to do this there's
a few things that we need.

10
00:00:26,110 --> 00:00:30,120
First of all, we'll need to
implement the onMapReadyCallback.

11
00:00:30,120 --> 00:00:34,260
Now we'll do that by modifying the class
declaration for our main activity to

12
00:00:34,260 --> 00:00:38,444
have this, so here I have my onMapReady
which is just setting mapReady,

13
00:00:38,444 --> 00:00:42,870
a boolean ,to true, and then this
local variable called m_map to map.

14
00:00:42,870 --> 00:00:46,729
And you notice here it passes back
a Google Map, so my m_map, of course,

15
00:00:46,729 --> 00:00:48,617
is a local instance of a Google Map.

16
00:00:48,617 --> 00:00:51,938
And you can see I've defined it
at the top of my activity here.

17
00:00:51,938 --> 00:00:55,580
And of course the activity itself has
to implement the onMapReady callback.

18
00:00:56,860 --> 00:01:00,180
So, within our onMapReady,
I'm just saying the mapReady is true.

19
00:01:00,180 --> 00:01:04,290
I'm loading my local instance of a map
with the one that was sent back to me.

20
00:01:04,290 --> 00:01:07,970
I create a new lat-long, which I'm
calling New York, with the latitude and

21
00:01:07,970 --> 00:01:10,520
longitude coordinates
we used earlier on.

22
00:01:10,520 --> 00:01:14,410
Then I'm setting the camera position
using a camera position builder.

23
00:01:14,410 --> 00:01:16,990
I'm targeting at New York, and
I'm setting the zoom to 14,

24
00:01:16,990 --> 00:01:20,380
so it'll be a little bit further
out than the one we saw earlier.

25
00:01:20,380 --> 00:01:23,190
And then on m map itself,
now the map object,

26
00:01:23,190 --> 00:01:27,880
I can call the move camera on that to
set its position to be this target.

27
00:01:27,880 --> 00:01:30,040
As you can see,
it's pretty straight forward.

28
00:01:30,040 --> 00:01:34,020
And you can do other things like angling
and zooming to different levels and

29
00:01:34,020 --> 00:01:37,310
different types of views that you want
on the camera position itself, but

30
00:01:37,310 --> 00:01:40,720
here I've created a very
basic camera position.

31
00:01:40,720 --> 00:01:43,970
So that's all that you really need
to do to get your map set up for

32
00:01:43,970 --> 00:01:47,110
working within an application and

33
00:01:47,110 --> 00:01:50,920
having a handle on a map object
that you can then program.

34
00:01:50,920 --> 00:01:54,190
And I'll show you in the next
step how we then program that

35
00:01:54,190 --> 00:01:56,470
to allow to have satellite or
height reviews.
