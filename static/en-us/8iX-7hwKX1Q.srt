1
00:00:00,140 --> 00:00:03,340
Okay, so we just looked at using a scalar value in our query

2
00:00:03,340 --> 00:00:07,780
document for an array value field. Let's look at another way we can

3
00:00:07,780 --> 00:00:12,440
query arrays in MongoDB. In this case we're going to introduce the IN

4
00:00:12,440 --> 00:00:15,098
operator. Let's take a look at an example, and then we'll talk about it.

5
00:00:15,098 --> 00:00:16,604
[BLANK_AUDIO]

6
00:00:16,604 --> 00:00:19,076
Okay, so what happened there? IN allows us to specify an

7
00:00:19,076 --> 00:00:23,380
array of values. In this query then, we'll retrieve all documents

8
00:00:23,380 --> 00:00:26,580
for which the model years field contains any of the values

9
00:00:26,580 --> 00:00:29,390
in this array here. We can use IN even if the

10
00:00:29,390 --> 00:00:32,980
field we're querying against is not an array valued field. Thus

11
00:00:32,980 --> 00:00:36,240
giving us a number of optional values that will match documents

12
00:00:36,240 --> 00:00:38,440
in our result set. So we can see as I add

13
00:00:38,440 --> 00:00:41,550
additional values to this array of options, that our count gets

14
00:00:41,550 --> 00:00:43,820
larger and larger. Because we have a larger

15
00:00:43,820 --> 00:00:45,780
and larger target that we can hit. K,

16
00:00:45,780 --> 00:00:49,840
so let's take a look at the actual documents that are retrieved her. K, and if

17
00:00:49,840 --> 00:00:55,710
we scroll up, we can see that in fact this document matches, as do the rest.

18
00:00:55,710 --> 00:00:57,980
All of them containing at least one of

19
00:00:57,980 --> 00:01:00,510
the values in their model year that we specified.
