1
00:00:00,730 --> 00:00:03,710
It's time to look at
updating our forecast view.

2
00:00:03,710 --> 00:00:06,718
A quick glance at the key lines
gives me a sense of deja vu.

3
00:00:06,718 --> 00:00:09,679
We've certainly seen
these metrics before.

4
00:00:09,679 --> 00:00:14,049
Furthermore, the entire Today view is
nearly identical in layout to the top

5
00:00:14,049 --> 00:00:18,689
half of the detail view, except that it
doesn't have the space views at center,

6
00:00:18,689 --> 00:00:20,450
our detail view.

7
00:00:20,450 --> 00:00:25,240
The extra vertical space in the app bar
is the same height as our list items.

8
00:00:25,240 --> 00:00:29,800
Because we're somewhat space
constrained, we're using a minimal 8 dp

9
00:00:29,800 --> 00:00:34,580
of spacing for the area between high and
low temperatures in the daily forecast.

10
00:00:34,580 --> 00:00:37,679
And of course, we see that
the Today view casts a shadow.

11
00:00:38,770 --> 00:00:41,670
The shadow helps create the illusion
that the screen is made up of

12
00:00:41,670 --> 00:00:42,640
a physical material.

13
00:00:43,880 --> 00:00:45,470
But how do we cast this shadow?

14
00:00:45,470 --> 00:00:47,190
To make this easier for developers,

15
00:00:47,190 --> 00:00:52,305
Android L adds a new parameter into
our layout language, elevation.

16
00:00:52,305 --> 00:00:55,693
Paraphrasing from our Material guide,
elevation is the aspect of

17
00:00:55,693 --> 00:00:59,926
the Material Design language that helps
users understand the relative importance

18
00:00:59,926 --> 00:01:03,089
of each element and focus their
attention to the task at hand.

19
00:01:03,089 --> 00:01:07,830
It combines the familiar and physical
materials with magical properties

20
00:01:07,830 --> 00:01:11,752
that designers can leverage
to create delightful moments.

21
00:01:11,752 --> 00:01:14,490
The elevation of a view,
represented by the z property,

22
00:01:14,490 --> 00:01:17,852
determines the visual
appearance of its shadow.

23
00:01:17,852 --> 00:01:22,080
Views with higher z values cast larger,
softer shadows.

24
00:01:22,080 --> 00:01:26,060
Views with higher z values also
occlude views with lower z values.

25
00:01:26,060 --> 00:01:29,840
However, the z value of view
does not affect the view's size.

26
00:01:31,090 --> 00:01:34,160
Elevation is used for
the static state of a view.

27
00:01:34,160 --> 00:01:38,170
Translation z is used to create
animation such as this one,

28
00:01:38,170 --> 00:01:42,030
where widgets temporarily rise above the
new plane when performing some action.

29
00:01:43,040 --> 00:01:45,700
Note that this video
represents Material's ideals

30
00:01:45,700 --> 00:01:48,600
rather than the reality of
the Android implementation.

31
00:01:48,600 --> 00:01:52,490
Elevation animations are typically used
to help signify action in response to

32
00:01:52,490 --> 00:01:53,930
user touch.

33
00:01:53,930 --> 00:01:56,971
Setting the elevation parameter
on a view group will cause

34
00:01:56,971 --> 00:01:59,260
it to cast a shadow on other views.

35
00:01:59,260 --> 00:02:03,370
You have to be a bit careful as it
also changes the way views clip.

36
00:02:03,370 --> 00:02:06,305
Higher elevation views
will occlude other views,

37
00:02:06,305 --> 00:02:08,633
even if they appear first in the layout.

38
00:02:08,633 --> 00:02:11,494
The appbar_elevation
dimension is four dp.

39
00:02:11,494 --> 00:02:15,659
We can add this to our dimensions or
just include the Android design library,

40
00:02:15,659 --> 00:02:17,950
which defines this dimension.

41
00:02:17,950 --> 00:02:20,410
To make the changes to our
portrait forecast view,

42
00:02:20,410 --> 00:02:22,890
we need to make changes in three places.

43
00:02:22,890 --> 00:02:25,990
First, we'll update
the toolbar section to create

44
00:02:25,990 --> 00:02:29,410
the app bar from the design
in activity_main.xml.

45
00:02:29,410 --> 00:02:34,120
We'll make changes to the Today view
in the list_item_forecast_today layout.

46
00:02:34,120 --> 00:02:36,960
And we'll modify the rest of
the forecast list items in

47
00:02:36,960 --> 00:02:38,730
the list_item_forecast layout.

48
00:02:38,730 --> 00:02:42,360
Before you start coding, you'll grab
another code update, which includes

49
00:02:42,360 --> 00:02:47,270
correctly sized images, updated list
selectors, and some useful dimensions.

50
00:02:47,270 --> 00:02:49,780
Because we have network
loadable image sets,

51
00:02:49,780 --> 00:02:53,410
you want to constrain the width of
our icon images in the forecast list

52
00:02:53,410 --> 00:02:56,820
to 40 dps in the list icon
dimension we give to you.

53
00:02:56,820 --> 00:03:00,690
You can use the touch_selector_white
to replace the Today touch selector.

54
00:03:00,690 --> 00:03:07,102
The large numbers are 32 dp,
while the text view is 49 dp wide.

55
00:03:07,102 --> 00:03:11,918
I'm intentionally using dp instead of sp
here because I don't want these numbers

56
00:03:11,918 --> 00:03:15,217
to change size when the system
font is set to large size.

57
00:03:15,217 --> 00:03:19,895
I'm intentionally using dp instead of sp
here because I don't want these numbers

58
00:03:19,895 --> 00:03:23,290
to change size when the system
font is set to large size.

59
00:03:23,290 --> 00:03:26,410
We're pretty tight on space
on narrow devices already.

60
00:03:26,410 --> 00:03:28,250
The app bar is pretty simple.

61
00:03:28,250 --> 00:03:31,390
We take advantage of the fact that the
Toolbar will center its children with

62
00:03:31,390 --> 00:03:35,940
respect to the entire layout if we use
layout gravity equals center horizontal.

63
00:03:35,940 --> 00:03:39,895
Therefore, we include the Imageview
inside of the toolbar with a height of

64
00:03:39,895 --> 00:03:43,224
listPreferredItemHeight and
a marginTop of actionBarSize,

65
00:03:43,224 --> 00:03:46,820
while having wrap_content for
width to let the Toolbar center it.
