1
00:00:00,110 --> 00:00:02,090
One of the most powerful features of MongoDB is the ability

2
00:00:02,090 --> 00:00:06,780
to query against fields that are not simply scalar values such as

3
00:00:06,780 --> 00:00:10,140
strings or integers. But those that are themselves structured data such

4
00:00:10,140 --> 00:00:13,190
as a arrays. As we know, MongoBD can have rate values and

5
00:00:13,190 --> 00:00:16,079
you see a couple of examples, right here on the screen.

6
00:00:16,079 --> 00:00:19,010
We can query within arrays with a couple of different ways. Now

7
00:00:19,010 --> 00:00:21,880
I think the best example from the Autos collection actually has

8
00:00:21,880 --> 00:00:25,140
to do with model years. So let's take a look at that.

9
00:00:25,140 --> 00:00:28,030
Now the simplest example is to provide a single value

10
00:00:28,030 --> 00:00:30,910
for model years in our query document. Let's see what happens.

11
00:00:33,090 --> 00:00:34,470
So in this case we can see that

12
00:00:34,470 --> 00:00:37,170
our model years here, for this particular vehicle are

13
00:00:37,170 --> 00:00:42,610
1975 through 1980. And we queried with just

14
00:00:42,610 --> 00:00:45,170
1980. Even though the value for model years fields

15
00:00:45,170 --> 00:00:48,047
is an array, this value will match. MongoDB

16
00:00:48,047 --> 00:00:51,280
searches inside array value fields, for individual values to

17
00:00:51,280 --> 00:00:54,860
match. And by building an index on a fields

18
00:00:54,860 --> 00:00:57,100
such as this, those queries will be very efficient.
