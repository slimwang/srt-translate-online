1
00:00:00,000 --> 00:00:03,000
So the right answer is (n log n). Why is that?

2
00:00:03,000 --> 00:00:07,000
So here's the n = 4 hypercubed square

3
00:00:07,000 --> 00:00:11,000
and recall that the bit patterns have 2 bits in them,

4
00:00:11,000 --> 00:00:14,000
and, in general, the number of bits in the label

5
00:00:14,000 --> 00:00:17,000
of a node and then hypercubed with n edges is log n--

6
00:00:17,000 --> 00:00:19,000
log base 2 of n, specifically.

7
00:00:19,000 --> 00:00:21,000
So that means the degree of each node,

8
00:00:21,000 --> 00:00:25,000
in this particular graph--it's 2--but, in general, the degree is log n.

9
00:00:25,000 --> 00:00:27,000
So that means each of the nodes in the graph

10
00:00:27,000 --> 00:00:29,000
has log n edges coming out of it,

11
00:00:29,000 --> 00:00:34,000
so we can think of n times the log of n as the number of edges,

12
00:00:34,000 --> 00:00:36,000
but we have to be careful, because we double counted again.

13
00:00:36,000 --> 00:00:38,000
This node is connected to this one,

14
00:00:38,000 --> 00:00:42,000
but this one is also connected back to this one by the same bit pattern.

15
00:00:42,000 --> 00:00:44,000
Exact answer is 1/2 n log n, but that's okay.

16
00:00:44,000 --> 00:00:46,000
In Bit Theta land, we can ignore the 1/2,

17
00:00:46,000 --> 00:00:48,000
and we have Bit Theta and then log n.
