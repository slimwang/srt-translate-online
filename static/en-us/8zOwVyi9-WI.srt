1
00:00:00,340 --> 00:00:03,570
Going back to our Tsunami app code,
let's observe how the string builder is

2
00:00:03,570 --> 00:00:06,060
being used to build up
the JSON string response.

3
00:00:06,060 --> 00:00:07,959
So I'm going to go take a look
at the readFromStream method.

4
00:00:07,959 --> 00:00:10,701
In the readFromStream method,
we have an input stream, and

5
00:00:10,701 --> 00:00:14,210
we want to return a string containing
the contents of that stream.

6
00:00:14,210 --> 00:00:17,560
So we create a new string builder and
we can start appending to it

7
00:00:17,560 --> 00:00:20,440
all the lines of text available
in our buffered reader.

8
00:00:20,440 --> 00:00:22,020
First, we set up our builder and

9
00:00:22,020 --> 00:00:25,520
our reader, then we'll ask the buffered
reader for a line of text.

10
00:00:25,520 --> 00:00:29,030
While the line isn't null, we'll append
that line to the string buffer and

11
00:00:29,030 --> 00:00:29,970
read another line.

12
00:00:29,970 --> 00:00:33,115
Eventually the buffered reader will run
out of lines and we'll use the toString

13
00:00:33,115 --> 00:00:36,405
method to get and return the final
output from the string builder.

14
00:00:36,405 --> 00:00:39,245
So as you can see, using the string
builder to gradually build up

15
00:00:39,245 --> 00:00:42,715
the response string, is more efficient
than continually creating a new string

16
00:00:42,715 --> 00:00:46,035
object each time we have more
content to add to the response text.
