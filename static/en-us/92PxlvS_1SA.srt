1
00:00:00,397 --> 00:00:03,393
So let's state the specific problem that we want to solve today,

2
00:00:03,393 --> 00:00:05,232
and then we'll look at how we might solve it.

3
00:00:05,232 --> 00:00:08,309
We want to start at a specific node, and we'll call it s.

4
00:00:08,309 --> 00:00:11,414
And then visit every node in the graph and record its distance

5
00:00:11,414 --> 00:00:13,986
from s in terms of graph hops.

6
00:00:13,986 --> 00:00:15,895
We call this quantity its depth.

7
00:00:15,895 --> 00:00:18,564
So any neighbor of s has depth 1.

8
00:00:18,564 --> 00:00:20,355
Any neighbor of those neighbors

9
00:00:20,355 --> 00:00:22,702
that we haven't visited yet has depth 2.

10
00:00:22,702 --> 00:00:27,736
And in general, a neighbor of a node with depth d that hasn't already been visited has depth d plus 1.

11
00:00:27,736 --> 00:00:32,404
I'm not sure how familiar our international audience is with the actor Kevin Bacon,

12
00:00:32,404 --> 00:00:37,713
but the Bacon number of a particular actor is the number of degrees of separation from Kevin Bacon.

13
00:00:37,713 --> 00:00:41,620
So if I had acted in a movie a movie with say, John Belushi,

14
00:00:41,620 --> 00:00:43,730
my Bacon number would be 2,

15
00:00:43,730 --> 00:00:46,089
because John Belushi's Bacon number is 1,

16
00:00:46,089 --> 00:00:49,655
because he appeared with Kevin Bacon in the outstanding film, Animal House.

17
00:00:49,655 --> 00:00:52,945
We could generate the Bacon numbers for all movie actors

18
00:00:52,945 --> 00:00:55,894
from a graph that records who appeared in movies together,

19
00:00:55,894 --> 00:00:59,937
and we could do this with a breadth-first traversal that begins at Kevin Bacon

20
00:00:59,937 --> 00:01:03,937
and calculates depth for each vertex for actor in the graph.
