1
00:00:00,170 --> 00:00:05,280
So if you add the timer.timedFunction
decorator to the sumUp function,

2
00:00:05,280 --> 00:00:10,320
it's the same as if we had reassigned
sumUp to be this wrapped up version.

3
00:00:10,320 --> 00:00:13,860
And when the code called
the sumUp function afterwards,

4
00:00:13,860 --> 00:00:16,970
it returned the sum of
the numbers from 0 to 10 million.

5
00:00:16,970 --> 00:00:19,640
But it also printed out how
long it took to add up.

6
00:00:19,640 --> 00:00:22,440
That timing feature was
added by this decorator.

7
00:00:22,440 --> 00:00:25,830
The details of how decorators work,
are rooted in functional programming.

8
00:00:25,830 --> 00:00:27,720
I've put a couple of links
in the instructor notes,

9
00:00:27,720 --> 00:00:29,160
that go into much more depth.

10
00:00:29,160 --> 00:00:32,630
And just like other functions,
decorators can appear in Python modules.

11
00:00:32,630 --> 00:00:34,890
You'll be seeing an example
right up ahead in this course.
