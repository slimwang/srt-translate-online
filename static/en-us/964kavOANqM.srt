1
00:00:00,270 --> 00:00:02,190
So now let's take a look at the code that makes up

2
00:00:02,190 --> 00:00:06,170
the home page for this app. So here's the home page. It

3
00:00:06,170 --> 00:00:08,390
has a couple of buttons, it has the field where you can

4
00:00:08,390 --> 00:00:12,650
enter your name. You can click the buttons and you get the greeting,

5
00:00:12,650 --> 00:00:15,700
and in this case, the greetings are shown just inside an alert

6
00:00:15,700 --> 00:00:18,830
box. Now one thing I want to emphasize is that you can

7
00:00:18,830 --> 00:00:22,430
have the Endpoint APIs and you can use the APIs Explorer even

8
00:00:22,430 --> 00:00:25,210
if your application doesn't have a front end, if it doesn't have a

9
00:00:25,210 --> 00:00:27,700
webpage or anything. If you're just running complete

10
00:00:27,700 --> 00:00:30,650
back end service, you can use API's explorer to

11
00:00:30,650 --> 00:00:34,330
test your API's, but now, onto the front

12
00:00:34,330 --> 00:00:38,110
end. So let's look at the code for index.html.

13
00:00:38,110 --> 00:00:39,885
So first of all, we include the file

14
00:00:39,885 --> 00:00:43,760
hello.js, which includes the JavaScript functions that our web

15
00:00:43,760 --> 00:00:45,500
app's going to use in its front end,

16
00:00:46,690 --> 00:00:50,290
and then, and this is really important, we include

17
00:00:50,290 --> 00:00:55,360
this file, apis.google.com/js/client.js.

18
00:00:55,360 --> 00:01:00,910
This is a file that includes a JavaScript client library. If you don't include

19
00:01:00,910 --> 00:01:02,360
this file, you won't be able to use

20
00:01:02,360 --> 00:01:05,260
end points in your front end. The client libraries

21
00:01:05,260 --> 00:01:07,150
provide the glue that lets your app use

22
00:01:07,150 --> 00:01:09,650
end points. So you will also notice so after

23
00:01:09,650 --> 00:01:12,520
we bring it in when onload successful we

24
00:01:12,520 --> 00:01:15,480
call the init function and this init function actually

25
00:01:15,480 --> 00:01:19,420
defined in hello.js. We'll look at that just a minute.

26
00:01:19,420 --> 00:01:21,760
The rest of this page is not so exciting, we

27
00:01:21,760 --> 00:01:23,760
have a heading, then we have to fill for the

28
00:01:23,760 --> 00:01:27,230
buttons, so this one here is the input_greet_generically and this

29
00:01:27,230 --> 00:01:31,340
one here is input_greet_by_name. We also have the field where

30
00:01:31,340 --> 00:01:33,365
we let the user enter their name, and that's the

31
00:01:33,365 --> 00:01:37,370
name_field, and that's pretty much all this file has. One

32
00:01:37,370 --> 00:01:41,190
thing to note, though, is the onclick of the button

33
00:01:41,190 --> 00:01:44,530
doesn't have a real value. This is actually a

34
00:01:44,530 --> 00:01:47,190
fake value. So when we load the page the

35
00:01:47,190 --> 00:01:52,500
first time, these buttons. Don't have any on-click action

36
00:01:52,500 --> 00:01:54,310
set, and the reason for that is when these

37
00:01:54,310 --> 00:01:56,380
actions are loaded, they're going to need to use

38
00:01:56,380 --> 00:02:00,630
endpoints. They're going to use your endpoint functions, and

39
00:02:00,630 --> 00:02:03,490
your endpoint functions can't be loaded 'til after the

40
00:02:03,490 --> 00:02:06,190
google client library is loaded. So you want to

41
00:02:06,190 --> 00:02:09,150
load the google client library first, and then

42
00:02:09,150 --> 00:02:12,530
you need to initialize some things, and then you

43
00:02:12,530 --> 00:02:15,430
can set the action field buttons. Okay, let's

44
00:02:15,430 --> 00:02:18,480
take a look at hello.js. So up here these

45
00:02:18,480 --> 00:02:21,590
are just some good resources to read, after

46
00:02:21,590 --> 00:02:24,570
the Google Javascript client library has loaded, then this

47
00:02:24,570 --> 00:02:27,200
init function is going to be called, and really all

48
00:02:27,200 --> 00:02:31,000
these does is it loads your hello world end

49
00:02:31,000 --> 00:02:36,380
points APIs. See here this gapi.client.load? This

50
00:02:36,380 --> 00:02:39,370
is calling functions in the Google JavaScript

51
00:02:39,370 --> 00:02:42,810
Client Library to load your endpoint function.

52
00:02:42,810 --> 00:02:45,130
So when you call gapi.client to load your

53
00:02:45,130 --> 00:02:47,860
endpoint functions, you specify the endpoint functions

54
00:02:47,860 --> 00:02:50,760
to load, specify the version, you specify

55
00:02:50,760 --> 00:02:53,900
a callback to call. After your endpoint

56
00:02:53,900 --> 00:02:56,210
functions have loaded, and then you must specify

57
00:02:56,210 --> 00:02:58,770
the rootpath, which is the path to

58
00:02:58,770 --> 00:03:02,310
your endpoints API, and you can construct that

59
00:03:02,310 --> 00:03:05,430
rootpath like this. Just basically, wherever your

60
00:03:05,430 --> 00:03:10,760
app's running, add /_ah/api. Now if you leave

61
00:03:10,760 --> 00:03:15,630
off the rootpath. The load function will work or it will seem to work but

62
00:03:15,630 --> 00:03:18,240
when you go to call your endpoint APIs

63
00:03:18,240 --> 00:03:21,480
the execution calls won't work and that's because

64
00:03:21,480 --> 00:03:23,680
the Google client library will be looking in the Google

65
00:03:23,680 --> 00:03:27,120
public APIs instead of looking at the endpoint APIs for

66
00:03:27,120 --> 00:03:30,300
your app. So do make sure you specify the root

67
00:03:30,300 --> 00:03:33,990
path. Okay, so after we load the hello world endpoints API,

68
00:03:33,990 --> 00:03:37,050
we're going to call the load call back function. Here's the

69
00:03:37,050 --> 00:03:40,160
load call back, very simple, it just enables the buttons.

70
00:03:41,180 --> 00:03:43,170
It might do other things in other apps, but here

71
00:03:43,170 --> 00:03:47,410
all we do is enable the buttons. The enable buttons function

72
00:03:47,410 --> 00:03:49,940
uses straight up Java script to set the actions on

73
00:03:49,940 --> 00:03:53,270
the buttons. So we get the button that you clicked,

74
00:03:53,270 --> 00:03:56,620
greet generically, and we set the on click action to

75
00:03:56,620 --> 00:03:59,860
be the greet generically function, and we change the value

76
00:03:59,860 --> 00:04:02,250
of the button, the label of the button so that

77
00:04:02,250 --> 00:04:05,090
the user knows that it's ready for action, and then

78
00:04:05,090 --> 00:04:08,710
similarly, we get the greet by name button and we

79
00:04:08,710 --> 00:04:11,220
set the action, when it's clicked, to be greet by name,

80
00:04:12,560 --> 00:04:15,320
and again we change the label, and just

81
00:04:15,320 --> 00:04:18,680
a reminder that we enable the buttons here instead

82
00:04:18,680 --> 00:04:22,330
of setting them in index.html because these functions,

83
00:04:22,330 --> 00:04:27,480
greetGenerically and greetByName, won't be active until after the

84
00:04:27,480 --> 00:04:30,130
hello world end point's API's been loaded and

85
00:04:30,130 --> 00:04:32,050
you can't load that till after you've loaded the

86
00:04:32,050 --> 00:04:34,910
JavaScript client library. So you don't want the user

87
00:04:34,910 --> 00:04:37,910
to be clicking on the buttons before everything's ready.

88
00:04:37,910 --> 00:04:42,610
Okay, so more interestingly the greatGenerically function illustrates

89
00:04:42,610 --> 00:04:45,070
how to issue a call to an, to one

90
00:04:45,070 --> 00:04:47,470
of your own endpoint API. So you construct

91
00:04:47,470 --> 00:04:51,380
the request. You need to start with gapi.client. You

92
00:04:51,380 --> 00:04:53,840
specify the endpoints API to call, which in

93
00:04:53,840 --> 00:04:56,800
this case is helloworldendpoints, and then the actual functional

94
00:04:56,800 --> 00:04:59,250
method, which is sayHello. So you construct the

95
00:04:59,250 --> 00:05:02,980
request, and then you execute the request, and that's

96
00:05:02,980 --> 00:05:07,900
all you have to do to issue the call. You also need to specify a callback

97
00:05:07,900 --> 00:05:12,170
to call to process the response when the request is

98
00:05:12,170 --> 00:05:16,880
executed, and similarly, greetByName. Does the same thing. Only here

99
00:05:16,880 --> 00:05:21,545
we get the name out of the name field. We issue the request,

100
00:05:21,545 --> 00:05:28,000
gapi.client.helloworldendpoints.sayHello, and here we do pass

101
00:05:28,000 --> 00:05:30,120
the name to the request, and this is

102
00:05:30,120 --> 00:05:34,920
how you construct parameters to endpoint functions. Specify the

103
00:05:34,920 --> 00:05:39,030
parameter and then the value, and you can add,

104
00:05:39,030 --> 00:05:41,580
if we had more, you can add more here.

105
00:05:41,580 --> 00:05:45,915
So, for example you can add a second arg, arg2 and specify the value to be value

106
00:05:45,915 --> 00:05:49,250
two, and then you execute the request. We're going

107
00:05:49,250 --> 00:05:52,760
to the same callback when our request is successful.

108
00:05:52,760 --> 00:05:55,070
Okay so here's the call back that gets

109
00:05:55,070 --> 00:05:58,530
called when our request is executed successfully and we

110
00:05:58,530 --> 00:06:01,730
process the response and the response is always

111
00:06:01,730 --> 00:06:04,260
passed to the call back. In this case all

112
00:06:04,260 --> 00:06:05,960
we do is throw up a dialogue box,

113
00:06:05,960 --> 00:06:09,200
use the alert function, throw up a dialogue box

114
00:06:09,200 --> 00:06:11,510
and get the message field out of the

115
00:06:11,510 --> 00:06:14,220
response, and going back real quick to the Java.

116
00:06:16,500 --> 00:06:21,810
To the hello class, recall that the hello class has a message field. The

117
00:06:21,810 --> 00:06:26,720
hello will a point API so we defined so far or return a hello class object, so

118
00:06:26,720 --> 00:06:31,610
our responses is going to have a message field. So, now you know how to defined

119
00:06:31,610 --> 00:06:35,670
a point functions in java and how to call them from java script in your UI.
