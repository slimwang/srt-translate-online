1
00:00:00,580 --> 00:00:03,830
So we see now that there are a lot
security concerns to address regarding

2
00:00:03,830 --> 00:00:06,120
authentication if we
implement it ourselves.

3
00:00:06,120 --> 00:00:09,460
But, chances are, someone else has
already solved these problems before.

4
00:00:09,460 --> 00:00:12,740
Developers have created free and open
solutions we can use to authenticate

5
00:00:12,740 --> 00:00:16,059
users on our web applications,
simplifying the process of adding web

6
00:00:16,059 --> 00:00:19,470
security without having to reinvent
the wheel with each web application.

7
00:00:19,470 --> 00:00:22,740
Instead of authenticating the user
by yourself, you could ask a trusted

8
00:00:22,740 --> 00:00:26,200
third party to take care of
the complexities of user authentication.

9
00:00:26,200 --> 00:00:29,030
Then the third party can communication
back to your application that the user

10
00:00:29,030 --> 00:00:32,220
was authenticated against their
third party security system,

11
00:00:32,220 --> 00:00:35,790
allowing your application to not only
securely interact with the user but

12
00:00:35,790 --> 00:00:38,770
share data between your app and
the third party authenticator for

13
00:00:38,770 --> 00:00:40,720
a more streamlined user experience.

14
00:00:40,720 --> 00:00:44,100
As an app developer, this allows you
to worry less about the authentication

15
00:00:44,100 --> 00:00:48,000
part, and spend more time and effort
on your application logic instead.

16
00:00:48,000 --> 00:00:52,190
Here, let's do a quick example about
how third-party authentication works.

17
00:00:52,190 --> 00:00:56,300
Let's say I created a web application
and want to allow my users to be able to

18
00:00:56,300 --> 00:01:00,370
log in with an existing third-party
profile, like Facebook or Google.

19
00:01:00,370 --> 00:01:01,900
So I don't have to create
another username and

20
00:01:01,900 --> 00:01:03,990
password just to use my site.

21
00:01:03,990 --> 00:01:06,205
By implementing third-party
authentication,

22
00:01:06,205 --> 00:01:09,740
communication between all
involved parties must happen.

23
00:01:09,740 --> 00:01:12,740
As a user, you must first
communicate with my application,

24
00:01:12,740 --> 00:01:16,470
which will then take you to the third
party's login to verify your identity.

25
00:01:16,470 --> 00:01:19,880
My application also verifies it's
identity with the third party app and

26
00:01:19,880 --> 00:01:23,012
waits for
a confirmation of user trying to log in.

27
00:01:23,012 --> 00:01:27,250
The third-party app requests to share
your information with my application,

28
00:01:27,250 --> 00:01:30,670
and then allows my application to
access your third-party account.

29
00:01:30,670 --> 00:01:33,680
Once my application receives
confirmation from the third-party app,

30
00:01:33,680 --> 00:01:35,710
you are now logged into my site.

31
00:01:35,710 --> 00:01:39,210
My application may also have access
to certain things in your profile,

32
00:01:39,210 --> 00:01:42,020
like your profile pic or
latest status updates,

33
00:01:42,020 --> 00:01:45,490
to make your user experience
even more complete on my site.

34
00:01:45,490 --> 00:01:49,825
But wait a second, you might be
thinking, hey, not so fast, web app.

35
00:01:49,825 --> 00:01:52,725
Just because I want to log into your
site, doesn't mean I want you to have

36
00:01:52,725 --> 00:01:56,325
access to my entire Facebook profile,
especially without my knowledge or

37
00:01:56,325 --> 00:01:58,605
permission of what you're using and
when.

38
00:01:58,605 --> 00:01:59,795
And you'd be absolutely right.

39
00:02:00,875 --> 00:02:03,815
Clearly, if there's some third
party involved you want to know

40
00:02:03,815 --> 00:02:06,385
what kind of information
is being shared about you.

41
00:02:06,385 --> 00:02:09,005
This is where the concept
of authorization comes in.

42
00:02:09,005 --> 00:02:09,975
Let's talk about that now.
