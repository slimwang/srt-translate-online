1
00:00:00,250 --> 00:00:02,827
Now that we've thoroughly
planned this out, go ahead and

2
00:00:02,827 --> 00:00:05,140
build out this layout in your app.

3
00:00:05,140 --> 00:00:09,481
You'll need to find and
modify the activity_main.xml file.

4
00:00:09,481 --> 00:00:12,860
The activity_main.xml
file should already be

5
00:00:12,860 --> 00:00:15,040
open when you first create your project.

6
00:00:15,040 --> 00:00:18,710
If it's not already open, you can find
this file under the layout folder.

7
00:00:18,710 --> 00:00:22,420
Under res under app in
the project view of your app,

8
00:00:22,420 --> 00:00:24,680
which lists all the files in your app.

9
00:00:24,680 --> 00:00:27,490
The design pane is open by default,
where you can drag and

10
00:00:27,490 --> 00:00:31,240
drop widgets from this palette
here over onto the app.

11
00:00:31,240 --> 00:00:34,900
However, I want you to use the text
pane so you can write your XML here.

12
00:00:34,900 --> 00:00:38,970
At any point, when you modify your XML,
you can always select this content and

13
00:00:38,970 --> 00:00:40,330
reformat it.

14
00:00:40,330 --> 00:00:43,840
Across the top of Android Studio you
should see a bunch of menu items.

15
00:00:43,840 --> 00:00:47,695
Click on Code, and then you'll
find an option to Reformat Code.

16
00:00:47,695 --> 00:00:50,504
And here's the keyboard
shortcut if you're on Mac.

17
00:00:50,504 --> 00:00:53,460
You can reformat the code and
selected text is fine.

18
00:00:53,460 --> 00:00:54,330
Just click Run and

19
00:00:54,330 --> 00:00:58,700
then it automatically reformats your
code to fix the spacing and the tabs.

20
00:00:58,700 --> 00:01:01,090
You can also select Rearrange Code.

21
00:01:01,090 --> 00:01:04,519
It modifies the order of the attributes
here so that it's in the preferred order

22
00:01:04,519 --> 00:01:07,180
according to the Android
code style guidelines.

23
00:01:07,180 --> 00:01:09,810
And now the code is a lot
easier to read in this format.

24
00:01:09,810 --> 00:01:11,900
If you want a preview of
what this code looks like,

25
00:01:11,900 --> 00:01:13,424
you can click on
the Preview button here.

26
00:01:14,515 --> 00:01:16,705
And this shows what it would
look like on a device.

27
00:01:16,705 --> 00:01:19,195
But this isn't a substitute for
running it on your device, so

28
00:01:19,195 --> 00:01:21,385
you should always run it on
your device periodically.

29
00:01:22,535 --> 00:01:26,555
Once you build out this layout,
please also assign a view ID name

30
00:01:26,555 --> 00:01:29,715
on this second TextView
here that displays a 0.

31
00:01:29,715 --> 00:01:35,410
Give it a view ID name of
@+id/quantity_text_view.

32
00:01:35,410 --> 00:01:39,040
Use this exact name so
that it will match our code later on.

33
00:01:39,040 --> 00:01:42,770
Remember that we learned how to
assign IDs to views in lesson one.

34
00:01:42,770 --> 00:01:46,770
This example was for relative layout,
where we had a dinner party for

35
00:01:46,770 --> 00:01:49,010
our best friends and our frenemies.

36
00:01:49,010 --> 00:01:51,590
Also, the reason why we
give this view an ID but

37
00:01:51,590 --> 00:01:55,620
not the others is because we will want
to later refer to this TextView so

38
00:01:55,620 --> 00:01:58,100
that we can update it to increase or
decrease the quantity.

39
00:01:59,370 --> 00:02:01,890
For styling the views,
there's a couple small changes.

40
00:02:01,890 --> 00:02:07,490
This TextView here should have a text
size of 16sp and use a black font color.

41
00:02:07,490 --> 00:02:11,118
You can use the black system font color
like we showed you in lesson one or

42
00:02:11,118 --> 00:02:14,340
you can use the black hex color,
which we've included below.

43
00:02:14,340 --> 00:02:18,060
There's also 16 dp of space in
between each of these views.

44
00:02:18,060 --> 00:02:20,880
I know that this is the first time that
you are going to be adding a button to

45
00:02:20,880 --> 00:02:22,260
your XML layout.

46
00:02:22,260 --> 00:02:25,080
This is a really great opportunity for
you to practice your Google search

47
00:02:25,080 --> 00:02:28,400
skills in order to figure out how
to add a button to your layout.

48
00:02:28,400 --> 00:02:31,390
If you really get stuck, you can check
the hint in the instructor notes.

49
00:02:31,390 --> 00:02:32,470
As you build this up,

50
00:02:32,470 --> 00:02:36,300
periodically run the app on your device
to check that it's working as expected.

51
00:02:36,300 --> 00:02:39,290
When you're done with all of this,
answer this question.

52
00:02:39,290 --> 00:02:40,730
What happens when you
click on this button?
