1
00:00:00,000 --> 00:00:03,000
But there's a problem with rejection sampling.

2
00:00:03,000 --> 00:00:08,000
If the evidence is unlikely, you end up rejecting a lot of the samples.

3
00:00:08,000 --> 00:00:16,000
Let's go back to the alarm network where we had variables for burglary and for an alarm

4
00:00:16,000 --> 00:00:22,000
and say when arrested, in computing the probability of a burglary,

5
00:00:22,000 --> 00:00:25,000
given that the alarm goes off.

6
00:00:25,000 --> 00:00:28,000
The problem is that burglaries are very infrequent,

7
00:00:28,000 --> 00:00:32,000
so most of the samples we would get would end up being--

8
00:00:32,000 --> 00:00:39,000
we start with generating a B, and we get a -b and then a -a.

9
00:00:39,000 --> 00:00:43,000
We go back and say does this match?

10
00:00:43,000 --> 00:00:45,000
No, we have to reject this sample,

11
00:00:45,000 --> 00:00:50,000
so we generate another sample, and we get another -b, -a.

12
00:00:50,000 --> 00:00:54,000
We reject that. We get another -b, -a.

13
00:00:54,000 --> 00:01:00,000
And we keep rejecting, and eventually we get a +b,

14
00:01:00,000 --> 00:01:04,000
but we'd end up spending a lot of time rejecting samples.

15
00:01:04,000 --> 00:01:13,000
So, we're going to introduce a new method called likelihood weighting

16
00:01:13,000 --> 00:01:17,000
that generates samples so that we can keep every one.

17
00:01:17,000 --> 00:01:20,000
With likelihood weighting, we fix the evidence variables.

18
00:01:20,000 --> 00:01:25,000
That is, we say that A will always be positive,

19
00:01:25,000 --> 00:01:28,000
and then we sample the rest of the variables,

20
00:01:28,000 --> 00:01:31,000
so then we get samples that we want.

21
00:01:31,000 --> 00:01:37,000
We would get a list like -b, +a,

22
00:01:37,000 --> 00:01:40,000
-b, +a,

23
00:01:40,000 --> 00:01:42,000
+b, +a.

24
00:01:42,000 --> 00:01:46,000
We get to keep every sample, but we have a problem.

25
00:01:46,000 --> 00:01:52,000
The resulting set of samples is inconsistent.

26
00:01:52,000 --> 00:01:56,000
We can fix that, however, by assigning a probability

27
00:01:56,000 --> 99:59:59,999
to each sample and weighing them correctly.
