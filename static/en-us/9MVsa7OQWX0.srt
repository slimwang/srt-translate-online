1
00:00:00,610 --> 00:00:03,370
So now that you've got everything installed, it's ready

2
00:00:03,370 --> 00:00:06,430
to get going with an app Engine App. We've

3
00:00:06,430 --> 00:00:09,700
created a very simple Hello, World app engine application

4
00:00:09,700 --> 00:00:12,000
that uses M-points. You can find it in the

5
00:00:12,000 --> 00:00:14,680
lesson two folder that you downloaded from the [UNKNOWN]

6
00:00:14,680 --> 00:00:19,060
for this course. What we're going to do now, is

7
00:00:19,060 --> 00:00:22,730
import the project into Eclipse. To import a Maven

8
00:00:22,730 --> 00:00:26,040
project into Eclipse, you go up to the Eclipse

9
00:00:26,040 --> 00:00:30,870
menu, you choose file, and then you choose Import.

10
00:00:30,870 --> 00:00:33,940
And you open up the Maven folder and choose Existing

11
00:00:33,940 --> 00:00:37,780
Maven Projects, and then click Next. And then you

12
00:00:37,780 --> 00:00:39,810
can Browse to the folder that has the project that

13
00:00:39,810 --> 00:00:42,389
you want to import. I unzip my folder in

14
00:00:42,389 --> 00:00:45,940
Hello, World endpoints, we have to select the folder itself.

15
00:00:45,940 --> 00:00:48,800
And then if you want, in advanced, you can

16
00:00:48,800 --> 00:00:51,940
specify the name, or you can use the default name.

17
00:00:51,940 --> 00:00:56,610
Make sure that pom.xml's selected. Click Next. You may

18
00:00:56,610 --> 00:00:59,900
see you get some errors. Particularly, the endpoints get discovery

19
00:00:59,900 --> 00:01:02,680
doc. Don't worry about that, just leave it as resolve

20
00:01:02,680 --> 00:01:06,060
later, and say, Finish. It'll ask you, if you have

21
00:01:06,060 --> 00:01:08,350
the error, you'll get a little error message asking you

22
00:01:08,350 --> 00:01:10,387
if you really want to continue. Just say OK, you

23
00:01:10,387 --> 00:01:13,970
do. And then the project comes in. It's a little

24
00:01:13,970 --> 00:01:17,120
hard to see here, but my project is Hello, World.

25
00:01:17,120 --> 00:01:20,280
So this project that you imported, the Hello, World endpoints

26
00:01:20,280 --> 00:01:23,430
project, is a complete working app. It's very simple, but it's

27
00:01:23,430 --> 00:01:25,730
complete. It works, and you can run it out of

28
00:01:25,730 --> 00:01:27,920
the box. So I'm going to show you how to run it

29
00:01:27,920 --> 00:01:29,850
first, and then we're going to look into the code

30
00:01:29,850 --> 00:01:32,820
that makes up the project. So when you're ready to run

31
00:01:32,820 --> 00:01:38,120
your project. Go over here, you choose it. Right-click the project,

32
00:01:38,120 --> 00:01:41,500
choose Run As, and then go ahead and choose Run Configurations.

33
00:01:42,750 --> 00:01:45,520
You can create a new launch configuration,

34
00:01:45,520 --> 00:01:47,600
by clicking this New Launch Configuration button

35
00:01:47,600 --> 00:01:54,543
up here. And enter the Base directory, which is where you project is. But you

36
00:01:54,543 --> 00:01:57,138
can use is variable dollar open brace

37
00:01:57,138 --> 00:02:00,730
project underscore lock. That points the directory where

38
00:02:00,730 --> 00:02:07,780
your project is. The goal, you need to set it to appengin:def server. And down

39
00:02:07,780 --> 00:02:09,440
here in the Maven Runtime, you need to make

40
00:02:09,440 --> 00:02:12,130
sure that the external Maven Runtime is selected. So

41
00:02:12,130 --> 00:02:15,990
it must say external, not internal. If you need

42
00:02:15,990 --> 00:02:19,680
to configure it, then you click Configure, and make

43
00:02:19,680 --> 00:02:22,540
sure that the global settings from installation directory points

44
00:02:22,540 --> 00:02:25,280
to where your Maven is installed. If you can't

45
00:02:25,280 --> 00:02:28,810
remember where your Maven's installed, hop over to a

46
00:02:28,810 --> 00:02:33,264
terminal console window. And hopefully during the Maven installation process,

47
00:02:33,264 --> 00:02:36,590
you defined the variable M2_HOME. So you can

48
00:02:36,590 --> 00:02:40,040
go ahead and just echo that. So say, OK.

49
00:02:40,040 --> 00:02:43,200
And say, Apply. And then right here, I could

50
00:02:43,200 --> 00:02:46,050
go ahead and Run it or I could Close

51
00:02:46,050 --> 00:02:52,100
it. But I'll Run it now. And you see, it starts compiling. And you see here it's

52
00:02:52,100 --> 00:02:55,410
retrieving the Google App Engine Java SDK from Maven.

53
00:02:55,410 --> 00:02:58,170
And that's because in the pump.xml, we specified the

54
00:02:58,170 --> 00:03:01,910
Google App Engine SDK as one of the dependencies. First time

55
00:03:01,910 --> 00:03:04,820
you run it, it does take a while, because Maven has

56
00:03:04,820 --> 00:03:07,860
to go off and get all the libraries and everything that

57
00:03:07,860 --> 00:03:11,090
make up the dependencies in your project. And when it's finished,

58
00:03:11,090 --> 00:03:14,400
you'll see build success. So the build success means, its finished

59
00:03:14,400 --> 00:03:17,230
building. And now it's actually going to start running it. And when

60
00:03:17,230 --> 00:03:19,810
it, when the product is running, the Dev server on local

61
00:03:19,810 --> 00:03:23,650
host, you see this message info, Dev App Server is now running.

62
00:03:23,650 --> 00:03:26,560
So, let's make sure it really is. So open the browser

63
00:03:26,560 --> 00:03:30,690
and go to a new tab, and go to localhost:8080. And if

64
00:03:30,690 --> 00:03:33,460
for any reason your app is running on a different port,

65
00:03:33,460 --> 00:03:36,670
then just use a different port, but I expect it will be

66
00:03:36,670 --> 00:03:41,650
localhost 8080. And look, the app is running. We're not actually

67
00:03:41,650 --> 00:03:43,840
going to run the app, I mean, you're welcome to run it

68
00:03:43,840 --> 00:03:46,150
if you want to, but that's not what we're going to look at

69
00:03:46,150 --> 00:03:48,780
next. So now I just want to show you how to deploy

70
00:03:48,780 --> 00:03:53,590
to app spot. So, back here in the, in Eclipse, go

71
00:03:53,590 --> 00:03:58,530
ahead and select your project, right-click it. Again,

72
00:03:58,530 --> 00:04:04,420
choose Run As and Run Configurations. Click New to add a new configuration.

73
00:04:04,420 --> 00:04:06,910
Again, add the Base directory. And I can

74
00:04:06,910 --> 00:04:10,000
just copy that variable into that new configuration.

75
00:04:10,000 --> 00:04:13,980
Now, this time we want to deploy two app spots. So for that, you have to add

76
00:04:13,980 --> 00:04:18,510
the Goal appengine:update. So here's a goal appengine:update.

77
00:04:18,510 --> 00:04:22,490
Again, make sure the Maven Runtime is says external.

78
00:04:22,490 --> 00:04:24,850
Now you can Run it. Now the first time

79
00:04:24,850 --> 00:04:26,620
you run it, though, you're going to need to

80
00:04:26,620 --> 00:04:30,200
give permission to the App Engine cfg application,

81
00:04:30,200 --> 00:04:32,680
which is an App Engine application that will upload

82
00:04:32,680 --> 00:04:36,100
your App Engine application. And you'll see, that it's

83
00:04:36,100 --> 00:04:39,030
asking permission to view and manage your applications deployed

84
00:04:39,030 --> 00:04:41,040
on Google App Engine. You are going to need

85
00:04:41,040 --> 00:04:45,300
to Accept this. And after you accepted, you'll see

86
00:04:45,300 --> 00:04:48,030
that it shows you a code says, please copy

87
00:04:48,030 --> 00:04:50,610
this code, and paste it. So, go ahead and

88
00:04:50,610 --> 00:04:53,420
copy the entire code, and then go back

89
00:04:53,420 --> 00:04:57,330
to Eclipse. And enter the code. Hit Return. And

90
00:04:57,330 --> 00:05:01,220
it will keep going. Oh, no. Goodness. I got

91
00:05:01,220 --> 00:05:04,400
another error. 403 Forbidden. You do not have permission

92
00:05:04,400 --> 00:05:08,620
to modify this app. App_id=u'your-app-id'. Oh, no wait.

93
00:05:08,620 --> 00:05:12,350
Wait. That's not my app ID. I forgot to

94
00:05:12,350 --> 00:05:15,700
configure the app engine web.mxl. And you're going to

95
00:05:15,700 --> 00:05:17,520
need to do this too. So you go into

96
00:05:17,520 --> 00:05:21,160
the source directory, SRC Source and then into

97
00:05:21,160 --> 00:05:23,910
the main. Not looking at Java just now. You

98
00:05:23,910 --> 00:05:29,760
need to go into the web actor then you need to go into web in inph and you

99
00:05:29,760 --> 00:05:34,560
see app engine web.xml. And this file is

100
00:05:34,560 --> 00:05:36,260
where you can figure the properties are very

101
00:05:36,260 --> 00:05:39,170
specific to App Engine. And the most important

102
00:05:39,170 --> 00:05:41,640
one, for deploying to App Engine is you have

103
00:05:41,640 --> 00:05:48,280
to enter the app ID of your project. And this is the ID that you set in

104
00:05:48,280 --> 00:05:52,340
the developer console, over on console.developers.com. So go

105
00:05:52,340 --> 00:05:54,834
ahead and enter your app ID here, save the

106
00:05:54,834 --> 00:05:58,958
file, and try running again. Now this time, just

107
00:05:58,958 --> 00:06:02,210
go to Run As > Maven build. And pick

108
00:06:02,210 --> 00:06:06,250
the run configuration for App Engine update. I forgot

109
00:06:06,250 --> 00:06:08,120
to na, name mine, but here I see it,

110
00:06:08,120 --> 00:06:12,880
App Engine update. Okay, good. It's beginning the interaction,

111
00:06:12,880 --> 00:06:16,150
see it's initiating, it's cloning, it's uploading. Then it

112
00:06:16,150 --> 00:06:18,460
reaches a point where it's pretty much uploaded stuff,

113
00:06:18,460 --> 00:06:20,200
but it needs to ping the app to verify.

114
00:06:21,840 --> 00:06:24,060
You'll see these messages, will check again in

115
00:06:24,060 --> 00:06:27,650
one, two seconds and so on. And at

116
00:06:27,650 --> 00:06:29,330
this point, all it's really doing is just

117
00:06:29,330 --> 00:06:33,010
trying to ping the app. Can sometimes get hung

118
00:06:33,010 --> 00:06:35,180
here, but usually this doesn't take very long.

119
00:06:36,380 --> 00:06:38,630
Okay, good. So now then again, you see

120
00:06:38,630 --> 00:06:41,470
build success. Now this means, that my apps

121
00:06:41,470 --> 00:06:46,650
been deployed to app spot. Let's go check. So,

122
00:06:46,650 --> 00:06:49,700
to visit your app running on app spot, you

123
00:06:49,700 --> 00:06:54,240
go to your app ID, whatever that is. And

124
00:06:54,240 --> 00:06:58,090
then after you're app ID, you do .appspot.com and

125
00:06:58,090 --> 00:07:00,670
it should take you to your app. And this

126
00:07:00,670 --> 00:07:02,640
looks exactly the same as it did on local

127
00:07:02,640 --> 00:07:04,710
host, but actually we're now running in on app

128
00:07:04,710 --> 00:07:07,580
spot. So, one more thing I wanted to mention

129
00:07:07,580 --> 00:07:11,500
in your project, is that after you deploy it,

130
00:07:11,500 --> 00:07:13,840
whether you deployed it to local host or you deployed

131
00:07:13,840 --> 00:07:19,620
it to app spot, the target directory gets populated with all

132
00:07:19,620 --> 00:07:23,570
the compile code. So, you could actually delete the target

133
00:07:23,570 --> 00:07:27,400
directory, and then re-run your project and it will get recreated.
