1
00:00:00,000 --> 00:00:03,125
[MUSIC]

2
00:00:03,125 --> 00:00:03,705
Hey there!

3
00:00:03,705 --> 00:00:05,946
So, I was just calling to
say you're doing great work.

4
00:00:05,946 --> 00:00:09,095
You got your fist bit of custom
data written into database.

5
00:00:09,095 --> 00:00:10,568
And it only took a few minutes.

6
00:00:10,568 --> 00:00:12,145
[MUSIC]

7
00:00:12,145 --> 00:00:14,220
JP is calling.

8
00:00:14,220 --> 00:00:17,300
Hey JP, we just wrote our
first data to Firebase.

9
00:00:17,300 --> 00:00:19,710
And we didn't even have to
write a single Async task or

10
00:00:19,710 --> 00:00:21,180
need to deal with threads.

11
00:00:21,180 --> 00:00:22,790
>> I'm glad you like it.

12
00:00:22,790 --> 00:00:25,400
>> Yeah actually, while I have
you on the phone, quick question.

13
00:00:25,400 --> 00:00:27,860
So you've looked at the dashboard
longer than I have.

14
00:00:27,860 --> 00:00:31,700
So how is data actually
structured in Firebase?

15
00:00:31,700 --> 00:00:34,240
It doesn't look like
a relational database to me.

16
00:00:34,240 --> 00:00:36,690
So what is this Firebase
data that I'm editing?

17
00:00:36,690 --> 00:00:38,510
>> Well, you're right about it
not being a relational database.

18
00:00:38,510 --> 00:00:40,630
So let me show you what it looks like.

19
00:00:40,630 --> 00:00:41,890
Let me pull up my screen.

20
00:00:43,298 --> 00:00:46,850
First, SQL has a tabular format with
columns and rows, like Excel or

21
00:00:46,850 --> 00:00:48,200
a Google spreadsheet.

22
00:00:48,200 --> 00:00:51,580
However, in Firebase,
data is stored in JSON.

23
00:00:51,580 --> 00:00:54,120
It's basically a simple declarative
language used to describe

24
00:00:54,120 --> 00:00:55,470
objects and data.

25
00:00:55,470 --> 00:00:57,630
It's a lot more flexible
than a tabular format,

26
00:00:57,630 --> 00:00:59,889
since you don't need to strictly
define rows or headings.

27
00:01:00,930 --> 00:01:04,370
JSON contains a nested
structure similar to XML.

28
00:01:04,370 --> 00:01:08,819
And also like XML, JSON can be
represented in a tree structure.

29
00:01:08,819 --> 00:01:11,287
>> Yeah, I remember JSON from
working on developing Android apps.

30
00:01:11,287 --> 00:01:14,231
I think it was the format that
both OpenWeatherMap API and

31
00:01:14,231 --> 00:01:15,896
the movies database returned.

32
00:01:15,896 --> 00:01:17,009
>> Hm.

33
00:01:17,009 --> 00:01:19,125
And if your developer's
unfamiliar with JSON,

34
00:01:19,125 --> 00:01:20,776
take a moment to close this hangout and

35
00:01:20,776 --> 00:01:24,043
check out the links provided in the
instructor notes to get you up to speed.

36
00:01:24,043 --> 00:01:25,999
>> All right, so
if I'm understanding you right,

37
00:01:25,999 --> 00:01:28,443
the dashboard is basically
a visualization of my JSON tree.

38
00:01:28,443 --> 00:01:32,271
And the Firebase object that we're
calling methods on in the Android

39
00:01:32,271 --> 00:01:36,035
code that's also an object
representation of a JSON tree, right?

40
00:01:36,035 --> 00:01:37,034
>> Yep.

41
00:01:37,034 --> 00:01:41,280
>> Hm, okay so what kind of things can
I actually store as values in JSON?

42
00:01:41,280 --> 00:01:45,050
It looks like here I stored a string
as a key and a string as a value, so

43
00:01:45,050 --> 00:01:49,120
does that mean that any type that
JSON normally accepts is okay?

44
00:01:49,120 --> 00:01:51,370
>> Right, let me explain.

45
00:01:51,370 --> 00:01:54,290
Well yes mostly,
the keys are always strings.

46
00:01:54,290 --> 00:01:56,670
The values stored in the tree
can be passes in as Booleans,

47
00:01:56,670 --> 00:02:01,519
longs, doubles, lists, maps, and
some specific types of objects.

48
00:02:02,700 --> 00:02:05,390
There are also Java types that
can be returned from the tree.

49
00:02:05,390 --> 00:02:08,039
List and maps can contain more lists and
more maps.

50
00:02:08,039 --> 00:02:11,980
And objects can contain other objects or
lists of other objects,

51
00:02:11,980 --> 00:02:15,910
meaning you can have nested data
structures within data structures.

52
00:02:15,910 --> 00:02:19,570
I know the dashboard is pretty powerful
when you want to look at your data,

53
00:02:19,570 --> 00:02:21,800
although it's hard to tell when
you don't have too many entries.

54
00:02:22,830 --> 00:02:23,740
Here's a look at it right now.
