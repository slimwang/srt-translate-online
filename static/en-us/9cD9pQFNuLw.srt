1
00:00:00,090 --> 00:00:02,950
We're providing you with an asset drop,
view the link below,

2
00:00:02,950 --> 00:00:05,980
so that you can download the images
and include them in the app.

3
00:00:05,980 --> 00:00:08,280
When we open up the assets ZIP file,

4
00:00:08,280 --> 00:00:11,190
we see that the same icon
is provided at different sizes

5
00:00:11,190 --> 00:00:14,898
for different resolutions.
In the drawable MDPI folder,

6
00:00:14,898 --> 00:00:18,348
we see the assets that will be used
on an MDPI device.

7
00:00:18,471 --> 00:00:20,932
In the drawable HDPI folder,
we see the assets

8
00:00:20,932 --> 00:00:25,463
that will be used on an HDPI device.
And the same goes for the other folders.

9
00:00:26,050 --> 00:00:28,226
Under the res directory copy over

10
00:00:28,226 --> 00:00:31,060
all the asset folders
provided in the download.

11
00:00:31,416 --> 00:00:35,876
Clicking on an image shows a preview of it
and the size and pixels is also shown.

12
00:00:36,128 --> 00:00:40,092
At this time you can also remove
the old placeholder ic launcher icons.

13
00:00:40,378 --> 00:00:43,862
Our new launcher icons
are located in mipmap folders.

14
00:00:43,993 --> 00:00:46,470
These are distinct folders
from the drawable folders.

15
00:00:46,470 --> 00:00:50,610
If you build an APK
for a target screen resolution like HDPI,

16
00:00:50,610 --> 00:00:53,340
the Android asset packaging tool, AAPT,

17
00:00:53,340 --> 00:00:56,440
can strip out the drawables
for other resolutions you don't need.

18
00:00:56,440 --> 00:01:00,440
But if it's in the mipmap folders,
then these assets will stay in the APK

19
00:01:00,440 --> 00:01:02,381
regardless of the target resolution.

20
00:01:02,381 --> 00:01:04,810
But when would you need
an image at a resolution

21
00:01:04,810 --> 00:01:06,790
different than the resolution
of the device?

22
00:01:06,790 --> 00:01:09,010
Well, one example
is the Android launcher app,

23
00:01:09,010 --> 00:01:12,520
which controls the home screen
as well as the All App store.

24
00:01:12,520 --> 00:01:16,051
The launcher app won't use the icon
at the current density of the device,

25
00:01:16,051 --> 00:01:19,874
but rather pulls an icon
for the next highest resolution up.

26
00:01:20,214 --> 00:01:23,455
For an XXHDPI device like the Nexus 5,

27
00:01:23,455 --> 00:01:27,691
normally the assets will be pulled
from the drawable XXHDPI folder.

28
00:01:27,829 --> 00:01:32,963
However, in this case the launcher icon
will pull the XXXHDPI version

29
00:01:32,963 --> 00:01:34,452
of the launcher icon.

30
00:01:34,644 --> 00:01:38,879
That will make the larger app icons
appear sharper on the all apps screen.

31
00:01:39,528 --> 00:01:44,413
In the code replace @drawable/ic<u>launcher
with @mipmap/ic</u>launcher

32
00:01:44,658 --> 00:01:46,907
because of the new location of the icons.

33
00:01:47,070 --> 00:01:49,828
For the rest of the icons
modify the forecast list

34
00:01:49,828 --> 00:01:53,160
and the details screen to display
the right weather icon

35
00:01:53,160 --> 00:01:54,945
instead of the placeholder one.

36
00:01:55,045 --> 00:01:57,131
See the hints below
in the instructor notes.

37
00:01:57,131 --> 00:02:00,276
Using the helper functions
we've provided in the gist below,

38
00:02:00,276 --> 00:02:03,950
you can map the weather condition code
to the icon that you'll need.

39
00:02:03,977 --> 00:02:07,064
This is what the app should look like
when you're done with this step.

40
00:02:07,518 --> 00:02:10,050
Note that there are two types
of each weather icon,

41
00:02:10,122 --> 00:02:12,733
a gray icon and a colored art image.

42
00:02:12,733 --> 00:02:15,960
In the main forecast list
we'll be using the gray icon.

43
00:02:15,960 --> 00:02:19,650
However, for the today layout,
we'll use the colored icon.

44
00:02:19,650 --> 00:02:23,518
When you go inside the detail activity,
you'll also use the colored icon.

45
00:02:23,672 --> 00:02:27,160
At this time, you can also remove
any images you hard coded

46
00:02:27,160 --> 00:02:30,570
into the layout XML, because
they'll be populated dynamically now.
