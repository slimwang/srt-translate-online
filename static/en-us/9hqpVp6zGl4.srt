1
00:00:00,000 --> 00:00:01,940
So let's take a quick look at where we are so far.

2
00:00:01,940 --> 00:00:04,500
What I first introduced to you is the concept of

3
00:00:04,500 --> 00:00:06,660
snapshots of the RAM,

4
00:00:06,660 --> 00:00:08,470
so you can look into the machine

5
00:00:08,470 --> 00:00:12,470
at any point in time that a polynomial time algorithm executes,

6
00:00:12,470 --> 00:00:17,140
and then you see exactly what state the RAM is at that certain point in time,

7
00:00:17,140 --> 00:00:19,990
so which line of the program it's executing

8
00:00:19,990 --> 00:00:21,400
and also what's in the memory.

9
00:00:21,400 --> 00:00:24,040
I've now also shown you that we can represent

10
00:00:24,040 --> 00:00:26,940
a snapshot as a Boolean formula.

11
00:00:26,940 --> 00:00:30,390
What that means is that I've shown you how to construct a Boolean formula

12
00:00:30,390 --> 00:00:33,160
so that when you have a satisfying assignment

13
00:00:33,160 --> 00:00:35,140
for this Boolean formula and there can be many.

14
00:00:35,140 --> 00:00:39,770
Then you can reconstruct this snapshot from the satisfying assignment.

15
00:00:39,770 --> 00:00:42,660
What we also know is the assignment of the variables

16
00:00:42,660 --> 00:00:44,960
for the first Boolean formula,

17
00:00:44,960 --> 00:00:46,610
so at time point zero,

18
00:00:46,610 --> 00:00:48,170
and the reason why we know that is that

19
00:00:48,170 --> 00:00:50,460
at the beginning, we know what the machine is doing,

20
00:00:50,460 --> 00:00:52,460
because in the memory there's the input,

21
00:00:52,460 --> 00:00:54,330
the algorithm starts at the first line,

22
00:00:54,330 --> 00:00:57,550
and in the memory where we have the output, and intermediate results,

23
00:00:57,550 --> 00:00:59,190
there's nothing in there,

24
00:00:59,190 --> 00:01:02,340
so here, we already know what the variables are going to be.

25
00:01:02,340 --> 00:01:04,190
Now why are we doing all of this?

26
00:01:04,190 --> 00:01:07,300
In the end, what we want to show is if we solve SAT for this

27
00:01:07,300 --> 00:01:09,340
huge Boolean formula that we're building

28
00:01:09,340 --> 00:01:10,590
and we're not done yet,

29
00:01:10,590 --> 00:01:12,760
if we solve SAT for this formula here,

30
00:01:12,760 --> 00:01:14,920
then we want to know what the machine is actually doing

31
00:01:14,920 --> 00:01:17,410
or in other words, what we want to get is

32
00:01:17,410 --> 00:01:21,330
a protocol of what the algorithm here has done.

33
00:01:21,330 --> 00:01:23,310
So each of the Boolean formulas here

34
00:01:23,310 --> 00:01:25,310
represents a snapshot,

35
00:01:25,310 --> 00:01:27,140
but now we need to ensure that they fit together,

36
00:01:27,140 --> 00:01:29,800
because once the machine starts out in this snapshot,

37
00:01:29,800 --> 00:01:31,360
it will move to the next one,

38
00:01:31,360 --> 00:01:35,140
and so we must make sure that if we have an assignment for the variables here

39
00:01:35,140 --> 00:01:36,850
that represent a snapshot,

40
00:01:36,850 --> 00:01:40,390
then the snapshot that is represented here must fit together with one,

41
00:01:40,390 --> 00:01:43,560
so that it's kind of a valid representation of what

42
00:01:43,560 --> 00:01:45,220
the RAM is doing here.

43
00:01:45,220 --> 00:01:47,820
And the way we're going to achieve this is, of course, more Boolean formulas

44
00:01:47,820 --> 00:01:49,800
so that we add to the game,

45
00:01:49,800 --> 00:01:51,950
and to do that, I would like you to think about

46
00:01:51,950 --> 00:01:53,780
some statements for a bit

47
00:01:53,780 --> 00:01:56,580
regarding how snapshots connected to each other.

48
00:01:56,580 --> 00:01:58,540
So what I would like you to tell me is

49
00:01:58,540 --> 00:02:00,940
which of the following statements is true?

50
00:02:00,940 --> 00:02:03,000
The first one is one a deterministic RAM,

51
00:02:03,000 --> 00:02:06,630
if we know what state that machine is in a time point to,

52
00:02:06,630 --> 00:02:11,270
we can clearly state what the state will be at time t plus 1.

53
00:02:11,270 --> 00:02:13,960
The second one is I want you to tell me if

54
00:02:13,960 --> 00:02:17,630
this here were true if instead of a deterministic RAM,

55
00:02:17,630 --> 00:02:20,240
we were talking about a non deterministic RAM.

56
00:02:20,240 --> 00:02:22,620
The third one is a non deterministic RAM

57
00:02:22,620 --> 00:02:26,120
behaves exactly like a deterministic RAM

58
00:02:26,120 --> 00:02:29,240
except when we use the if_better function,

59
00:02:29,240 --> 00:02:31,120
and finally, if we use the if_better function,

60
00:02:31,120 --> 00:02:34,260
there can be any number of next states,

61
00:02:34,260 --> 00:02:36,570
so not 1, not 2, not 3, but

62
00:02:36,570 --> 00:02:38,470
basically an arbitrarily large number of states,

63
00:02:38,470 --> 00:02:40,760
and we can not make any statement about that.

64
00:02:40,760 --> 00:02:42,550
So which of the following is true?

65
00:02:42,550 --> 99:59:59,999
Please check all of the boxes where the statements are true.
