1
00:00:00,430 --> 00:00:03,390
The easiest way to get started with
Kubernetes is to use a Kubes detail

2
00:00:03,390 --> 00:00:04,680
run and command.

3
00:00:04,680 --> 00:00:06,401
Let's use a Kubes detail run and

4
00:00:06,401 --> 00:00:09,669
command to launch a single
instance of the nginx container.

5
00:00:09,669 --> 00:00:12,921
As you can see, Kubernetes has
created what is called a deployment.

6
00:00:12,921 --> 00:00:15,574
We'll explain more about
deployments later, but for now,

7
00:00:15,574 --> 00:00:18,123
all you need to know is that
deployments keep our pods up and

8
00:00:18,123 --> 00:00:21,000
running even when
the nodes they run on fail.

9
00:00:21,000 --> 00:00:24,890
In Kubernetes, all containers
run in what's called a pod.

10
00:00:24,890 --> 00:00:29,340
Use the kubectl get pods command,
to view the running nginx container.

11
00:00:29,340 --> 00:00:31,200
Now that the nginx container is running,

12
00:00:31,200 --> 00:00:35,040
we can expose it outside of Kubernetes
using the kubectl expose command.

13
00:00:36,180 --> 00:00:37,890
So what just happened?

14
00:00:37,890 --> 00:00:42,040
Behind the scenes, Kubernetes created an
external load balancer with a public IP

15
00:00:42,040 --> 00:00:43,640
address attached to it.

16
00:00:43,640 --> 00:00:47,350
Any client who hits that public IP
address will be routed to the pods

17
00:00:47,350 --> 00:00:48,810
behind the service.

18
00:00:48,810 --> 00:00:51,410
In this case,
that would be the nginx pod.

19
00:00:51,410 --> 00:00:54,840
So if we list our services now,
we'll see that we have

20
00:00:54,840 --> 00:00:59,240
a public IP that we can use to
hit the nginx container remotely.

21
00:00:59,240 --> 00:01:00,370
And there you go.

22
00:01:00,370 --> 00:01:03,250
Kubernetes supports an easy to
use workflow out of the box using

23
00:01:03,250 --> 00:01:05,200
the kubectl run and expose commands.

24
00:01:05,200 --> 00:01:07,940
Now that you've seen
a quick tour of Kubernetes,

25
00:01:07,940 --> 00:01:10,680
it's time to dive into each of
the components and abstractions.
