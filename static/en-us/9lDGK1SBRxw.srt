1
00:00:00,190 --> 00:00:03,350
I started by creating this URL for the New York Times.

2
00:00:03,350 --> 00:00:07,860
Inside the URL I append the city string that we created earlier, and

3
00:00:07,860 --> 00:00:10,520
I also make sure that I've got my API key at the end of it,

4
00:00:10,520 --> 00:00:13,640
which is obviously not xxxxxxxxxx.

5
00:00:13,640 --> 00:00:15,630
Probably a couple of more x's.

6
00:00:15,630 --> 00:00:16,129
Anyways.

7
00:00:17,160 --> 00:00:21,230
Moving on so we pass into $.getJSON,

8
00:00:21,230 --> 00:00:25,330
the URL that we just created here, and then an anonymous function.

9
00:00:25,330 --> 00:00:28,320
This anonymous function will get run as soon as we

10
00:00:28,320 --> 00:00:30,760
get the response back from the New York Times.

11
00:00:30,760 --> 00:00:33,750
I start off by setting the text of the header element to

12
00:00:33,750 --> 00:00:35,950
New York Times Articles About.

13
00:00:35,950 --> 00:00:36,810
Insert city here.

14
00:00:36,810 --> 00:00:41,600
And then I iterate through this data object, which is the actual response.

15
00:00:41,600 --> 00:00:42,670
Let's take a look at that.

16
00:00:42,670 --> 00:00:45,510
Inside the network tab in DevTools, I've gone ahead and

17
00:00:45,510 --> 00:00:47,290
looked at all of the requests sent out.

18
00:00:47,290 --> 00:00:49,770
And we see article search, so let's click on that.

19
00:00:49,770 --> 00:00:50,950
Looking at the preview tab,

20
00:00:50,950 --> 00:00:53,370
we can get a good idea of what our object looks like.

21
00:00:53,370 --> 00:00:54,720
Let's open up response,

22
00:00:54,720 --> 00:00:58,060
which is the highest level property within the JSON that's returned.

23
00:00:58,060 --> 00:01:01,270
We see that it contains docs and meta.

24
00:01:01,270 --> 00:01:02,640
And docs looks like an array.

25
00:01:02,640 --> 00:01:03,930
Let's open that up.

26
00:01:03,930 --> 00:01:04,680
And check this out.

27
00:01:04,680 --> 00:01:07,280
We have each of the articles that got returned.

28
00:01:07,280 --> 00:01:08,530
Let's open up the first.

29
00:01:08,530 --> 00:01:13,220
The first one has the URL under the property web URL, and

30
00:01:13,220 --> 00:01:14,240
we've got the headline right here.

31
00:01:15,480 --> 00:01:17,030
The headline has a property of main, and

32
00:01:17,030 --> 00:01:20,860
then we can see a string of the headline of this article.

33
00:01:20,860 --> 00:01:23,060
So inside our code we're going to go ahead and

34
00:01:23,060 --> 00:01:27,170
create this article's object which is from the data response and

35
00:01:27,170 --> 00:01:31,730
then that high level response property and the docs inside of it.

36
00:01:31,730 --> 00:01:33,290
Scrolling down.

37
00:01:33,290 --> 00:01:37,480
We also find this snippet, which is a string of a snippet or

38
00:01:37,480 --> 00:01:39,240
the first part of the article.

39
00:01:39,240 --> 00:01:42,760
Within each article, we're looking for a web URL to use for the a tag.

40
00:01:42,760 --> 00:01:45,670
And we're also looking for a snippet to put inside the p tag.

41
00:01:45,670 --> 00:01:47,990
This is a pretty simple for loop.

42
00:01:47,990 --> 00:01:50,580
We'll just go through all of the articles that get returned and

43
00:01:50,580 --> 00:01:53,120
then append each one in turn.

44
00:01:53,120 --> 00:01:56,070
And now we've got all the articles showing up on the page, that's pretty cool.

45
00:01:57,150 --> 00:01:58,830
Let me show you one more trick.

46
00:01:58,830 --> 00:02:02,500
So if you're curious what will come from this URL before you run

47
00:02:02,500 --> 00:02:05,220
through this whole thing, you can actually just go ahead and

48
00:02:05,220 --> 00:02:07,560
paste this into your browser to see the result.

49
00:02:07,560 --> 00:02:09,970
I've gone ahead and pasted in up here and

50
00:02:09,970 --> 00:02:13,140
I'll press Enter and we get this massive string back.

51
00:02:13,140 --> 00:02:13,920
But look!

52
00:02:13,920 --> 00:02:15,950
This massive string is just a JSON.

53
00:02:15,950 --> 00:02:18,440
It's the exact same JSON we were looking at.

54
00:02:18,440 --> 00:02:21,090
This is a quick and easy way of seeing what will return from your

55
00:02:21,090 --> 00:02:23,840
AJAX request without actually putting one into your app.
