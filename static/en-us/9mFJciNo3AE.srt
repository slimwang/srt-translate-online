1
00:00:00,560 --> 00:00:03,520
There are two primary ways of
rendering 3D environments.

2
00:00:04,630 --> 00:00:10,130
You can write code, or you can use
a graphical editor based environment.

3
00:00:10,130 --> 00:00:13,170
Or you could do some combination
of the two approaches.

4
00:00:14,320 --> 00:00:18,271
For this nano degree, we'll be
writing code and using an editor.

5
00:00:18,271 --> 00:00:21,830
For the first part, we'll be
a using a game engine called Unity.

6
00:00:23,290 --> 00:00:28,350
A game engine is a software framework
that makes it easier to develop games.

7
00:00:28,350 --> 00:00:30,550
The goal is to reduce iteration time.

8
00:00:30,550 --> 00:00:32,890
And overhead as much as possible.

9
00:00:32,890 --> 00:00:34,660
You need short iteration times.

10
00:00:34,660 --> 00:00:38,700
Because so much of virtual reality
requires quick experimentation.

11
00:00:38,700 --> 00:00:41,030
We simply don't know
everything about this medium.

12
00:00:41,030 --> 00:00:41,890
It's too new.

13
00:00:43,150 --> 00:00:47,690
Game engines often provide 3D rendering,
physics, sound,

14
00:00:47,690 --> 00:00:52,460
scripting, animation asset management,
and a whole lot more.

15
00:00:54,050 --> 00:00:58,680
In short, there are packages of tools
that make it easier to build games and

16
00:00:58,680 --> 00:00:59,240
VR apps.

17
00:01:00,880 --> 00:01:03,000
But Unity isn't the only game in town.

18
00:01:03,000 --> 00:01:04,910
It's just a popular choice.

19
00:01:04,910 --> 00:01:09,122
Some of the other big game
engines are Unreal Engine,

20
00:01:09,122 --> 00:01:14,270
CryEngine, Lumberyard,
and many many more.

21
00:01:15,720 --> 00:01:20,690
Okay, so to contrast game engines,
you can also build VR

22
00:01:20,690 --> 00:01:26,840
apps using native development tools
like C++, Open GL, and DirectX.

23
00:01:26,840 --> 00:01:30,520
When you pick these tools, you are
building your VR software using the raw

24
00:01:30,520 --> 00:01:32,479
materials of the computer
graphics world.

25
00:01:33,770 --> 00:01:36,090
Instead of using a bunch
of prepackaged tools and

26
00:01:36,090 --> 00:01:39,100
a game engine, Native Development
requires you to integrate

27
00:01:39,100 --> 00:01:41,470
every component you want to use.

28
00:01:41,470 --> 00:01:45,510
The result is that you get much
more flexibility and it's often

29
00:01:45,510 --> 00:01:49,560
with some increased performance, but
you have much longer development times.

30
00:01:50,810 --> 00:01:53,490
You may choose to build a native
app when you need an extremely high

31
00:01:53,490 --> 00:01:57,600
performance data intensive
simulation like Occulus Medium.

32
00:01:57,600 --> 00:02:00,670
Or you might build a native app when
you need to build a framework that

33
00:02:00,670 --> 00:02:04,060
others will use to build
their own VR apps, but for

34
00:02:04,060 --> 00:02:07,320
most VR Developers, a game engine is
the right choice for their project.

35
00:02:08,400 --> 00:02:13,180
There's also one other VR Development
option out there, web browsers.

36
00:02:13,180 --> 00:02:16,090
I think the web could eventually
be a huge platform for VR.

37
00:02:17,150 --> 00:02:21,550
Unfortunately, WebVR isn't currently
good enough for production use.

38
00:02:21,550 --> 00:02:24,160
It's possible that in
the future this will be one

39
00:02:24,160 --> 00:02:26,800
of the dominant VR platforms.

40
00:02:26,800 --> 00:02:32,050
But for now, as a VR developer, our main
choice is between native development,

41
00:02:32,050 --> 00:02:33,880
and using a game engine.

42
00:02:33,880 --> 00:02:37,010
And for this course, we'll be
using a game engine called Unity.

43
00:02:37,010 --> 00:02:37,700
Let's dive right in.
