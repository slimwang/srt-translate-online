1
00:00:00,690 --> 00:00:03,630
I'll use the generate command
to create a new component.

2
00:00:03,630 --> 00:00:07,830
Remember that Ember requires a component
to have a dash in its name, so

3
00:00:07,830 --> 00:00:13,750
it has to be lego-brick, not just brick
or lego, or lego brick without a dash.

4
00:00:13,750 --> 00:00:14,919
It has to have that dash in there.

5
00:00:15,960 --> 00:00:17,790
I like taking things step by step, so

6
00:00:17,790 --> 00:00:21,520
let's extract all of this inner loop
data over to the components template.

7
00:00:22,600 --> 00:00:25,610
Now to have this code show up,
all we need to do is call the component.

8
00:00:27,140 --> 00:00:31,290
Remember that variables in a component
are blocked from the outer scope.

9
00:00:31,290 --> 00:00:33,500
So these have no meaning.

10
00:00:33,500 --> 00:00:36,520
So for the brick value in here to
be equal to this one out here,

11
00:00:36,520 --> 00:00:37,710
we need to make that connection.

12
00:00:38,720 --> 00:00:42,840
Now the inner brick value is
equal to this outer brick value.

13
00:00:42,840 --> 00:00:47,340
Remember that, by default, the component
wraps all of its content in a div.

14
00:00:47,340 --> 00:00:51,270
Since this div is also here we
have an extra unneeded layer.

15
00:00:51,270 --> 00:00:54,590
We can remove this div, but
then we'll lose our styles.

16
00:00:54,590 --> 00:00:59,480
To fix this, we'll apply a class to
the component in the components file.

17
00:00:59,480 --> 00:01:03,580
I'll move these classes to
the components className property.

18
00:01:03,580 --> 00:01:05,050
But how do we work with this class?

19
00:01:06,260 --> 00:01:11,110
To handle this, we need to use
the classNameBindings property.

20
00:01:11,110 --> 00:01:14,080
This checks a property and
then applies a class.

21
00:01:14,080 --> 00:01:16,360
To have it check the item's sale value,

22
00:01:16,360 --> 00:01:18,420
we need to pass this
value into the component.

23
00:01:20,390 --> 00:01:25,204
Inside the component, the sale property
is the value stored in item.onSale.

24
00:01:26,610 --> 00:01:29,580
Back in the component file
we can check this value.

25
00:01:29,580 --> 00:01:32,832
If it's true then we can
add the class on-sale and

26
00:01:32,832 --> 00:01:35,780
now we can delete this
wrapping div element.

27
00:01:44,615 --> 00:01:47,242
We still have the same
end visual result, but

28
00:01:47,242 --> 00:01:50,840
now all of the brick content
is located in one place.

29
00:01:50,840 --> 00:01:52,600
So we've separated our concerns and

30
00:01:52,600 --> 00:01:55,290
have a dedicated file to update
when things need to change.

31
00:01:55,290 --> 00:01:56,180
Great job.
