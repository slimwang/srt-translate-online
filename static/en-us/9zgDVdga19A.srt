1
00:00:00,000 --> 00:00:06,000
One definition of NP says, that a problem is in NP, if it has a short accepting certificate.

2
00:00:06,000 --> 00:00:09,000
An accepting certificate is information that we can use to quickly show

3
00:00:09,000 --> 00:00:15,000
that the answer to the decision problem is yes, (if it actually is yes)

4
00:00:15,000 --> 00:00:23,000
and here, short means polynomial size and quickly means polynomial time.

5
00:00:23,000 --> 00:00:28,000
To define NP even more formally, we're going to say a problem is an NP

6
00:00:28,000 --> 00:00:33,000
if there is a verification in algorithm.

7
00:00:33,000 --> 00:00:38,000
This is a basically computer program on A like a subroutine A

8
00:00:38,000 --> 00:00:46,000
such that for any input for the problem that is a "yes", there is a certificate C

9
00:00:46,000 --> 00:00:55,000
such that the size of C is polynomial in the size of x, and the verification algorithm will say "yes"

10
00:00:55,000 --> 00:01:03,000
but for any x that is a no, there is no certificate C that's polynomially sized with respect to x

11
00:01:03,000 --> 00:01:09,000
and the verification algorithm says "yes", so for any yes answer to the problem,

12
00:01:09,000 --> 00:01:14,000
a verification algorithm will say "yes" for some small certificate;

13
00:01:14,000 --> 00:01:16,000
otherwise, it'll say "no" for all small certificates.

14
00:01:16,000 --> 00:01:21,000
For the Sudoku example, the verification algorithm is what we describe

15
00:01:21,000 --> 00:01:26,000
as something to take the original Sudoku problem with things not filled in

16
00:01:26,000 --> 00:01:32,000
and the answer is printed in the back of the magazine where the answer filled in,

17
00:01:32,000 --> 00:01:36,000
and it checks to see whether this is the actually a solution to that.

18
00:01:36,000 --> 00:01:40,000
If it is, then it says "yes" and if it's not, it says "no".

19
00:01:40,000 --> 00:01:44,000
Now this is going to fit the NP definition that we've got here

20
00:01:44,000 --> 00:01:50,000
because for any Sudoku problem that is solvable, there is some grid that we solve it and we can show

21
00:01:50,000 --> 00:01:54,000
what that grid looks like, but for any problem that it's not solvable,

22
00:01:54,000 --> 00:01:57,000
there is no way that we can fill in this grid with numbers.

23
00:01:57,000 --> 00:02:01,000
So that the verification algorithm will say that it's okay.

24
00:02:01,000 --> 00:02:05,000
It really is back to the definition of basically the Sudoku problem.

25
00:02:05,000 --> 00:02:09,000
The Sudoku problem says, "Is there a way of filling it in?"

26
00:02:09,000 --> 00:02:12,000
And the certificate that we use is, well, we'll show you how it's filled in.

27
00:02:12,000 --> 00:02:15,000
It fits both half of this definition, so this problem is an NP.

28
00:02:15,000 --> 00:02:20,000
Now let's be a little careful here because Sudoku as it's typically designed,

29
00:02:20,000 --> 00:02:24,000
doesn't really have an input size; all the inputs are of the same size.

30
00:02:24,000 --> 00:02:27,000
but you can imagine a generalization of Sudoku where you have a bigger grid

31
00:02:27,000 --> 00:02:31,000
and maybe more symbols and the same kind of verification procedure works.

32
00:02:31,000 --> 00:02:33,000
The bigger the grid gets, the longer it takes to run,

33
00:02:33,000 --> 00:02:38,000
but it's always a polynomial in the size of the input grid.

34
00:02:38,000 --> 00:02:42,000
Let's try to put this definition to work and answer the following question:

35
00:02:42,000 --> 00:02:46,000
Is P contained within or possibly equal to NP?

36
00:02:46,000 --> 00:02:52,000
So one possibility here is, I don't know, and if I knew that, I'd win a Fields Metal!,

37
00:02:52,000 --> 00:02:55,000
meaning sort of the equivalent of the Math Nobel Prize

38
00:02:55,000 --> 00:02:58,000
because this is a big important open question.

39
00:02:58,000 --> 00:03:04,000
The other choice is no, P is not contained within NP because if the problem is NP,

40
00:03:04,000 --> 00:03:08,000
it means it's decidable in polynomial time and we don't need any kind of certificate

41
00:03:08,000 --> 00:03:12,000
and so, it's not an NP and then finally the opposite of that is,

42
00:03:12,000 --> 00:03:17,000
yes if it can be decided in polynomial time, no certificate is needed.

43
00:03:17,000 --> 00:03:25,000
So if you have a problem that's NP, then you don't need any sort of certificate, so it's also in NP.
