1
00:00:00,000 --> 00:00:02,000
Again this is fairly easy to realize,

2
00:00:02,000 --> 00:00:05,000
because we already have a template up here.

3
00:00:05,000 --> 00:00:08,000
So again, we have an index to the list of saved commands,

4
00:00:08,000 --> 00:00:10,000
which we call saved command index.

5
00:00:10,000 --> 00:00:13,000
So, at this moment we are in replay mode.

6
00:00:13,000 --> 00:00:16,000
While we are in replay mode the original input command function

7
00:00:16,000 --> 00:00:18,000
should no longer be called.

8
00:00:18,000 --> 00:00:21,000
All of the commands should now come from the saved commands in here.

9
00:00:21,000 --> 00:00:23,000
Let's see how this works.

10
00:00:23,000 --> 00:00:26,000
We get the same set of commands now being read

11
00:00:26,000 --> 00:00:28,000
from the saved commands variable.

12
00:00:28,000 --> 00:00:31,000
You read a program that is outside of the webpage

13
00:00:31,000 --> 00:00:34,000
one would now go and store the saved commands content

14
00:00:34,000 --> 00:00:37,000
permanently, say in a file for recording and for replaying.

15
00:00:37,000 --> 00:00:40,000
One would read this from a file.

16
00:00:40,000 --> 00:00:43,000
For programs that take text based commands,

17
00:00:43,000 --> 00:00:46,000
recording and replaying input is fairly easy to realize.

18
00:00:46,000 --> 00:00:50,000
However, as it comes to reproducing graphical user interaction

19
00:00:50,000 --> 00:00:55,000
it becomes hard to decide what of events to record and replay.

20
00:00:55,000 --> 00:00:58,000
Suppose you have a graphical user interface for a web browser.

21
00:00:58,000 --> 00:01:01,000
You have a captured replay tool that interposes itself

22
00:01:01,000 --> 00:01:05,000
between the user and the program and stores all events

23
00:01:05,000 --> 00:01:09,000
coming from the user in an event log such that they can be later replayed.

24
00:01:09,000 --> 00:01:11,000
The problem is: What is the abstraction level

25
00:01:11,000 --> 00:01:14,000
you're going to chose for your events?

26
00:01:14,000 --> 00:01:17,000
You could, for instance, go and record mouse clicks to gather with

27
00:01:17,000 --> 00:01:19,000
the coordinates of the mouse pointer.

28
00:01:19,000 --> 00:01:21,000
This is fairly easy to record.

29
00:01:21,000 --> 00:01:26,000
So, for instance, you could go and click here on search

30
00:01:26,000 --> 00:01:30,000
at the position, say 100x and 300y.

31
00:01:30,000 --> 00:01:36,000
Or, you could enter some text while the cursor is in the position 200 and 50.

32
00:01:36,000 --> 00:01:41,000
Click here on the file menu or here down on this roll-down menu.

33
00:01:41,000 --> 00:01:44,000
Of course, all of these then go into the event log.

34
00:01:44,000 --> 00:01:48,000
The problem is that for replaying, you need to have the exact

35
00:01:48,000 --> 00:01:54,000
same position of every element at the very same position on the screen.

36
00:01:54,000 --> 00:01:58,000
Now suppose your screen resolution changes. or the font size changes.

37
00:01:58,000 --> 00:02:02,000
Then some of the elements will still be more or less in their original positions,

38
00:02:02,000 --> 00:02:04,000
but others won't.

39
00:02:04,000 --> 00:02:07,000
We knew that the mouse click, which previously activated

40
00:02:07,000 --> 00:02:10,000
a particular button on the screen, will no longer work

41
00:02:10,000 --> 00:02:13,000
Likewise, if the position of some elements change,

42
00:02:13,000 --> 00:02:16,000
then as well, the recorded events will no longer work.

43
00:02:16,000 --> 00:02:19,000
Also, timing can become an issue.

44
00:02:19,000 --> 00:02:22,000
Suppose you recorded a click on this drop-down menu.

45
00:02:22,000 --> 00:02:25,000
Half a second later, when the drop-down menu appeared,

46
00:02:25,000 --> 00:02:27,000
you clicked on one of the elements in here.

47
00:02:27,000 --> 00:02:29,000
So far, so good.

48
00:02:29,000 --> 00:02:31,000
This is what you recorded.

49
00:02:31,000 --> 00:02:33,000
Now when you're replaying, and in particular,

50
00:02:33,000 --> 00:02:35,000
when you are replaying something from a web page,

51
00:02:35,000 --> 00:02:38,000
it may be that there are delays,

52
00:02:38,000 --> 00:02:41,000
and the drop-down menu will not appear on time.

53
00:02:41,000 --> 00:02:44,000
Then you'd be clicking somewhere completely different when replaying

54
00:02:44,000 --> 00:02:47,000
the recorded events, which stipulate

55
00:02:47,000 --> 00:02:50,000
that after half a second you'd click in this very position.

56
00:02:50,000 --> 00:02:53,000
Finally, of course, the program itself may change.

57
00:02:53,000 --> 00:02:55,000
If the search button is moved from down here to up here,

58
00:02:55,000 --> 00:02:58,000
then again replaying the event log based on absolute coordinates

59
00:02:58,000 --> 00:03:00,000
will click in the wrong position.
