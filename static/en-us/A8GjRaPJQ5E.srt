1
00:00:00,080 --> 00:00:03,089
Now we see how to modify
the tree search function and

2
00:00:03,089 --> 00:00:07,990
make it be a graph search function
to avoid those repeated paths.

3
00:00:07,990 --> 00:00:11,839
What we do is we start off and
initialize the set,

4
00:00:11,839 --> 00:00:15,179
called the explored set,
of states that we've already explored.

5
00:00:16,350 --> 00:00:18,590
Then, when we consider a new path,

6
00:00:18,589 --> 00:00:21,678
we add the new state to the set
of already explored states.

7
00:00:22,850 --> 00:00:25,550
And then,
when we're expanding the path and

8
00:00:25,550 --> 00:00:29,713
adding in new states to the end of it,
we don't have that end,

9
00:00:29,713 --> 00:00:35,079
if we've already seen that new state
in either the frontier or the explored.

10
00:00:35,079 --> 00:00:37,179
Now back to Breadth-First Search, and

11
00:00:37,179 --> 00:00:39,590
let's assume we're using
the graph search so

12
00:00:39,590 --> 00:00:43,500
that we've eliminated the duplicate
path, Arad is crossed off the list.

13
00:00:43,500 --> 00:00:48,109
The path that goes from Arad to
Sibiu back to Arad is removed, and

14
00:00:48,109 --> 00:00:52,920
we're left with these one, two,
three, four, five possible paths.

15
00:00:52,920 --> 00:00:57,900
Given these five paths, show me which
ones are candidates to be expanded next

16
00:00:57,899 --> 00:01:00,055
by the Breadth-First Search algorithm.

