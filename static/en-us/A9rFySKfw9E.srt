1
00:00:00,660 --> 00:00:05,219
Android categorizes the device
screens using two general properties,

2
00:00:05,219 --> 00:00:07,660
size and pixel density.

3
00:00:07,660 --> 00:00:10,250
And you'll have to take
both into consideration

4
00:00:10,250 --> 00:00:14,250
when you design your app's layouts,
and include any image resources.

5
00:00:14,250 --> 00:00:18,320
Density is the number of pixels in
the physical area of the screen, and

6
00:00:18,321 --> 00:00:21,092
it's often measured in dots per inch,
or dpi.

7
00:00:21,091 --> 00:00:26,006
There are five density ranges that you
should be familiar with for Android,

8
00:00:26,006 --> 00:00:29,382
and I will refer to those
ranges as density buckets,

9
00:00:29,382 --> 00:00:31,948
which most Android devices fall into.

10
00:00:31,948 --> 00:00:36,201
There is m mdpi, hdpi,

11
00:00:36,201 --> 00:00:41,527
xhdpi, xxhdpi and xxxhdpi.

12
00:00:41,527 --> 00:00:47,916
This range from a medium density of
about 160 dots per inch to an extra,

13
00:00:47,915 --> 00:00:52,979
extra, extra high density
of about 640 dots per inch.

14
00:00:52,979 --> 00:00:58,569
Which has many more smaller tiny
pixels in the same screen size.

15
00:00:58,570 --> 00:01:01,875
And a greater number of
smaller pixels allow for

16
00:01:01,875 --> 00:01:06,593
a sharper and better image quality
on those high density displays.

17
00:01:06,593 --> 00:01:11,780
The same physical area on one of those
high density devices will actually

18
00:01:11,781 --> 00:01:17,219
take up more pixels than that same
area on a smaller density screen.

19
00:01:17,219 --> 00:01:21,849
So how can we make sure that any
margins or images you include

20
00:01:21,849 --> 00:01:25,339
would look the same across those
different device resolutions.

21
00:01:25,340 --> 00:01:29,352
Well, you have to use
density-independent pixels, or dps for

22
00:01:29,352 --> 00:01:29,905
short.

23
00:01:29,905 --> 00:01:37,061
Density-independent pixels are the same
physical size on each device.

24
00:01:37,061 --> 00:01:41,933
So 48 x 48 dp image on this high
density screen will appear the same

25
00:01:41,933 --> 00:01:46,520
size as a 48 x 48 dp image on
the medium density screen.

26
00:01:46,519 --> 00:01:50,450
But the image on the high density screen
will be actually made up by a lot

27
00:01:50,450 --> 00:01:51,829
more pixels.

28
00:01:51,829 --> 00:01:56,549
So in general, we want to use those
dps for spacing and images, so

29
00:01:56,549 --> 00:01:59,939
that we can design for
size and not pixel by pixel.

30
00:01:59,939 --> 00:02:03,597
And if you include images in your app,
you should provide multiple

31
00:02:03,597 --> 00:02:06,408
image resources that
are appropriately scaled for

32
00:02:06,409 --> 00:02:08,775
each of the generalized density buckets.

33
00:02:08,775 --> 00:02:13,239
If you only provide one size of image
Android might have to scale that image

34
00:02:13,239 --> 00:02:14,780
for each device.

35
00:02:14,780 --> 00:02:18,650
This takes some processing power and
might distort the image.

36
00:02:18,650 --> 00:02:23,599
So providing correctly sized images for
common density buckets helps you

37
00:02:23,599 --> 00:02:28,289
achieve good graphical quality and
performance across different devices.

38
00:02:28,289 --> 00:02:32,054
And you can actually see an example of
this in your project resources folder,

39
00:02:32,055 --> 00:02:37,340
where it contains multiple Android
icons over different pixel dimensions.

40
00:02:37,340 --> 00:02:41,250
But at the end they will all
appear the same physical sizes

41
00:02:41,250 --> 00:02:42,860
across different devices.

42
00:02:42,860 --> 00:02:46,950
Another type of alternative resource
we can provide are resources for

43
00:02:46,949 --> 00:02:51,069
different layouts, based on the size and
orientation of our screen.

44
00:02:51,069 --> 00:02:52,519
Let's take a look at that next.

