1
00:00:00,330 --> 00:00:04,710
The greedy approach leads to what is called a meta-server

2
00:00:04,710 --> 00:00:09,810
overload. Let's understand how that happens. Let's say that

3
00:00:09,810 --> 00:00:15,080
there's a whole bunch of users that are generating content, and

4
00:00:15,080 --> 00:00:20,310
one guy generates a content with a key of 149, another guy Generates a

5
00:00:20,310 --> 00:00:26,220
content with a key 148, 152, 153 and so on and

6
00:00:26,220 --> 00:00:27,950
now what they want to do is they want to

7
00:00:27,950 --> 00:00:31,910
place this key value pair this guy's node ID is

8
00:00:31,910 --> 00:00:34,050
80. This guy's node ID is something else. Something else

9
00:00:34,050 --> 00:00:38,310
something else and all these guys want to keep the

10
00:00:38,310 --> 00:00:41,340
key value pair and what will they do in terms

11
00:00:41,340 --> 00:00:44,110
of this greedy algorithm well they'll try to find a

12
00:00:44,110 --> 00:00:48,050
node whose id is closest to the key that they

13
00:00:48,050 --> 00:00:51,240
want to place. Well it turns out that 150 is

14
00:00:51,240 --> 00:00:54,820
the closest. ID corresponding to all of these

15
00:00:54,820 --> 00:00:56,860
keys that we're talking about here, so all of

16
00:00:56,860 --> 00:01:03,970
these puts will result in going to one node, namely the node ID 150, in terms of

17
00:01:03,970 --> 00:01:06,500
the put operation. And, first of all there's

18
00:01:06,500 --> 00:01:09,012
going to be congestion here if a lot of.

19
00:01:09,012 --> 00:01:13,760
Content hashed to a key that are so closely

20
00:01:13,760 --> 00:01:16,560
together they all end up in the same node

21
00:01:16,560 --> 00:01:19,780
ID 150. Remember that the actual content is

22
00:01:19,780 --> 00:01:22,130
with the putter of this key value pair,

23
00:01:22,130 --> 00:01:25,490
namely node 80. And, similarly, the content Is

24
00:01:25,490 --> 00:01:28,370
with this putter, content with this putter. What

25
00:01:28,370 --> 00:01:31,000
this guy is storing is the metadata that

26
00:01:31,000 --> 00:01:35,590
allows everybody to discover the content provider. So

27
00:01:35,590 --> 00:01:42,040
not only is this node going to find a lot of traffic if lots of keys map

28
00:01:42,040 --> 00:01:48,410
to its node ID, also the nodes that are adjacent to this node In the overlay

29
00:01:48,410 --> 00:01:52,350
network, they are going to be affected also.

30
00:01:52,350 --> 00:01:54,460
Everybody is trying to reach this guy so you

31
00:01:54,460 --> 00:01:57,690
can see that as we go towards this,

32
00:01:57,690 --> 00:02:00,780
there's sort of a presaturation effect that's going

33
00:02:00,780 --> 00:02:03,980
on. The tree is rooted at this destination

34
00:02:03,980 --> 00:02:07,530
node, and the nodes that are in close proximity,

35
00:02:07,530 --> 00:02:10,250
the intermediate nodes in the overlay network

36
00:02:10,250 --> 00:02:14,310
space They get congested, and so on. And

37
00:02:14,310 --> 00:02:18,990
that is what is sometimes referred to as a desaturation problem. Now this is for

38
00:02:18,990 --> 00:02:23,990
the putters. Further, if my content whose

39
00:02:23,990 --> 00:02:26,630
key value is toward here, the video that

40
00:02:26,630 --> 00:02:29,070
I generated from my India trip. If that

41
00:02:29,070 --> 00:02:32,830
gets hot, and everybody wants to Find out

42
00:02:32,830 --> 00:02:36,480
how to achieve that particular video 149. They're

43
00:02:36,480 --> 00:02:40,300
all going to make get calls. And these

44
00:02:40,300 --> 00:02:43,020
get calls again end up with this same

45
00:02:43,020 --> 00:02:45,800
metadata server, because that's the guy that is

46
00:02:45,800 --> 00:02:51,670
storing my key value pair 149, 80. And so all these gets saying that I want to

47
00:02:51,670 --> 00:02:58,180
get 149, I want to get 149, I want to get 149. All of them. Go to the same

48
00:02:58,180 --> 00:03:04,680
node ID 150. Again there is congestion at the meta data so it can happen either

49
00:03:04,680 --> 00:03:08,630
because some content is so popular that everybody

50
00:03:08,630 --> 00:03:11,880
that wants to discover the content provider they

51
00:03:11,880 --> 00:03:15,810
have only the key and they have to go to the metadata server to find out

52
00:03:15,810 --> 00:03:18,940
the content provider So that results in this

53
00:03:18,940 --> 00:03:23,370
congestion, which is the metadata server overload problem.

54
00:03:23,370 --> 00:03:27,080
And the combination of these puts and gets result in what I

55
00:03:27,080 --> 00:03:33,210
called the tree saturation problem, the tree being rooted at the congested node

56
00:03:33,210 --> 00:03:39,610
and affecting all the nearby nodes In the overlay network because they

57
00:03:39,610 --> 00:03:44,910
are the gateway to get this node that contains this particular key value pair.
