1
00:00:00,310 --> 00:00:04,230
All right, back to computer vision,
some really cool stuff today.

2
00:00:04,230 --> 00:00:06,750
We're going to be talking
about boosting and one of the,

3
00:00:07,840 --> 00:00:11,600
applications of machine learning
classification to computer vision,

4
00:00:11,600 --> 00:00:16,640
that really caused a bunch of us and the
rest of the computer vision community,

5
00:00:16,640 --> 00:00:20,090
to say, oh, we really gotta
pay attention to how all this,

6
00:00:21,330 --> 00:00:25,310
notion of integrating, discriminative
classifiers, the notion of detection,

7
00:00:25,310 --> 00:00:29,650
and image features and representation
as a, as a holistic thing.

8
00:00:29,650 --> 00:00:32,540
So last time we introduced
discriminative classification and

9
00:00:32,540 --> 00:00:34,790
the basic outline was
there are two elements.

10
00:00:34,790 --> 00:00:37,180
There's the train, and there's test.

11
00:00:37,180 --> 00:00:38,200
For training,

12
00:00:38,200 --> 00:00:41,640
you basically have to figure out what
representation am I going to build,

13
00:00:41,640 --> 00:00:45,770
how do I construct a model or, or
a description of each instance?

14
00:00:45,770 --> 00:00:47,950
So I describe these training instances,

15
00:00:47,950 --> 00:00:51,460
and then I have to build a classifier,
train a classifier.

16
00:00:51,460 --> 00:00:54,170
And we said once we've done
that when new things come in,

17
00:00:54,170 --> 00:00:57,815
might take some work to figure out how
to generate candidates in the new image.

18
00:00:57,815 --> 00:01:00,810
Or you might just slide windows
around to different sizes and

19
00:01:00,810 --> 00:01:03,400
then you have to score them, all right.

20
00:01:03,400 --> 00:01:06,620
We talked about a relatively
simple method last time called

21
00:01:06,620 --> 00:01:11,090
nearest neighbor,
as it just very date intensive.

22
00:01:11,090 --> 00:01:15,290
You pull up the nearest one, which was
implicitly representing the boundary

23
00:01:15,290 --> 00:01:18,370
between every single point,
remember that Voronoi tessellation.

24
00:01:19,630 --> 00:01:22,820
Today we're going to talk about
a different method called boosting and

25
00:01:22,820 --> 00:01:26,180
in particular, we're going to
talk about it in the context

26
00:01:26,180 --> 00:01:30,240
of a particular method that, that used
it that sort of shows you the power.
