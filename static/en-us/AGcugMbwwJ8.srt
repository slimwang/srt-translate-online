1
00:00:00,440 --> 00:00:02,420
When I say scrolling in parallel,

2
00:00:02,420 --> 00:00:05,820
what I'm really talking
about is Parallax Scrolling.

3
00:00:05,820 --> 00:00:10,260
And Parallax Scrolling as in we
have different layers of views

4
00:00:10,260 --> 00:00:12,700
scrolling at different speeds.

5
00:00:12,700 --> 00:00:16,570
It's one way that we create the illusion
of depth in material, and it's really

6
00:00:16,570 --> 00:00:20,590
easy to do with Recycler view when
targeting Honeycomb and above devices.

7
00:00:20,590 --> 00:00:22,570
Now our app will continue
to work on Gingerbread,

8
00:00:22,570 --> 00:00:24,720
just without Parallax Scrolling.

9
00:00:24,720 --> 00:00:29,120
Now we're only going to add this
scrolling into our phone landscape view.

10
00:00:29,120 --> 00:00:31,790
And it's easy to do this by
creating a view that can only be

11
00:00:31,790 --> 00:00:33,240
found in landscape.

12
00:00:33,240 --> 00:00:39,680
Inside of our landscape frag bit main,
we'll rename at bar to parallax bar.

13
00:00:39,680 --> 00:00:44,410
Then inside of our Forecast Fragment
if we find parallax bar and

14
00:00:44,410 --> 00:00:49,310
we're on at least Honeycombe, add an on
scroll listener to our Recycler view.

15
00:00:49,310 --> 00:00:52,420
The cool thing about recycler
view is that it unlike list view

16
00:00:52,420 --> 00:00:55,430
actually returns the delta x or
y scroll.

17
00:00:55,430 --> 00:01:00,640
And this is perfect because we can
use this to set translation y to move

18
00:01:00,640 --> 00:01:05,500
our parallaxview up and down in response
to the scrolling of our Recycler view.

19
00:01:05,500 --> 00:01:09,078
The regular list view does not actually
return you these delta coordinates at

20
00:01:09,078 --> 00:01:10,960
all, and it's somewhat frustrating.
