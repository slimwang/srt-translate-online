1
00:00:05,336 --> 00:00:06,161
>> James, you know,

2
00:00:06,161 --> 00:00:10,200
I really like how we're getting immediate visual results from our code.

3
00:00:10,200 --> 00:00:12,250
>> JavaScript's fun like that.

4
00:00:12,250 --> 00:00:14,080
It runs natively in the browser.

5
00:00:14,080 --> 00:00:17,080
And it allows us to run an inspector code very easily.

6
00:00:17,080 --> 00:00:20,050
That's something you should be doing when you're starting out as a developer.

7
00:00:20,050 --> 00:00:20,879
>> Yeah, it really is.

8
00:00:21,900 --> 00:00:23,850
By the way, why are we in your GitHub again?

9
00:00:23,850 --> 00:00:25,920
>> Because this is where I store my code and

10
00:00:25,920 --> 00:00:29,660
I wanted to get the students thinking about what it means to save their data.

11
00:00:31,440 --> 00:00:33,080
>> Like other programming languages,

12
00:00:33,080 --> 00:00:36,850
JavaScript gives us a way of saving data in the form of variables.

13
00:00:36,850 --> 00:00:39,230
The syntax looks like this.

14
00:00:39,230 --> 00:00:43,980
Var, variable name equals some valuable.

15
00:00:43,980 --> 00:00:46,760
To declare a new variable you begin with the keyword var,

16
00:00:47,840 --> 00:00:49,690
regardless of the data type your saving.

17
00:00:51,110 --> 00:00:52,320
In the example here,

18
00:00:53,680 --> 00:00:59,800
we're creating a variable called firstName in assigning it the string james.

19
00:00:59,800 --> 00:01:02,260
The string comes in closing quotes.

20
00:01:02,260 --> 00:01:05,730
Notice that saving variables is slightly different than Python,

21
00:01:05,730 --> 00:01:08,800
which doesn't require a key word like var.

22
00:01:08,800 --> 00:01:11,310
But otherwise, works the same.

23
00:01:11,310 --> 00:01:12,220
>> Good point.

24
00:01:12,220 --> 00:01:16,288
But otherwise, saving variables in Python and JavaScript are pretty similar.

25
00:01:16,288 --> 00:01:19,010
Numbers in JavaScript don't need quotes and there's no need to

26
00:01:19,010 --> 00:01:21,910
worry about any of the nuances between floating point numbers and

27
00:01:21,910 --> 00:01:26,340
integers, because all numbers are saved 64 bit floating point.

28
00:01:26,340 --> 00:01:29,600
>> Later on we'll see that arrays, functions and

29
00:01:29,600 --> 00:01:33,580
even objects use the same var syntax.

30
00:01:34,600 --> 00:01:37,350
Let us see if our variables were actually saved.

31
00:01:37,350 --> 00:01:41,750
I'm going to add console.log(firstName).

32
00:01:41,750 --> 00:01:45,280
Save this file and reload the website.

33
00:01:45,280 --> 00:01:48,200
Opening up the console to see if it shows up.

34
00:01:48,200 --> 00:01:49,370
>> And there it is.

35
00:01:49,370 --> 00:01:50,850
I like that strategy.

36
00:01:50,850 --> 00:01:53,750
The browser opens up a script with console.log in it.

37
00:01:53,750 --> 00:01:57,520
It'll print whatever information it receives to the browser console.

38
00:01:57,520 --> 00:01:58,240
>> Yep.

39
00:01:58,240 --> 00:01:59,920
It's a useful trick for debugging code.
