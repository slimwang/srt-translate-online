1
00:00:00,000 --> 00:00:03,000
The last mode of operation I'm going to talk about is called

2
00:00:03,000 --> 00:00:08,000
Cipher Feedback Mode--also known as CFB--

3
00:00:08,000 --> 00:00:12,000
There are many different modes of operation. We won't talk about them all.

4
00:00:12,000 --> 00:00:15,000
But the ones that I've talked about will give you a good sense

5
00:00:15,000 --> 00:00:17,000
of the modes of operation work.

6
00:00:17,000 --> 00:00:19,000
This one's a bit different from the others that we've seen so far.

7
00:00:19,000 --> 00:00:24,000
It does use some encryption function as a black box, like the others,

8
00:00:24,000 --> 00:00:27,000
We'll call the input to that encryption the X-values.

9
00:00:27,000 --> 00:00:34,000
So X_0, X_1, X_2... are the inputs

10
00:00:34,000 --> 00:00:39,000
of successive encryptions. So the first one will be an initialization vector

11
00:00:39,000 --> 00:00:42,000
Similarly to how we've used that in other modes of operation.

12
00:00:42,000 --> 00:00:45,000
And that would be in the input to encrypt. There's also a key.

13
00:00:45,000 --> 00:00:50,000
The output of encrypt is some encrypted block. We'll use n as the encryption size.

14
00:00:50,000 --> 00:00:55,000
So for AES, we'll assume n is 128 bits.

15
00:00:55,000 --> 00:00:58,000
Whatever the block size is--so that size of input block

16
00:00:58,000 --> 00:01:01,000
and the size of output from encrypt is 128 bits.

17
00:01:01,000 --> 00:01:05,000
This cipher has an additional parameter, which we'll call S,

18
00:01:05,000 --> 00:01:08,000
and S is how we're going to divide the output.

19
00:01:08,000 --> 00:01:11,000
We're going to take the first S bits of the output

20
00:01:11,000 --> 00:01:16,000
and those will be EXOR'd with that message b lock

21
00:01:16,000 --> 00:01:18,000
producing the output cipher text.

22
00:01:18,000 --> 00:01:23,000
This looks very similar to CFB, except for we haven't used the entire output here

23
00:01:23,000 --> 00:01:26,000
The other thing that we're going to do is we're going to use the cipher text

24
00:01:26,000 --> 00:01:30,000
to update the X-value--so we're going to take these S-bits

25
00:01:30,000 --> 00:01:33,000
we're going to put them into the next X-value

26
00:01:33,000 --> 00:01:36,000
and we're going to move the old value S-bits to the left.

27
00:01:36,000 --> 00:01:40,000
So that means we're going to be taking the n - s bits

28
00:01:40,000 --> 00:01:43,000
that are the right part of the previous value

29
00:01:43,000 --> 00:01:46,000
of X_0 and we're going to be moving those into here.

30
00:01:46,000 --> 00:01:50,000
Everything else proceeds the same way--with--we encrypt the X-value--

31
00:01:50,000 --> 00:01:54,000
we get our output block--we take the left-most S bits of it

32
00:01:54,000 --> 00:01:57,000
we EXOR that with a message, we get our ciphertext block.

33
00:01:57,000 --> 00:02:01,000
and this keeps going. So we can describe that process

34
00:02:01,000 --> 00:02:05,000
first we'll describe what happens with X-values

35
00:02:05,000 --> 00:02:10,000
So value X_i is the result of taking the previous value of X_i

36
00:02:10,000 --> 00:02:15,000
so that's value X_i - 1, so the left value of X_i.

37
00:02:15,000 --> 00:02:20,000
Taking from position n - S to the end, I'm going to use Pythonic notation for this--

38
00:02:20,000 --> 00:02:24,000
we're taking from position S to the end of the previous value of X

39
00:02:24,000 --> 00:02:29,000
and we're concatenating that with the value of the previous ciphertext.

40
00:02:29,000 --> 00:02:33,000
So this is to find--as recurrence--we need to find the initial value

41
00:02:33,000 --> 00:02:36,000
and that was given by the IV--

42
00:02:36,000 --> 00:02:39,000
the Initialization Vector--so that's how we update those values--

43
00:02:39,000 --> 00:02:43,000
how we compute the ciphertext values--we compute the ciphertext values

44
00:02:43,000 --> 00:02:48,000
by taking the outputs here--that's the result of encrypting

45
00:02:48,000 --> 00:02:53,000
using key K--the X-value for that position--

46
00:02:53,000 --> 00:02:56,000
And we're going to take just positions up to S, and then we're going to

47
00:02:56,000 --> 00:03:01,000
EXOR that with the message. So this is how we compute the ciphertext blocks

48
00:03:01,000 --> 00:03:05,000
in the Cipher Feedback Mode. The important thing that you should notice here

49
00:03:05,000 --> 00:03:08,000
is that there's this additional parameter S, and what S means is that

50
00:03:08,000 --> 00:03:13,000
size of the message block. And the value of S should be less than the value of N

51
00:03:13,000 --> 00:03:16,000
--that's the normal block size of the cipher--otherwise, we wouldn't have any

52
00:03:16,000 --> 99:59:59,999
input left--it would end up being a different mode.
