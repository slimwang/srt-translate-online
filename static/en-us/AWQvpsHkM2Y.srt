1
00:00:00,000 --> 00:00:03,000
And now for the homework. It comes in two parts.

2
00:00:03,000 --> 00:00:06,000
In the first part, you get a mystery-test function

3
00:00:06,000 --> 00:00:10,000
that is the function which returns pass or fail,

4
00:00:10,000 --> 00:00:12,000
for which you don't have the source code,

5
00:00:12,000 --> 00:00:16,000
and you get 5 string inputs all representing HTML input.

6
00:00:16,000 --> 00:00:20,000
Your job is to determine 5 simplified inputs

7
00:00:20,000 --> 00:00:26,000
in which every character is relevant and which make the mystery-test function fail.

8
00:00:26,000 --> 00:00:28,000
So, from a hundred-line input,

9
00:00:28,000 --> 00:00:33,000
this is supposed to return the 1 line or the 8 characters or whatever it is

10
00:00:33,000 --> 00:00:36,000
that suffice to make the mystery-test function fail.

11
00:00:36,000 --> 00:00:38,000
Hint: There is Delta Debugging for it.

12
00:00:38,000 --> 00:00:40,000
The second part is actually just the same as above.

13
00:00:40,000 --> 00:00:45,000
However, try to produce these simplified inputs with a minimum of tests.

14
00:00:45,000 --> 00:00:49,000
For this you can rely on the HTML structure, as we just saw.

15
00:00:49,000 --> 00:00:53,000
Your challenge, of course, is to split these inputs

16
00:00:53,000 --> 00:00:58,000
into tokens, attributes, and regular text in the first place.

17
00:00:58,000 --> 00:01:02,000
Second, not only should your approach take a minimum of tests

18
00:01:02,000 --> 00:01:06,000
for these 5 inputs but also for other arbitrary inputs.

19
00:01:06,000 --> 00:01:10,000
And also, possibly, for other arbitrary mystery-test functions.

20
00:01:10,000 --> 00:01:13,000
We might even make a competition of that.

21
00:01:13,000 --> 00:01:17,000
Who is able to come up with the best simplifier for HTML?

22
00:01:17,000 --> 00:01:21,000
The winner will get La Grande Coupe de DÃ©bogage Delta,

23
00:01:21,000 --> 00:01:23,000
which is how Delta Debugging is called in French. Enjoy.
