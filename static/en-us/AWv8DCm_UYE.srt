1
00:00:00,000 --> 00:00:03,820
Now that we have four possible states for our two bit predictor there is

2
00:00:03,820 --> 00:00:08,096
an interesting question of does it matter in which state we start the predictor

3
00:00:08,096 --> 00:00:12,085
off. So with the one bit predictor we had to start it in either zero or

4
00:00:12,085 --> 00:00:16,460
one state. If we start it in the not taken state, zero, that means that if

5
00:00:16,460 --> 00:00:21,068
the branch is not taken it will start predicting correctly right off the bat.

6
00:00:21,068 --> 00:00:25,770
Is we start predicting zero but the branches actually mostly taken we will have

7
00:00:25,770 --> 00:00:30,613
a single mis-prediction before we start doing taken. For a two bit predictor,

8
00:00:30,613 --> 00:00:34,640
however, the question is really should we start in one of the strong

9
00:00:34,640 --> 00:00:39,108
conviction states or should we start in one of the weak prediction states.

10
00:00:39,108 --> 00:00:44,020
If we start in a strong state, for example zero, zero, and

11
00:00:44,020 --> 00:00:49,032
the actual decisions are not taken, then we will stay in that

12
00:00:49,032 --> 00:00:54,580
same strong state and never have any missed predictions. However,

13
00:00:54,580 --> 00:00:59,735
if we start in the strong state zero, zero, but the branch tends to be taken.

14
00:00:59,735 --> 00:01:04,836
We will mispredict once, move to the zero one, the weak not taken state.

15
00:01:04,836 --> 00:01:10,232
Missed predict again and then start predicting correctly. If we start in

16
00:01:10,232 --> 00:01:14,324
a strong state and it's the correct strong state we have no missed predictions,

17
00:01:14,324 --> 00:01:17,590
if it's the wrong strong state we have two missed predictions.

18
00:01:17,590 --> 00:01:21,949
If however we start in a weak state such as zero one. And

19
00:01:21,949 --> 00:01:26,750
we started in the correct weak state. We will just move to the strong state and

20
00:01:26,750 --> 00:01:30,506
still have all correct predictions. So, in the case when we

21
00:01:30,506 --> 00:01:35,197
guessed right what should be the dominant behavior in the starting state,

22
00:01:35,197 --> 00:01:39,814
we have perfect prediction regardless of whether we start in the strong or

23
00:01:39,814 --> 00:01:45,171
weak state. However, If we were wrong about where to start and

24
00:01:45,171 --> 00:01:50,885
we start in, let's say, zero, one, but now the branch is mostly taken,

25
00:01:50,885 --> 00:01:55,876
we will have one missed prediction here and now we will be moving to

26
00:01:55,876 --> 00:02:01,464
the weak taken state and start having correct predictions from then on.

27
00:02:01,464 --> 00:02:05,972
So if we start in a weak state, we don't lose anything if we were right. But

28
00:02:05,972 --> 00:02:12,070
we gain one less misprediction, if we were wrong about what should be the bias.

29
00:02:12,070 --> 00:02:17,950
So this argument means that probably, we should be starting in the weak state.

30
00:02:17,950 --> 00:02:22,030
Pick one, doesn't really matter. However, there is a flip side to it.

31
00:02:22,030 --> 00:02:27,542
Let's say that the branch is taken, not taken, taken, not taken. And

32
00:02:27,542 --> 00:02:32,863
we start in the strong state. The branch is taken so we move to the weak state.

33
00:02:32,863 --> 00:02:37,220
Then it's not taken so we move back to the strong state. And so on,

34
00:02:37,220 --> 00:02:42,357
we missed predict here, but we correctly predicted here and here, so

35
00:02:42,357 --> 00:02:47,863
half the time we have missed predictions. If we started in the one, one state,

36
00:02:47,863 --> 00:02:52,963
we would have a similar behavior, we would mis-predict every other time, but

37
00:02:52,963 --> 00:02:57,245
if we start in the wrong weak state and have the same behavior here.

38
00:02:57,245 --> 00:03:01,940
If the branch is taken and we have a weak not taken. We mis-predict and

39
00:03:01,940 --> 00:03:05,807
we move to the weak taken state. Now the branch is not taken so

40
00:03:05,807 --> 00:03:10,317
we mis-predict again. And move back to the weak not taken state. Branch is

41
00:03:10,317 --> 00:03:14,842
taken again and so we mis-predict again. And we keep mis-predicting like this.

42
00:03:14,842 --> 00:03:21,230
So as far as worse case behavior on alternating branch decisions is concerned.

43
00:03:21,230 --> 00:03:25,790
Starting in a weak state, around some more risk of having this worst case

44
00:03:25,790 --> 00:03:30,370
behavior of always missed predicting. Fortunately, this is much more

45
00:03:30,370 --> 00:03:35,447
common behavior than this. So probably it's a good idea to start in a weak

46
00:03:35,447 --> 00:03:40,225
taken state because taken branches are slightly more common than not taken. But

47
00:03:40,225 --> 00:03:44,031
in reality, as you can see, it doesn't really matter much because if

48
00:03:44,031 --> 00:03:47,515
the branch is mostly taken, one missed prediction initially is

49
00:03:47,515 --> 00:03:51,451
not really going to be very costly to us because from then on it's going to

50
00:03:51,451 --> 00:03:55,523
behave the same way regardless of what we started off with. So in reality,

51
00:03:55,523 --> 00:03:59,348
although it seems like it's a good idea to start in the weak taken state.

52
00:03:59,348 --> 00:04:03,548
In practice the overall accuracy of the branch predictor is

53
00:04:03,548 --> 00:04:08,408
effected very little by what exactly do we start of in. So we might a well just

54
00:04:08,408 --> 00:04:12,060
start of in zero zero state because that the easiest state to initialize into.
