1
00:00:00,420 --> 00:00:04,950
So way back in lesson one, I told
you about the idea of a primary key,

2
00:00:04,950 --> 00:00:05,610
a column or

3
00:00:05,610 --> 00:00:10,030
columns that uniquely identify
whatever it is the table is about.

4
00:00:10,030 --> 00:00:11,940
Remember the bit about U.S. city and

5
00:00:11,940 --> 00:00:16,309
state not being unique, because there
are five Springfield's in Wisconsin.

6
00:00:16,309 --> 00:00:17,820
If we want a primary key for

7
00:00:17,820 --> 00:00:22,160
places, we have to use something like a
postal code or coordinates or something.

8
00:00:22,160 --> 00:00:26,300
In SQL, we need to tell the database
that something is a primary key if we

9
00:00:26,300 --> 00:00:29,050
want to explicitly relate
other tables to it.

10
00:00:29,050 --> 00:00:30,790
And here's how to do that.

11
00:00:30,790 --> 00:00:33,420
If you have a single column primary key,

12
00:00:33,420 --> 00:00:38,730
just put primary key after the column's
type when you create the table.

13
00:00:38,730 --> 00:00:42,140
Whereas if you have a multi
column primary key,

14
00:00:42,140 --> 00:00:45,010
you put it after all
the columns in the table.

15
00:00:45,010 --> 00:00:48,710
For instance, postal codes don't
have to be unique around the world,

16
00:00:48,710 --> 00:00:51,990
since two different countries could
use similar numbering systems.

17
00:00:51,990 --> 00:00:57,010
The US, Germany, and Indonesia among
others all use five digit postal codes.

18
00:00:57,010 --> 00:01:00,020
This means that if we wanted to
have a table of places that we

19
00:01:00,020 --> 00:01:03,580
can mail packages to, we'd want
to have both the postal code and

20
00:01:03,580 --> 00:01:06,440
the country as parts of the primary key.

21
00:01:06,440 --> 00:01:10,230
Remember, primary keys are meant to
uniquely identify the thing that

22
00:01:10,230 --> 00:01:11,800
a row is about.

23
00:01:11,800 --> 00:01:14,040
What do you think your
SQL database will do,

24
00:01:14,040 --> 00:01:18,070
if you try to insert a duplicate
value into a primary key column?

25
00:01:18,070 --> 00:01:20,130
In fact, let's make that a quiz.

26
00:01:20,130 --> 00:01:23,310
What should the database do,
when a user asks it to insert

27
00:01:23,310 --> 00:01:27,000
a second student with an ID number
that is the same as another student's?

28
00:01:27,000 --> 00:01:29,410
In other words, a duplicate primary key.

29
00:01:29,410 --> 00:01:32,140
Should it insert the new row anyway?

30
00:01:32,140 --> 00:01:35,650
Should it signal an error
like an exception in Python?

31
00:01:35,650 --> 00:01:38,620
Should it silently drop the new row?

32
00:01:38,620 --> 00:01:40,250
Or should it overwrite the old row?
