1
00:00:00,000 --> 00:00:02,000
What's the intuition?

2
00:00:02,000 --> 00:00:08,000
If you drive a car and your normal steering mode leads you to a trajectory far away from the goal,

3
00:00:08,000 --> 00:00:14,000
then what I submit you do is you notice over a long period of time you can't get closer.

4
00:00:14,000 --> 00:00:20,000
So you start steering more and more the more time goes by to the right to compensate this bias.

5
00:00:20,000 --> 00:00:26,000
As a result, when you drive you steer the car this way.

6
00:00:26,000 --> 00:00:30,000
To do so, you need a sustained situation of large error.

7
00:00:30,000 --> 00:00:35,000
That's measured by the integral or the sum of the crosstrack errors over time.

8
00:00:35,000 --> 00:00:41,000
Let's make a new controller where steering is proportional to the crosstrack errors before.

9
00:00:41,000 --> 00:00:45,000
It's equally proportional to the differential of the crosstrack error,

10
00:00:45,000 --> 00:00:50,000
but now it's also proportional to what's called the integral or the sum

11
00:00:50,000 --> 00:00:53,000
of all the crosstrack errors you ever observed.

12
00:00:53,000 --> 00:00:57,000
This term is interesting. If we have a constant crosstrack error of, say, 0.8

13
00:00:57,000 --> 00:01:02,000
and the sum will increase by 0.8 for each time unit, it'll become larger and larger and larger,

14
00:01:02,000 --> 00:01:05,000
and eventually it'll correct the robot's motion.

15
00:01:05,000 --> 00:01:07,000
This is called the PID controller.

16
00:01:07,000 --> 00:01:14,000
This is the P or the proportional term, the D or the differential term, and the i for integral.

17
00:01:14,000 --> 00:01:17,000
P-I-D.

18
00:01:17,000 --> 00:01:21,000
Let's implement this, and the integrated crosstrack error

19
00:01:21,000 --> 00:01:24,000
is the sum of all crosstrack errors you ever observed.

20
00:01:24,000 --> 00:01:27,000
Let's implement this in our code.

21
00:01:27,000 --> 00:01:31,000
I give you an integral factor of 0.004.

22
00:01:31,000 --> 00:01:36,000
Let's not worry why I picked those. They're actually wisely chosen, as you will see in a minute.

23
00:01:36,000 --> 00:01:44,000
But let's run our code and now modify our code to also allow for this parameter over here.
