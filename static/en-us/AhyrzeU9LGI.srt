1
00:00:00,350 --> 00:00:02,000
Let's get back to the real world now.

2
00:00:02,000 --> 00:00:05,470
Now that we've talked about separating things out, let's talk about what

3
00:00:05,470 --> 00:00:09,500
separation of concerns specifically means for writing applications.

4
00:00:09,500 --> 00:00:13,750
We can separate our code into a few fundamentally different pieces.

5
00:00:13,750 --> 00:00:19,640
In this course, we'll refer to them as M, V, and O, model, view, and octopus.

6
00:00:19,640 --> 00:00:20,575
Octopus, you ask?

7
00:00:20,575 --> 00:00:23,858
[SOUND] Yes, we have Larry the octopus to help us out.

8
00:00:23,858 --> 00:00:26,470
Now, let me tell you a little bit about Larry.

9
00:00:26,470 --> 00:00:29,380
Now, Larry really dislikes disorganized code.

10
00:00:30,510 --> 00:00:33,190
Actually, Larry hates disorganized code so

11
00:00:33,190 --> 00:00:36,500
much that Larry has decided to do something about it.

12
00:00:36,500 --> 00:00:38,920
Larry separates our concerns.

13
00:00:38,920 --> 00:00:41,060
Now, what does that actually mean?

14
00:00:41,060 --> 00:00:44,000
Well, no matter what the size of the application,

15
00:00:44,000 --> 00:00:47,290
programmers like to organize everything in a few buckets.

16
00:00:47,290 --> 00:00:49,470
Let's talk about them one by one.

17
00:00:49,470 --> 00:00:51,200
First, the view.

18
00:00:51,200 --> 00:00:54,430
This is all the stuff the user sees and interacts with.

19
00:00:54,430 --> 00:00:59,430
That includes DOM elements, input elements, buttons, and images.

20
00:00:59,430 --> 00:01:04,930
Basically, this is the user's interface to your application, both for

21
00:01:04,930 --> 00:01:07,640
giving your application data and for reading data.

22
00:01:07,640 --> 00:01:10,410
Now, speaking of data, here in the model,

23
00:01:10,410 --> 00:01:12,820
this is where all of the data is stored.

24
00:01:12,820 --> 00:01:16,440
That includes data from the server and from the user.

25
00:01:16,440 --> 00:01:21,585
Now, the model and the view are connected, specifically by our octopus.

26
00:01:21,585 --> 00:01:25,352
[SOUND] Our octopus is what provides the separation of concerns that we so

27
00:01:25,352 --> 00:01:28,322
desperately need when we're building applications.

28
00:01:28,322 --> 00:01:32,593
Now, you can think of the octopus as the thing that holds things together, but

29
00:01:32,593 --> 00:01:35,377
also keeps them separate enough to allow changes in

30
00:01:35,377 --> 00:01:38,710
individual pieces without upsetting the rest.

31
00:01:38,710 --> 00:01:43,250
In other words, I can change my view here without disturbing my model.

32
00:01:43,250 --> 00:01:47,020
Or I can change the way I'm storing my data without disturbing my

33
00:01:47,020 --> 00:01:48,360
view over here.

34
00:01:48,360 --> 00:01:54,180
If you search around the web, you'll find all kinds of acronyms, like MVC, MVVM,

35
00:01:54,180 --> 00:01:56,462
MVP, and MV*.

36
00:01:56,462 --> 00:01:58,520
These stand for a Model View Controller,

37
00:01:58,520 --> 00:02:04,090
Model View vVew model, Model View Presenter, or Model View whatever.

38
00:02:04,090 --> 00:02:07,410
Fundamentally, the C, VM, P, and

39
00:02:07,410 --> 00:02:12,100
asterisk are all solving the same problem, separating our model from our view.

40
00:02:12,100 --> 00:02:15,070
Now, you'll see all kinds of discussions online about how

41
00:02:15,070 --> 00:02:18,370
different these all are from each other and in what ways.

42
00:02:18,370 --> 00:02:21,810
But all of those discussions are assuming you already know that they're

43
00:02:21,810 --> 00:02:23,780
basically the same thing.

44
00:02:23,780 --> 00:02:27,510
So, we'll worry about the differences later, and for now, we'll consider these

45
00:02:27,510 --> 00:02:31,070
all versions of the same thing, [SOUND] and we will name them Octopus.
