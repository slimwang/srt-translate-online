1
00:00:00,430 --> 00:00:07,370
There are some additional advanced features of class models. Four that I'd like

2
00:00:07,370 --> 00:00:12,350
to just briefly mention are interfaces, parametrized classes, nested classes,

3
00:00:12,350 --> 00:00:17,620
and composite objects. If you're familiar with an object-oriented language like

4
00:00:17,620 --> 00:00:23,000
Java, you know that you can express in your program,

5
00:00:23,000 --> 00:00:29,000
a type by using the interface construct within Java.

6
00:00:29,000 --> 00:00:35,520
In UML you can also have interfaces. And in those interface descriptions,

7
00:00:35,520 --> 00:00:40,610
you typically describe what that interface provides to the rest of

8
00:00:40,610 --> 00:00:43,460
the system and what it requires from the rest of the system.

9
00:00:45,210 --> 00:00:50,275
Parameterized classes correspond to Java generics or

10
00:00:50,275 --> 00:00:56,460
C++ templates. That is, that is they provide a way of, for example,

11
00:00:56,460 --> 00:01:01,604
describing collection classes by giving a parameter that is a type of the class.

12
00:01:01,604 --> 00:01:07,940
You have a set of vehicles, you have a set of bank accounts. Thirdly,

13
00:01:07,940 --> 00:01:11,190
our nested classes. If you're familiar with Java,

14
00:01:11,190 --> 00:01:15,830
you know that within a Java class definition, you can have other classes.

15
00:01:15,830 --> 00:01:20,580
These are sometimes called nested classes or inner classes. And

16
00:01:20,580 --> 00:01:25,620
UML provides a feature for describing those situations. Finally, you can have

17
00:01:25,620 --> 00:01:31,830
composite objects. These are objects that contain other objects within them.

18
00:01:31,830 --> 00:01:36,360
Diagram allows you to express this by having class diagrams that have

19
00:01:36,360 --> 00:01:40,690
class rectangles that have other class rectangles in them. As I said,

20
00:01:40,690 --> 00:01:43,587
these are advanced features just so that you're aware that they're there.
