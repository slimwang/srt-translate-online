1
00:00:00,230 --> 00:00:03,490
At this point, we should've covered
a lot about what lighting is, and how to

2
00:00:03,490 --> 00:00:06,750
get the most out of it, to squeeze
the last bit of performance out of

3
00:00:06,750 --> 00:00:10,540
our scene, we just need to adjust a few
more settings and some other windows.

4
00:00:10,540 --> 00:00:14,850
Let's quickly go to Edit &gt;
Project Settings &gt; Quality.

5
00:00:16,180 --> 00:00:20,950
By default, Unity will list a few
settings for a variety of platforms.

6
00:00:20,950 --> 00:00:23,140
Since we're only interested in mobile,
lets go ahead and

7
00:00:23,140 --> 00:00:28,390
delete every setting except fastest and
then re name fastest to mobile.

8
00:00:30,370 --> 00:00:34,960
Now, we want to make sure that pixel
count is set to zero, texture quality is

9
00:00:34,960 --> 00:00:42,300
set to full, anti-aliasing is set to 2x,
and shadows are disabled.

10
00:00:42,300 --> 00:00:46,040
Going through those changes one by one,
let's start with pixel light count.

11
00:00:46,040 --> 00:00:50,620
Pixel light count tells Unity how many
realtime lights it should consider for

12
00:00:50,620 --> 00:00:51,990
a given pixel.

13
00:00:51,990 --> 00:00:54,590
Since we don't have any
realtime lights in our scene,

14
00:00:54,590 --> 00:00:57,890
we can set this value to 0 and be fine.

15
00:00:57,890 --> 00:01:01,350
I should point out that everything in
this panel refers to realtime settings,

16
00:01:01,350 --> 00:01:05,750
so disabling shadows here only
disables real time shadows and

17
00:01:05,750 --> 00:01:07,780
not our baked shadows.

18
00:01:07,780 --> 00:01:11,750
Next, we have tetra quality,
which we set to full.

19
00:01:11,750 --> 00:01:15,590
And while yes, on mobile devices we
should be careful about our quality.

20
00:01:15,590 --> 00:01:18,530
This setting is telling us whether
we want to lower the resolution of

21
00:01:18,530 --> 00:01:20,520
our textures even further.

22
00:01:20,520 --> 00:01:23,060
Since we've already optimized
the textures in our scene,

23
00:01:23,060 --> 00:01:24,800
we can set them to full.

24
00:01:24,800 --> 00:01:27,550
Last, we have anti aliasing.

25
00:01:27,550 --> 00:01:31,160
Aliasing is a problem that results
because we want to display continuous

26
00:01:31,160 --> 00:01:36,630
lines with discrete pixels,
this results in jagged lines.

27
00:01:36,630 --> 00:01:40,260
Unity luckily provides some
efficient algorithms to combat this.

28
00:01:40,260 --> 00:01:43,970
But nonetheless,
aliasing is a huge problem in VR

29
00:01:43,970 --> 00:01:47,350
because we're effectively
using only half the resolution

30
00:01:47,350 --> 00:01:52,290
AKA half the pixels of our display
since we need to render two images.

31
00:01:52,290 --> 00:01:55,900
Thus while it's extra
computation to use aliasing

32
00:01:55,900 --> 00:02:00,250
it results in a much better image
which is why we use anti-aliasing.

33
00:02:00,250 --> 00:02:04,050
And that covers the tweaks we need
to do in our quality settings.

34
00:02:04,050 --> 00:02:05,785
Now, time to put this in our phones.
