1
00:00:00,480 --> 00:00:03,847
So far we have discussed block ciphers,

2
00:00:03,847 --> 00:00:07,906
which take as an input
a fixed length data block,

3
00:00:07,906 --> 00:00:13,540
say in 64-bit 40 years,
or 128-bit for 8 years.

4
00:00:13,540 --> 00:00:17,217
What if you want to encrypt
a large message, that is,

5
00:00:17,217 --> 00:00:22,350
a message that's longer than 64-bit,
or even 128-bit?

6
00:00:22,350 --> 00:00:24,530
The solution seems obvious.

7
00:00:24,530 --> 00:00:28,260
Why can't we just break a message
into fixed-size blocks,

8
00:00:28,260 --> 00:00:32,720
apply a block cipher such as DES or
AES on the blocks, then

9
00:00:32,720 --> 00:00:37,290
the collection of the ciphertext blocks
is the ciphertext of the large message?

10
00:00:38,340 --> 00:00:39,430
Is that it?

11
00:00:39,430 --> 00:00:41,230
This seems to be very simple.

12
00:00:41,230 --> 00:00:45,300
Let's take a look at a few schemes
that encrypt a large message.

13
00:00:45,300 --> 00:00:51,050
The simplest way is the so-called
electronic code book method or ECB.

14
00:00:51,050 --> 00:00:57,060
Here, the original large message is
broken down into fixed-sized blocks,

15
00:00:57,060 --> 00:01:03,500
say 64-bit, and we pad the last block so
that it is also 64-bit.

16
00:01:03,500 --> 00:01:07,225
And then each plaintext block
is encrypted using the same key

17
00:01:07,225 --> 00:01:09,910
independently of each other.

18
00:01:09,910 --> 00:01:14,873
And the collection of these ciphertext
blocks is the ciphertext of the original

19
00:01:14,873 --> 00:01:16,660
large message.

20
00:01:16,660 --> 00:01:19,670
The term code book is used, because for

21
00:01:19,670 --> 00:01:25,310
given key, there is a unique ciphertext
block for every plaintext block.

22
00:01:25,310 --> 00:01:29,320
Therefore, we can construct
a gigantic code book

23
00:01:29,320 --> 00:01:34,130
in which there's an entry for
every possible plaintext block, and

24
00:01:34,130 --> 00:01:38,330
the table entry shows
the corresponding ciphertext block.

25
00:01:38,330 --> 00:01:43,220
Of course,
we construct one code book for each key.

26
00:01:43,220 --> 00:01:47,830
In practice, only the plaintext blocks
that are used in an application

27
00:01:47,830 --> 00:01:50,210
need to be included in the code book.

28
00:01:50,210 --> 00:01:55,620
That is, the code book does not need to
include all possible plaintext blocks.

29
00:01:55,620 --> 00:01:58,350
Therefore, it does not
have to be gigantic.

30
00:01:58,350 --> 00:02:02,640
So this seems to be a very convenient
of encrypting a large message.
