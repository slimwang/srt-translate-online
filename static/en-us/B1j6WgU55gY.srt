1
00:00:00,330 --> 00:00:02,438
Let's assume that we have a path with

2
00:00:02,438 --> 00:00:05,294
three ASes, one, two, and three, and that each

3
00:00:05,294 --> 00:00:08,730
AS has a public-private key pair. Let's assume that

4
00:00:08,730 --> 00:00:11,200
we have a network with three ASes and that

5
00:00:11,200 --> 00:00:14,300
each AS along the path has a public-private

6
00:00:14,300 --> 00:00:17,840
key pair. An AS can sign a message or

7
00:00:17,840 --> 00:00:20,790
a route with its own private key, and any

8
00:00:20,790 --> 00:00:25,970
other AS can check that signature. With the AS's

9
00:00:25,970 --> 00:00:28,990
public key. So let's suppose that AS one

10
00:00:28,990 --> 00:00:32,009
advertises a route for prefix p. So that route

11
00:00:32,009 --> 00:00:34,860
would contain the prefix as well as an address

12
00:00:34,860 --> 00:00:37,470
attestation which we're not showing, but let's look at

13
00:00:37,470 --> 00:00:41,340
the path attestation. So as usual, the BGP announcement

14
00:00:41,340 --> 00:00:44,370
would contain the prefix p,and the as path, which

15
00:00:44,370 --> 00:00:47,360
so far is just one. And, the path at

16
00:00:47,360 --> 00:00:51,630
a station, which is actually the path to one.

17
00:00:51,630 --> 00:00:57,860
Signed by, the private key, of AS1. When AS2, re advertises that route

18
00:00:57,860 --> 00:01:04,069
announcement, it of coarse advertises the new AS path to one. It adds its own at

19
00:01:04,069 --> 00:01:09,990
route at test station, three, two, one signed by it's own private key. And it

20
00:01:09,990 --> 00:01:13,320
also includes the original path atastation signed

21
00:01:13,320 --> 00:01:17,170
by AS1. A recipient of a route along

22
00:01:17,170 --> 00:01:23,430
this path can thus verify every step of the AS path. AS3 can

23
00:01:23,430 --> 00:01:29,670
use the first part of the path attestation to verify that the path in fact, goes

24
00:01:29,670 --> 00:01:35,960
from AS2 to AS1, and does not contain any other ASs in between. It can use the

25
00:01:35,960 --> 00:01:42,550
second part of the path attestation to insure. That the path between it,

26
00:01:42,550 --> 00:01:49,620
AS3, and the next hop is in fact, AS2, and that no other ASs could've inserted

27
00:01:49,620 --> 00:01:52,760
themselves on the path between two and three.

28
00:01:52,760 --> 00:01:55,370
This is precisely why the AS signs a

29
00:01:55,370 --> 00:01:58,700
path attestation with not only its own part

30
00:01:58,700 --> 00:02:01,390
of the AS path in the path attestation.

31
00:02:01,390 --> 00:02:04,230
But also, the hop of the AS that

32
00:02:04,230 --> 00:02:08,400
is intended to receive the BGP route advertisement.

33
00:02:08,400 --> 00:02:13,835
To see the importance of this part of the path at a station. Suppose, that

34
00:02:13,835 --> 00:02:19,250
these AS's were not there in the path at station. In this case. We have a very

35
00:02:19,250 --> 00:02:23,340
nice well-formed VGP route advertisement for prefix with

36
00:02:23,340 --> 00:02:26,540
the AS path suffix to one, and we

37
00:02:26,540 --> 00:02:29,630
have each segment signed, so an attacker could

38
00:02:29,630 --> 00:02:33,538
in fact, take such an announcement and advertise

39
00:02:33,538 --> 00:02:39,560
sub strings of this route advertisement as their own. Thus an attacker,

40
00:02:39,560 --> 00:02:45,560
AS4, could claim that it was connected to prefix P via AS1 when in

41
00:02:45,560 --> 00:02:53,100
fact no such link existed. Simply by stealing or replacing the path atastation

42
00:02:53,100 --> 00:02:58,870
one that's signed by K1. But, note that in reality AS1 never generates

43
00:02:58,870 --> 00:03:05,080
this signature. In fact it generates the signature,21. Or in this case, it would

44
00:03:05,080 --> 00:03:08,120
somehow have to generate the signature 41

45
00:03:08,120 --> 00:03:12,190
signed by AS1's private key, whereas if AS1

46
00:03:12,190 --> 00:03:17,860
only signed a message with its own AS in the message, such a segment or

47
00:03:17,860 --> 00:03:20,600
attestation could easily be replayed. There's actually

48
00:03:20,600 --> 00:03:24,090
no way that AS4 Could forge the path

49
00:03:24,090 --> 00:03:28,160
attestation for one, signed by AS1's private

50
00:03:28,160 --> 00:03:31,580
key because it doesn't own this private key

51
00:03:31,580 --> 00:03:35,810
and AS1 never generated a path attestation with

52
00:03:35,810 --> 00:03:38,790
this particular signed path., This is the reason

53
00:03:38,790 --> 00:03:44,450
that each AS not only signs a path attestation with its own AS on the AS path.

54
00:03:44,450 --> 00:03:49,200
But also the next AS along the path. This particular mode of signing not

55
00:03:49,200 --> 00:03:53,400
only prevents the type of hijacking that we explored but it also prevents path

56
00:03:53,400 --> 00:03:57,040
shortening attacks. For example, when AS4 receives

57
00:03:57,040 --> 00:04:01,268
the legitimate route to ASP through the path

58
00:04:01,268 --> 00:04:03,700
three, two, one it would be impossible

59
00:04:03,700 --> 00:04:07,270
for the AS to shorten that advertisement to

60
00:04:07,270 --> 00:04:10,530
say three, one. Because it would somehow

61
00:04:10,530 --> 00:04:13,974
have to generate a path attestation four, three,

62
00:04:13,974 --> 00:04:19,610
one, signed by its own secret key. However, if it did that, the receiving AS

63
00:04:19,610 --> 00:04:23,400
would look for another path attestation with

64
00:04:23,400 --> 00:04:27,490
just three, one signed by AS3. Yet, such

65
00:04:27,490 --> 00:04:30,170
a path attestation would not actually exist.

66
00:04:30,170 --> 00:04:33,660
So, these path attestations can prevent against some

67
00:04:33,660 --> 00:04:36,220
kinds of hijacks, as we've seen; they can

68
00:04:36,220 --> 00:04:39,000
prevent against these path shortening attacks; and they

69
00:04:39,000 --> 00:04:41,660
can also prevent against modification of the AS

70
00:04:41,660 --> 00:04:45,040
path. However, there are certain attacks that path

71
00:04:45,040 --> 00:04:48,880
attestations cannot defend against. So, if an AS

72
00:04:48,880 --> 00:04:52,760
fails to advertise a route or a route withdrawal

73
00:04:52,760 --> 00:04:57,520
There is no way for the path [UNKNOWN] or PGP sec to prevent from that kind

74
00:04:57,520 --> 00:05:00,640
of attach. Certain types of replay attacks such

75
00:05:00,640 --> 00:05:04,820
as a premature re-advertisement of a withdrawn route also

76
00:05:04,820 --> 00:05:07,930
cannot be defended against and of course, there is no

77
00:05:07,930 --> 00:05:11,600
way to actually guarantee that the data traffic travels along

78
00:05:11,600 --> 00:05:15,700
the advertised AS path, which is a significant weakness of

79
00:05:15,700 --> 00:05:19,100
DGP that is yet to be solved by any routing protocol.
