1
00:00:00,000 --> 00:00:02,469
Now that we've decided on our data structure,

2
00:00:02,469 --> 00:00:06,150
hopefully it will be easy to write the code for building our index.

3
00:00:06,150 --> 00:00:09,880
I think you actually know enough to be able to write the procedure

4
00:00:09,880 --> 00:00:10,910
that adds new entry to the index.

5
00:00:10,910 --> 00:00:13,210
Your goal for this quiz is to--

6
00:00:13,210 --> 00:00:16,079
Define a procedure--we'll call it add to index--

7
00:00:16,079 --> 00:00:17,120
and it takes 3 inputs.

8
00:00:17,120 --> 00:00:22,220
The 1st input is the index that we want to add the new keyword and URL to.

9
00:00:22,220 --> 00:00:25,460
Remember that we decided in the previous question--

10
00:00:25,460 --> 00:00:27,860
that the way to represent index is as a list

11
00:00:27,860 --> 00:00:29,900
where each element of the list is itself a list

12
00:00:29,900 --> 00:00:33,670
and each of the element list is a keyword followed by a list of the URLs

13
00:00:33,670 --> 00:00:35,840
where that keyword appears.

14
00:00:35,840 --> 00:00:38,370
The 2nd input, is a keyword--that's just a string--

15
00:00:38,370 --> 00:00:41,740
that's the word that we want to add to the index--

16
00:00:41,740 --> 00:00:44,580
and the 3rd input is the URL--

17
00:00:44,580 --> 00:00:48,980
which is a string that encodes the URL where that keyword appears.

18
00:00:48,980 --> 00:00:51,120
So, what add to index should do,

19
00:00:51,120 --> 00:00:54,460
depends on whether or not the keyword that's passed in is already in the index.

20
00:00:54,460 --> 00:00:57,020
If the keyword is already in the index,

21
00:00:57,020 --> 00:01:00,090
we don't want to create a new entry in the index for the keyword.

22
00:01:00,090 --> 00:01:02,430
We only want to have that keyword appear once--

23
00:01:02,430 --> 00:01:04,860
what we want to do instead is add the URL

24
00:01:04,860 --> 00:01:07,730
to the list of URLs already associated with that keyword.

25
00:01:07,730 --> 00:01:10,300
So, if the keyword is not in the index,

26
00:01:10,300 --> 00:01:12,770
what we need to do is add a new entry to the index,

27
00:01:12,770 --> 00:01:17,610
and that new entry will be a list with the keyword, that's the new keyword,

28
00:01:17,610 --> 00:01:20,450
and the list the list of URLs where that keyword appears.

29
00:01:20,450 --> 00:01:23,820
This is the first one, since it wasn't already in an index,

30
00:01:23,820 --> 00:01:26,720
so, it will be a list containing just one URL.

31
00:01:26,720 --> 00:01:29,690
That's the list that we want to add to the index

32
00:01:29,690 --> 00:01:34,230
to represent that we found this keyword at this one URL so far.

33
00:01:34,230 --> 00:01:36,330
Let's work through an example--

34
00:01:36,330 --> 00:01:39,700
Suppose we start by initializing an index to the empty list--

35
00:01:39,700 --> 00:01:42,170
we have no entries in our index yet--

36
00:01:42,170 --> 00:01:45,070
Then we'll call add to index, adding a new keyword,

37
00:01:45,070 --> 00:01:48,040
passing an index as the 1st input,

38
00:01:48,040 --> 00:01:51,140
for the 2nd input we need a keyword

39
00:01:51,140 --> 00:01:54,140
let's use the keyword udacity--

40
00:01:54,140 --> 00:01:58,050
and for the 3rd input we need the URL where that keyword appears.

41
00:01:58,050 --> 00:01:59,590
So, here's what we should have--

42
00:01:59,590 --> 00:02:03,530
1st we create index, we're initializing it as an empty list, we don't have any elements yet--

43
00:02:03,530 --> 00:02:08,900
then after we call that index, we're going to add an element to the index list---

44
00:02:08,900 --> 00:02:12,800
we've mutated index--now it contains element--

45
00:02:12,800 --> 00:02:17,170
that element is a list containing the string udacity as the keyword--

46
00:02:17,170 --> 00:02:20,810
the 2nd element of that list is itself a list containing one element--

47
00:02:20,810 --> 00:02:25,250
which is the string "http://udacity.com"

48
00:02:25,250 --> 00:02:27,250
That's the new value of index.

49
00:02:27,250 --> 00:02:31,290
If we call out to index again, this time we're passing an index again--

50
00:02:31,290 --> 00:02:34,890
it's the value that index refers to which is the structure--

51
00:02:34,890 --> 00:02:36,560
now the keyword is computing,

52
00:02:36,560 --> 00:02:39,530
and we're passing in as the URL "http://acm.org"

53
00:02:39,530 --> 00:02:42,030
That's going to mutate index again.

54
00:02:42,030 --> 00:02:44,130
We're going to follow the rule here,

55
00:02:44,130 --> 00:02:46,970
the keyword is not in the index, so we should add a new entry.

56
00:02:46,970 --> 00:02:50,900
That means we are going to append a new entry to index.

57
00:02:50,900 --> 00:02:53,900
That new entry is going to have the keyword computing.

58
00:02:53,900 --> 00:02:56,780
As the second element we have a list,

59
00:02:56,780 --> 00:03:01,320
and this list will contain the URL we passed in, which is acm.org.

60
00:03:01,320 --> 00:03:02,650
I am going to show you one more example.

61
00:03:02,650 --> 00:03:07,890
In this case, we're going to pass in a keyword that is already in the index.

62
00:03:07,890 --> 00:03:11,430
We're calling out to index again--passing in the keyword udacity--

63
00:03:11,430 --> 00:03:13,530
which is already in the index here--

64
00:03:13,530 --> 00:03:15,900
and passing in a new URL, which is not in the index.

65
00:03:15,900 --> 00:03:17,730
What should happen this time--

66
00:03:17,730 --> 00:03:20,900
we're going to mutate index, but instead of creating a new element--

67
00:03:20,900 --> 00:03:24,270
we're going to mutate the element we already have--

68
00:03:24,270 --> 00:03:26,110
we're going to look for the entry that matches udacity--

69
00:03:26,110 --> 00:03:29,310
it's already in the index, so don't want to add a new one.

70
00:03:29,310 --> 00:03:31,380
What we're doing is following the 1st rule here--

71
00:03:31,380 --> 00:03:34,350
that says if the first word is already in the index--

72
00:03:34,350 --> 00:03:38,990
what we want to do is add new URL to the list of URLs associated with that keyword--

73
00:03:38,990 --> 00:03:41,820
but we don't want to add any new entries to the index itself.

74
00:03:41,820 --> 00:03:43,660
Here's what that will look like--

75
00:03:43,660 --> 00:03:46,960
we're adding to the list of URLs a new entry--

76
00:03:46,960 --> 00:03:49,200
that's the new value of the URL.

77
00:03:49,200 --> 00:03:52,000
I hope it's clear now what add to index should do.

78
00:03:52,000 --> 00:03:56,370
I think you know enough to be able to define it yourself.

79
00:03:56,370 --> 00:03:58,510
That's the goal for this quiz, for you to define the procedure--

80
00:03:58,510 --> 00:04:01,410
add to index that has this behavior-

81
00:04:01,410 --> 00:04:04,410
it takes the 3 inputs and adds a new keyword to the index.
