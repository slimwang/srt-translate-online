1
00:00:00,440 --> 00:00:02,930
Let's look at the solution to our distributed last

2
00:00:02,930 --> 00:00:05,740
level cache. We have 16 cores in a four

3
00:00:05,740 --> 00:00:08,992
by four mesh. It doesn't really matter what the

4
00:00:08,992 --> 00:00:11,991
organization of the network is. We need to know that

5
00:00:11,991 --> 00:00:15,207
there are really 16 tiles, numbered 0 through 15,

6
00:00:15,207 --> 00:00:18,892
and that we have an 8-megabyte cache with 256-byte block,

7
00:00:18,892 --> 00:00:22,924
16-way set associative distributed round robin by set. So

8
00:00:22,924 --> 00:00:25,696
set zero will be in slice zero, set one will

9
00:00:25,696 --> 00:00:31,970
be in slice one, etc., and then it just wraps arround. So let's look at

10
00:00:31,970 --> 00:00:36,530
what this address maps to. The least significant

11
00:00:36,530 --> 00:00:39,230
eight bits are telling us what the block

12
00:00:39,230 --> 00:00:42,244
offset is. The next so-many bits are going to

13
00:00:42,244 --> 00:00:45,208
be the index, and the least significant bits

14
00:00:45,208 --> 00:00:51,061
of the index are going to tell us which tile to look at. There are 16 tiles,

15
00:00:51,061 --> 00:00:56,700
so the next digit is really the tile number. And that means

16
00:00:56,700 --> 00:01:00,630
that we go to tile number six. Note that we don't really

17
00:01:00,630 --> 00:01:04,629
need to even compute what exactly is the index because the least

18
00:01:04,629 --> 00:01:08,620
significant bits in this case are telling us what we need to know.
