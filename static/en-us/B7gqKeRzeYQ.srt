1
00:00:00,000 --> 00:00:02,000
There are lots of ways you may find this.

2
00:00:02,000 --> 00:00:06,000
One is to look at the output from dir and see all the methods available for sets

3
00:00:06,000 --> 00:00:10,000
and one thing you might notice looking at this is that

4
00:00:10,000 --> 00:00:13,000
there are methods like difference followed by difference_update

5
00:00:13,000 --> 00:00:17,000
Similarly for intersection, intersection_update.

6
00:00:17,000 --> 00:00:21,000
Similarly for symmetric difference, symmetric difference_update

7
00:00:21,000 --> 00:00:29,000
and then we get to union, there is no union_update, but the method following union is called update.

8
00:00:29,000 --> 00:00:31,000
So that sounds like a good one to try.

9
00:00:31,000 --> 00:00:34,000
It is certainly not enough to know that it does what we want, but let's try it.

10
00:00:34,000 --> 00:00:41,000
So we make a new set t and then let's try updating s with t.

11
00:00:41,000 --> 00:00:44,000
Now, we could've actually look at this documentation.

12
00:00:44,000 --> 00:00:47,000
It says update the set with union of itself and others

13
00:00:47,000 --> 00:00:51,000
that might give us a good guess that it's going to do what we want already,

14
00:00:51,000 --> 00:00:55,000
but let's actually try it and now let's see what's in s.

15
00:00:55,000 --> 00:00:57,000
Well, we started with a set 1, 2, 3.

16
00:00:57,000 --> 00:01:02,000
We union it with this set that should add elements for 4, 6, and 7 to the set.

17
00:01:02,000 --> 00:01:07,000
Let's check the t was not modified and indeed, it was not.

18
00:01:07,000 --> 00:01:10,000
Although, you might notice that the order of the elements is different

19
00:01:10,000 --> 00:01:14,000
from what they were when we created t from this list,

20
00:01:14,000 --> 00:01:18,000
but remember that what a set is an unordered collection of elements.

21
00:01:18,000 --> 00:01:22,000
So the order that it prints out here does not mean anything.

22
00:01:22,000 --> 00:01:25,000
It's the same set as the one listed in this order.

23
00:01:25,000 --> 00:01:30,000
We could try that confirming that with an equality test and indeed, these two sets are equal.

24
00:01:30,000 --> 00:01:33,000
So this experiment gives us some confidence that update, that's what we want.
