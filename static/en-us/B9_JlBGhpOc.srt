1
00:00:00,000 --> 00:00:03,660
In the previous unit, we have introduced the notion of NP completeness

2
00:00:03,660 --> 00:00:08,390
and seen that a myriad of practically relevant problem is NP complete.

3
00:00:08,390 --> 00:00:13,020
So, we think there is no polynomial time algorithm for these problems.

4
00:00:13,020 --> 00:00:16,140
Now, the question last time we left off was what does this mean

5
00:00:16,140 --> 00:00:20,690
for Alice, Bob, and Carol--the three computer scientists we were following?

6
00:00:20,690 --> 00:00:22,130
Should they just give up?

7
00:00:22,130 --> 00:00:25,340
Should they ask for a new problem?

8
00:00:25,340 --> 00:00:27,980
And I think that is something they might do,

9
00:00:27,980 --> 00:00:29,710
arguing that the problems are NP-complete,

10
00:00:29,710 --> 00:00:32,259
but actually they could do much better,

11
00:00:32,259 --> 00:00:36,800
using some of the techniques that you are about to learn in this unit and the following units.

12
00:00:36,800 --> 00:00:42,750
Because what we will now be investigating is techniques to actually solve problems

13
00:00:42,750 --> 00:00:45,230
despite their NP-completeness.

14
00:00:45,230 --> 00:00:47,380
Now, this will not always work,

15
00:00:47,380 --> 00:00:49,930
but it will be much better than just giving up,

16
00:00:49,930 --> 00:00:52,820
because there are so many NP-complete problems out there

17
00:00:52,820 --> 99:59:59,999
that are just too practically relevant to leave them alone.
