1
00:00:00,290 --> 00:00:03,210
To get started,
we should first create a scripts task.

2
00:00:03,210 --> 00:00:06,050
However, since we want to do slightly
different things in development and

3
00:00:06,050 --> 00:00:07,230
production mode.

4
00:00:07,230 --> 00:00:09,550
We add another task called scripts-dist,

5
00:00:09,550 --> 00:00:13,110
which will be used when we want to
distribute our fights for production.

6
00:00:13,110 --> 00:00:16,059
In the first step,
both of these tasks will look the same.

7
00:00:16,059 --> 00:00:19,490
We gulp source the files we need,
in this case, our JavaScript files.

8
00:00:19,490 --> 00:00:21,960
Then pipe them to the correct
destination, in our case,

9
00:00:21,960 --> 00:00:24,310
the dist/js folder.

10
00:00:24,310 --> 00:00:29,600
Now install the gulp-concat plug-in via
npm, and require in the gulp file, then

11
00:00:29,600 --> 00:00:34,470
add a new pipe to both tasks with concat
all JS before the destination pipe.

12
00:00:35,490 --> 00:00:37,280
This plugin takes the files
in the stream, and

13
00:00:37,280 --> 00:00:40,709
combines them into a single file named
whatever you provide as the argument.

14
00:00:42,200 --> 00:00:44,020
Try running one of those
task in your terminal,

15
00:00:44,020 --> 00:00:47,170
to make sure the concatenated all.js
ends up in the correct folder.

16
00:00:48,380 --> 00:00:51,180
All good.
Then we're missing only one last thing.

17
00:00:51,180 --> 00:00:55,010
We need to change the references to the
individual js files in our index HTML to

18
00:00:55,010 --> 00:00:59,360
point to the single js file,
at js/all.js.

19
00:00:59,360 --> 00:01:00,680
And now your page should run fine again.
