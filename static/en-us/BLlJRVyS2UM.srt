1
00:00:00,050 --> 00:00:04,000
aria-live allows developers to
mock a part of the page as live,

2
00:00:04,000 --> 00:00:08,750
in the sense that updates should be
communicated to users in a timely manner

3
00:00:08,750 --> 00:00:12,260
rather than if and when they happen
to explore that part of the page.

4
00:00:12,260 --> 00:00:15,590
One example might be a status
message which appears as a result

5
00:00:15,590 --> 00:00:18,950
of either a user action or
an external event.

6
00:00:18,950 --> 00:00:22,830
If this message is important enough
to grab aside a user's attention,

7
00:00:22,830 --> 00:00:25,700
we can direct and assist
a technology user's attention to it

8
00:00:25,700 --> 00:00:28,460
by setting an aria-live attribute on it.

9
00:00:28,460 --> 00:00:31,120
When an element has
an aria-live attribute we refer

10
00:00:31,120 --> 00:00:35,425
to the part of the page containing it
and its descendants, as a live region.

11
00:00:35,425 --> 00:00:40,690
aria-alive has three allowable values,
off, polite, and assertive.

12
00:00:41,880 --> 00:00:43,400
Off is the default value.

13
00:00:43,400 --> 00:00:46,010
It can be specified
explicitly if need be, but

14
00:00:46,010 --> 00:00:49,694
not setting it aria-live attribute
at all will have the same effect.

15
00:00:49,694 --> 00:00:53,720
aria-live = "polite" tells
us assistive technology,

16
00:00:53,720 --> 00:00:58,200
alert the user to this change when
you finished whatever you were doing.

17
00:00:58,200 --> 00:01:00,980
It's great to use if something
is important but not urgent and

18
00:01:00,980 --> 00:01:03,109
accounts for
the majority of aria-live use.

19
00:01:04,480 --> 00:01:07,180
In this example we have a chat
widget which uses aria-live

20
00:01:07,180 --> 00:01:09,650
to reflect the most
recent chat activity.

21
00:01:09,650 --> 00:01:13,250
When a new check message appears it'll
be announced to a screen reader user

22
00:01:13,250 --> 00:01:15,793
once any in progress
utterance has finished.

23
00:01:15,793 --> 00:01:19,990
aria-live = "assertive" tells
assistive technology to interrupt what

24
00:01:19,990 --> 00:01:23,810
ever it's doing and alert the use
to this change immediately.

25
00:01:23,810 --> 00:01:25,200
This is only for important and

26
00:01:25,200 --> 00:01:29,260
urgent updates, such as a status message
like, there has been a server error and

27
00:01:29,260 --> 00:01:32,570
your changes are not being saved,
please refresh the page.

28
00:01:32,570 --> 00:01:36,490
Or update to an input field as
a direct result of a user action,

29
00:01:36,490 --> 00:01:38,030
such as buttons on a step or widget.

30
00:01:39,070 --> 00:01:43,020
In this case, once this alert bar has
some content, it'll interrupt whatever

31
00:01:43,020 --> 00:01:45,650
the user was doing with
an announcement of its content.

32
00:01:45,650 --> 00:01:47,070
To demonstrate this in practice,

33
00:01:47,070 --> 00:01:49,610
here's a demo of aria-live use
in the custom number input.

34
00:01:50,700 --> 00:01:53,830
You can see the dom for
the custom number input on the right.

35
00:01:53,830 --> 00:01:57,540
We have a container element
with a roll of spin button.

36
00:01:57,540 --> 00:02:02,978
Then a span containing the numerical
value and an Add and Subtract button.

37
00:02:02,978 --> 00:02:06,819
The span within the numeric value has
an aria-live value of assertive, meaning

38
00:02:06,819 --> 00:02:10,560
whenever it changes, whatever speech
is in progress should be interrupted.

39
00:02:11,990 --> 00:02:15,110
One of the thing to notice is
I've used aria described by,

40
00:02:15,110 --> 00:02:18,760
to associate the element with
this bit of help text underneath.

41
00:02:18,760 --> 00:02:20,990
So I'll probably hear that once
I set focus on the element.

42
00:02:22,230 --> 00:02:25,500
I'm going to turn on Chromebooks light,
tap to the element, and

43
00:02:25,500 --> 00:02:28,950
then I should hear the label and it's
going to start reading the description.

44
00:02:28,950 --> 00:02:32,191
Then I'm going to use the up
arrow to add ten to the value.

45
00:02:32,191 --> 00:02:33,330
[BLANK_AUDIO]

46
00:02:33,330 --> 00:02:35,660
[SOUND]
>> Number input demo.

47
00:02:36,960 --> 00:02:37,880
Current value.

48
00:02:37,880 --> 00:02:38,760
Spin button.

49
00:02:38,760 --> 00:02:42,290
Use add and subtract buttons or
up and down arrows.

50
00:02:42,290 --> 00:02:43,329
10.

51
00:02:43,329 --> 00:02:44,552
>> Great.

52
00:02:44,552 --> 00:02:47,670
So it immediately told me the new value,
and interrupted what it was saying.

53
00:02:49,250 --> 00:02:50,245
I can do that again.

54
00:02:50,245 --> 00:02:53,440
>> 20.

55
00:02:53,440 --> 00:02:55,260
>> Or use the mouse.

56
00:02:55,260 --> 00:02:57,177
>> [SOUND] 30.

57
00:02:57,177 --> 00:02:59,678
[SOUND] 20.

58
00:02:59,678 --> 00:03:02,720
>> Or use the screen reader.

59
00:03:02,720 --> 00:03:03,687
>> Add button.

60
00:03:03,687 --> 00:03:06,369
[SOUND] 30.

61
00:03:06,369 --> 00:03:07,796
>> And the same thing happens.

62
00:03:09,115 --> 00:03:11,525
So those are the basics of aria-live.

63
00:03:11,525 --> 00:03:13,075
We have just a couple of tips for

64
00:03:13,075 --> 00:03:15,133
working with aria-live
regions in practice.

65
00:03:15,133 --> 00:03:20,615
Firstly, your aria-live region should
probably be in the initial page load.

66
00:03:20,615 --> 00:03:24,215
This is not a hard and fast rule,
but if you're having difficulty with

67
00:03:24,215 --> 00:03:27,290
an aria-live region,
this could be one of the issues.

68
00:03:27,290 --> 00:03:29,100
Secondly, different screen readers and

69
00:03:29,100 --> 00:03:33,100
assistive technologies react differently
to different types of changes.

70
00:03:33,100 --> 00:03:37,460
For example, it's possible to trigger an
alert on some screen readers by toggling

71
00:03:37,460 --> 00:03:41,010
a descendant element's hidden
style from true to false.

72
00:03:41,010 --> 00:03:42,570
But this technique does
not work on others.

73
00:03:43,610 --> 00:03:46,370
So if you're having issues with
getting an aria-live region to speak,

74
00:03:46,370 --> 00:03:48,980
experiment with some different
types of content changes

75
00:03:48,980 --> 00:03:51,320
to see what works on
the platforms you're targeting.
