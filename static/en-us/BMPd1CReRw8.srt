1
00:00:00,660 --> 00:00:04,310
Great, we understand the data model or
managed object model.

2
00:00:04,310 --> 00:00:06,380
Now on to the rest of these.

3
00:00:06,380 --> 00:00:09,160
It's important to remember
that these seven classes

4
00:00:10,190 --> 00:00:14,140
always work together as a team
called the CoreDataStack.

5
00:00:14,140 --> 00:00:19,630
As such, it's very useful to treat them
as a team as opposed to individuals.

6
00:00:19,630 --> 00:00:22,040
We can therefore keep
the whole team in one class,

7
00:00:22,040 --> 00:00:24,690
oddly enough called CoreDataStack.

8
00:00:24,690 --> 00:00:26,610
Even though in our day to day,

9
00:00:26,610 --> 00:00:30,170
we will use this class without
thinking too much about what's inside,

10
00:00:30,170 --> 00:00:33,530
it's worth taking a look at
the code to see what makes it tick.

11
00:00:33,530 --> 00:00:36,660
Note that this class is pretty much
what Apple provides you with, so

12
00:00:36,660 --> 00:00:39,010
don't feel bad for using it as is.

13
00:00:39,010 --> 00:00:43,280
It's the boilerplate class from
the Apple developers' site on CoreData.

14
00:00:43,280 --> 00:00:46,970
Let's start with the initializer,
it's job is as follows.

15
00:00:46,970 --> 00:00:52,000
It reads a model file, and
this is the extension of the model

16
00:00:52,000 --> 00:00:56,840
file once it has been
compiled by X code, momd.

17
00:00:56,840 --> 00:01:04,120
Then it creates a sqlite store for
it inside the documents folder.

18
00:01:05,170 --> 00:01:08,420
And it will call it model.sqlite.

19
00:01:08,420 --> 00:01:11,370
Once it's done,
it initializes a context and

20
00:01:11,370 --> 00:01:17,530
connects all these necessary parts
into a persistent store coordinator.

21
00:01:17,530 --> 00:01:20,860
The coordinator will
also perform migrations.

22
00:01:20,860 --> 00:01:23,760
That's something that
we'll deal with later.

23
00:01:23,760 --> 00:01:27,240
And if everything goes okay,
we get no errors.

24
00:01:27,240 --> 00:01:31,440
We exit, and we have all the core
data stack ready to work.

25
00:01:31,440 --> 00:01:35,090
There are several utility
methods that are available here,

26
00:01:35,090 --> 00:01:36,330
so just drop all data.

27
00:01:36,330 --> 00:01:40,310
This will delete all the objects
inside of your sqlite store.

28
00:01:40,310 --> 00:01:44,450
But it won't delete the files,
so it just empties the tables.

29
00:01:44,450 --> 00:01:46,780
This is useful while you're developing.

30
00:01:46,780 --> 00:01:49,900
And we also have
the save context method,

31
00:01:49,900 --> 00:01:55,320
which builds on top of the method save
from the context in the following way.

32
00:01:55,320 --> 00:01:59,420
Whenever you call save context,
it will first check if there is any

33
00:01:59,420 --> 00:02:01,960
changes that have to be
saved,and then will save.

34
00:02:01,960 --> 00:02:05,890
So this will make our stack
a little bit more performing.

35
00:02:05,890 --> 00:02:10,830
There are other features that we will
need such as migrating data models or

36
00:02:10,830 --> 00:02:12,640
implementing an auto save.

37
00:02:12,640 --> 00:02:15,090
We'll add them along the way
when they become necessary.

38
00:02:15,090 --> 00:02:15,800
Let's get started.
