1
00:00:00,000 --> 00:00:03,000
I'm going to give you a glimpse as to why it works.

2
00:00:03,000 --> 00:00:09,000
Suppose we have two robot positions, x0 and x1, and we know they're 10 apart

3
00:00:09,000 --> 00:00:14,000
with some Gaussian noise, and we know the Gaussian noise in exportation

4
00:00:14,000 --> 00:00:19,000
moves the right robot position 10 off the left robot position, but there is some uncertainty.

5
00:00:19,000 --> 00:00:23,000
When we talked about Kalman filters, we talked about Gaussians,

6
00:00:23,000 --> 00:00:26,000
and this uncertainty might look at follows:

7
00:00:26,000 --> 00:00:32,000
There is a constant exponential, and the expression that x1 minus x0

8
00:00:32,000 --> 00:00:35,000
should relax to 10 but might deviate from it.

9
00:00:35,000 --> 00:00:40,000
This Gaussian constraint over here characterizes the constraint between x1 and x0

10
00:00:40,000 --> 00:00:43,000
and wishes them to be exactly 10 apart.

11
00:00:43,000 --> 00:00:47,000
The Gaussian is maximum where this equation is fulfilled,

12
00:00:47,000 --> 00:00:53,000
but if the residual is not equal to 0, there is still a probability associated with it.

13
00:00:53,000 --> 00:00:57,000
Let's now model a second motion. Say x2 is 5 apart.

14
00:00:57,000 --> 00:01:01,000
We now get an even bigger Gaussian relative to the very first one,

15
00:01:01,000 --> 00:01:04,000
but the local constraint over here reads just like the constraint over there.

16
00:01:04,000 --> 00:01:06,000
Let me just write it down.

17
00:01:06,000 --> 00:01:11,000
X2 minus x1 minus 5 squared over sigma-squared.

18
00:01:11,000 --> 00:01:17,000
Now, the total probability of this entire thing over here is the product of these two things.

19
00:01:17,000 --> 00:01:21,000
If we want to maximize the product, we can play a number of interesting tricks.

20
00:01:21,000 --> 00:01:26,000
First, the constant has no bearing on the maximum, just on the absolute value.

21
00:01:26,000 --> 00:01:32,000
If we want to find the best values for x0 and x1 and so on, we can drop the constant.

22
00:01:32,000 --> 00:01:35,000
Secondly, we can drop the exponential

23
00:01:35,000 --> 00:01:39,000
if we're willing to turn the product into an addition.

24
00:01:39,000 --> 00:01:44,000
Remember, we added things in omega and in sigma. That's why.

25
00:01:44,000 --> 00:01:46,000
Finally, we can actually drop the -1/2.

26
00:01:46,000 --> 00:01:50,000
It turns out that also plays no role in the maximization of this expression.

27
00:01:50,000 --> 00:01:54,000
It turns out what you added where constraints just like these,

28
00:01:54,000 --> 00:01:58,000
and you even added them at a certain strength of 1 over sigma-squared.

29
00:01:58,000 --> 00:02:03,000
In particular, if you really believe that a constraint is true,

30
00:02:03,000 --> 00:02:06,000
you should add a larger value in this matrix over here,

31
00:02:06,000 --> 00:02:11,000
and on the right side you should multiply the right constraint with an even larger value.

32
00:02:11,000 --> 00:02:16,000
Put differently, take an expression like this and multiply in the sigma-squared

33
00:02:16,000 --> 00:02:19,000
you get something of this nature over here where 1 over sigma

34
00:02:19,000 --> 00:02:21,000
regulates how confident you are.

35
00:02:21,000 --> 00:02:24,000
For a small sigma, 1 over sigma becomes large.

36
00:02:24,000 --> 00:02:26,000
So 5 is much larger than 1.

37
00:02:26,000 --> 00:02:28,000
That means you have much more confidence.

38
00:02:28,000 --> 00:02:31,000
Let's go back to the code and modify the code

39
00:02:31,000 --> 00:02:34,000
so the last measurement has a really high confidence.

40
00:02:34,000 --> 00:02:40,000
I want you to multiply the last measurement between x2 and our landmark

41
00:02:40,000 --> 00:02:43,000
with a factor of 5 in your code. Hard code it.

42
00:02:43,000 --> 00:02:47,000
That is, go in somewhere over here where the last measurement is being applied

43
00:02:47,000 --> 00:02:51,000
and do the trick that I just showed you and see what the outcome is.

44
00:02:51,000 --> 00:02:59,000
When I do this, I get -3, 2.1, 5.714, and 6.821 as the answers.

45
00:02:59,000 --> 00:03:03,000
You'll see in this final result

46
00:03:03,000 --> 00:03:09,000
the final robot position of 5.714 and the landmark position of 8.821

47
00:03:09,000 --> 00:03:13,000
are really close to 1 in difference, which was the measurement,

48
00:03:13,000 --> 00:03:15,000
because you know believe this measurement

49
00:03:15,000 --> 99:59:59,999
over-proportionally over other measurements and motions.
