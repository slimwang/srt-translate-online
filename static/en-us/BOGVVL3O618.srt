1
00:00:00,120 --> 00:00:03,140
Lets discuss the solution to our latest Amdahl's law

2
00:00:03,140 --> 00:00:07,240
quiz. We have three possible improvements and now we

3
00:00:07,240 --> 00:00:09,210
can use Amdahl's law to tell us which one

4
00:00:09,210 --> 00:00:12,119
of them is the best. For improving the branch

5
00:00:12,119 --> 00:00:14,810
CPI this is our option 1: the overall speedup

6
00:00:14,810 --> 00:00:17,777
is branches are happening 20% of the time, so,

7
00:00:17,777 --> 00:00:20,330
so this is actually the percentage of time so

8
00:00:20,330 --> 00:00:25,676
we can apply Amdahl's law properly. So the unaffected execution

9
00:00:25,676 --> 00:00:32,070
time is 80% and the 20% we do affect, we speedup by how much?

10
00:00:32,070 --> 00:00:38,242
By factor of 4 over 3, so this is 1.33. And we get

11
00:00:38,242 --> 00:00:42,542
an overall speedup of 1.05. The clock

12
00:00:42,542 --> 00:00:45,860
frequency increase from 2 to 2.3 gigahertz,

13
00:00:45,860 --> 00:00:50,758
is affecting all the execution time, so we can just compute the speedup of

14
00:00:50,758 --> 00:00:55,822
this, but for the sake of exercise, let's apply Amdahl's law. One minus

15
00:00:55,822 --> 00:01:01,036
fraction enhanced is 0, because everything is enhanced. The fraction

16
00:01:01,036 --> 00:01:05,761
enhanced is 1, and the speedup we get here, by going

17
00:01:05,761 --> 00:01:10,801
from 2 to 2.3 gigahertz, is 2.3 over 2; which is

18
00:01:10,801 --> 00:01:15,950
1.15 and the overall speedup we get is the 1.15.

19
00:01:15,950 --> 00:01:22,198
The third option is for stores, the unaffected fraction is at 0.9, the affected

20
00:01:22,198 --> 00:01:29,242
fraction is 0.1. The speedup of going from 3 to 2 is 1.5, and when

21
00:01:29,242 --> 00:01:35,400
we compute that we get 1.034. So it's a very small speedup. Even smaller

22
00:01:35,400 --> 00:01:38,143
than we got for branches. So overall

23
00:01:38,143 --> 00:01:41,762
improving the clock frequency gives us a significantly

24
00:01:41,762 --> 00:01:44,688
higher improvement overall, than the other

25
00:01:44,688 --> 00:01:48,059
two options. Primarily because this is a

26
00:01:48,059 --> 00:01:54,517
smaller improvement in terms of speedup on the fraction affected. But the clock

27
00:01:54,517 --> 00:01:56,981
frequency increase affects all of the

28
00:01:56,981 --> 00:02:00,369
instructions, versus here, we affect only 20%

29
00:02:00,369 --> 00:02:05,910
of the execution time and here we're affecting only 10% of the execution time.
