1
00:00:00,000 --> 00:00:05,480
The first statement, well you might be tempted to think that because I just called it

2
00:00:05,480 --> 00:00:10,920
the ultimate problem in NP, but actually when you look at the definition of an NP complete problem--

3
00:00:10,920 --> 00:00:14,980
it just means that any other problem in NP can be reduced to it.

4
00:00:14,980 --> 00:00:21,830
There could be multiple NP complete problems as long as they have the same hardness.

5
00:00:21,830 --> 00:00:24,210
This here is not true.

6
00:00:24,210 --> 00:00:29,700
If you found a polynomial time algorithm for an NP complete problem, then what that would mean is

7
00:00:29,700 --> 00:00:34,710
that there would also be polynomial time algorithms for all other problems in NP,

8
00:00:34,710 --> 00:00:41,890
and the reason for that is that for an NP complete problem, we have said that any other problem

9
00:00:41,890 --> 00:00:46,210
in NP can be reduced to it and that can be done in polynomial time.

10
00:00:46,210 --> 00:00:50,630
If you can solve this problem in polynomial time as well, then you automatically have

11
00:00:50,630 --> 00:00:55,470
a polynomial time algorithm for any problem that you can find in NP.

12
00:00:55,470 --> 00:01:01,850
And finally, if vertex cover would be an NP complete problem, then clique would be

13
00:01:01,850 --> 00:01:06,500
an NP complete problem as well because we have shown that you can use polynomial time reductions

14
00:01:06,500 --> 00:01:09,980
to get from vertex cover to clique and vice versa.

15
00:01:09,980 --> 00:01:15,520
From a perspective of polynomial time versus exponential time hardness,

16
00:01:15,520 --> 00:01:18,550
these two problems are basically equally hard to solve.

17
00:01:18,550 --> 99:59:59,999
This one here is also true.
