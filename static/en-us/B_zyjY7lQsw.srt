1
00:00:00,490 --> 00:00:04,550
In this lesson, we will examine a fast
Fourier transform and apply it in order

2
00:00:04,550 --> 00:00:08,364
to obtain an efficient algorithm for
convolving two sequences of numbers.

3
00:00:08,364 --> 00:00:12,670
If you have seen the Fourier transform
before in the context of mathematics,

4
00:00:12,670 --> 00:00:14,310
physics or engineering,

5
00:00:14,310 --> 00:00:16,770
this lesson may have a different
flavor from what you are used to.

6
00:00:17,930 --> 00:00:20,330
We won't be using it to solve
differential equations or

7
00:00:20,330 --> 00:00:23,090
to characterize the behavior
of an electrical circuit.

8
00:00:23,090 --> 00:00:25,980
Instead, we'll be focused on
the much more mundane task

9
00:00:25,980 --> 00:00:28,260
of multiplying polynomials and
doing it quickly.

10
00:00:29,470 --> 00:00:32,220
This algorithmic aspect
of the Fourier transform

11
00:00:32,220 --> 00:00:35,830
is actually almost as old as
the Fourier transform itself,

12
00:00:35,830 --> 00:00:39,560
appearing in an early 19th century
paper by Gauss on interpolation.

13
00:00:40,870 --> 00:00:44,930
The transform itself, by the way, gets
its paper from Jean Baptiste Fourier's

14
00:00:44,930 --> 00:00:47,710
1807 paper on the propagation
of heat through solids.

15
00:00:48,965 --> 00:00:52,270
Gauss' trick seems to have largely
been forgotten, until Cooley and

16
00:00:52,270 --> 00:00:56,390
Tookey published a paper on
the fast Fourier transform in 1965.

17
00:00:56,390 --> 00:01:01,470
Tookey was apparently somewhat
reluctant to publish the paper,

18
00:01:01,470 --> 00:01:04,910
because he thought it was a simple
observation and the how to questions of

19
00:01:04,910 --> 00:01:07,430
algorithms were still considered
second class at the time.

20
00:01:08,440 --> 00:01:10,880
Well much has changed since then.

21
00:01:10,880 --> 00:01:14,010
Their paper's now one of the most
cited scientific literature and

22
00:01:14,010 --> 00:01:17,240
the idea is considered one of
the most elegant in algorithm design.
