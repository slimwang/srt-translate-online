1
00:00:00,430 --> 00:00:03,816
This class has three instance variables. The number of seats, the driver name,

2
00:00:03,816 --> 00:00:07,891
and the list of passengers. For which are these should we have getters and

3
00:00:07,891 --> 00:00:11,786
setters. The number of seats certainly shouldn't have a setter. You can't

4
00:00:11,786 --> 00:00:16,373
really change the number of seats in a car. Should it have a getter? if you

5
00:00:16,373 --> 00:00:20,478
added one, it's not a mistake. but there's probably no grade reason for having

6
00:00:20,478 --> 00:00:25,717
it. I didn't add one. Now, the driver name definitely needs a setter, because,

7
00:00:25,717 --> 00:00:32,591
when you look through the methods, there is no way of setting it otherwise. So,

8
00:00:32,591 --> 00:00:38,830
let's add a setter. Here is my setter. Do I need a getter? I think I do.

9
00:00:38,830 --> 00:00:42,958
There's no other way of finding out who's driving this car. None of the other

10
00:00:42,958 --> 00:00:46,410
methods make any use of the driver name. I'm assuming it was important since

11
00:00:46,410 --> 00:00:51,548
someone added the instance variable. So, let's add the getter as well. Here is

12
00:00:51,548 --> 00:00:57,340
my getter. And as is so often, the setter and the getter have very simple

13
00:00:57,340 --> 00:01:04,914
implementation. What about the third instance variable? You definitely don't

14
00:01:04,914 --> 00:01:10,122
want to have getters and setters for this variable. It would be very odd to

15
00:01:10,122 --> 00:01:17,668
have a method that holds and places an internal array of the class. And you

16
00:01:17,668 --> 00:01:21,113
also wouldn't really want to return it, because then you would give the user of

17
00:01:21,113 --> 00:01:26,988
the class the possibility of changing its content. So there is a rule of thumb

18
00:01:26,988 --> 00:01:31,204
that says that in general, a class that does not want to return any internal

19
00:01:31,204 --> 00:01:37,755
parts of its implementation that a third party could modify. Now, you've seen a

20
00:01:37,755 --> 00:01:41,118
bunch of useful patterns that hopefully will help you designing the

21
00:01:41,118 --> 00:01:47,330
implementation of a class. I will put those to good use when we implement our

22
00:01:47,330 --> 00:01:52,117
car share application. But before we do that, there is another technical topic

23
00:01:52,117 --> 00:01:56,450
that we need to tackle. Namely, variables and methods that don't belong to

24
00:01:56,450 --> 00:01:59,050
objects, but to the class as a whole.
