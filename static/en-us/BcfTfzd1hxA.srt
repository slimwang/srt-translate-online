1
00:00:00,230 --> 00:00:03,500
These are the required content provider functions. You

2
00:00:03,500 --> 00:00:05,270
can implement them any way you like, but

3
00:00:05,270 --> 00:00:08,130
you'll find that it's really straight forward to

4
00:00:08,130 --> 00:00:12,530
implement them on top of a SQLite database. The

5
00:00:12,530 --> 00:00:16,219
parameters packed into our content provider functions match

6
00:00:16,219 --> 00:00:19,710
the parameters used for Android's SQLite's interface almost

7
00:00:19,710 --> 00:00:22,570
exactly. The biggest difference is that we replaced

8
00:00:22,570 --> 00:00:25,810
the table string, with a uri. In the simplest

9
00:00:25,810 --> 00:00:29,020
content provider implementation, the query is passed

10
00:00:29,020 --> 00:00:31,840
straight through to the database. Note that

11
00:00:31,840 --> 00:00:33,720
there are parameters that cannot be easily

12
00:00:33,720 --> 00:00:37,300
controlled through content providers, such as grouping functionality.

13
00:00:39,530 --> 00:00:42,790
But the interface allows for very flexible querying.

14
00:00:42,790 --> 00:00:46,120
Most importantly, the projection or columns allows for querying

15
00:00:46,120 --> 00:00:48,945
to be much more efficient. Because the column

16
00:00:48,945 --> 00:00:52,290
indices and our cursor object match the projection that

17
00:00:52,290 --> 00:00:55,150
we submit to the database, we can just

18
00:00:55,150 --> 00:00:58,340
get the values by their numerical index instead of

19
00:00:58,340 --> 00:01:00,950
having to use getColumnIndex to look up each

20
00:01:00,950 --> 00:01:04,420
column index. All right, it's time to code some

21
00:01:04,420 --> 00:01:07,160
more Sunshine. Let's code a content provider.
