1
00:00:00,000 --> 00:00:03,000
[Thrun] One of the most basic things we can do with computer vision

2
00:00:03,000 --> 00:00:05,000
is to extract features.

3
00:00:05,000 --> 00:00:09,000
For example, there is a very strong edge feature over here

4
00:00:09,000 --> 00:00:14,000
and a strong corner feature right over here and right over here.

5
00:00:14,000 --> 00:00:16,000
Let me tell you how to do this.

6
00:00:16,000 --> 00:00:20,000
How can you find in an image like this whether there is an edge,

7
00:00:20,000 --> 00:00:26,000
or in an image like this where there is an edge from a bright area on the left

8
00:00:26,000 --> 00:00:28,000
to a dark region on the right?

9
00:00:28,000 --> 00:00:33,000
Let us write a feature extractor that identifies transitions of this type,

10
00:00:33,000 --> 00:00:36,000
and let's start with horizontal transitions.

11
00:00:36,000 --> 00:00:39,000
The most obvious feature detector looks like this.

12
00:00:39,000 --> 00:00:45,000
We run this little 2-value matrix across the entire image over here,

13
00:00:45,000 --> 00:00:51,000
and we add whatever is on the left side and subtract whatever is on the right side.

14
00:00:51,000 --> 00:00:56,000
So if both sides are approximately in balance, like these points over here,

15
00:00:56,000 --> 00:00:59,000
adding an expression here is approximately 0.

16
00:00:59,000 --> 00:01:02,000
But if the left side is significantly larger than the right side,

17
00:01:02,000 --> 00:01:08,000
then adding and subtracting yields a very large value, like 212 - 7 over here.

18
00:01:08,000 --> 00:01:16,000
So this specific mask gives us edges that run from bright to dark.

19
00:01:16,000 --> 00:01:20,000
So here I'm taking the first value and subtract the second value from it.

20
00:01:20,000 --> 00:01:26,000
255 - 212 gives me 43. That's applying this mask over here.

21
00:01:26,000 --> 00:01:31,000
From 211 to 237 is -26 and so on.

22
00:01:31,000 --> 00:01:35,000
212 - 7 is 205.

23
00:01:35,000 --> 00:01:40,000
237 - 3 is 234 and so on.

24
00:01:40,000 --> 00:01:43,000
7 - 1 is 6.

25
00:01:43,000 --> 00:01:46,000
3 - 9 is -6 and so on.

26
00:01:46,000 --> 00:01:49,000
If you look at this result of applying the mask over here,

27
00:01:49,000 --> 00:01:52,000
you'll find that this column stands out.

28
00:01:52,000 --> 00:01:57,000
It is much, much larger in value than any of the adjacent columns,

29
00:01:57,000 --> 00:02:03,000
and that indicates that we have a high likelihood of a horizontal edge feature occurring

30
00:02:03,000 --> 00:02:07,000
at the ridge between this column and this column over here.

31
00:02:07,000 --> 00:02:12,000
So here we are applying that same trick to the original image, and this is the result.

32
00:02:12,000 --> 00:02:17,000
You can see that areas where the original image has a strong transition

33
00:02:17,000 --> 00:02:19,000
you get a strong response over here.

34
00:02:19,000 --> 00:02:22,000
This is actually showing the absolute value of the difference

35
00:02:22,000 --> 00:02:26,000
where we get rid of the minus sign, so you can see any transition from bright to dark

36
00:02:26,000 --> 00:02:29,000
or dark to bright horizontally shows up.

37
00:02:29,000 --> 00:02:34,000
Now, you can see these lines over here that are vertical show up very strongly.

38
00:02:34,000 --> 00:02:39,000
The lines over here don't, and the reason is the way we defined our kernel,

39
00:02:39,000 --> 00:02:43,000
it ran actually horizontal, so it finds horizontal edges and not vertical edges.

40
00:02:43,000 --> 99:59:59,999
Vertical edges require a different kernel, so let me get to this in a second.
