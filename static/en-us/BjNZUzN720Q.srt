1
00:00:00,300 --> 00:00:03,740
Now how many communication events are happening in in every

2
00:00:03,740 --> 00:00:07,400
round? Well, it's order of N communication events per every

3
00:00:07,400 --> 00:00:11,270
round, because every processor is sending a message to another

4
00:00:11,270 --> 00:00:15,150
processor in, in every round. And therefore, the amount of communication

5
00:00:15,150 --> 00:00:17,490
that's happening is order of N, where N is the

6
00:00:17,490 --> 00:00:21,180
number of processors that are participating in this barrier. So

7
00:00:21,180 --> 00:00:22,850
now you can quickly see what's going to happen in the

8
00:00:22,850 --> 00:00:25,680
next round, and the next round, k is going to be equal

9
00:00:25,680 --> 00:00:28,270
to one and therefore. I'm going to choose, each

10
00:00:28,270 --> 00:00:31,210
processor is going to choose a neighbor to send the message

11
00:00:31,210 --> 00:00:33,950
to based on this formula that I've, that I have

12
00:00:33,950 --> 00:00:36,420
here. So in round zero, for instance, what we did

13
00:00:36,420 --> 00:00:40,020
was, P0 is sending a message a neighbor that

14
00:00:40,020 --> 00:00:43,140
is one distant from it because k was zero. And

15
00:00:43,140 --> 00:00:47,490
now. In round one case one and therefore P0 is

16
00:00:47,490 --> 00:00:50,850
going to be sending a message to a neighbor that is

17
00:00:50,850 --> 00:00:56,210
two distant from it. So P0 will send to P2 and similarly P1 two distant from it

18
00:00:56,210 --> 00:01:00,360
P3, P2 two distant P4. P4. Too distant

19
00:01:00,360 --> 00:01:02,840
from it, in cyclic order, is going to be P1.

20
00:01:02,840 --> 00:01:05,337
So it's sending a message to P1. So

21
00:01:05,337 --> 00:01:08,305
that's the round one of communication with k equal

22
00:01:08,305 --> 00:01:12,080
to one, round one of communication. Where once

23
00:01:12,080 --> 00:01:16,280
again, order of N messages are being exchanged among

24
00:01:16,280 --> 00:01:20,380
these processes to indicate that this round is complete.

25
00:01:20,380 --> 00:01:23,570
Just as I said about Round zero, every processor will

26
00:01:23,570 --> 00:01:27,890
know that this round is complete when it receives a

27
00:01:27,890 --> 00:01:30,430
message from its ordained neighbor. So in this case, P2

28
00:01:30,430 --> 00:01:32,660
is going to expect to receive a message from P0,

29
00:01:32,660 --> 00:01:35,990
and it has also sent its message to P4, its

30
00:01:35,990 --> 00:01:38,890
ordained neighbor to which it is supposed to send the

31
00:01:38,890 --> 00:01:41,980
message in this round. Once it is done, P2 knows

32
00:01:41,980 --> 00:01:44,430
that round one is over and it can progress

33
00:01:44,430 --> 00:01:47,440
to the next round. So the independent decision is

34
00:01:47,440 --> 00:01:50,200
being made by each one of these processes in

35
00:01:50,200 --> 00:01:53,230
terms of knowing that this particular round is over

36
00:01:53,230 --> 00:01:55,840
and they can progress to the next round of

37
00:01:55,840 --> 00:01:58,390
the dissemination barrier. And just as I mentioned in

38
00:01:58,390 --> 00:02:01,940
the previous round. All of these communications happen in

39
00:02:01,940 --> 00:02:07,100
parallel, so if the interconnection network has a redundant parallel

40
00:02:07,100 --> 00:02:10,410
path these parallel, these parallel paths can be

41
00:02:10,410 --> 00:02:13,980
exploited by the dissemination barrier. In order to

42
00:02:13,980 --> 00:02:16,920
do this communication very effectively. So the next

43
00:02:16,920 --> 00:02:20,400
round, meaning round number two. K is equal

44
00:02:20,400 --> 00:02:23,270
to two, and therefore, what we're going to

45
00:02:23,270 --> 00:02:26,750
do is, every one of these processors is

46
00:02:26,750 --> 00:02:29,135
going to be choosing a neighbor that is

47
00:02:29,135 --> 00:02:32,210
four distant from itself. So in other words,

48
00:02:32,210 --> 00:02:35,410
P0 is going to send a message to its neighbor

49
00:02:35,410 --> 00:02:38,670
that is four distant, that is, P4. P1 is going to

50
00:02:38,670 --> 00:02:41,350
send it to four distant. Which means if you wrap

51
00:02:41,350 --> 00:02:43,610
it around, it's going to be P0 and so on. So

52
00:02:43,610 --> 00:02:46,680
this is the communication that's happening in round two

53
00:02:46,680 --> 00:02:51,220
where every processor is sending a message to its neighbor

54
00:02:51,220 --> 00:02:53,960
who is four distant because gave with the two four

55
00:02:53,960 --> 00:02:57,630
distant from itself. So just sort of biz, belaboring the point

56
00:02:57,630 --> 00:03:00,730
the gossip in round two. Is over, so

57
00:03:00,730 --> 00:03:04,220
far as P3 is concerned, when it has received

58
00:03:04,220 --> 00:03:07,840
a gossip message from its four distant neighbor, which

59
00:03:07,840 --> 00:03:10,800
happens to be P4. And it has also sent

60
00:03:10,800 --> 00:03:13,230
a message to its four distant neighbor, P2

61
00:03:13,230 --> 00:03:15,270
in this case. At this point, every one of

62
00:03:15,270 --> 00:03:18,920
these processes knows that round two of gossip is

63
00:03:18,920 --> 00:03:22,750
compelte. And, similar to what I've been emphasizing all

64
00:03:22,750 --> 00:03:26,350
along, parallel communication pads in the interconnection network,

65
00:03:26,350 --> 00:03:29,390
can be fully exploited, by the dissemination barrier algorithm.
