1
00:00:00,150 --> 00:00:03,520
Now let's look at how the principles
of authentication and

2
00:00:03,520 --> 00:00:07,890
key exchange that we have discussed
are used in actual systems.

3
00:00:07,890 --> 00:00:12,210
Kerberos is a standard protocol
used to provide authentication and

4
00:00:12,210 --> 00:00:17,520
access control in a network environment,
typically an enterprise network.

5
00:00:17,520 --> 00:00:20,800
Every entity in a network,
that is, all users and

6
00:00:20,800 --> 00:00:23,340
network resources,
such as workstations and

7
00:00:23,340 --> 00:00:28,120
printers, have a master key that it
shares with the Kerberos servers.

8
00:00:28,120 --> 00:00:32,880
And the Kerberos servers perform both
authentication and key distribution.

9
00:00:32,880 --> 00:00:37,470
So for convenience, we use KDC
to refer to a Kerberos server.

10
00:00:37,470 --> 00:00:42,490
For a human user, the master key is
derived from his or her password.

11
00:00:42,490 --> 00:00:45,780
For a network device,
the key is configured in.

12
00:00:45,780 --> 00:00:49,330
All the keys are stored
securely at the KDC.

13
00:00:49,330 --> 00:00:52,920
Now let's go over a few
typical Kerberos scenarios.

14
00:00:52,920 --> 00:00:54,322
When user Bob logs in,

15
00:00:54,322 --> 00:01:00,850
his workstation contacts the KDC with an
authentication service request message.

16
00:01:00,850 --> 00:01:05,016
The KDC generates a per day session key,
SB.

17
00:01:05,016 --> 00:01:11,560
And the so-called ticket-granting ticket
that contains SB and the ID of Bob.

18
00:01:11,560 --> 00:01:15,930
And the ticket is encrypted
using the KDC's own key.

19
00:01:15,930 --> 00:01:20,850
The KDC then sends back a message
to Bob's workstation, and

20
00:01:20,850 --> 00:01:24,590
this message is the authentication
service response.

21
00:01:24,590 --> 00:01:29,480
The message contains the per day session
key and the ticket-granting ticket.

22
00:01:29,480 --> 00:01:35,550
And the message is encrypted using the
shared master key between Bob and KDC.

23
00:01:35,550 --> 00:01:39,460
And because KB is the master
key shared between Bob and

24
00:01:39,460 --> 00:01:44,160
KDC, only Bob's local workstation
can decrypt this message.

25
00:01:44,160 --> 00:01:48,221
And then it can store the private
key and the ticket granting ticket.

26
00:01:48,221 --> 00:01:53,715
Bob's local workstation will then use SB
for subsequent messages with the KDC,

27
00:01:53,715 --> 00:01:57,835
and it would include the ticket
granting ticket to remind and

28
00:01:57,835 --> 00:02:00,065
convince the KDC to use SB.

29
00:02:00,065 --> 00:02:05,984
That is, any new request to the KDC will
include the TGT in the request message.

30
00:02:05,984 --> 00:02:10,615
And the new ticket from the KDC
will be encrypted using SB.

31
00:02:10,615 --> 00:02:12,573
There are several benefits
with this scheme.

32
00:02:12,573 --> 00:02:17,595
First, the localhost does not
need to store Bob's password or

33
00:02:17,595 --> 00:02:24,030
password hash once Bob has logged in and
once he has obtained SB from the KDC.

34
00:02:24,030 --> 00:02:28,680
Second, the master key KB,
that Bob shares with the KDC,

35
00:02:28,680 --> 00:02:32,640
is only used once everyday
when Bob logs in initially.

36
00:02:32,640 --> 00:02:37,780
That is, the exposure of the master key,
which is derived from Bob's password and

37
00:02:37,780 --> 00:02:41,090
is subject to password guessing
attacks is very limited.
