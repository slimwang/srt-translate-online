1
00:00:00,000 --> 00:00:03,000
Let's go through it. If you had a regular expression like a+,

2
00:00:03,000 --> 00:00:09,000
I could rewrite that as aa*, so I never actually need plus. It's just convenient.

3
00:00:09,000 --> 00:00:13,000
There is no regular expression for a^n. There is.

4
00:00:13,000 --> 00:00:19,000
It is a+, and this recognizes a, aa, aaa, so this is misleading.

5
00:00:19,000 --> 00:00:23,000
However, for this one, there is no regular expression for a^n b^n.

6
00:00:23,000 --> 00:00:26,000
This is the same as the language of balanced parentheses

7
00:00:26,000 --> 00:00:29,000
except we're using a's in b's instead of open and close parenthesis.

8
00:00:29,000 --> 00:00:33,000
There is no such regular expression. We need a context-free grammar.

9
00:00:33,000 --> 00:00:37,000
Finally, every regular expression has an associated finite state machine

10
00:00:37,000 --> 99:59:59,999
that recognizes the same strings--yep--and we saw a little bit of how to do this.
