1
00:00:00,260 --> 00:00:03,460
Okay, back to the rendering
process of a single frame.

2
00:00:03,460 --> 00:00:05,550
Once the browser knows which
rules apply to an element,

3
00:00:05,550 --> 00:00:07,810
it can begin calculate layout.

4
00:00:07,810 --> 00:00:10,900
Or it, in other words,
how much space elements take up and

5
00:00:10,900 --> 00:00:12,380
where they are on the screen.

6
00:00:12,380 --> 00:00:14,470
So, here's all the CSS
that we want to apply.

7
00:00:15,520 --> 00:00:20,840
And layout turns this into
a collection of boxes like this.

8
00:00:20,840 --> 00:00:23,730
In the tooling,
you'll see this as layout.

9
00:00:23,730 --> 00:00:26,880
The web's layout model means that
one element can affect others.

10
00:00:26,880 --> 00:00:30,080
So, for example, the width of body

11
00:00:30,080 --> 00:00:33,910
typically affects the children's widths
and so on, all the way down the tree.

12
00:00:33,910 --> 00:00:37,100
So the process can be quite involved for
the browser.

13
00:00:37,100 --> 00:00:39,550
Sometimes, you may hear
layout called reflow.

14
00:00:39,550 --> 00:00:41,130
It's the same thing.

15
00:00:41,130 --> 00:00:45,970
The next step in the process is
to talk about vector to raster.

16
00:00:45,970 --> 00:00:51,030
For example, the boxes we had before
were vectors like this, just shapes.

17
00:00:51,030 --> 00:00:55,830
But now what we need to do is fill
in individual pixels, like this.

18
00:00:57,360 --> 00:00:59,630
And that's what a rasterizer is for.

19
00:00:59,630 --> 00:01:02,150
So, this is the layout we had before,
and

20
00:01:02,150 --> 00:01:06,262
these are the draw calls that
the rasterizer will make to fill it in.

21
00:01:06,262 --> 00:01:09,012
When done, it will look like this.

22
00:01:09,012 --> 00:01:12,032
But that's a little too quick,
so let's step through and

23
00:01:12,032 --> 00:01:14,012
see it build up the picture bit by bit.

24
00:01:14,012 --> 00:01:18,010
So you can see, these rectangles
start to appear, then some text.

25
00:01:18,010 --> 00:01:24,740
And we get a shadow, a white line,
a picture, and finally it tightens up.

26
00:01:25,820 --> 00:01:28,929
The tooling is going to
show you this as paint.

27
00:01:28,929 --> 00:01:33,382
You may have noticed in that previous
list that one of the calls was called

28
00:01:33,382 --> 00:01:34,262
draw bitmap.

29
00:01:34,262 --> 00:01:38,461
What we normally do is we
send things like JPEGs, or

30
00:01:38,461 --> 00:01:41,595
PNGs or GIFs down the wire to our page.

31
00:01:41,595 --> 00:01:46,179
But what the browser has to do is
decode these into memory, like this.

32
00:01:50,804 --> 00:01:53,870
In the tooling,
you'll see it as image decode.

33
00:01:53,870 --> 00:01:56,900
Potentially, we're doing something
like responsive web design.

34
00:01:56,900 --> 00:01:59,580
And so the image may also need resizing.

35
00:01:59,580 --> 00:02:04,040
Painting, as you may have noticed just
now, was done into a single surface.

36
00:02:04,040 --> 00:02:09,288
However, sometimes browsers make
multiple surfaces called layers or

37
00:02:09,288 --> 00:02:12,820
compositor layers and
it can paint into those individually.

38
00:02:12,820 --> 00:02:16,970
So here I have a site and
this masthead has its own layer.

39
00:02:16,970 --> 00:02:19,595
That means we can paint
the concept behind.

40
00:02:19,595 --> 00:02:21,929
And we can paint the masthead itself.

41
00:02:21,929 --> 00:02:25,222
The process of handling these
layers is shown in the tooling as

42
00:02:25,222 --> 00:02:26,830
composite layers.

43
00:02:26,830 --> 00:02:31,140
This masthead is a layer, but
because we have buttons for

44
00:02:31,140 --> 00:02:36,585
next and previous on top of it they
are also turned into layers as well.

45
00:02:36,585 --> 00:02:39,095
In this course, we're going to
talk about layer management

46
00:02:39,095 --> 00:02:43,295
to make sure that you don't
create extra layers by accident.

47
00:02:43,295 --> 00:02:45,595
Now, we can put all these
layers back together.

48
00:02:45,595 --> 00:02:48,887
And so now we've finished painting
all the layers for our page.

49
00:02:48,887 --> 00:02:53,080
To be honest, painting actually happens
into a grid of tiles like this.

50
00:02:53,080 --> 00:02:54,470
I mentioned it for completeness, but

51
00:02:54,470 --> 00:02:56,900
it's not something we get
to control as developers.

52
00:02:56,900 --> 00:02:59,770
All of this happened on the CPU.

53
00:02:59,770 --> 00:03:04,150
The layers themselves and
their tiles will be uploaded to the GPU.

54
00:03:04,150 --> 00:03:07,250
Again, this will be included
in composite layers.

55
00:03:07,250 --> 00:03:11,980
And lastly, the GPU will be instructed
to put the pictures up on the screen.

56
00:03:11,980 --> 00:03:13,360
And that, in brief,

57
00:03:13,360 --> 00:03:18,530
is how we get from a single request all
the way through to pixels on screen.
