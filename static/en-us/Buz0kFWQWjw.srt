1
00:00:00,318 --> 00:00:05,328
Today we're going to be talking about,
for the first course,

2
00:00:05,328 --> 00:00:11,436
just dive deep into a little more about
using the flexbox display in HTML.

3
00:00:11,436 --> 00:00:16,753
This is a new way of creating
very responsive grids and

4
00:00:16,753 --> 00:00:21,018
layout, and it's actually really easy.

5
00:00:21,018 --> 00:00:26,231
So this is a demo that will feature
just the basics of flexbox.

6
00:00:26,231 --> 00:00:31,106
So let's assume that I'm
starting my webpage from scratch.

7
00:00:31,106 --> 00:00:33,026
I do not want to use bootstrap.

8
00:00:33,026 --> 00:00:38,114
I do not want to use the ert
great layout structure, I want

9
00:00:38,114 --> 00:00:45,050
to be able to figure out how to create
my own custom layout using flexbox.

10
00:00:45,050 --> 00:00:48,950
And here's the code and
I just want to go through down here,

11
00:00:48,950 --> 00:00:53,942
here's basically the code here, here's
all these objects as you can see

12
00:00:53,942 --> 00:00:56,528
here and I've used just the basic CSS.

13
00:00:56,528 --> 00:01:01,277
Actually color [INAUDIBLE]
because you can clearly see what,

14
00:01:01,277 --> 00:01:06,769
how you will be going to actually align
a layout, create a simple layout.

15
00:01:06,769 --> 00:01:10,121
So basically in this
case I'll start off,

16
00:01:10,121 --> 00:01:14,010
I'll just create a budget disk and
by default.

17
00:01:14,010 --> 00:01:18,266
Their displays, this is called display
block, they typically pick up the whole

18
00:01:18,266 --> 00:01:21,380
width of the browser and
they stack on top of each other.

19
00:01:21,380 --> 00:01:26,730
And that's, by default,
how everything works.

20
00:01:26,730 --> 00:01:31,658
Now, how I would change this from the
default display from a block display to

21
00:01:31,658 --> 00:01:32,659
flex display,

22
00:01:32,659 --> 00:01:36,818
is really just this one line of
code here in my container object.

23
00:01:36,818 --> 00:01:39,890
Also need to make sure
that we have object here.

24
00:01:39,890 --> 00:01:42,902
This actually crucial to do, so

25
00:01:42,902 --> 00:01:48,045
a lot of web developers
use a one by container.

26
00:01:48,045 --> 00:01:53,445
Everything else will get control, a lot
of the rest of the elements down here.

27
00:01:53,445 --> 00:02:00,476
So, in my container object,
container element I will go in.

28
00:02:00,476 --> 00:02:05,707
Actually this and save this,

29
00:02:05,707 --> 00:02:11,230
and now I refresh and this is flex.

30
00:02:11,230 --> 00:02:12,800
So this is what it looks like now.

31
00:02:12,800 --> 00:02:15,288
And now you're like wait
a minute what just happened?

32
00:02:15,288 --> 00:02:21,574
Flex by default tries to put everything
instead of a horizontal mode,

33
00:02:21,574 --> 00:02:25,941
it lights up everything in
a more vertical mode so

34
00:02:25,941 --> 00:02:30,414
basically what we've done
is in one line of code,

35
00:02:30,414 --> 00:02:33,927
we're able to lay out all of our

36
00:02:33,927 --> 00:02:38,635
side by side instead of
stacked on top of each other.

37
00:02:38,635 --> 00:02:45,060
Now sometimes they're like
well that's fine,

38
00:02:45,060 --> 00:02:49,961
They are structured but I won't be able
to control the layout a little more,

39
00:02:49,961 --> 00:02:52,345
is there a way to control the layout?

40
00:02:52,345 --> 00:02:54,645
And what it is is called flex graph.

41
00:02:55,965 --> 00:02:58,875
It's an option in CSS called flex graph.

42
00:02:58,875 --> 00:03:02,445
So that's the graphing feature.

43
00:03:02,445 --> 00:03:03,115
And here we go.

44
00:03:03,115 --> 00:03:08,135
So basically it goes back to
what we've seen like with flex

45
00:03:08,135 --> 00:03:13,430
graph it actually if the element
doesn't fit on one row

46
00:03:13,430 --> 00:03:18,280
it actually wraps around
the whole web page.

47
00:03:18,280 --> 00:03:20,550
Then you figure out one more.

48
00:03:20,550 --> 00:03:22,950
I want to be able to control.

49
00:03:22,950 --> 00:03:29,750
I want weather and advertisement to line
out side by side, so how do I do that?

50
00:03:29,750 --> 00:03:34,630
And the key is to learn FLEX and
display FLEX and display FLEX graph,

51
00:03:34,630 --> 00:03:38,395
gives you the basic
foundation in order for

52
00:03:38,395 --> 00:03:42,725
you to be able to control
the width of your elements.

53
00:03:42,725 --> 00:03:46,885
So, let's say okay,
I won't be able to have green.

54
00:03:46,885 --> 00:03:50,045
This isn't that this is my weather or
outlet and

55
00:03:50,045 --> 00:03:56,830
my advertisements,
they'll be side by side.

56
00:03:56,830 --> 00:04:01,580
And they'll each take 50%
of my width of my browser.

57
00:04:01,580 --> 00:04:06,965
Same thing, I want my gray and
my yellow, related article and

58
00:04:06,965 --> 00:04:10,425
by not a related article I don't want
them to appear side by side as well.

59
00:04:10,425 --> 00:04:17,365
So what we simply do is we just,
this is go to here.

60
00:04:17,365 --> 00:04:24,385
We just set the width and flex box,
right here, this is magic.

61
00:04:24,385 --> 00:04:26,170
And a couple of steps.

62
00:04:27,680 --> 00:04:30,810
I'm able to create somewhat
of a layout for it,

63
00:04:30,810 --> 00:04:33,090
and as you can see, this is pretty fast.

64
00:04:33,090 --> 00:04:35,200
You can say, well Mark,
this is great, but

65
00:04:35,200 --> 00:04:39,140
I won't be able to have a very
flexible layout, in say,

66
00:04:39,140 --> 00:04:44,640
if a person were to load this up
in a mobile app, mobile device.

67
00:04:44,640 --> 00:04:50,310
So basically if I were to,
there we go, if I were to resize.

68
00:04:50,310 --> 00:04:52,610
As you see, I'm resizing this right now.

69
00:04:52,610 --> 00:04:57,280
This is basically the size
of a typical mobile phone.

70
00:04:57,280 --> 00:05:01,300
But you don't want them to look at
this tiny weather section here,

71
00:05:01,300 --> 00:05:03,220
in that tiny advertising section.

72
00:05:03,220 --> 00:05:05,020
You actually want them to think about,
okay.

73
00:05:05,020 --> 00:05:09,570
Let me just, is there a way for
me to go ahead and

74
00:05:09,570 --> 00:05:15,710
like lay out everything on top in my
mobile, when my viewport is this width?

75
00:05:15,710 --> 00:05:20,364
And then, like, have the weather
advertisements, the related article, and

76
00:05:20,364 --> 00:05:21,800
another related article.

77
00:05:21,800 --> 00:05:24,250
The grey, yellow, and the green and

78
00:05:24,250 --> 00:05:28,120
red side by side when the user is
using a bigger screen.

79
00:05:28,120 --> 00:05:31,700
There it is, you learned that in HTML & CSS.

80
00:05:31,700 --> 00:05:38,345
And what I'm going to do is I'm going to
set, I'm going to have a logic says like.

81
00:05:38,345 --> 00:05:41,797
If the width is around,

82
00:05:41,797 --> 00:05:47,400
it's greater than 360 pixels.

83
00:05:47,400 --> 00:05:51,090
If this is just where
your 360 pixels.

84
00:05:51,090 --> 00:05:57,990
I'm going to have you should be green or
red show side by side.

85
00:05:57,990 --> 00:06:02,444
And if the width is less than 360
pixels like this one is like,

86
00:06:02,444 --> 00:06:06,585
I'm going to have all these divs
stacked on top of eachother.

87
00:06:06,585 --> 00:06:11,172
What I do is I go back into my code and
I include immediate work.

88
00:06:11,172 --> 00:06:15,540
[SOUND] And you thought you've
learned that HTML CSS class,

89
00:06:15,540 --> 00:06:20,008
again reminder,
it's called media at media's cleaning.

90
00:06:20,008 --> 00:06:22,470
And minimum width is 316 watts.

91
00:06:22,470 --> 00:06:25,360
So basically if
the minimal width is 361.

92
00:06:25,360 --> 00:06:28,600
I want to create, so
basically if I have a big screen,

93
00:06:28,600 --> 00:06:30,510
if the user has a big screen.

94
00:06:30,510 --> 00:06:34,590
I want to green, red, grey,
yellow have a width of 50%.

95
00:06:34,590 --> 00:06:38,660
Otherwise I'm going have all of
them stacked on top of each other.

96
00:06:38,660 --> 00:06:42,890
Because by default, if you go up here,
the width is 100% for each division.

97
00:06:44,520 --> 00:06:46,700
So there's your fresh air.

98
00:06:46,700 --> 00:06:51,447
So, this is what was simulated
how you're going to simulate on

99
00:06:51,447 --> 00:06:52,758
a mobile phone.

100
00:06:52,758 --> 00:06:58,346
[INAUDIBLE] And if you think about
okay this is [INAUDIBLE] and

101
00:06:58,346 --> 00:07:04,626
if i increase the screen we now go
to someone with a bigger screen.

102
00:07:08,498 --> 00:07:13,191
That's basically a quick demo
of how you would start thinking

103
00:07:13,191 --> 00:07:18,154
about using these flex box properties
to learn about how to create

104
00:07:18,154 --> 00:07:22,600
some very robust layouts in
a very simple and elegant way.

105
00:07:22,600 --> 00:07:28,000
So I really would highly recommend
you check out flexbox a little more.

106
00:07:28,000 --> 00:07:32,810
If you want to design your
site using your own layout

107
00:07:32,810 --> 00:07:36,450
tools because I know we've
taught you how to use Bootstrap.

108
00:07:36,450 --> 00:07:40,560
Now in this session we're teaching you
how to create your own custom layout.
