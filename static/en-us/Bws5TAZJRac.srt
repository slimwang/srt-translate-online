1
00:00:00,470 --> 00:00:02,969
Let's start with a brief overview of Software

2
00:00:02,969 --> 00:00:06,000
Defined Networking, or SDN. We'll first start by

3
00:00:06,000 --> 00:00:08,690
defining SDN, and in particular we'll talk about

4
00:00:08,690 --> 00:00:11,330
what is a Software Defined Network, then well

5
00:00:11,330 --> 00:00:14,700
talk about what are the advantages of SDN

6
00:00:14,700 --> 00:00:18,350
over a conventional network architecture. We'll overview the

7
00:00:18,350 --> 00:00:22,200
history of SDN, the infrastructure that supports it,

8
00:00:22,200 --> 00:00:25,870
in particular how SDNs are designed and built and

9
00:00:25,870 --> 00:00:29,160
the applications of SDN. Specifically, what they can

10
00:00:29,160 --> 00:00:31,000
be used for and how they can be

11
00:00:31,000 --> 00:00:35,710
used to simplify various network management tasks. Perhaps

12
00:00:35,710 --> 00:00:37,920
the best way to understand what an SDN

13
00:00:37,920 --> 00:00:41,220
is Is to compare it to the behavior

14
00:00:41,220 --> 00:00:46,160
of today's networks. Today's networks have two functions.

15
00:00:46,160 --> 00:00:48,090
The first is the Data Plane, whose task

16
00:00:48,090 --> 00:00:51,450
it is to forward packets to their ultimate destination.

17
00:00:51,450 --> 00:00:53,990
But in order for the Data Plane to work,

18
00:00:53,990 --> 00:00:57,300
we also need a way of computing the state

19
00:00:57,300 --> 00:01:00,390
that each of these routers has that allows the

20
00:01:00,390 --> 00:01:03,450
routers to make the right decision in forwarding traffic to

21
00:01:03,450 --> 00:01:06,430
the destination. The state that lives in each of

22
00:01:06,430 --> 00:01:09,190
these routers that allows the routers to make these

23
00:01:09,190 --> 00:01:12,430
decisions about how to forward packets are called routing

24
00:01:12,430 --> 00:01:16,920
tables. It's the job of the network's Control Plane to

25
00:01:16,920 --> 00:01:22,620
compute these routing tables. In conventional networks, the Control

26
00:01:22,620 --> 00:01:28,900
and Data Plane both run on the routers that are distributed across the network.

27
00:01:28,900 --> 00:01:35,530
In an SDN, the Control Plane runs in a logically centralized controller.

28
00:01:35,530 --> 00:01:39,210
Additionally, the controller typically controls multiple

29
00:01:39,210 --> 00:01:42,230
routers across the network and often,

30
00:01:42,230 --> 00:01:45,470
the control program exerts control over all

31
00:01:45,470 --> 00:01:48,620
the routers in the network, thus facilitating network-wide

32
00:01:48,620 --> 00:01:51,920
control. These two characteristics are the defining

33
00:01:51,920 --> 00:01:54,790
features of a Software Defined Network. The separation

34
00:01:54,790 --> 00:01:56,750
of data and control allows a network

35
00:01:56,750 --> 00:02:00,640
operator to build a network with commodity devices,

36
00:02:00,640 --> 00:02:03,670
where the control, resides in a separate control

37
00:02:03,670 --> 00:02:07,490
program. This re-factoring allows us to move from

38
00:02:07,490 --> 00:02:10,370
a network where devices are vertically

39
00:02:10,370 --> 00:02:14,390
integrated making it very tough to innovate

40
00:02:14,390 --> 00:02:19,170
to a network where the devices have open interfaces that can be controlled by

41
00:02:19,170 --> 00:02:21,800
software. Thus, allowing for much more

42
00:02:21,800 --> 00:02:24,430
rapid innovation. Let's survey a brief history

43
00:02:24,430 --> 00:02:28,250
of SDN. Previous to 2004, configuration was

44
00:02:28,250 --> 00:02:32,070
distributed, leading to buggy and unpredictable behavior.

45
00:02:32,070 --> 00:02:36,960
Around 2004, we had the idea to control the network from

46
00:02:36,960 --> 00:02:41,860
a logically centralized high level program. That logically centralized

47
00:02:41,860 --> 00:02:46,920
controller focused on the border gateway protocol, and was called the routing

48
00:02:46,920 --> 00:02:51,990
control platform, or RCP. In 2005, researchers

49
00:02:51,990 --> 00:02:57,669
generalized the notion of the RCP for different planes. The decision

50
00:02:57,669 --> 00:03:00,750
plane which computed the forwarding state for

51
00:03:00,750 --> 00:03:03,515
devices in the network, the Data Plane,

52
00:03:03,515 --> 00:03:06,754
which forwarded traffic based on decisions made

53
00:03:06,754 --> 00:03:10,062
by the decision plane. And the dissemination and

54
00:03:10,062 --> 00:03:13,527
discovery planes, which provide the decision plane

55
00:03:13,527 --> 00:03:16,145
the information that it needs to compute

56
00:03:16,145 --> 00:03:19,610
the forwarding state, which ultimately gets pushed

57
00:03:19,610 --> 00:03:22,856
to the data plane. Around 2008, these concepts

58
00:03:22,856 --> 00:03:25,409
effectively hit the mainstream, through a

59
00:03:25,409 --> 00:03:30,755
product called OpenFlow. OpenFlow's intellectual roots are

60
00:03:30,755 --> 00:03:33,823
with the RCP and 4D. But OpenFlow

61
00:03:33,823 --> 00:03:37,267
has made practical when merchant silicon vendors

62
00:03:37,267 --> 00:03:40,137
open their APIs, so that switch chipsets

63
00:03:40,137 --> 00:03:43,860
could be controlled from software. So suddenly

64
00:03:43,860 --> 00:03:47,960
there was an emergence of cheap switches that were build based on open chip

65
00:03:47,960 --> 00:03:49,620
sets that could be controlled from

66
00:03:49,620 --> 00:03:52,860
software. This development effectively allowed us

67
00:03:52,860 --> 00:03:55,080
to decouple the control plane and

68
00:03:55,080 --> 00:03:58,080
the data plane in commodity switching hardware.
