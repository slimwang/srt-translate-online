1
00:00:00,630 --> 00:00:02,180
Next, we're going to speak with Dr.

2
00:00:02,180 --> 00:00:07,160
Josh Mandel who earned a B.S.
in Computer Science at MIT and an M.D.

3
00:00:07,160 --> 00:00:10,100
degree at Tufts University School
of Medicine.

4
00:00:10,100 --> 00:00:14,320
Currently, he's Chief Architect for
the Smart Platform Project

5
00:00:14,320 --> 00:00:18,110
at the Boston Children's Hospital and
Harvard Medical School.

6
00:00:18,110 --> 00:00:23,330
So Josh, I really appreciate you taking
the time to be with the students today.

7
00:00:23,330 --> 00:00:25,840
I sometimes think of you
as a younger version of me.

8
00:00:25,840 --> 00:00:29,950
So could you tell the students
a little bit about your background?

9
00:00:29,950 --> 00:00:30,610
>> Sure.

10
00:00:30,610 --> 00:00:33,640
Well these days the main hat that
I'm wearing is I'm the architect for

11
00:00:33,640 --> 00:00:36,970
a project called Smart Platforms
at Boston Children's Hospital,

12
00:00:36,970 --> 00:00:38,130
Harvard Medical School.

13
00:00:38,130 --> 00:00:40,410
But I have a background
in computer science and

14
00:00:40,410 --> 00:00:42,750
did undergrad in
computer science at MIT.

15
00:00:42,750 --> 00:00:45,800
I spent a little bit of time working
at a biotech startup in Cambridge,

16
00:00:45,800 --> 00:00:49,710
Mass doing gene synthesis and
laboratory automation.

17
00:00:49,710 --> 00:00:51,830
And I want to medical school at Tufts.

18
00:00:51,830 --> 00:00:54,670
I graduated in 2010 and
realized I was having

19
00:00:54,670 --> 00:00:57,620
a lot of fun trying to fix
thecomputer systems in hospitals and

20
00:00:57,620 --> 00:01:02,039
clinics and I've been working hard since
then in the health informatics space.

21
00:01:03,080 --> 00:01:04,180
>> That's great.

22
00:01:04,180 --> 00:01:09,040
You've been involved I guess since
the beginning with the SHARP Project at

23
00:01:09,040 --> 00:01:10,280
Harvard Children's Hospital.

24
00:01:10,280 --> 00:01:12,560
Could you tell us
a little bit about that?

25
00:01:12,560 --> 00:01:13,120
>> Yeah, that's right.

26
00:01:13,120 --> 00:01:13,710
Sure.

27
00:01:13,710 --> 00:01:19,520
So back in 2009, early 2010, the Office
of the National Coordinator for

28
00:01:19,520 --> 00:01:23,860
Health IT Sponsored four research
projects or put out proposals for

29
00:01:23,860 --> 00:01:25,910
four research projects.

30
00:01:25,910 --> 00:01:29,820
One in the area of security,
one in the area of data normalization,

31
00:01:29,820 --> 00:01:34,810
one in the area of cognitive aspects
of using EHRs and one in the area of

32
00:01:34,810 --> 00:01:38,260
building app platforms on top of
electronic health record systems.

33
00:01:38,260 --> 00:01:40,910
And that last one is a project called
SMART that I've been working on

34
00:01:40,910 --> 00:01:42,690
at Harvard since 2010.

35
00:01:42,690 --> 00:01:45,930
And it's all about trying to build
app platforms so that doctors and

36
00:01:45,930 --> 00:01:51,000
patients and healthcare practitioners
can use the applications that they want

37
00:01:51,000 --> 00:01:53,260
to to interact with health data.

38
00:01:53,260 --> 00:01:56,420
The idea was, we've got iPhones
in our civilian lives and

39
00:01:56,420 --> 00:01:59,170
Android phones that let us use
whatever apps that we want.

40
00:01:59,170 --> 00:02:02,330
And wouldn't it be nice in health care
if we could bring the app that we wanted

41
00:02:02,330 --> 00:02:04,690
to the table to work
with patient record data.

42
00:02:04,690 --> 00:02:09,280
>> This idea of app platforms
is something that a number of

43
00:02:09,280 --> 00:02:11,090
people are interested in.

44
00:02:12,780 --> 00:02:15,780
Tell us why you feel it's important and

45
00:02:15,780 --> 00:02:18,870
what approach did Harvard
take to developing one.

46
00:02:19,950 --> 00:02:23,800
>> Yeah, so we have a lot of health care
data, some of which patients bring to

47
00:02:23,800 --> 00:02:26,890
the table, some of which are measured
in a traditional clinical setting.

48
00:02:26,890 --> 00:02:30,890
And those data live inside of a variety
of different databases inside of

49
00:02:30,890 --> 00:02:32,590
hospital and clinics.

50
00:02:32,590 --> 00:02:36,180
And, when it comes to making sense of
an entire patient, to make a decision,

51
00:02:36,180 --> 00:02:40,010
to figure out a diagnosis, to decide
on a kind of treatment, it's extremely

52
00:02:40,010 --> 00:02:42,980
helpful to be able to bring those
data together in one place and

53
00:02:42,980 --> 00:02:46,150
to use specific tools that
help to do a specific job.

54
00:02:46,150 --> 00:02:48,940
So, this is something that we're pretty
used to in terms of an app platform on

55
00:02:48,940 --> 00:02:52,520
the phone, or you might use a specific
tool just to manage your calendar and

56
00:02:52,520 --> 00:02:54,690
a different tool to
manage your to do list.

57
00:02:54,690 --> 00:02:57,220
And if there's a better calendar
application that comes along, or

58
00:02:57,220 --> 00:03:00,340
a better to do list that comes along,
you can trade information with

59
00:03:00,340 --> 00:03:02,690
your friends and
find the best one that works for you.

60
00:03:02,690 --> 00:03:05,330
And we'd like to be able to do the same
thing with the way that we make

61
00:03:05,330 --> 00:03:08,520
a diagnosis, or make a treatment for
a diabetic patient,

62
00:03:08,520 --> 00:03:12,270
or engage in communicating with
patients in a clinical setting.

63
00:03:12,270 --> 00:03:15,120
We'd like to be able to encourage
app developers to build

64
00:03:15,120 --> 00:03:18,060
the best tools to do these
small kinds of jobs and

65
00:03:18,060 --> 00:03:22,448
give end users the freedom to pick
the tools that really work for them.

66
00:03:22,448 --> 00:03:24,630
So there have been a number of
approaches to these kinds of

67
00:03:24,630 --> 00:03:28,110
app platform development and what
we're doing at Harvard and with smart

68
00:03:28,110 --> 00:03:32,500
platforms is to build an open set of
specifications built on open standards

69
00:03:32,500 --> 00:03:36,520
that anyone can implement without any
proprietary technology in the stacks.

70
00:03:36,520 --> 00:03:40,134
So we want to make sure that all the
specifications we build are out there on

71
00:03:40,134 --> 00:03:41,960
the web for people to build on top of.

72
00:03:41,960 --> 00:03:46,840
>> Well along came HIMSS 2014.

73
00:03:46,840 --> 00:03:49,270
And I ran into you there.

74
00:03:50,280 --> 00:03:56,660
And to my surprise and delight you
were showing a new version of SMART.

75
00:03:56,660 --> 00:03:58,340
Can you tell us about that?

76
00:03:58,340 --> 00:03:58,970
>> Sure.
So

77
00:03:58,970 --> 00:04:01,570
we were very excited coming into
the HIMSS conference which is

78
00:04:01,570 --> 00:04:05,280
the Health Information Management
Systems Society conference in Orlando

79
00:04:05,280 --> 00:04:10,200
this past February where we were able to
get three or four different EHR vendors

80
00:04:10,200 --> 00:04:14,170
that come together and implement
support for the same set of apps.

81
00:04:14,170 --> 00:04:17,740
So we had some apps that we had built
ourselves on the SMART platforms team

82
00:04:17,740 --> 00:04:21,430
and other apps that had been built by
independent application developers.

83
00:04:21,430 --> 00:04:24,120
And we were able to get this same
package of apps running on top of

84
00:04:24,120 --> 00:04:29,180
a commercial EHR system from a company
called Cerner on top of an open source

85
00:04:29,180 --> 00:04:33,170
electronic health record called Vista,
which this instance of Vista

86
00:04:33,170 --> 00:04:36,360
was maintained by Hewlett-Packard
in their government innovation lab.

87
00:04:36,360 --> 00:04:40,144
We were also able to show these same
apps running on top of a system called

88
00:04:40,144 --> 00:04:43,630
Help2 that runs at Intermountain
Healthcare in Salt Lake City.

89
00:04:43,630 --> 00:04:47,343
So it was a really exciting time
because we were able to take some new,

90
00:04:47,343 --> 00:04:50,226
emerging standards from HL7
which is the healthcare

91
00:04:50,226 --> 00:04:53,237
standards development organization and
build this app

92
00:04:53,237 --> 00:04:56,567
platform on top of an open set of
standards that EHR vendors and

93
00:04:56,567 --> 00:05:00,476
large healthcare providers
organizations, and Hewlett-Packard and

94
00:05:00,476 --> 00:05:04,410
government innovation lab,
were all able to integrate consistently.

95
00:05:04,410 --> 00:05:08,790
>> And more specifically,
that new standard was FHIR.

96
00:05:08,790 --> 00:05:11,100
>> So yes, we've been doing a lot
of work recently with FHIR,

97
00:05:11,100 --> 00:05:14,840
Fast Healthcare Interoperability
Resources which provide a couple of

98
00:05:14,840 --> 00:05:18,580
key building blocks when you're thinking
about building a health app platform.

99
00:05:18,580 --> 00:05:21,330
And so the first important
building block that FHIR

100
00:05:21,330 --> 00:05:23,650
provides is a set of
clinical data models.

101
00:05:23,650 --> 00:05:26,970
So how do you write down a medication or
an allergy or a problem or

102
00:05:26,970 --> 00:05:29,620
a lab result or
a set of patient demographics?

103
00:05:29,620 --> 00:05:33,420
And FHIR provides detailed data models,
which are called resources for

104
00:05:33,420 --> 00:05:34,900
each of those things.

105
00:05:34,900 --> 00:05:38,120
And the second building block
that FHIR provides is an API,

106
00:05:38,120 --> 00:05:40,120
an application programming interface.

107
00:05:40,120 --> 00:05:45,270
And this is one that's built on ADTP and
REST, that lets you query for

108
00:05:45,270 --> 00:05:48,480
the specific kinds of discrete data
elements that you're interested in.

109
00:05:48,480 --> 00:05:52,240
So if you're trying to build
a lab Data viewing app

110
00:05:52,240 --> 00:05:55,055
you can write a restful query or
pull back the lab results that

111
00:05:55,055 --> 00:05:58,455
you're interested in from a system
that implements this FHIR API.

112
00:05:58,455 --> 00:06:01,470
So FHIR has been a really
important building block for

113
00:06:01,470 --> 00:06:05,040
the current version of SMART which
is entirely based on open standards.

114
00:06:06,240 --> 00:06:07,880
>> Well can you show us a little bit?

115
00:06:07,880 --> 00:06:10,235
>> Yeah I would be delighted
to show you what the SMART and

116
00:06:10,235 --> 00:06:11,910
FHIR platform looks like.

117
00:06:11,910 --> 00:06:15,560
So, I mentioned that Smart is a platform
where third party app developer's

118
00:06:15,560 --> 00:06:17,860
can build apps that hook into EHR's.

119
00:06:17,860 --> 00:06:20,572
And I'm going to start off by
showing you, not a real EHR, but

120
00:06:20,572 --> 00:06:23,410
kind of the demo sandbox system
that we host at Harvard.

121
00:06:23,410 --> 00:06:26,108
So, we won't be looking at
any real patient data, but

122
00:06:26,108 --> 00:06:29,135
you'll see a set of synthetic and
anonymized patient data.

123
00:06:29,135 --> 00:06:33,500
And anybody who wants to try this at
home can go to fhir.smartplatforms.org

124
00:06:33,500 --> 00:06:34,900
and create an account and

125
00:06:34,900 --> 00:06:38,300
go through the same app and the same
demo that I'll be showing you here.

126
00:06:38,300 --> 00:06:41,940
But this fake EHR that I'll start out
with just does two very simple jobs.

127
00:06:41,940 --> 00:06:43,560
It lets you find a patient.

128
00:06:43,560 --> 00:06:45,640
And then it lets you run another app.

129
00:06:45,640 --> 00:06:48,130
So I'll show you an example
of a growth charts app

130
00:06:48,130 --> 00:06:50,540
that we built at
Boston Children's Hospital.

131
00:06:50,540 --> 00:06:52,410
And I'm going to pick
a pediatric record here.

132
00:06:52,410 --> 00:06:55,120
I'm going to search for
a patient called Amy Lee.

133
00:06:55,120 --> 00:06:58,330
And I'm going to open this
record in the Growth Charts App.

134
00:06:58,330 --> 00:07:02,534
And what we'll see when this
launches is two different views of

135
00:07:02,534 --> 00:07:05,490
a patient's growth history.

136
00:07:05,490 --> 00:07:08,720
We decided it was really important to
build apps that made sense not just for

137
00:07:08,720 --> 00:07:10,840
clinicians but for patients as well.

138
00:07:10,840 --> 00:07:13,122
So we won't get deep into
the features of this app.

139
00:07:13,122 --> 00:07:15,870
But I'll point out at a really high
level this app is able to fetch the data

140
00:07:15,870 --> 00:07:20,260
that it needs from the SMART EHR
that's running on the other end.

141
00:07:20,260 --> 00:07:23,800
And when it gets those data, it's able
to plot the traditional kinds of growth

142
00:07:23,800 --> 00:07:26,880
curves that you see on
a paper growth chart.

143
00:07:26,880 --> 00:07:31,480
So the initial view that we'll see here
will show me the child's length or

144
00:07:31,480 --> 00:07:33,170
height, as well as their weight.

145
00:07:33,170 --> 00:07:35,590
And we can see how it's
been tracking over time.

146
00:07:35,590 --> 00:07:39,420
And this is an app that built
entirely using HTML and JavaScript.

147
00:07:39,420 --> 00:07:43,340
It runs entirely client side in the web
browser, so the only server side

148
00:07:43,340 --> 00:07:47,330
component of this app is just a static
web server that hosts this HTML and

149
00:07:47,330 --> 00:07:50,650
JavaScript, and the app itself is
all just running in the browser.

150
00:07:50,650 --> 00:07:53,700
So this is a traditional kind of
clinician-facing view that lets me see

151
00:07:53,700 --> 00:07:57,190
how growth has been tracking in
terms of percentiles over time.

152
00:07:57,190 --> 00:07:59,300
But also built into this app
is a communication tool,

153
00:07:59,300 --> 00:08:01,740
so we can have a conversation
with parents as well

154
00:08:01,740 --> 00:08:04,860
that highlights a few of the key
aspects of a child's growth.

155
00:08:04,860 --> 00:08:08,350
So in this example we see this is
a patient with a healthy weight, and so

156
00:08:08,350 --> 00:08:11,510
rather than getting bogged down in a lot
of curves and numbers that are changing

157
00:08:11,510 --> 00:08:16,330
over time, the real essential message
for a conversation with Amy's parents

158
00:08:16,330 --> 00:08:19,820
here might be that Amy has a healthy
weight for her height and for her age.

159
00:08:19,820 --> 00:08:22,880
And we can see that her weight has
been trending in a healthy fashion

160
00:08:22,880 --> 00:08:24,530
since her last visit.

161
00:08:24,530 --> 00:08:26,390
So this an app that we built.

162
00:08:26,390 --> 00:08:29,890
It's available open source, so
anybody can take the code for

163
00:08:29,890 --> 00:08:33,980
this application and run it, or
extend it to fit their needs.

164
00:08:33,980 --> 00:08:37,730
And it's an application that you're
seeing here running against what

165
00:08:37,730 --> 00:08:43,159
we call our sandbox server with 50 or
60 sample patients of data.

166
00:08:43,159 --> 00:08:45,710
>> And I believe the app is
called Growth-Tastic!, just so

167
00:08:45,710 --> 00:08:47,150
the students have the name.

168
00:08:47,150 --> 00:08:50,780
>> Yeah, well, the official name is it's
the SMART Pediatric Growth Chart App,

169
00:08:50,780 --> 00:08:54,480
but when we want to sound jazzy about
it, we'll call it Growth-Tastic!

170
00:08:54,480 --> 00:08:57,160
And if it's interesting, Mark,
I could show you a little bit about what

171
00:08:57,160 --> 00:08:59,730
the data looked like under
the hood when this app runs.

172
00:08:59,730 --> 00:09:01,210
>> I think it'd be great.

173
00:09:01,210 --> 00:09:06,070
>> Okay, so let me actually open up
the Chrome developer tools here and

174
00:09:06,070 --> 00:09:08,880
show you what happens when
we load this app again.

175
00:09:08,880 --> 00:09:11,660
So what I want to show you is,
as this app loads,

176
00:09:11,660 --> 00:09:16,160
the set of API calls that it makes in
order to get data from the smart EHR.

177
00:09:16,160 --> 00:09:20,633
We won't talk about the details of
authorization on authentication right

178
00:09:20,633 --> 00:09:24,964
now but I'll just say that under the
hood the app is getting access tokens

179
00:09:24,964 --> 00:09:28,090
that it needs to fetch
clinical data using oloft2.

180
00:09:28,090 --> 00:09:31,520
But once it's got those access tokens
it's able to make a couple of very

181
00:09:31,520 --> 00:09:34,560
simple API calls in order
to fetch clinical data.

182
00:09:34,560 --> 00:09:38,330
The first one here is a call
to get patient demographics.

183
00:09:38,330 --> 00:09:44,340
And so the call itself is just
/patient/880378, which the patient

184
00:09:44,340 --> 00:09:48,980
ID in this case, and what we get back
is a FHIR response which is a JSON

185
00:09:48,980 --> 00:09:52,965
representation of patient demographics
which has the patient's name,

186
00:09:52,965 --> 00:09:57,185
the patient's birthdate, medical
record numbers, other identifiers.

187
00:09:57,185 --> 00:10:00,485
And we can see just at a glance, this
is the kind of payload that a developer

188
00:10:00,485 --> 00:10:03,215
could look at, inspect and
make sense of pretty quickly.

189
00:10:03,215 --> 00:10:07,182
And if there are any fields that you
didn't understand the FHIR specification

190
00:10:07,182 --> 00:10:11,542
which is hosted on the web defines each
one of these fields in great detail.

191
00:10:11,542 --> 00:10:13,432
So that's what the patient
demographics look like.

192
00:10:13,432 --> 00:10:14,860
And I'll show you just one more example.

193
00:10:14,860 --> 00:10:19,842
This app only needs to make one other
API call which is to fetch vital signs.

194
00:10:19,842 --> 00:10:22,990
So heights and weights and
body mass indexes.

195
00:10:22,990 --> 00:10:25,340
And in fHIR all those things
are called observations.

196
00:10:25,340 --> 00:10:28,290
So the app is able to fetch just
the observations that it needs

197
00:10:28,290 --> 00:10:30,290
about a patient's growth over time.

198
00:10:30,290 --> 00:10:33,620
And I'll give you just a really quick
look at what those observations look

199
00:10:33,620 --> 00:10:35,540
like when they come over the wire.

200
00:10:35,540 --> 00:10:39,930
So we're looking right now at the FHIR
JSON representation of an observation.

201
00:10:39,930 --> 00:10:42,870
And in this case it's a body
mass index observation.

202
00:10:42,870 --> 00:10:47,660
And we can see that this is a quantity
of 16.9 kilograms per meter squared.

203
00:10:47,660 --> 00:10:49,800
And it was taken in 2008.

204
00:10:49,800 --> 00:10:53,560
So again, this is the JSON
representation of a set of FHIR data.

205
00:10:53,560 --> 00:10:57,400
And this is over the wire the kind of
raw information that's fueling this app.

206
00:10:57,400 --> 00:10:59,590
Once the app fetches
patient demographics and

207
00:10:59,590 --> 00:11:03,090
a set of these observations
from the EHR, it's able to draw

208
00:11:03,090 --> 00:11:06,500
the visualization that you see here on
this screen based just on those data.

209
00:11:07,800 --> 00:11:11,210
>> Josh, I know in addition
to what you've shown us,

210
00:11:11,210 --> 00:11:15,940
you're interested in the idea that
many people refer to as Pull.

211
00:11:15,940 --> 00:11:20,404
Can you talk a bit about how
you're using other technologies to

212
00:11:20,404 --> 00:11:24,450
enable patients to effectively
subscribe to receive their own data.

213
00:11:24,450 --> 00:11:25,160
>> Sure.

214
00:11:25,160 --> 00:11:29,390
So the work that I've been doing with
my SMART platform architect hat on

215
00:11:29,390 --> 00:11:32,520
has been really focused on
building tools that let

216
00:11:32,520 --> 00:11:35,960
clinicians launch an app from
an electronic health record system or

217
00:11:35,960 --> 00:11:39,980
that let patients launch an app from
inside of a patient portal online.

218
00:11:39,980 --> 00:11:42,480
But I've also been
very involved with some

219
00:11:42,480 --> 00:11:47,460
efforts at the level of federal
work groups to define standards and

220
00:11:47,460 --> 00:11:51,080
specifications that let patients
access their own data online.

221
00:11:51,080 --> 00:11:55,970
So right now in 2014 as part
of meaningful use stage two

222
00:11:55,970 --> 00:11:59,390
patients have the ability to view their
data online through a patient portal,

223
00:11:59,390 --> 00:12:03,820
and to download it and to transmit it
to a third party app that they choose.

224
00:12:04,930 --> 00:12:08,250
And typically the way that transmission
happens is through something called

225
00:12:08,250 --> 00:12:13,210
Push Messaging or the Direct Project,
which works like secure email.

226
00:12:13,210 --> 00:12:16,200
I've been very interested in
trying to define standards for

227
00:12:16,200 --> 00:12:18,830
a different kind of mechanism for
apps to access data.

228
00:12:18,830 --> 00:12:22,880
So instead of basically emailing your
data to the app, we can have a web API

229
00:12:22,880 --> 00:12:27,750
where apps ask for data and patients can
authorize access to those data or not.

230
00:12:27,750 --> 00:12:30,350
And so we've defined a set
of specifications called

231
00:12:30,350 --> 00:12:35,740
the Blue Button REST API that have
enabled anyone with health data, so

232
00:12:35,740 --> 00:12:41,470
an EHR vendor or a healthcare provider
organization, to expose patient data for

233
00:12:41,470 --> 00:12:45,440
patients who want to authorize
access to third party applications.

234
00:12:45,440 --> 00:12:48,890
It's a very similar set of technology
to what we've been doing with SMART.

235
00:12:48,890 --> 00:12:51,990
But a different set of use cases and
a different set of end users.

236
00:12:51,990 --> 00:12:52,940
>> This is great.

237
00:12:52,940 --> 00:12:57,940
I want the students to reflect back on
the interview with Doug Fridsma much

238
00:12:57,940 --> 00:13:02,980
earlier in the course,
when he talked about the idea of using

239
00:13:02,980 --> 00:13:08,150
Internet to move health IT into
a new era of interoperability.

240
00:13:08,150 --> 00:13:10,170
And I think that, Josh,

241
00:13:10,170 --> 00:13:15,090
you've just shown us a real live
example of doing just that.

242
00:13:15,090 --> 00:13:17,750
And I really appreciate your
taking the time to do it.

243
00:13:17,750 --> 00:13:21,630
I hope this is something the students
find exciting and maybe some of them

244
00:13:21,630 --> 00:13:26,260
will decide to do what you and
I did and actually go into this field.

245
00:13:26,260 --> 00:13:27,270
Thank you again.

246
00:13:27,270 --> 00:13:28,280
>> Thanks very much, Mark.

247
00:13:28,280 --> 00:13:29,030
It's been my pleasure.
