1
00:00:00,410 --> 00:00:03,510
All right so now you understand how
a sample app with the list view and

2
00:00:03,510 --> 00:00:05,340
custom array adapter work.

3
00:00:05,340 --> 00:00:06,510
So that's a great starting point for

4
00:00:06,510 --> 00:00:09,790
understanding how we can make
the corresponding changes in our app.

5
00:00:09,790 --> 00:00:14,580
Now that Android Flavor App had two text
views and one image view per list item.

6
00:00:14,580 --> 00:00:18,320
In the case of our Miwok App,
we'll want to have two text views.

7
00:00:18,320 --> 00:00:21,080
And this is why we'll need to
create a custom array adapter,

8
00:00:21,080 --> 00:00:24,740
because the default one only
works with a single text view.

9
00:00:24,740 --> 00:00:26,878
So let's start with
step one of the quiz.

10
00:00:26,878 --> 00:00:30,700
First we asked you to create a list of
word objects and here's the code for

11
00:00:30,700 --> 00:00:32,530
the ArrayList of word objects.

12
00:00:32,530 --> 00:00:36,880
Notice that each word object created has
an English and Miwok translation pair.

13
00:00:36,880 --> 00:00:39,740
So make sure the order of the inputs
is English word first and

14
00:00:39,740 --> 00:00:41,000
then Miwok word, and

15
00:00:41,000 --> 00:00:44,750
remember that's because that's how we
set it up in the word constructor here.

16
00:00:44,750 --> 00:00:47,680
Now back in the NumbersActivity,
we asked you to modify

17
00:00:47,680 --> 00:00:51,290
the way that the adapter was created and
set it on the list view.

18
00:00:51,290 --> 00:00:54,170
So we provided some code for you that
you could add to the NumbersActivity

19
00:00:54,170 --> 00:00:56,940
to make sure that the word
adapter was built correctly.

20
00:00:56,940 --> 00:00:59,530
So we had you remove the old
ArrayAdapter code and

21
00:00:59,530 --> 00:01:02,310
then the onCreate method
would look like this.

22
00:01:02,310 --> 00:01:05,019
So here we're creating a new
WordAdapter object and

23
00:01:05,019 --> 00:01:07,340
storing it in a variable called adapter.

24
00:01:07,340 --> 00:01:09,650
We're calling the constructor and
passing in a context.

25
00:01:09,650 --> 00:01:13,329
So that's what this refers,
it refers to the NumbersActivity and

26
00:01:13,329 --> 00:01:16,480
then passing in the array
list of word objects.

27
00:01:16,480 --> 00:01:20,570
There we're finding a list view in
the layout with ID called lists.

28
00:01:20,570 --> 00:01:22,850
And then setting the adapter on it.

29
00:01:22,850 --> 00:01:26,990
Now for the third step, we asked you
to create a new word adapter class.

30
00:01:26,990 --> 00:01:29,720
And we showed you the instructions for
how to do this in the earlier video.

31
00:01:29,720 --> 00:01:33,620
For the fourth step,
we modified the class declaration so

32
00:01:33,620 --> 00:01:37,940
that the word adapter extends or
inherits from the array adapter class.

33
00:01:37,940 --> 00:01:41,391
So by specifying the word class
as a generic parameter here,

34
00:01:41,391 --> 00:01:46,040
we expect the ArrayAdapter's data
source be the list of word objects.

35
00:01:46,040 --> 00:01:49,730
Now in the fifth step, we asked
you to override the getView method

36
00:01:49,730 --> 00:01:52,540
to provide your own
implementation of the method.

37
00:01:52,540 --> 00:01:55,360
So this code here was
generated by Android Studio.

38
00:01:55,360 --> 00:02:00,570
You could have either used the keyboard
shortcut, Control +O or gone up here.

39
00:02:00,570 --> 00:02:04,210
To Code, Override Method and
selected getView Method.

40
00:02:04,210 --> 00:02:07,930
So for step six, we asked you to
complete this method with your own

41
00:02:07,930 --> 00:02:12,180
implementation and pointed you to
the AndroidFlavor app as an example.

42
00:02:12,180 --> 00:02:14,110
So let me open up the AndroidFlavor app.

43
00:02:14,110 --> 00:02:14,850
Here's the code for

44
00:02:14,850 --> 00:02:18,890
the AndroidFlavor adapter in
the customer array adaptor example.

45
00:02:18,890 --> 00:02:21,410
So down here is its getView method,

46
00:02:21,410 --> 00:02:25,045
since this logic is very similar to the
getView method we need in our Miwok app.

47
00:02:25,045 --> 00:02:27,664
Let's just copy and
paste this section over into our code.

48
00:02:27,664 --> 00:02:34,172
[BLANK_AUDIO]

49
00:02:34,172 --> 00:02:37,210
So I just pasted that code
into the WordAdapter class.

50
00:02:37,210 --> 00:02:39,980
First we're making sure that we
have a list item view even if it

51
00:02:39,980 --> 00:02:41,420
doesn't have the right data.

52
00:02:41,420 --> 00:02:45,030
So we could try to use the recycled
view that came in as an input parameter.

53
00:02:45,030 --> 00:02:48,350
However it is possible that it could be
null meaning that there is no view to

54
00:02:48,350 --> 00:02:49,310
reuse.

55
00:02:49,310 --> 00:02:52,720
In this case we will need to inflate one
from the list item layout from scratch.

56
00:02:52,720 --> 00:02:56,040
We can use the LayoutInflator from
Android, and call the inflate method,

57
00:02:56,040 --> 00:03:00,490
passing in the layout resource ID, the
parent view, which is the list view and

58
00:03:00,490 --> 00:03:03,490
false here, because we don't want to
attach the list item view to the parent

59
00:03:03,490 --> 00:03:05,100
list view just yet.

60
00:03:05,100 --> 00:03:08,470
The next step is that we'll need to
find the word object at the requested

61
00:03:08,470 --> 00:03:09,032
position so

62
00:03:09,032 --> 00:03:12,940
we can start to set the appropriate
data onto the views in that layout.

63
00:03:12,940 --> 00:03:16,960
So we'll call the getItem method
which comes from the superclass array

64
00:03:16,960 --> 00:03:20,840
adapter and it takes in as its
input the desired position.

65
00:03:20,840 --> 00:03:24,600
Now instead of returning an Android
flavor object we'd like this getItem to

66
00:03:24,600 --> 00:03:28,400
return a word object and this is because
our class declaration says that we

67
00:03:28,400 --> 00:03:33,370
inherit from array adapter where word is
the return type of the getItem method.

68
00:03:33,370 --> 00:03:37,090
Let's take a look at the documentation
for the get item method.

69
00:03:37,090 --> 00:03:41,280
So here's the documentation for the get
item method from the ArrayAdapter class.

70
00:03:41,280 --> 00:03:44,390
So in this case we can
substitute the word datatype

71
00:03:44,390 --> 00:03:46,370
anywhere that we see
the generic parameter T.

72
00:03:46,370 --> 00:03:49,070
And let's head back to the code.

73
00:03:49,070 --> 00:03:51,120
Now for these next three sections,

74
00:03:51,120 --> 00:03:53,670
we don't have an image view
in our layout just yet.

75
00:03:53,670 --> 00:03:56,720
So we can delete these lines of
code related to setting an image on

76
00:03:56,720 --> 00:03:58,270
the ImageView.

77
00:03:58,270 --> 00:04:01,340
Let's navigate over to
the listItem XML layout.

78
00:04:01,340 --> 00:04:05,185
Remember that we have two TextViews
within here, one with a view id called

79
00:04:05,185 --> 00:04:10,000
miwok_text_view and one with a view
id called default_text_view.

80
00:04:10,000 --> 00:04:12,868
And know it might be slightly different
in your code if you chose to name

81
00:04:12,868 --> 00:04:14,060
them differently.

82
00:04:14,060 --> 00:04:18,720
This means that back in the word adapter
class, the list item view variable

83
00:04:18,720 --> 00:04:22,740
is currently referencing the root
linear layout for the list item layout.

84
00:04:22,740 --> 00:04:27,110
So if we call the find view by
ID method on the list item view,

85
00:04:27,110 --> 00:04:30,820
then we can find the Miwok text view,
and once we find that

86
00:04:30,820 --> 00:04:34,364
we can cast the view to a text view,
because it is a text view,

87
00:04:34,364 --> 00:04:38,570
and then go ahead and
store it in a Miwok text view variable.

88
00:04:38,570 --> 00:04:42,700
After that we can call the set
text method on the text view, and

89
00:04:42,700 --> 00:04:45,370
then pass in the new text
that needs to be displayed.

90
00:04:45,370 --> 00:04:48,701
So this would be, the Miwok translation
string from the current word object.

91
00:04:48,701 --> 00:04:53,242
[BLANK_AUDIO]

92
00:04:53,242 --> 00:04:55,998
So reading this line of code
can be a little bit complex.

93
00:04:55,998 --> 00:04:59,425
But let's just start by reading the
expression within the parenthesis first.

94
00:04:59,425 --> 00:05:04,130
So on the current word object we
call the method getMiwokTranslation.

95
00:05:04,130 --> 00:05:07,703
So this returns a string that's
a Miwok word and that becomes input to

96
00:05:07,703 --> 00:05:11,200
the set text method call on
the Miwok TextView object.

97
00:05:11,200 --> 00:05:13,895
So now the Miwok TextView
should display the Miwok word.

98
00:05:13,895 --> 00:05:17,475
We will repeat the same steps for
the default TextView.

99
00:05:17,475 --> 00:05:21,015
So the listItemView points to the linear
layout in the list_item layout.

100
00:05:21,015 --> 00:05:24,935
So we'll call findViewById
to search all its children.

101
00:05:24,935 --> 00:05:29,079
We find the view with ID default text
view and cast it to a text view and

102
00:05:29,079 --> 00:05:32,817
then we'll store it in a variable
called defaultTextView.

103
00:05:34,157 --> 00:05:38,657
After that on the currentWord object
we'll call the getDefault translation

104
00:05:38,657 --> 00:05:42,207
method and this helps us get
the English translation string.

105
00:05:42,207 --> 00:05:45,177
Now this becomes input to
the setText method call

106
00:05:45,177 --> 00:05:47,137
on the defaultTextView object.

107
00:05:47,137 --> 00:05:50,720
So now the defaultTextView
should display the English word.

108
00:05:50,720 --> 00:05:51,950
Now with all that done,

109
00:05:51,950 --> 00:05:55,380
we just need to return the list
item view as a return value.

110
00:05:55,380 --> 00:06:00,270
So the list view will take its return
value and add it as a child to itself.

111
00:06:00,270 --> 00:06:01,880
Whew!
That was really challenging, but

112
00:06:01,880 --> 00:06:03,330
thanks for hanging in there.

113
00:06:03,330 --> 00:06:04,770
So to recap,

114
00:06:04,770 --> 00:06:08,830
in our getView method we first get
a list item view that we can use.

115
00:06:08,830 --> 00:06:11,510
So either by reusing the one
that was given to us or

116
00:06:11,510 --> 00:06:13,940
inflating a new one
completely from scratch.

117
00:06:13,940 --> 00:06:16,650
Then we get the word object
at the given position and

118
00:06:16,650 --> 00:06:19,850
after that we can start finding
the views in the list item layout and

119
00:06:19,850 --> 00:06:22,480
setting data onto them
from the word object.

120
00:06:22,480 --> 00:06:25,880
And lastly we can return
the updated ListItemView.

121
00:06:25,880 --> 00:06:27,900
So let's try to run the code now.

122
00:06:27,900 --> 00:06:30,170
Hm, it looks like there's
an error in the numbers activity.

123
00:06:30,170 --> 00:06:33,450
It says that there is an error
with creating the word adapter.

124
00:06:34,750 --> 00:06:37,870
So that's because we forgot to create
the constructor in the word adaptor.

125
00:06:37,870 --> 00:06:41,370
Remember, that takes two inputs,
the contacts and list of words.

126
00:06:41,370 --> 00:06:42,490
So let's go ahead and do that now.

127
00:06:43,530 --> 00:06:46,290
Let's take a look at the example
in the FlavorAdapter app.

128
00:06:46,290 --> 00:06:49,040
We described the constructor
earlier in the last video.

129
00:06:49,040 --> 00:06:50,720
So you can refer back
to it if we need it.

130
00:06:51,990 --> 00:06:55,510
So here I am back again looking
at the example Flavor app.

131
00:06:55,510 --> 00:06:58,600
So we described the constructor
early in the last video.

132
00:06:58,600 --> 00:07:00,750
So you can refer back to that if needed.

133
00:07:00,750 --> 00:07:04,190
Now we're going to need something
similar to this for our word adapter.

134
00:07:04,190 --> 00:07:06,847
So I'm going to copy and paste this
constructor over and then tweak it.

135
00:07:06,847 --> 00:07:09,122
[BLANK_AUDIO]

136
00:07:09,122 --> 00:07:12,670
So at the top of the word adapter class
I'm going to paste that constructor we

137
00:07:12,670 --> 00:07:13,920
copied over.

138
00:07:13,920 --> 00:07:18,050
Now instead of Android Flavor adapter
we need it to be word adapter,

139
00:07:18,050 --> 00:07:21,700
because remember the constructor
name needs to match the class name.

140
00:07:21,700 --> 00:07:24,860
Also inside this list here,
instead of a list of Android Flavors,

141
00:07:24,860 --> 00:07:26,740
we want a list of words.

142
00:07:26,740 --> 00:07:30,810
And lastly inside this constructor, we
can call the superclass Android adaptors

143
00:07:30,810 --> 00:07:35,070
constructor by passing in the context,
the layout resource ID, and

144
00:07:35,070 --> 00:07:36,480
then the list of objects.

145
00:07:36,480 --> 00:07:38,800
So we'll need to update
this towards as well.

146
00:07:38,800 --> 00:07:41,760
Remember that we can pass in zero for
layout resource ID here

147
00:07:41,760 --> 00:07:45,520
because we're inflating the layout
ourselves in the get view method.

148
00:07:45,520 --> 00:07:47,550
Here's what the app looks
like on our device.

149
00:07:47,550 --> 00:07:50,280
So navigating into the numbers activity.

150
00:07:50,280 --> 00:07:50,980
Nice.

151
00:07:50,980 --> 00:07:53,980
So the list is showing the Miwok and
English words.

152
00:07:53,980 --> 00:07:55,370
So congratulations.

153
00:07:55,370 --> 00:07:56,070
Really great work.
