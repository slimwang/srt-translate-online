1
00:00:00,250 --> 00:00:03,360
Okay so
what were the big ideas of this lesson?

2
00:00:03,360 --> 00:00:07,290
Well one idea is that good algorithms
are work optimal and have low span,

3
00:00:08,580 --> 00:00:12,430
imagine that a DAG is a person where
dependencies go from head to toe.

4
00:00:13,520 --> 00:00:19,550
Now a good algorithm is a person who has
low mass and is short, and really wide,

5
00:00:19,550 --> 00:00:24,210
rather than being say really massive,
super tall and super skinny.

6
00:00:25,530 --> 00:00:29,200
Our related idea is the concept
of weak scalability.

7
00:00:29,200 --> 00:00:31,940
To see if you understand this concept,
here's an exercise.

8
00:00:32,970 --> 00:00:36,250
Go and read about this thing called
Amdahl's Law which you might already

9
00:00:36,250 --> 00:00:39,130
know about a different udasity course.

10
00:00:39,130 --> 00:00:43,660
Then ask yourself, self, what's the
relationship between Amdahl's Law and

11
00:00:43,660 --> 00:00:45,220
this weak scalability concept?

12
00:00:47,320 --> 00:00:51,190
A second big idea in this lesson is
divide and conquer which you know and

13
00:00:51,190 --> 00:00:55,389
love from sequential computing and
it's an excellent tool and paradigm for

14
00:00:55,389 --> 00:00:57,961
thinking about parallel
algorithms as well.

15
00:00:57,961 --> 00:01:01,741
Now in your toolbox of algorithmic
tricks it should often be the first

16
00:01:01,741 --> 00:01:02,599
thing you try.

17
00:01:02,599 --> 00:01:07,069
The last big idea is to separate how
you express concurrency from how you

18
00:01:07,069 --> 00:01:08,730
execute it.

19
00:01:08,730 --> 00:01:09,960
Now this is a really neat idea,

20
00:01:09,960 --> 00:01:12,520
which makes it possible to
get truly elegant algorithms.

21
00:01:13,930 --> 00:01:17,290
Unfortunately, this model
also ignores communication,

22
00:01:17,290 --> 00:01:21,630
which it turns out is absolutely
necessary to be vast and scalable.

23
00:01:21,630 --> 00:01:24,180
At least once the problem size and
system size get big enough.

24
00:01:25,190 --> 00:01:28,740
To model communication, you're going to
need some other abstract models.

25
00:01:28,740 --> 00:01:32,140
But for now, let's just see how far
we can take dynamic multi threading.
