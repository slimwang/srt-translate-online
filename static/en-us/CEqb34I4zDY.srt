1
00:00:00,025 --> 00:00:02,900
Mm-hm. >> I know Lab Door Architecture is getting pretty popular as a buzz

2
00:00:02,900 --> 00:00:03,675
word nowadays.

3
00:00:03,675 --> 00:00:04,280
>> Mm-hm.

4
00:00:04,280 --> 00:00:08,870
>> But sort of looking beyond that into having exactly one system where you can

5
00:00:08,870 --> 00:00:13,498
potentially re-process from your, your message buffer, whatever else.

6
00:00:13,498 --> 00:00:16,851
Do you guys have any plans to extend Storm Architecture to do that?

7
00:00:16,851 --> 00:00:21,067
>> I mean [INAUDIBLE] exactly from this point of view I see advantage, for

8
00:00:21,067 --> 00:00:25,626
doing exactly once because it can deduce the constraint on the backside plane.

9
00:00:25,626 --> 00:00:26,293
>> Yeah.

10
00:00:26,293 --> 00:00:27,995
>> Because any going.

11
00:00:27,995 --> 00:00:29,163
>> Mm-hm.

12
00:00:29,163 --> 00:00:33,951
>> And that in turn if you make that exactly ones without having too

13
00:00:33,951 --> 00:00:37,940
much resources added into the existing pipeline.

14
00:00:37,940 --> 00:00:42,335
Then you can save a lot of cost on the batch pipeline because easily can go to

15
00:00:42,335 --> 00:00:44,612
the point where you cannot once a day or.

16
00:00:44,612 --> 00:00:48,469
>> Mm-hm. >> Probably can only on demand if the real biplane is steady enough.

17
00:00:48,469 --> 00:00:50,136
>> [INAUDIBLE].

18
00:00:50,136 --> 00:00:51,133
>> Now we've given,

19
00:00:51,133 --> 00:00:56,550
having said that now the batch, I'll do good if you're doing exactly once.

20
00:00:56,550 --> 00:01:01,050
So now, that might be hard because the reason why it is especially when you're

21
00:01:01,050 --> 00:01:05,230
doing real-time pipeline, there are some failures that's possible.

22
00:01:05,230 --> 00:01:08,780
Even though you might be exactly want, there could be failures,

23
00:01:08,780 --> 00:01:12,780
not on the arctic pipeline, but on more of the data capture pipeline.

24
00:01:12,780 --> 00:01:13,822
>> Right. >> Right, for

25
00:01:13,822 --> 00:01:17,542
example, operationally as it could be mission going down but the data in

26
00:01:17,542 --> 00:01:21,515
that might not have been collected until the mission was brought back up, right?

27
00:01:21,515 --> 00:01:24,469
>> True. >> But as on the batch pipeline the data can lazily get there,

28
00:01:24,469 --> 00:01:26,434
eventually the batch will pick up, right?

29
00:01:26,434 --> 00:01:29,274
As long as there's enough time to transferring the two on

30
00:01:29,274 --> 00:01:32,016
the real time pipeline there is a bunch right?

31
00:01:32,016 --> 00:01:36,500
>> Mm-hm. >> So which means so you can not live with exactly one semantics,

32
00:01:36,500 --> 00:01:40,525
i'm not saying that, no I don't want any batch anymore, right?

33
00:01:40,525 --> 00:01:41,025
>> Right.
