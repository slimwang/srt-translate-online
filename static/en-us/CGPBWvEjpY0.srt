1
00:00:00,740 --> 00:00:03,940
The final topic in object design, that I want to mention,

2
00:00:03,940 --> 00:00:06,440
has to do with how you're going to deal with abstraction.

3
00:00:06,440 --> 00:00:08,109
During the process of development,

4
00:00:08,109 --> 00:00:12,770
you may wish to increase, maintainability by enforcing abstract interfaces.

5
00:00:12,770 --> 00:00:16,780
And there are various mechanisms in object oriented languages, available for

6
00:00:16,780 --> 00:00:18,040
you to do this.

7
00:00:18,040 --> 00:00:20,220
For example, there are abstract methods.

8
00:00:20,220 --> 00:00:23,720
An abstract method is essentially a method signature,

9
00:00:23,720 --> 00:00:26,690
in a parent class that says the types of the arguments and

10
00:00:26,690 --> 00:00:30,920
the type of the return value possibly also any exceptions that might arise.

11
00:00:30,920 --> 00:00:35,520
Child classes then, have to provide the implementation of the abstract class,

12
00:00:35,520 --> 00:00:37,745
obeying that particular signature.

13
00:00:37,745 --> 00:00:43,890
Any class, with an abstract method becomes an abstract class.

14
00:00:43,890 --> 00:00:47,960
And abstract classes can have no direct instances.

15
00:00:47,960 --> 00:00:49,470
It's only the child classes,

16
00:00:49,470 --> 00:00:53,210
that have implemented the particular method that can have instances.

17
00:00:53,210 --> 00:00:57,159
Essentially then, abstract class is providing a kind of contract.

18
00:00:58,180 --> 00:01:00,400
That all subclasses must obey.

19
00:01:00,400 --> 00:01:05,670
Java provides, goes one step further and provides the concept of interfaces, and

20
00:01:05,670 --> 00:01:09,050
interface is an abstract class in which all the methods are abstract.

21
00:01:09,050 --> 00:01:12,640
For example, the serializable class is an abs, is an interface.

22
00:01:12,640 --> 00:01:15,670
I should say that serializable interface is an interface.

23
00:01:15,670 --> 00:01:19,540
In addition there are no non-final attributes in interfaces.
