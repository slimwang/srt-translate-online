1
00:00:00,000 --> 00:00:01,949
Previously you seen that viewDidLoad

2
00:00:01,949 --> 00:00:03,330
gets called when the ViewController class

3
00:00:03,330 --> 00:00:07,080
is loaded into memory.
gets called when the ViewController class

4
00:00:07,080 --> 00:00:09,029
This diagram illustrates the View and View Controller lifecycle.
is loaded into memory.

5
00:00:09,029 --> 00:00:09,030
When the view and
This diagram illustrates the View and View Controller lifecycle.
is loaded into memory.

6
00:00:09,030 --> 00:00:11,250
This diagram illustrates the View and View Controller lifecycle.
When the view and

7
00:00:11,250 --> 00:00:13,349
View Controller are changing states,
When the view and

8
00:00:13,349 --> 00:00:15,269
these functions if you've implemented them
View Controller are changing states,

9
00:00:15,269 --> 00:00:18,420
will get called. In iOS, the will
these functions if you've implemented them

10
00:00:18,420 --> 00:00:20,698
functions always get called before the
will get called. In iOS, the will

11
00:00:20,699 --> 00:00:23,699
did functions. For example viewWillAppear
functions always get called before the

12
00:00:23,699 --> 00:00:27,329
gets called before viewDidAppear.
did functions. For example viewWillAppear

13
00:00:27,329 --> 00:00:27,330
viewWillAppear gets called before
gets called before viewDidAppear.
did functions. For example viewWillAppear

14
00:00:27,330 --> 00:00:29,099
gets called before viewDidAppear.
viewWillAppear gets called before

15
00:00:29,099 --> 00:00:31,889
the View Controller and its viewer on-screen.
viewWillAppear gets called before

16
00:00:31,889 --> 00:00:31,890
the View Controller and its viewer on-screen.

17
00:00:31,890 --> 00:00:33,659
viewDidAppear gets called right after the
the View Controller and its viewer on-screen.

18
00:00:33,659 --> 00:00:36,450
view and View Controller on screen.
viewDidAppear gets called right after the

19
00:00:36,450 --> 00:00:38,189
This is really useful if you want something
view and View Controller on screen.

20
00:00:38,189 --> 00:00:40,950
to happen right before or right after a
This is really useful if you want something

21
00:00:40,950 --> 00:00:44,308
View Controller appears. If you override
to happen right before or right after a

22
00:00:44,308 --> 00:00:45,989
these functions in your View Controller,
View Controller appears. If you override

23
00:00:45,988 --> 00:00:48,179
they will get called, otherwise their
these functions in your View Controller,

24
00:00:48,179 --> 00:00:50,488
default and empty implementations in the
they will get called, otherwise their

25
00:00:50,488 --> 00:00:52,500
UIViewController class will get called instead.
default and empty implementations in the

26
00:00:52,500 --> 00:00:55,439
If you haven't seen before,
UIViewController class will get called instead.

27
00:00:55,439 --> 00:00:56,729
let's add the function called viewWillAppear.
If you haven't seen before,

28
00:00:56,729 --> 00:00:56,730
Notice I've mistyped the
let's add the function called viewWillAppear.
If you haven't seen before,

29
00:00:56,730 --> 00:01:00,929
let's add the function called viewWillAppear.
Notice I've mistyped the

30
00:01:00,929 --> 00:01:02,009
function name,
Notice I've mistyped the

31
00:01:02,009 --> 00:01:04,260
there's an extra p. Even though I
function name,

32
00:01:04,260 --> 00:01:06,359
mistyped its name, this function is still
there's an extra p. Even though I

33
00:01:06,359 --> 00:01:08,790
valid code and Xcode would compile this
mistyped its name, this function is still

34
00:01:08,790 --> 00:01:11,969
without error. To the compiler, this is
valid code and Xcode would compile this

35
00:01:11,969 --> 00:01:14,189
just any other function.
without error. To the compiler, this is

36
00:01:14,188 --> 00:01:16,228
But unfortunately for us, this function
just any other function.

37
00:01:16,228 --> 00:01:17,969
doesn't actually refer to the viewWillAppear
But unfortunately for us, this function

38
00:01:17,969 --> 00:01:20,039
function that belongs to the
doesn't actually refer to the viewWillAppear

39
00:01:20,039 --> 00:01:20,040
function that belongs to the

40
00:01:20,040 --> 00:01:22,079
UIViewController. So it's not going to
function that belongs to the

41
00:01:22,079 --> 00:01:24,989
behave like we might expect.
UIViewController. So it's not going to

42
00:01:24,989 --> 00:01:24,990
That's okay though.
behave like we might expect.
UIViewController. So it's not going to

43
00:01:24,990 --> 00:01:25,530
behave like we might expect.
That's okay though.

44
00:01:25,530 --> 00:01:27,839
Let's remove this and let Xcode help us
That's okay though.

45
00:01:27,839 --> 00:01:27,840
Let's remove this and let Xcode help us

46
00:01:27,840 --> 00:01:35,930
avoid this problem.
Let's remove this and let Xcode help us

47
00:01:35,930 --> 00:01:38,150
The viewWillAppear function belongs to
avoid this problem.

48
00:01:38,150 --> 00:01:40,670
the UIViewController class. So for our
The viewWillAppear function belongs to

49
00:01:40,670 --> 00:01:42,620
ViewController which subclasses
the UIViewController class. So for our

50
00:01:42,620 --> 00:01:44,810
UIViewController will want to override it.
ViewController which subclasses

51
00:01:44,810 --> 00:01:48,079
As we begin typing override func and
UIViewController will want to override it.

52
00:01:48,079 --> 00:01:50,599
then viewWill we can see that Xcode
As we begin typing override func and

53
00:01:50,599 --> 00:01:50,600
shows us a suggestion of the function it
then viewWill we can see that Xcode
As we begin typing override func and

54
00:01:50,600 --> 00:01:52,849
then viewWill we can see that Xcode
shows us a suggestion of the function it

55
00:01:52,849 --> 00:01:56,118
thinks we're trying to complete.
shows us a suggestion of the function it

56
00:01:56,118 --> 00:01:58,849
As we begin typing override func and then
thinks we're trying to complete.

57
00:01:58,849 --> 00:02:01,849
viewWill Xcode shows us suggestions of what
As we begin typing override func and then

58
00:02:01,849 --> 00:02:03,319
it thinks we're trying to type.
viewWill Xcode shows us suggestions of what

59
00:02:03,319 --> 00:02:06,228
viewWillAppear is what we want, so I’ll
it thinks we're trying to type.

60
00:02:06,228 --> 00:02:08,209
hit Enter and let Xcode do the rest of
viewWillAppear is what we want, so I’ll

61
00:02:08,209 --> 00:02:11,539
the work for us. And this is really handy.
hit Enter and let Xcode do the rest of

62
00:02:11,539 --> 00:02:13,669
Now the first thing that we want to do
the work for us. And this is really handy.

63
00:02:13,669 --> 00:02:13,670
is to call the super class’s
Now the first thing that we want to do
the work for us. And this is really handy.

64
00:02:13,670 --> 00:02:15,319
Now the first thing that we want to do
is to call the super class’s

65
00:02:15,319 --> 00:02:17,299
implementation of viewWillAppear
is to call the super class’s

66
00:02:17,299 --> 00:02:17,300
implementation of viewWillAppear

67
00:02:17,300 --> 00:02:19,849
before we do any of our own custom stuff with viewWillAppear.
implementation of viewWillAppear

68
00:02:19,849 --> 00:02:24,349
So we'll go ahead and do
before we do any of our own custom stuff with viewWillAppear.

69
00:02:24,349 --> 00:02:24,350
that now.
So we'll go ahead and do
before we do any of our own custom stuff with viewWillAppear.

70
00:02:24,350 --> 00:02:29,590
So we'll go ahead and do
that now.

