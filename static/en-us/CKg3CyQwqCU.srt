1
00:00:01,370 --> 00:00:03,890
Alright, this is one of the things I've
been wanting to teach you ever since we

2
00:00:03,890 --> 00:00:08,150
started learning about design, and
this is about animating transitions.

3
00:00:09,260 --> 00:00:11,970
It's easy to throw in
some Android L activity

4
00:00:11,970 --> 00:00:14,506
transition animations to
spice up our application.

5
00:00:14,506 --> 00:00:19,690
In Android 4.4, we added our transitions
framework but in Android L, we made it

6
00:00:19,690 --> 00:00:23,810
easy to apply these transitions
when moving between activities.

7
00:00:23,810 --> 00:00:26,610
As you can see clicking on
an item in our forecast list

8
00:00:26,610 --> 00:00:31,600
causes custom animations to occur as
we transition into the next activity.

9
00:00:31,600 --> 00:00:35,350
The toolbar at the top and
the bottom details move into place and

10
00:00:35,350 --> 00:00:36,815
everything else fades.

11
00:00:36,815 --> 00:00:40,015
Hitting the back key causes
a slightly different animation.

12
00:00:40,015 --> 00:00:43,535
Just the bottom moves out,
and everything else fades.

13
00:00:43,535 --> 00:00:47,445
This was done by first creating
a transition resource.

14
00:00:47,445 --> 00:00:51,940
In this case, our transition resource
contains a transition set for

15
00:00:51,940 --> 00:00:54,170
how we want our views to move.

16
00:00:54,170 --> 00:00:57,020
We want all these animations
to play together for

17
00:00:57,020 --> 00:00:58,950
a duration of a half a second.

18
00:00:58,950 --> 00:01:03,110
We want everything to fade between
the views, except for the status bar and

19
00:01:03,110 --> 00:01:04,480
the navigation bar.

20
00:01:04,480 --> 00:01:09,230
If we don't specify a target in a
transition, it will apply to all views.

21
00:01:09,230 --> 00:01:12,820
Exclude ID tells our fade
to apply to all views that

22
00:01:12,820 --> 00:01:14,800
aren't in another transition.

23
00:01:14,800 --> 00:01:15,770
Pretty handy.

24
00:01:15,770 --> 00:01:18,840
We're going to have our
toolbars slide in from the top.

25
00:01:18,840 --> 00:01:22,910
And the detail pane slides in
from the bottom and that's it.

26
00:01:22,910 --> 00:01:26,510
We could do a lot more, but
too much animation can be distracting.

27
00:01:26,510 --> 00:01:28,960
Now we still have to tell
Android how to apply the theme.

28
00:01:28,960 --> 00:01:31,990
I'm going to add it to our custom theme.

29
00:01:31,990 --> 00:01:35,260
We could specify it in code, but
I recommend doing it this way.

30
00:01:35,260 --> 00:01:38,640
It's nice to be able to change
all of this from resources.

31
00:01:38,640 --> 00:01:41,530
Note that we are both
applying themes here, and

32
00:01:41,530 --> 00:01:44,670
setting a window flag to
enable content transitions.

33
00:01:44,670 --> 00:01:49,460
Content transition must be enabled in
both the starting and ending activity.

34
00:01:49,460 --> 00:01:52,330
And then we still have to write
a tiny amount of code to enable

35
00:01:52,330 --> 00:01:53,950
a scene transition.

36
00:01:53,950 --> 00:01:58,210
When we call start activity, we need
to give the system a special bundle.

37
00:01:58,210 --> 00:02:01,780
Fortunately, ActivityCompat
will do the right thing for us.

38
00:02:01,780 --> 00:02:03,290
And that's it.

39
00:02:03,290 --> 00:02:06,500
See the instructor notes for
links to learn more about animations and

40
00:02:06,500 --> 00:02:07,520
the transition framework.
