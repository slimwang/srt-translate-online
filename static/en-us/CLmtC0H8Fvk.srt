1
00:00:00,110 --> 00:00:02,890
So, to illustrate the Canny edge detector,

2
00:00:02,890 --> 00:00:04,770
I'm going to use this picture of Lena.

3
00:00:04,770 --> 00:00:08,550
Now, this was a picture that was used for image processing a lot.

4
00:00:08,550 --> 00:00:12,880
Some guy, he cut out just the top part of a picture of 1972,

5
00:00:12,880 --> 00:00:16,470
that, of Lena Soderberg, I think was her name.

6
00:00:16,470 --> 00:00:19,490
Because it appeared in a a men's magazine.

7
00:00:19,490 --> 00:00:20,520
So he used just the picture.

8
00:00:20,520 --> 00:00:22,390
And by the way, this is Lena recently.

9
00:00:22,390 --> 00:00:24,180
So we all change.

10
00:00:24,180 --> 00:00:26,170
But here is our Lena image.

11
00:00:26,170 --> 00:00:30,470
And if we were to take just the magnitude of the gradient,

12
00:00:30,470 --> 00:00:31,850
we get a value that looks like this.

13
00:00:31,850 --> 00:00:36,700
You see it's close to edges, but actually, you and I see edges, right?

14
00:00:36,700 --> 00:00:38,890
It's just a gradient image, all right?

15
00:00:38,890 --> 00:00:40,810
So then we can threshold that gradient.

16
00:00:40,810 --> 00:00:43,030
So now you can see a bunch of that stuff has gone away.

17
00:00:43,030 --> 00:00:46,890
So anything with a gradient that's not high enough has been removed.

18
00:00:46,890 --> 00:00:48,800
And then we do an operation called thinning and

19
00:00:48,800 --> 00:00:50,130
we'll talk more about this in a minute.

20
00:00:50,130 --> 00:00:53,000
The fancy name is non-maximal suppression.

21
00:00:53,000 --> 00:00:56,910
Basically saying if I've got a bunch of points that exceed a threshold locally,

22
00:00:56,910 --> 00:00:59,620
let me only pull out the point that exceeds it the most.

23
00:00:59,620 --> 00:01:00,770
We'll talk about that in a second.

24
00:01:00,770 --> 00:01:03,831
When you do that, you get something that looks like that, all right?

25
00:01:03,831 --> 00:01:08,930
So that you go back and you can see there's the thinned version of that.

26
00:01:08,930 --> 00:01:12,270
Just a quick note about why you have to do the thinning, all right?

27
00:01:12,270 --> 00:01:15,116
So let's take a look at this little area here.

28
00:01:15,116 --> 00:01:21,515
You can see that there is this kind of thick part that exceeds the threshold.

29
00:01:21,515 --> 00:01:24,860
And what we would like to say is that there's an edge running through

30
00:01:24,860 --> 00:01:26,070
the middle.

31
00:01:26,070 --> 00:01:28,060
So you think about it, if you're coming across here,

32
00:01:28,060 --> 00:01:33,160
you might see a profile that starts low and then goes up high, all right?

33
00:01:33,160 --> 00:01:35,620
And if you take the derivative of that,

34
00:01:35,620 --> 00:01:40,830
you'll see that the derivative over this area is above this threshold.

35
00:01:40,830 --> 00:01:43,437
So that gives you this thick edge.

36
00:01:43,437 --> 00:01:45,330
And we want to turn it into a thin edge.

37
00:01:45,330 --> 00:01:48,320
So the way the non-maximal suppression,

38
00:01:48,320 --> 00:01:51,180
the thinning is done in a canny operator is as follows.

39
00:01:51,180 --> 00:01:53,010
And you don't act, you're not going to have to implement this,

40
00:01:53,010 --> 00:01:55,230
I just want you to be aware of what's going on.

41
00:01:55,230 --> 00:02:01,910
Basically it finds areas of high gradient, and it looks across

42
00:02:01,910 --> 00:02:06,730
in the direction of the gradient, and it finds just the peak there.

43
00:02:06,730 --> 00:02:10,100
And then over here same thing, you would find the peak here.

44
00:02:10,100 --> 00:02:14,320
Here the gradient is in that direction, so would find the peak there, right?

45
00:02:14,320 --> 00:02:16,590
Sometimes, and that's what this picture's showing here,

46
00:02:16,590 --> 00:02:18,180
sometimes you have to interpolate, right?

47
00:02:18,180 --> 00:02:20,880
You find the gradient, you say okay, I think it's somewhere in

48
00:02:20,880 --> 00:02:24,230
between two pixels, so you can actually get sub-pixel accuracy.

49
00:02:24,230 --> 00:02:27,350
But the point is, that it basically looks perpendicular to the gradient,

50
00:02:27,350 --> 00:02:29,500
in order to find, the maximum.

51
00:02:29,500 --> 00:02:32,350
So that's how you do the, the thinning part, and

52
00:02:32,350 --> 00:02:35,450
now there's one very clever detail to look at, all right?

53
00:02:35,450 --> 00:02:39,280
If you take a look at this point sort of under the chin here,

54
00:02:39,280 --> 00:02:45,180
you'll see that some of the pixels did not survive the thresholding, okay?

55
00:02:45,180 --> 00:02:47,190
And it's a problem because we, maybe we,

56
00:02:47,190 --> 00:02:48,810
you can say we had too high a threshold.

57
00:02:48,810 --> 00:02:51,630
But the problem is if we make the threshold too low.

58
00:02:51,630 --> 00:02:54,340
Then a whole bunch of stuff is going to show up that we don't

59
00:02:54,340 --> 00:02:55,570
actually care about.

60
00:02:55,570 --> 00:02:57,620
So the question is how to deal with that.

61
00:02:57,620 --> 00:03:00,850
So this is what John did in the, the hysteresis.

62
00:03:00,850 --> 00:03:05,450
The first thing we do is we apply a high threshold to detect edge,

63
00:03:05,450 --> 00:03:07,170
strong edge pixels.

64
00:03:07,170 --> 00:03:10,220
So the threshold pulls out a bunch of pixels.

65
00:03:10,220 --> 00:03:15,140
Then what we do is we can link those strong edge pixels to form strong edges.

66
00:03:15,140 --> 00:03:17,260
Okay. So far not so clever.

67
00:03:17,260 --> 00:03:19,300
Here's where the clever part becomes.

68
00:03:19,300 --> 00:03:27,441
We now apply a low threshold to find weak, but possible edge pixels.

69
00:03:27,441 --> 00:03:33,770
And then, we extend the strong edges following the weak pixels.

70
00:03:33,770 --> 00:03:37,520
So what that means is that if an edge only has weak pixels on it,

71
00:03:37,520 --> 00:03:39,400
it doesn't get found to be an edge.

72
00:03:39,400 --> 00:03:44,010
An edge can only be found if some of the pixels are strong-edge pixels.

73
00:03:44,010 --> 00:03:47,160
The assumption here is that all edges that I

74
00:03:47,160 --> 00:03:50,180
care about will have some strong pixels in them.

75
00:03:50,180 --> 00:03:53,110
And then, I might have to continue through a weak area, but

76
00:03:53,110 --> 00:03:55,540
the edge got initiated by the strong detections.
