1
00:00:00,000 --> 00:00:04,000
[Norvig] In this unit, we're going to talk about how to write a poker program.

2
00:00:04,000 --> 00:00:07,000
This is going to be an example of a general process

3
00:00:07,000 --> 00:00:11,000
where we start with a vague understanding

4
00:00:11,000 --> 00:00:16,000
and then we refine our understanding to have a formal specification of a problem,

5
00:00:16,000 --> 00:00:22,000
then we specify that into something that is amenable to being coded,

6
00:00:22,000 --> 00:00:25,000
and then the design process we end up with working code.

7
00:00:25,000 --> 00:00:28,000
So we'll follow these steps 1, 2, 3.

8
00:00:28,000 --> 00:00:31,000
The first thing I want to do in the understanding phase

9
00:00:31,000 --> 00:00:34,000
is make an inventory of the concepts that we're going to have to deal with,

10
00:00:34,000 --> 00:00:37,000
and so let's look at what we have.

11
00:00:37,000 --> 00:00:40,000
First we have this notion of hands.

12
00:00:40,000 --> 00:00:46,000
A hand consists of 5 cards, so here's an individual card,

13
00:00:46,000 --> 00:00:50,000
and a card has a rank and a suit.

14
00:00:50,000 --> 00:00:55,000
This card, the 5 of diamonds, the rank is 5 and the suit is diamonds.

15
00:00:55,000 --> 00:00:58,000
The main program we're trying to specify we'll call poker,

16
00:00:58,000 --> 00:01:03,000
and it takes a list of hands as input and returns the best hand.

17
00:01:03,000 --> 00:01:07,000
What's the best hand? Well, you can see the rules of poker.

18
00:01:07,000 --> 00:01:09,000
There are links to describe where we can look them up,

19
00:01:09,000 --> 00:01:14,000
and we'll go over them briefly throughout the course of this video.

20
00:01:14,000 --> 00:01:19,000
But we can say, for example, that this hand is called 2 pair.

21
00:01:19,000 --> 00:01:24,000
You can also say it's jacks over 2s with an extra 5,

22
00:01:24,000 --> 00:01:27,000
and the rules specify which hands beat which,

23
00:01:27,000 --> 00:01:30,000
which is the best ranking for each hand.

24
00:01:30,000 --> 00:01:33,000
So this is another concept that we have:

25
00:01:33,000 --> 00:01:39,000
the concept of a hand rank which takes a hand and maps to something like,

26
00:01:39,000 --> 00:01:44,000
in this case, 2 pair and maybe with some more details.

27
00:01:44,000 --> 00:01:48,000
And what are the concepts that make up the hand rank?

28
00:01:48,000 --> 00:01:50,000
There are 3.

29
00:01:50,000 --> 00:01:55,000
One is the concept of cards of the same rank, the same kind,

30
00:01:55,000 --> 00:02:00,000
and we'll call that n of a kind for 2 of a kind, 3 of a kind, or 4 of a kind.

31
00:02:00,000 --> 00:02:04,000
So here I have 2 of a kind in two 2s and in two jacks.

32
00:02:04,000 --> 00:02:09,000
This hand is a straight--5, 6, 7, 8, 9--because it's 5 consecutive ranks.

33
00:02:09,000 --> 00:02:11,000
Suits don't matter.

34
00:02:11,000 --> 00:02:15,000
And then the notion of a flush.

35
00:02:15,000 --> 00:02:21,000
This hand is a flush because all 5 cards have the same suit, and the ranks don't matter.

36
00:02:21,000 --> 00:02:24,000
So there are a few more details about the ranking.

37
00:02:24,000 --> 00:02:30,000
You can look it up on the links, see the Wikipedia article on poker hands.

38
00:02:30,000 --> 00:02:32,000
But now I think we're ready.

39
00:02:32,000 --> 00:02:35,000
We know about the types of data we have to deal with--

40
00:02:35,000 --> 00:02:37,000
hands, card ranks and suits--

41
00:02:37,000 --> 00:02:41,000
and we know about the sort of operations or functions on them.

42
00:02:41,000 --> 99:59:59,999
Now we're ready to move into the design phase.
