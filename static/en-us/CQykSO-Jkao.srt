1
00:00:00,260 --> 00:00:03,500
Remember an ACL is per object or
per resource?

2
00:00:03,500 --> 00:00:08,039
It tells us user ID, what access that
user has, and the next user ID and

3
00:00:08,039 --> 00:00:12,080
what access that user has, and
some number of entries like that.

4
00:00:12,080 --> 00:00:16,210
And by the way, access control entries,
or ACEs is what they're called.

5
00:00:16,210 --> 00:00:20,200
So where should ACL for
an object be stored?

6
00:00:20,200 --> 00:00:24,410
So first of all this has to be stored
in the trusted part of the system.

7
00:00:24,410 --> 00:00:27,550
It has to be stored in the operating
system of the trusted computing

8
00:00:27,550 --> 00:00:30,450
base because it actually
determines who can access

9
00:00:30,450 --> 00:00:32,450
a resource that needs to be protected.

10
00:00:32,450 --> 00:00:36,930
If it's not in the trusted part,
then some untrusted code or application

11
00:00:36,930 --> 00:00:41,680
potentially can change it but
where exactly does it go in that system.

12
00:00:41,680 --> 00:00:45,530
So we know that it is a list of
these access control entries.

13
00:00:45,530 --> 00:00:49,590
And this is for
a given object or a resource.

14
00:00:49,590 --> 00:00:51,490
Such a list exists.

15
00:00:51,490 --> 00:00:53,360
And ACL exists for each resource.

16
00:00:53,360 --> 00:00:58,040
So we have the resource R
is going to have an ACL R.

17
00:00:58,040 --> 00:01:01,750
One natural place for
us to store this ACL,

18
00:01:01,750 --> 00:01:06,460
is where other information about
the resource or the object is stored.

19
00:01:06,460 --> 00:01:10,650
So the other information typically
what we call is meta-data about

20
00:01:10,650 --> 00:01:11,570
that resource.

21
00:01:11,570 --> 00:01:13,800
So if the resource was a file for

22
00:01:13,800 --> 00:01:16,840
example meta-data might
say the size of the file,

23
00:01:16,840 --> 00:01:21,120
where on disk it may be stored,
who the owner is, and things like that.

24
00:01:21,120 --> 00:01:24,790
We can store the ACL along with
that other meta-data that you have.

25
00:01:24,790 --> 00:01:27,760
So we're going to do an example for
the Linux system,

26
00:01:27,760 --> 00:01:32,190
Unix systems, how file system
access control is implemented.

27
00:01:32,190 --> 00:01:35,820
And we're going to see that ACL
information actually gets stored

28
00:01:35,820 --> 00:01:40,070
same place where meta-data about a file
is stored in the operating system.

29
00:01:40,070 --> 00:01:44,150
We said meta-data has bunch of other
information where ACL is going to

30
00:01:44,150 --> 00:01:48,940
be stored as well, so then the question
is, how do you use this information?

31
00:01:48,940 --> 00:01:52,680
So remember for an object resource
if somebody's going to use it,

32
00:01:52,680 --> 00:01:55,290
the object or
resource has to be activated.

33
00:01:55,290 --> 00:01:56,980
So it's ready for use.

34
00:01:56,980 --> 00:01:59,010
The meta-data has to be acquired,

35
00:01:59,010 --> 00:02:01,570
something has to be set up
in the operating system.

36
00:02:01,570 --> 00:02:04,800
And once that is done,
then the request is going to come.

37
00:02:04,800 --> 00:02:07,970
So at that time we have
to perform a check,

38
00:02:07,970 --> 00:02:11,290
access control check to decide if
the request should be granted.

39
00:02:11,290 --> 00:02:14,150
So how do we perform that
access control check?

40
00:02:14,150 --> 00:02:15,720
Let's say it's coming from Alice.

41
00:02:15,720 --> 00:02:17,280
The request source is,

42
00:02:17,280 --> 00:02:21,820
we know is Alice's UID, and
the request is for file foo.

43
00:02:21,820 --> 00:02:23,970
We're going to go to the meta-data for
file foo,

44
00:02:23,970 --> 00:02:26,390
where we're also going to find ACL for
file foo.

45
00:02:26,390 --> 00:02:30,900
And once we have that ACL, we basically
have to traverse it, looking for

46
00:02:30,900 --> 00:02:33,540
an access control entry for Alice.

47
00:02:33,540 --> 00:02:39,510
And then see if the access rights
in that ACE grant permission

48
00:02:39,510 --> 00:02:44,015
to this object to Alice in the manners
of what kind of request is being made.

49
00:02:44,015 --> 00:02:48,585
So for example, it's read of a file,
and does the read access write exist

50
00:02:48,585 --> 00:02:53,365
in the ACL or the ACE that we
have in the ACL for user Alice.

51
00:02:53,365 --> 00:02:57,520
So traversal basically says when a
request comes from a given user, we have

52
00:02:57,520 --> 00:03:02,360
to go down the list to see if an ACE
exists for the source of the request.

53
00:03:02,360 --> 00:03:03,310
And if it does,

54
00:03:03,310 --> 00:03:07,510
does it include permissions consistent
with the nature of the request.

55
00:03:07,510 --> 00:03:10,120
And if that's the case,
then we can go on to access.

56
00:03:10,120 --> 00:03:13,770
If you can't find such an ACE or
the access right doesn't exist,

57
00:03:13,770 --> 00:03:16,300
so there is an access ACE
that says you can read but

58
00:03:16,300 --> 00:03:19,230
the request is for write,
then also we are going to deny it.

59
00:03:19,230 --> 00:03:22,260
So now you understand
how ACLs can be used.
