1
00:00:00,290 --> 00:00:04,550
In lesson one, I implemented the entire exclamation topology for you.

2
00:00:04,550 --> 00:00:06,630
In lesson two, we will explore more of the code and

3
00:00:06,630 --> 00:00:12,210
syntax to implement spouts, bolts, and connections in topologies.

4
00:00:12,210 --> 00:00:15,690
Let's walk through the basic Storm components, along with the terminology and

5
00:00:15,690 --> 00:00:17,240
syntax link.

6
00:00:17,240 --> 00:00:22,190
Throughout the course, I'll try to use a red triangle to represent Spouts.

7
00:00:22,190 --> 00:00:23,480
Here in code,

8
00:00:23,480 --> 00:00:29,840
we see the class WordSpout here in our topology as new WordSpout().

9
00:00:29,840 --> 00:00:30,830
We don't give it a name and

10
00:00:30,830 --> 00:00:36,570
pass it as an anonymous instance into our builder.setSpout function.

11
00:00:36,570 --> 00:00:42,644
We see that the component id, word-spout, is the first argument here.

12
00:00:42,644 --> 00:00:45,630
And we also have a parallelism of five.

13
00:00:45,630 --> 00:00:48,080
Our next component is the CountBolt.

14
00:00:48,080 --> 00:00:51,290
We see that the CountBolt is also passed into our builder,

15
00:00:51,290 --> 00:00:54,040
through the setBolt method.

16
00:00:54,040 --> 00:00:58,005
It again is anonymous with a parallelism of 15.

17
00:00:59,010 --> 00:01:04,900
We see the component id, count-bolt is the first argument count-bolt.

18
00:01:04,900 --> 00:01:10,120
And here we come to the connection of the Bolt and the Spout.

19
00:01:10,120 --> 00:01:15,790
We see that the Spout does not know that the Bolt is connecting to it.

20
00:01:15,790 --> 00:01:18,790
The Spout simple emits tuples.

21
00:01:18,790 --> 00:01:22,930
The CountBolt subscribes to the Spout tuple stream by this

22
00:01:22,930 --> 00:01:25,300
method, fieldsGrouping.

23
00:01:25,300 --> 00:01:29,915
We see that the connection is made by identifying the connection

24
00:01:29,915 --> 00:01:32,330
word-spout through the component id.

25
00:01:32,330 --> 00:01:38,400
And again, an anonymous object is instantiated with new fields word.

26
00:01:38,400 --> 00:01:42,610
Word is defined in the declare output field in the definition of

27
00:01:42,610 --> 00:01:44,540
the class WordSpout.

28
00:01:44,540 --> 00:01:49,186
Therefore the connection fieldGrouping connects the WordSpout to

29
00:01:49,186 --> 00:01:53,730
the CountBolt with the fieldsGrouping connection.

30
00:01:53,730 --> 00:01:56,080
Now let's get started with a quiz.

31
00:01:56,080 --> 00:01:59,480
In lesson two, stage one, you'll implement the CountBolt and

32
00:01:59,480 --> 00:02:02,390
connect this in your topology to a ReportBolt.

33
00:02:02,390 --> 00:02:05,420
I've implemented the connection to readus in the visualization for

34
00:02:05,420 --> 00:02:07,340
you in the Report Bolt.

35
00:02:07,340 --> 00:02:12,380
You job now is to decide what connection to use between the ReportBolt and

36
00:02:12,380 --> 00:02:13,920
the CountBolt.

37
00:02:13,920 --> 00:02:18,500
What is the best connection between the CountBolt and the ReportBolt.

38
00:02:18,500 --> 00:02:23,510
Choose the best answer based on our use case to send all CountBolt streams to

39
00:02:23,510 --> 00:02:25,030
one ReportBolt.

40
00:02:25,030 --> 00:02:30,850
Is it the shuffle grouping, a fields grouping or a global grouping?

41
00:02:30,850 --> 00:02:33,560
Please check the answer that you feel is the best in

42
00:02:33,560 --> 00:02:38,045
our use case to send a all CountBolt streams to one ReportBolt.
