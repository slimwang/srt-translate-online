1
00:00:00,250 --> 00:00:03,430
Let's refactor that Saga code from earlier, and

2
00:00:03,430 --> 00:00:06,780
run a new version in our simulated interpreter.

3
00:00:06,780 --> 00:00:08,200
So here's a crazy idea.

4
00:00:08,200 --> 00:00:10,790
What if we could somehow keep a reference to each of

5
00:00:10,790 --> 00:00:14,540
the Saga functions that we create during the invocation of new Saga?

6
00:00:14,540 --> 00:00:17,200
And we could keep them around forever, such that they were

7
00:00:17,200 --> 00:00:21,340
available long after those new Saga calls had completed and returned.

8
00:00:21,340 --> 00:00:25,370
So which of these techniques do you think we could use to retain access to

9
00:00:25,370 --> 00:00:30,480
the Saga functions even after the new saga calls the created then had returned?

10
00:00:30,480 --> 00:00:33,960
Would it work to pass saga to setTimeout or

11
00:00:33,960 --> 00:00:39,590
return saga from the new saga function or save saga into some global variable?
