1
00:00:00,260 --> 00:00:04,094
The drinking bird is starting to look sort of vaguely like the real thing if you

2
00:00:04,094 --> 00:00:08,592
squint a lot. Modifying this model a bit more, I made the legs white. When I do

3
00:00:08,592 --> 00:00:13,328
this and run the program, this causes what is called Z-fighting as you can see

4
00:00:13,328 --> 00:00:17,565
here. What is happening is the two polygons, one from the foot and one from the

5
00:00:17,565 --> 00:00:22,415
leg are overlapping attempting to occupy exactly the same location. At one

6
00:00:22,415 --> 00:00:26,309
pixel, one surface's Z depth will be infinitesimally closer than the other due

7
00:00:26,309 --> 00:00:30,705
to precision limits. At the next pixel over the situation maybe reversed. While

8
00:00:30,705 --> 00:00:34,524
this is fine mathematically, it can't happen in the real world and curling makes

9
00:00:34,524 --> 00:00:38,155
for unconvincing images. Examine the problem yourself by running the program.

10
00:00:38,155 --> 00:00:42,116
Find the link in the additional materials. The question to you is, which of

11
00:00:42,116 --> 00:00:46,309
these solutions will fix the problem? Make each leg a bit thinner so it doesn't

12
00:00:46,309 --> 00:00:50,858
overlap with the foot. Use a newer GPU with a higher-precision z-buffer. Switch

13
00:00:50,858 --> 00:00:54,774
to another rendering algorithm, such as ray tracing. Remove the bottom part of

14
00:00:54,774 --> 00:00:59,095
each leg so that no part of the leg and foot overlap. I should not that two of

15
00:00:59,095 --> 00:01:00,593
these answers are correct.
