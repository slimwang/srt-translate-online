1
00:00:00,120 --> 00:00:03,300
So having talked about the vision and the practical

2
00:00:03,300 --> 00:00:07,220
implementation details of active networks, lets talk about the

3
00:00:07,220 --> 00:00:09,790
pros and cons. The pro is something that we

4
00:00:09,790 --> 00:00:12,340
have been stressing all along and that is the flexibility

5
00:00:12,340 --> 00:00:15,140
from the point if you have an application perspective

6
00:00:15,140 --> 00:00:18,710
that fact that you can ignore the physical layout

7
00:00:18,710 --> 00:00:23,220
of the network and slap on your own visualization

8
00:00:23,220 --> 00:00:26,210
of what you want to accomplish for your netowork flow.

9
00:00:26,210 --> 00:00:28,900
On top of the physical infrastructure is

10
00:00:28,900 --> 00:00:32,590
the key selling point for active networks. But

11
00:00:32,590 --> 00:00:38,140
this selling point comes at the cost of perhaps certain cons. What are all the

12
00:00:38,140 --> 00:00:45,220
cons? Well, one concern could be protection threats. What I mean by that is that

13
00:00:45,220 --> 00:00:48,960
eroding infrastructures carrying network flows. Not really mine

14
00:00:48,960 --> 00:00:51,260
but yours and the third person and so

15
00:00:51,260 --> 00:00:54,260
on and so forth. And just like in an

16
00:00:54,260 --> 00:00:57,650
operating system when we have a process, we want to make

17
00:00:57,650 --> 00:01:01,240
sure that that process is not doing anything malicious

18
00:01:01,240 --> 00:01:04,370
to other processes in the same node. Same way, my

19
00:01:04,370 --> 00:01:06,980
network flow should not do anything that is detrimental

20
00:01:06,980 --> 00:01:09,620
to your network flow on the internet. So that's what

21
00:01:09,620 --> 00:01:12,570
we mean by protection threats. So there are some

22
00:01:12,570 --> 00:01:16,390
safeguards in the ANTS toolkit to address these protection threats.

23
00:01:16,390 --> 00:01:20,440
The first is the run time safety of ANTS

24
00:01:20,440 --> 00:01:23,300
program that is running on a router node. And

25
00:01:23,300 --> 00:01:26,030
the way they ensure that is by first of

26
00:01:26,030 --> 00:01:29,990
all implementing ANTS itself in Java and using Java

27
00:01:29,990 --> 00:01:33,030
sandboxing technique on the router node, so that anything

28
00:01:33,030 --> 00:01:36,020
that a router code is doing for capsule processing

29
00:01:36,020 --> 00:01:38,220
Is limited to the Java's hand box that is

30
00:01:38,220 --> 00:01:41,440
executing in. And so, it cannot effect the flows

31
00:01:41,440 --> 00:01:43,930
of other network flows that are flowing through

32
00:01:43,930 --> 00:01:46,852
the same routing fabric. That's the first thing. The

33
00:01:46,852 --> 00:01:49,900
2nd protection thread is whether there could be

34
00:01:49,900 --> 00:01:52,880
code spoofing that can happen. We are talking about

35
00:01:52,880 --> 00:01:56,200
cold being injected into the router, and of

36
00:01:56,200 --> 00:01:58,300
course there was a good reason for doing that,

37
00:01:58,300 --> 00:02:01,890
that I wanted a certain behavior to be

38
00:02:01,890 --> 00:02:06,960
observed by the network routers, in response to packets

39
00:02:06,960 --> 00:02:09,220
flowing through the network that belongs to me. But

40
00:02:09,220 --> 00:02:11,140
I want to be sure that the code that is

41
00:02:11,140 --> 00:02:13,490
being executed is the code that I wrote not

42
00:02:13,490 --> 00:02:16,670
some malicious code that is being spoofed to that node.

43
00:02:16,670 --> 00:02:20,780
Well here, here the safeguard is making sure that

44
00:02:20,780 --> 00:02:24,240
you have a robust, a robust fingerprint associated with the

45
00:02:24,240 --> 00:02:28,590
code. And so what you do is you generate

46
00:02:28,590 --> 00:02:32,710
a tight field for the capsule that is a crytographically

47
00:02:32,710 --> 00:02:36,590
strong finger print of the original code. And it

48
00:02:36,590 --> 00:02:39,010
always matching when you get the code from a

49
00:02:39,010 --> 00:02:41,940
previous known In response to your requst, you're goint

50
00:02:41,940 --> 00:02:45,210
to compute the fingerprint once more. Check it against the

51
00:02:45,210 --> 00:02:48,000
fingerprint that is contained in the capsule, ensure that

52
00:02:48,000 --> 00:02:51,540
there is no code spoofing happening. That's how you can

53
00:02:51,540 --> 00:02:54,580
overcome this protection threat. And the third concern can

54
00:02:54,580 --> 00:02:57,940
be integrity of the soft state. And what I mean

55
00:02:57,940 --> 00:03:00,700
by that is, the soft store that's available

56
00:03:00,700 --> 00:03:04,070
at an ordered node is limited in size, and

57
00:03:04,070 --> 00:03:07,120
you don't want any particular network flow to

58
00:03:07,120 --> 00:03:10,150
arbitrarily consume all of the soft state. And yet

59
00:03:10,150 --> 00:03:12,340
again, there is a restricted API that is

60
00:03:12,340 --> 00:03:16,180
provided in ANTS, that's the safeguard. For this protection

61
00:03:16,180 --> 00:03:20,060
threat. So these protection threats are concerns. But at

62
00:03:20,060 --> 00:03:23,750
least in the ANTS tool kit, they offer solutions

63
00:03:23,750 --> 00:03:25,980
to ensure that these protection threats are

64
00:03:25,980 --> 00:03:29,520
not show stoppers for active networks. The second

65
00:03:29,520 --> 00:03:32,290
concern that one might have is Resource

66
00:03:32,290 --> 00:03:34,560
Management threats. Now what I mean by that

67
00:03:34,560 --> 00:03:41,520
is Because we are executing code at a router, the result of that code execution

68
00:03:41,520 --> 00:03:45,740
could be that I proliferate packets in the

69
00:03:45,740 --> 00:03:49,120
internet. I'll give you an example of resending

70
00:03:49,120 --> 00:03:52,480
a message to my siblings I send one message,

71
00:03:52,480 --> 00:03:54,800
and at some point That one message becomes n

72
00:03:54,800 --> 00:03:57,950
message. So in some sense, we can start flooding

73
00:03:57,950 --> 00:04:01,460
the network with capsule processing. Is that a threat?

74
00:04:01,460 --> 00:04:04,850
Well it is, but internet is already susceptible to

75
00:04:04,850 --> 00:04:08,570
this kind of resource management threat and yes capsule

76
00:04:08,570 --> 00:04:11,330
adds to it, but it is not anything new

77
00:04:11,330 --> 00:04:14,500
that it is adding in terms of resource management threat.

78
00:04:14,500 --> 00:04:16,550
On the other hand, we can ask the question at

79
00:04:16,550 --> 00:04:19,640
each node is it going to consume more resources than

80
00:04:19,640 --> 00:04:22,950
it should. And this again comes back to the safegaurd

81
00:04:22,950 --> 00:04:26,980
that they have in the ANTS toolkit that the api is

82
00:04:26,980 --> 00:04:30,160
a restricted api and therefore the amount of resources that

83
00:04:30,160 --> 00:04:33,390
you can consume at a node It's fairly restricted, so

84
00:04:33,390 --> 00:04:35,630
there is sort of a mixed answer to this resource

85
00:04:35,630 --> 00:04:40,120
management concern. At a given node, the resource management concern doesn't

86
00:04:40,120 --> 00:04:46,000
quite exist so long as you adhere to the restricted API of ANTS. And the second

87
00:04:46,000 --> 00:04:49,520
concern that the capsules may flood the network

88
00:04:49,520 --> 00:04:52,230
can happen, but it already happens, we all

89
00:04:52,230 --> 00:04:58,640
experience spam on The internet so this is not adding any new problem but it is

90
00:04:58,640 --> 00:05:02,490
perhaps exasterbating an existing problem. So having looked

91
00:05:02,490 --> 00:05:05,460
at division and looking at division and the practicality

92
00:05:05,460 --> 00:05:07,800
of active networks, time for a quiz.
