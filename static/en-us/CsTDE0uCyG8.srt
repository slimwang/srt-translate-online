1
00:00:00,000 --> 00:00:02,310
And now, of course, the answer is a little bit subjective because,

2
00:00:02,310 --> 00:00:05,310
since all of these problems here are NP complete,

3
00:00:05,310 --> 00:00:09,090
you could basically try an NP completeness reduction from anyone of those,

4
00:00:09,090 --> 00:00:13,640
but we were looking for similarity; so, bioinformatics comparing DNA sequences?

5
00:00:13,640 --> 00:00:16,680
Yes, that is a lot like common subsequence especially if

6
00:00:16,680 --> 00:00:20,930
those sequences have certain insertions and deletions in them.

7
00:00:20,930 --> 00:00:22,950
Scheduling computer programs?

8
00:00:22,950 --> 00:00:26,610
That is most often a problem related to packing.

9
00:00:26,610 --> 00:00:29,600
You have a number of programs and the number of machines

10
00:00:29,600 --> 00:00:32,770
and you need to match programs to machines as best as you can

11
00:00:32,770 --> 00:00:38,120
that is almost the same as putting packages into containers so that they are optimally filled.

12
00:00:38,120 --> 00:00:42,190
Actually, scheduling is almost an individual class of NP complete problems.

13
00:00:42,190 --> 00:00:45,590
If you look at the Wikipedia page that we just looked at,

14
00:00:45,590 --> 00:00:47,970
you should find a couple of problems in the section scheduling.

15
00:00:47,970 --> 00:00:52,800
Are K classrooms enough? That can be stated as a coloring problem.

16
00:00:52,800 --> 00:00:55,820
If you have a number of courses, and for some reasons,

17
00:00:55,820 --> 00:00:59,101
these courses cannot be held in the same room,

18
00:00:59,101 --> 00:01:01,000
then determining a minimum number of rooms

19
00:01:01,000 --> 00:01:04,700
can be the same as determining a coloring in that network.

20
00:01:04,700 --> 00:01:09,000
For this course here, we are using the red classroom,

21
00:01:09,000 --> 00:01:12,010
and for this room here, we're using the blue classroom,

22
00:01:12,010 --> 00:01:15,780
and for example, if you wanted to use the blue classroom for this course as well,

23
00:01:15,780 --> 00:01:18,060
that doesn't work because we have a connection here.

24
00:01:18,060 --> 00:01:22,190
You have to use another one here and of course another one here.

25
00:01:22,190 --> 00:01:25,260
That doesn't work as well, so four classrooms.

26
00:01:25,260 --> 00:01:29,810
Merging the source code of two programs have been working on,

27
00:01:29,810 --> 00:01:35,420
that is a common subsequence problem because the program as will have modified certain parts,

28
00:01:35,420 --> 00:01:39,310
will have deleted certain parts, possibly inserted other parts,

29
00:01:39,310 --> 00:01:43,440
so we need to find out what the true programming code still have in common.

30
00:01:43,440 --> 00:01:46,310
Filling vans? Yeah, that was an easy one probably.

31
00:01:46,310 --> 00:01:49,570
That is a classical packing problem because you're actually using packets.

32
00:01:49,570 --> 00:01:52,810
Something else always calls for the universal weapon

33
00:01:52,810 --> 00:01:57,310
and that universal weapon in the case of NP completeness is 3-SAT.

34
00:01:57,310 --> 00:02:01,330
Now, you have a library of one, two, three, four,

35
00:02:01,330 --> 00:02:05,650
five, six, seven, eight, nine, ten NP complete problems

36
00:02:05,650 --> 00:02:09,270
which are a good basis for showing NP completeness.

37
00:02:09,270 --> 99:59:59,999
Whenever you come across a problem where you think that it might be NP complete.
