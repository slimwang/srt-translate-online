1
00:00:00,160 --> 00:00:03,323
Here is the outline of the dart throwing program. We need to complete the part

2
00:00:03,323 --> 00:00:07,782
here where X and Y should be random numbers between minus one and one. So we

3
00:00:07,782 --> 00:00:10,950
can't just call generator next double, cause that gets a value between zero and

4
00:00:10,950 --> 00:00:15,374
and one, and we want a value from minus one to one. So here's the trick, take

5
00:00:15,374 --> 00:00:19,564
the value from zero to one, multiply by two. That gives you a value from zero

6
00:00:19,564 --> 00:00:23,682
to two, and then you subtract one, which shifts it to the left by one. Here is

7
00:00:23,682 --> 00:00:27,870
the final expression. And of course the very same expression will work for y.

8
00:00:27,870 --> 00:00:31,172
Now we need to find whether the point lies in the unit circle. He can compute

9
00:00:31,172 --> 00:00:34,538
the distance just like you've done in the telescope problem, but it's actually

10
00:00:34,538 --> 00:00:38,887
a little easy in this case. I can take the square of the distance, and check

11
00:00:38,887 --> 00:00:43,420
whether that's less equal one, because the square root of one is just one.

12
00:00:43,420 --> 00:00:46,390
Don't worry about it if you're just used to formula. It's not a math class, so

13
00:00:46,390 --> 00:00:51,198
any correct formula will do. Let's run the program. And once the number of

14
00:00:51,198 --> 00:00:55,514
tries, we'll try a million and we get a pretty respectable estimate for pi. And

15
00:00:55,514 --> 00:00:59,052
like a said there are better ways of computing pi, but this method of using

16
00:00:59,052 --> 00:01:02,706
random numbers for measuring objects is really powerful when the object is

17
00:01:02,706 --> 00:01:07,548
irregular. When it's easy to find out whether a point lies in it, but when it's

18
00:01:07,548 --> 00:01:10,620
hard to compute the area with traditional means.
