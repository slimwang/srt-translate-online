1
00:00:00,430 --> 00:00:02,755
Our coworker Larry, you saw in the first lesson,

2
00:00:02,755 --> 00:00:05,710
has been putting together a recipes repository.

3
00:00:05,710 --> 00:00:08,840
Carolyn and I like these recipes, but we want to tweak them a little bit to

4
00:00:08,840 --> 00:00:12,330
be more to our tastes so that we can then share them with our friends.

5
00:00:12,330 --> 00:00:14,800
Larry's okay with us sharing our modified versions, but

6
00:00:14,800 --> 00:00:16,890
he wants to keep his version as it is.

7
00:00:16,890 --> 00:00:19,310
Since Carolyn and I both want to make changes and

8
00:00:19,310 --> 00:00:23,960
we want others to see it, hosting our versions on GitHub would be a perfect fit.

9
00:00:23,960 --> 00:00:27,420
It would be possible to get a copy up on GitHub doing only things that we've

10
00:00:27,420 --> 00:00:28,790
already talked about.

11
00:00:28,790 --> 00:00:33,670
First, we could take Larry's repository and clone it, to say,

12
00:00:33,670 --> 00:00:35,050
Caroline's computer.

13
00:00:35,050 --> 00:00:39,680
This would automatically set up Larry's repository as a remote called Origin.

14
00:00:39,680 --> 00:00:43,320
Then we could create a new repository on GitHub on Caroline's account.

15
00:00:43,320 --> 00:00:46,710
She could then set up this new repository as a remote,

16
00:00:46,710 --> 00:00:49,580
which she could call whatever she wanted, say Our version.

17
00:00:49,580 --> 00:00:53,880
She can then push the changes to the remote, as we've seen before.

18
00:00:53,880 --> 00:00:57,160
And then since I want to contribute to this repository, as well,

19
00:00:57,160 --> 00:01:01,610
I could clone it to my computer, setting up Caroline's version as origin.

20
00:01:01,610 --> 00:01:04,910
This is pretty involved,, and it also doesn't give Larry any recognition for

21
00:01:04,910 --> 00:01:07,400
the work that he did on his original repository.

22
00:01:07,400 --> 00:01:10,120
Since there's no way somebody looking at ,Our Version,

23
00:01:10,120 --> 00:01:14,090
can have any idea about Larry's, unless we link to it explicitly.

24
00:01:14,090 --> 00:01:17,050
To get a similar effect with less work on our part,

25
00:01:17,050 --> 00:01:19,600
GitHub has a feature called Forking.

26
00:01:19,600 --> 00:01:22,970
This allows you to make a copy of somebody else's repository directly on

27
00:01:22,970 --> 00:01:27,330
the GitHub servers without pulling down the code to your local machine first.

28
00:01:27,330 --> 00:01:29,310
You can fork an existing repository and

29
00:01:29,310 --> 00:01:32,880
have it appear under your own account with just a single click.

30
00:01:32,880 --> 00:01:36,320
Then to make your modifications, you'd likely want to pull down the code onto

31
00:01:36,320 --> 00:01:40,200
your own machine, unless the files are simple enough to edit directly on GitHub.

32
00:01:40,200 --> 00:01:42,360
Forking is a lot like cloning.

33
00:01:42,360 --> 00:01:46,770
In fact, a fork is just a clone that GitHub makes for you on their own machines.

34
00:01:46,770 --> 00:01:48,990
There are a few other side effects to forking.

35
00:01:48,990 --> 00:01:51,920
Like GitHub keeping track of the number of people who've made forks on

36
00:01:51,920 --> 00:01:53,390
your repository.

37
00:01:53,390 --> 00:01:56,530
And the forks all linking back to the original.

38
00:01:56,530 --> 00:02:00,500
It also makes it easier to suggest changes back to the original repository,

39
00:02:00,500 --> 00:02:03,150
which we'll cover in detail later in the lesson.

40
00:02:03,150 --> 00:02:05,550
So, since Larry's version is already on GitHub,

41
00:02:05,550 --> 00:02:08,210
forking makes a lot of sense in this case.

42
00:02:08,210 --> 00:02:10,538
Caroline can make the fork on her account.

43
00:02:10,538 --> 00:02:13,120
Then we can each clone our new version.

44
00:02:13,120 --> 00:02:16,330
The clones don't need to know anything about the original repository.

45
00:02:16,330 --> 00:02:19,170
Since there are a lot of related concepts in the space of different ways to

46
00:02:19,170 --> 00:02:23,080
version your code, we want to make sure that everything makes sense so far.

47
00:02:23,080 --> 00:02:27,890
Each of the following diagrams represents either creating a branch, a fork, or

48
00:02:27,890 --> 00:02:28,910
a clone.

49
00:02:28,910 --> 00:02:33,290
Use the text boxes to indicate which concept is represented by each diagram.
