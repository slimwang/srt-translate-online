1
00:00:00,008 --> 00:00:00,980
Okay Katherine.

2
00:00:00,980 --> 00:00:01,580
>> Mm-hm.
>> So

3
00:00:01,580 --> 00:00:03,620
when we hit the plus button in that app.

4
00:00:03,620 --> 00:00:05,380
The number of cups of coffee goes up.

5
00:00:05,380 --> 00:00:07,320
>> Yeah it goes from
two cups to three cups.

6
00:00:07,320 --> 00:00:10,110
And what happens when we
press the plus button again?

7
00:00:10,110 --> 00:00:11,990
>> Well it actually just stays at three.

8
00:00:11,990 --> 00:00:12,590
Yeah.

9
00:00:12,590 --> 00:00:15,700
So no matter how many times we
press the plus button in that app,

10
00:00:15,700 --> 00:00:18,360
the number of cups of
coffee stays at three.

11
00:00:18,360 --> 00:00:19,930
>> Yeah.
>> Why is that happening?

12
00:00:19,930 --> 00:00:23,870
>> Well, I think it's because,
in our code, we only update it to three.

13
00:00:23,870 --> 00:00:25,200
And we never go beyond that.

14
00:00:25,200 --> 00:00:27,720
>> Right.
That number is hard coded right there.

15
00:00:27,720 --> 00:00:29,100
>> Yeah.
>> You know what this remind me of?

16
00:00:29,100 --> 00:00:30,040
>> What is it?

17
00:00:30,040 --> 00:00:32,840
>> Well, [LAUGH] my computer science
professor in college used to say.

18
00:00:32,840 --> 00:00:33,340
>> Yeah?

19
00:00:34,410 --> 00:00:36,230
When you submit your final project.

20
00:00:36,230 --> 00:00:37,100
>> Yeah?

21
00:00:37,100 --> 00:00:39,100
>> Please, no magic numbers.

22
00:00:39,100 --> 00:00:40,260
>> Wait, what's a magic number?

23
00:00:40,260 --> 00:00:41,730
>> Well, three's kind of a magic number.

24
00:00:41,730 --> 00:00:43,930
>> Okay.
>> It's a magic number because,

25
00:00:43,930 --> 00:00:46,475
we are doing the addition in our head,
but then to the computer.

26
00:00:46,475 --> 00:00:48,115
>> We're telling it the right answer.

27
00:00:48,115 --> 00:00:52,535
>> Okay, yeah, it would be better if
the computer actually calculated itself.

28
00:00:52,535 --> 00:00:53,105
>> Wait.

29
00:00:53,105 --> 00:00:55,025
When you talk about calculation in math.

30
00:00:55,025 --> 00:00:56,515
>> Uh-huh.
>> I need to start writing things down.

31
00:00:56,515 --> 00:00:57,565
>> Okay.

32
00:00:57,565 --> 00:00:58,515
Let's write some pseudocode.

33
00:00:59,555 --> 00:01:01,895
Let's write the pseudocode for this.

34
00:01:01,895 --> 00:01:04,595
Assume that we've already created
quantity variable and set it to two.

35
00:01:04,595 --> 00:01:07,575
When the plus button
in the app is pressed,

36
00:01:07,575 --> 00:01:10,450
we're going to take the current
quantity value which is two.

37
00:01:10,450 --> 00:01:12,480
>> Add one to it to make it three, and

38
00:01:12,480 --> 00:01:16,550
then store that as the new value
inside the quantity variable.

39
00:01:16,550 --> 00:01:19,510
If we hit the plus button again,
then we're going to take the current

40
00:01:19,510 --> 00:01:23,840
quantity value which is now three,
and add one to it which makes it four.

41
00:01:23,840 --> 00:01:26,700
And then store that as the new
value inside the variable,

42
00:01:26,700 --> 00:01:30,200
and here's the actual Java code for it.

43
00:01:30,200 --> 00:01:32,310
We initialize a variable first.

44
00:01:32,310 --> 00:01:33,980
If the plus button is pressed again,

45
00:01:33,980 --> 00:01:36,890
then we're going to take the existing
quantity value, add a one to it,

46
00:01:36,890 --> 00:01:39,990
and then store this as the new value for
the quantity variable.

47
00:01:41,670 --> 00:01:45,160
When you read these lines of code,
you can imagine the boxes in your head.

48
00:01:45,160 --> 00:01:47,850
Even though we're used to reading
things from left to right,

49
00:01:47,850 --> 00:01:50,960
I always start with what's on the right
hand side of the equal sign first.

50
00:01:51,970 --> 00:01:54,240
In this case,
we have the current value of quantity.

51
00:01:54,240 --> 00:01:58,100
Which is two, and then we add one to it,
and that makes three.

52
00:01:58,100 --> 00:02:02,090
Then we store the three inside
the variable, like this.

53
00:02:02,090 --> 00:02:05,590
The righthand side is an expression,
which we learned about earlier.

54
00:02:05,590 --> 00:02:08,850
And an expression can be made
up variables, operators and

55
00:02:08,850 --> 00:02:10,630
literal values, and more.

56
00:02:10,630 --> 00:02:15,200
If we click on the plus button again,
then we can say quantity = quantity + 1.

57
00:02:15,200 --> 00:02:17,660
At this point the current
value of quantity is three,

58
00:02:17,660 --> 00:02:20,680
then we add one to it,
and that makes four.

59
00:02:20,680 --> 00:02:23,970
Then we store four as the new value
inside the quantity variable like this.

60
00:02:25,320 --> 00:02:27,660
Essentially we've have reduced
it down to a common pattern,

61
00:02:27,660 --> 00:02:31,290
that the computer can repeat each
time the plus button is pressed.

62
00:02:31,290 --> 00:02:35,940
Instead of having to write a new line
of code that says the explicit value of

63
00:02:35,940 --> 00:02:40,010
the number of cups of coffee,
we can just do quantity = quantity + 1,

64
00:02:40,010 --> 00:02:44,200
and continue to build off of
the existing value of quantity.

65
00:02:44,200 --> 00:02:46,060
This is a lot more flexible.

66
00:02:46,060 --> 00:02:48,395
Say you You wanted to change
initial quantity to 3,

67
00:02:48,395 --> 00:02:51,595
then the rest of the lines of code
wouldn't have to change at all.

68
00:02:51,595 --> 00:02:55,675
Because we would always use the latest
value of quantity, whatever it is,

69
00:02:55,675 --> 00:02:59,535
which, in our old approach, if we wanted
to update the quantity value to 3,

70
00:02:59,535 --> 00:03:02,985
then after you hit the plus button, you
would have to write a new line of code

71
00:03:02,985 --> 00:03:07,360
that says quantity equals 4 and
update this to be quantity equals 5.

72
00:03:07,360 --> 00:03:10,960
When we update the quantity to a
completely new literal value each time,

73
00:03:10,960 --> 00:03:13,870
it's hard for the computer to know
what the pattern is between them.

74
00:03:14,870 --> 00:03:18,680
Instead if we update quantity based on
the current value of that variable and

75
00:03:18,680 --> 00:03:21,750
we increment it in a predictable way,
then the computer will be able to do

76
00:03:21,750 --> 00:03:25,090
this every single time that
the plus button is pressed.

77
00:03:25,090 --> 00:03:27,929
This approach will work a lot better for
our coffee ordering app.

78
00:03:28,930 --> 00:03:30,440
Each time we hit the plus button,

79
00:03:30,440 --> 00:03:33,590
we can just increase the existing
quantity value by 1.

80
00:03:33,590 --> 00:03:37,330
Practice writing out each line of code
by typing them into the boxes we've

81
00:03:37,330 --> 00:03:38,860
provided here.

82
00:03:38,860 --> 00:03:41,060
Pay attention to each character and
symbol.

83
00:03:42,120 --> 00:03:45,900
This is the first time you're updating a
variable, using the variable itself, so

84
00:03:45,900 --> 00:03:48,850
make sure you type out this
variable name correctly.

85
00:03:48,850 --> 00:03:52,190
When you're done, fill out this column
that represents the current quantity

86
00:03:52,190 --> 00:03:54,720
value after each line
of code is executed.
