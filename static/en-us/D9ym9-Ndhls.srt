1
00:00:00,590 --> 00:00:05,000
As you might expect, Android stores
your persistent data in the file system.

2
00:00:06,129 --> 00:00:10,759
These files can be stored in internal
storage that is private to your app.

3
00:00:10,759 --> 00:00:14,539
They can also be stored and
shared or external storage.

4
00:00:14,539 --> 00:00:15,919
On older Android devices,

5
00:00:15,919 --> 00:00:19,969
this shared storage was actually
on an external memory card.

6
00:00:19,969 --> 00:00:24,589
Today most Android devices only emulate
this card, so that there is the shared

7
00:00:24,589 --> 00:00:28,320
external storage apps need
available on the device.

8
00:00:28,320 --> 00:00:31,836
Some Android devices have
emulated shared storage and

9
00:00:31,836 --> 00:00:33,832
secondary external storage.

10
00:00:33,832 --> 00:00:38,535
Android 4.4 KitKat added an API to
allow developers to access this

11
00:00:38,534 --> 00:00:41,339
secondary external storage.

12
00:00:41,340 --> 00:00:44,710
We're going to focus on
internal storage in this class.

13
00:00:44,710 --> 00:00:48,549
Check the instructor notes to learn
more about Android storage locations.

14
00:00:49,609 --> 00:00:54,420
As I mentioned before, Android
persists data into the file system.

15
00:00:54,420 --> 00:00:57,130
It does provide two
functional layers on top of

16
00:00:57,130 --> 00:01:01,115
the file system in the form of
SharedPreferences and SQLite.

17
00:01:01,115 --> 00:01:04,915
The SharedPreferences class provide
the general framework that allows you to

18
00:01:04,915 --> 00:01:09,235
save and retrieve persistent key
value pairs of primitive data types,

19
00:01:09,234 --> 00:01:13,685
such as booleans, floats,
ints, longs and strings.

20
00:01:13,685 --> 00:01:17,170
SharedPreferences is used by the Android
preference activity to store our

21
00:01:17,170 --> 00:01:19,730
settings data such as the location.

22
00:01:19,730 --> 00:01:23,469
>> An SQLI database or
any relational database stores and

23
00:01:23,469 --> 00:01:26,420
organizes all its data in tables.

24
00:01:26,420 --> 00:01:29,310
Each table is made up of rows and
columns.

25
00:01:29,310 --> 00:01:31,370
Each row being the data record or entry,

26
00:01:31,370 --> 00:01:35,400
and the columns represent the data
fields that make up those records.

27
00:01:35,400 --> 00:01:37,190
When you decide to use a database,

28
00:01:37,189 --> 00:01:40,159
you should think of how many tables
you need to represent your data.

29
00:01:40,159 --> 00:01:43,549
And what each table will
contain in terms of columns.

30
00:01:43,549 --> 00:01:44,469
Once you have a design for

31
00:01:44,469 --> 00:01:47,209
your database,
you can then create those tables.

32
00:01:47,209 --> 00:01:52,039
And upon those tables you can create,
remove, update, or delete data.

33
00:01:52,040 --> 00:01:55,550
These four operations are usually
referred to as CRUD, and

34
00:01:55,549 --> 00:01:58,759
any database system
should support all four.

35
00:01:58,760 --> 00:02:03,400
Any operation in an SQL database
is executed using SQL queries.

36
00:02:03,400 --> 00:02:07,270
Retrieving data operations
are done using a select query.

37
00:02:07,269 --> 00:02:11,219
For example, this query would select
all the orders that were made by

38
00:02:11,219 --> 00:02:13,740
any person with the last name Wales.

39
00:02:13,740 --> 00:02:17,969
Almost every popular Android
app uses an SQLite database.

40
00:02:17,969 --> 00:02:21,080
And to perform any database
operations from our Android code,

41
00:02:21,080 --> 00:02:24,160
you'll have to generate
the appropriate SQL queries.

42
00:02:24,159 --> 00:02:29,150
So if you're unfamiliar with relational
databases or how to create SQL queries,

43
00:02:29,150 --> 00:02:31,780
check out the links in the instructor
notes below, before you proceed.

