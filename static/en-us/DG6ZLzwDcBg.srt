1
00:00:00,560 --> 00:00:03,690
Now you have some useful
parallel tree algorithms.

2
00:00:03,690 --> 00:00:06,210
One is built on top of
work optimal lists.

3
00:00:06,210 --> 00:00:08,360
And the other on the rate
compressed framework for

4
00:00:08,360 --> 00:00:09,740
evaluating expression trees.

5
00:00:10,840 --> 00:00:13,960
Now before wrapping up the lesson,
I wanted to point out one of the neat

6
00:00:13,960 --> 00:00:19,080
ideas common to these methods, which
is the idea of linearizing the tree.

7
00:00:19,080 --> 00:00:20,530
Why is that cool?

8
00:00:20,530 --> 00:00:24,590
Well linearizing helps you achieve load
balance which is what you need to make

9
00:00:24,590 --> 00:00:27,130
a practical parallel algorithm scale.

10
00:00:27,130 --> 00:00:29,980
As an analogy imagine that
I gave you a pretzel and

11
00:00:29,980 --> 00:00:32,770
I asked you to cut it up
into say seven equal pieces.

12
00:00:34,080 --> 00:00:37,350
Like leaving the house and forgetting
to put on your pants, it's awkward.

13
00:00:38,360 --> 00:00:41,290
But if you unroll the pretzel
back into a line,

14
00:00:41,290 --> 00:00:44,660
it becomes much easier to measure
out into equal sized parts.

15
00:00:45,750 --> 00:00:48,720
Though I know what you're thinking,
it will be a lot more fun to just

16
00:00:48,720 --> 00:00:53,290
eat the pretzel,um.

17
00:00:53,290 --> 00:00:55,570
That is delicious pretzel.

18
00:00:55,570 --> 00:00:57,360
I doesn't taste like rubber at all.
