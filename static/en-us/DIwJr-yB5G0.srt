1
00:00:00,000 --> 00:00:02,880
[BLANK_AUDIO]

2
00:00:02,880 --> 00:00:05,859
When you're starting out on
a new machine learning problem,

3
00:00:05,859 --> 00:00:09,583
one of the first questions that you've
come to once you've prepared the data

4
00:00:09,583 --> 00:00:12,735
and made it suitable for
input into machine learning algorithm is

5
00:00:12,735 --> 00:00:15,570
what methodology or
what algorithm do you start off with.

6
00:00:15,570 --> 00:00:19,240
And there's a really good
rule of thumb for that.

7
00:00:19,240 --> 00:00:23,420
If you're working on a problem like
computer vision, where it's a really

8
00:00:23,420 --> 00:00:28,600
rich hierarchy structured and
complex natural data, then deep-parsing

9
00:00:28,600 --> 00:00:32,560
is the best sort of methodology is to
use and approach the problem with.

10
00:00:32,560 --> 00:00:36,950
A library in Python called Keras
makes deep-learning really easy and

11
00:00:36,950 --> 00:00:38,839
flexible to use.

12
00:00:39,890 --> 00:00:43,580
For any other problem that doesn't fit
that category of things like image data

13
00:00:43,580 --> 00:00:48,480
with a natural rich hierarchical call
structure to them, then you the best

14
00:00:48,480 --> 00:00:53,030
tool in your tool box to try first
is gradient boost machines and

15
00:00:53,030 --> 00:00:55,780
extreme boost which you can
access through python or

16
00:00:55,780 --> 00:00:59,310
through our is a great
toll to start off on.

17
00:00:59,310 --> 00:01:03,358
And that includes problems like you
have a numeric feature matrix and

18
00:01:03,358 --> 00:01:07,337
you're trying to predict a classifier
regression on that target or

19
00:01:07,337 --> 00:01:11,314
if you're trying to rank ads or
you're trying to predict whether or

20
00:01:11,314 --> 00:01:15,573
not a customer base satisfied based
on different information about that

21
00:01:15,573 --> 00:01:17,779
customer things along those lines.

22
00:01:17,779 --> 00:01:21,281
[BLANK_AUDIO]

23
00:01:21,281 --> 00:01:25,540
There's two things to cracking
the Kaggle competition.

24
00:01:25,540 --> 00:01:29,770
The first is to take the same standard
set of approaches many people

25
00:01:29,770 --> 00:01:33,440
in our community will be taking, which
is understand a problem by iterating

26
00:01:33,440 --> 00:01:36,530
rapidly on it trying to throw many
machine learning techniques and

27
00:01:36,530 --> 00:01:39,550
future pre-processing techniques and
things like that on it and

28
00:01:39,550 --> 00:01:41,180
see what the result is.

29
00:01:41,180 --> 00:01:44,550
So that will get you to
a strong competitive position.

30
00:01:44,550 --> 00:01:47,670
To really do a great job
in the competition and

31
00:01:47,670 --> 00:01:51,600
win, what you need to do is find
a competitive edge in some way.

32
00:01:51,600 --> 00:01:56,300
And in many cases that competitive
edge is materialized by

33
00:01:56,300 --> 00:01:59,860
understanding the distribution
of the tray and test sets and

34
00:01:59,860 --> 00:02:01,840
thatâ€™s how they might
defer the best test.

35
00:02:01,840 --> 00:02:05,440
So really coming up with the good
internal mechanism for validating your

36
00:02:05,440 --> 00:02:10,120
performance in the problem whether it's
via something like cross validation

37
00:02:10,120 --> 00:02:15,180
where you randomly split the problem
into a series of faults and

38
00:02:15,180 --> 00:02:19,230
then trade on some of the faults and
evaluate on other faults and

39
00:02:19,230 --> 00:02:23,810
then use that as your score or
another validation strategy.

40
00:02:25,200 --> 00:02:29,840
Having a really good internal validation
strategy that's consistent with how

41
00:02:29,840 --> 00:02:33,990
we're ultimately making the final
ranking on the hidden test set

42
00:02:33,990 --> 00:02:35,520
is crucial.

43
00:02:35,520 --> 00:02:39,000
And then creatively thinking
about the domain and

44
00:02:39,000 --> 00:02:41,440
exploring a large number
of different features or

45
00:02:41,440 --> 00:02:44,360
ways that could approach the problem,
is another approach.

46
00:02:44,360 --> 00:02:48,280
There's no shortcut to it, but
you can do a great job with

47
00:02:48,280 --> 00:02:50,890
a lot of both a combination
of effort and creativity.
