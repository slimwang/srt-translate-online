1
00:00:00,330 --> 00:00:03,330
Starting from the pseudo code from the hint video, and get

2
00:00:03,330 --> 00:00:07,005
set to the credit card number. Sum is set to 0. Count

3
00:00:07,005 --> 00:00:09,960
is also set to 0, and that's an int. And now

4
00:00:09,960 --> 00:00:13,224
for the tricky part, for each digit in n starting from the

5
00:00:13,224 --> 00:00:16,474
right. So I need to use the parts of this while

6
00:00:16,474 --> 00:00:20,316
loop that correspond to that. So I'll keep while n is greater

7
00:00:20,316 --> 00:00:23,046
than 0 and n equals n over 10. And I need

8
00:00:23,046 --> 00:00:26,230
to actually get the digit so that I can add it. But

9
00:00:26,230 --> 00:00:27,640
I don't just want to add the digit to the

10
00:00:27,640 --> 00:00:29,940
sum. I only want to do that if count is

11
00:00:29,940 --> 00:00:33,390
odd and I need to increment count. So count

12
00:00:33,390 --> 00:00:38,260
plus, plus. And if count is odd then add digit

13
00:00:38,260 --> 00:00:44,132
to the sum. But count is odd is not quite Java yet. If count mod 2 is 1

14
00:00:44,132 --> 00:00:47,553
then count is odd. And instead of printing the

15
00:00:47,553 --> 00:00:51,470
sum, I'll return it. And if I run the tester,

16
00:00:51,470 --> 00:00:54,610
so far so good. I don't see any evidence that I made mistakes.
