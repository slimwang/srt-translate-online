1
00:00:00,950 --> 00:00:02,480
So, that was an operation.

2
00:00:03,610 --> 00:00:08,170
Now, try it yourself on requirement
four, which is the one that

3
00:00:08,170 --> 00:00:13,170
says children, and that was age 12 and
under, have a special restriction.

4
00:00:13,170 --> 00:00:16,390
They can only check out
five items at a time.

5
00:00:16,390 --> 00:00:18,390
So, I'd like you to try and
write that and

6
00:00:18,390 --> 00:00:20,340
I'll give you a couple
hints along the way.

7
00:00:20,340 --> 00:00:23,530
You're going to have to specify
a pre-condition for this one.

8
00:00:24,660 --> 00:00:27,730
And remember preconditions indicate
what must be true in order for

9
00:00:27,730 --> 00:00:31,280
the checked out operation to execute.

10
00:00:31,280 --> 00:00:35,560
And be aware that this is

11
00:00:35,560 --> 00:00:38,160
not going to be a complete
specification for checked out.

12
00:00:38,160 --> 00:00:45,280
We saw part of it in
the previous exercise.

13
00:00:45,280 --> 00:00:47,520
And there's lots more
to checking things out.

14
00:00:47,520 --> 00:00:50,800
We're just concerned with the part
of checkout that has to do with

15
00:00:50,800 --> 00:00:51,860
the children.

16
00:00:51,860 --> 00:00:54,760
So, see if you can specify for

17
00:00:54,760 --> 00:00:58,380
this particular part of it
what the constraint is.

18
00:00:59,930 --> 00:01:03,970
>> So, before I get started I had a
question in regards to, this requirement

19
00:01:03,970 --> 00:01:07,410
almost sounds to me more like
an invariant than it does a pre or

20
00:01:07,410 --> 00:01:09,610
post condition of checking out.

21
00:01:09,610 --> 00:01:13,170
I don't know if there's a check out
limit, so to speak, for patrons,

22
00:01:13,170 --> 00:01:15,950
but is this one of those
situations in which there

23
00:01:15,950 --> 00:01:19,150
could be differing ways to
express this requirement?

24
00:01:19,150 --> 00:01:22,490
>> So, first off, there's no check out
limit for patrons in the requirements.

25
00:01:22,490 --> 00:01:23,655
>> Okay.
>> Other than for children.

26
00:01:23,655 --> 00:01:27,899
And I'll disagree a little bit.

27
00:01:29,230 --> 00:01:33,126
This is the number of items
that are checked out,

28
00:01:33,126 --> 00:01:38,270
is something that varies for
children or for patrons as a whole.

29
00:01:38,270 --> 00:01:44,845
And It varies depending upon
has the operation executed?

30
00:01:44,845 --> 00:01:50,230
So, every time that child wants to check
something out, it has to be checked.

31
00:01:52,170 --> 00:01:58,080
I think that it feels better to have it
associated with a particular operation

32
00:01:58,080 --> 00:02:03,460
than its invariant because, I mean,

33
00:02:03,460 --> 00:02:07,560
as a statement of truth,
it doesn't vary.

34
00:02:07,560 --> 00:02:08,869
But our need to check it

35
00:02:10,160 --> 00:02:13,060
is associated with this operation
of checking things out.

36
00:02:13,060 --> 00:02:15,520
See if you can do it with operation.

37
00:02:16,940 --> 00:02:20,870
>> So, is this context the patron?

38
00:02:20,870 --> 00:02:27,760
Is the child association or
a generalization of the patron class?

39
00:02:27,760 --> 00:02:33,680
>> So, recall when we did the original
analysis, that we had a choice.

40
00:02:33,680 --> 00:02:38,540
We could've had a subclass
child of patron.

41
00:02:38,540 --> 00:02:41,437
Or we could have,
essentially, an attribute.

42
00:02:41,437 --> 00:02:48,094
And recall that the issue that
arose was little Timmy, today,

43
00:02:48,094 --> 00:02:53,382
is 11 years old and
having a birthday tomorrow.

44
00:02:53,382 --> 00:02:59,062
And they would change from being a child
class to a full adult patron class.

45
00:02:59,062 --> 00:03:02,050
Now, there are ways of
modeling that in UML.

46
00:03:02,050 --> 00:03:02,830
But, in general,

47
00:03:02,830 --> 00:03:07,620
in object oriented languages, you
can't change the class of an instance.

48
00:03:07,620 --> 00:03:09,940
So, we decided, in this case,
to use an attribute.
