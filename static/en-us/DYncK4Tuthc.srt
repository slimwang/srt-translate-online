1
00:00:00,000 --> 00:00:03,000
Before we go too much further, I want to teach you a quick little Python thing

2
00:00:03,000 --> 00:00:04,000
about how to do string substitution.

3
00:00:04,000 --> 00:00:08,000
This will make generating our HTML a little bit more convenient.

4
00:00:08,000 --> 00:00:12,000
If we have a string in Python that's represented like this.

5
00:00:12,000 --> 00:00:17,000
This is a string that will probably be returning something like this in our web app--

6
00:00:17,000 --> 00:00:19,000
you know--a little bit HTML with some contents.

7
00:00:19,000 --> 00:00:24,000
If we want to return a lot of different types of bold contents with different text,

8
00:00:24,000 --> 00:00:27,000
it's a pain because we have to make this whole string everytime.

9
00:00:27,000 --> 00:00:30,000
Instead we can do something like this.

10
00:00:30,000 --> 00:00:33,000
Okay, so here we have the same structure of the string.

11
00:00:33,000 --> 00:00:36,000
We still have got our <b>tags for bold,</b>

12
00:00:36,000 --> 00:00:40,000
but I've replaced the contents with this %s,

13
00:00:40,000 --> 00:00:44,000
and what this does is if we follow the string with a % sign and then a variable,

14
00:00:44,000 --> 00:00:48,000
it will substitute the contents of this variable for %s.

15
00:00:48,000 --> 00:00:55,000
So if this were instead a, and a = "some bold text",

16
00:00:55,000 --> 00:01:00,000
when we print this string, when we print "<b>%s</b> % a",

17
00:01:00,000 --> 00:01:04,000
we'll actually get output that looks like this,

18
00:01:04,000 --> 00:01:06,000
and this is how it can generate the strings.

19
00:01:06,000 --> 00:01:10,000
So this is really convenient because we could have a function that just substitutes

20
00:01:10,000 --> 00:01:15,000
1 variable into a string, and then we don't have to build that string over and over again.

21
00:01:15,000 --> 00:01:19,000
Okay, so time for a quick quiz.
