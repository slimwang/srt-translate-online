1
00:00:00,810 --> 00:00:03,210
All right, so there's a lot of
different types of loops, and

2
00:00:03,210 --> 00:00:05,900
the first one we're going to
learn about is the while loop.

3
00:00:05,900 --> 00:00:09,460
In this next quiz, you'll write code for
the while loop, and

4
00:00:09,460 --> 00:00:11,990
the while loop will help
us create text view for

5
00:00:11,990 --> 00:00:15,530
each element of the words list,
and add it to the layout.

6
00:00:15,530 --> 00:00:19,640
And by the end of this coding task,
your app will look like this, so

7
00:00:19,640 --> 00:00:21,880
while is a special Java keyword.

8
00:00:21,880 --> 00:00:24,650
It means that we should keep
executing a block of statements

9
00:00:24,650 --> 00:00:28,780
denoted by instructions in this diagram,
as long as a certain condition is true.

10
00:00:29,780 --> 00:00:33,030
So we continue to execute
the set of instructions,

11
00:00:33,030 --> 00:00:35,350
while this condition is true.

12
00:00:35,350 --> 00:00:36,930
And essentially move
through it in a loop.

13
00:00:38,350 --> 00:00:39,570
So to go into more detail,

14
00:00:40,570 --> 00:00:45,000
while the condition between
the parentheses is true, we execute

15
00:00:45,000 --> 00:00:49,550
all the instructions in this block of
code that lies between these two braces.

16
00:00:49,550 --> 00:00:52,830
And then after that we go back to the
condition again, and then check to see

17
00:00:52,830 --> 00:00:57,790
if that's true, and if it is true we
execute these set of instructions again.

18
00:00:57,790 --> 00:01:00,160
Then we go back to the condition.

19
00:01:00,160 --> 00:01:04,569
Check to see if it's true and if it is
execute the set of instructions again

20
00:01:04,569 --> 00:01:06,650
and then if we go back to the condition.

21
00:01:06,650 --> 00:01:11,780
And at any point it's false, then we
skip over then set us and truculence,

22
00:01:11,780 --> 00:01:15,470
and exit the loop and continue with
the rest of the code comes after it.

23
00:01:16,540 --> 00:01:19,270
So this condition determines
how many times the code

24
00:01:19,270 --> 00:01:21,790
inside this wild block will be executed.

25
00:01:21,790 --> 00:01:25,310
Often the condition will be
testing the state of a variable.

26
00:01:25,310 --> 00:01:29,060
So we can set up a counter variable
before we begin the loop, and I thought

27
00:01:29,060 --> 00:01:34,130
end of each iteration, so movement
through we can update that variable.

28
00:01:34,130 --> 00:01:37,570
And at some point we're going to update
the variable such a the condition will

29
00:01:37,570 --> 00:01:41,130
be false, and
that causes us to exit the loop.

30
00:01:41,130 --> 00:01:43,710
So here's an example
of the while loop and

31
00:01:43,710 --> 00:01:46,720
it corresponds with the place sound
example that we mentioned earlier.

32
00:01:47,980 --> 00:01:50,390
How do we ever arrive at this code?

33
00:01:50,390 --> 00:01:53,710
Whatever we're debating with ourselves
whether to write a loop or not so

34
00:01:53,710 --> 00:01:55,820
we can ask ourselves three questions.

35
00:01:55,820 --> 00:01:57,630
What tests are we
trying to do each time?

36
00:01:57,630 --> 00:01:59,660
How many times do we
need to repeat the loop?

37
00:01:59,660 --> 00:02:02,510
And as a result what is
the condition of the loop.

38
00:02:02,510 --> 00:02:03,740
So in this case for

39
00:02:03,740 --> 00:02:08,610
the first question what is the test we
do each time we need to play a sound.

40
00:02:08,610 --> 00:02:12,060
To figure out the condition we ask
ourselves the second question.

41
00:02:12,060 --> 00:02:14,160
How many times do we repeat the loop?

42
00:02:14,160 --> 00:02:17,370
And for example,
say we want to repeat it three times.

43
00:02:17,370 --> 00:02:18,230
If that's the case,

44
00:02:18,230 --> 00:02:21,440
we can make the condition to be that the
count variable must be less than three.

45
00:02:21,440 --> 00:02:25,470
So this is assuming that the count
variable is initialized at zero and

46
00:02:25,470 --> 00:02:27,280
then is updated each time.

47
00:02:27,280 --> 00:02:29,620
So see how this while loop is run.

48
00:02:29,620 --> 00:02:31,910
Let's keep track of our variable count.

49
00:02:31,910 --> 00:02:35,990
So first the count variable
is initialized at zero, and

50
00:02:35,990 --> 00:02:37,860
then we enter the while loop.

51
00:02:37,860 --> 00:02:41,400
Now we determine if the condition
is true or false, and

52
00:02:41,400 --> 00:02:44,640
this condition says that count
needs to be less than three.

53
00:02:44,640 --> 00:02:47,980
In our case, zero is less than three,
so the condition is true.

54
00:02:49,110 --> 00:02:51,570
That means we can continue
into the while block and

55
00:02:51,570 --> 00:02:53,280
execute these lines of code.

56
00:02:53,280 --> 00:02:55,950
So we call the method playSound, and

57
00:02:55,950 --> 00:02:59,310
imagine that playSound as a valid
method defined somewhere else.

58
00:02:59,310 --> 00:03:01,340
That plays a sound on the device.

59
00:03:01,340 --> 00:03:05,270
Afterwards we update
the count variable by 1, so

60
00:03:05,270 --> 00:03:10,720
now count has a value of 1 and
we move back to the condition.

61
00:03:10,720 --> 00:03:12,750
So we check our test condition and

62
00:03:12,750 --> 00:03:15,600
check if the count variable
is still less than 3.

63
00:03:15,600 --> 00:03:19,530
Well, 1 is less than 3 so
we're good to go, and

64
00:03:19,530 --> 00:03:21,900
continue back into the while loop.

65
00:03:21,900 --> 00:03:26,430
So we execute these set of instructions
again, we play sound, so ding!

66
00:03:27,510 --> 00:03:30,580
And then we update
the count variable to 2,

67
00:03:30,580 --> 00:03:34,500
now the test condition is still
true because 2 is less than 3.

68
00:03:34,500 --> 00:03:37,730
So we play the sound again,
now we update the count variable to 3,

69
00:03:37,730 --> 00:03:41,960
and when we go back to the condition,
this time the condition fails.

70
00:03:41,960 --> 00:03:44,960
Because three is not less than three.

71
00:03:44,960 --> 00:03:48,390
So once the condition is
false we exit the loop and

72
00:03:48,390 --> 00:03:50,470
continue with the code
that comes after it.

73
00:03:50,470 --> 00:03:55,860
So to summarize we've executed the code
inside the loop three times and

74
00:03:55,860 --> 00:03:59,210
that means we've played the sound
three times on the device.

75
00:03:59,210 --> 00:04:03,690
So as you can see a loop allows us to
repeat behavior with a concise number of

76
00:04:03,690 --> 00:04:08,300
lines without copying pasting
the same code over and over again.

77
00:04:08,300 --> 00:04:11,710
So here's one more example while loops
before I send you off to write your own

78
00:04:12,710 --> 00:04:15,990
assume the code they will be
talking about will be run

79
00:04:15,990 --> 00:04:19,550
inside the numbers activity after
you created the words list.

80
00:04:19,550 --> 00:04:23,600
So I've set up an example scenario where
the task I want to repeat is to print

81
00:04:23,600 --> 00:04:28,280
out a long statement for a specific item
in the list, based on an index variable.

82
00:04:29,390 --> 00:04:31,700
And say I want to repeat
the loop four times.

83
00:04:31,700 --> 00:04:34,410
So that the condition is that
we keep repeating the loop

84
00:04:34,410 --> 00:04:37,510
as long as the index
variable is less than four.

85
00:04:37,510 --> 00:04:39,780
Assuming that the index
variable starts off at zero and

86
00:04:39,780 --> 00:04:42,380
then increments one at a time.

87
00:04:42,380 --> 00:04:46,210
So to write out this code,
we create the index variable first and

88
00:04:46,210 --> 00:04:47,860
initialize it to zero.

89
00:04:47,860 --> 00:04:50,740
So this line of code will
live outside the loop.

90
00:04:50,740 --> 00:04:54,790
When we start the while statement we
need to use the while he would in Java

91
00:04:54,790 --> 00:04:57,720
fall by parentheses for the condition.

92
00:04:57,720 --> 00:05:00,940
So the condition is that the experience
should be less than four and

93
00:05:00,940 --> 00:05:03,240
if we want to repeat of four times.

94
00:05:03,240 --> 00:05:08,220
It should repeat once for index 0,
again for index 1, again for index 2,

95
00:05:08,220 --> 00:05:12,370
then lastly for
index 3 before exiting the loop.

96
00:05:12,370 --> 00:05:15,810
Now inside the while loop,
we can write instructions for the task.

97
00:05:15,810 --> 00:05:17,430
We want to print out a log statement for

98
00:05:17,430 --> 00:05:20,600
a specific item in the list
based on the index value.

99
00:05:20,600 --> 00:05:23,300
This log statement has
the tag NumbersActivity.

100
00:05:23,300 --> 00:05:28,860
And the messages index, followed by the
index variable, along with the value.

101
00:05:28,860 --> 00:05:32,750
Followed by the string value at
that position in the words list.

102
00:05:32,750 --> 00:05:34,710
And that's all the instructions
that we need for this task.

103
00:05:35,780 --> 00:05:38,353
Alright, so lastly,
within the body of this while loop,

104
00:05:38,353 --> 00:05:40,622
is that we need to update
the index variable by one.

105
00:05:40,622 --> 00:05:45,204
So we haven't seen this
syntax before of index++.

106
00:05:45,204 --> 00:05:50,060
But this is a shorthand that means
the same thing as setting the index

107
00:05:50,060 --> 00:05:54,769
variable to be index = index + 1.

108
00:05:54,769 --> 00:05:55,740
All right, so

109
00:05:55,740 --> 00:05:58,900
now you're intimately familiar
with how to write a loop in Java.

110
00:05:58,900 --> 00:06:02,250
Go ahead and apply what you learn
to fix out me walk up code.

111
00:06:02,250 --> 00:06:04,270
To create a display, text me for

112
00:06:04,270 --> 00:06:06,170
each element in the worst
list using a while loop.

113
00:06:07,820 --> 00:06:11,470
So pick up where we last left off in the
numbers activity where we're manually

114
00:06:11,470 --> 00:06:15,890
creating three text views, and adding
them to the linearly out without a loop,

115
00:06:15,890 --> 00:06:17,850
and modify it to use
a while loop instead.

116
00:06:19,040 --> 00:06:22,300
So now we're going to update
the Miwok app to use the while loop.

117
00:06:22,300 --> 00:06:26,240
So for the first task remove the log
messages in number activity and

118
00:06:26,240 --> 00:06:27,000
on create method.

119
00:06:28,160 --> 00:06:32,570
For the second task modify
activity underscore numbers

120
00:06:32,570 --> 00:06:35,030
to change the relative
layout into a linearly out.

121
00:06:36,280 --> 00:06:39,850
Then set the linearly
orientation to be vertical, and

122
00:06:39,850 --> 00:06:41,530
then add a view ID called rootview.

123
00:06:43,060 --> 00:06:46,830
Lastly, modify the numbers
activity oncreate method so

124
00:06:46,830 --> 00:06:50,290
that the code uses a while loop to
create and display a textview for

125
00:06:50,290 --> 00:06:52,340
each element in the words list.

126
00:06:52,340 --> 00:06:54,990
Remember you can start off where we last
left off with the code for the numbers

127
00:06:54,990 --> 00:06:59,490
activity, which creates three text to
use manually without using a loop.

128
00:07:00,610 --> 00:07:03,180
So after completing
steps one through three.

129
00:07:03,180 --> 00:07:05,210
The numbers activity in your
app should look like this.

130
00:07:06,390 --> 00:07:08,080
So, if you need a hint.

131
00:07:08,080 --> 00:07:11,410
I've added an example of
the while loop down below and

132
00:07:11,410 --> 00:07:13,940
there is an example of
the output as well.

133
00:07:13,940 --> 00:07:14,440
So, good luck.
