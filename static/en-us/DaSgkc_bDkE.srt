1
00:00:00,240 --> 00:00:02,100
Let's take a look at what it will take

2
00:00:02,100 --> 00:00:05,400
to implement a very basic SyncAdapter.

3
00:00:05,400 --> 00:00:07,930
We're going to write two services.

4
00:00:07,930 --> 00:00:10,120
Each service serves the primary purpose

5
00:00:10,120 --> 00:00:12,010
of delivering an object that represents

6
00:00:12,010 --> 00:00:15,780
an Android Binder interface 
to one of the system frameworks.

7
00:00:15,780 --> 00:00:18,770
A Binder is actually the low-level glue

8
00:00:18,770 --> 00:00:22,270
that implements cross process 
cross process communication in Android.

9
00:00:22,270 --> 00:00:24,653
You've been using Binders 
every time you talk

10
00:00:24,653 --> 00:00:26,496
to an Android system service.

11
00:00:26,496 --> 00:00:30,350
Intents and content providers 
are just high-level abstractions

12
00:00:30,350 --> 00:00:32,345
on top of the Binder interface.

13
00:00:32,345 --> 00:00:36,922
There's a whole language known
as AIDL to help define these interfaces.

14
00:00:36,950 --> 00:00:38,920
We're not going to cover all this here,

15
00:00:38,920 --> 00:00:42,620
but there's a lot more you can do 
with services and Binders.

16
00:00:42,620 --> 00:00:45,370
One more thing before we start, 
we're going to define

17
00:00:45,370 --> 00:00:48,080
an Authenticator Service 
and an Authenticator.

18
00:00:48,080 --> 00:00:51,240
But it will only be used 
by the Android accounts framework

19
00:00:51,240 --> 00:00:55,150
to allow us to create an account. 
SyncAdaptor's need an account.

20
00:00:55,150 --> 00:00:56,930
And the account framework requires

21
00:00:56,930 --> 00:01:00,520
that there be an authenticator 
delivered by an authenticator Service.

22
00:01:00,520 --> 00:01:03,560
You'll see that our authenticator 
is just a series of stubs,

23
00:01:03,560 --> 00:01:05,250
with exceptions that get thrown

24
00:01:05,250 --> 00:01:08,370
for each call just to prove 
that it isn't really used.

25
00:01:08,370 --> 00:01:12,180
One final note. 
This section approximately

26
00:01:12,180 --> 00:01:16,000
follows the online training 
at developer.android.com

27
00:01:16,000 --> 00:01:17,590
around sync adapters.

28
00:01:17,590 --> 00:01:19,860
Feel free to look there if you have

29
00:01:19,860 --> 00:01:21,910
any more questions.

30
00:01:21,910 --> 00:01:27,550
We're going to create a new package, sync,
to house all of this goodness.

31
00:01:27,550 --> 00:01:31,050
And a new class file 
for our authenticator.

32
00:01:31,050 --> 00:01:33,790
This code that we're about 
to paste in really just comes

33
00:01:33,790 --> 00:01:36,920
from the developer.android.com website,

34
00:01:36,920 --> 00:01:40,160
and as I mentioned earlier,
it's just a stub.

35
00:01:40,160 --> 00:01:43,100
You can tell because 
we throw exceptions for calling

36
00:01:43,100 --> 00:01:45,960
any of the functions 
except for the constructor.

37
00:01:45,960 --> 00:01:50,690
And one more file. 
Create SunshineAuthenticatorService.

38
00:01:50,690 --> 00:01:53,440
This is more code that is written for us.

39
00:01:53,440 --> 00:01:57,260
It allows the account manager 
to access the empty authenticator

40
00:01:57,260 --> 00:01:59,356
that we just pasted in.

41
00:01:59,356 --> 00:02:03,032
Now we add the account type 
in our strings.xml.

42
00:02:03,032 --> 00:02:06,890
The account type string suggests 
that it is specific to our app.

43
00:02:07,480 --> 00:02:10,250
If we had many applications
using the same account,

44
00:02:10,250 --> 00:02:14,110
we might want to create 
just an example.com account.

45
00:02:14,110 --> 00:02:17,640
We'll also begin to clean things up 
and add a content authority string.

46
00:02:17,640 --> 00:02:20,960
Note that this matches 
our content provider string.

47
00:02:20,960 --> 00:02:25,460
We'll fix the XML file later 
so they both use this same string.

48
00:02:25,460 --> 00:02:30,951
We create a new XML resource file, 
filename authenticator.xml,

49
00:02:30,951 --> 00:02:34,950
with root element account-authenticator.

50
00:02:34,950 --> 00:02:38,620
And you probably noticed 
that SunshineAuthenticatorService

51
00:02:38,620 --> 00:02:41,050
is actually a service 
that needs to be registered

52
00:02:41,050 --> 00:02:44,810
with a package manager 
in AndroidManifest.xml.

53
00:02:44,810 --> 00:02:47,940
Here's some more pastey goodness 
that does just that.

54
00:02:47,940 --> 00:02:50,200
Now be very, very careful.

55
00:02:50,200 --> 00:02:53,100
These strings all have to match precisely.

56
00:02:53,100 --> 00:02:56,610
The error messages that the system 
gives for having incorrect accounts

57
00:02:56,610 --> 00:02:59,960
are not necessarily intuitive. 
And with that,

58
00:02:59,960 --> 00:03:02,510
you should be able 
to create valid accounts.

59
00:03:02,510 --> 00:03:05,530
Once again, this is all just 
so that the SyncAdapter

60
00:03:05,530 --> 00:03:07,174
can be tied to an account.

61
00:03:07,174 --> 00:03:09,658
You don't actually use this at all.

62
00:03:09,658 --> 00:03:12,682
All right, let's tweak our provider tag 
in the manifest.

63
00:03:12,682 --> 00:03:15,080
We're going to add the syncable attribute.

64
00:03:15,080 --> 00:03:18,060
This just lets Android know 
that we're planning to synchronize

65
00:03:18,060 --> 00:03:20,000
the content provider with the server.

66
00:03:20,000 --> 00:03:22,750
Also, we'll set android:exported 
equals false.

67
00:03:22,750 --> 00:03:25,220
We had it at the default setting,

68
00:03:25,220 --> 00:03:27,960
which means that other apps
could see our content.

69
00:03:27,960 --> 00:03:31,530
Finally, let's change the authority 
to use our new string.

70
00:03:31,530 --> 00:03:33,950
Now, for some additional permissions.

71
00:03:33,950 --> 00:03:36,490
We need to be able
to read and write sync settings.

72
00:03:36,490 --> 00:03:38,680
That makes sense.

73
00:03:38,680 --> 00:03:42,350
We also have to authenticate accounts,
even though we're not really using them

74
00:03:42,350 --> 00:03:43,480
for anything.

75
00:03:43,480 --> 00:03:45,650
None of these permissions are ones users

76
00:03:45,650 --> 00:03:47,240
should be concerned about.

77
00:03:47,240 --> 00:03:48,883
But as developers, we always want

78
00:03:48,883 --> 00:03:51,816
to be careful when we have 
to add new permissions.

79
00:03:51,816 --> 00:03:55,510
Let's create the SunshineSyncAdapter 
file itself inside of sync,

80
00:03:55,510 --> 00:03:58,490
which extends the abstract threaded 
sync adapter class.

81
00:03:58,490 --> 00:04:00,853
Hit Ctrl+I and then Ctrl+O

82
00:04:00,853 --> 00:04:04,900
to implement the necessary abstract 
methods in constructor.

83
00:04:04,900 --> 00:04:08,290
We'll use the first constructor. 
We'll fill this out later.

84
00:04:08,510 --> 00:04:12,650
As you may recall, the sync adaptor 
pattern requires yet another service.

85
00:04:12,650 --> 00:04:14,693
So we're going to create 
another Java class

86
00:04:14,693 --> 00:04:16,926
called SunshineSyncService.

87
00:04:16,926 --> 00:04:20,680
This class is used to deliver the sync 
adapter Binder to the sync manager.

88
00:04:21,860 --> 00:04:27,200
The Binder is implemented for us by
the abstract threaded sync adapter class.

89
00:04:27,820 --> 00:04:30,900
And returned in the 
getSyncAdapterBinder method.

90
00:04:30,900 --> 00:04:33,660
And now, we need one more XML file.

91
00:04:33,660 --> 00:04:37,490
Create syncadapter.xml 
with root element sync-adapter.

92
00:04:37,490 --> 00:04:41,960
Once again, this XML file defines the 
settings associated with our sync-adapter,

93
00:04:41,960 --> 00:04:45,290
including it's content authority. 
The account type that it syncs.

94
00:04:45,290 --> 00:04:50,360
Whether or not it's user visible. 
Whether it supports uploading,

95
00:04:50,360 --> 00:04:52,480
which changes the way the content provider

96
00:04:52,480 --> 00:04:54,236
interacts with the sync adapter.

97
00:04:54,236 --> 00:04:56,992
Allowing parallel syncs
and is always syncable.

98
00:04:56,992 --> 00:05:00,120
These settings make sense 
for this particular application,

99
00:05:00,120 --> 00:05:02,350
and I bet you know what comes next.

100
00:05:02,350 --> 00:05:03,370
You're right.

101
00:05:03,370 --> 00:05:05,620
You have to register 
the sync adapter service

102
00:05:05,620 --> 00:05:06,930
with the package manager.

103
00:05:06,930 --> 00:05:08,610
And therefore we have to create

104
00:05:08,610 --> 00:05:12,190
more manifest entries, 
containing some important metadata.

105
00:05:12,190 --> 00:05:15,602
Most importantly, links 
to the file we just created.

106
00:05:15,602 --> 00:05:18,300
All right, now we're getting close.

107
00:05:18,300 --> 00:05:21,120
Let's start working 
on the sync adapter, itself.

108
00:05:21,120 --> 00:05:24,820
We'll start with a helper function 
to get the dummy sync account

109
00:05:24,820 --> 00:05:27,550
and make sure that it has been created.

110
00:05:27,550 --> 00:05:30,560
Then, we'll add another helper function 
to our sync adaptor,

111
00:05:30,560 --> 00:05:33,100
to make it easier 
to test our sync adaptor.
