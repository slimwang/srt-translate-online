1
00:00:00,270 --> 00:00:01,040
In this lesson,

2
00:00:01,040 --> 00:00:04,710
we'll use the same pattern to add
cards from movies from a database.

3
00:00:04,710 --> 00:00:07,800
Cards can be created to display
any type of data you want.

4
00:00:07,800 --> 00:00:09,950
After all, they're just views.

5
00:00:09,950 --> 00:00:13,240
For example, to display a movie card,
you could create a view with an image

6
00:00:13,240 --> 00:00:16,040
view for art work, and
a text view for the title.

7
00:00:16,040 --> 00:00:18,130
Here, we'll actually
use an image card view,

8
00:00:18,130 --> 00:00:20,760
which is provided by
the Leanback library.

9
00:00:20,760 --> 00:00:24,290
First, let's take a quick look at
what our movies database looks like.

10
00:00:24,290 --> 00:00:26,080
I'm back inside the LoadRows method now,
and

11
00:00:26,080 --> 00:00:29,120
I'm going to uncomment the line
that loads our dummy database.

12
00:00:29,120 --> 00:00:31,760
By the way, our dummies database is
actually going to pull images over

13
00:00:31,760 --> 00:00:34,020
the web, so you'll need an internet
connection from here on out.

14
00:00:35,070 --> 00:00:36,870
Let's check out the Movie class.

15
00:00:36,870 --> 00:00:40,650
Basically a Movie is a simple container
class with a title and a description,

16
00:00:40,650 --> 00:00:43,250
and a couple of images
that we'll get to later.

17
00:00:43,250 --> 00:00:46,720
The setup movies method creates
five movies with this data.

18
00:00:46,720 --> 00:00:48,820
Now we'll create cards to display these.

19
00:00:48,820 --> 00:00:50,340
Back inside the low rows method,

20
00:00:50,340 --> 00:00:52,690
I'm going to undo
the comments I did earlier.

21
00:00:52,690 --> 00:00:55,400
And by the way, the UI that we're
going to create will contain

22
00:00:55,400 --> 00:00:59,340
rows of five videos,
organized randomly and repeated.

23
00:00:59,340 --> 00:01:03,020
First, we'll create a presenter that we
can use to create views for our movies.

24
00:01:03,020 --> 00:01:05,319
Let's take a look inside this class.

25
00:01:05,319 --> 00:01:08,640
Scrolling down a bit, as before
there's two methods we care about,

26
00:01:08,640 --> 00:01:11,600
onCreateViewHolder and onBindViewHolder.

27
00:01:11,600 --> 00:01:13,520
This time instead of a text view,

28
00:01:13,520 --> 00:01:16,960
onCreateViewHolder creates
a view using a ImageCardView.

29
00:01:16,960 --> 00:01:19,960
This is a class provided by Leanback and
it's a card with a picture and

30
00:01:19,960 --> 00:01:21,350
some text.

31
00:01:21,350 --> 00:01:23,710
Whereas, previously we passed
a string to our presenter,

32
00:01:23,710 --> 00:01:25,790
here we pass a movie object.

33
00:01:25,790 --> 00:01:28,110
We cast the parameter to
the appropriate type, and

34
00:01:28,110 --> 00:01:30,399
this time,
we set multiple fields on the view.

35
00:01:31,540 --> 00:01:33,850
In this loop, we create a rows of cards.

36
00:01:33,850 --> 00:01:36,840
In a real app, these would be
organized in some sensible way.

37
00:01:36,840 --> 00:01:39,000
Here, we just randomly create
rows of five cards and

38
00:01:39,000 --> 00:01:40,760
assign them a category name.

39
00:01:40,760 --> 00:01:44,020
As before, we need to create an object
adapter that will hold the presenter

40
00:01:44,020 --> 00:01:48,090
that's used to create views for movies,
as well as the movies themselves.

41
00:01:48,090 --> 00:01:50,540
Here's where we add movies
from our database to it.

42
00:01:50,540 --> 00:01:53,570
And now we create the header item that
will be used for the category name.

43
00:01:53,570 --> 00:01:57,110
Then we wrap the header and
our list of five movies into a list row.

44
00:01:57,110 --> 00:02:00,220
And we add that list row to the object
adaptor we previously created,

45
00:02:00,220 --> 00:02:02,140
that has our list row presenter.

46
00:02:02,140 --> 00:02:04,660
Run your project at this point and
see what you get.

47
00:02:04,660 --> 00:02:05,160
Not.
