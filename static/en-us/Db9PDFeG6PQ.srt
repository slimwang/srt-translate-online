1
00:00:00,200 --> 00:00:03,600
Now that we have seen flush stall and forwarding

2
00:00:03,600 --> 00:00:07,000
as a solution for hazards in a pipeline let's do

3
00:00:07,000 --> 00:00:09,805
a quiz to see if you know when each should

4
00:00:09,805 --> 00:00:12,700
be used. Let us say that we have a five-stage

5
00:00:12,700 --> 00:00:15,456
pipeline where the first stage fetches the instruction, the

6
00:00:15,456 --> 00:00:18,910
second stage calls the instruction and reads the registers. The

7
00:00:18,910 --> 00:00:23,100
third stage, the instruction does the ALU operation and a

8
00:00:23,100 --> 00:00:25,460
branch is the result so we know where its going.

9
00:00:25,460 --> 00:00:28,371
In the mem stage loads and stores access memory,

10
00:00:28,371 --> 00:00:30,501
so at the end of this stage a load will

11
00:00:30,501 --> 00:00:34,050
finally have a value. And finally the fifth stage writes

12
00:00:34,050 --> 00:00:37,770
the result to the register. Here, we have some hazards.

13
00:00:37,770 --> 00:00:41,158
First, there is a control hazard. After the branch

14
00:00:41,158 --> 00:00:44,382
we fetch two wrong instructions; before we fetch the correct

15
00:00:44,382 --> 00:00:47,510
multiply instruction in this case. So the red ones are

16
00:00:47,510 --> 00:00:51,090
the ones that are fetched incorrectly. The question for you

17
00:00:51,090 --> 00:00:56,722
is should we flush, stall or forward here? Put a check mark in each of these

18
00:00:56,722 --> 00:00:58,933
three boxes depending on which one we do

19
00:00:58,933 --> 00:01:03,730
here. Next, we have a data dependence where the

20
00:01:03,730 --> 00:01:06,760
multiply is producing the R1 result and the

21
00:01:06,760 --> 00:01:09,620
load needs to use that as the memory address.

22
00:01:09,620 --> 00:01:12,168
Put a check mark in each of these

23
00:01:12,168 --> 00:01:16,382
three boxes depending on whether we need to flush,

24
00:01:16,382 --> 00:01:23,327
stall, or forward the value in this case. And finally, the load is producing the

25
00:01:23,327 --> 00:01:29,023
value of R1, that this add needs to use, so the question for you is should we

26
00:01:29,023 --> 00:01:35,438
flush, stall, or forward in this case? Note that in some cases, more than one of

27
00:01:35,438 --> 00:01:39,180
these needs to be used for optimal performance.

28
00:01:39,180 --> 00:01:41,680
To help you get started I'm going to tell

29
00:01:41,680 --> 00:01:45,940
you that for data dependencies, as we said, we never want to

30
00:01:45,940 --> 00:01:49,130
use flushing, so the real question is just should you stall or forward?
