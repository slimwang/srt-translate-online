1
00:00:00,140 --> 00:00:03,969
So for my final example,
let me now showcase the perspective or

2
00:00:03,969 --> 00:00:05,720
projective transformation of an image.

3
00:00:06,920 --> 00:00:08,680
Again, the usual things.

4
00:00:08,680 --> 00:00:11,240
Here just to be different we're going to
play around with a different image,

5
00:00:11,240 --> 00:00:12,910
the Berlin Wall image.

6
00:00:12,910 --> 00:00:15,700
We can actually compute the,
the height and width, and

7
00:00:15,700 --> 00:00:18,890
all of that kind of stuff
here from the image itself.

8
00:00:18,890 --> 00:00:23,490
And again it should be no surprise to
you so far that now we need four points.

9
00:00:23,490 --> 00:00:27,890
So, for example, so in the first image
I'm going to find four different points,

10
00:00:27,890 --> 00:00:30,640
so I've basically given them
those coordinates here.

11
00:00:30,640 --> 00:00:35,040
And for the second image I've found
four other points, and we need those for

12
00:00:35,040 --> 00:00:39,740
perspective transformation using these
two points, points one and point two.

13
00:00:39,740 --> 00:00:44,408
In this code I'm going to compute
the matrix, transformation matrix that

14
00:00:44,408 --> 00:00:49,300
actually uses these four points to
compute the perspective transformation.

15
00:00:49,300 --> 00:00:53,110
We're going to print it out and
then of course, as we have done before,

16
00:00:53,110 --> 00:00:56,010
we're going to just apply
this transformation here.

17
00:00:56,010 --> 00:00:57,420
Let me just run this code.

18
00:00:57,420 --> 00:01:00,320
Here you see the perspective transform.

19
00:01:00,320 --> 00:01:02,170
Again, this should be no surprise.

20
00:01:02,170 --> 00:01:03,830
This value is still 1.

21
00:01:03,830 --> 00:01:06,940
But of course we have other
values in the rest of the matrix.

22
00:01:06,940 --> 00:01:10,020
So this is the original Berlin Wall
image, and you'll see why actually this

23
00:01:10,020 --> 00:01:14,010
image was chosen to showcase
this effect of perspective warp.

24
00:01:14,010 --> 00:01:17,840
This is the perspectively corrected
image, now just being able to apply

25
00:01:17,840 --> 00:01:20,950
the perspective warp, and
again the points were correctly chosen.

26
00:01:20,950 --> 00:01:23,680
You notice now all of a sudden you
get a warp of actually seeing this

27
00:01:23,680 --> 00:01:26,430
image right in front as opposed to,
in the previous case,

28
00:01:26,430 --> 00:01:29,220
where you saw an effect
of foreshortening.

29
00:01:29,220 --> 00:01:33,640
Again, notice here straight lines remain
straight, which is what we talked about

30
00:01:33,640 --> 00:01:35,930
as one of the values of these
types of transformations.
