1
00:00:00,160 --> 00:00:04,000
Now, at this point, you know just enough
about the SQL language to be dangerous.

2
00:00:04,000 --> 00:00:05,540
So, let me give you a few quick tips and

3
00:00:05,540 --> 00:00:08,630
insights to keep you out of
trouble as you pick up the basics.

4
00:00:08,630 --> 00:00:12,590
First of all, all SQL statements
should end in a semicolon, so

5
00:00:12,590 --> 00:00:14,380
you might have noticed if you type but

6
00:00:14,380 --> 00:00:17,130
omit the semicolon you get
a set of little ellipses.

7
00:00:17,130 --> 00:00:19,100
Let me show you what that looks like, so

8
00:00:19,100 --> 00:00:23,180
here I am in the Command Prompt
inside the SQLite3 program.

9
00:00:23,180 --> 00:00:26,800
For here, I'm going to type
a statement to create a table,

10
00:00:30,090 --> 00:00:33,620
and don't worry if the statement
doesn't make sense all just yet.

11
00:00:33,620 --> 00:00:36,450
We'll type more into detail about
what the statement means and

12
00:00:36,450 --> 00:00:41,520
what the parameters mean, but right now
just focus on syntax of the semicolon.

13
00:00:41,520 --> 00:00:45,000
Say I finish my create table statement
and I just hit Enter here, so

14
00:00:45,000 --> 00:00:49,840
without the semicolon at the end, the
prompt becomes these three ellipses, and

15
00:00:49,840 --> 00:00:52,450
that's SQL's way of saying,
go on, keep typing.

16
00:00:52,450 --> 00:00:55,660
I'm expecting you to say more, but
it doesn't know you've finished your

17
00:00:55,660 --> 00:00:57,840
instructions already until
you end with that semicolon.

18
00:00:58,890 --> 00:01:03,090
Let's type it in here and type Enter,
so we can take advantage of this

19
00:01:03,090 --> 00:01:06,910
by typing out a single statement
into multiple lines if we need to.

20
00:01:06,910 --> 00:01:11,850
For example, let's create another table,
I'll just call it pets2 this time.

21
00:01:13,270 --> 00:01:16,070
But rather than typing it all out into
one line, I'm going to break it up into

22
00:01:16,070 --> 00:01:20,239
multiple lines and so that semicolon
completed this entire statement.

23
00:01:21,760 --> 00:01:23,280
Quick tip number two,

24
00:01:23,280 --> 00:01:27,080
you'll notice that not all statements
need to end in a semicolon, though.

25
00:01:27,080 --> 00:01:32,334
So, there's a difference between what's
called a dot command, like we always saw

26
00:01:32,334 --> 00:01:37,070
with dot quit or dot tables, and these
SQL commands, such as CREATE TABLE.

27
00:01:38,150 --> 00:01:43,090
Dot commands are SQLite3 specific,
so they're instructions for

28
00:01:43,090 --> 00:01:47,230
the SQLite3 software,
such as to open a file or

29
00:01:47,230 --> 00:01:51,810
to quit the program, but
they're not part of the language of SQL.

30
00:01:51,810 --> 00:01:56,830
Statements that end in a semicolon are
part of the structured query language,

31
00:01:56,830 --> 00:02:00,070
and that's what you'll be interacting
with to interact with your tables and

32
00:02:00,070 --> 00:02:01,330
various ways.

33
00:02:01,330 --> 00:02:05,000
It's also important to call that
dot commands are case sensitive.

34
00:02:05,000 --> 00:02:08,889
That means, typing dot help a lowercase,

35
00:02:08,889 --> 00:02:13,470
it's different from typing dot
HELP capital, so let's try that.

36
00:02:13,470 --> 00:02:16,871
Notice that SQLite does
not recognize that, so

37
00:02:16,871 --> 00:02:22,210
third tip I have for you is that
SQL keywords are case sensitive.

38
00:02:22,210 --> 00:02:26,444
For example,
our CREATE TABLE statement here,

39
00:02:26,444 --> 00:02:30,066
we could have written
it as CrEAte table.

40
00:02:30,066 --> 00:02:32,840
[BLANK_AUDIO]

41
00:02:32,840 --> 00:02:35,380
So, say I'm creating
a third table called pets3.

42
00:02:35,380 --> 00:02:39,894
Even with this inconsistent
capitalization here, the statement would

43
00:02:39,894 --> 00:02:44,556
work, but as convention I'm going to
always capitalize the keywords just to

44
00:02:44,556 --> 00:02:47,960
make it easier to read and
I suggest that you do as well.

45
00:02:47,960 --> 00:02:51,909
The final suggestion I have for you is
that hitting the Up and Down arrows will

46
00:02:51,909 --> 00:02:55,809
allow you to scroll through back and
forth through the previous commands.

47
00:02:55,809 --> 00:03:01,920
So, let's hit Up, and it brings in
the command that I typed in earlier.

48
00:03:01,920 --> 00:03:06,170
If I keep hitting up again, notice that
it's pulling in previous commands, so

49
00:03:06,170 --> 00:03:09,020
I just keep hitting up and these
are all the previous things I've typed.

50
00:03:09,020 --> 00:03:13,490
I can also hit down to grab in
the latest stuff, so the Up and

51
00:03:13,490 --> 00:03:16,925
Down keyboard shortcuts
also work in a terminal.

52
00:03:16,925 --> 00:03:21,375
So, say I quit out of
the SQLite program and

53
00:03:21,375 --> 00:03:25,025
hit Up, the most recent command
that I typed in is pulled right in.

54
00:03:26,595 --> 00:03:29,435
I suggest trying out these
four quick tips on your own

55
00:03:29,435 --> 00:03:30,725
before moving onto the next video.
