1
00:00:00,000 --> 00:00:03,000
All right. Infinite loops, those are no fun at all.

2
00:00:03,000 --> 00:00:05,000
I want to see my web page.

3
00:00:05,000 --> 00:00:08,000
I don't want to wait an infinite number of seconds and then see my web page.

4
00:00:08,000 --> 00:00:11,000
That's pretty long. I would get hungry before that ran out.

5
00:00:11,000 --> 00:00:15,000
Wouldn't it be nice if we could just tell if a program was going to loop forever or not?

6
00:00:15,000 --> 00:00:20,000
And then if it's going to loop forever, I won't run it or I'll print a little warning on the web page,

7
00:00:20,000 --> 00:00:22,000
but I won't waste a lot of time on it.

8
00:00:22,000 --> 00:00:25,000
So what I'd really like to do is just look at the program source code

9
00:00:25,000 --> 00:00:29,000
as we got it from the Web, say, and just be able to tell if it loops forever

10
00:00:29,000 --> 00:00:32,000
in one of these infinite loops or if it halts, if it stops,

11
00:00:32,000 --> 00:00:36,000
if it settles down and returns an answer after some finite amount of time.

12
00:00:36,000 --> 00:00:39,000
This seems like a totally legitimate request.

13
00:00:39,000 --> 00:00:45,000
Unfortunately, it's not just difficult, it's actually impossible, provably impossible.

14
00:00:45,000 --> 00:00:49,000
Not really hard, we're too lazy, we couldn't figure it out,

15
00:00:49,000 --> 00:00:52,000
but we know you can't do it.

16
00:00:52,000 --> 00:00:55,000
You can't make this determination correctly every time.

17
00:00:55,000 --> 00:00:59,000
To see why this can't happen, let's assume we could solve it

18
00:00:59,000 --> 00:01:01,000
and see what bad things happen to the world.

19
00:01:01,000 --> 00:01:05,000
Let's assume that we have thought very hard about this

20
00:01:05,000 --> 00:01:10,000
and we have somehow implemented a magic procedure called halts

21
00:01:10,000 --> 00:01:17,000
which takes another procedure as an argument and returns True if that procedure halts

22
00:01:17,000 --> 00:01:20,000
and False if it loops forever.

23
00:01:20,000 --> 00:01:22,000
Now we'd know if it's safe to evaluate a web page.

24
00:01:22,000 --> 00:01:25,000
We just look at all the JavaScript on the web page, we call halts on it,

25
00:01:25,000 --> 00:01:29,000
if that returns True every time, we can totally render that web page.

26
00:01:29,000 --> 00:01:33,000
Let's test our understanding of this mythical halts procedure.

27
00:01:33,000 --> 00:01:37,000
Over here on the left I've written 4 bits of Python code:

28
00:01:37,000 --> 00:01:39,000
vladimir, nabokov, pale, and fire,

29
00:01:39,000 --> 00:01:42,000
and fire is in red because that's warm.

30
00:01:42,000 --> 00:01:44,000
One possibility is that we think vladimir halts;

31
00:01:44,000 --> 00:01:47,000
another possibility is that we think nabokov halts.

32
00:01:47,000 --> 00:01:50,000
What I'd like you to do is tell me which of these 4 statements--

33
00:01:50,000 --> 00:01:53,000
there could be multiple--are actually true.

34
00:01:53,000 --> 99:59:59,999
Check each box that corresponds to a true fact.
