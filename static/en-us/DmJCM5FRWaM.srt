1
00:00:00,120 --> 00:00:03,910
So normalized cuts fixes this bias

2
00:00:03,910 --> 00:00:08,720
that Ncut has of, wanting to
pull off these little elements.

3
00:00:08,720 --> 00:00:12,910
And the way it does it is it's
going to propose a cut, and

4
00:00:12,910 --> 00:00:16,340
it has the traditional
measure of cutting A and B.

5
00:00:16,340 --> 00:00:22,010
But it's normalized, by the association
within A and the association within B.

6
00:00:22,010 --> 00:00:26,480
And a simple way of thinking about is
the association is just sort of how

7
00:00:26,480 --> 00:00:31,275
well connected,
summed over all of the nodes within a,

8
00:00:31,275 --> 00:00:34,775
in a segment how well
connected those points are.

9
00:00:34,775 --> 00:00:38,675
So the problem is,
is if you have a two segments, and

10
00:00:38,675 --> 00:00:41,935
one is very small,
it's going to have a very small value.

11
00:00:41,935 --> 00:00:44,432
And if that denominator
becomes a small value,

12
00:00:44,432 --> 00:00:46,422
that whole element becomes very large.

13
00:00:46,422 --> 00:00:49,752
So, even though the,
the other element might be a small size,

14
00:00:49,752 --> 00:00:53,732
the fact that this one became
small will penalize that a lot.

15
00:00:53,732 --> 00:00:58,682
So, by doing a this
normalization you can end up

16
00:00:58,682 --> 00:01:01,372
with a much better cut of the graph.

17
00:01:01,372 --> 00:01:02,552
If you just wanted to do,

18
00:01:02,552 --> 00:01:07,350
the best end cut normalized cut that
would be computationally-prohibitive.

19
00:01:07,350 --> 00:01:11,400
But there's an approximate solution
that exists using what is referred to

20
00:01:11,400 --> 00:01:14,680
as the generalized, or solving
the generalized eigenvalue problem.

21
00:01:14,680 --> 00:01:17,045
I'll just show you a very simple,
not simple,

22
00:01:17,045 --> 00:01:19,740
I'll show you a very high level
description of, of what goes on.

23
00:01:19,740 --> 00:01:22,780
And if you want more details,
you can go and take a look at papers or

24
00:01:22,780 --> 00:01:25,400
Wikipedia or anything like that.

25
00:01:25,400 --> 00:01:27,760
And so here, here is how it works.

26
00:01:27,760 --> 00:01:31,890
Let's suppose we've got the matrix W,
which is the adjacency matrix.

27
00:01:31,890 --> 00:01:36,980
So W,i,j is just the adjacency
between pixel i and pixel j.

28
00:01:37,980 --> 00:01:42,230
And then, there's a special matrix,
this diagonal matrix,

29
00:01:42,230 --> 00:01:44,860
that is just what's called
the degree of the node.

30
00:01:44,860 --> 00:01:50,050
For every vertex, how many other
vertexes is, are connected to it, right?

31
00:01:50,050 --> 00:01:53,240
And so in this case, it's the sum, so

32
00:01:53,240 --> 00:01:57,990
the, the, it's a diagonal matrix,
so the, the degree of pixel i

33
00:01:57,990 --> 00:02:03,300
is just the sum of all the affinities
i,j summed over all the j.

34
00:02:03,300 --> 00:02:06,540
And then what you can show
is the normalized cut cost,

35
00:02:06,540 --> 00:02:10,560
can be written in using this,
simple expression,

36
00:02:10,560 --> 00:02:16,210
where this vector y is what's
referred to as an indicator vector.

37
00:02:16,210 --> 00:02:18,540
So it's a vector that's
got positive ones and

38
00:02:18,540 --> 00:02:22,820
negative ones as to whether, remember
cutting this into two parts A and B, so

39
00:02:22,820 --> 00:02:26,150
it's a positive one if that
point belongs to segment A.

40
00:02:26,150 --> 00:02:29,220
And its a negative,
constant otherwise, all right?

41
00:02:29,220 --> 00:02:34,480
So just to solve even that for
y is very difficult, but,

42
00:02:34,480 --> 00:02:38,230
what you can do instead is,
this is just written out here.

43
00:02:38,230 --> 00:02:43,060
We solve this eigenvector equation,
and what that'll do is it'll solve for

44
00:02:43,060 --> 00:02:45,228
you for these y's directly.

45
00:02:45,228 --> 00:02:49,690
But these y's, they're not going to be
binary, you know, minus one or plus one.

46
00:02:49,690 --> 00:02:52,747
They're going to have,
continuous values, and

47
00:02:52,747 --> 00:02:58,110
what you then do is you use that vector
in order to solve for, the partitioning.

48
00:02:58,110 --> 00:03:00,905
And this is related to,
spectral partitioning, for

49
00:03:00,905 --> 00:03:04,897
those of you who are familiar with those
algorithms, and it's just a, an ei,

50
00:03:04,897 --> 00:03:08,606
an eigenvalue way of approximating
the solution to this partitioning,

51
00:03:08,606 --> 00:03:12,280
because the full solution would
computationally too difficult.
