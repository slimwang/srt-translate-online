1
00:00:00,640 --> 00:00:03,170
So here's the answer. What we have to do is

2
00:00:03,170 --> 00:00:06,540
find these two double quotes. So we know that we

3
00:00:06,540 --> 00:00:09,070
want to start looking from start_link, we can't start from the

4
00:00:09,070 --> 00:00:12,710
beginning of page. So we want to use find on page, passing

5
00:00:12,710 --> 00:00:15,590
in the double quote, which is what we're looking for,

6
00:00:15,590 --> 00:00:18,730
starting from the start_link position. So here's how we need to

7
00:00:18,730 --> 00:00:22,710
do that, we're going to initialize the variable, start_quote, which is

8
00:00:22,710 --> 00:00:25,670
where that double quote that starts the url is. And what

9
00:00:25,670 --> 00:00:29,940
we want to do is use page.find, to find in page.

10
00:00:29,940 --> 00:00:32,560
The string that we want to find is that double quote. To

11
00:00:32,560 --> 00:00:34,260
make a double quote as a string, we need to use

12
00:00:34,260 --> 00:00:36,790
a single quote, followed by a double quote, followed by a single

13
00:00:36,790 --> 00:00:41,180
quote. We also need to pass in a second parameter. We

14
00:00:41,180 --> 00:00:43,990
don't want to find the first double quote in the page, because

15
00:00:43,990 --> 00:00:46,390
that might not be part of a link tag. So we

16
00:00:46,390 --> 00:00:50,850
also need to pass in the variable start_link. So that makes find

17
00:00:50,850 --> 00:00:53,190
start from the position of start_link look for the

18
00:00:53,190 --> 00:00:56,660
double quote, and it will return the location where that

19
00:00:56,660 --> 00:00:59,750
start quote appears. We also need to find the

20
00:00:59,750 --> 00:01:03,210
end quote. We'll call that end_quote. To find the end_quote

21
00:01:03,210 --> 00:01:04,870
we don't want to start from the start_link. If we

22
00:01:04,870 --> 00:01:08,620
started looking from the start_link we'd find the start_quote again.

23
00:01:08,620 --> 00:01:10,510
To find the end_quote we need to look starting

24
00:01:10,510 --> 00:01:13,970
from after the start_quote. So we're going to use page.find again.

25
00:01:15,620 --> 00:01:18,460
Again looking for a double quote, so passing in

26
00:01:18,460 --> 00:01:21,490
the double quote as the string we're searching for. We

27
00:01:21,490 --> 00:01:25,810
need to start from the position of start_quote. We

28
00:01:25,810 --> 00:01:28,300
can't start from just the position of start_quote. If we

29
00:01:28,300 --> 00:01:32,380
started from start_quote, we'd find just the start_quote itself.

30
00:01:32,380 --> 00:01:34,600
We knew to start one after that position, so we

31
00:01:34,600 --> 00:01:38,010
need to add 1 to start_quote. And if we start

32
00:01:38,010 --> 00:01:40,860
looking from there, we'll find the first quote after that.

33
00:01:40,860 --> 00:01:44,020
That's the quote that ends the string. So the final

34
00:01:44,020 --> 00:01:46,500
thing we want to do, is set the variable url.

35
00:01:47,510 --> 00:01:51,480
So we'll initialize url, to the string that we find

36
00:01:51,480 --> 00:01:54,190
between the start quote and the end quote. And so

37
00:01:54,190 --> 00:01:57,700
we can do that using the string selection. We're selecting

38
00:01:57,700 --> 00:02:00,830
from the string page. We have to think carefully about

39
00:02:00,830 --> 00:02:02,495
where we start. We don't want to start with a

40
00:02:02,495 --> 00:02:07,030
start_quote because that would include the double quote in the url.

41
00:02:07,030 --> 00:02:08,660
We just want the url not including the

42
00:02:08,660 --> 00:02:10,436
double quote, so we're going to start with the

43
00:02:10,436 --> 00:02:13,390
start_quote plus 1. And we're going to go from

44
00:02:13,390 --> 00:02:17,010
there until the end_quote. We don't want to include the

45
00:02:17,010 --> 00:02:19,390
closing double-quote. We don't include that one in the

46
00:02:19,390 --> 00:02:20,870
string. So we don't need to subtract 1 from

47
00:02:20,870 --> 00:02:23,620
the end_quote. And that will get us the url,

48
00:02:23,620 --> 00:02:26,460
extracted from the first link on the web page.
