1
00:00:00,300 --> 00:00:02,840
Let's look at the answer
to this question.

2
00:00:02,840 --> 00:00:06,590
So first, given that we have
a shortest job first algorithm and

3
00:00:06,590 --> 00:00:09,600
these are the execution
times of the tasks,

4
00:00:09,600 --> 00:00:13,340
what is going to be the execution
order of these tasks?

5
00:00:13,340 --> 00:00:15,400
Clearly they'll have to
execute in this order.

6
00:00:15,400 --> 00:00:20,730
So T1, followed by T3 or the other
way around, and then followed by T2.

7
00:00:20,730 --> 00:00:22,720
Now that we know the order of the tasks,

8
00:00:22,720 --> 00:00:25,670
we can actually compute
these three metrics.

9
00:00:25,670 --> 00:00:29,610
To compute the throughput,
again we have three tasks in the system,

10
00:00:29,610 --> 00:00:33,090
all of the three tasks get
processed in 12 seconds.

11
00:00:33,090 --> 00:00:34,860
So 1 plus 10 plus 1.

12
00:00:34,860 --> 00:00:38,240
So we have a total throughput
of 0.25 tasks per second.

13
00:00:39,270 --> 00:00:41,830
So nothing has really changed
compared to the first come,

14
00:00:41,830 --> 00:00:43,800
first serve algorithm here.

15
00:00:43,800 --> 00:00:47,336
Now if we look at the average
completion time, the first task T1,

16
00:00:47,336 --> 00:00:49,460
completes in 1 second.

17
00:00:49,460 --> 00:00:56,250
The second task T3, that one completes
in another 1 second so in 2 seconds.

18
00:00:56,250 --> 00:01:01,130
And then the third task, T2, well that
one will need another 10 seconds, so

19
00:01:01,130 --> 00:01:03,470
it will complete at time T12.

20
00:01:03,470 --> 00:01:08,590
So the average completion time
is 1 plus 2 plus 12 over 3.

21
00:01:08,590 --> 00:01:09,780
That's five seconds.

22
00:01:09,780 --> 00:01:12,670
That's already way better than
the eight seconds that we

23
00:01:12,670 --> 00:01:15,570
saw in the first come
first serve algorithm.

24
00:01:15,570 --> 00:01:19,000
If we look at the average wait time,
the first task, T1,

25
00:01:19,000 --> 00:01:23,050
it then waited,
always started executing immediately.

26
00:01:23,050 --> 00:01:27,770
T3 had to wait one second,
T2 had to only wait two seconds,

27
00:01:27,770 --> 00:01:30,490
since both T1 and T3 are short.

28
00:01:30,490 --> 00:01:34,620
So, the average wait time in
this system is only one second.

29
00:01:34,620 --> 00:01:39,375
That is way better than the four seconds
that first come first serve resulted in.

30
00:01:39,375 --> 00:01:41,890
So if we care about
metrics such as these.

31
00:01:41,890 --> 00:01:45,500
Clearly shortest job first would
be a better algorithm than first

32
00:01:45,500 --> 00:01:46,160
come, first served.
