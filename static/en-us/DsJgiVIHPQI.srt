1
00:00:00,110 --> 00:00:03,930
Another thing about RPC is that the
client and the server don't need to be

2
00:00:03,930 --> 00:00:06,590
developed together as part
of the same application.

3
00:00:06,590 --> 00:00:09,980
They may be completely independent
processes written by different

4
00:00:09,980 --> 00:00:13,650
developers, written even in completely
different programming languages.

5
00:00:13,650 --> 00:00:17,430
But for this to work there must
be some type of agreement so

6
00:00:17,430 --> 00:00:21,990
that the server can explicitly see what
are the procedures that it knows how to

7
00:00:21,990 --> 00:00:26,610
execute and what are the arguments that
are required for those procedures.

8
00:00:26,610 --> 00:00:30,520
The reason this information is needed
is so that, on the client side,

9
00:00:30,520 --> 00:00:35,690
the client can perform decisions, which
particular server it should bind with.

10
00:00:35,690 --> 00:00:39,790
Standardizing how this information
is represented is also important so

11
00:00:39,790 --> 00:00:44,140
that the RPC run time can
incorporate certain tools that will

12
00:00:44,140 --> 00:00:48,050
automate the process of generating
the stub functionality.

13
00:00:48,050 --> 00:00:50,950
To address these needs RPC systems rely

14
00:00:50,950 --> 00:00:54,790
on use of interface definition
languages, or IDLs.

15
00:00:54,790 --> 00:00:59,310
The IDLs serve as a protocol of how
this agreement will be expressed.
