1
00:00:00,190 --> 00:00:04,272
The key to solving problems like
this is to figure out how does

2
00:00:04,272 --> 00:00:08,125
the address breakdown into offset,
index and tag this.

3
00:00:08,125 --> 00:00:13,153
Conflicts will occur, where different
blocks have the same index bits.

4
00:00:13,153 --> 00:00:17,541
In this particular cash,
256 byte block size.

5
00:00:17,541 --> 00:00:22,359
Means that there are 8
bits to the block of set.

6
00:00:22,359 --> 00:00:23,860
In hex, conveniently,

7
00:00:23,860 --> 00:00:27,860
that means that the least significant
two digits are the offset and

8
00:00:27,860 --> 00:00:32,014
we can safely ignore those,
because they are not apart of the index.

9
00:00:32,014 --> 00:00:35,067
Now we need to figure out how
many bits are in the index.

10
00:00:35,067 --> 00:00:39,084
We have 16 kilobytes and
256 byte blocks.

11
00:00:39,084 --> 00:00:43,791
The number of blocks in the cache
is this divided by this and

12
00:00:43,791 --> 00:00:46,009
that gives us 64 blocks.

13
00:00:46,009 --> 00:00:48,586
64 is 2 to the 6th.

14
00:00:48,586 --> 00:00:52,824
So we need the next 6 bits here
to tell us what the index is.

15
00:00:52,824 --> 00:00:56,538
The 6 bits will be contained
in the next 2 hex digits.

16
00:00:56,538 --> 00:01:01,852
So for 56 hex, we can write
it out as binary, this is 5,

17
00:01:01,852 --> 00:01:07,150
this is 6 and
we are interested in these bits here.

18
00:01:07,150 --> 00:01:11,332
So we're really looking for, which
blocks of these have the same bits here.

19
00:01:11,332 --> 00:01:15,628
Those that have 56, definitely
we'll have the same index bits.

20
00:01:15,628 --> 00:01:19,564
So we will definitely have
a conflict here and here possibly.

21
00:01:19,564 --> 00:01:21,928
But in order to actually
have a conflict,

22
00:01:21,928 --> 00:01:23,825
it needs to be a different block.

23
00:01:23,825 --> 00:01:26,975
This address here does not
conflict with this one here,

24
00:01:26,975 --> 00:01:29,464
because they're actually the same block.

25
00:01:29,464 --> 00:01:31,275
They have the same block number.

26
00:01:31,275 --> 00:01:32,703
So this is not a conflict.

27
00:01:32,703 --> 00:01:35,214
They don't have the same
place in the cache, but

28
00:01:35,214 --> 00:01:39,025
they're actually the same block, so
it's not a conflict among blocks.

29
00:01:39,025 --> 00:01:43,952
This, however is a different block
number that definitely maps to the same

30
00:01:43,952 --> 00:01:45,995
index, so this is a conflict.

31
00:01:45,995 --> 00:01:51,798
55 looks like this, these are the 6
bits, they're not the same.

32
00:01:51,798 --> 00:01:57,384
So this block will not
conflict with the one here.

33
00:01:57,384 --> 00:02:01,343
Finally, 16 looks like this.

34
00:02:01,343 --> 00:02:04,306
These are the bits that we're
interested in and they do,

35
00:02:04,306 --> 00:02:06,232
indeed match the ones of this block.

36
00:02:06,232 --> 00:02:10,508
So this goes to the same place
in the cache as this and

37
00:02:10,508 --> 00:02:17,480
it's a different block, because
this is 123416 and this is 123456.

38
00:02:17,480 --> 00:02:20,850
So this will also
conflict with our block.
