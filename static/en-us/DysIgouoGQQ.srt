1
00:00:00,000 --> 00:00:02,756
So let's take a look specifically at the problem of

2
00:00:02,756 --> 00:00:05,842
3-colorability. Can a given graph G

3
00:00:05,842 --> 00:00:07,740
be colored with three colors.

4
00:00:07,740 --> 00:00:10,606
So is this question in NP? Yes

5
00:00:10,606 --> 00:00:12,157
How do we know that it's in NP?

6
00:00:12,157 --> 00:00:13,991
Well we need to say two things:

7
00:00:13,991 --> 00:00:16,073
We have to say that it has a short accepting certificate

8
00:00:16,073 --> 00:00:19,225
and that it has a fast verification algorithm.

9
00:00:19,225 --> 00:00:22,475
So the accepting certificate in this case

10
00:00:22,475 --> 00:00:25,157
would be the actual coloring, the mapping of nodes

11
00:00:25,157 --> 00:00:26,356
to the colors.

12
00:00:26,356 --> 00:00:31,990
In this case, 0,1, and 2 or 1,2, and 3

13
00:00:31,990 --> 00:00:35,308
How about the verification algorithm?

14
00:00:35,308 --> 00:00:37,573
Well let's actually code that up in Python.

15
00:00:37,573 --> 00:00:39,623
Alright, here's the skeleton of a program for

16
00:00:39,623 --> 00:00:42,690
doing the coloring verification.

17
00:00:42,690 --> 00:00:45,990
We're going to call an algorithm 'verify',

18
00:00:45,990 --> 00:00:48,124
which is like the A that we had before.

19
00:00:48,124 --> 00:00:51,256
We give it a graph, and a certificate,

20
00:00:51,256 --> 00:00:53,757
which in this case is a mapping from nodes to colors,

21
00:00:53,757 --> 00:00:56,074
and then the total number of colors K.

22
00:00:56,074 --> 00:01:01,524
Here's an example of just building up one of these certificates

23
00:01:01,524 --> 00:01:06,458
We've got nodes A-H, there's the connections

24
00:01:06,458 --> 00:01:07,925
between all the different nodes,

25
00:01:07,925 --> 00:01:10,807
we build a graph out of that, and then we build

26
00:01:10,807 --> 00:01:16,241
a coloring by looking at a list that has nodes and different colors

27
00:01:16,241 --> 00:01:19,473
0 through K-1. And for each one it just sticks

28
00:01:19,473 --> 00:01:24,907
the color name into the corresponding node's id,

29
00:01:24,907 --> 00:01:28,090
and then calls verify. And I do this twice

30
00:01:28,090 --> 00:01:31,289
one with a coloring that's valid,

31
00:01:31,289 --> 00:01:32,872
and one with a coloring that's invalid.

32
00:01:32,872 --> 00:01:36,740
So write this verification algorithm

33
00:01:36,740 --> 99:59:59,999
and we'll test it for you to see if it works.
