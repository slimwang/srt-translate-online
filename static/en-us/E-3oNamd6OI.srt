1
00:00:00,760 --> 00:00:04,630
A key determinant of a successful review is how thoroughly

2
00:00:04,630 --> 00:00:09,030
the participants examine the artifact. There are variety of means that have been

3
00:00:09,030 --> 00:00:14,500
devised to encourage this thoroughness. Line by line coverage of, of the code or

4
00:00:14,500 --> 00:00:19,910
the documents involved. similarly, if, if it's a, a diagram is being,

5
00:00:19,910 --> 00:00:23,530
reviewed or going through systematically on the visual elements of a diagram.

6
00:00:24,540 --> 00:00:27,790
If we're talking about the early stages, the requirements document,

7
00:00:27,790 --> 00:00:32,020
it may be the use cases, and making sure all the use cases are going through.

8
00:00:32,020 --> 00:00:37,360
Another technique for ensuring or promoting thoroughness comes at things from

9
00:00:37,360 --> 00:00:41,810
a little bit different point of view. And this is a check list based reviews.

10
00:00:41,810 --> 00:00:47,210
The checklist is based on common def, types of defects, either derived from

11
00:00:47,210 --> 00:00:52,610
common industrial practices, or company specific empirical data. So for example,

12
00:00:52,610 --> 00:00:58,930
if it's a code review there and the company has a history of problems with

13
00:01:00,320 --> 00:01:07,370
correctly interfacing with libraries then it might be that you add a check list

14
00:01:07,370 --> 00:01:11,770
for making sure that library interfaces are looked at a little bit more deeply.

15
00:01:11,770 --> 00:01:16,190
And one, one other one is coverage of verification conditions.

16
00:01:16,190 --> 00:01:21,550
This is kind of a specialized, checklist. Verification conditions

17
00:01:21,550 --> 00:01:26,740
were invented as part of a clean room software engineering methodology by IBM.

18
00:01:26,740 --> 00:01:31,050
A verification condition is a rule that obtains in a particular situation. For

19
00:01:31,050 --> 00:01:34,010
example, when a loop is encountered during a code review,

20
00:01:34,010 --> 00:01:37,450
a specific verification condition is to examine whether the loop is

21
00:01:37,450 --> 00:01:39,870
guaranteed to terminate under all circumstances.
