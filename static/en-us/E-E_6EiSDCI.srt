1
00:00:00,160 --> 00:00:05,957
The correct answer is blah equals the

2
00:00:05,957 --> 00:00:11,941
list "one, 2 and now "th\" r\"

3
00:00:11,941 --> 00:00:18,370
ee"]}. The main distinction between a Python object and a JSON representation of

4
00:00:18,370 --> 00:00:21,590
a very similar object is that JSON has to use double quotes to

5
00:00:21,590 --> 00:00:25,690
delineate a string. It can't use single quotes like Python does. So, you must

6
00:00:25,690 --> 00:00:29,280
escape any internal double quotes. Alright, so this is basic JSON.

7
00:00:29,280 --> 00:00:33,310
And as we've seen it maps very nicely to Python data structures,

8
00:00:33,310 --> 00:00:35,941
assuming you're using integers and floats and strings. If you want

9
00:00:35,941 --> 00:00:38,868
to map a more complicated Python structure 2 JSON, let's say you're

10
00:00:38,868 --> 00:00:41,140
doing an object or maybe a date time or some other

11
00:00:41,140 --> 00:00:43,940
things, the JSON dumps function isn't going to work for you. You're

12
00:00:43,940 --> 00:00:46,930
going to have to actually convert those by hand to a simple

13
00:00:46,930 --> 00:00:51,160
data structure made up of dictionaries, and lists, and integers, and strings

14
00:00:51,160 --> 00:00:52,560
so that we can output it properly.
