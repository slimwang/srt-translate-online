1
00:00:00,320 --> 00:00:03,765
If you remember how to count the digits of a number you'll remember that you'll

2
00:00:03,765 --> 00:00:08,799
need a temp so that we can count down the digits without messing up number. Now

3
00:00:08,799 --> 00:00:13,398
we're going to repeatedly divide temp by ten to count the, now we're going to

4
00:00:13,398 --> 00:00:17,997
repeatedly divide temp by ten to iterate through the digits from the last to

5
00:00:17,997 --> 00:00:25,070
the first. So the way that we'll iterate through each digit in the number is to

6
00:00:25,070 --> 00:00:28,910
first use mod to get the last digit and then divide by 10 so that we discard

7
00:00:28,910 --> 00:00:36,492
the last digit. Then when we use mod 10 again, we'll get the next last digit.

8
00:00:36,492 --> 00:00:43,560
So the first digit will be temp mod 10 and then we divide temp by 10 to discard

9
00:00:43,560 --> 00:00:51,402
the last digit. Now in here we want to be counting all of the digits that match

10
00:00:51,402 --> 00:01:03,520
digit to match. So we'll need a counter. That starts out at 0. And then every

11
00:01:03,520 --> 00:01:06,400
time we find a digit that matches digit to match the increment, the counter, I

12
00:01:06,400 --> 00:01:10,810
think I might have some type errors in here, because I'm mixing int and long.

13
00:01:10,810 --> 00:01:14,903
But let's see. Alright. I know that when I mod something by 10, the biggest

14
00:01:14,903 --> 00:01:20,546
number I'll get is nine. So I know that's it's safe to actually cast this after

15
00:01:20,546 --> 00:01:27,278
I take the mod and I will actually need to return the count. I wrote tester

16
00:01:27,278 --> 00:01:30,956
here to make sure my program works right. In this number I expect there to be

17
00:01:30,956 --> 00:01:35,882
four 9's, one 3's, and no fives. Since I fix all my syntax errors, I'll run my

18
00:01:35,882 --> 00:01:38,559
number tester, it looks good.
