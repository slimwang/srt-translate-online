1
00:00:00,290 --> 00:00:02,810
Have you ever noticed how sending
off these update requests

2
00:00:02,810 --> 00:00:06,820
feels a little like you're sending
messages off to the Firebase void,

3
00:00:06,820 --> 00:00:10,260
unsure whether they're complete or
are received?

4
00:00:10,260 --> 00:00:11,260
>> There.
>> Hello, are you there?

5
00:00:14,160 --> 00:00:14,990
Lila, are you there?

6
00:00:16,570 --> 00:00:17,960
Okay, well,
at least you're still connected.

7
00:00:19,010 --> 00:00:21,270
Let's talk about completion callbacks.

8
00:00:21,270 --> 00:00:25,580
One aspect of writing data we haven't
discussed is the completion callback.

9
00:00:25,580 --> 00:00:28,260
Completion callbacks are useful
if you want to explicitly

10
00:00:28,260 --> 00:00:31,450
return the status of
a completed write operation.

11
00:00:31,450 --> 00:00:35,280
For example, if you use a completion
callback when a write is successful or

12
00:00:35,280 --> 00:00:39,410
fails, an object will be returned
describing the success, or

13
00:00:39,410 --> 00:00:42,240
in the event of an error,
failure of that write.

14
00:00:42,240 --> 00:00:45,920
For example, if you use a completion
callback when a write is successful or

15
00:00:45,920 --> 00:00:51,100
fails, an object will be returned
describing the success or

16
00:00:51,100 --> 00:00:53,930
in the event of an error
failure of that right.

17
00:00:53,930 --> 00:00:57,540
We aren't using completion
callbacks in ShoppingList ++.

18
00:00:57,540 --> 00:01:00,780
However there are a few situations
where using completion callbacks

19
00:01:00,780 --> 00:01:02,070
would be useful.

20
00:01:02,070 --> 00:01:06,310
A basic use would be to provide detailed
debugging information in the dev and

21
00:01:06,310 --> 00:01:07,710
test phase.

22
00:01:07,710 --> 00:01:12,140
For example, to provide an explicit way
to verify that data is being saved.

23
00:01:12,140 --> 00:01:15,860
Another use would be to use a completion
callback to fire when a value is

24
00:01:15,860 --> 00:01:18,460
returned that is outside of a threshold.

25
00:01:18,460 --> 00:01:19,220
As a comparison,

26
00:01:19,220 --> 00:01:23,550
have you ever seen the all changes
save to drive message in Google Docs?

27
00:01:23,550 --> 00:01:26,640
It doesn't hurt to provide users with
a little assurance that their data has

28
00:01:26,640 --> 00:01:28,280
been saved to the cloud.

29
00:01:28,280 --> 00:01:32,130
Similarly, sometimes chat programs will
tell you when the message has been sent

30
00:01:32,130 --> 00:01:32,860
to the other user.
