1
00:00:00,580 --> 00:00:03,610
Now that we have a deeper understanding
of the relationship between maximum

2
00:00:03,610 --> 00:00:06,050
matching and max flow problems,

3
00:00:06,050 --> 00:00:08,260
we're ready to understand
a more sophisticated algorithm.

4
00:00:09,310 --> 00:00:10,810
Back in the maximum flow lecture,

5
00:00:10,810 --> 00:00:14,990
we considered two ways to improve
over the naive Ford-Fulkerson.

6
00:00:14,990 --> 00:00:17,720
One was to prefer heavier
augmenting paths.

7
00:00:17,720 --> 00:00:20,229
Ones that pushed more flow
from the source to the sync.

8
00:00:21,340 --> 00:00:24,330
In the max matching context,
this doesn't make much sense,

9
00:00:24,330 --> 00:00:26,860
because all augmenting
pats have the same effect.

10
00:00:26,860 --> 00:00:28,180
They increase the matching by one.

11
00:00:29,610 --> 00:00:33,810
The other idea was to prefer the
shortest augmenting path, and there was

12
00:00:33,810 --> 00:00:38,200
Dinic's further insight that the breadth
first search need only be done when

13
00:00:38,200 --> 00:00:42,770
the shortest path length changes,
not once for every augmentation.

14
00:00:42,770 --> 00:00:45,640
Pursuing these ideas gives us
the Hopcroft-Karp algorithm.
