1
00:00:00,650 --> 00:00:05,860
Java code has a special way of saying things like me or my. It's this. We have

2
00:00:05,860 --> 00:00:10,590
this reference. The this reference can be used to distinguish between instance

3
00:00:10,590 --> 00:00:15,495
variables and parameters. Or local variables, which only belong inside the

4
00:00:15,495 --> 00:00:20,980
method. This, no pun intended, solves a problem that we had earlier. Remember

5
00:00:20,980 --> 00:00:25,065
in the constructor for the person, we had to give the parameter this odd name,

6
00:00:25,065 --> 00:00:30,170
aName. If instead of using aName, we had just used name, then this code would

7
00:00:30,170 --> 00:00:35,340
look like this, which won't work. If we name the parameter the same as the

8
00:00:35,340 --> 00:00:40,340
instance variable, then this one just assigns the parameter. The value it

9
00:00:40,340 --> 00:00:44,860
already has, nothing changes. But you can access the instance variable using

10
00:00:44,860 --> 00:00:51,410
this. If you write this.name equals name, then you'll assign the value of name,

11
00:00:51,410 --> 00:00:58,390
the parameter variable, into the instance variable. In Java, local variables

12
00:00:58,390 --> 00:01:02,890
and parameter variables are considered first when looking up variable names. We

13
00:01:02,890 --> 00:01:08,000
say that a local variable shadows an instance variable. The instance variable

14
00:01:08,000 --> 00:01:12,060
is hidden in the shadow of the local variable. And to find the instance

15
00:01:12,060 --> 00:01:17,720
variable again, you need to use this. This dot name equals name means set the

16
00:01:17,720 --> 00:01:20,860
instance variable name to the value of the parameter name.
