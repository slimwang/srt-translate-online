1
00:00:00,330 --> 00:00:04,689
So now we will go through several
types of multiprocessors.

2
00:00:04,689 --> 00:00:09,110
The first type of multiprocessor
uses what is called a centralized

3
00:00:09,110 --> 00:00:10,440
shared memory.

4
00:00:10,440 --> 00:00:15,600
So all the cores, let's say we have 4
of them, might have their own caches,

5
00:00:15,600 --> 00:00:19,570
but then they're all
connected to the same bus, so

6
00:00:19,570 --> 00:00:24,910
they can all access the same main
memory and input output devices.

7
00:00:24,910 --> 00:00:30,420
These cores can share data by simply
reading and writing the main memory,

8
00:00:30,420 --> 00:00:34,380
assuming of course that these reads and
writes go through the caches properly,

9
00:00:34,380 --> 00:00:37,170
and we will see that we can
achieve that, so pretty much,

10
00:00:37,170 --> 00:00:42,450
this core can send data to this core
by writing to some memory location,

11
00:00:42,450 --> 00:00:45,180
and then this core reads it from there.

12
00:00:45,180 --> 00:00:50,790
Similarly, any of the cores can
access any of the other devices here.

13
00:00:50,790 --> 00:00:54,750
This type of a system is
really what today's multi-core

14
00:00:54,750 --> 00:00:59,590
processors tend to look like,
and it's also called UMA,

15
00:00:59,590 --> 00:01:03,870
which stands for
uniform memory access time.

16
00:01:03,870 --> 00:01:06,500
But it's not UMAT, it's just UMA.

17
00:01:06,500 --> 00:01:11,250
But what is uniform is really
the time to access the memory.

18
00:01:11,250 --> 00:01:13,030
Why?
Well, because this main memory

19
00:01:14,440 --> 00:01:18,970
is at the same long distance
from all of the cores.

20
00:01:18,970 --> 00:01:21,420
Yes, it can be slightly
closer to some of them.

21
00:01:21,420 --> 00:01:23,900
But because they are all
connected to it in the same way,

22
00:01:24,920 --> 00:01:29,640
the memory really is about as bad
to access as any one of them.

23
00:01:29,640 --> 00:01:33,900
This time of multiprocessing
is also called SMP,

24
00:01:33,900 --> 00:01:37,649
which stands for
Symmetric Multiprocessor.

25
00:01:38,760 --> 00:01:41,870
It's called symmetric
because any core and

26
00:01:41,870 --> 00:01:46,840
its cache look just like any other
core and its cache in the system.

27
00:01:46,840 --> 00:01:51,790
So if we have two cores, we can just
take one of them with its caches and

28
00:01:51,790 --> 00:01:54,340
replicate to make a four-core system.
