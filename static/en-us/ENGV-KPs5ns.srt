1
00:00:00,320 --> 00:00:03,839
As Dan demonstrated, building something
that looks great in the visual layout

2
00:00:03,839 --> 00:00:05,519
editor is the easy part.

3
00:00:05,519 --> 00:00:08,990
You also need to consider different
screens and orientations.

4
00:00:08,990 --> 00:00:13,051
As you begin to layout your UI, there's
a temptation to build it pixel perfect

5
00:00:13,051 --> 00:00:15,027
for the device you happen to be using.

6
00:00:15,026 --> 00:00:19,001
This is re-enforced by the fact that you
Apps window doesn't generally change

7
00:00:19,001 --> 00:00:20,820
size while it's running.

8
00:00:20,820 --> 00:00:23,410
So you can't just grab the lower
right corner and grow and

9
00:00:23,410 --> 00:00:26,000
shrink your app to see how it behaves.

10
00:00:26,000 --> 00:00:27,760
But if you've ever developed for
the web or

11
00:00:27,760 --> 00:00:31,720
a desktop, you know that
the static approach is a bad idea.

12
00:00:31,719 --> 00:00:33,920
When Android first launched HVGA,

13
00:00:33,920 --> 00:00:38,630
which are 480 by 320 pixel
resolution screens, were standard.

14
00:00:38,630 --> 00:00:42,350
As we began exploring how to build
engaging user experiences on them we

15
00:00:42,350 --> 00:00:47,189
could use absolute layouts to define the
exact location of each screen element.

16
00:00:47,189 --> 00:00:51,382
But within a year the first WVGA android
phones were released with a different

17
00:00:51,383 --> 00:00:52,169
pixel width.

18
00:00:52,168 --> 00:00:56,754
And now android runs on everything from
phones to tables, TV's and wearables

19
00:00:56,755 --> 00:01:01,230
with any screen size resolution and
aspect ratio you can imagine.

20
00:01:01,229 --> 00:01:04,938
So just like on desktop or web,
where you might use panels or CSS,

21
00:01:04,938 --> 00:01:09,064
your Android UI needs to scale based
on the screen it's running within.

22
00:01:09,064 --> 00:01:12,673
And this is why absolute layout was
deprecated in favor of layouts like

23
00:01:12,674 --> 00:01:16,895
linear layout, constraint layout, and
grid layout that can dynamically resize

24
00:01:16,894 --> 00:01:20,649
and adapt to any screen following
the principles of responsive design.

