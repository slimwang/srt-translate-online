1
00:00:00,000 --> 00:00:04,000
In the previous unit, we have introduced the notion of NP-completeness.

2
00:00:04,000 --> 00:00:07,750
We have seen that many practically relevant problems fall into this category,

3
00:00:07,750 --> 00:00:12,330
such as vertex cover, clique, independent set, and of course the SAT problem

4
00:00:12,330 --> 00:00:14,400
that we got to know in the last unit.

5
00:00:14,400 --> 00:00:18,810
Now, since the famous P versus NP problem is unsolved,

6
00:00:18,810 --> 00:00:22,070
there is no algorithm for any of these problems that is guaranteed

7
00:00:22,070 --> 00:00:24,030
to run in polynomial time.

8
00:00:24,030 --> 00:00:26,830
Now, in the first unit, we met three computer scientists

9
00:00:26,830 --> 00:00:29,460
who were working on these problems,

10
00:00:29,460 --> 00:00:31,980
and they did not know that their problems were NP-complete.

11
00:00:31,980 --> 00:00:35,960
So, in this unit, what I would like to teach you is how you can detect

12
00:00:35,960 --> 00:00:38,260
that a problem is NP-complete.

13
00:00:38,260 --> 00:00:41,650
Then in the following units, we'll be dealing with counter measures.

14
00:00:41,650 --> 99:59:59,999
Once you have found out that your problem is NP-complete what can you do about it?
