1
00:00:00,150 --> 00:00:02,740
So now that we know what locality is,

2
00:00:02,740 --> 00:00:06,180
let's see how do we use it
to improve data accesses.

3
00:00:06,180 --> 00:00:08,570
First, we will look at an example

4
00:00:08,570 --> 00:00:11,540
that considers borrowing
books from the library.

5
00:00:11,540 --> 00:00:17,365
In this example, the library represents
a data repository that is large.

6
00:00:17,365 --> 00:00:19,060
So a lot of data there.

7
00:00:19,060 --> 00:00:21,230
But, it is very slow to access.

8
00:00:21,230 --> 00:00:22,850
We need to go there,

9
00:00:22,850 --> 00:00:27,780
find the book in the building, check
it out, bring it back home, and so on.

10
00:00:27,780 --> 00:00:30,400
When we're borrowing
books from the library,

11
00:00:30,400 --> 00:00:32,830
typically there is a lot
of temporal locality to it.

12
00:00:32,830 --> 00:00:36,810
For example, if we are a student, we
might need to look up the definition of

13
00:00:36,810 --> 00:00:40,260
locality very often,
while we're studying.

14
00:00:40,260 --> 00:00:44,100
And usually also, there is a lot of
spatial locality to using books.

15
00:00:44,100 --> 00:00:48,220
For example, if we look up some
computer architecture definition once,

16
00:00:48,220 --> 00:00:52,080
we are likely to be looking up other
computer architecture stuff too,

17
00:00:52,080 --> 00:00:53,390
in the near future.

18
00:00:53,390 --> 00:00:57,040
So continuing our library based
locality and data access example,

19
00:00:57,040 --> 00:01:01,070
we have seen that the library's large
but very slow to access and that

20
00:01:01,070 --> 00:01:04,900
accesses to information in the library
have temporal and spatial locality.

21
00:01:06,020 --> 00:01:10,190
So when a student needs a piece
of information from the library,

22
00:01:10,190 --> 00:01:12,010
what should he do?

23
00:01:12,010 --> 00:01:16,340
Should he go to the library,
find the information, read it and

24
00:01:16,340 --> 00:01:17,970
then just go back home?

25
00:01:17,970 --> 00:01:20,590
Should he borrow the book,
take it home so

26
00:01:20,590 --> 00:01:24,250
that future accesses to the information
in the book are much faster?

27
00:01:24,250 --> 00:01:28,170
Or should he take all the books and
then build a library at home?

28
00:01:28,170 --> 00:01:30,280
Let's consider each of
these three options.

29
00:01:30,280 --> 00:01:32,640
If we go to the library every
time we need something,

30
00:01:32,640 --> 00:01:34,380
we're wasting a lot of time.

31
00:01:34,380 --> 00:01:38,160
Finding the books, and then looking
up only one piece of information, and

32
00:01:38,160 --> 00:01:41,060
then returning the book because we
know that there is both temporal and

33
00:01:41,060 --> 00:01:44,740
spatial locality, which means we will
be probably reading the same book, and

34
00:01:44,740 --> 00:01:47,600
nearby books, very often.

35
00:01:47,600 --> 00:01:51,820
So, the problem with this approach is
that it does not benefit from locality,

36
00:01:51,820 --> 00:01:56,126
and this is why typically, people do not
use it when they need to study a topic,

37
00:01:56,126 --> 00:01:59,410
and use library resources.

38
00:01:59,410 --> 00:02:02,470
If we go the library and
borrow the book, we bring it home, and

39
00:02:02,470 --> 00:02:07,210
now we have the book on the topic that
we're currently working on close to us.

40
00:02:07,210 --> 00:02:12,680
So this is an approach that does exploit
temporal and spatial locality and

41
00:02:12,680 --> 00:02:16,000
eliminates the problem of the library
being large and slow because we have

42
00:02:16,000 --> 00:02:19,820
very few books borrowed at home so we
can quickly find what we need in them.

43
00:02:19,820 --> 00:02:24,380
This is why most people
will use this option.

44
00:02:24,380 --> 00:02:28,772
The approach of taking all the books and
building a library at home is very

45
00:02:28,772 --> 00:02:32,470
expensive and
also provides very little benefit.

46
00:02:32,470 --> 00:02:36,720
Yes, it saves us the trip to the library
and back, but it doesn't save us

47
00:02:36,720 --> 00:02:41,370
the time of searching among many books,
finding them on the shelves, and so on.

48
00:02:41,370 --> 00:02:46,550
So really, we'd rather have relatively
few books that we're currently

49
00:02:46,550 --> 00:02:52,490
interested in, than have many book and
have to look them up very slowly.

50
00:02:52,490 --> 00:02:56,880
So just like people when faced with
these choices about the library

51
00:02:56,880 --> 00:03:00,300
usually choose the second option
because it's a good trade off

52
00:03:00,300 --> 00:03:04,580
between being able to find information
quickly and not being overwhelmed with

53
00:03:04,580 --> 00:03:08,200
a quantity of information that we have
brought in, when we have a processor

54
00:03:08,200 --> 00:03:12,050
that needs to access main memory
we will use the same approach.

55
00:03:12,050 --> 00:03:16,810
Instead of going to memory for
every single memory location,

56
00:03:16,810 --> 00:03:20,750
we will bring the content of memory
locations that we are interested in

57
00:03:20,750 --> 00:03:25,290
closer to us, but we will try
not to bring too much close to

58
00:03:25,290 --> 00:03:28,690
us because that will result in
a very slow structure close to us.

59
00:03:28,690 --> 00:03:30,650
So, we will, again, have slow accesses.

60
00:03:30,650 --> 00:03:34,540
So what you want is something small that
keeps only the information we are really

61
00:03:34,540 --> 00:03:40,120
interested in, and that small repository
of information is called a cache,

62
00:03:40,120 --> 00:03:41,820
when we're talking
about memory accesses.
