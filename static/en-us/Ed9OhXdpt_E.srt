1
00:00:00,012 --> 00:00:04,220
The [INAUDIBLE] algorithm has
the so-called five style structure.

2
00:00:04,220 --> 00:00:08,786
That is, encryption and
decryption differ only in key schedule.

3
00:00:08,786 --> 00:00:14,030
That is in decryption,
we apply the same operations

4
00:00:14,030 --> 00:00:19,040
as in encryption, but
only with the key sequence in reverse.

5
00:00:19,040 --> 00:00:25,140
That is, round one of decryption uses
the key of the last round of encryption.

6
00:00:25,140 --> 00:00:26,100
And so on and so forth.

7
00:00:27,270 --> 00:00:31,940
We can take a closer look to verify
that decryption really works by applying

8
00:00:31,940 --> 00:00:37,840
the same operations as an encryption,
and only the key sequence in reverse.

9
00:00:37,840 --> 00:00:38,800
In particular,

10
00:00:38,800 --> 00:00:43,230
we only need to look at the decryption
operations in the last round.

11
00:00:43,230 --> 00:00:47,260
The input to each round, for
example, the input to the first

12
00:00:47,260 --> 00:00:52,350
round of decryption is actually R and
N in reverse order,

13
00:00:52,350 --> 00:00:56,510
meaning the right half is on the left,
and the left half is on the right.

14
00:00:56,510 --> 00:01:01,010
This is due to the swap operation at
the end of the encryption process.

15
00:01:01,010 --> 00:01:05,630
For example, the input to the first
round of decryption would be R16 and

16
00:01:05,630 --> 00:01:10,190
L16, because encryption has 16 rounds.

17
00:01:10,190 --> 00:01:15,060
And here, because we are using the key
sequence in reverse in decryption,

18
00:01:15,060 --> 00:01:19,100
then the key using the first
round of decryption

19
00:01:19,100 --> 00:01:23,380
is the key using the 16th
round of encryption.

20
00:01:23,380 --> 00:01:28,960
Record that we can use algebra to
represent the desk operations.

21
00:01:28,960 --> 00:01:33,820
If you use those algebra expressions,
you will be able to verify that given

22
00:01:33,820 --> 00:01:39,220
this input in the decryption process you
should be able to produce this output.

23
00:01:39,220 --> 00:01:42,840
I'll leave these as a exercise for
you to do at home.

24
00:01:42,840 --> 00:01:47,030
Therefore, after 16 rounds
of decryption process,

25
00:01:47,030 --> 00:01:51,210
the output would be R and
L in plaintext.

26
00:01:51,210 --> 00:01:54,770
In the final swap operation
at the end of the process

27
00:01:54,770 --> 00:01:59,730
would produce the correct plain text
result L and R in the correct order.

28
00:01:59,730 --> 00:02:02,330
And this is how
decryption in this works.
