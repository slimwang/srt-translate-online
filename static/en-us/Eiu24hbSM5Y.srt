1
00:00:00,170 --> 00:00:03,890
'Kay. And then they know I catch any exception because we know

2
00:00:03,890 --> 00:00:06,470
that every time I, well, I'll just do it, okay?

3
00:00:06,470 --> 00:00:08,304
>> Do we mentioned that line 34 prints the wrong?

4
00:00:08,304 --> 00:00:08,804
>> Yeah. >> It prints that. [CROSSTALK] Prints next to the [INAUDIBLE]. >> Yeah.

5
00:00:08,804 --> 00:00:14,425
>> Yeah. >> Sorry. >> You need to make a note of that, though.

6
00:00:14,425 --> 00:00:15,246
>> Can we put? >> Who's checking the the recorder?

7
00:00:15,246 --> 00:00:17,254
>> [CROSSTALK] Crazy Bob.

8
00:00:17,254 --> 00:00:18,320
[INAUDIBLE] here?

9
00:00:20,150 --> 00:00:24,190
Major, major, our majors are what we had the not equal to sentinel.

10
00:00:24,190 --> 00:00:25,090
That needs to change.

11
00:00:25,090 --> 00:00:29,040
>> Right. >> We're not checking for a period or have the exception.

12
00:00:29,040 --> 00:00:31,880
>> We're printing every character on new line as an int.

13
00:00:31,880 --> 00:00:32,878
>> Okay, that's pretty good.

14
00:00:32,878 --> 00:00:36,936
>> There's questions about whether the loop even terminates in

15
00:00:36,936 --> 00:00:39,680
the network between the wrong variable.

16
00:00:39,680 --> 00:00:43,310
>> Okay. I shouldn't catch, can, are we going to, you know,

17
00:00:43,310 --> 00:00:48,110
catch beyond its own line or catch comes after, you know, on, on line 36 there.

18
00:00:48,110 --> 00:00:54,850
Should, should we, is there, do we want to talk about a standard for that?

19
00:00:54,850 --> 00:00:55,960
>> I personally like this style.

20
00:00:55,960 --> 00:00:59,100
I mean, the, I think this is the, the new style or whatever.

21
00:00:59,100 --> 00:00:59,910
I like this line.

22
00:00:59,910 --> 00:01:02,890
This where the, the opening curly brace is on the same line and

23
00:01:02,890 --> 00:01:04,644
then the close curly brace on [INAUDIBLE].

24
00:01:04,644 --> 00:01:07,000
>> Actually, Crazy Bob and I talked about that a lot and

25
00:01:07,000 --> 00:01:09,830
we thought that, that was a, a nice way to put the code.

26
00:01:09,830 --> 00:01:12,725
And again, we wanted to define the standards as different we can do

27
00:01:12,725 --> 00:01:13,469
it in [INAUDIBLE].

28
00:01:13,469 --> 00:01:15,726
>> Guess that mix-up coding were discussed between the two of you.

29
00:01:15,726 --> 00:01:16,601
>> Just [INAUDIBLE].

30
00:01:16,601 --> 00:01:18,476
>> That's interesting.

31
00:01:18,476 --> 00:01:19,304
Well, we named-

32
00:01:19,304 --> 00:01:20,433
>> We were talking about how ADA,

33
00:01:20,433 --> 00:01:22,393
you know, ADA doesn't even use these curly braces.

34
00:01:22,393 --> 00:01:24,657
I mean, you, we could begins and ends and

35
00:01:24,657 --> 00:01:28,948
then it's really clear exactly where these blocks are beginning and ending.

36
00:01:28,948 --> 00:01:31,878
We wouldn't having all these crazy Java problems that we've got.

37
00:01:31,878 --> 00:01:34,768
>> Which you know Crazy Bob.

38
00:01:34,768 --> 00:01:37,120
It's from pre-Civil War era.

39
00:01:37,120 --> 00:01:37,790
So.

40
00:01:37,790 --> 00:01:40,270
>> Yeah. >> We, you, you need, need to be careful when you listen to him.

41
00:01:40,270 --> 00:01:42,590
You know, one thing that's bothering me.

42
00:01:42,590 --> 00:01:47,349
I keep looking at this thing, is that here's a piece of code,

43
00:01:47,349 --> 00:01:50,107
you're claiming that you read it.

44
00:01:50,107 --> 00:01:54,364
But there's no header in this code that says, you know,

45
00:01:54,364 --> 00:01:59,410
this is a Doctor Bug's code, the revision of the code.

46
00:01:59,410 --> 00:02:01,938
Any of that kind of information, which is typical in,

47
00:02:01,938 --> 00:02:07,115
in software engineering, and we know who's it is, how it's revised.

48
00:02:07,115 --> 00:02:10,655
If other people been making new versions of it, we know who they are,

49
00:02:10,655 --> 00:02:15,980
what the dates of, of, of each revision, original development art, et cetera.

50
00:02:15,980 --> 00:02:18,580
None of that is in here.

51
00:02:18,580 --> 00:02:20,688
>> So that ten years from now the maintainers can call you up in the middle of

52
00:02:20,688 --> 00:02:22,216
the night and, and ask you what you were thinking?

53
00:02:22,216 --> 00:02:25,833
>> Could the number of bugs in this code is clear-

54
00:02:25,833 --> 00:02:27,817
[CROSSTALK]. >> Right, no Java down here.

55
00:02:27,817 --> 00:02:30,020
>> In this case it might be appropriate if you also put the sources

56
00:02:31,300 --> 00:02:33,420
of the different places you visited [INAUDIBLE] copy and pasted code.

57
00:02:33,420 --> 00:02:33,920
That might be.

58
00:02:34,940 --> 00:02:35,960
>> Okay, that was just a minor.

59
00:02:35,960 --> 00:02:38,306
I mean I really copy a coupled of things, not too much.

60
00:02:38,306 --> 00:02:39,108
>> [CROSSTALK] Oh. Okay.

61
00:02:39,108 --> 00:02:40,013
>> But that's sure.

62
00:02:40,013 --> 00:02:40,621
I mean I, I-

63
00:02:40,621 --> 00:02:43,235
>> Like the while statement that's incorrect.

64
00:02:43,235 --> 00:02:43,830
>> Mm-hm.

65
00:02:43,830 --> 00:02:46,870
Yeah. >> Yeah. >> Well, I think I told you before that the while statement is

66
00:02:46,870 --> 00:02:47,415
actually my mistake.

67
00:02:47,415 --> 00:02:47,945
[CROSSTALK].

68
00:02:47,945 --> 00:02:49,810
>> The point has been made, very good to talk about continuity.

69
00:02:51,490 --> 00:02:52,040
>> Okay.

70
00:02:52,040 --> 00:02:54,231
So, at this point yeah.

71
00:02:54,231 --> 00:02:55,364
That the cases.

72
00:02:55,364 --> 00:02:56,592
>> We're going back to line 36,

73
00:02:56,592 --> 00:02:58,965
I believe it's improper to catch just a generic conception.

74
00:02:58,965 --> 00:03:02,581
You're supposed to catch the most specific catch you're actually expecting.

75
00:03:02,581 --> 00:03:03,467
>> Generic catching,

76
00:03:03,467 --> 00:03:06,601
catching generic conceptions is just catching generic conceptions.

77
00:03:06,601 --> 00:03:09,245
That's just to cover your behind kind of thing.

78
00:03:09,245 --> 00:03:09,902
>> Yeah.

79
00:03:09,902 --> 00:03:12,440
>> [CROSSTALK] Actually trying to catch IO exceptions.

80
00:03:12,440 --> 00:03:15,200
I believe there should be IO exception to the rule.

81
00:03:15,200 --> 00:03:19,100
[COUGH]. >> Yeah I was just trying to be comprehensive, because you know,

82
00:03:19,100 --> 00:03:22,030
this way an exception that happens will be caught.

83
00:03:22,030 --> 00:03:23,570
>> Sure. >> We need an exit-able system without printing anything is

84
00:03:23,570 --> 00:03:24,090
also really bad.

85
00:03:26,630 --> 00:03:29,400
I mean, we should be writing to the logger.

86
00:03:29,400 --> 00:03:30,750
>> In the case of where the exception was raised.

87
00:03:30,750 --> 00:03:32,380
>> Yeah, in the case where the exception was raised.

88
00:03:32,380 --> 00:03:36,129
I'd call that, definitely, a major.

89
00:03:36,129 --> 00:03:38,027
Both of them.

90
00:03:38,027 --> 00:03:40,030
I don't know if my colleagues agree with that or not.

91
00:03:41,390 --> 00:03:45,990
>> So, we need to catch specific, and then have a generic catch that follows?

92
00:03:45,990 --> 00:03:46,620
Is that what we're saying?

93
00:03:48,090 --> 00:03:50,180
>> We just catch the ones we were actually expecting.

94
00:03:51,380 --> 00:03:54,503
>> What about the ones that we don't expect?

95
00:03:54,503 --> 00:03:58,752
We're not, we won't get any information about those will we?

96
00:03:58,752 --> 00:04:01,884
>> Well you know if we were using eta they have a catch all at the end that we

97
00:04:01,884 --> 00:04:02,590
could always.

98
00:04:02,590 --> 00:04:03,901
[CROSSTALK]. >> There. >> Well enough with this eta stuff.

99
00:04:03,901 --> 00:04:08,400
>> [LAUGH]. >> I think we are using Java and so we'll have to deal with that.

100
00:04:08,400 --> 00:04:12,199
Again I think we should make that also part of the quoting standards.
