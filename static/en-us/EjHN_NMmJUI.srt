1
00:00:00,480 --> 00:00:03,880
How are you going to deal with a question of heterogeneity? Some approaches

2
00:00:03,880 --> 00:00:09,570
include standard APIs. Those standards come from organizations like W3C,

3
00:00:09,570 --> 00:00:14,260
that is the World Wide Web Consortium, OMG the Object Management Group which is

4
00:00:14,260 --> 00:00:18,670
the promogater of GML, ANSI American National Standards Institute,

5
00:00:18,670 --> 00:00:23,340
international standards organization. All of these standard API's and

6
00:00:23,340 --> 00:00:28,800
protocols must at least address the issue of backward and forward compatibility.

7
00:00:29,850 --> 00:00:33,390
Backwards compatibility means if you've got a new version, does that

8
00:00:33,390 --> 00:00:39,300
version support or break older versions. Tougher is forward compatibility.

9
00:00:39,300 --> 00:00:44,440
In your current version, are you promising that regardless of how the particular

10
00:00:44,440 --> 00:00:49,160
standard may change in the future, that the current version will be supported.

11
00:00:49,160 --> 00:00:51,940
Second is the question of normative architectures.

12
00:00:51,940 --> 00:00:57,062
Here OMG is taking a stab with what they call Model-Driven Architecture, MDA,

13
00:00:57,062 --> 00:01:02,580
in which the parts of a systems architecture which are machine independent

14
00:01:02,580 --> 00:01:06,288
are separated from the machine dependent parts. And then there is

15
00:01:06,288 --> 00:01:10,523
a co-generation process that enables the generation of the dependent parts from

16
00:01:10,523 --> 00:01:14,680
some kinds of machine descriptions. The major vendors or

17
00:01:14,680 --> 00:01:20,086
players in the game also offer there own ways of dealing with heterogeneity. For

18
00:01:20,086 --> 00:01:24,868
example, Sony has its what originally was called J2E and is now called JEE.

19
00:01:24,868 --> 00:01:29,080
Microsoft has .Net, IBM has Websphere and so on.
