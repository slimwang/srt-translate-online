1
00:00:00,690 --> 00:00:04,080
The three places that I implemented this change were 1,

2
00:00:04,080 --> 00:00:06,950
the index.html file where the template was.

3
00:00:06,950 --> 00:00:09,687
2, To do view.js.

4
00:00:09,687 --> 00:00:16,820
And lastly, todo.js, the place where we store all of our data in our model.

5
00:00:16,820 --> 00:00:18,430
So I had to figure this one out too.

6
00:00:18,430 --> 00:00:21,540
So, here's the thought processes I went through.

7
00:00:21,540 --> 00:00:24,660
So first off, I knew I needed to add a priority button

8
00:00:24,660 --> 00:00:30,180
in the same place as the other button, our Delete button and our Edit button.

9
00:00:30,180 --> 00:00:32,070
So I had to remember where that was.

10
00:00:32,070 --> 00:00:35,502
Sure enough, it was in our template code in our item template in

11
00:00:35,502 --> 00:00:37,830
our index.HTML file.

12
00:00:37,830 --> 00:00:41,570
So I'm going to go ahead and copy the Edit button, and I'm going to paste it,

13
00:00:41,570 --> 00:00:44,450
and I'm give it a class of priority button.

14
00:00:44,450 --> 00:00:46,920
Before I do anything else, I'm going to go ahead and test this.

15
00:00:46,920 --> 00:00:49,340
Sure enough, in the browser, it works just fine.

16
00:00:49,340 --> 00:00:51,420
When you roll over it, there's a little exclamation point,

17
00:00:51,420 --> 00:00:54,150
and when you click on it, nothing really happens.

18
00:00:54,150 --> 00:00:58,220
Of course, that's not unexpected; we haven't wired it up yet.

19
00:00:58,220 --> 00:01:01,610
So, now we have to remember where did we wire up those other buttons?

20
00:01:01,610 --> 00:01:04,858
That's right, it was in our Todoview.js.

21
00:01:04,858 --> 00:01:09,500
If I scroll down just a teeny bit, it was in this events object literal.

22
00:01:09,500 --> 00:01:12,270
I can put it anywhere I want in this entire object literal, but

23
00:01:12,270 --> 00:01:14,120
I'll go ahead and put it right here.

24
00:01:14,120 --> 00:01:15,670
So what's the event?

25
00:01:15,670 --> 00:01:20,380
The event is going to be a click because when I click on the priority button,

26
00:01:20,380 --> 00:01:21,730
I want something to happen.

27
00:01:21,730 --> 00:01:22,695
How do I get to the button?

28
00:01:22,695 --> 00:01:26,850
.priority button, and what's the functionality?

29
00:01:26,850 --> 00:01:29,640
Well, gosh, I do not know, actually.

30
00:01:29,640 --> 00:01:34,030
There's no function down here, that toggles the priority of a button, and

31
00:01:34,030 --> 00:01:37,400
that's of course because it's a new feature that we're creating.

32
00:01:37,400 --> 00:01:39,540
So it's up to us to define this.

33
00:01:39,540 --> 00:01:41,350
What's something that looks similar?

34
00:01:41,350 --> 00:01:43,280
Well, we're toggling the priority of a button,

35
00:01:43,280 --> 00:01:47,260
it turns out we already have a function called toggle completed.

36
00:01:47,260 --> 00:01:49,380
Let's take a moment and look and

37
00:01:49,380 --> 00:01:53,440
see what that looks like, and that's just down below here.

38
00:01:53,440 --> 00:01:55,340
Toggle completed is a function,

39
00:01:55,340 --> 00:02:01,710
which says this .model the thing that we clicked on's model .toggle.

40
00:02:01,710 --> 00:02:05,280
So, because we're on this wild goose chase we have to go and

41
00:02:05,280 --> 00:02:06,680
see what that looks like.

42
00:02:06,680 --> 00:02:11,020
Now where are we going to find a toggle method on a model?

43
00:02:11,020 --> 00:02:16,160
My guess is it would be on the to do model, in to do.js.

44
00:02:16,160 --> 00:02:19,600
So, sure enough, our to do dot JS file is not very big.

45
00:02:19,600 --> 00:02:22,590
It's just got this defaults thing and

46
00:02:22,590 --> 00:02:26,900
this toggle thing, and the toggle thing is exactly what we're looking for.

47
00:02:26,900 --> 00:02:29,850
It toggles the completed state of the to do item.

48
00:02:29,850 --> 00:02:31,500
How does it do that?

49
00:02:31,500 --> 00:02:38,680
It says this dot save, completed is not this.get completed.

50
00:02:38,680 --> 00:02:43,100
Now, this is the kind of stuff that we don't necessarily know because we

51
00:02:43,100 --> 00:02:47,770
don't know Backbone very well, and it would be great to take a look and

52
00:02:47,770 --> 00:02:52,860
see what this.save does and how it works, and this.get and how it works.

53
00:02:52,860 --> 00:02:55,430
So if I were you, I would go ahead and look them up.

54
00:02:55,430 --> 00:02:59,250
I'm not going to look them up in this solution video, but, suffice it to say,

55
00:02:59,250 --> 00:03:03,620
this dot save takes in a property here with a value and

56
00:03:03,620 --> 00:03:06,510
the value gets saved to the model.

57
00:03:06,510 --> 00:03:12,280
So, this dot save completed changes the completed value of our Todo.

58
00:03:12,280 --> 00:03:14,160
And what does it set it to?

59
00:03:14,160 --> 00:03:17,910
It sets it to not this dot get completed.

60
00:03:17,910 --> 00:03:22,180
So, if this dot get completed returns true we're setting it to false.

61
00:03:22,180 --> 00:03:26,250
If it returns false we're setting it to not false, or true.

62
00:03:26,250 --> 00:03:31,500
This is just basically a toggle, which is exactly why it's called toggle.

63
00:03:31,500 --> 00:03:35,110
If completed is true it sets it to false and if it's false it sets it to

64
00:03:35,110 --> 00:03:39,470
true and that's exactly how we want our priority thing to work.

65
00:03:39,470 --> 00:03:44,210
So for now I'm going to go ahead and do a very similar kind of a thing here.

66
00:03:44,210 --> 00:03:45,540
I've got toggle, and

67
00:03:45,540 --> 00:03:49,290
I'm also going to make a new thing that toggles the priority.

68
00:03:49,290 --> 00:03:50,680
So, I've gotten this far.

69
00:03:50,680 --> 00:03:52,520
What do I want to save it as?

70
00:03:52,520 --> 00:03:54,650
I'll say priority.

71
00:03:54,650 --> 00:03:59,860
Priority is going to be the opposite of this.get('priority').

72
00:03:59,860 --> 00:04:03,540
Now, if I poke around the documentation for backbone models I'll also

73
00:04:03,540 --> 00:04:07,630
find information on this guy right here, that's the defaults.

74
00:04:07,630 --> 00:04:11,660
When you make a new to do, what are its defaults?

75
00:04:11,660 --> 00:04:16,220
It has a title of nothing, it has a completed value of false, and

76
00:04:16,220 --> 00:04:18,709
I also should add something for the priority.

77
00:04:18,709 --> 00:04:21,130
I'll say priority is false.

78
00:04:21,130 --> 00:04:25,750
Now I have something called togglePriority on our Backbone Model.

79
00:04:25,750 --> 00:04:30,320
So now when I create to do items they don't just have a completed state of

80
00:04:30,320 --> 00:04:34,060
false, they now always have a priority of false.

81
00:04:34,060 --> 00:04:37,680
And they also have a function to toggle the priority.

82
00:04:37,680 --> 00:04:41,700
And that's exactly what we want to make use of over here in our view.

83
00:04:41,700 --> 00:04:46,802
So instead of toggle completed function this.model.toggle.

84
00:04:46,802 --> 00:04:51,120
I'm going to do the exact same thing but with toggle priority.

85
00:04:51,120 --> 00:04:51,650
I'm going to go ahead and

86
00:04:51,650 --> 00:04:57,910
save this, now one thing you'll notice is I'm being tofu even in my comment.

87
00:04:57,910 --> 00:05:03,100
Toggle the "priority", and you'll notice I wrote this exactly the same way

88
00:05:03,100 --> 00:05:09,050
because in this case, the tildes on either side are saying this is code,

89
00:05:09,050 --> 00:05:12,470
and then the quotes are saying we're talking about a string.

90
00:05:12,470 --> 00:05:15,050
Same with editing down here in this comment, and so,

91
00:05:15,050 --> 00:05:19,220
of course, my comment is going to look exactly the same.

92
00:05:19,220 --> 00:05:21,780
I am missing a comma here, I'd better not leave that off.

93
00:05:21,780 --> 00:05:25,560
If I did leave that off, you'll find errors in the console,

94
00:05:25,560 --> 00:05:28,820
which is always a good place to check when your application doesn't work, and

95
00:05:28,820 --> 00:05:32,260
it would say, hey, something's wrong here around line 73.

96
00:05:32,260 --> 00:05:35,270
All right, so now I've got a toggle priority.

97
00:05:35,270 --> 00:05:38,900
I've got a toggle priority on the model, which I'm using right here.

98
00:05:38,900 --> 00:05:40,950
And let's go ahead and save it all, and

99
00:05:40,950 --> 00:05:46,610
refresh, sure enough, it does not work because I haven't finished wiring it up.

100
00:05:46,610 --> 00:05:49,730
The thing I forgot was here in events.

101
00:05:49,730 --> 00:05:54,623
I'm saying when I click on the priority button what happens?

102
00:05:54,623 --> 00:05:56,060
Nothing yet.

103
00:05:56,060 --> 00:05:58,580
I need to say toggle priority.

104
00:05:58,580 --> 00:06:00,320
That's the name of the function or

105
00:06:00,320 --> 00:06:03,440
the method on the view down here that I just made.

106
00:06:03,440 --> 00:06:08,390
And that will toggle the priority of whatever elements we're talking about.

107
00:06:08,390 --> 00:06:10,510
Whatever to-do we're talking about.

108
00:06:10,510 --> 00:06:14,940
Now if I go and I refresh and I click, still nothing's quite working.

109
00:06:14,940 --> 00:06:16,460
Now why would that be?

110
00:06:16,460 --> 00:06:20,940
I'm setting a priority state on the model anytime I click on the button.

111
00:06:20,940 --> 00:06:26,560
So, either I did something wrong before, or I'm doing it all right,

112
00:06:26,560 --> 00:06:27,590
but I'm just not seeing it.

113
00:06:28,770 --> 00:06:33,370
As it turns out, the thing that I forgot is I forgot to actually show it here.

114
00:06:33,370 --> 00:06:37,420
That would go over here, in index that HTML.

115
00:06:37,420 --> 00:06:41,910
Remember that the CSS was written that way you would add a class

116
00:06:41,910 --> 00:06:44,800
of priority on the LI.

117
00:06:44,800 --> 00:06:50,060
So where in this LI template do we see the actual LI?

118
00:06:50,060 --> 00:06:50,580
Hm.

119
00:06:50,580 --> 00:06:52,260
Well, if we look around, we don't see it.

120
00:06:52,260 --> 00:06:54,290
It's kind of of a problem, huh?

121
00:06:54,290 --> 00:07:00,530
So, maybe this wasn't the right place to look, for how to add the LI.

122
00:07:00,530 --> 00:07:05,070
So we've got the template, what else is responsible for rendering the elements?

123
00:07:05,070 --> 00:07:06,880
Let's take a look at the view, again.

124
00:07:06,880 --> 00:07:08,890
Our to do view, again.

125
00:07:08,890 --> 00:07:13,180
Once again, we're on this wild goose chase and we have to be a detective.

126
00:07:13,180 --> 00:07:16,590
Now once again, I also want to remind you that this is just my process,

127
00:07:16,590 --> 00:07:20,060
this is how I would go about trying to figure this out

128
00:07:20,060 --> 00:07:23,920
assuming that I hadn't done this before and I didn't know backbone.js.

129
00:07:23,920 --> 00:07:28,800
If I had to work on this code base for months, I would learn Backbone.

130
00:07:28,800 --> 00:07:31,960
But until then, being a detective can be useful.

131
00:07:31,960 --> 00:07:35,690
So we've got our events thing, and that's for the actual click.

132
00:07:35,690 --> 00:07:37,190
How is it rendered, again?

133
00:07:37,190 --> 00:07:40,510
Let's scroll down and see if we can find anything interesting.

134
00:07:40,510 --> 00:07:44,700
Well, here is render, that seems like exactly the kind of

135
00:07:44,700 --> 00:07:47,380
function we'd be looking for, so let's see what happens.

136
00:07:47,380 --> 00:07:51,140
There's this code here, we're going to ignore it because if you read this

137
00:07:51,140 --> 00:07:56,680
comment, this is just for fixing a little bit of a backbone local storage bug.

138
00:07:56,680 --> 00:08:00,690
So this isn't really interesting to the functionality of the application.

139
00:08:00,690 --> 00:08:02,080
This is the meat of it.

140
00:08:02,080 --> 00:08:08,850
It looks like it's taking this element, the actual elements behind this, the LI.

141
00:08:08,850 --> 00:08:12,570
And it's setting the HTML to, the rendered template.

142
00:08:12,570 --> 00:08:15,930
It's also telling this element to toggle, to turn on or

143
00:08:15,930 --> 00:08:20,740
off the class if completed whenever this is true or false.

144
00:08:20,740 --> 00:08:24,040
Now it's also, wait, wait a second, wait a second.

145
00:08:24,040 --> 00:08:25,360
Toggle class.

146
00:08:25,360 --> 00:08:28,220
That seems like something we might want to do.

147
00:08:28,220 --> 00:08:30,160
So, what is this line doing again?

148
00:08:30,160 --> 00:08:32,510
It's setting a class of completed.

149
00:08:32,510 --> 00:08:36,080
If this.model.get completed is true.

150
00:08:36,080 --> 00:08:41,490
Hm, so, if this model says that

151
00:08:41,490 --> 00:08:44,660
it's been a completed event, it adds a class of completed.

152
00:08:44,660 --> 00:08:49,920
We want to do exactly that, but for our priority button Eureka.

153
00:08:49,920 --> 00:08:54,690
So, let's see if this works, this.$el.

154
00:08:54,690 --> 00:08:59,820
So that's the element itself .toggleClass priority, and it'll set that class of

155
00:08:59,820 --> 00:09:06,850
priority on, or enable it, if this .model.get of priority is true.

156
00:09:06,850 --> 00:09:09,930
Now let's see if that works.

157
00:09:09,930 --> 00:09:13,270
Let's hop back into our browser and try this one more time.

158
00:09:13,270 --> 00:09:17,015
I'm going to uncheck these, and if we hit the exclamation mark,

159
00:09:17,015 --> 00:09:21,130
sure enough, eureka, it works.

160
00:09:21,130 --> 00:09:23,070
Now we can prioritize some of these.

161
00:09:23,070 --> 00:09:25,850
We'll say add a new feature's really important.

162
00:09:25,850 --> 00:09:27,570
And then as I check them off,

163
00:09:27,570 --> 00:09:32,540
the priority red goes away, and here's our add a new feature.

164
00:09:32,540 --> 00:09:35,580
Pat yourself on the back, we just added this feature.

165
00:09:35,580 --> 00:09:38,890
And especially pat yourself on the back if you came to this kind of

166
00:09:38,890 --> 00:09:42,970
a solution on your own, without looking at the solution video.

167
00:09:42,970 --> 00:09:44,050
Awesome work.

168
00:09:44,050 --> 00:09:49,220
Now, if you did it, I would recommend, even though you know the solution now,

169
00:09:49,220 --> 00:09:54,720
going back and trying to do this by yourself, without referencing my solution.

170
00:09:54,720 --> 00:09:59,410
Do remember that the whole point is for you to be able to do this on your own.

171
00:09:59,410 --> 00:10:04,880
To be a detective on your own, and to implement functionality like tofu.

172
00:10:04,880 --> 00:10:07,010
So your code looks like it's always been there.

173
00:10:07,010 --> 00:10:07,510
Good work.
