1
00:00:00,500 --> 00:00:02,640
Hey great job working
with the while loop, and

2
00:00:02,640 --> 00:00:05,000
as you can see they make life so
much more convenient.

3
00:00:05,000 --> 00:00:08,109
So we don't have to rewrite the same
line of code over and over again.

4
00:00:08,109 --> 00:00:11,640
But let me tell you something,
there's even better news,

5
00:00:11,640 --> 00:00:15,170
because I'm going to show you another
type of loop in Java, the for loop.

6
00:00:15,170 --> 00:00:18,380
We can use it to rewrite the while loop
to become shorter and even more compact.

7
00:00:19,480 --> 00:00:21,870
So here's the general
structure of a while loop and

8
00:00:21,870 --> 00:00:25,650
a for loop, to help us understand
the similarities and differences.

9
00:00:25,650 --> 00:00:26,520
Now notice that the for

10
00:00:26,520 --> 00:00:30,110
loop condenses parts of the while
loop into just a single line.

11
00:00:30,110 --> 00:00:33,290
In the for loop, we start the initial
set up of the counter variable

12
00:00:33,290 --> 00:00:36,090
the test condition which determines
when we exit the loop and

13
00:00:36,090 --> 00:00:37,910
then a spot to update
the counter variable.

14
00:00:37,910 --> 00:00:41,020
Now we tend to use while loops
when we want to repeat a task

15
00:00:41,020 --> 00:00:44,100
until something happens
the condition is no longer true.

16
00:00:44,100 --> 00:00:47,370
So while loops can have
an indefinite number of iterations.

17
00:00:47,370 --> 00:00:50,320
So a real world example of
a while loop is to keep opening

18
00:00:50,320 --> 00:00:54,170
all files in a particular folder while
there are still files to be opened.

19
00:00:54,170 --> 00:00:57,080
So we don't care how many files
in that folder there are,

20
00:00:57,080 --> 00:00:59,810
we just keep doing it while
there are files there.

21
00:00:59,810 --> 00:01:00,860
Now we tend to use for

22
00:01:00,860 --> 00:01:05,200
loops when we want to repeat
a task a specific number of times.

23
00:01:05,200 --> 00:01:09,940
So an example of a for loop is to open
the first five files in a folder.

24
00:01:09,940 --> 00:01:12,950
So even though there might be
other files left in that folder,

25
00:01:12,950 --> 00:01:15,820
we only want to do it four or
five times.

26
00:01:15,820 --> 00:01:18,940
Now here's some code examples
of these two types of loops.

27
00:01:18,940 --> 00:01:22,140
So, you're familiar with this code on
the left already, of the while loop.

28
00:01:22,140 --> 00:01:24,970
But this is the first time
you're seeing a for loop.

29
00:01:24,970 --> 00:01:29,030
Now both blocks of code do the same
thing; they print a log statement for

30
00:01:29,030 --> 00:01:30,970
each element of the words list.

31
00:01:30,970 --> 00:01:34,350
Now let's take a closer look at
these two types of loops and

32
00:01:34,350 --> 00:01:37,150
then I'll point out parts that
you know in the while loop and

33
00:01:37,150 --> 00:01:39,260
show you where they exist in the for
loop.

34
00:01:39,260 --> 00:01:42,330
So before in the while loop,
we set up the index variable to be 0.

35
00:01:42,330 --> 00:01:46,330
And in the for loop we can also
set up the counter variable and

36
00:01:46,330 --> 00:01:48,378
we set it as 0 as well here.

37
00:01:48,378 --> 00:01:51,550
And in the for
loop the set up comes in the first part

38
00:01:51,550 --> 00:01:55,580
between these two parentheses,
so before the first semi colon.

39
00:01:55,580 --> 00:01:59,260
Now this in the for loop is called
the initialization statement and

40
00:01:59,260 --> 00:02:03,030
it will only be executed
once before the loop starts.

41
00:02:03,030 --> 00:02:04,430
Then in the while loop,

42
00:02:04,430 --> 00:02:07,990
we have the test condition that
goes within the parentheses.

43
00:02:07,990 --> 00:02:11,480
So the loop will keep looping
until this condition is false.

44
00:02:11,480 --> 00:02:12,420
So in this case,

45
00:02:12,420 --> 00:02:16,370
when the index variable is no longer
less than the length of the word's list.

46
00:02:16,370 --> 00:02:17,920
So similarly, in the for

47
00:02:17,920 --> 00:02:21,970
loop, with the test condition follows
the initialization statement, and

48
00:02:21,970 --> 00:02:25,400
is separated by semicolons before and
after it.

49
00:02:25,400 --> 00:02:26,750
Now the body inside the for

50
00:02:26,750 --> 00:02:31,530
loop will keep getting executed
until this test condition is false.

51
00:02:31,530 --> 00:02:34,720
At the end of our while loop
we have this update statement,

52
00:02:34,720 --> 00:02:36,760
to update the index variable by one.

53
00:02:36,760 --> 00:02:40,170
So this helps us make sure that the
condition will eventually become false.

54
00:02:40,170 --> 00:02:41,370
So likewise, in the for

55
00:02:41,370 --> 00:02:45,270
loop, we can write the update statement
right after the test condition.

56
00:02:45,270 --> 00:02:47,800
And so
it comes after the second semicolon.

57
00:02:47,800 --> 00:02:50,800
So this update statement
will get executed

58
00:02:50,800 --> 00:02:53,140
after each iteration of the loop.

59
00:02:53,140 --> 00:02:56,160
Meaning we execute all of
the code in this block.

60
00:02:56,160 --> 00:02:57,800
And then run the update statement.

61
00:02:57,800 --> 00:02:59,440
Then we check the test condition.

62
00:02:59,440 --> 00:03:03,120
And if it's true we have to take
the loop again and then and

63
00:03:03,120 --> 00:03:06,530
check the update statement and
then check the test condition again.

64
00:03:06,530 --> 00:03:08,550
So here's how the for loop works.

65
00:03:08,550 --> 00:03:10,180
So we enter the for loop.

66
00:03:10,180 --> 00:03:13,950
We set up the counter variable and
remember we only do this once.

67
00:03:13,950 --> 00:03:18,170
Next we check the condition and
if it's true then we enter the for

68
00:03:18,170 --> 00:03:21,270
loop body and
we execute whatever code is in here.

69
00:03:21,270 --> 00:03:24,300
Afterwards, come out here and
update the counter variable.

70
00:03:24,300 --> 00:03:28,240
After that, we check the test condition,
and if it's true we enter the body and

71
00:03:28,240 --> 00:03:29,730
execute these instructions.

72
00:03:29,730 --> 00:03:32,250
Come up here,
update the counter variable.

73
00:03:32,250 --> 00:03:33,480
Go back to the condition.

74
00:03:33,480 --> 00:03:36,070
Check if it's true, and
if it is complete this again.

75
00:03:36,070 --> 00:03:37,420
And then go back up here.

76
00:03:37,420 --> 00:03:39,270
And update the counter variable again.

77
00:03:39,270 --> 00:03:41,910
And then after which when we
go back to the test condition,

78
00:03:41,910 --> 00:03:45,350
if it's ever false then we
just completely exit the loop.

79
00:03:45,350 --> 00:03:47,820
So remember the index plus
plus is a shorthand for

80
00:03:47,820 --> 00:03:49,920
index equals index plus one.

81
00:03:49,920 --> 00:03:52,800
And this just increments
the index value by one.

82
00:03:52,800 --> 00:03:54,950
So to summarize, the syntax of a for

83
00:03:54,950 --> 00:04:00,400
loop combines three parts of a loop into
a single line between these parentheses.

84
00:04:00,400 --> 00:04:02,265
And each part is
separated by a semicolon.

85
00:04:02,265 --> 00:04:05,420
So the first part is
the initialization statement,

86
00:04:05,420 --> 00:04:08,550
which only gets executed
once before the loop starts.

87
00:04:08,550 --> 00:04:10,660
The second part is a test condition,

88
00:04:10,660 --> 00:04:13,080
which gets checked before we do
another iteration of the loop.

89
00:04:13,080 --> 00:04:15,280
And the third part is
the update statement,

90
00:04:15,280 --> 00:04:18,630
which gets executed at the end
of each iteration of the loop.

91
00:04:18,630 --> 00:04:21,880
So now that you've seen example before
loop, try practice writing a for

92
00:04:21,880 --> 00:04:23,050
loop in your me walk up.

93
00:04:23,050 --> 00:04:27,500
So in this exercise I'd like you to
place writing a while loop with a for

94
00:04:27,500 --> 00:04:30,670
loop and this will allow your
code to become more concise.

95
00:04:30,670 --> 00:04:33,470
So the loop should behave the same and
by that I mean

96
00:04:33,470 --> 00:04:36,900
adding a new text view to the layout for
each element in the words list.

97
00:04:36,900 --> 00:04:39,030
And the output should
also look the same.

98
00:04:39,030 --> 00:04:41,560
So here's a screenshot
of the numbers activity.

99
00:04:41,560 --> 00:04:44,550
And remember as a hint,
I've included an example of the for

100
00:04:44,550 --> 00:04:46,100
loop in the text below.

101
00:04:46,100 --> 00:04:48,240
So go ahead and
check this check box when you're done.
