1
00:00:00,330 --> 00:00:02,320
Okay, so here we have our design of the

2
00:00:02,320 --> 00:00:04,280
classes we are going to build up on the top

3
00:00:04,280 --> 00:00:07,040
right hand corner, and what I've done thus far is

4
00:00:07,040 --> 00:00:11,310
created a new Python file, and I called it inheritance.py.

5
00:00:11,310 --> 00:00:13,530
Now, based on our design, I'm going to go ahead

6
00:00:13,530 --> 00:00:18,320
and create a class called Parent. [SOUND] There. The next

7
00:00:18,320 --> 00:00:21,370
thing to do is to initialize the variables of class

8
00:00:21,370 --> 00:00:25,350
Parent, variables like last_name and eye_color. So, to do that,

9
00:00:25,350 --> 00:00:27,500
I will define this class as init method

10
00:00:27,500 --> 00:00:30,180
or constructor. The first argument for this function,

11
00:00:30,180 --> 00:00:33,365
we know, is self. And the two instance

12
00:00:33,365 --> 00:00:38,040
variables for class Parent, we know, are self.last_name and

13
00:00:38,040 --> 00:00:42,010
self.eye_color. Now the init function we know will

14
00:00:42,010 --> 00:00:45,150
receive a couple of values as arguments. So, let

15
00:00:45,150 --> 00:00:46,950
me add them in here, and we will

16
00:00:46,950 --> 00:00:50,720
use these two arguments to initialize our instance variables.

17
00:00:50,720 --> 00:00:56,160
Let me do that next. Alright. You may notice that this piece of code is pretty

18
00:00:56,160 --> 00:00:58,610
similar to the code for class Movie that

19
00:00:58,610 --> 00:01:01,300
we have written previously. By the way, one new

20
00:01:01,300 --> 00:01:03,000
thing I will do here, is add a

21
00:01:03,000 --> 00:01:05,890
quick print statement inside the init method. It will

22
00:01:05,890 --> 00:01:11,930
print out, Parent Constructor Called. So, this print

23
00:01:11,930 --> 00:01:15,895
statement will explicitly tell us, each time the init

24
00:01:15,895 --> 00:01:19,090
method or the constructor of class Parent is called.

25
00:01:19,090 --> 00:01:21,140
Alright, to make sure that this code that we

26
00:01:21,140 --> 00:01:23,760
have written thus far actually works, let's go ahead

27
00:01:23,760 --> 00:01:27,000
and use this class. I will define an instance

28
00:01:27,000 --> 00:01:31,370
of class Parent and call it billy_cyrus, and will

29
00:01:31,370 --> 00:01:34,530
provide the two arguments that are necessary. The first

30
00:01:34,530 --> 00:01:37,490
of which is last_name and that happens to be

31
00:01:37,490 --> 00:01:40,770
Cyrus, and the next one is eye_color which is,

32
00:01:40,770 --> 00:01:44,500
let's say, blue. Now, a quick word

33
00:01:44,500 --> 00:01:47,500
of caution. Ordinarily, I would have kept these

34
00:01:47,500 --> 00:01:49,480
two things, the definition of the class

35
00:01:49,480 --> 00:01:52,140
Parent and creating its instances. I would have

36
00:01:52,140 --> 00:01:56,050
kept them in separate Python files. But I have kept them both here in the

37
00:01:56,050 --> 00:02:02,009
same file for ease of demonstration. Okay, so to demonstrate

38
00:02:02,009 --> 00:02:06,479
that the instance actually works,

39
00:02:06,479 --> 00:02:15,300
I'll print out its last name. Let me save and then run this file. And

40
00:02:15,300 --> 00:02:18,450
there's my output. It says the parent constructor

41
00:02:18,450 --> 00:02:21,290
was called. Which seems appropriate, because we created

42
00:02:21,290 --> 00:02:23,820
an instance called billy_cyrus. And as soon as

43
00:02:23,820 --> 00:02:26,260
we did that, the class Parent's _initl_ method

44
00:02:26,260 --> 00:02:28,650
got called, which had a print statement inside

45
00:02:28,650 --> 00:02:31,780
it. And then, we printed out Billy Cyrus's

46
00:02:31,780 --> 00:02:36,980
last name, which it printed out correctly. Okay, so far so good.

47
00:02:36,980 --> 00:02:40,640
Now, you'll notice that there really isn't anything new that we've done here

48
00:02:40,640 --> 00:02:45,100
thus far. The new thing we're going to try is called inheritance, which

49
00:02:45,100 --> 00:02:48,900
will happen when we create the class called Child. Let's do that next.
