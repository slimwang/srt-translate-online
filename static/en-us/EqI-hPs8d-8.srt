1
00:00:00,000 --> 00:00:04,000
[Narrator] I want to give you a better idea what these actually look like,

2
00:00:04,000 --> 00:00:08,000
and my wife was kind enough to let me take some parts out of her computer.

3
00:00:08,000 --> 00:00:12,000
Actually, she took them out of the computer so I could show you what they look like.

4
00:00:12,000 --> 00:00:16,000
This is DRAM; this is 2 GB of DRAM,

5
00:00:16,000 --> 00:00:19,000
and what a gigabyte means is approximately a billion bytes.

6
00:00:19,000 --> 00:00:23,000
What it actually means I'll show you in the Python interpreter.

7
00:00:23,000 --> 00:00:27,000
In Python we can do exponentiation by using a star star.

8
00:00:27,000 --> 00:00:30,000
This is what we would write mathematically as 2 to the power 10.

9
00:00:30,000 --> 00:00:33,000
So 2 to the power 10 is 1024.

10
00:00:33,000 --> 00:00:37,000
This is called the kilobyte; we use the prefixes like the thousand prefixes,

11
00:00:37,000 --> 00:00:41,000
but the actual values in computing are usually powers of 2 instead.

12
00:00:41,000 --> 00:00:43,000
They're a little bit different than 1000.

13
00:00:43,000 --> 00:00:46,000
It's actually 1024 when we talk about a kilobyte,

14
00:00:46,000 --> 00:00:49,000
and a megabyte is 1024 KB.

15
00:00:49,000 --> 00:00:53,000
That's equivalent to 2 to the power 20.

16
00:00:53,000 --> 00:00:56,000
A megabyte is just over a million bytes.

17
00:00:56,000 --> 00:01:01,000
A gigabyte is 2 to the power of 30,

18
00:01:01,000 --> 00:01:04,000
which is just over a billion bytes,

19
00:01:04,000 --> 00:01:07,000
and a terabyte is 2 to the power of 40,

20
00:01:07,000 --> 00:01:09,000
which is just over a trillion bytes.

21
00:01:09,000 --> 00:01:13,000
These are the main units we're going to talk about when we think about memory.

22
00:01:13,000 --> 00:01:18,000
Here we have 2 GB of memory, so that means we have

23
00:01:18,000 --> 00:01:21,000
2 to the 30 that would be 1 GB.

24
00:01:21,000 --> 00:01:25,000
We have 2 to the 30 times 2, which is 2 GB times 8,

25
00:01:25,000 --> 00:01:30,000
which is the number of bits in a byte, and 1 bit is the equivalent to a light switch.

26
00:01:30,000 --> 00:01:36,000
It can be in 1 of 2 states, so with 1 byte we have the equivalent of 8 light switches.

27
00:01:36,000 --> 00:01:39,000
This is comparable to having 17 billion light switches.

28
00:01:39,000 --> 00:01:43,000
The kind of memory that we have here is actually DRAM,

29
00:01:43,000 --> 00:01:47,000
so it's really more like having 17 billion buckets,

30
00:01:47,000 --> 00:01:50,000
and that means when you turn your computer off

31
00:01:50,000 --> 00:01:52,000
everything that's stored in the DRAM is lost.

32
00:01:52,000 --> 00:01:54,000
To keep the memory here, it's like a bucket,

33
00:01:54,000 --> 00:01:57,000
but instead of storing water it's storing electrons.

34
00:01:57,000 --> 00:02:02,000
It's a capacitor and when the power goes off that memory is lost.

35
00:02:02,000 --> 00:02:05,000
There are many different types of memory inside your computer.

36
00:02:05,000 --> 00:02:07,000
I mentioned registers briefly, that's the fastest memory

37
00:02:07,000 --> 00:02:10,000
that is built right into the processor.

38
00:02:10,000 --> 00:02:13,000
The main things that matter that distinguish the memory that you have

39
00:02:13,000 --> 00:02:17,000
is the latency which is the time it takes to get a response.

40
00:02:17,000 --> 00:02:21,000
So the latency you can think of as the time to retrieve a value from memory.

41
00:02:21,000 --> 00:02:24,000
We'll talk about latency more next class in terms of what that means in networks,

42
00:02:24,000 --> 00:02:26,000
which is really the same thing.

43
00:02:26,000 --> 00:02:30,000
For this DRAM the latency is about 12 nanoseconds,

44
00:02:30,000 --> 00:02:34,000
and as a reminder, a nanosecond is 1 billionth of a second.

45
00:02:34,000 --> 00:02:36,000
The other thing that really distinguishes memory,

46
00:02:36,000 --> 00:02:38,000
and the reason we have so many different types of it,

47
00:02:38,000 --> 00:02:40,000
is the cost.

48
00:02:40,000 --> 00:02:45,000
The cost varies depending on mostly the latency and the amount of memory you can store.

49
00:02:45,000 --> 00:02:50,000
The cost for this memory, if you bought it today, is about $10 for 2 GB.

50
00:02:50,000 --> 00:02:53,000
That's 10 US dollars, about 7 Euros.
