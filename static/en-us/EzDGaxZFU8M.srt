1
00:00:00,280 --> 00:00:03,350
So now that we have seen an example of loop unrolling lets do a loop and

2
00:00:03,350 --> 00:00:07,760
rolling quiz. Lets say we have the following loop. We load something from

3
00:00:07,760 --> 00:00:12,770
memory. We add it to some sort of a sum in R3, and then we move our

4
00:00:12,770 --> 00:00:17,420
memory pointer by four bytes and then if we have reached some end of an array,

5
00:00:17,420 --> 00:00:21,565
then we exit otherwise we loop back. So what this loop is really doing is

6
00:00:21,565 --> 00:00:25,790
it's summing up an array. Let's say we have a processor that is in order and

7
00:00:25,790 --> 00:00:29,980
executes one instruction per cycle. A load takes three cycles. So, for

8
00:00:29,980 --> 00:00:32,380
example here, because we are using the result of the load,

9
00:00:32,380 --> 00:00:38,230
there would be 2 stall cycles in between and ADD or ADDI, take 2 cycles each.

10
00:00:38,230 --> 00:00:42,470
So for example, between the ADDI and the branch, there would be 1 stall cycle.

11
00:00:42,470 --> 00:00:45,250
So the question for you is after scheduling this loop,

12
00:00:45,250 --> 00:00:49,020
but without applying any unrolling, it takes how many cycles to

13
00:00:49,020 --> 00:00:52,580
do 1000 iterations of the loop? And then after unrolling once,

14
00:00:52,580 --> 00:00:56,540
meaning we do the work of two of these iterations per new iteration, and

15
00:00:56,540 --> 00:01:01,090
then scheduling the loop, it takes how many cycles for 1000 iterations?
