1
00:00:00,000 --> 00:00:05,000
Here I've shown how to extend the language of classical planning to handle resources.

2
00:00:05,000 --> 00:00:09,000
We've added a new type of statement saying that there are resources

3
00:00:09,000 --> 00:00:11,000
and how many of each there are.

4
00:00:11,000 --> 00:00:13,000
We can say there's five nuts and four bolts,

5
00:00:13,000 --> 00:00:17,000
and we're also going to explicitly model inspectors, and we have one of them.

6
00:00:17,000 --> 00:00:21,000
Then the actions have two new types of clauses.

7
00:00:21,000 --> 00:00:26,000
The fasten action has a consume clause, saying it consumes resources

8
00:00:26,000 --> 00:00:29,000
and once it uses them, they're gone forever.

9
00:00:29,000 --> 00:00:32,000
Fastening is going to consume one nut and one bolt.

10
00:00:32,000 --> 00:00:37,000
The inspect action has a used clause, and that says it's going to use one of the resources,

11
00:00:37,000 --> 00:00:40,000
the inspector, while the action is going on.

12
00:00:40,000 --> 00:00:44,000
But once the action is completed then the inspector has returned to the pool

13
00:00:44,000 --> 00:00:47,000
and is available for use elsewhere.

14
00:00:47,000 --> 00:00:55,000
Keeping track of resources this way gets rid of that computational or exponential explosion

15
00:00:55,000 --> 99:59:59,999
of looking at different combinations by just treating all of the same resource identically.
