1
00:00:00,000 --> 00:00:05,000
The answer is it would mean that NP is a subset of BQP.

2
00:00:05,000 --> 00:00:07,000
It wouldn't mean that RSA is secure.

3
00:00:07,000 --> 00:00:10,000
In fact, we know because of Shor's algorithm,

4
00:00:10,000 --> 00:00:12,000
if someone can build a sufficiently large quantum computer,

5
00:00:12,000 --> 00:00:14,000
they would be able to break RSA.

6
00:00:14,000 --> 00:00:18,000
But it would increase our confidence, because it would put factoring

7
00:00:18,000 --> 00:00:23,000
in the class of problems that are believed to be hard to solve in polynomial time

8
00:00:23,000 --> 00:00:25,000
as long as P is not equal to NP.

9
00:00:25,000 --> 00:00:28,000
If it's also showing that P is not equal to NP,

10
00:00:28,000 --> 00:00:32,000
then this would mean that there is not any polynomial time solution for factoring

11
00:00:32,000 --> 00:00:34,000
with a classical computer.

12
00:00:34,000 --> 00:00:37,000
That would greatly increase our confidence that RSA is secure.

13
00:00:37,000 --> 00:00:42,000
To see why this is the case, we can think about how complexity classes as sets of problems.

14
00:00:42,000 --> 00:00:45,000
That makes the green circle the class NP.

15
00:00:45,000 --> 00:00:54,000
We have the class BQP, which is not known whether it's a subset of NP.

16
00:00:54,000 --> 00:00:58,000
We have the problem factoring, and we know factoring is somewhere in this circle.

17
00:00:58,000 --> 00:01:01,000
The reason we know factoring is NP is we have solutions

18
00:01:01,000 --> 00:01:04,000
that solve it in non-deterministic polynomial time.

19
00:01:04,000 --> 00:01:08,000
Even the brute force solution, if we could execute all those passed at once,

20
00:01:08,000 --> 00:01:10,000
would solve it in polynomial time.

21
00:01:10,000 --> 00:01:15,000
The other way to see that it's an NP is there's an easy way to check if the answer is correct.

22
00:01:15,000 --> 00:01:17,000
That's just multiplication.

23
00:01:17,000 --> 00:01:21,000
That's enough to know that factoring is definitely within the NP circle.

24
00:01:21,000 --> 00:01:24,000
We also know that it's within BQP.

25
00:01:24,000 --> 00:01:30,000
If it's known to be NP hard, that would mean it's as hard as the hardest problem in NP.

26
00:01:30,000 --> 00:01:36,000
It's also known to be in BQP, so that would mean that we'd have to squish--

27
00:01:36,000 --> 00:01:39,000
everything in the circle would now be inside BQP,

28
00:01:39,000 --> 00:01:44,000
because there is no problem that would be harder than factoring in NP.

29
00:01:44,000 --> 00:01:47,000
I hope those of you who haven't yet studied the theory of computation

30
00:01:47,000 --> 00:01:52,000
will forgive the full excursion, but this is a really important point to understand

31
00:01:52,000 --> 99:59:59,999
what the security of RSA relies on--these assumptions about problems being hard.
