1
00:00:00,570 --> 00:00:03,750
Query method returns a cursor
which is exactly the same

2
00:00:03,750 --> 00:00:07,160
object returned by
Android SQLite database class.

3
00:00:07,160 --> 00:00:12,035
So, in the on post execute method you
know have access to a cursor object.

4
00:00:12,035 --> 00:00:15,794
Cursors are iterators that provide
read/write access to the data of

5
00:00:15,794 --> 00:00:17,719
a content provider.

6
00:00:17,719 --> 00:00:20,900
The data is in a tabular
format as shown here.

7
00:00:20,900 --> 00:00:23,207
If you haven't worked
with cursors before,

8
00:00:23,207 --> 00:00:27,580
you can head over to the SQL databases
lesson which is linked below.

9
00:00:27,579 --> 00:00:32,207
For the data in this database,
there are only three columns,

10
00:00:32,207 --> 00:00:34,439
Word, Definition and _ID.

11
00:00:34,439 --> 00:00:37,915
I've also only drawn out a few rows so
this data looks manageable.

12
00:00:37,915 --> 00:00:40,951
But what if your database
had hundreds of rows and

13
00:00:40,951 --> 00:00:45,609
what if each term had 20 columns
of data associated with it?

14
00:00:45,609 --> 00:00:49,847
It can be costly to get all of this
information if the database is hundreds

15
00:00:49,847 --> 00:00:51,875
of rows long and has 20 columns.

16
00:00:51,875 --> 00:00:54,155
And that's where these
parameters come in.

17
00:00:54,155 --> 00:00:56,768
These null parameters
when they are not null,

18
00:00:56,768 --> 00:00:59,786
relate to what is known as
the projection selection,

19
00:00:59,786 --> 00:01:04,954
selection arguments, and sort order of
the data returned by the query function.

20
00:01:04,954 --> 00:01:09,067
These arguments mirror the different
parts of a query statement in SQL.

21
00:01:09,067 --> 00:01:12,078
A projection in SQL is used
to narrow down the number

22
00:01:12,078 --> 00:01:15,099
of columns returned such
as only getting the Word.

23
00:01:16,150 --> 00:01:19,040
A selection along with
the selection arguments are used

24
00:01:19,040 --> 00:01:22,493
to narrow down the number of rows
returned based on some criteria.

25
00:01:22,492 --> 00:01:26,354
For example, only selecting terms
that start with the letter a, and

26
00:01:26,355 --> 00:01:29,939
the sort order determines the order
you get the data back in.

27
00:01:29,939 --> 00:01:31,754
For example, sorting alphabetically.

28
00:01:31,754 --> 00:01:36,375
In general, when you pass in null, it
means no sorting, and grab everything.

29
00:01:36,376 --> 00:01:39,694
If you want to see code examples
of how to use these constraints,

30
00:01:39,694 --> 00:01:40,927
check the notes below.

31
00:01:40,927 --> 00:01:43,006
But for your toy app,
you won't need these,

32
00:01:43,006 --> 00:01:46,739
because you'll be working with all of
the information in the content provider.

