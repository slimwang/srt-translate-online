1
00:00:00,290 --> 00:00:02,590
All right, let's talk about the different task queues and

2
00:00:02,590 --> 00:00:05,070
start off with the push queue which is the most

3
00:00:05,070 --> 00:00:08,290
common one. The execution of push queues are managed by

4
00:00:08,290 --> 00:00:12,330
App Engine itself. This means that App Engine has worker threads

5
00:00:12,330 --> 00:00:15,860
that scan these queues and pick up tasks. These threads

6
00:00:15,860 --> 00:00:18,400
then call a URL that you have specified when you

7
00:00:18,400 --> 00:00:21,160
insert the task in the queue. This means that the

8
00:00:21,160 --> 00:00:25,980
execution is broken out from the HTTP request response flow since

9
00:00:25,980 --> 00:00:29,610
App Engine provide the threads to execute the tasks.

10
00:00:29,610 --> 00:00:31,900
But the code used to process each task is still

11
00:00:31,900 --> 00:00:34,700
provided by you, since you provide the URL that

12
00:00:34,700 --> 00:00:37,680
the worker threads call. The best of two worlds, a

13
00:00:37,680 --> 00:00:41,130
generic execution methodology,. That works with code that you

14
00:00:41,130 --> 00:00:44,710
write. So the worker thread picks up task by task

15
00:00:44,710 --> 00:00:47,650
and calls your url for each of them. And this

16
00:00:47,650 --> 00:00:51,050
behavior continues for all the tasks in the queue until

17
00:00:51,050 --> 00:00:55,240
the queue is empty. By default, the maximum execution duration

18
00:00:55,240 --> 00:00:57,770
for a task is ten minutes. It is of course up

19
00:00:57,770 --> 00:01:00,300
to you when you develop the application to split up

20
00:01:00,300 --> 00:01:03,460
the work into tasks that can be completed within this time,

21
00:01:03,460 --> 00:01:07,310
for example 100 mails each. There are many different configuration

22
00:01:07,310 --> 00:01:10,030
options for queues in the following screen, we will look at

23
00:01:10,030 --> 00:01:12,610
some of them. First to note is that the queues of

24
00:01:12,610 --> 00:01:16,190
the find in the queue configuration file when you do development.

25
00:01:16,190 --> 00:01:19,460
All queues have a queue name. For all applications,

26
00:01:19,460 --> 00:01:22,260
half engine order provides a default queue with the name

27
00:01:22,260 --> 00:01:25,720
default. This queue can be used without adding anything to

28
00:01:25,720 --> 00:01:28,640
the queue configuration file but you may want to change

29
00:01:28,640 --> 00:01:30,820
its default options, in which case you need to

30
00:01:30,820 --> 00:01:33,820
define it in the file. Other things you can configure

31
00:01:33,820 --> 00:01:38,090
are the performance parameters such as, the rate of processing,

32
00:01:38,090 --> 00:01:41,460
the maximum rate in case of traffic peaks. The bucket

33
00:01:41,460 --> 00:01:44,620
size and the maximum number of concurrent tasks that can

34
00:01:44,620 --> 00:01:47,780
be executed. There are also a lot of parameters surrounding

35
00:01:47,780 --> 00:01:50,870
error management. So now we've talked about how to define

36
00:01:50,870 --> 00:01:54,470
a queue. Let's finish this part by looking at how to

37
00:01:54,470 --> 00:01:56,710
create a task and assign it to a queue for

38
00:01:56,710 --> 00:02:00,000
execution. The first thing you do is get the queue by

39
00:02:00,000 --> 00:02:02,560
the queue name then you create the task and set

40
00:02:02,560 --> 00:02:06,550
options such as the task name, the url to process the

41
00:02:06,550 --> 00:02:09,930
task, another parameter such as performance and retry

42
00:02:09,930 --> 00:02:13,280
options and finally you add the task to the

43
00:02:13,280 --> 00:02:16,450
queue for execution. Finally, it is important that you

44
00:02:16,450 --> 00:02:19,990
to protect the URL so only administrators can access

45
00:02:19,990 --> 00:02:23,350
them through the permission settings. You don't want external

46
00:02:23,350 --> 00:02:26,490
users to be able to execute your task logic

47
00:02:26,490 --> 00:02:29,880
should they get ahold of these URL's. That was

48
00:02:29,880 --> 00:02:32,470
a lot of theory, but that's it for now.

49
00:02:32,470 --> 00:02:34,820
Now the time is come for you to do some work because we

50
00:02:34,820 --> 00:02:38,740
have an exercise coming up where you will use push queues. Good luck.
