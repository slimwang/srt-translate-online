1
00:00:00,525 --> 00:00:04,965
Parness' other solution is a little bit more subtle.

2
00:00:04,965 --> 00:00:08,500
Now, in this case we're going to coordinate the communication between

3
00:00:08,500 --> 00:00:12,640
the components using a technique called registration broadcast.

4
00:00:12,640 --> 00:00:17,260
Components requiring services which, we're going to call clients, express

5
00:00:17,260 --> 00:00:22,460
interest in state changes in components providing them which we'll call servers.

6
00:00:22,460 --> 00:00:27,730
And that requesting notification is called a registration process.

7
00:00:27,730 --> 00:00:31,340
When a server component announces that something,

8
00:00:31,340 --> 00:00:34,360
detects that something has been changed and announces it, it's going to

9
00:00:34,360 --> 00:00:39,240
announce it to all the registered clients and that's going to be broadcast.

10
00:00:39,240 --> 00:00:43,700
In this particular approach, servers don't know the identities of the clients.

11
00:00:43,700 --> 00:00:44,700
The clients called them and

12
00:00:44,700 --> 00:00:48,160
said, call me back, but I don't know who you are that I'm calling.

13
00:00:48,160 --> 00:00:51,460
And the uni, unit of notification here is the event.

14
00:00:51,460 --> 00:00:54,240
We have essentially the same components as before,

15
00:00:54,240 --> 00:00:58,020
it's just that their mode of interaction has changed, and, and

16
00:00:58,020 --> 00:01:01,370
is now implicit invocation based upon something happening.
