1
00:00:00,190 --> 00:00:03,596
An additional example of doing this
kind of projector calibration,

2
00:00:03,596 --> 00:00:06,178
in this instance with
a smaller object in the scene,

3
00:00:06,178 --> 00:00:09,642
where you want to actually display
the information from a projector,

4
00:00:09,642 --> 00:00:11,305
is showcased in this video here.

5
00:00:11,305 --> 00:00:14,545
>> Hello, I'm here to talk to you
a little bit about our system for

6
00:00:14,545 --> 00:00:17,080
automatic projector calibration.

7
00:00:17,080 --> 00:00:20,120
The basic problem we're trying to
solve is the task where trying to fit

8
00:00:20,120 --> 00:00:23,920
a projected image perfectly onto
a target surface such as this.

9
00:00:23,920 --> 00:00:27,630
Typically that requires a screen to be
directly in front of the projector, and

10
00:00:27,630 --> 00:00:30,400
at a very specific orientation,
to get an undistorted image.

11
00:00:30,400 --> 00:00:34,690
But what we would like to do is be able
to place the screen in any location

12
00:00:34,690 --> 00:00:39,340
that's convenient, and then calibrate
the projector onto the target surface.

13
00:00:39,340 --> 00:00:42,810
To demonstrate our system I
have an unmodified projector,

14
00:00:42,810 --> 00:00:46,420
a computer beneath the table,
and this target surface.

15
00:00:46,420 --> 00:00:47,890
If I turn this surface over,

16
00:00:47,890 --> 00:00:51,020
you can see that we've implemented
it with some electronics.

17
00:00:51,020 --> 00:00:54,480
What we have here are optical fibers
that channel light energy from each

18
00:00:54,480 --> 00:00:59,050
corner of the screen, to an electronics
package containing four optical sensors

19
00:00:59,050 --> 00:01:01,360
and a USB connection to the PC.

20
00:01:01,360 --> 00:01:04,629
When I turn the screen back over you can
see that there is no visual evidence

21
00:01:04,629 --> 00:01:05,260
of the fibers.

22
00:01:05,260 --> 00:01:08,480
The white surface acts
to hide the fibers and

23
00:01:08,480 --> 00:01:12,360
also provides a light diffuser which
improves calibration reliability.

24
00:01:13,390 --> 00:01:16,640
To calibrate onto the target, I can
simply place it in the projection area,

25
00:01:16,640 --> 00:01:20,740
and then project a series of
great coded binary patterns.

26
00:01:20,740 --> 00:01:24,560
These patterns uniquely identify
every pixel in the projection screen,

27
00:01:24,560 --> 00:01:26,740
allowing us to discover
the location of each fiber.

28
00:01:26,740 --> 00:01:31,360
We can then use this information
to project a corrected image.

29
00:01:31,360 --> 00:01:35,580
Here in this close-up, you can see that
the quality of calibration is very high.

30
00:01:35,580 --> 00:01:39,040
The discovered location of each fiber is
actually closest to the nearest pixel.

31
00:01:40,180 --> 00:01:42,990
The prototype shown here
is capable of performing

32
00:01:42,990 --> 00:01:45,610
the calibration in just over one second.

33
00:01:45,610 --> 00:01:49,134
We're currently working on techniques
that will hopefully allow us to achieve

34
00:01:49,134 --> 00:01:50,088
interactive rates.

35
00:01:53,973 --> 00:01:57,006
Here's what the calibration process
looks like from the perspective of

36
00:01:57,006 --> 00:01:57,772
the target.

37
00:01:57,772 --> 00:02:00,870
You can see the irregular
flashing from the projector.

38
00:02:00,870 --> 00:02:03,579
This pattern of flashes indicates
the location of the camera in

39
00:02:03,579 --> 00:02:05,021
the projector's screen space.

40
00:02:08,102 --> 00:02:10,213
To illustrate the robustness
of this technique,

41
00:02:10,213 --> 00:02:13,730
we will gradually decrease
the projection angle of the calibration.

42
00:02:13,730 --> 00:02:16,720
We have found that the calibration
continues to work reliably,

43
00:02:16,720 --> 00:02:19,990
even though the projection
angle is less than two degrees.

44
00:02:19,990 --> 00:02:21,450
In this last calibration,

45
00:02:21,450 --> 00:02:24,790
the screen is actually facing
slightly away from the projector.

46
00:02:24,790 --> 00:02:28,360
The expansion of the projection frustum
sufficient for this technique to work.

47
00:02:31,310 --> 00:02:33,960
We can also fold the optical
path using a mirror,

48
00:02:33,960 --> 00:02:36,370
with no effect on
the calibration process.

49
00:02:36,370 --> 00:02:39,240
The image will be automatical reversed,
since the orientation of

50
00:02:39,240 --> 00:02:41,859
the image is determined by
the screen and not the projector.

51
00:02:44,380 --> 00:02:46,850
This wire frame test pattern
that I've been using

52
00:02:46,850 --> 00:02:50,180
is mainly to make it easy to
see the quality of calibration.

53
00:02:50,180 --> 00:02:51,350
By using open Gl or

54
00:02:51,350 --> 00:02:55,130
Direct X, we can warp real time video
on low cost commodity hardware.

55
00:02:56,950 --> 00:03:00,360
We also have an implementation that
allows us to work the active Windows

56
00:03:00,360 --> 00:03:03,270
desktop creating a fully usable,
calibrated display.

57
00:03:05,740 --> 00:03:09,680
IN this board, we've added a total of
six sensors, one in each corner, and

58
00:03:09,680 --> 00:03:11,150
two across the middle.

59
00:03:11,150 --> 00:03:14,940
This allows us to calibrate two
projectors that are placed side by side,

60
00:03:14,940 --> 00:03:18,350
creating a method for automatically
stitching multiple projectors.

61
00:03:18,350 --> 00:03:20,430
We calibrate each
projector individually, and

62
00:03:20,430 --> 00:03:22,008
then blend the two images together.

63
00:03:27,212 --> 00:03:29,870
>> So the previous method showed
us how to do the same thing here.

64
00:03:29,870 --> 00:03:33,690
The big difference here is in the
previous system we had a camera looking

65
00:03:33,690 --> 00:03:34,550
at the scene.

66
00:03:34,550 --> 00:03:37,740
In this case they've
actually improvised and

67
00:03:37,740 --> 00:03:43,040
put a small fiber sensors at,
in this instance six locations,

68
00:03:43,040 --> 00:03:44,870
of course in the previous one
they just put four of them.

69
00:03:45,920 --> 00:03:49,500
So in essence they basically
have is a one pixel sensor.

70
00:03:49,500 --> 00:03:50,740
Just that single pixel and

71
00:03:50,740 --> 00:03:54,350
then the grid pattern that actually is
shown on the surface allows us to kind

72
00:03:54,350 --> 00:03:58,630
of uniquely identify exactly what
each one of those sensors is seeing.

73
00:03:58,630 --> 00:04:01,719
And that allows him to calibrate for
this kind of information.

74
00:04:01,719 --> 00:04:05,629
A really, nice, unique, simple example,
where I can, still using a projector and

75
00:04:05,629 --> 00:04:07,492
a camera, but in a much simpler manner.

76
00:04:07,492 --> 00:04:12,220
And again, the camera is basically
a simple slow lens one pixel camera.

77
00:04:12,220 --> 00:04:13,890
And of course they use multiple ones
