1
00:00:00,230 --> 00:00:03,080
So now, let me introduce you to
the computer vision paper that

2
00:00:03,080 --> 00:00:04,840
sort of motivated us
all to pay attention.

3
00:00:04,840 --> 00:00:07,420
And, that was this paper by
Paul Viola and Mike Jones.

4
00:00:07,420 --> 00:00:09,817
It was called Rapid Object Detection
using a Boosted Cascade

5
00:00:09,817 --> 00:00:11,702
of Simple Features,
that objects were faces.

6
00:00:11,702 --> 00:00:14,645
And, that's part of what
caught everybody's attention,

7
00:00:14,645 --> 00:00:17,427
because everybody's been looking for
faces for a long time.

8
00:00:17,427 --> 00:00:19,890
This was in CVPR 2001.

9
00:00:19,890 --> 00:00:22,680
I will tell you that I was at
a presentation that Paul gave.

10
00:00:22,680 --> 00:00:25,020
I think it's actually even
before this was published,

11
00:00:25,020 --> 00:00:28,140
where he pulls out a camera,
connected to his laptop, sweep,

12
00:00:28,140 --> 00:00:33,750
sweeps it around the, the, audience,
and it finds all the faces.

13
00:00:33,750 --> 00:00:37,350
And, this is on a generic laptop,
wasn't very complicated.

14
00:00:37,350 --> 00:00:40,460
And, it was it wasn't doing training,
he'd have trained it before.

15
00:00:40,460 --> 00:00:45,240
Training is expensive,
but we all said oh, and

16
00:00:45,240 --> 00:00:46,660
from then on we paid attention to Paul.

17
00:00:46,660 --> 00:00:48,210
Not that we didn't pay
attention to him before, but

18
00:00:48,210 --> 00:00:50,202
this was, this was a really big deal.

19
00:00:50,202 --> 00:00:53,150
All right, so
there were several good ideas,

20
00:00:53,150 --> 00:00:56,120
in fact,
better than good ideas in this paper.

21
00:00:56,120 --> 00:00:59,332
First one,
which didn't seem like such a great

22
00:00:59,332 --> 00:01:04,229
idea until we saw how easy it was to
do it was to use rectangular brightness

23
00:01:04,229 --> 00:01:08,100
patterns as the features that
you're going to compute.

24
00:01:08,100 --> 00:01:10,850
And, let me show you what,
what we're talking about here.

25
00:01:10,850 --> 00:01:13,620
All right, so
here's some rectangular filters.

26
00:01:13,620 --> 00:01:17,540
And, a rectangular filter, for
example, this one here, right,

27
00:01:17,540 --> 00:01:20,460
just means that you take, see that's
pli, its white here and black there.

28
00:01:20,460 --> 00:01:23,850
So, you just sum up all
the pixels in that area, and

29
00:01:23,850 --> 00:01:26,950
you subtract off all the sum
of the pixels of that area.

30
00:01:26,950 --> 00:01:30,950
So, you can think of it as a large
size kind of a gradient, right?

31
00:01:30,950 --> 00:01:33,650
So, there are ones that would
compare horizontal, you know,

32
00:01:33,650 --> 00:01:35,620
the pluses over here, and
the minuses over there.

33
00:01:35,620 --> 00:01:38,480
There were ones that were vertical,
minus here, plus there.

34
00:01:38,480 --> 00:01:39,810
They were of different shapes.

35
00:01:39,810 --> 00:01:43,710
They also had some three way ones
where you'd have plus, minus, and

36
00:01:43,710 --> 00:01:44,950
plus like that.

37
00:01:44,950 --> 00:01:47,530
And then there were these cross ones
where you have plus like that, and

38
00:01:47,530 --> 00:01:48,610
minus like that.

39
00:01:48,610 --> 00:01:51,920
Just a whole bunch of them, and then
those would be applied to the image.

40
00:01:51,920 --> 00:01:55,546
And here, we're showing you
two different features, again,

41
00:01:55,546 --> 00:01:57,432
comes from the paper, right here.

42
00:01:57,432 --> 00:01:59,704
And, the idea is that you might put
it down here in the picture, and

43
00:01:59,704 --> 00:02:01,090
put it down here on the picture.

44
00:02:01,090 --> 00:02:06,160
It just looks at the difference in
average intensity of adjacent regions,

45
00:02:06,160 --> 00:02:09,900
or three of them, two, you know,
three regions in the face.

46
00:02:09,900 --> 00:02:13,660
Now, the reason this turned
out to be such a great idea,

47
00:02:13,660 --> 00:02:16,620
is that you can compute this thing very,
these things very,

48
00:02:16,620 --> 00:02:20,840
very quickly if you're going to
compute a lot of them.

49
00:02:20,840 --> 00:02:24,030
And, the idea was to use something
called the integral image.

50
00:02:24,030 --> 00:02:24,830
And, this image here,

51
00:02:24,830 --> 00:02:27,490
this is the integral image,
and I'll explain what it is.

52
00:02:27,490 --> 00:02:30,300
The integral image works the following.

53
00:02:30,300 --> 00:02:36,470
The value at some integral image,
x, y, would be the sum of

54
00:02:36,470 --> 00:02:43,330
all the pixels in the top left-hand
corner behind it in the image.

55
00:02:43,330 --> 00:02:44,390
Okay?
So,you go over to the, so

56
00:02:44,390 --> 00:02:47,590
if you have my original image here,
the integral image

57
00:02:47,590 --> 00:02:52,000
is the sum of all of these pixels, and
you just put its value right there.

58
00:02:52,000 --> 00:02:53,090
Okay?
That's the integral image.

59
00:02:54,210 --> 00:02:56,690
Now, you might ask,
why is that so important?

60
00:02:56,690 --> 00:02:58,390
>> Why is that so important?

61
00:02:58,390 --> 00:02:59,000
>> Very good.

62
00:02:59,000 --> 00:02:59,700
So, I'll show you.
