1
00:00:00,550 --> 00:00:01,800
Don't forget the semicolon.

2
00:00:02,830 --> 00:00:07,100
JavaScript uses semicolons to signal the end of statements.

3
00:00:07,100 --> 00:00:10,760
Try console.log without the semicolon at the end and

4
00:00:10,760 --> 00:00:13,600
you'll see, that it still works.

5
00:00:13,600 --> 00:00:16,920
Most JavaScript interpreters are smart enough to guess when you

6
00:00:16,920 --> 00:00:18,240
need a semicolon.

7
00:00:18,240 --> 00:00:21,750
But they aren't perfect, so you shouldn't leave things to chance.

8
00:00:21,750 --> 00:00:23,620
>> Yeah, that's good to know.

9
00:00:23,620 --> 00:00:26,770
You know, in Python you don't have to use semicolons at all.

10
00:00:26,770 --> 00:00:32,280
When I was learning JavaScript, I had to keep reminding myself to include one.

11
00:00:32,280 --> 00:00:33,880
>> Yeah, that's pretty common.

12
00:00:33,880 --> 00:00:35,930
What about this undefined line here?

13
00:00:37,110 --> 00:00:41,630
>> It simply means that the console.log command returns undefined.

14
00:00:41,630 --> 00:00:45,900
Telling us that console.log doesn't create any new data we could save.

15
00:00:45,900 --> 00:00:46,700
This makes sense,

16
00:00:46,700 --> 00:00:51,300
because we only want to use console.log to print debugging information.

17
00:00:51,300 --> 00:00:56,150
>> For example, if I had a property like document.URL, every turn to

18
00:00:56,150 --> 00:00:58,340
string as the page's URL.

19
00:00:58,340 --> 00:01:03,820
>> Yeah, we can see it in closed in quotes telling us that we've got a string.
