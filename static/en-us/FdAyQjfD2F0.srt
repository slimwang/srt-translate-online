1
00:00:00,690 --> 00:00:03,320
So here's a diagram for
question number 1.

2
00:00:03,320 --> 00:00:06,880
This is what the word class will look
like after we make the modifications for

3
00:00:06,880 --> 00:00:09,700
it to be able to hold the audio
resource id for each word.

4
00:00:09,700 --> 00:00:13,910
And with that, we can create an array
list of what objects for each category.

5
00:00:13,910 --> 00:00:17,500
Now into the second question,
when an item in the list is clicked on

6
00:00:17,500 --> 00:00:19,555
then the onItemClick
listener gets triggered and

7
00:00:19,555 --> 00:00:22,560
the onItemClick() method gets executed.

8
00:00:22,560 --> 00:00:25,180
So this method has
four different inputs.

9
00:00:25,180 --> 00:00:28,540
So your code within the onItemClick()
method can take advantage of

10
00:00:28,540 --> 00:00:30,180
one of these variables.

11
00:00:30,180 --> 00:00:33,090
Now if we look at the official Android
documentation that we showed you earlier

12
00:00:33,090 --> 00:00:34,790
of the onItemClick() method,

13
00:00:34,790 --> 00:00:36,949
there's a description of
what each parameter means.

14
00:00:38,200 --> 00:00:40,940
So let's walk through each of
these four answer choices.

15
00:00:40,940 --> 00:00:44,120
For the first answer, adapterView,
that's simply a reference to

16
00:00:44,120 --> 00:00:46,700
the listView and
that's not what we're looking for here.

17
00:00:46,700 --> 00:00:50,010
So the second choice view is the list
item view that we clicked on.

18
00:00:50,010 --> 00:00:51,830
So this is almost what we want.

19
00:00:51,830 --> 00:00:54,160
Now we can find the textView
inside the list item lay out,

20
00:00:54,160 --> 00:00:58,200
and then call the getText method to
get the desired word as a string.

21
00:00:58,200 --> 00:01:01,090
But simply having a string wouldn't
help us find the audio file associated

22
00:01:01,090 --> 00:01:02,150
with each word.

23
00:01:02,150 --> 00:01:04,860
So this parameter is not what we need.

24
00:01:04,860 --> 00:01:08,110
Next we have position which
is the position of the item

25
00:01:08,110 --> 00:01:10,480
within the adapter's data source.

26
00:01:10,480 --> 00:01:12,480
So if the second list
item was clicked on,

27
00:01:12,480 --> 00:01:17,265
it would correspond to position 2 within
the adaptors internal list of data.

28
00:01:17,265 --> 00:01:20,000
Well, this choice position
is pretty promising because

29
00:01:20,000 --> 00:01:22,520
it leads us to the word object
within the array list, and

30
00:01:22,520 --> 00:01:25,176
from that word object we can
retrieve the audio resource ID.

31
00:01:25,176 --> 00:01:28,900
So just to be thorough,
let's look at the last option

32
00:01:28,900 --> 00:01:33,400
its last choice here ID is the row
idea of the item that we clicked on.

33
00:01:33,400 --> 00:01:38,000
Now within the adapter you can specify
the numeric ID to identify each row.

34
00:01:38,000 --> 00:01:40,690
You can also use random numbers for
each row if you want but for

35
00:01:40,690 --> 00:01:42,690
the most part,
we don't need to rely on ID.

36
00:01:42,690 --> 00:01:45,840
So, after looking through
all these answer choices,

37
00:01:45,840 --> 00:01:49,280
the best one to use here is the position
parameter because from that

38
00:01:49,280 --> 00:01:52,780
we can get the corresponding word
object from the ArrayList of words.

39
00:01:52,780 --> 00:01:55,850
And that means we can find
the correct audio resource ID and

40
00:01:55,850 --> 00:01:58,330
then configure the Media Player
object to play that audio file.
