1
00:00:00,290 --> 00:00:04,109
In the previous unit, we've worried about two object references that pointed to

2
00:00:04,109 --> 00:00:07,802
different objects. Now we're going to look at a different situation, when

3
00:00:07,802 --> 00:00:12,182
object reference doesn't point anywhere at all. Let me explain that. Over here,

4
00:00:12,182 --> 00:00:15,719
you have a situation with which you are very familiar. We have a variable that

5
00:00:15,719 --> 00:00:17,068
references an object,

6
00:00:17,068 --> 00:00:17,849
[INAUDIBLE]

7
00:00:17,849 --> 00:00:22,810
cat. Now, my favorite cat is in fact my cat, Eliza. But maybe Sarah doesn't

8
00:00:22,810 --> 00:00:27,194
like cats and her favorite wouldn't be any cat at all. That is in the variable

9
00:00:27,194 --> 00:00:32,490
her favorite, there wouldn't be any reference to any cat object. In Java, she

10
00:00:32,490 --> 00:00:37,944
denote such a reference to no object at all with the keyword null. So this

11
00:00:37,944 --> 00:00:43,164
variable here holds this special null reference. This variable here holds a

12
00:00:43,164 --> 00:00:48,341
reference to some cat object. Generally, you would use this distinction meaning

13
00:00:48,341 --> 00:00:52,495
either a reference to a specific object or a null reference if the object is

14
00:00:52,495 --> 00:00:59,470
optional to test whether a variable is null or not. You use equal, equal and

15
00:00:59,470 --> 00:01:04,662
you test, is this reference the null reference? Now, if there is a chance that

16
00:01:04,662 --> 00:01:09,090
a object contains null. It actually is important that you make that test.

17
00:01:09,090 --> 00:01:13,640
Because if you invoke a method on a null reference, then something bad happens

18
00:01:13,640 --> 00:01:18,622
and the method called blows up. Well, it doesn't really blow up, of course. But

19
00:01:18,622 --> 00:01:23,480
it does terminate your program with a null pointer exception. It is simply

20
00:01:23,480 --> 00:01:30,010
illegal to call any method on null, don't do it. Instead, make this test first.

21
00:01:30,010 --> 00:01:33,487
I've prepared a little quiz here, where I'm going to ask you about several

22
00:01:33,487 --> 00:01:38,100
kinds of tests. So here's the situation, our intrepid reporter went to city

23
00:01:38,100 --> 00:01:42,651
hall to get a statement from the mayor. And now I'd like you to give me the

24
00:01:42,651 --> 00:01:47,196
java code to test whether the statement was one of the following. Did the mayor

25
00:01:47,196 --> 00:01:51,436
say no comment? Just type in here, what you would put inside the parentheses of

26
00:01:51,436 --> 00:01:56,278
an if statement to check for that a couple more. Did the mayor say nothing at

27
00:01:56,278 --> 00:02:01,120
all? And finally, did the reporter not manage to get a statement? Maybe he was

28
00:02:01,120 --> 00:02:05,640
stuck in traffic. So, just type in the conditions for each one of them.
