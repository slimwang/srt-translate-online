1
00:00:00,210 --> 00:00:02,100
So, what is an operating system and

2
00:00:02,100 --> 00:00:06,205
what is the operating system's role in computing systems?

3
00:00:06,205 --> 00:00:09,620
Let's start taking a look at what a computing system looks like and

4
00:00:09,620 --> 00:00:10,800
how it's used.

5
00:00:10,800 --> 00:00:14,213
Computing systems consist of a number of hardware components.

6
00:00:14,213 --> 00:00:17,137
This includes one or more processing element.

7
00:00:17,137 --> 00:00:19,134
So, processors or CPUs.

8
00:00:19,134 --> 00:00:22,652
Today, the CPUs further consist of multiple cores.

9
00:00:22,652 --> 00:00:27,736
So, a single CPU will have more than one processing element.

10
00:00:27,736 --> 00:00:31,831
And there's also memory, and there are also devices like network interconnects

11
00:00:31,831 --> 00:00:36,170
for connecting to the Internet, like your Ethernet port or your Wifi card.

12
00:00:36,170 --> 00:00:40,820
Other components include graphics processing cards, like GPUs for instance.

13
00:00:40,820 --> 00:00:46,500
And also storage devices like hard disks, SSDs, flash devices like USB drives.

14
00:00:46,500 --> 00:00:50,740
Except for in some very specific environments like certain embedded platforms or

15
00:00:50,740 --> 00:00:56,580
sensors, all of these hardware components will be used by multiple applications.

16
00:00:56,580 --> 00:00:58,100
For instance, on your laptops or

17
00:00:58,100 --> 00:01:03,570
desktops, you may currently be running a browser, a text editor, perhaps Skype.

18
00:01:03,570 --> 00:01:06,090
You may have a number of other applications.

19
00:01:06,090 --> 00:01:10,340
In data centers, server machines also run also multiple applications,

20
00:01:10,340 --> 00:01:11,310
maybe a web server,

21
00:01:11,310 --> 00:01:16,840
a database, or some computation intensive simulation, many other options.

22
00:01:16,840 --> 00:01:20,700
An operating system is the layer of systems software that

23
00:01:20,700 --> 00:01:25,160
sits between the complex hardware and all of these applications.

24
00:01:25,160 --> 00:01:29,350
There isn't one formal definition of what an operating system is.

25
00:01:29,350 --> 00:01:33,120
So instead, we will look at the role that the operating system serves and

26
00:01:33,120 --> 00:01:35,900
the functionality that it must provide.

27
00:01:35,900 --> 00:01:36,690
And in that way,

28
00:01:36,690 --> 00:01:40,770
we will try to build our understanding of what an operating system is.

29
00:01:40,770 --> 00:01:44,590
First, the operating system hides the complexities of the underlying

30
00:01:44,590 --> 00:01:49,150
hardware from both the applications, as well as the application developers.

31
00:01:49,150 --> 00:01:51,810
You don't want to worry about disk sectors or

32
00:01:51,810 --> 00:01:56,620
blocks when you're saving the output of a computation in your program.

33
00:01:56,620 --> 00:01:59,640
For instance, the operating system hides the complexities of

34
00:01:59,640 --> 00:02:05,040
the various types of storage devices, so hard disks, SSDs, USB flash.

35
00:02:05,040 --> 00:02:10,250
And it manages a higher level abstraction of file, and it provides some

36
00:02:10,250 --> 00:02:14,870
number of operations, like reads and writes, that you can perform on that file.

37
00:02:14,870 --> 00:02:19,360
Similarly, for a web server application, when you're accepting and

38
00:02:19,360 --> 00:02:24,070
responding to end user requests, you don't want to think about the bits and

39
00:02:24,070 --> 00:02:28,990
the packets that you need to compose when performing that communication.

40
00:02:28,990 --> 00:02:32,947
Instead, the operating system abstracts the networking resource.

41
00:02:32,947 --> 00:02:38,050
It provides a higher level abstraction that is typically called a socket.

42
00:02:38,050 --> 00:02:41,500
And then it provides some services to send and

43
00:02:41,500 --> 00:02:44,770
receive packets or data from that socket.

44
00:02:44,770 --> 00:02:48,950
Furthermore, the operating system not only hides the hardware complexity, but

45
00:02:48,950 --> 00:02:52,550
it actually also manages the underlying hardware on behalf of

46
00:02:52,550 --> 00:02:54,660
the executing applications.

47
00:02:54,660 --> 00:02:57,430
For instance, the operating system decides how many and

48
00:02:57,430 --> 00:03:01,230
which one of these resources will the application use.

49
00:03:01,230 --> 00:03:04,460
For instance, the operating system allocates memory for

50
00:03:04,460 --> 00:03:07,520
these applications, and also is the one that

51
00:03:07,520 --> 00:03:12,320
schedules these applications on to the CPU that can execute them.

52
00:03:12,320 --> 00:03:15,180
It also controls access of these applications to

53
00:03:15,180 --> 00:03:17,360
the various devices in the system.

54
00:03:17,360 --> 00:03:21,930
So overall, it's responsible for all types of resource allocations and

55
00:03:21,930 --> 00:03:25,620
resource management tasks on behalf of these applications.

56
00:03:25,620 --> 00:03:30,320
Finally, when multiple applications are co-running on the same hardware,

57
00:03:30,320 --> 00:03:33,540
the operating system must ensure that each of

58
00:03:33,540 --> 00:03:37,130
them can make adequate progress and that they don't hurt each other.

59
00:03:37,130 --> 00:03:40,400
So, it will provide isolation and protection.

60
00:03:40,400 --> 00:03:43,394
For instance, the operating system will allocate to

61
00:03:43,394 --> 00:03:47,799
different applications different parts of the underlying physical memory.

62
00:03:47,799 --> 00:03:51,409
And it will also make sure that unless explicitly intended,

63
00:03:51,409 --> 00:03:55,120
applications don't access each other's memory.

64
00:03:55,120 --> 00:03:59,240
This is important both from a protection perspective so they don't read each

65
00:03:59,240 --> 00:04:03,750
other data, and it's also important from an isolation perspective so

66
00:04:03,750 --> 00:04:07,350
that they don't end up overwriting each other's memory.

67
00:04:07,350 --> 00:04:11,250
Note that these types of mechanisms are important even in environments that

68
00:04:11,250 --> 00:04:15,520
were traditionally considered embedded platforms like mobile phones,

69
00:04:15,520 --> 00:04:18,850
where hardware was typically running just one application.

70
00:04:18,850 --> 00:04:19,470
Think about it.

71
00:04:19,470 --> 00:04:23,660
How many applications do you currently have running on your smartphone?

72
00:04:23,660 --> 00:04:26,950
On my phone, I have a browser, I have Skype, I have Facebook.

73
00:04:26,950 --> 00:04:30,280
And I still have that one key application, and

74
00:04:30,280 --> 00:04:33,790
that is the actual phone, making phone calls and receiving phone calls.
