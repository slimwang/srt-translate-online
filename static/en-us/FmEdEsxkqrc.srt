1
00:00:00,290 --> 00:00:04,450
Different dependencies may be needed at
different times in the build process.

2
00:00:04,450 --> 00:00:08,090
Logically related dependencies
are grouped into configurations.

3
00:00:08,090 --> 00:00:11,850
So far, we've be adding dependencies
to the compile configuration.

4
00:00:11,850 --> 00:00:14,250
But the Java plugin creates
other configurations as well,

5
00:00:14,250 --> 00:00:17,730
such as runtime, test compile,
and test runtime.

6
00:00:17,730 --> 00:00:20,870
The Java plugin ensures that the
specified dependencies are on the class

7
00:00:20,870 --> 00:00:22,690
path when the corresponding
tasks are run.

8
00:00:23,900 --> 00:00:27,090
Dependencies can be added to any of
these configurations by simply using

9
00:00:27,090 --> 00:00:30,820
the name of the configuration
followed by the dependency notation.

10
00:00:30,820 --> 00:00:34,880
Here we have an added dependency
to the test compile configuration.

11
00:00:34,880 --> 00:00:38,170
This dependency will only be
available from our test code.

12
00:00:38,170 --> 00:00:41,340
Configurations can extend
to other configurations.

13
00:00:41,340 --> 00:00:45,310
For example, test compile extends
from the compiled configuration.

14
00:00:45,310 --> 00:00:48,440
Which means that all of the dependencies
in the compile configuration

15
00:00:48,440 --> 00:00:51,300
are automatically
included in test compile.

16
00:00:51,300 --> 00:00:54,730
We can verify this by
generating a dependency report.

17
00:00:54,730 --> 00:00:58,160
Here we see that the compile
configuration contains a dependency on

18
00:00:58,160 --> 00:00:59,480
commons logging.

19
00:00:59,480 --> 00:01:02,870
But the test compile configuration
contains both the dependency on commons

20
00:01:02,870 --> 00:01:07,130
logging and on JUnit, and
on one of its transitive dependencies.

21
00:01:07,130 --> 00:01:10,050
If you have a more advanced build
with dependencies that don't fit

22
00:01:10,050 --> 00:01:12,880
into a configuration
defined by the Java plugin.

23
00:01:12,880 --> 00:01:15,310
You can create a custom configuration.

24
00:01:15,310 --> 00:01:18,970
Just add the name of your configuration
to the configuration script block,

25
00:01:18,970 --> 00:01:22,170
we can then assign dependencies
to that custom configuration.

26
00:01:22,170 --> 00:01:25,370
We can now run a dependency report
to see the new dependencies

27
00:01:25,370 --> 00:01:26,710
added to the Project.

28
00:01:26,710 --> 00:01:29,830
And if we scroll up we find
our custom configuration

29
00:01:29,830 --> 00:01:31,840
along with the dependency we declared.

30
00:01:31,840 --> 00:01:35,400
Under the hood configurations
are really just fancy file collections.

31
00:01:35,400 --> 00:01:38,420
And can be used anywhere a file
collection can be used such as in

32
00:01:38,420 --> 00:01:39,960
a copy task.

33
00:01:39,960 --> 00:01:43,300
This is useful if we want to download
some dependencies from a remote

34
00:01:43,300 --> 00:01:45,360
repository and
bundle them in our project somehow.
