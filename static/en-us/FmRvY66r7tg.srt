1
00:00:00,008 --> 00:00:02,940
All righ, t so now, we have got these
two Bellman operators, B1 and B2.

2
00:00:02,940 --> 00:00:06,700
That each one is associated
with the a fixed policy.

3
00:00:06,700 --> 00:00:10,230
So B1 makes an update,
essentially following Pi 1.

4
00:00:10,230 --> 00:00:12,480
And B2 makes an update following Pi 2.

5
00:00:12,480 --> 00:00:16,230
So we know a bunch of
things about these updates.

6
00:00:16,230 --> 00:00:22,220
So for example, we know that if we
apply B1 to two value functions.

7
00:00:22,220 --> 00:00:24,690
What's going to happen to
the value functions as a result?

8
00:00:24,690 --> 00:00:26,160
>> They will not move further apart.

9
00:00:26,160 --> 00:00:27,810
>> By a factor of at least Gamma.

10
00:00:27,810 --> 00:00:28,920
>> Unless, they're the same one.

11
00:00:28,920 --> 00:00:30,490
Right?
If they're already perfectly together,

12
00:00:30,490 --> 00:00:31,960
then they won't move closer together.

13
00:00:31,960 --> 00:00:33,090
>> Because they were at a fixed point.

14
00:00:33,090 --> 00:00:34,953
But then their distance is 0.

15
00:00:34,953 --> 00:00:39,410
And we do get gamma closer to zero,
because 0 times Gamma is still 0.

16
00:00:39,410 --> 00:00:40,040
>> Sure.

17
00:00:40,040 --> 00:00:41,510
So that's true, but I'm just saying,

18
00:00:41,510 --> 00:00:43,640
it's not that they always
get closer together.

19
00:00:43,640 --> 00:00:44,560
>> Yeah, okay, all right.

20
00:00:44,560 --> 00:00:45,470
That's fair.

21
00:00:45,470 --> 00:00:46,170
>> Okay.
>> That's fair.

22
00:00:46,170 --> 00:00:49,440
If they are not on top of each other,
then they get closer together.

23
00:00:49,440 --> 00:00:50,900
And the same thing is true of B2.

24
00:00:50,900 --> 00:00:51,420
>> Yeah.
>> But

25
00:00:51,420 --> 00:00:54,160
there's some other interesting
properties of these that aren't

26
00:00:54,160 --> 00:00:56,740
necessarily true of the standard
Bellman operator, but

27
00:00:56,740 --> 00:00:59,830
they are true when we used
the fixed policy like Pi 1 or Pi 2.

28
00:00:59,830 --> 00:01:02,860
So let's step through what
some of those properties are.

29
00:01:02,860 --> 00:01:06,570
And we'll use them to show that
policy iteration behaves itself.

30
00:01:06,570 --> 00:01:08,390
>> Nice.
>> So this is the property that we

31
00:01:08,390 --> 00:01:10,730
want to show that B1 and B2 have.

32
00:01:10,730 --> 00:01:14,340
So, if we've got two value functions,
V1 and V2, not

33
00:01:14,340 --> 00:01:18,640
only if we apply these Bellman operators
to them do they get no farther apart and

34
00:01:18,640 --> 00:01:21,150
actually potentially closer together.

35
00:01:21,150 --> 00:01:24,040
But they actually keep
their same ordering.

36
00:01:24,040 --> 00:01:26,310
So let's say that V1 dominates V2.

37
00:01:26,310 --> 00:01:29,930
So V1 is bigger than or
equal to V2 at all states s.

38
00:01:29,930 --> 00:01:33,480
Then, that still is true after we've
applied Bellman operator B2 or

39
00:01:33,480 --> 00:01:34,690
Bellman operator B1.

40
00:01:34,690 --> 00:01:36,810
But we're talking about B2 right now.

41
00:01:36,810 --> 00:01:38,080
>> Okay, that makes sense and

42
00:01:38,080 --> 00:01:41,990
I think it follows immediately from
raising Thursday to the Monday power.

43
00:01:41,990 --> 00:01:43,480
>> Oh, I see.

44
00:01:43,480 --> 00:01:44,980
No, that's supposed to be theorem.

45
00:01:44,980 --> 00:01:46,030
Sorry about that.

46
00:01:46,030 --> 00:01:47,930
>> Okay
>> We don't do day of the week

47
00:01:47,930 --> 00:01:50,110
math until the next section.

48
00:01:50,110 --> 00:01:51,430
>> Okay, looking forward to that.

49
00:01:51,430 --> 00:01:53,500
>> So how would we show
something like this is true?

50
00:01:53,500 --> 00:01:57,020
The standard thing that we always seem
to do is go back to the definitions and

51
00:01:57,020 --> 00:01:58,360
just plug things through.

52
00:01:58,360 --> 00:01:59,190
And let's see what we get.

53
00:01:59,190 --> 00:02:03,600
>> Okay
>> To show that B2 V1 dominates B2 V2,

54
00:02:03,600 --> 00:02:05,740
I'll just subtract one
from the other and

55
00:02:05,740 --> 00:02:08,120
see if the result is
always non-negative.

56
00:02:08,120 --> 00:02:08,770
>> Okay.

57
00:02:08,770 --> 00:02:09,620
>> So let's do that.

58
00:02:09,620 --> 00:02:10,910
We plug in the definitions.

59
00:02:10,910 --> 00:02:12,620
And I did some cancelling here,
because it's,

60
00:02:12,620 --> 00:02:13,990
it always sort of comes out the same.

61
00:02:13,990 --> 00:02:16,950
This sort of notion that since we're
talking about the same states and

62
00:02:16,950 --> 00:02:19,520
the same actions,
these rewards are going to cancel.

63
00:02:19,520 --> 00:02:20,180
The Gammas and

64
00:02:20,180 --> 00:02:24,810
the summations and the transition
probabilities are going to factor out.

65
00:02:24,810 --> 00:02:26,440
And we're going to end
up with something, well,

66
00:02:26,440 --> 00:02:27,590
actually a lot like this.

67
00:02:27,590 --> 00:02:30,530
Gamma times the sum over all
states of the probability

68
00:02:30,530 --> 00:02:34,740
of reaching the next state times
the difference at the new state,

69
00:02:34,740 --> 00:02:37,590
s prime,
between the value functions V1 and V2.

70
00:02:37,590 --> 00:02:38,480
>> Oh, okay.
>> And what

71
00:02:38,480 --> 00:02:40,120
do we know about this quantity here?

72
00:02:40,120 --> 00:02:43,421
>> Well, we know that V1 is always
greater than or equal to V2,

73
00:02:43,421 --> 00:02:46,440
which means that V1 minus
V2 has to be non-negative.

74
00:02:46,440 --> 00:02:49,245
>> Good, and then we take a convex
combination of a bunch of

75
00:02:49,245 --> 00:02:50,110
non-negative values.

76
00:02:50,110 --> 00:02:51,820
There's no way it could become negative.

77
00:02:51,820 --> 00:02:53,386
>> Right.
>> It could be 0, I guess, but

78
00:02:53,386 --> 00:02:56,000
we know that we're greater than or
equal to 0.

79
00:02:56,000 --> 00:02:57,220
It can't be smaller than 0.

80
00:02:57,220 --> 00:02:59,450
So that gives us exactly what we need.

81
00:02:59,450 --> 00:03:05,340
That if V1 dominated V2 before,
B2 V1 dominates B2 V2 now.

82
00:03:05,340 --> 00:03:08,880
>> Nice.
And if we replaced B2 with B1.

83
00:03:08,880 --> 00:03:09,850
This would also be true.

84
00:03:09,850 --> 00:03:10,470
>> Yes.

85
00:03:10,470 --> 00:03:11,160
Exactly so.

86
00:03:11,160 --> 00:03:13,610
The only thing that we're actually using
here is that we have a fixed policy.

87
00:03:13,610 --> 00:03:15,520
It doesn't matter what the policy is.

88
00:03:15,520 --> 00:03:18,760
So B1 and B2 are the same
operators except they just differ

89
00:03:18,760 --> 00:03:20,760
as to which fixed policy they are using.

90
00:03:20,760 --> 00:03:22,320
>> Okay.
So both B1 and B2 have mono.

91
00:03:22,320 --> 00:03:22,940
That's perfect.

92
00:03:22,940 --> 00:03:23,540
>> No.

93
00:03:23,540 --> 00:03:24,850
They don't have mono.

94
00:03:24,850 --> 00:03:28,340
They are monotonic meaning this preserve
this kind of ordering property.

95
00:03:28,340 --> 00:03:32,240
Not that they have mononucleosis,
sometimes known as the kissing disease.

96
00:03:32,240 --> 00:03:33,250
>> Well, maybe where you're from.
