1
00:00:00,220 --> 00:00:04,019
Now in the previous lecture, I talked about how we can actually mathematically

2
00:00:04,019 --> 00:00:07,950
represent the whole concept of smoothing applied to images.

3
00:00:07,950 --> 00:00:13,340
We looked at a specific instance of being able to smooth an image with a kernel.

4
00:00:13,340 --> 00:00:16,350
You may recall that in that lecture, we looked at how we

5
00:00:16,350 --> 00:00:20,430
can actually mathematically represent this process of taking a kernel and

6
00:00:20,430 --> 00:00:25,140
applying it to a small region, a three by three one, in this sample image.

7
00:00:25,140 --> 00:00:27,781
While this was for just doing the averaging,

8
00:00:27,781 --> 00:00:31,267
we can also do this in general terms for any kind of an image.

9
00:00:31,267 --> 00:00:35,510
And we came up with a term, or a mathematical formulation,

10
00:00:35,510 --> 00:00:39,440
which basically now lets you loop over the whole image, but

11
00:00:39,440 --> 00:00:43,921
also provide non-uniform weights to each and every one of them to be

12
00:00:43,921 --> 00:00:49,250
able to create a general equation of how we can do any kind of filtering.

13
00:00:49,250 --> 00:00:52,450
In the last lecture, I referred to this term, or this process,

14
00:00:52,450 --> 00:00:57,660
as cross-correlation, which was an attempt to basically loop over an image, or

15
00:00:57,660 --> 00:01:01,060
as part of an image in this instance, and expand this over

16
00:01:01,060 --> 00:01:06,300
the whole image with a kernel, which basically was not trying to change, and

17
00:01:06,300 --> 00:01:10,790
put non-uniform weights to be able to impact the output image.

18
00:01:10,790 --> 00:01:13,100
And again, we would loop over the entire image this way.

19
00:01:14,480 --> 00:01:16,715
Now we want to actually start looking at this whole concept of

20
00:01:16,715 --> 00:01:18,720
cross-correlation in a little bit more in detail
