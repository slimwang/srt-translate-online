1
00:00:00,000 --> 00:00:06,000
Here's what I did. I introduced two global variables--the previous hand and previous results.

2
00:00:06,000 --> 00:00:11,000
I am making a cache, like a memoization cache, but it's only for one hand,

3
00:00:11,000 --> 00:00:13,000
because we're only dealing with one hand at a time.

4
00:00:13,000 --> 00:00:18,000
Then I say, we then find_prefixes if the hand that you were given is equal

5
00:00:18,000 --> 00:00:21,000
to the previous hand, then return the previous results.

6
00:00:21,000 --> 00:00:25,000
I'm only going to update the previous hand and the previous results

7
00:00:25,000 --> 00:00:28,000
in the case where the prefix is the empty string.

8
00:00:28,000 --> 00:00:32,000
And that's how I know I'm at the top level call when the prefix is the empty string.

9
00:00:32,000 --> 00:00:35,000
For all the recursive calls, the prefix will be something else.

10
00:00:35,000 --> 00:00:39,000
I'm only storing away the results when I'm at the top level call

11
00:00:39,000 --> 00:00:42,000
and I'm updating previous hand and previous results.

12
00:00:42,000 --> 00:00:47,000
With that, efficiency improvement to find prefixes, now when I do timedcalls

13
00:00:47,000 --> 00:00:52,000
of row plays for this fairly complex row, it's only about a thousandth of a second.

14
00:00:52,000 --> 00:00:58,000
If I had a complete board that was similarly complex and say fifteen rows or so in the board,

15
00:00:58,000 --> 99:59:59,999
then it'd still be around one or two hundredths of a second and that's pretty good performance.
