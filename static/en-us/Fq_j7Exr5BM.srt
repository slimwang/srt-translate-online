1
00:00:00,000 --> 00:00:03,000
Another form of oracle comes in the form of enhanced execution environments.

2
00:00:03,000 --> 00:00:05,000
I've already used the example several times,

3
00:00:05,000 --> 00:00:10,000
but in C or C++ we could run the compiled program under a runtime monitor like Valgrind

4
00:00:10,000 --> 00:00:14,000
which provides an enhanced execution environment which checks a lot of rules

5
00:00:14,000 --> 00:00:18,000
that aren't checked by the regular C and C++ runtime or by the operating system.

6
00:00:18,000 --> 00:00:20,000
So for example, Valgrind will terminate our process

7
00:00:20,000 --> 00:00:22,000
if we access beyond the end of an array,

8
00:00:22,000 --> 00:00:24,000
and in practice, that's an extremely effective form of oracle.

9
00:00:24,000 --> 00:00:27,000
If that kind of a rule violation happens during random testing,

10
00:00:27,000 --> 00:00:31,000
we absolutely want to know about it, and Valgrind provides that service.

11
00:00:31,000 --> 00:00:33,000
Another example of an enhanced execution environment

12
00:00:33,000 --> 00:00:36,000
would be one that checks for, for example, integer overflow of problems

13
00:00:36,000 --> 00:00:38,000
or floating point problems.

14
00:00:38,000 --> 00:00:41,000
So a medium oracle is going to vary in its degree of checking power

15
00:00:41,000 --> 00:00:43,000
between the weak oracles we've already said

16
00:00:43,000 --> 00:00:45,000
and the strong oracles that I'll talk about in a few minutes.

17
00:00:45,000 --> 00:00:47,000
And so far in my list, and I could be missing something,

18
00:00:47,000 --> 00:00:50,000
but so far I only have one example of a medium power oracle,

19
00:00:50,000 --> 00:00:53,000
and this is assertion checks that the programmer has put into the software.

20
00:00:53,000 --> 00:00:55,000
The reason I call this a medium power oracle

21
00:00:55,000 --> 00:00:58,000
is it provides quite a lot more application-specific

22
00:00:58,000 --> 00:01:00,000
kind of checking than do these weak oracles.

23
00:01:00,000 --> 00:01:02,000
But on the other hand, it doesn't guarantee anything

24
00:01:02,000 --> 00:01:05,000
even remotely close to actual correct operation,

25
00:01:05,000 --> 00:01:07,000
and that's generally what the strong oracles are going to do.

26
00:01:07,000 --> 00:01:09,000
So let's look at those.
