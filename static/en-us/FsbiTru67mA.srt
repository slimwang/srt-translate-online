1
00:00:00,000 --> 00:00:03,000
Alright, so next we're going to look at some recursively generated graphs.

2
00:00:03,000 --> 00:00:04,000
We start off with a set of n nodes,

3
00:00:04,000 --> 00:00:07,000
then we create a graph on half of the nodes recursively.

4
00:00:07,000 --> 00:00:09,000
We create a graph on the other half of the nodes recursively.

5
00:00:09,000 --> 00:00:13,000
Then we generate some edges that connect up between these two smaller graphs,

6
00:00:13,000 --> 00:00:15,000
and that's the graph that we return.

7
00:00:15,000 --> 00:00:17,000
So, we can get a bunch of different mechanisms

8
00:00:17,000 --> 00:00:19,000
for generating recursive graphs with this basic structure,

9
00:00:19,000 --> 00:00:22,000
depending on how we create the 1st sub graph,

10
00:00:22,000 --> 00:00:24,000
how we create the 2nd sub graph,

11
00:00:24,000 --> 00:00:26,000
and how we connect the two sub graphs together.

12
00:00:26,000 --> 00:00:28,000
So, let's start off with a really simple example.

13
00:00:28,000 --> 00:00:30,000
So, here is some pseudo Python for generating a graph with n nodes.

14
00:00:30,000 --> 00:00:33,000
What's it's going to do is--to make a graph with n nodes--if n is just 1,

15
00:00:33,000 --> 00:00:35,000
it returns a single node all by itself.

16
00:00:35,000 --> 00:00:38,000
But if it's not, we're going to assume it's some other power of 2.

17
00:00:38,000 --> 00:00:41,000
We make a graph with n/2 nodes, call it G1.

18
00:00:41,000 --> 00:00:44,000
We make a another graph with n/2 nodes, call it G2.

19
00:00:44,000 --> 00:00:50,000
Then we pick a random node from G1, call it i1, a random node from G2, call it i2,

20
00:00:50,000 --> 00:00:52,000
and we link them together.

21
00:00:52,000 --> 00:00:55,000
So, at a high level, create graph G1, create graph G2.

22
00:00:55,000 --> 00:00:59,000
We pick a random node i1, pick another random node i2,

23
00:00:59,000 --> 00:01:01,000
and we link them together.

24
00:01:01,000 --> 00:01:04,000
Now, in this picture it's not really clear what's going on inside of these.

25
00:01:04,000 --> 00:01:06,000
What I'd like you to do is figure it out.

26
00:01:06,000 --> 00:01:11,000
So, maybe take n to be some small power of 2, like 4 or 8

27
00:01:11,000 --> 00:01:16,000
and trace through this pseudo code to try to figure out what kind of graph pops out.

28
00:01:16,000 --> 00:01:19,000
So, here are three choices to choose from what we get out.

29
00:01:19,000 --> 00:01:21,000
Is it a tree, is it a chain or is it a ring?
