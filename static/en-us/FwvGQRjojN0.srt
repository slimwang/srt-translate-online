1
00:00:00,000 --> 00:00:02,000
Here's my solution.

2
00:00:02,000 --> 00:00:05,000
The key to my solution is a list of deltas,

3
00:00:05,000 --> 00:00:11,000
of differences in the states that correspond to these moves. What do I mean by that?

4
00:00:11,000 --> 00:00:17,000
One thing we can do is send two missionaries from a side with the boat to the other side.

5
00:00:17,000 --> 00:00:19,000
That would be a difference of 2 in the missionaries.

6
00:00:19,000 --> 00:00:24,000
We would add 2 to one side and subtract 2 from the other side

7
00:00:24,000 --> 00:00:27,000
and not change at all the number of cannibals

8
00:00:27,000 --> 00:00:30,000
and change the number of boats by 1.

9
00:00:30,000 --> 00:00:34,000
Or we could send 2 cannibals, or we could send one of each,

10
00:00:34,000 --> 00:00:37,000
or we could send only 1 missionary or cannibal.

11
00:00:37,000 --> 00:00:41,000
There are 5 possible moves, basically, depending on where the boat is.

12
00:00:41,000 --> 00:00:43,000
That's what csuccessors says.

13
00:00:43,000 --> 00:00:45,000
First we check for states with no successors.

14
00:00:45,000 --> 00:00:49,000
If there are more cannibals than missionaries but there are some missionaries,

15
00:00:49,000 --> 00:00:53,000
then they're going to get eaten, and so we return the empty dictionary as a result.

16
00:00:53,000 --> 00:00:57,000
Otherwise, we're going to collect up the number of items in our dictionary,

17
00:00:57,000 --> 00:01:01,000
and we're going to do that by going through these deltas

18
00:01:01,000 --> 00:01:05,000
and subtracting the deltas from the side where the boat is

19
00:01:05,000 --> 00:01:08,000
and adding them in to the other side.

20
00:01:08,000 --> 00:01:13,000
We have two directions we can go from left to right, start to the other side,

21
00:01:13,000 --> 00:01:17,000
or from the other side back to the original side.

22
00:01:17,000 --> 00:01:21,000
I made use here of vector addition and subtraction.

23
00:01:21,000 --> 00:01:27,000
I take the current state, which is 6 numbers, and I add or subtract these deltas.

24
00:01:27,000 --> 00:01:29,000
That's what these definitions say.

25
00:01:29,000 --> 00:01:33,000
Now, it would nice if this type of vector arithmetic was built into Python,

26
00:01:33,000 --> 00:01:37,000
and there are versions called "numeric Python" where you can do that,

27
00:01:37,000 --> 99:59:59,999
but here I had to write these functions myself.
