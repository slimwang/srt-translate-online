1
00:00:00,280 --> 00:00:03,170
Okay, so here we are in Android Studio.

2
00:00:03,170 --> 00:00:06,085
And we have the project pane open.

3
00:00:06,085 --> 00:00:08,530
Let's become familiar with the code
base for the Quake Report app.

4
00:00:09,580 --> 00:00:12,720
So the first thing I'm going to
do is go to the app directory and

5
00:00:12,720 --> 00:00:14,790
look in the java folder.

6
00:00:14,790 --> 00:00:17,750
This is where all the logic for
the app is.

7
00:00:17,750 --> 00:00:21,930
Then I'm going to move down here to
the resources folder, expand it.

8
00:00:21,930 --> 00:00:25,238
This is the folder that contains
everything related to the appearance

9
00:00:25,238 --> 00:00:25,804
of the app.

10
00:00:25,804 --> 00:00:28,830
These files control how the app
appears on different devices.

11
00:00:28,830 --> 00:00:34,140
Resources can include XML files,
images, and other media files.

12
00:00:34,140 --> 00:00:36,700
We can start by expanding
out the layout folder.

13
00:00:36,700 --> 00:00:40,320
Here we have
the earthquake_activity.xml file.

14
00:00:40,320 --> 00:00:41,700
This file defines the layout for

15
00:00:41,700 --> 00:00:44,610
the main screen in our app,
which is just a list view.

16
00:00:44,610 --> 00:00:48,720
Then we have the mipmap folder, which is
a special folder just for the app icon.

17
00:00:49,960 --> 00:00:52,470
Other images in your app should
go in the drawable folders.

18
00:00:54,030 --> 00:00:55,880
Then we have the values folder.

19
00:00:55,880 --> 00:01:00,330
This contains the colors.xml file,
which defines the colors for our app.

20
00:01:00,330 --> 00:01:03,100
And we also have some additional
resource files for the styles and

21
00:01:03,100 --> 00:01:05,379
themes as well as text strings.

22
00:01:06,920 --> 00:01:08,510
So let's go back to the java folder.

23
00:01:08,510 --> 00:01:13,100
We have one Java file called
the EarthquakeActivity.

24
00:01:13,100 --> 00:01:15,926
And it turns out that the
EarthquakeActivity is the main screen

25
00:01:15,926 --> 00:01:17,420
for our app.

26
00:01:17,420 --> 00:01:19,070
When the activity is created,

27
00:01:19,070 --> 00:01:23,300
we set the content view to
the earthquake_activity XML layout.

28
00:01:23,300 --> 00:01:26,410
Then we create a fake list of
earthquakes because this is placeholder

29
00:01:26,410 --> 00:01:29,290
data until we get real
data from the server.

30
00:01:29,290 --> 00:01:32,133
We represent the list of earthquakes
as an ArrayList of strings,

31
00:01:32,133 --> 00:01:35,970
which then contains the names
of different cities.

32
00:01:35,970 --> 00:01:39,920
Then we create an ArrayAdapter which
knows how to create list item views,

33
00:01:39,920 --> 00:01:42,410
one for
each earthquake in the ArrayList.

34
00:01:42,410 --> 00:01:45,540
And then the list items will
be added into the ListView

35
00:01:45,540 --> 00:01:48,210
that we defined in our
earthquake_activity XML layout.

36
00:01:49,310 --> 00:01:52,430
Last but not least,
we have the AndroidManifest file.

37
00:01:52,430 --> 00:01:57,813
This file contains important information
about our app that the Android system

38
00:01:57,813 --> 00:02:04,100
needs to know, for example, the package
name, the app name and the activities.

39
00:02:04,100 --> 00:02:07,010
Now going back to our quiz,
here are the answers to the questions.

40
00:02:08,020 --> 00:02:12,280
Our main activity is defined in
the EarthquakeActivity.java file.

41
00:02:13,330 --> 00:02:13,930
And the layout for

42
00:02:13,930 --> 00:02:18,720
the activity is defined in
the earthquake_activity.xml file.

43
00:02:20,230 --> 00:02:22,750
And lastly,
within our EarthquakeActivity class,

44
00:02:22,750 --> 00:02:25,860
we have an array list
variable called earthquakes,

45
00:02:25,860 --> 00:02:28,581
which holds the list of
earthquake locations as strings.
