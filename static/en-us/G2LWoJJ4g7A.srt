1
00:00:00,395 --> 00:00:02,170
Okay so, if I go to the documentation and

2
00:00:02,170 --> 00:00:06,820
start writing navigation controller Xcode autocompletes it for me.

3
00:00:06,820 --> 00:00:10,680
It says here that the navigation interface, makes it possible to present your

4
00:00:10,680 --> 00:00:15,170
data efficiently and makes it easier for the user to navigate that content.

5
00:00:15,170 --> 00:00:18,150
So that seems that UINavigation Controller.

6
00:00:18,150 --> 00:00:21,940
Will help me navigate between two different screens on my app.

7
00:00:21,940 --> 00:00:24,620
Cool, okay so if I go back to story board.

8
00:00:24,620 --> 00:00:27,880
I can see that the first screen of my app is right here.

9
00:00:27,880 --> 00:00:29,000
To add another one,

10
00:00:29,000 --> 00:00:33,640
I can open up utilities and add a new View Controller from this list.

11
00:00:33,640 --> 00:00:36,752
Notice that we are adding a View Controller in this case.

12
00:00:36,752 --> 00:00:39,330
All right, I'm going to slide out of the utility area.

13
00:00:39,330 --> 00:00:41,910
And then arrange these View controllers properly.

14
00:00:41,910 --> 00:00:44,830
So here I have the first screen of my app, and

15
00:00:44,830 --> 00:00:47,970
imagine that this new View Controller which for now is empty,

16
00:00:47,970 --> 00:00:51,800
is going to contain a view which will display the second screen of my app.

17
00:00:51,800 --> 00:00:53,910
This screen is going to have all of the buttons,

18
00:00:53,910 --> 00:00:56,130
that will allow us to play sounds.

19
00:00:56,130 --> 00:00:59,060
For now all I want to do is connect this stop button,

20
00:00:59,060 --> 00:01:00,480
to this new View Controller.

21
00:01:00,480 --> 00:01:02,360
Now the way to do this is to press and

22
00:01:02,360 --> 00:01:06,980
hold control on your keyboard, and then drag from the stop button.

23
00:01:06,980 --> 00:01:08,740
On to the new View Controller.

24
00:01:08,740 --> 00:01:11,990
This will present a bunch of options called segueways.

25
00:01:11,990 --> 00:01:16,360
You can think of segueways as transitions between these two View Controllers,

26
00:01:16,360 --> 00:01:19,950
almost like transitions between two different slides in a presentation.

27
00:01:19,950 --> 00:01:22,010
I will select show.

28
00:01:22,010 --> 00:01:23,810
Okay. So the two View Controllers are connected.

29
00:01:23,810 --> 00:01:28,220
At this point, I'm going to try and run the app and see if it even works.

30
00:01:28,220 --> 00:01:30,730
I'm going to press the microphone button.

31
00:01:30,730 --> 00:01:34,200
All right, the recording label and the stop button start to show up correctly.

32
00:01:34,200 --> 00:01:35,490
So far so good.

33
00:01:35,490 --> 00:01:37,740
What happens after I click the stop button?

34
00:01:37,740 --> 00:01:42,620
Hey, hey, here's the second screen of our app, and I also have the back button.

35
00:01:42,620 --> 00:01:45,640
And when I click that, I can go back to the first screen.

36
00:01:45,640 --> 00:01:46,630
Let me try one more time.

37
00:01:47,860 --> 00:01:49,430
This seems to be working.

38
00:01:49,430 --> 00:01:53,200
All right, so there are a couple of things I want to do back in the storyboard.

39
00:01:53,200 --> 00:01:54,800
I can add a title here.

40
00:01:54,800 --> 00:01:56,650
And then try to run the app again.

41
00:01:56,650 --> 00:02:00,802
All right, so you'll notice that the title of the first screen has changed, and

42
00:02:00,802 --> 00:02:04,790
then if I try to go to the second screen the back button there has also changed.

43
00:02:04,790 --> 00:02:05,565
Brilliant.

44
00:02:05,565 --> 00:02:10,050
By the way all of this back and forth navigation, this top bar and

45
00:02:10,050 --> 00:02:11,620
the back button.

46
00:02:11,620 --> 00:02:16,880
All of this, was accomplished by this UI Navigation Controller right here.

47
00:02:16,880 --> 00:02:19,110
So let's think about this, a little bit more deeply.
