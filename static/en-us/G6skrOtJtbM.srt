1
00:00:00,240 --> 00:00:02,660
Let's look a bit more in depth at how this box in space actually gets

2
00:00:02,660 --> 00:00:06,708
positioned and defined internally. First, we define our camera object as

3
00:00:06,708 --> 00:00:09,684
looking down the world's negative z axis and oriented so that the top of the

4
00:00:09,684 --> 00:00:14,310
camera is facing along the plus y axis. The camera starts at the origin, just

5
00:00:14,310 --> 00:00:17,248
like other objects. The first step is to move the camera to where we want to

6
00:00:17,248 --> 00:00:21,862
make an image from. We also tilt and orient the camera as desired. This is

7
00:00:21,862 --> 00:00:25,230
similar to how we have been orienting objects all along. We define some sort of

8
00:00:25,230 --> 00:00:28,999
rotation in translation to get your camera into place. We ignore scale, we're

9
00:00:28,999 --> 00:00:32,162
just trying to set up the camera in space. Giving the camera a position is

10
00:00:32,162 --> 00:00:35,827
simple enough. To compute the rotation needed to orient our camera, we use

11
00:00:35,827 --> 00:00:40,234
what's called a look at system. This is pretty much what it sounds like. You

12
00:00:40,234 --> 00:00:43,664
define a target location for what direction you want the camera to look. This

13
00:00:43,664 --> 00:00:46,914
defines the negative z axis for the camera's frame of reference. In other

14
00:00:46,914 --> 00:00:50,724
words, how it's pointing in the world. So here I have a real live camera, it

15
00:00:50,724 --> 00:00:55,464
even works. And with my z axis here, that tells me which way it's pointing, but

16
00:00:55,464 --> 00:01:00,971
unfortunately it doesn't tell me which way is up. It still has this one degree

17
00:01:00,971 --> 00:01:05,930
of freedom. So what we do, is we also define an up-vector of some sort. This

18
00:01:05,930 --> 00:01:09,140
vector gives us some guidance as to which way to orient the top of the camera.

19
00:01:09,140 --> 00:01:12,857
Typically in 3JS, we'll pass an up-vector such as zero, one, zero, the plus y

20
00:01:12,857 --> 00:01:17,200
axis as the up-vector. Given our view vector and this up-vector, we'd like to

21
00:01:17,200 --> 00:01:21,736
form a matrix that defines a whole frame of reference for our camera. We know

22
00:01:21,736 --> 00:01:25,170
where we want this z axis to look along. But we want to know where the camera's

23
00:01:25,170 --> 00:01:29,556
y and x axis end up. By specifying a general up direction, we do this. For

24
00:01:29,556 --> 00:01:33,075
example, say we have a camera pointing in some direction. Looking along its

25
00:01:33,075 --> 00:01:36,469
negative z axis. If we give an up direction, we can find the direction pointing

26
00:01:36,469 --> 00:01:40,860
to the right of the camera. Which is the x axis. By taking the cross product of

27
00:01:40,860 --> 00:01:46,330
this z axis and our up vector. Now we have two axis locked down. Camera z and

28
00:01:46,330 --> 00:01:50,164
camera x. We can find the true up direction, the camera's y axis, by then

29
00:01:50,164 --> 00:01:54,585
taking the cross product of the x and z axis. Remember that the cross product

30
00:01:54,585 --> 00:01:58,610
of two vectors will give us the vector that's perpendicular to both of them.

31
00:01:58,610 --> 00:02:01,890
This may all sound a bit odd and like a lot of work but is extremely common.

32
00:02:01,890 --> 00:02:05,338
It's probably the place where I use the cross product the most. The whole point

33
00:02:05,338 --> 00:02:08,051
here is that given a view direction and an up vector as a hint, we can get a

34
00:02:08,051 --> 00:02:12,537
frame of reference for the camera. We'll often use the worlds plus y axis as

35
00:02:12,537 --> 00:02:16,576
our up vector hint, but it all depends. Say we're a hawk soaring over some

36
00:02:16,576 --> 00:02:20,610
terrain. We're looking straight down, which would be looking down the y axis of

37
00:02:20,610 --> 00:02:24,181
our world. If we use the world's y axis as our hint, it doesn't make much

38
00:02:24,181 --> 00:02:28,140
sense. We define the negative z axis the camera's looking along, and the y axis

39
00:02:28,140 --> 00:02:33,802
for the camera's up direction. As vectors in exactly opposite directions. This

40
00:02:33,802 --> 00:02:36,867
is not very useful. In this case our up vector is more like the direction

41
00:02:36,867 --> 00:02:40,431
pointing out of the top of our hawk's head, the direction it's flying. Now that

42
00:02:40,431 --> 00:02:42,968
the up vector is not parallel to the look at direction, we can form a good

43
00:02:42,968 --> 00:02:45,150
frame of reference for the hawk.
