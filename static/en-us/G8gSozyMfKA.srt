1
00:00:00,330 --> 00:00:04,040
We've used the LS command or
application a few times already, and

2
00:00:04,040 --> 00:00:07,552
we know that it's located within
the slash bin directory, but

3
00:00:07,552 --> 00:00:11,279
how come we didn't have to type
the full path to this file to run it?

4
00:00:11,279 --> 00:00:14,610
Why didn't we have to type /bin/ls?

5
00:00:14,610 --> 00:00:18,546
Linux systems provide a nice little
short cut system within the dollar sign

6
00:00:18,546 --> 00:00:19,980
path variable.

7
00:00:19,980 --> 00:00:20,930
Let's take a look at that and

8
00:00:20,930 --> 00:00:23,690
figure out how the operating
system saves us some typing.

9
00:00:24,730 --> 00:00:27,567
If you type echo $PATH and you run that,

10
00:00:27,567 --> 00:00:32,670
you're presented with a bunch of
paths separated by colon characters.

11
00:00:32,670 --> 00:00:38,920
We see /usr/local/sbin:/usr/local/bin
and on and on and on.

12
00:00:39,970 --> 00:00:43,740
These are actually the directories
Linux will progress through looking for

13
00:00:43,740 --> 00:00:47,120
a binary when you just type
the name of it like ls.

14
00:00:47,120 --> 00:00:50,960
When you type ls, the operating
system checks the first directory for

15
00:00:50,960 --> 00:00:53,230
an executable file names ls.

16
00:00:53,230 --> 00:00:55,680
If it's not there, it checks the next.

17
00:00:55,680 --> 00:00:58,946
And on and on and
on until it gets here to /bin.

18
00:00:58,946 --> 00:01:01,400
And it does find that file,
so it runs it.

19
00:01:01,400 --> 00:01:03,650
If you ever find that your
commands aren't being found, or

20
00:01:03,650 --> 00:01:08,040
things are just acting really crazy,
you might want to check this variable.

21
00:01:08,040 --> 00:01:10,840
I've placed a link in the instructor
notes that will walk you through how to

22
00:01:10,840 --> 00:01:12,770
edit this variable and
save it if need be.
