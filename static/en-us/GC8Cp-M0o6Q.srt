1
00:00:00,820 --> 00:00:05,480
So let's begin with the very first cycle, cycle one. In this cycle there is

2
00:00:05,480 --> 00:00:09,867
nothing to dispatch and nothing to write of course. So the only thing that we

3
00:00:09,867 --> 00:00:14,945
really need to be concerned with is issuing an instruction. The load will look

4
00:00:14,945 --> 00:00:19,634
at the reservation stations and look at basically the load's RQ in this case.

5
00:00:19,634 --> 00:00:23,890
And see that there is an empty space there, so we can issue. So, we will

6
00:00:23,890 --> 00:00:28,920
mark that this instruction gets done in cycle one, as far as issue is concerned.

7
00:00:28,920 --> 00:00:34,640
Now, we have a busy load store Q entry. The operation is a load.

8
00:00:34,640 --> 00:00:38,070
Now, the load uses an address. It doesn't really use a value. So,

9
00:00:38,070 --> 00:00:44,260
in this case we will use our R2 which is 100. And add 34 to it.

10
00:00:44,260 --> 00:00:46,976
And that address will be computed before we put it in the load queue. So

11
00:00:46,976 --> 00:00:52,080
letâ€™s say that this value is noted here as 134. So this is really the address.

12
00:00:52,080 --> 00:00:56,628
We are not waiting for anything, but this load will produce a floating point

13
00:00:56,628 --> 00:01:02,500
value and put it in F6. So we need to rename F6 to point to Load 1.

14
00:01:02,500 --> 00:01:06,080
And the load doesn't dispatch in the same cycle because we said that we cannot

15
00:01:06,080 --> 00:01:11,350
do that. So this kind of concludes the issuing of this load. Now let's look

16
00:01:11,350 --> 00:01:16,258
at the second cycle. In the second cycle, we will try to issue this load and

17
00:01:16,258 --> 00:01:21,417
there is a free unit, so we will do that. It's 45 from R3, so it's going to

18
00:01:21,417 --> 00:01:26,070
be 245. Again, this is done by the address unit. It's not done by the ALUs or

19
00:01:26,070 --> 00:01:29,920
anything. So this addition gets done immediately. And we are not waiting for

20
00:01:29,920 --> 00:01:31,830
anything because a load doesn't really need to wait for

21
00:01:31,830 --> 00:01:34,115
an, any floating point registers. And then,

22
00:01:34,115 --> 00:01:40,490
F2 is where we're going to put the result. So we're going to mark this as LD2.

23
00:01:40,490 --> 00:01:45,700
And this is it as far as the issuing is concerned in this cycle.

24
00:01:45,700 --> 00:01:51,230
We will, dispatch, this load now. So its execution begins in cycle two,

25
00:01:51,230 --> 00:01:55,300
because everything is ready for it. And now, we need to consider, okay, so

26
00:01:55,300 --> 00:01:59,750
it takes two cycles to do a load. Does the write back happen at the end of

27
00:01:59,750 --> 00:02:04,110
the second cycle or does it happen in the cycle after that? In this case we

28
00:02:04,110 --> 00:02:08,000
will assume that the write back happens after the execution is done.

29
00:02:08,000 --> 00:02:11,920
So the execution of the load will be done in cycles two and three. And the write

30
00:02:11,920 --> 00:02:15,990
back will happen in cycle four. So we will kind of know, that basically we

31
00:02:15,990 --> 00:02:20,141
will be able to write in cycle four here, just to kind of remember that
