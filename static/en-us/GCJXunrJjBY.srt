1
00:00:00,000 --> 00:00:03,000
[Thrun] And here is my solution. We have 4 cases.

2
00:00:03,000 --> 00:00:07,000
On the left side, if I'm on the left side of the racecourse,

3
00:00:07,000 --> 00:00:10,000
as defined that x is smaller to radius,

4
00:00:10,000 --> 00:00:17,000
then my crosstrack_error is defined by the distance to the circle,

5
00:00:17,000 --> 00:00:20,000
centered at radius comma radius minus the radius itself.

6
00:00:20,000 --> 00:00:23,000
So this is going to be 0 if I'm exactly on the circle.

7
00:00:23,000 --> 00:00:27,000
If I'm more than 3 times over to the right side, I get a circle again.

8
00:00:27,000 --> 00:00:32,000
It looks like the one before, but now the center of the circle is a little bit further to the right

9
00:00:32,000 --> 00:00:34,000
by 3 times radius as opposed to 1 radius.

10
00:00:34,000 --> 00:00:36,000
The rest is identical to the line over here,

11
00:00:36,000 --> 00:00:38,000
so I'm subtracting the same radius on the right side.

12
00:00:38,000 --> 00:00:40,000
You can't quite see it but it's there.

13
00:00:40,000 --> 00:00:42,000
Interesting are the straightaways.

14
00:00:42,000 --> 00:00:46,000
So if my y value is large on the upper part of the diagram--

15
00:00:46,000 --> 00:00:52,000
in fact, it's larger than radius--then my crosstrack_error is the y coordinate

16
00:00:52,000 --> 00:00:55,000
times 2 times the radius, which is the height of the racetrack.

17
00:00:55,000 --> 00:00:57,000
If I'm down at the bottom, it's just the y axis,

18
00:00:57,000 --> 00:01:01,000
but really important is the minus sign because I'm moving in the opposite direction.

19
00:01:01,000 --> 00:01:08,000
So for your code, to run this correctly you would have gotten everything in this routine right.

20
00:01:08,000 --> 00:01:11,000
So that finishes my homework assignment.

21
00:01:11,000 --> 00:01:14,000
Congratulations. You were able to make a car drive on a racetrack.

22
00:01:14,000 --> 00:01:18,000
That is actually quite a significant component of making cars drive.

23
00:01:18,000 --> 00:01:21,000
The PID control methodology that you learned today

24
00:01:21,000 --> 00:01:24,000
and the smoothing methodology are really, really essential

25
00:01:24,000 --> 00:01:30,000
not just in controlling self-driving cars but in a great number of other control setups.

26
00:01:30,000 --> 00:01:33,000
Thank you for taking the class so far. You learned a lot already.

27
00:01:33,000 --> 00:01:36,000
You learned about localization, about planning and control,

28
00:01:36,000 --> 99:59:59,999
and we almost learned talking about how to build a self-driving car.
