1
00:00:00,340 --> 00:00:02,830
So in this lesson, we'll look at an important question

2
00:00:02,830 --> 00:00:06,230
in switch design which is how much buffering do routers

3
00:00:06,230 --> 00:00:09,440
and switches need? It's fairly well known that routers and

4
00:00:09,440 --> 00:00:14,790
switches do need packet buffers to accommodate for statistical multiplexing.

5
00:00:14,790 --> 00:00:17,390
But it's less clear how much packet buffering is really

6
00:00:17,390 --> 00:00:20,330
necessary. Now given that queuing delay is really the only

7
00:00:20,330 --> 00:00:22,900
variable part of packet delay on the internet, you'd think

8
00:00:22,900 --> 00:00:25,630
we'd know the answer to this question already. And for

9
00:00:25,630 --> 00:00:28,880
quite some time there have been some well understood rules

10
00:00:28,880 --> 00:00:32,140
of thumb but it turns out that we've recently revisited

11
00:00:32,140 --> 00:00:35,760
this question and come up with some different answers. So

12
00:00:35,760 --> 00:00:38,940
let's first look at the universally applied rule of thumb. Now

13
00:00:38,940 --> 00:00:41,595
for the sake of the examples in this lesson, I'm

14
00:00:41,595 --> 00:00:42,980
going to use routers and switches

15
00:00:42,980 --> 00:00:45,250
interchangeably because it doesn't really matter.

16
00:00:45,250 --> 00:00:47,110
All that matters here is that we have a network

17
00:00:47,110 --> 00:00:50,670
device that's a store and forward packet device. That, has the

18
00:00:50,670 --> 00:00:53,010
capability of storing a frame or a packet and

19
00:00:53,010 --> 00:00:56,560
then later sending it on. So let's suppose that we

20
00:00:56,560 --> 00:00:59,220
have a path between a source and a destination,

21
00:00:59,220 --> 00:01:03,650
and the round-trip propagation delay is 2T and the capacity

22
00:01:03,650 --> 00:01:06,180
to bottleneck link is C. Now the commonly held

23
00:01:06,180 --> 00:01:10,700
view is that this router needs a buffer of 2T

24
00:01:10,700 --> 00:01:13,170
times C. It should be clear why this rule

25
00:01:13,170 --> 00:01:15,880
of thumb exists. C is the capacity to the bottleneck

26
00:01:15,880 --> 00:01:22,310
link in say, bits per second and T is the time of units second, so this works

27
00:01:22,310 --> 00:01:29,270
out to bits, and the meaning of this quantity is simply the number of bits that

28
00:01:29,270 --> 00:01:32,270
could be outstanding along this path at any

29
00:01:32,270 --> 00:01:35,440
given time. It effectively represents the maximum amount

30
00:01:35,440 --> 00:01:37,560
of outstanding data that could be on this

31
00:01:37,560 --> 00:01:40,950
path between the source and destination at any time.

32
00:01:40,950 --> 00:01:43,710
Now this rule of thumb guideline was mandated

33
00:01:43,710 --> 00:01:46,620
in many backbone and edge routers for many years.

34
00:01:46,620 --> 00:01:52,070
It appears in RFCs and ITF Architectural guidelines and

35
00:01:52,070 --> 00:01:55,940
it has major consequences for router design. Simply because

36
00:01:55,940 --> 00:01:58,000
this can be a lot of router memory and

37
00:01:58,000 --> 00:02:00,890
memory can be expensive. The other thing of course

38
00:02:00,890 --> 00:02:03,440
is that the bigger these buffers, not only the

39
00:02:03,440 --> 00:02:06,190
bigger the cost but also the bigger the queuing

40
00:02:06,190 --> 00:02:09,288
delay that could exist at any given router. And

41
00:02:09,288 --> 00:02:12,540
hence, the more delay the interactive traffic may experience

42
00:02:12,540 --> 00:02:16,000
and the more delay that feedback about congestion will

43
00:02:16,000 --> 00:02:19,000
experience. The longer these delays are, the longer it

44
00:02:19,000 --> 00:02:21,800
will take for the source to hear about congestion

45
00:02:21,800 --> 00:02:25,270
that might exist in the network. Now to understand

46
00:02:25,270 --> 00:02:28,680
why this guideline is incorrect, let's first re-derive the

47
00:02:28,680 --> 00:02:31,300
rule of thumb a bit more formally and then we'll

48
00:02:31,300 --> 00:02:33,940
understand why it does not always apply in practice.
