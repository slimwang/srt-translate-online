1
00:00:00,210 --> 00:00:04,230
Carly Fiorina rightly states that
the goal is to turn data into

2
00:00:04,230 --> 00:00:07,570
information and
information into insight.

3
00:00:07,570 --> 00:00:11,020
So let's better understand
the data by improving our plots.

4
00:00:11,020 --> 00:00:14,835
We will need the matplotlib library for
this purpose.

5
00:00:14,835 --> 00:00:19,325
Specifically we import
the matplotlib.pyplot and

6
00:00:19,325 --> 00:00:23,185
rename it as plt for ease of use.

7
00:00:23,185 --> 00:00:26,165
First, let's define
a trivial plot function.

8
00:00:26,165 --> 00:00:30,335
We define a plot data function
which will essentially plot

9
00:00:30,335 --> 00:00:32,540
the contents of the data frame.

10
00:00:32,540 --> 00:00:34,820
We pass the data frame to it and

11
00:00:34,820 --> 00:00:38,460
use its plot function to
plot all the data in it.

12
00:00:38,460 --> 00:00:40,430
Let's see the output.

13
00:00:40,430 --> 00:00:42,650
Remember, to see the graph,

14
00:00:42,650 --> 00:00:47,150
we have to call the show function
from the matplotlib library.

15
00:00:47,150 --> 00:00:54,910
Observe that x axis has dates and y
axis has prices for all the four stocks.

16
00:00:54,910 --> 00:00:57,100
The graph still looks incomplete.

17
00:00:57,100 --> 00:01:00,230
We need to add details
like give a name or

18
00:01:00,230 --> 00:01:04,660
title to the graph,
add x and y axis labels.

19
00:01:04,660 --> 00:01:09,050
We will give name to the graph
by passing in parameter title.

20
00:01:09,050 --> 00:01:11,100
This should be customizable.

21
00:01:11,100 --> 00:01:16,280
And here we pass the value of the title
to the parameter title of the dataframe.

22
00:01:16,280 --> 00:01:18,020
For x and y axis labels,

23
00:01:18,020 --> 00:01:22,140
we need a handler to the plot
which the dataframe generates.

24
00:01:22,140 --> 00:01:25,820
The output of df.plot is such a handler.

25
00:01:25,820 --> 00:01:28,270
You can imagine it as an object.

26
00:01:28,270 --> 00:01:31,365
We name it ax for axis.

27
00:01:31,365 --> 00:01:33,780
Now we call set x label and

28
00:01:33,780 --> 00:01:39,830
set y label on this object to give the x
and y axis some meaningful labels.

29
00:01:39,830 --> 00:01:45,596
The desired labels are passed as a
parameter to the function set_xlabel and

30
00:01:45,596 --> 00:01:47,474
set_ylabel.

31
00:01:47,474 --> 00:01:49,855
Remember that set_xlabel and

32
00:01:49,855 --> 00:01:55,290
set_ylabel are the function of
the object that we got from df.plot.

33
00:01:55,290 --> 00:01:59,120
You can also use the fontsize parameter

34
00:01:59,120 --> 00:02:02,570
in df.plot to make
the graph more readable.

35
00:02:02,570 --> 00:02:05,140
Now let's see the modified plot.

36
00:02:05,140 --> 00:02:10,820
So here is your detailed plot with
x label, y label, and a title.
