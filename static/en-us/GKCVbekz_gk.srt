1
00:00:00,080 --> 00:00:03,540
With off canvas,
instead of stacking content vertically,

2
00:00:03,540 --> 00:00:09,670
the off canvas places less frequently
used content, for example navigation or

3
00:00:09,670 --> 00:00:15,060
app menus, off screen, only showing
them if the screen is large enough.

4
00:00:15,060 --> 00:00:18,950
On smaller screens, the off canvas
content is typically shown when

5
00:00:18,950 --> 00:00:21,580
the user taps on the hamburger icon.

6
00:00:21,580 --> 00:00:25,310
Let's take a look and see how it's
done on the web fundamentals site.

7
00:00:25,310 --> 00:00:28,670
In narrow viewport,
the navigation menu is hidden,

8
00:00:28,670 --> 00:00:31,340
until I click the hamburger menu.

9
00:00:31,340 --> 00:00:32,400
In other cases,

10
00:00:32,400 --> 00:00:36,060
the off screen content may actually
come in from off the screen.

11
00:00:36,060 --> 00:00:39,990
In this sample page,
the content is coming in from the left.

12
00:00:39,990 --> 00:00:42,750
But in other cases,
it could come in from the right.

13
00:00:42,750 --> 00:00:45,310
Let's take a look at the code for
this example.

14
00:00:45,310 --> 00:00:50,530
I have two elements, the dark blue nav
and the main content in light blue.

15
00:00:50,530 --> 00:00:54,560
In order to make sure the elements
take up the full viewport width,

16
00:00:54,560 --> 00:01:01,600
I need to set the width on HTML,
body and main to 100 %.

17
00:01:01,600 --> 00:01:06,110
Next, I'll set the styles for
the off-canvas nav element.

18
00:01:06,110 --> 00:01:11,090
I'll set a specific width of 300 pixels,
being careful to keep it

19
00:01:11,090 --> 00:01:14,800
reasonably sized so
that it doesn't overflow the viewport.

20
00:01:14,800 --> 00:01:19,600
I'll use translate minus 300
pixels to move it off the screen.

21
00:01:19,600 --> 00:01:26,060
And add a transition of 0.3 seconds,
so that it animates in nicely.

22
00:01:26,060 --> 00:01:31,620
When I want it to appear, I'll add
an open class that resets the transform.

23
00:01:31,620 --> 00:01:35,120
Now, I'll add a break
point at 600 pixels that

24
00:01:35,120 --> 00:01:38,330
repositions everything
back to its normal spot.

25
00:01:38,330 --> 00:01:42,320
The media query at 600
pixels resets the transform.

26
00:01:42,320 --> 00:01:47,120
Adding flex grow 1 to the main
element allows the element to grow and

27
00:01:47,120 --> 00:01:50,420
take up the full remaining
width of the viewport.

28
00:01:50,420 --> 00:01:52,528
Let's give it a shot in the browser.

29
00:01:52,528 --> 00:01:53,940
When the viewport is small,

30
00:01:53,940 --> 00:01:57,210
the navigation panel is hidden
until I hit the hamburger menu.

31
00:01:58,240 --> 00:02:02,000
But, on wider view port,
it's shown by default.

32
00:02:02,000 --> 00:02:02,500
Nice
