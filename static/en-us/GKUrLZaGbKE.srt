1
00:00:00,000 --> 00:00:02,000
[Narrator] That's what append does.

2
00:00:02,000 --> 00:00:05,000
We're going to introduce 2 other list operations.

3
00:00:05,000 --> 00:00:07,000
The next one is plus.

4
00:00:07,000 --> 00:00:11,000
Plus behaves very similar to the concatenation operation for strings.

5
00:00:11,000 --> 00:00:16,000
If we have the list 0, 1 + the list 2, 3

6
00:00:16,000 --> 00:00:22,000
the result is the list 0, 1, 2, 3.

7
00:00:22,000 --> 00:00:27,000
What plus does like concatenation for strings is it produces a new list.

8
00:00:27,000 --> 00:00:30,000
It doesn't mutate either of the input lists.

9
00:00:30,000 --> 00:00:35,000
I want to introduce 1 other operator that works on lists, and that's the len operator.

10
00:00:35,000 --> 00:00:37,000
Len is short for length, and we use len

11
00:00:37,000 --> 00:00:39,000
like this: it looks like a procedure call.

12
00:00:39,000 --> 00:00:44,000
We pass into len the object that we want to know the length of that can be a list.

13
00:00:44,000 --> 00:00:47,000
Len actually works for many things other than lists.

14
00:00:47,000 --> 00:00:49,000
It also works for strings.

15
00:00:49,000 --> 00:00:51,000
It works for any object that's a collection of things,

16
00:00:51,000 --> 00:00:55,000
and the output from len is the number of elements in the input.

17
00:00:55,000 --> 00:01:01,000
For example, the result of len applied to the list 0, 1 is 2,

18
00:01:01,000 --> 00:01:04,000
since there are 2 elements in the list.

19
00:01:04,000 --> 00:01:08,000
The result of applying len to this list is also 2.

20
00:01:08,000 --> 00:01:11,000
It looks like there are many more elements here,

21
00:01:11,000 --> 00:01:13,000
but len is only counting the outer elements.

22
00:01:13,000 --> 00:01:18,000
If 1 of the elements of a list is a list, it doesn't matter how many elements that list contains.

23
00:01:18,000 --> 00:01:22,000
It only contributes 1 to the length of the original list,

24
00:01:22,000 --> 00:01:26,000
so the result of this call would also be 2.

25
00:01:26,000 --> 00:01:29,000
We can also use len on a string, and the

26
00:01:29,000 --> 00:01:32,000
output will be the number of characters in the string.

27
00:01:32,000 --> 00:01:38,000
In this case the string Udacity has 7 characters, so the output is 7.

28
00:01:38,000 --> 00:01:41,000
Now we are ready for some quizzes to see how well you understand

29
00:01:41,000 --> 00:01:43,000
the 3 list operations we've introduced.

30
00:01:43,000 --> 00:01:47,000
The append operation which is invoked on a list

31
00:01:47,000 --> 00:01:52,000
and takes an element as a parameter and adds that element to the end of the list.

32
00:01:52,000 --> 00:01:57,000
The plus operator which operates on 2 lists as its operands

33
00:01:57,000 --> 00:02:03,000
and produces a new list that consists of all the elements in the 2 lists put together.

34
00:02:03,000 --> 00:02:08,000
And finally the len operator that takes a list as its input and produces

35
00:02:08,000 --> 00:02:11,000
an output number that is the length of the list.

36
00:02:11,000 --> 00:02:14,000
The number of elements in the input list.
