1
00:00:00,660 --> 00:00:03,840
All right, so
we finished three out of the four items.

2
00:00:03,840 --> 00:00:08,640
We have a list of word objects where
each word is associated with an image.

3
00:00:08,640 --> 00:00:11,360
We have included all
the images in the app, and

4
00:00:11,360 --> 00:00:15,140
we've updated list item layout
to include an image view.

5
00:00:15,140 --> 00:00:20,000
So now for task 4, we need to modify
the instructions in the WordAdapter.

6
00:00:20,000 --> 00:00:21,720
The WordAdapter is responsible for

7
00:00:21,720 --> 00:00:26,180
loading the right information from the
word object into the list item layout,

8
00:00:26,180 --> 00:00:29,070
and this includes loading the right
image into the image view.

9
00:00:30,170 --> 00:00:35,000
So going into our WordAdapter class,
let's zero in on the getView method.

10
00:00:35,000 --> 00:00:38,010
Remember that this method gets called
when the list view is trying to

11
00:00:38,010 --> 00:00:40,850
display a list of items
at a given position.

12
00:00:40,850 --> 00:00:44,750
So the list view will pass in
a potential view that we could reuse.

13
00:00:44,750 --> 00:00:46,110
And here it's called convertView.

14
00:00:46,110 --> 00:00:49,380
And the last input here refers
to the parent view group for

15
00:00:49,380 --> 00:00:52,920
all these list items which
is the ListView itself.

16
00:00:52,920 --> 00:00:56,980
Now the purpose of the getView method
is to return a list item view and

17
00:00:56,980 --> 00:00:58,470
return it to the list view.

18
00:00:58,470 --> 00:01:01,970
So the section of code here
helps us inflate the view.

19
00:01:01,970 --> 00:01:05,810
So we inflate the list item view,
meaning that we create a new list item

20
00:01:05,810 --> 00:01:10,470
layout from this XML resource list_item.

21
00:01:10,470 --> 00:01:14,790
And we're going to soar this in
the list item view variable.

22
00:01:14,790 --> 00:01:18,260
I'm going to jump over toward
this XML resources are cleared.

23
00:01:18,260 --> 00:01:24,360
By right clicking going to Go to and
then Declaration.

24
00:01:24,360 --> 00:01:28,470
So here in the XML resource,
we see that though it's a single view,

25
00:01:28,470 --> 00:01:31,990
it's referencing the linear
layout at the root of the layout.

26
00:01:31,990 --> 00:01:35,820
Well, from this view we can find
the child views and modify them.

27
00:01:35,820 --> 00:01:37,570
Now back to the WordAdapter.

28
00:01:37,570 --> 00:01:40,430
This line of code here helps
us get the word object

29
00:01:40,430 --> 00:01:42,240
at the given position in the list.

30
00:01:42,240 --> 00:01:44,250
And then in this next section of code.,

31
00:01:44,250 --> 00:01:49,887
we find the child text view with
the ID miwork_ text_view and

32
00:01:49,887 --> 00:01:53,290
set the miwork translation of
the word on to that text view.

33
00:01:53,290 --> 00:01:59,935
And then repeat the same steps for
the text view with ID default_text_view.

34
00:01:59,935 --> 00:02:03,970
And set the English translation of
the word on to the text view here.

35
00:02:03,970 --> 00:02:07,065
And lastly since we've added an image
view to our list item layout,

36
00:02:07,065 --> 00:02:10,350
we'll need to make sure our
adapters aware of that, too.

37
00:02:10,350 --> 00:02:14,470
For the next coding task, go ahead and
modify the WordAdapter's get view

38
00:02:14,470 --> 00:02:20,060
method, so it sets the right image into
ImageView of the list item layout.

39
00:02:20,060 --> 00:02:22,870
And as a hint, refer to the Android
flavor app as an example.

40
00:02:23,880 --> 00:02:27,248
As a hint, you can refer to the Android
flavor app from the last lesson if

41
00:02:27,248 --> 00:02:28,040
that helps.

42
00:02:28,040 --> 00:02:30,600
So this app remember
displays an image for

43
00:02:30,600 --> 00:02:33,500
the corresponding Android
release in each list item.

44
00:02:34,620 --> 00:02:37,480
So this is what the new walk app
should look like when you're done.

45
00:02:37,480 --> 00:02:40,440
So notice that there's a problem
with the phrases activity, but

46
00:02:40,440 --> 00:02:42,870
we're going to fix that
in a later code step.

47
00:02:42,870 --> 00:02:44,690
So don't worry about that for this task.
