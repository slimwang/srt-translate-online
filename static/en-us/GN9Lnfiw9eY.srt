1
00:00:05,840 --> 00:00:07,805
Hi and welcome to the fifth office hours.

2
00:00:07,805 --> 00:00:12,151
Hey, welcome, everybody. We got a bunch of students

3
00:00:12,151 --> 00:00:15,764
who are discussing in the forum and we picked

4
00:00:15,764 --> 00:00:17,597
them out because we like what they contributed

5
00:00:17,597 --> 00:00:19,169
to the forum and were going to give them a

6
00:00:19,169 --> 00:00:21,603
chance to ask some questions. So I think,

7
00:00:21,603 --> 00:00:23,602
Elia, you have the first question.

8
00:00:23,602 --> 00:00:28,583
Yes. As I was saying, Dr. Norvig is a luminary,

9
00:00:28,583 --> 00:00:30,506
he is one of the greatest experts

10
00:00:30,506 --> 00:00:33,633
on Natural Language Processing and he's

11
00:00:33,633 --> 00:00:36,051
head researcher at Google which is the most

12
00:00:36,051 --> 00:00:39,228
famous company for taking text from users and

13
00:00:39,228 --> 00:00:42,456
turning it into meaning across the vast wide

14
00:00:42,456 --> 00:00:45,806
interwebs. So, given that we touch the tip of the

15
00:00:45,806 --> 00:00:50,429
iceberg of NLP in Unit 3 with a little bit of regular

16
00:00:50,429 --> 00:00:54,811
expressions and regex parser and I was

17
00:00:54,811 --> 00:00:57,409
wondering if Dr. Norvig would, at some point in

18
00:00:57,409 --> 00:01:01,224
the future, teach a 300 level or 400 level Udacity

19
00:01:01,224 --> 00:01:03,890
class on using Python or maybe another

20
00:01:03,890 --> 00:01:07,111
programming language to do NLP. I find this is an

21
00:01:07,111 --> 00:01:10,480
absolutely fascinating field and I know its had

22
00:01:10,480 --> 00:01:12,510
tremendous success such as at Renaissance

23
00:01:12,510 --> 00:01:16,079
Technologies with Watson and so on. And I was

24
00:01:16,079 --> 00:01:17,981
really hoping to learn it and I dont think there

25
00:01:17,981 --> 00:01:19,845
is a better authority for that in the world

26
00:01:19,845 --> 00:01:22,080
than Dr.Norvig. So will he be teaching

27
00:01:22,080 --> 00:01:24,380
us as class in the future.

28
00:01:24,380 --> 00:01:27,436
Okay. So first of all, you have to be careful

29
00:01:27,436 --> 00:01:30,135
about trying to become a teachers pet on an

30
00:01:30,135 --> 00:01:32,920
online class as well as regular class. So lets

31
00:01:32,920 --> 00:01:37,078
calm down the praise a little bit. But thank you.

32
00:01:37,078 --> 00:01:39,270
Secondly, I think thats a great idea. I think that is

33
00:01:39,270 --> 00:01:41,471
a good course, its one I would like to do at some

34
00:01:41,471 --> 00:01:43,640
point but there is only so many hours in a day. So

35
00:01:43,640 --> 00:01:46,841
were doing one thing at a time. It would be fun to

36
00:01:46,841 --> 00:01:51,338
do it. It would be a more advanced level class. I

37
00:01:51,338 --> 00:01:54,209
guess one reason why I am not doing it right now

38
00:01:54,209 --> 00:01:58,964
is that there is another class being offered by

39
00:01:58,964 --> 00:02:03,196
Jurafsky and Chris Manning and they are both

40
00:02:03,196 --> 00:02:07,161
equally extremely well-qualified experts. So they,

41
00:02:07,161 --> 00:02:09,904
I am sure, teach a very good class too, be fun for

42
00:02:09,904 --> 00:02:13,872
me to do it. I have new colleague at Google,

43
00:02:13,872 --> 00:02:16,568
Prabhakar Raghavan, whos also an expert and

44
00:02:16,568 --> 00:02:19,083
has published several books in his area, might be

45
00:02:19,083 --> 00:02:21,901
fun for me to do it together with him. So I dont

46
00:02:21,901 --> 00:02:24,805
know exactly what the schedule is but I know

47
00:02:24,805 --> 00:02:26,307
it is a goal of mine to get around

48
00:02:26,307 --> 00:02:28,304
teaching their class at some point.

49
00:02:28,304 --> 00:02:32,704
Alright. Alison, I think you have question.

50
00:02:32,704 --> 00:02:34,971
I do, yes. I wanted to ask you a little bit

51
00:02:34,971 --> 00:02:38,397
about spotting errors and optimization of

52
00:02:38,397 --> 00:02:40,664
expected value functions where youve got these

53
00:02:40,664 --> 00:02:43,930
really complicated mathematical functions.

54
00:02:43,930 --> 00:02:46,212
I mean I think when I was trying to solve, to find

55
00:02:46,212 --> 00:02:50,025
the bugs in my PIC code, all the easy cases

56
00:02:50,025 --> 00:02:53,265
worked  all the ones I could check but there was

57
00:02:53,265 --> 00:02:54,739
something wrong with the maths because I

58
00:02:54,739 --> 00:02:56,754
wasnt winning any of the games and that was

59
00:02:56,754 --> 00:02:58,289
the only way I could tell because I wasnt winning

60
00:02:58,289 --> 00:03:00,082
the games. Everything looked plausible apart

61
00:03:00,082 --> 00:03:02,373
from that. So how did you go  what sort of

62
00:03:02,373 --> 00:03:04,970
strategies do you use to try and catch

63
00:03:04,970 --> 00:03:06,377
our errors in computation workout?

64
00:03:06,377 --> 00:03:08,235
Okay. So I can answer that both in terms

65
00:03:08,235 --> 00:03:10,069
of strategies in general and then specifically

66
00:03:10,069 --> 00:03:13,660
for this type of problem you mentioned.

67
00:03:13,660 --> 00:03:16,870
So in general, you want a testing strategy

68
00:03:16,870 --> 00:03:19,463
that does integration testing. As were

69
00:03:19,463 --> 00:03:22,128
testing the whole thing and unit testing, youre

70
00:03:22,128 --> 00:03:24,658
testing a little bit at a time and what you were

71
00:03:24,658 --> 00:03:27,884
discovering is you have this integration test of

72
00:03:27,884 --> 00:03:30,888
how my function play against another function.

73
00:03:30,888 --> 00:03:33,682
So thats the whole program all at once. And you

74
00:03:33,682 --> 00:03:37,081
were finding that you were losing. And so thats a

75
00:03:37,081 --> 00:03:39,218
great test to do. Its an integration test and you

76
00:03:39,218 --> 00:03:41,335
failed the test. Its an important test to do because

77
00:03:41,335 --> 00:03:44,383
if you succeed, then you are happy. But if you dont

78
00:03:44,383 --> 00:03:45,591
succeed, at least you know something wrong but

79
00:03:45,591 --> 00:03:47,297
it doesnt tell you very much at all about where

80
00:03:47,297 --> 00:03:49,966
its wrong and thats what you discovered. So that's

81
00:03:49,966 --> 00:03:52,402
why we have the unit test that tests smaller

82
00:03:52,402 --> 00:03:55,800
pieces and I guess the things to do there is to

83
00:03:55,800 --> 00:03:59,468
start with pieces for which you know the right

84
00:03:59,468 --> 00:04:03,252
answer. Say, here is a position thats near the

85
00:04:03,252 --> 00:04:07,303
end of the game, its clear, I should do this move,

86
00:04:07,303 --> 00:04:11,647
does my function do the right thing on that case.

87
00:04:11,647 --> 00:04:13,707
And then I think its that one right, then back up

88
00:04:13,707 --> 00:04:17,193
one step and say, okay, the move before that and

89
00:04:17,193 --> 00:04:18,438
I know that thats the right move, what would the

90
00:04:18,438 --> 00:04:20,906
right move be before that? And that maybe you

91
00:04:20,906 --> 00:04:23,085
can calculate out your own in pencil and paper

92
00:04:23,085 --> 00:04:24,248
and then you can test to see if they got that one

93
00:04:24,248 --> 00:04:27,433
right. Anyway, you start moving backwards and

94
00:04:27,433 --> 00:04:30,149
making the test complicated one more step at a

95
00:04:30,149 --> 00:04:32,910
time and then you can get to the point where the

96
00:04:32,910 --> 00:04:35,323
unit tests match up with the integration test

97
00:04:35,323 --> 00:04:39,257
and then hopefully you got the right answer.

98
00:04:39,257 --> 00:04:41,072
Alright. Tincher, you had a few questions.

99
00:04:41,072 --> 00:04:43,168
Do you want to start asking for those?

100
00:04:43,168 --> 00:04:46,656
Yeah, my questions have a general theme.

101
00:04:46,656 --> 00:04:48,732
So the code that Ive seen in this class.

102
00:04:48,732 --> 00:04:50,895
so Ive actually tinkered with Python a

103
00:04:50,895 --> 00:04:53,785
little bit before this class but the code that I have

104
00:04:53,785 --> 00:04:55,926
seen in this class is the code that I have never

105
00:04:55,926 --> 00:04:58,450
seen before. So its been really cool to be

106
00:04:58,450 --> 00:05:01,167
exposed to that but it makes me wonder what

107
00:05:01,167 --> 00:05:05,589
else am I missing, what are the things  it makes

108
00:05:05,589 --> 00:05:07,919
me wonder that there is a whole realm of

109
00:05:07,919 --> 00:05:10,386
developing code that I dont even know about

110
00:05:10,386 --> 00:05:12,901
thats not just the code. So I want to know your

111
00:05:12,901 --> 00:05:14,677
development environment and I want to know like

112
00:05:14,677 --> 00:05:17,479
what type of integrated development environment

113
00:05:17,479 --> 00:05:21,688
you used whether you used GUI debugger,

114
00:05:21,688 --> 00:05:23,957
whether you used a profiler and actually most

115
00:05:23,957 --> 00:05:25,361
important question is what are some of the most

116
00:05:25,361 --> 00:05:27,725
important third-party Python libraries

117
00:05:27,725 --> 00:05:29,263
that you think we should study?

118
00:05:29,263 --> 00:05:32,539
Okay. So thats a great question and I might not

119
00:05:32,539 --> 00:05:36,503
be the right person to answer that because

120
00:05:36,503 --> 00:05:41,680
most of my use of Python is educational more than

121
00:05:41,680 --> 00:05:45,879
sort of serious professional development. And so I

122
00:05:45,879 --> 00:05:48,392
intentionally try to stay away from a lot of the fancy

123
00:05:48,392 --> 00:05:51,177
tools because I want to say I want to do something

124
00:05:51,177 --> 00:05:53,803
that I know all the students that are going to see

125
00:05:53,803 --> 00:05:56,977
what I am doing can duplicate and so if its something

126
00:05:56,977 --> 00:06:01,052
thats proprietary, third-party fancy tool, I want to

127
00:06:01,052 --> 00:06:04,732
not have that. And I guess I am also I am kind of

128
00:06:04,732 --> 00:06:08,482
old-fashioned. I dont know what the right IDE is

129
00:06:08,482 --> 00:06:12,535
and I am playing around with some of them but

130
00:06:12,535 --> 00:06:14,571
you know, I am used to using Emacs that I have

131
00:06:14,571 --> 00:06:17,102
used for many, many years and so Ive got all the

132
00:06:17,102 --> 00:06:18,669
commands, sort of memorize them at my

133
00:06:18,669 --> 00:06:22,400
fingertips and so I tend to use that. There are

134
00:06:22,400 --> 00:06:24,767
some other IDEs that duplicate a lot of the

135
00:06:24,767 --> 00:06:27,784
command. So I can be familiar using those as

136
00:06:27,784 --> 00:06:33,277
well and Im trying those out. And in terms of the

137
00:06:33,277 --> 00:06:37,909
libraries, I guess the most important one to me is

138
00:06:37,909 --> 00:06:43,851
the SciPy and the NumPy and I really would hope

139
00:06:43,851 --> 00:06:46,828
that at some point they become sort of an official

140
00:06:46,828 --> 00:06:49,577
part of the Python distribution and its all

141
00:06:49,577 --> 00:06:51,411
packaged together. You can get them packaged

142
00:06:51,411 --> 00:06:53,822
them together but you can't rely on everybody

143
00:06:53,822 --> 00:06:57,647
having those installed. I think the reason that they

144
00:06:57,647 --> 00:06:59,647
havent been merged together so far is that they

145
00:06:59,647 --> 00:07:01,673
are on a different release schedules in terms of

146
00:07:01,673 --> 00:07:03,740
the number of months or years in between

147
00:07:03,740 --> 00:07:07,520
releases is at a different pace. But I hope

148
00:07:07,520 --> 00:07:09,338
that can be worked out and that becomes

149
00:07:09,338 --> 00:07:12,803
standardized, that would be really great. And

150
00:07:12,803 --> 00:07:16,599
then in terms of how I do debugging and so on,

151
00:07:16,599 --> 00:07:19,335
occasionally, I use the symbolic debugger not

152
00:07:19,335 --> 00:07:24,260
that much, mostly just print statements and tests

153
00:07:24,260 --> 00:07:26,512
and breaking it down into small pieces using the

154
00:07:26,512 --> 00:07:29,034
interactive interpreter a lot. So I load the program

155
00:07:29,034 --> 00:07:32,319
in and then start typing in calls to my sub-

156
00:07:32,319 --> 00:07:34,918
functions in the interactive interpreter looking at

157
00:07:34,918 --> 00:07:38,451
the results so you have those makes sense. I use the

158
00:07:38,451 --> 00:07:43,266
profiler occasionally but I guess I usually find

159
00:07:43,266 --> 00:07:46,581
that if its so slow that you need a profiler then

160
00:07:46,581 --> 00:07:50,561
maybe Python isnt the language for you. So often

161
00:07:50,561 --> 00:07:55,478
I found it slow then the answer is to go and

162
00:07:55,478 --> 00:07:57,820
recode it in java or something rather than to try to

163
00:07:57,820 --> 00:08:01,233
make Python work faster. I know it all depends

164
00:08:01,233 --> 00:08:03,070
on the problem what youre trying to use and

165
00:08:03,070 --> 00:08:05,692
what youre trying to integrate with.

166
00:08:05,692 --> 00:08:07,210
Alright, Alison, looks like you have another

167
00:08:07,210 --> 00:08:10,247
question youd like to ask?

168
00:08:10,247 --> 00:08:12,637
I do, yes. Some of us started off with

169
00:08:12,637 --> 00:08:15,451
CS101 and then move on to this class and

170
00:08:15,451 --> 00:08:17,221
we all got a bit stuck on Unit 3 but were doing

171
00:08:17,221 --> 00:08:19,371
okay now. And were now thinking about what we

172
00:08:19,371 --> 00:08:22,069
should do in the next hexamester what do you

173
00:08:22,069 --> 00:08:25,020
think would be a good step-on from CS212 in

174
00:08:25,020 --> 00:08:27,967
terms of Udacitys course is given that we

175
00:08:27,967 --> 00:08:30,075
probably only got time to do one.

176
00:08:30,075 --> 00:08:32,318
So first of all, I want to say congratulations to

177
00:08:32,318 --> 00:08:36,039
you and all the others who really truly started with

178
00:08:36,039 --> 00:08:38,989
101 as their first class. I think its quite

179
00:08:38,989 --> 00:08:41,388
impressive that youve been able to come this far.

180
00:08:41,388 --> 00:08:45,263
And we designed 101 so that it could be taken by

181
00:08:45,263 --> 00:08:48,473
people with no experience before but a lot of people

182
00:08:48,473 --> 00:08:52,147
in 101 did have some degree of prior experience.

183
00:08:52,147 --> 00:08:56,038
So for those of you who didnt, its a testament to

184
00:08:56,038 --> 00:09:00,965
your perseverance and I think its something that 101

185
00:09:00,996 --> 00:09:03,414
work in terms of being able to hit that broad

186
00:09:03,414 --> 00:09:07,259
audience. Lets see, and can you pull up the list

187
00:09:07,259 --> 00:09:09,494
of classes that were going to have next? Ive got.

188
00:09:09,494 --> 00:09:11,766
You got it and got to pull up already. Yes. Okay.

189
00:09:11,766 --> 00:09:13,806
Go ahead. The computer science classes that

190
00:09:13,806 --> 00:09:16,270
were offering are going to be software testing,

191
00:09:16,270 --> 00:09:18,798
software engineering, and data structuring in

192
00:09:18,798 --> 00:09:21,623
algorithms. Maybe you can comment on which of

193
00:09:21,623 --> 00:09:26,805
those three youd recommend next. Lets see.

194
00:09:26,805 --> 00:09:30,240
And what levels are they at? Thats a good

195
00:09:30,240 --> 00:09:31,711
question. Its something I dont have at the top of

196
00:09:31,711 --> 00:09:33,678
my head. Yeah. But I think most of them are

197
00:09:33,678 --> 00:09:36,086
going to be 200 level classes and perhaps the

198
00:09:36,086 --> 00:09:39,474
engineering will be a 100 level. Yeah. Not

199
00:09:39,474 --> 00:09:40,877
committed to any of these statements yet

200
00:09:40,877 --> 00:09:42,763
because were still ironing out the details. Weve

201
00:09:42,763 --> 00:09:44,454
had a lot of professors in lately doing a lot of

202
00:09:44,454 --> 00:09:47,100
filming. We have a new recording studio with five

203
00:09:47,100 --> 00:09:50,402
recording setups. So that will have content now

204
00:09:50,402 --> 00:09:52,917
Pretty exciting. But in addition to those three

205
00:09:52,917 --> 00:09:54,519
computer science classes we are going to have a

206
00:09:54,519 --> 00:09:57,750
discrete math course, a statistics course taught

207
00:09:57,750 --> 00:09:59,923
by Sebastian and a physics course that I will be

208
00:09:59,923 --> 00:10:03,712
teaching. Okay, yes, that all sounds good.

209
00:10:03,712 --> 00:10:05,942
I guess I would probably say that the algorithms

210
00:10:05,942 --> 00:10:09,358
would tend to be the next class if I look at the

211
00:10:09,358 --> 00:10:12,226
way people usually learn in a traditional

212
00:10:12,226 --> 00:10:14,327
university, you might have the algorithm class

213
00:10:14,327 --> 00:10:17,315
would be the natural next one.

214
00:10:17,315 --> 00:10:19,114
And who is teaching that one?

215
00:10:19,114 --> 00:10:22,365
Algorithm is going to be taught by Michael Littman.

216
00:10:22,365 --> 00:10:25,619
So  and I know Mike, he is a great teacher.

217
00:10:25,619 --> 00:10:27,692
So I think you would enjoy that class, not to take

218
00:10:27,692 --> 00:10:30,153
anything away from the other ones but they might be

219
00:10:30,153 --> 00:10:33,162
something that you could take afterwards.

220
00:10:33,162 --> 00:10:34,994
Alright. Ginger, it looks like you have another

221
00:10:34,994 --> 00:10:39,972
question. Yes. And this was back to Unit 3 again also.

222
00:10:39,972 --> 00:10:43,701
So I was curious as to whether commercial regular

223
00:10:43,701 --> 00:10:47,269
expression and/or JSON parsers were written anything

224
00:10:47,269 --> 00:10:49,176
like we saw in Unit 3 or was that just  was that

225
00:10:49,176 --> 00:10:52,492
just called for academic purposes of presenting

226
00:10:52,492 --> 00:10:56,646
grammars and the power of generalization?

227
00:10:56,646 --> 00:10:59,904
Okay, thats a great question. And the answer is

228
00:10:59,904 --> 00:11:04,720
somewhat  so many systems like that do write

229
00:11:04,720 --> 00:11:08,003
parsers where the grammar that youre writing is

230
00:11:08,003 --> 00:11:11,278
similar that you say, here is the left hand side,

231
00:11:11,278 --> 00:11:14,276
here is an arrow, here is the right hand side and

232
00:11:14,276 --> 00:11:16,362
there are lots of systems that have that basic

233
00:11:16,362 --> 00:11:19,376
type of format and so that is familiar. You will see

234
00:11:19,376 --> 00:11:21,834
that elsewhere and that is used in professional

235
00:11:21,834 --> 00:11:24,525
level systems. Now, how thats actually

236
00:11:24,525 --> 00:11:28,122
interpreted is somewhat more complicated

237
00:11:28,122 --> 00:11:31,223
because they wanted to be easy for you to

238
00:11:31,223 --> 00:11:33,515
express the grammar but they also wanted to be

239
00:11:33,515 --> 00:11:36,746
fast and efficient to run that grammar to parse

240
00:11:36,746 --> 00:11:39,803
some and so there is more complications in

241
00:11:39,803 --> 00:11:42,327
terms of how you turn the grammar into a data

242
00:11:42,327 --> 00:11:45,045
structure that can be efficiently processed and I

243
00:11:45,045 --> 00:11:47,341
didnt want to worry about those complications, I

244
00:11:47,341 --> 00:11:51,734
wanted to just show you that it was possible to do it.

245
00:11:51,734 --> 00:11:55,491
Alright. Alison, you got another question.

246
00:11:55,491 --> 00:11:59,739
Yeah, I  be prepared like I was told. I wanted to

247
00:11:59,739 --> 00:12:01,971
ask a little bit about how the sort of optimization

248
00:12:01,971 --> 00:12:04,833
function weve been doing in Unit 5 compares to

249
00:12:04,833 --> 00:12:08,173
game AIs, because for a computer game a near

250
00:12:08,173 --> 00:12:10,407
optimal strategy might not be as much fun to play

251
00:12:10,407 --> 00:12:12,476
as one wereThats right. the computer

252
00:12:12,476 --> 00:12:14,399
actually makes some mistakes and I know that

253
00:12:14,399 --> 00:12:17,434
bad gaming programs people keep accusing the

254
00:12:17,434 --> 00:12:19,575
writers of cheating with the die rolls because

255
00:12:19,575 --> 00:12:21,874
were beginning to play well but it looks like

256
00:12:21,874 --> 00:12:23,971
they are lucky. So what sort of approaches

257
00:12:23,971 --> 00:12:26,006
work best in the real world?

258
00:12:26,006 --> 00:12:29,152
Yes, so thats a great question. So in the real

259
00:12:29,152 --> 00:12:31,500
world, usually your goal is not just to win the

260
00:12:31,500 --> 00:12:34,700
game, your goal is to keep the people that are

261
00:12:34,700 --> 00:12:38,183
playing the games happy. And so that

262
00:12:38,183 --> 00:12:41,413
means a couple of things. One, some of the

263
00:12:41,413 --> 00:12:45,586
games are used partly as a teaching mechanism.

264
00:12:45,586 --> 00:12:50,092
So particularly for things like Chess and Go,

265
00:12:50,092 --> 00:12:52,132
chess players want to play it not just because

266
00:12:52,132 --> 00:12:53,683
they want to play a game, but because they want

267
00:12:53,683 --> 00:12:56,030
to improve their game. And so the system has to

268
00:12:56,030 --> 00:12:59,285
do something, it has to be able to explain in some

269
00:12:59,285 --> 00:13:01,985
ways why it did things so that you can learn from

270
00:13:01,985 --> 00:13:04,856
that. So that really changes the focus of it.

271
00:13:04,856 --> 00:13:07,596
Another part you bring out is its really boring to

272
00:13:07,596 --> 00:13:10,880
lose all the time and there are several ways

273
00:13:10,880 --> 00:13:13,737
around that. One is you can just have a setting,

274
00:13:13,737 --> 00:13:17,580
right? So how much compute time do you spend?

275
00:13:17,580 --> 00:13:19,767
How far do you look ahead and that can be a little

276
00:13:19,767 --> 00:13:22,973
slider and if youre losing, you can pull that slider

277
00:13:22,973 --> 00:13:25,621
back so you can catch up and if you are

278
00:13:25,621 --> 00:13:27,939
collaborating the computer, you can push the

279
00:13:27,939 --> 00:13:30,948
slider up, so you can try harder and that going to

280
00:13:30,948 --> 00:13:35,172
work. So in the more sophisticated games

281
00:13:35,172 --> 00:13:37,480
actually have an internal model of whats going

282
00:13:37,480 --> 00:13:42,054
on and what makes sport interest and then they

283
00:13:42,054 --> 00:13:45,619
all respond to that and not so much in the chess

284
00:13:45,619 --> 00:13:48,302
and checkers types of games, but in things like

285
00:13:48,302 --> 00:13:51,637
an auto race game where it would be boring if

286
00:13:51,637 --> 00:13:54,677
you were far behind or far ahead. There is a

287
00:13:54,677 --> 00:13:58,013
routines there that try to make everybody be

288
00:13:58,013 --> 00:14:01,179
packed together. So the winning cars will slow down

289
00:14:01,179 --> 00:14:03,043
if you are behind and they will speed up if

290
00:14:03,043 --> 00:14:06,245
you past them. But they have to do it in a

291
00:14:06,245 --> 00:14:08,553
believable way that doesnt just look like the

292
00:14:08,553 --> 00:14:11,675
system is cheating; it looks like its a real race.

293
00:14:11,675 --> 00:14:13,894
And so we know it can be harder to make it look

294
00:14:13,894 --> 00:14:15,944
realistic than it can be to just do the optimum

295
00:14:15,944 --> 00:14:20,759
work thing. Alright. Elia, you have another

296
00:14:20,759 --> 00:14:24,094
question? Yes. Dr. Norvig mentioned he uses

297
00:14:24,094 --> 00:14:26,740
Python for an educational or recreational

298
00:14:26,740 --> 00:14:29,635
purposes and I am wondering that what sort of

299
00:14:29,635 --> 00:14:32,417
languages do we really need to know if we are

300
00:14:32,417 --> 00:14:35,612
intent on pursuing a technical career, for example,

301
00:14:35,612 --> 00:14:37,538
I have a BS in operations research,

302
00:14:37,538 --> 00:14:41,150
Masters in statistics and I intend for my career to

303
00:14:41,150 --> 00:14:44,470
actually use these skills and so I wonder as a

304
00:14:44,470 --> 00:14:46,754
technical professional, which languages should I

305
00:14:46,754 --> 00:14:49,673
really know so that I could show, yes, I can hack

306
00:14:49,673 --> 00:14:53,571
this and when does Udacity plan on offering

307
00:14:53,571 --> 00:14:55,972
courses using these languages because

308
00:14:55,972 --> 00:14:57,533
it's such a great system?

309
00:14:57,533 --> 00:14:59,457
Great. Yeah, so I didnt mean to knock Python

310
00:14:59,457 --> 00:15:02,938
anyway or say that its not professional level.

311
00:15:02,938 --> 00:15:04,755
Certainly, there are lots and lots of people and

312
00:15:04,755 --> 00:15:07,982
companies that are using Python all the time. I

313
00:15:07,982 --> 00:15:10,779
was just saying I was using a subset of it sort of

314
00:15:10,779 --> 00:15:13,372
the intersection of what you would use

315
00:15:13,372 --> 00:15:14,841
professionally and what you would use

316
00:15:14,841 --> 00:15:18,367
educationally. So Python is a good answer.

317
00:15:18,367 --> 00:15:22,320
There are other languages that are similar to that

318
00:15:22,320 --> 00:15:28,497
that are gaining in popularity, Ruby and Closure,

319
00:15:28,497 --> 00:15:32,541
you hear about a lot. The  I guess the strongest

320
00:15:32,541 --> 00:15:37,245
languages traditionally would be JAVA and C++

321
00:15:37,245 --> 00:15:42,405
and so there a little more verbose in terms of

322
00:15:42,405 --> 00:15:47,431
what you have to write but also a little bit more

323
00:15:47,431 --> 00:15:50,542
explicit in terms of how you understand whats

324
00:15:50,542 --> 00:15:54,470
going on in the programme. So one of the

325
00:15:54,470 --> 00:15:57,859
disadvantages of Python that we see for  used

326
00:15:57,859 --> 00:16:02,528
by professionals is there is no declarations of

327
00:16:02,528 --> 00:16:05,391
what the inputs and outputs functions are. You

328
00:16:05,391 --> 00:16:07,773
could sort of see whats going on just by looking

329
00:16:07,773 --> 00:16:09,849
at the function and if youre writing a small

330
00:16:09,849 --> 00:16:12,041
program, and thats probably fine, but as the

331
00:16:12,041 --> 00:16:14,396
programs get larger, sometimes you can get lost

332
00:16:14,396 --> 00:16:17,579
do not know exactly what do I pass in here. You

333
00:16:17,579 --> 00:16:20,930
know and says, oh, I see I should pass in a

334
00:16:20,930 --> 00:16:24,307
sequence to this function that is either a list or

335
00:16:24,307 --> 00:16:26,465
triple okay or does it have to be one or the other,

336
00:16:26,465 --> 00:16:28,955
sometimes its not obvious in Python and that can

337
00:16:28,955 --> 00:16:32,677
be two errors in a larger project where its just

338
00:16:32,677 --> 00:16:35,312
hard to keep tracking all of that stuff. And so a

339
00:16:35,312 --> 00:16:38,359
language like a JAVA is more explicit that way

340
00:16:38,359 --> 00:16:40,907
even though you have to write more stuff to get to

341
00:16:40,907 --> 00:16:44,395
the same type of result. But I think, you know, in

342
00:16:44,395 --> 00:16:47,673
the end, you look around at the jobs you want

343
00:16:47,673 --> 00:16:50,820
and the community you want to be a part of and

344
00:16:50,820 --> 00:16:52,971
see whether they are using. So you know, if

345
00:16:52,971 --> 00:16:55,413
youre a statistician, all the languages I

346
00:16:55,413 --> 00:16:57,944
mentioned I know can be used for those types of

347
00:16:57,944 --> 00:17:01,422
jobs, I know there is also people used math lab

348
00:17:01,422 --> 00:17:05,405
and R and mathematical and other packages like

349
00:17:05,405 --> 00:17:09,520
that. So you have to look at your community and

350
00:17:09,520 --> 00:17:12,362
see what they use and then be proficient in the

351
00:17:12,362 --> 00:17:16,274
tools that the community expects. The next

352
00:17:16,274 --> 00:17:19,219
question is actually write-in question that came

353
00:17:19,219 --> 00:17:23,199
Portchanista says that there seems to be a

354
00:17:23,199 --> 00:17:25,014
widespread belief that during development,

355
00:17:25,014 --> 00:17:26,573
educations make code more and more

356
00:17:26,573 --> 00:17:29,500
complicated and less elegant and eventually the

357
00:17:29,500 --> 00:17:31,746
lines of special case code becomes so much

358
00:17:31,746 --> 00:17:34,675
greater than the amount of actual original design

359
00:17:34,675 --> 00:17:37,947
that get this mess on our hands so is this

360
00:17:37,947 --> 00:17:42,798
generally true or a myth? So you certainly see

361
00:17:42,798 --> 00:17:47,624
that happening that larger portion of the code can

362
00:17:47,624 --> 00:17:50,435
be error handling and then a very small portion is,

363
00:17:50,435 --> 00:17:52,410
here is the core algorithm after Ive taken care of

364
00:17:52,410 --> 00:17:58,032
all the errors. And I think there are different styles

365
00:17:58,032 --> 00:18:03,433
that lead to that happening more or less. One is

366
00:18:03,433 --> 00:18:07,336
in terms of the flexibility of the language and so a

367
00:18:07,336 --> 00:18:09,890
language like Python is very flexible. As I said, it

368
00:18:09,890 --> 00:18:12,870
doesnt care in many cases what you pass in, so

369
00:18:12,870 --> 00:18:14,272
you dont have to spend a lot of time checking the

370
00:18:14,272 --> 00:18:17,494
inputs to say this is exactly the right type of input.

371
00:18:17,494 --> 00:18:20,462
You just say, ah, go ahead and do it. So that

372
00:18:20,462 --> 00:18:23,047
makes the code more concise that way, it could

373
00:18:23,047 --> 00:18:25,997
be less so in another language. I guess it also

374
00:18:25,997 --> 00:18:29,561
depends on how much control you have over the

375
00:18:29,561 --> 00:18:31,805
whole system. So if you are writing your whole

376
00:18:31,805 --> 00:18:33,735
system from scratch, then you can kind of set the

377
00:18:33,735 --> 00:18:36,827
guideline that the only types of objects that Im

378
00:18:36,827 --> 00:18:39,841
going to create are objects of this type and I

379
00:18:39,841 --> 00:18:42,206
know that this is all that I am passing around and

380
00:18:42,206 --> 00:18:44,253
so I can pass them around with impunity and

381
00:18:44,253 --> 00:18:47,764
never have to check. And thats great if you are

382
00:18:47,764 --> 00:18:50,092
building a system from scratch. In other cases,

383
00:18:50,092 --> 00:18:53,319
you have to interface with existing systems and

384
00:18:53,319 --> 00:18:55,936
you never know quite whats coming out of those

385
00:18:55,936 --> 00:18:58,089
other systems. So you will always have to check

386
00:18:58,089 --> 00:19:01,656
and say, if I was passing in something myself to

387
00:19:01,656 --> 00:19:03,855
this function, I know it would be the right thing but

388
00:19:03,855 --> 00:19:07,293
I am getting it downloading it off of website or

389
00:19:07,293 --> 00:19:09,961
calling another server and getting a call back and

390
00:19:09,961 --> 00:19:11,804
being passed something. So now, the first thing I

391
00:19:11,804 --> 00:19:13,478
have to do is check the inputs to see if they are

392
00:19:13,478 --> 00:19:15,878
valid before I can do something. And, yes, true,

393
00:19:15,878 --> 00:19:19,077
that can end up being more work than the sort of

394
00:19:19,077 --> 00:19:22,824
actual real work of the code.

395
00:19:22,824 --> 00:19:24,807
Alright. Well, it looks like maybe all the questions

396
00:19:24,807 --> 00:19:28,734
we have for today. Thank you to you guys for asking

397
00:19:28,734 --> 00:19:32,799
those questions. Anybody else so  got a last one. Oh,

398
00:19:32,799 --> 00:19:36,100
factor sink. Okay. Would you like to  I dont

399
00:19:36,100 --> 00:19:38,037
know if your audio is working but if it is try and

400
00:19:38,037 --> 00:19:42,016
give it a shot and otherwise I can repeat.

401
00:19:42,016 --> 00:19:46,224
Oh, yes. I wanted to ask about the current research

402
00:19:46,224 --> 00:19:51,444
in the big data that Google does. I think its a

403
00:19:51,444 --> 00:19:57,190
very hot topic these days, and its going to be more

404
00:19:57,190 --> 00:20:02,581
and more important using the probabilistic models,

405
00:20:02,581 --> 00:20:07,082
something like my continuation of what we were

406
00:20:07,082 --> 00:20:12,539
doing this weeks lesson. Yeah. So please, if you

407
00:20:12,539 --> 00:20:15,989
could tell us something more about what you are

408
00:20:15,989 --> 00:20:21,288
doing. Okay, thats great topic. Were doing a lot

409
00:20:21,288 --> 00:20:24,136
and I think you are right that a lot of what we do

410
00:20:24,136 --> 00:20:27,634
does rely on probabilistic models and the reason

411
00:20:27,634 --> 00:20:31,151
is because we are collecting a lot of data and we

412
00:20:31,151 --> 00:20:33,853
are collecting it from a lot of sources and work

413
00:20:33,853 --> 00:20:37,021
hasnt gone in to verify those sources upfront we

414
00:20:37,021 --> 00:20:39,502
talk about that trade-off. So you can verify a data

415
00:20:39,502 --> 00:20:41,978
first or you just grab it as it is. And when we take

416
00:20:41,978 --> 00:20:44,983
stuff off the web, when we gather images, when

417
00:20:44,983 --> 00:20:49,154
we gather text, its just anything is out there.

418
00:20:49,154 --> 00:20:52,137
It is not like a well-formed database where

419
00:20:52,137 --> 00:20:54,541
you know you got a database of employees or you

420
00:20:54,541 --> 00:20:58,291
got a database of bank records and every record

421
00:20:58,291 --> 00:21:01,089
is verified to be accurate. We dont have any of

422
00:21:01,089 --> 00:21:04,080
them. So weve got all the stuff; some of it is

423
00:21:04,080 --> 00:21:08,728
right, some of it is wrong, much of it is duplicates.

424
00:21:08,728 --> 00:21:11,699
And we can't just take it as is. So  and we dont

425
00:21:11,699 --> 00:21:13,758
know where the uncertainty is. So we need this

426
00:21:13,758 --> 00:21:17,535
probabilistic model. So thats certainly the

427
00:21:17,535 --> 00:21:20,245
approach. Now, what does it mean to do

428
00:21:20,245 --> 00:21:23,082
research in that area? Lots of bunch of things.

429
00:21:23,082 --> 00:21:26,390
One is what is the data you want to work on? You

430
00:21:26,390 --> 00:21:29,476
work on text of various kinds, web pages

431
00:21:29,476 --> 00:21:33,251
obviously and then theres all sorts of other new

432
00:21:33,251 --> 00:21:36,822
forms now of blogs and tweets and comments

433
00:21:36,822 --> 00:21:42,400
and everything else. Theres also audio and

434
00:21:42,400 --> 00:21:45,262
visual, still images and movies, were collecting

435
00:21:45,262 --> 00:21:47,090
lots and lots of those and learning how to process

436
00:21:47,090 --> 00:21:51,240
them. Those are harder than text because you

437
00:21:51,240 --> 00:21:53,590
can't deal just with the raw pixels or the raw

438
00:21:53,590 --> 00:21:57,249
sound form; you have to interpret that first. And

439
00:21:57,249 --> 00:21:59,791
so there is research in making models of what it

440
00:21:59,791 --> 00:22:02,159
means to be an amateur, what it means to be a

441
00:22:02,159 --> 00:22:05,656
sound. We have to do all that. Then there is

442
00:22:05,656 --> 00:22:08,259
research in how to do this all efficiency, how to

443
00:22:08,259 --> 00:22:12,451
move around this terabytes and petabytes of data

444
00:22:12,451 --> 00:22:14,488
from once place to another, and get enough

445
00:22:14,488 --> 00:22:16,441
computers into the right place and get the data

446
00:22:16,441 --> 00:22:20,041
processed in the right place. Were doing all that.

447
00:22:20,041 --> 00:22:22,306
There is research in machine learning or in

448
00:22:22,306 --> 00:22:26,394
optimization of saying what is the optimal result

449
00:22:26,394 --> 00:22:29,547
for this  that there is so much data, its hard to

450
00:22:29,547 --> 00:22:32,115
compute using a traditional algorithm. Can we

451
00:22:32,115 --> 00:22:34,003
come up with algorithm instead of proximate the

452
00:22:34,003 --> 00:22:37,680
optimal result and will run efficiently over this and

453
00:22:37,680 --> 00:22:40,713
so in some case, thats inventing new algorithms

454
00:22:40,713 --> 00:22:43,495
for adapting existing algorithms to work on these

455
00:22:43,495 --> 00:22:46,160
larger amounts of data and to take advantage of

456
00:22:46,160 --> 00:22:51,121
the computing resources we have. So lots of

457
00:22:51,121 --> 00:22:54,329
work left to be done. You know, I feel like were

458
00:22:54,329 --> 00:22:56,673
just getting started but its an exciting area. So I

459
00:22:56,673 --> 00:22:59,406
promise I won't solve it all before you guys learn

460
00:22:59,406 --> 00:23:02,388
enough that you can contribute enough.

461
00:23:02,388 --> 00:23:05,359
Alright. Well, thank you very much. Thank you

462
00:23:05,359 --> 00:23:09,324
to Alison and Praseck and Ginger and Elia. Yeah,

463
00:23:09,324 --> 00:23:10,646
thank you. And to all the other students

464
00:23:10,646 --> 00:23:13,349
who are watching, thanks. See you next week.

465
00:23:13,349 --> 00:23:15,567
See you next week.
