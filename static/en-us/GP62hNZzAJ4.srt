1
00:00:00,000 --> 00:00:02,008
Let's see what all
this looks like in SWF.

2
00:00:02,008 --> 00:00:04,928
To begin, you'll want to
download the starter project for

3
00:00:04,928 --> 00:00:06,128
the ImageRequest app.

4
00:00:06,128 --> 00:00:08,678
A download link's posted
in the instructor notes.

5
00:00:08,678 --> 00:00:12,328
I've downloaded the project already,
so let's run it and see what we have.

6
00:00:12,328 --> 00:00:14,228
The interface is extremely simple.

7
00:00:14,228 --> 00:00:16,777
There's just a single
label in the center and

8
00:00:16,777 --> 00:00:19,468
it says that an image will
load over this label.

9
00:00:19,468 --> 00:00:22,581
If we stop the app and go to
the Main.storyboard, we can see there's

10
00:00:22,581 --> 00:00:25,758
actually an image view too, but
it currently doesn't have an image.

11
00:00:25,758 --> 00:00:28,533
It'll be our job to get
an image from the Internet and

12
00:00:28,533 --> 00:00:30,438
display it within this image view.

13
00:00:30,438 --> 00:00:33,068
Now, let's open
the ViewController.swiftfall.

14
00:00:33,068 --> 00:00:36,241
We're going to be doing all our
networking code right within its

15
00:00:36,241 --> 00:00:37,408
viewDidLoad method.

16
00:00:37,408 --> 00:00:40,808
The first class I want to
introduce you to is NSURL.

17
00:00:40,808 --> 00:00:44,068
As you might have guessed,
this class lets us represent a URL.

18
00:00:44,068 --> 00:00:47,073
I'll create an instance
of it called imageURL and

19
00:00:47,073 --> 00:00:50,658
initialize it using a URL string
that I copied beforehand.

20
00:00:50,658 --> 00:00:53,168
This is a URL for
a cat image that I like.

21
00:00:53,168 --> 00:00:57,380
Feel free to use your own URL,
but make sure that it's HTTPS.

22
00:00:57,380 --> 00:00:59,692
We haven't talked about HTTPS yet, but

23
00:00:59,692 --> 00:01:02,758
we'll see why it's important
later in this lesson.

24
00:01:02,758 --> 00:01:06,238
Now that we have a URL,
the next step is making a request.

25
00:01:06,238 --> 00:01:10,860
The class that we'll use for
this is called NSURLSession.

26
00:01:10,860 --> 00:01:15,173
NSURLSession is a class that can
manage network request on our behalf.

27
00:01:15,173 --> 00:01:18,665
We can create our own NSURLSessions
with custom settings or we

28
00:01:18,665 --> 00:01:23,313
can use the shared NSURLSession, which
comes preloaded with default settings.

29
00:01:23,313 --> 00:01:26,785
The shared NSURLSession is
what is known as a singleton.

30
00:01:26,785 --> 00:01:28,976
If you've never heard
of a singleton before,

31
00:01:28,976 --> 00:01:32,135
it's a special kind of object that
can only be instantiated once.

32
00:01:32,135 --> 00:01:35,357
So if I use the shared
NSURLSession in this SWF file and

33
00:01:35,357 --> 00:01:38,508
then in another file I use
the shared NSURLSession,

34
00:01:38,508 --> 00:01:42,374
I'm actually still referring to
the same object in both files,

35
00:01:42,374 --> 00:01:46,530
because it's a singleton and
there can only ever be one.

36
00:01:46,530 --> 00:01:49,690
The use of singletons is common
when it makes sense to only have

37
00:01:49,690 --> 00:01:51,320
one instance of an object.

38
00:01:51,320 --> 00:01:54,840
Now this distinctions may not be
incredibly important to you now, but

39
00:01:54,840 --> 00:01:58,300
I wanted you to know what the term
meant in case you see it again.

40
00:01:58,300 --> 00:02:01,327
Anyways, we don't need to
make custom NSURLSessions, so

41
00:02:01,327 --> 00:02:03,878
we'll just use the shared
NSURLSession for now.

42
00:02:03,878 --> 00:02:07,798
If you are interested in creating
your own custom NSURLSessions,

43
00:02:07,798 --> 00:02:11,368
then you can look at the NSURLSession
configuration class.

44
00:02:11,368 --> 00:02:14,753
It allows you to change things like
the amount you're willing to wait for

45
00:02:14,753 --> 00:02:16,710
a network request before cancelling it.
