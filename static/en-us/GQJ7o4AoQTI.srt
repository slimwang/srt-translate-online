1
00:00:00,320 --> 00:00:01,740
If you don't take any special steps,

2
00:00:01,740 --> 00:00:05,960
most new objects that you create will delegate to the Object prototype, but

3
00:00:05,960 --> 00:00:09,260
some of the special objects that you can make in JavaScript have

4
00:00:09,260 --> 00:00:13,640
extra features above and beyond the basic characteristics of all objects.

5
00:00:13,640 --> 00:00:18,000
Arrays, for example, have methods like .indexOf and .slice.

6
00:00:18,000 --> 00:00:22,770
Those array methods are stored in another prototype called the Array prototype.

7
00:00:22,770 --> 00:00:26,700
Since arrays behave a little differently from objects, the Array prototype even

8
00:00:26,700 --> 00:00:30,390
has its own version of some of the standard methods like toString.

9
00:00:30,390 --> 00:00:34,080
The Array prototype in turn delegates to the Object prototype so that

10
00:00:34,080 --> 00:00:38,560
the non-unique parts of an array can be inherited from the Object prototype.

11
00:00:38,560 --> 00:00:41,190
And not every single method will need to be

12
00:00:41,190 --> 00:00:43,680
reimplemented here on the Array prototype.

13
00:00:43,680 --> 00:00:47,630
Notice that the Array prototype and Object prototype both have

14
00:00:47,630 --> 00:00:51,600
dot constructor properties even though one delegates to the other.

15
00:00:51,600 --> 00:00:55,005
So what do you expect to happen when you query an array for

16
00:00:55,005 --> 00:00:56,620
its dot constructor property?
