1
00:00:00,240 --> 00:00:03,610
Here's a typical best practice for
using ListView.

2
00:00:03,610 --> 00:00:07,190
You feed it with some sort of
an adapter, like a CursorAdapter,

3
00:00:07,190 --> 00:00:12,298
which you feed with a CursorLoader and
you register an OnItemClickListener

4
00:00:12,298 --> 00:00:15,770
with the ListView to get notified
when the list item is clicked.

5
00:00:15,770 --> 00:00:19,590
And, you might have used a ViewHolder
pattern to help you populate views with

6
00:00:19,590 --> 00:00:20,750
that CursorAdapter.

7
00:00:20,750 --> 00:00:26,350
Well, using RecyclerView, we see some
familiar faces, like CursorLoader.

8
00:00:26,350 --> 00:00:29,700
Where ViewHolder was an optional but
recommended part of the ListView

9
00:00:29,700 --> 00:00:34,045
pattern, it's a required and integral
part of the RecyclerView pattern.

10
00:00:34,045 --> 00:00:38,400
Now we don't have a CursorAdapter at the
moment, and that's not such a terrible

11
00:00:38,400 --> 00:00:41,490
thing, because now that we have
CursorLoader doing the work of reloading

12
00:00:41,490 --> 00:00:46,250
our cursors when content changes,
CursorAdapter didn't do all that much.

13
00:00:46,250 --> 00:00:49,210
We also don't have
an OnItemClickListener.

14
00:00:49,210 --> 00:00:53,350
Now, one could use the
OnItemTouchListener along with a gesture

15
00:00:53,350 --> 00:00:58,100
detector to determine when an item is
clicked, but it's more common to just

16
00:00:58,100 --> 00:01:02,140
have your view holder implement
an OnItemClickListener for

17
00:01:02,140 --> 00:01:04,361
the individual views that it's holding.

18
00:01:04,361 --> 00:01:08,250
The ViewHolder has access to the Adapter
position that has been clicked.

19
00:01:08,250 --> 00:01:11,070
And since it is typically
an inner class ViewAdapter,

20
00:01:11,070 --> 00:01:14,470
it would also have access to
the adapter data for click handling.

21
00:01:14,470 --> 00:01:17,040
Let's show how this works in practice.

22
00:01:17,040 --> 00:01:21,740
In onCreateViewHolder from our adapter,
we inflate the appropriate layout for

23
00:01:21,740 --> 00:01:22,900
the view type.

24
00:01:22,900 --> 00:01:26,680
Note that our sample ViewHolder can
change references to the views.

25
00:01:26,680 --> 00:01:29,750
Just like we would have done in
the old school ViewHolder pattern.

26
00:01:29,750 --> 00:01:34,430
In on create ViewHolder from our
adapter, when we create the ViewHolder,

27
00:01:34,430 --> 00:01:37,410
we have to pass the root
view into the superclass.

28
00:01:37,410 --> 00:01:40,410
We then can start references to
the child views we want to fill out

29
00:01:40,410 --> 00:01:41,720
if we wish.

30
00:01:41,720 --> 00:01:44,570
This is also a good place to
set the OnClickListener for

31
00:01:44,570 --> 00:01:48,530
the view, note that we have to have our
viewHolder implement the OnClickListener

32
00:01:48,530 --> 00:01:49,780
to use this pattern in this way.

33
00:01:49,780 --> 00:01:54,351
And when we bind the ViewHolder, we
take advantage of our ViewHolder being

34
00:01:54,351 --> 00:01:58,540
a non-static interclass for Adaptor,
so it has access to our data.

35
00:01:58,540 --> 00:01:59,620
In this case, a cursor.
