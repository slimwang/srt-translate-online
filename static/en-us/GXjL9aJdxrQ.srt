1
00:00:00,450 --> 00:00:03,870
So here's one last helpful loop, the for in loop.

2
00:00:03,870 --> 00:00:07,650
For in loops let us easily iterate through arrays or objects.

3
00:00:07,650 --> 00:00:08,670
The syntax looks like this.

4
00:00:08,670 --> 00:00:10,510
The same keyword for.

5
00:00:10,510 --> 00:00:14,080
We have some kind of iterator, which we can give any name that we want.

6
00:00:14,080 --> 00:00:16,900
Then we have the keyword in, and then an object or

7
00:00:16,900 --> 00:00:18,680
array that we want to iterate through.

8
00:00:18,680 --> 00:00:22,380
For each of the items in some object, we want to do something.

9
00:00:22,380 --> 00:00:27,060
Just like before, we put the conditions for our for loop inside parentheses and

10
00:00:27,060 --> 00:00:29,640
the statements we want to execute inside curly braces.

11
00:00:29,640 --> 00:00:31,780
It's important to note here that this item,

12
00:00:31,780 --> 00:00:36,270
this iterator in this list is actually the index of the item in the object,

13
00:00:36,270 --> 00:00:39,700
not the value held at the index in the object.

14
00:00:39,700 --> 00:00:40,832
So let's take a look at an example.

15
00:00:40,832 --> 00:00:42,752
We have an array called countries,

16
00:00:42,752 --> 00:00:45,702
which has the top four teams of the 2014 World Cup.

17
00:00:45,702 --> 00:00:48,750
We have a for in loop here, which is going to iterate for

18
00:00:48,750 --> 00:00:53,210
each country in the countries array, we want to log that country.

19
00:00:53,210 --> 00:00:53,830
Hey, James.

20
00:00:53,830 --> 00:00:55,780
Do you see anything wrong with this code?

21
00:00:55,780 --> 00:00:59,140
>> It's just going to print out, zero through three and

22
00:00:59,140 --> 00:01:00,570
not the actual country name.

23
00:01:00,570 --> 00:01:01,260
>> Why is that?

24
00:01:01,260 --> 00:01:03,560
>> Because country is an iterator in countries.

25
00:01:03,560 --> 00:01:06,070
It's not the actual value of country.

26
00:01:06,070 --> 00:01:07,660
>> That's right, so let's make a change.

27
00:01:07,660 --> 00:01:11,800
Instead we should have console.log countries of the index country.

28
00:01:11,800 --> 00:01:13,250
Let's see if this is correct.

29
00:01:13,250 --> 00:01:16,190
So, here's our for in loop in one line of code.

30
00:01:16,190 --> 00:01:19,370
By using Shift + Enter, we can actually put this in a much nicer format.

31
00:01:19,370 --> 00:01:23,990
So we see, for (country in countries) { console.log(countries[country]) }; and

32
00:01:23,990 --> 00:01:24,980
I'm pressing Enter.

33
00:01:24,980 --> 00:01:28,370
We see Germany, Argentina, Brazil, and The Netherlands.

34
00:01:28,370 --> 00:01:32,110
>> You should already have a work object with all of your work experiences.

35
00:01:32,110 --> 00:01:35,700
I want you to write a for-in loop that iterates over all the jobs in

36
00:01:35,700 --> 00:01:40,640
your work object and appends them in a new HTMLworkStart element.

37
00:01:40,640 --> 00:01:46,220
I want you to also format each job's employer with HTMLworkEmployer in

38
00:01:46,220 --> 00:01:51,550
each job title with HTMLworkTitle and append all of that to the page.

39
00:01:51,550 --> 00:01:52,710
Click this box when you're done.
