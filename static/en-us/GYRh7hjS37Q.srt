1
00:00:00,390 --> 00:00:04,309
In an ideal scenario, your classifier
will robustly detect vehicles and

2
00:00:04,309 --> 00:00:06,699
record very few false positives.

3
00:00:06,700 --> 00:00:10,481
However, in many cases, you'll find that
even though you are mostly detecting

4
00:00:10,481 --> 00:00:14,167
cars, your classifier will return
a significant number of false positives.

5
00:00:14,167 --> 00:00:18,271
Within the self-driving car industry, we
spend nearly as much time worrying about

6
00:00:18,271 --> 00:00:21,390
false positives as we do
about real detections.

7
00:00:21,390 --> 00:00:24,000
This is because when your algorithm
thinks it sees something that isn't

8
00:00:24,000 --> 00:00:26,149
really there,
your car might end up swerving or

9
00:00:26,149 --> 00:00:29,429
slamming on the brakes,
which can cause accidents.

10
00:00:29,429 --> 00:00:32,850
As long as your classifier has a strong
preference for vehicles, you can filter

11
00:00:32,850 --> 00:00:35,969
out the false positives by recording
the positions of all detections in

12
00:00:35,969 --> 00:00:40,159
each frame, and comparing with
detections found in subsequent frames.

13
00:00:40,159 --> 00:00:43,029
Where you find strong clusters of
detections you can conclude you have

14
00:00:43,030 --> 00:00:44,605
found an actual car.

15
00:00:44,604 --> 00:00:46,799
Whereas for
detections that appear in one frame and

16
00:00:46,799 --> 00:00:50,229
not the next, you can assume
they were false positives.

17
00:00:50,229 --> 00:00:53,449
If you're tracking a vehicles position
in a video stream, you will need to keep

18
00:00:53,450 --> 00:00:57,330
in mind that a vehicle may change
direction, or speed up, or slow down.

19
00:00:57,329 --> 00:00:59,969
So you need to let your tracking
algorithm be flexible enough to allow

20
00:00:59,969 --> 00:01:00,240
for that.

