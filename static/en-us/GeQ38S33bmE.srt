1
00:00:00,110 --> 00:00:03,458
In the programs that you've seen so far, you've used a single loop to solve a

2
00:00:03,458 --> 00:00:07,089
problem. Sometimes, you need to have more than one loop, and in fact it can

3
00:00:07,089 --> 00:00:11,014
happen that you have one loop sitting inside another. Such loops are called

4
00:00:11,014 --> 00:00:14,769
nested loops. Let me give you an example. We want to write a program that draws

5
00:00:14,769 --> 00:00:18,795
this square of colors starting with the black one, increasing the greenness in

6
00:00:18,795 --> 00:00:24,280
this direction. Increasing the blueness in that direction. How can we draw all

7
00:00:24,280 --> 00:00:28,886
of these squares? Let's think of it a row at a time. For example, to draw this

8
00:00:28,886 --> 00:00:33,960
row here, I need to go from x equals 0 then to x equal whatever the width of

9
00:00:33,960 --> 00:00:41,849
this square is, which is 30 in our example. So the x equals 30, 60, 90 and so

10
00:00:41,849 --> 00:00:46,742
on. And that'll be a loop. That loop will draw on all of the squares in a

11
00:00:46,742 --> 00:00:52,366
particular row. To get to r rows, I need another loop. And there you have it, a

12
00:00:52,366 --> 00:00:57,458
loop inside a loop, nested loops. Now, the only tricky task remains. If I have

13
00:00:57,458 --> 00:01:05,670
row i and colon j. How do I find out the position and the color of this square.

14
00:01:05,670 --> 00:01:10,888
You'll get to try that out in the next exercise. Just keep in mind, that as the

15
00:01:10,888 --> 00:01:19,076
row index i goes 0, 1, 2, 3 and so on. You want the y position to be 0, 30, 60,

16
00:01:19,076 --> 00:01:27,275
90, hence on. And as J, the colon index goes from 0 to the number of colon. You

17
00:01:27,275 --> 00:01:33,766
want the x offset also to be 0, 30, 60 and so on. How about the colors. We want

18
00:01:33,766 --> 00:01:40,442
this square down here to have green 255 and blue 255. All the reds are 0. So,

19
00:01:40,442 --> 00:01:44,154
you want the greenness to vary from 0 to 255 in equal increments in this

20
00:01:44,154 --> 00:01:48,633
direction. And you want the blueness to vary from zero to 255 in equal

21
00:01:48,633 --> 00:01:52,870
increments in that direction. You just have to figure out the increments.

22
00:01:52,870 --> 00:01:55,536
Alright, go ahead and give that a try and as you do that closely look at those

23
00:01:55,536 --> 00:01:58,220
two nested loops that you'll be working with.
