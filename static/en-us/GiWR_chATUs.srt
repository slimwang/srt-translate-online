1
00:00:00,310 --> 00:00:02,670
To code the unconnected function,

2
00:00:02,670 --> 00:00:06,120
we used functions of
the location request object.

3
00:00:06,120 --> 00:00:08,860
First of these was setInterval.

4
00:00:08,860 --> 00:00:11,210
Now, this sets the desired interval for

5
00:00:11,210 --> 00:00:17,250
active location updates measured
as a period in milliseconds.

6
00:00:17,250 --> 00:00:21,110
So right now, if it's set for
a thousand milliseconds,

7
00:00:21,110 --> 00:00:23,970
that means it will check
the location once every second.

8
00:00:23,970 --> 00:00:26,320
That's pretty fast.

9
00:00:26,320 --> 00:00:29,860
So, if you wanted to change that
to be less frequent, for example,

10
00:00:29,860 --> 00:00:34,230
once every ten seconds,
you could just change this to 10,000.

11
00:00:34,230 --> 00:00:37,450
Remember, it's always
measured in milliseconds.

12
00:00:37,450 --> 00:00:39,470
Then we use set priority.

13
00:00:39,470 --> 00:00:43,780
This is used to set the priority of
the call, as it's name might suggest.

14
00:00:43,780 --> 00:00:46,710
The priority is a strong
hint to the location client

15
00:00:46,710 --> 00:00:49,790
about which location
services it should use.

16
00:00:49,790 --> 00:00:52,820
There are many factors about which
physical devices it will use,

17
00:00:52,820 --> 00:00:55,310
such as the available
hardware on the phone.

18
00:00:55,310 --> 00:00:58,540
It has four potential values,
so let's take a look at these.

19
00:00:58,540 --> 00:01:02,310
This one that I'm showing,
PRIORITY_BALANCED_POWER_ACCURACY,

20
00:01:02,310 --> 00:01:05,560
will give you accuracy
to about 100 meters.

21
00:01:05,560 --> 00:01:09,190
It's nicknamed block level accuracy for
obvious reasons.

22
00:01:09,190 --> 00:01:13,405
It's course, and very battery friendly
compared to some of the others.

23
00:01:13,405 --> 00:01:18,070
PRIORITY_HIGH_ACCURACY will give
the finest possible location,

24
00:01:18,070 --> 00:01:19,980
based on phone hardware.

25
00:01:19,980 --> 00:01:23,445
But, as you can imagine, this could
impact your battery much more.

26
00:01:23,445 --> 00:01:28,710
PRIORITY_LOW_POWER will request what
is nicknamed city level activity.

27
00:01:28,710 --> 00:01:31,200
It gives you a range of
about ten kilometers.

28
00:01:31,200 --> 00:01:33,666
It's a very low power
consumption activity.

29
00:01:33,666 --> 00:01:34,867
And finally,

30
00:01:34,867 --> 00:01:41,500
PRIORITY_NO_POWER will request the best
possible accuracy at no power cost.

31
00:01:41,500 --> 00:01:44,490
So if other clients in the app
have gotten a location,

32
00:01:44,490 --> 00:01:47,470
this can actually be
a passive listener to them.

33
00:01:47,470 --> 00:01:52,820
Do note, that if you have set the access
course location in the Android Manifest,

34
00:01:52,820 --> 00:01:56,980
it will override these settings, and
can effectively reduce the frequency of

35
00:01:56,980 --> 00:02:00,170
location poles,
as well as obvious gating it's accuracy.
