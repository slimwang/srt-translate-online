1
00:00:00,155 --> 00:00:03,930
>> Okay, so after this there's a next gets the first character in

2
00:00:03,930 --> 00:00:08,700
the string using the read method.

3
00:00:08,700 --> 00:00:13,440
Also in this case, suitably followed by a semicolon.

4
00:00:13,440 --> 00:00:14,320
I hope that makes you happy.

5
00:00:14,320 --> 00:00:15,420
>> Oh, I'm very happy with that.

6
00:00:15,420 --> 00:00:16,000
>> That's great. And and

7
00:00:16,000 --> 00:00:20,770
then we print line in which we print this character that we just read.

8
00:00:20,770 --> 00:00:23,140
>> Okay, so, for, for 19 should we?

9
00:00:23,140 --> 00:00:24,802
This extra white space around next.

10
00:00:24,802 --> 00:00:27,850
This kind of goes back to, to line ten where we have some extra white

11
00:00:27,850 --> 00:00:31,270
space between the two brackets for, for the string.

12
00:00:31,270 --> 00:00:34,301
Is there a, what do you want to do there?

13
00:00:34,301 --> 00:00:37,280
We, we always want to have pad space around the functions, or

14
00:00:37,280 --> 00:00:39,530
the arguments into the function?

15
00:00:39,530 --> 00:00:43,416
>> Yeah, I guess that's something the editor data, that's not much fine with,

16
00:00:43,416 --> 00:00:45,291
you know, doing it with all the spaces.

17
00:00:45,291 --> 00:00:45,872
>> It's not consistent. [CROSSTALK]. >> Again,

18
00:00:45,872 --> 00:00:48,143
we need to have a standard of some kind.

19
00:00:48,143 --> 00:00:50,241
>> I think so. >> It's obvious you don't have any kind of coding standards.

20
00:00:50,241 --> 00:00:54,395
>> Yes. [CROSSTALK]. >> Most of this is copied code.

21
00:00:54,395 --> 00:00:54,955
[CROSSTALK].

22
00:00:54,955 --> 00:00:56,860
>> Yeah, it was copy and paste.

23
00:00:56,860 --> 00:00:59,420
So, so a hodgepodge of, of different styles.

24
00:00:59,420 --> 00:01:02,760
>> So, this old one is kind of no, no empty spaces around those variables.

25
00:01:02,760 --> 00:01:06,290
>> And the no copying of code from, from random forums online.

26
00:01:06,290 --> 00:01:07,610
That might be a good idea.

27
00:01:07,610 --> 00:01:09,630
>> Is that okay Dr. Bug from now onwards?

28
00:01:09,630 --> 00:01:13,268
>> Isn't that, doesn't that mean we're going to have to

29
00:01:13,268 --> 00:01:16,920
re-code stuff that we might save energy by copying?

30
00:01:16,920 --> 00:01:21,850
>> Well maybe if as long we're copying internal code that has the,

31
00:01:21,850 --> 00:01:24,880
the standard, the standard applies.

32
00:01:24,880 --> 00:01:28,927
Maybe we need to write something that's a standard checker for

33
00:01:28,927 --> 00:01:30,464
our internal use on it.

34
00:01:30,464 --> 00:01:31,410
>> [INAUDIBLE] Dr. Bug? >> Okay, so

35
00:01:31,410 --> 00:01:37,349
after this we enter into a while loop with the given condition.

36
00:01:37,349 --> 00:01:41,984
And the, at that point once we get into the while

37
00:01:41,984 --> 00:01:47,310
looper we check if the next character that we read is a blank.

38
00:01:47,310 --> 00:01:52,152
>> Actually, we have a problem here, we should be stopping when the next

39
00:01:52,152 --> 00:01:58,330
doesn't equal the sentinel, otherwise we're just stopping maybe immediately.

40
00:01:59,573 --> 00:02:06,650
Do we ever enter this loop?

41
00:02:06,650 --> 00:02:08,030
>> Unless the first character is the [INAUDIBLE].

42
00:02:08,030 --> 00:02:09,229
>> Our count, our count will be zero.

43
00:02:09,229 --> 00:02:10,350
We're not going to count the blanks if we,

44
00:02:10,350 --> 00:02:12,200
because we want to stopiat a period, correct?

45
00:02:12,200 --> 00:02:14,080
We're going to read the number of blanks in a sentence and stop.

46
00:02:14,080 --> 00:02:15,251
At least that's how I'm reading it.

47
00:02:15,251 --> 00:02:17,850
>> Oh, oh yeah sorry about that one.

48
00:02:17,850 --> 00:02:19,000
Yeah I was coding in a hurry.

49
00:02:19,000 --> 00:02:20,580
I'm sorry and it's yeah, you, you're right.

50
00:02:20,580 --> 00:02:22,710
This should be the, the while next is not a sentinel.

51
00:02:22,710 --> 00:02:25,550
And I, yeah and I have to apologize,

52
00:02:25,550 --> 00:02:29,190
because I kind of came through that when I was going through.

53
00:02:29,190 --> 00:02:33,350
I should have looked at that more carefully while doing the reading.

54
00:02:33,350 --> 00:02:36,270
>> Or maybe you just copied somebody's while loop and

55
00:02:36,270 --> 00:02:39,320
didn't even bother to check what it was about.

56
00:02:39,320 --> 00:02:44,280
>> Well, in this case I think it's actually my fault so, sorry about that.

57
00:02:44,280 --> 00:02:46,250
>> Oh. >> Cannot blame everything.

58
00:02:46,250 --> 00:02:47,810
>> We're so happy you apologized.

59
00:02:47,810 --> 00:02:48,910
>> Cannot blame everything on Bob.

60
00:02:48,910 --> 00:02:49,440
>> If we could just for

61
00:02:49,440 --> 00:02:52,392
a second revisit every other thing we've talked about previously.

62
00:02:52,392 --> 00:02:54,050
I just so, I'm supposed to be recording the severity, so

63
00:02:54,050 --> 00:02:56,440
I assume all the severity of everything up til just now is minor.

64
00:02:56,440 --> 00:02:58,840
Is everybody good?

65
00:02:58,840 --> 00:03:02,310
And this is our first really major severity.

66
00:03:02,310 --> 00:03:03,040
>> That sounds reasonable.

67
00:03:03,040 --> 00:03:04,850
>> Defect. >> Mm-hm.

68
00:03:04,850 --> 00:03:07,610
>> What are our severity levels?

69
00:03:07,610 --> 00:03:09,870
>> Well, according to our little log here, we only have major and minors.

70
00:03:09,870 --> 00:03:11,880
>> Okay. >> [LAUGH] >> So then, yeah, I would agree with that.

71
00:03:11,880 --> 00:03:16,320
I, some, some of the things that were tried to put in between but

72
00:03:16,320 --> 00:03:18,940
we don't have an in between, so I think you've got it right.

73
00:03:18,940 --> 00:03:20,650
It's the best we can do with what we've got.
