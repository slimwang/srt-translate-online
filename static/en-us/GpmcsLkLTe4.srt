1
00:00:00,510 --> 00:00:03,440
So here's the Python expression to compute that. We're multiplying

2
00:00:03,440 --> 00:00:07,960
the speed of light times 100 cm in a meter, times

3
00:00:07,960 --> 00:00:11,090
1 divided by 1 billion. One nanosecond is one billionth of

4
00:00:11,090 --> 00:00:13,660
a second. You'll note that I can't have space in the

5
00:00:13,660 --> 00:00:16,510
numbers. It's convenient when I write out the numbers to put

6
00:00:16,510 --> 00:00:19,480
spaces in them, so we can see how big they are.

7
00:00:19,480 --> 00:00:22,280
Python doesn't allow that, that looks like separate numbers if we

8
00:00:22,280 --> 00:00:26,250
have spaces there that wouldn't be valid in the Python grammar.

9
00:00:26,250 --> 00:00:29,020
So we can't have the spaces there, so when we run

10
00:00:29,020 --> 00:00:32,460
this we get the result 29. That says it's about 29

11
00:00:32,460 --> 00:00:35,980
centimeters that light travels in one nanosecond. This is a little

12
00:00:35,980 --> 00:00:39,520
surprising that is an exact number, and it's an integer, and

13
00:00:39,520 --> 00:00:42,050
the reason it's an integer is because of the way Python

14
00:00:42,050 --> 00:00:45,600
does arithmetic. If all the numbers here are integers, Python will

15
00:00:45,600 --> 00:00:48,950
truncate down to that integer. If we want a more accurate

16
00:00:48,950 --> 00:00:52,330
result we should turn one of these numbers into a decimal number.

17
00:00:52,330 --> 00:00:58,950
So now we've changed the one to 1.0, now we run it we get 29.979. Two, four,

18
00:00:58,950 --> 00:01:03,240
five, eight, so almost 30 centimeters, which is a better answer than 29 was.
