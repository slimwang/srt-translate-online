1
00:00:00,370 --> 00:00:03,480
The cell radio in your device
operates roughly like this.

2
00:00:03,480 --> 00:00:06,220
From an initial idle state,
it takes a couple of seconds

3
00:00:06,220 --> 00:00:08,500
to turn on, until it 
can start transmitting.

4
00:00:08,500 --> 00:00:11,650
That kind of latency makes
for a sucky web browsing experience.

5
00:00:11,650 --> 00:00:15,850
So rather than going back to idle,
state machine stays on at full power

6
00:00:15,850 --> 00:00:19,120
for a certain amount of time,
typically around five to ten seconds,

7
00:00:19,120 --> 00:00:22,010
before dropping to an
intermediate low power mode

8
00:00:22,010 --> 00:00:24,120
that uses less battery than full power,

9
00:00:24,120 --> 00:00:26,666
and has lower latency
to return to full power

10
00:00:26,666 --> 00:00:28,102
than the standby mode.

11
00:00:28,102 --> 00:00:30,960
If a new transfer is initiated, 
the radio will be promoted

12
00:00:30,960 --> 00:00:32,716
back to full power mode.

13
00:00:32,716 --> 00:00:34,862
And if nothing happens
for another period of time,

14
00:00:34,862 --> 00:00:37,590
typically around
30 seconds to a minute,

15
00:00:37,590 --> 00:00:39,080
it'll drop back to standby.

16
00:00:39,080 --> 00:00:42,730
The exact latency in tail times
varies between carriers,

17
00:00:42,730 --> 00:00:45,486
and even within carriers
between states and countries,

18
00:00:45,486 --> 00:00:48,472
as they try to balance low latency 
with longer battery life

19
00:00:48,472 --> 00:00:50,540
based on factors like cell congestion,

20
00:00:50,540 --> 00:00:52,820
and typical or prevailing
network conditions.

21
00:00:52,820 --> 00:00:54,596
So if the exact timings vary,

22
00:00:54,596 --> 00:00:56,852
how do we optimize
our transfer frequency?

23
00:00:56,852 --> 00:01:00,260
Ultimately, it doesn't matter
what the specific timings are.

24
00:01:00,260 --> 00:01:02,296
You just need to understand
that the network

25
00:01:02,296 --> 00:01:06,882
is going to attempt to balance
low latency with high battery life.

26
00:01:06,970 --> 00:01:09,780
For us, when it comes to
planning out data transfers,

27
00:01:09,780 --> 00:01:13,030
we'd really like to be
somewhere around here.

28
00:01:13,030 --> 00:01:15,590
Now if we return briefly
to the cell radio state machine,

29
00:01:15,590 --> 00:01:18,340
we know that every time
we perform a data transfer,

30
00:01:18,340 --> 00:01:23,440
the radio will stay active for at least
another five seconds of full tail time,

31
00:01:23,440 --> 00:01:26,260
and anywhere from 30 seconds
to a minute at low power

32
00:01:26,260 --> 00:01:28,630
before it finally returns to standby.

33
00:01:28,630 --> 00:01:30,760
That means every time
you initiate a transfer,

34
00:01:30,760 --> 00:01:34,120
you're powering the cell radio up
for at least 20 seconds.

35
00:01:34,120 --> 00:01:36,043
So let's take a look at how
that affects an app,

36
00:01:36,043 --> 00:01:38,006
using the little cookie approach.

37
00:01:38,006 --> 00:01:39,864
An app like this 
can drain the battery

38
00:01:39,864 --> 00:01:42,332
without even having
to transfer much data.

39
00:01:42,332 --> 00:01:45,961
Each of these small peaks
is an app pinging its analytics

40
00:01:45,961 --> 00:01:47,170
back to the server.

41
00:01:47,170 --> 00:01:49,200
In this case, every 15 seconds.

42
00:01:49,200 --> 00:01:51,903
These larger peaks represent 
intermittent data transfers

43
00:01:51,903 --> 00:01:53,696
based on user interaction.

44
00:01:53,696 --> 00:01:56,040
For example, they may be viewing
a restaurant listing

45
00:01:56,040 --> 00:01:57,970
or looking at tomorrow's 
weather forecast.

46
00:01:57,970 --> 00:02:01,780
Beneath it, we've graphed 
how this affects the radio state.

47
00:02:01,780 --> 00:02:04,703
The blue shows active data transfers.

48
00:02:04,703 --> 00:02:07,506
The red, the radio in full power.

49
00:02:07,506 --> 00:02:10,410
And yellow, showing low power mode.

50
00:02:10,410 --> 00:02:15,640
The gaps in between, if there were any,
indicate when the radio was idle.

51
00:02:15,640 --> 00:02:19,240
So while this app is running,
what is the percentage of time

52
00:02:19,240 --> 00:02:22,180
that the cell radio is able
to go back to its idle state?
