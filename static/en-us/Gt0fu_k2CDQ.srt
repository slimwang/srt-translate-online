1
00:00:00,480 --> 00:00:03,340
All right, now we have an idea of what
changes we need to make in our code.

2
00:00:03,340 --> 00:00:07,090
And it looks like there
are four major steps.

3
00:00:07,090 --> 00:00:09,240
And some might be more
complicated than others.

4
00:00:09,240 --> 00:00:11,970
Because they'll effect
multiple code files at once.

5
00:00:11,970 --> 00:00:13,800
All right, so
how should we go about this?

6
00:00:13,800 --> 00:00:15,790
Should pick any where to start?

7
00:00:15,790 --> 00:00:18,100
And then do all those changes perfectly,

8
00:00:18,100 --> 00:00:21,000
before we try to run
the app on our device?

9
00:00:21,000 --> 00:00:25,740
Well, if we attempted that method
we run all the steps at once and

10
00:00:25,740 --> 00:00:27,190
then try to run the app on our device.

11
00:00:28,280 --> 00:00:32,400
There's a high likelihood that the app
won't work for the first time and

12
00:00:32,400 --> 00:00:35,010
would probably run into
a bunch of errors and

13
00:00:35,010 --> 00:00:38,510
at that point it be really hard to
pinpoint the root of the problem

14
00:00:38,510 --> 00:00:41,810
because we made so
many changes in the files already.

15
00:00:41,810 --> 00:00:46,260
Now on the other hand if we make smaller
code changes and regularly check for

16
00:00:46,260 --> 00:00:50,910
errors along the way by running the app
on our device, we can better identify

17
00:00:50,910 --> 00:00:55,070
the lines of code that caused the error
because they'll be fewer lines changed.

18
00:00:56,490 --> 00:01:00,740
So this incremental approach means
we'll need to plan out our code changes

19
00:01:00,740 --> 00:01:05,290
that will allow the app to run even
if the whole feature isn't done yet.

20
00:01:05,290 --> 00:01:08,600
Now that we know that we want
to do it one step at a time

21
00:01:08,600 --> 00:01:10,920
which step should we tackle first?

22
00:01:10,920 --> 00:01:15,060
So as developers we can
prioritize in a number of ways.

23
00:01:15,060 --> 00:01:17,180
Often we want to make the riskiest and

24
00:01:17,180 --> 00:01:21,640
most difficult changes first because
of our initial strategy doesn't work

25
00:01:21,640 --> 00:01:25,770
we need to know as soon as possible,
so we can rethink our strategy.

26
00:01:25,770 --> 00:01:30,200
So think of it as a proof of concept to
make sure the we're on the right path.

27
00:01:30,200 --> 00:01:34,280
So in our case all these steps
are pretty low risk changes

28
00:01:34,280 --> 00:01:38,900
because we saw the Android flavor app
that it's possible to display text and

29
00:01:38,900 --> 00:01:40,760
images in a list.

30
00:01:40,760 --> 00:01:44,090
So the other way to prioritize is
based on the data that we have.

31
00:01:45,480 --> 00:01:48,830
Right now,
we don't have images from our designer.

32
00:01:48,830 --> 00:01:53,510
So often once designers produce a rough
design mark it might take some time for

33
00:01:53,510 --> 00:01:55,970
them to deliver the final images.

34
00:01:55,970 --> 00:02:00,150
Well in the meantime we as developers
can get started on writing the code.

35
00:02:01,280 --> 00:02:02,530
So to do so

36
00:02:02,530 --> 00:02:06,760
we'll use something called placeholder
data, also known as dummy data.

37
00:02:07,940 --> 00:02:10,669
So placeholder data means
coming up with temporary or

38
00:02:10,669 --> 00:02:14,270
fake data, that we can put into
the app that will give us an idea

39
00:02:14,270 --> 00:02:17,100
of what it will look like
when we get the real data.

40
00:02:17,100 --> 00:02:21,350
So consider it as a placeholder for
real data that be coming soon.

41
00:02:21,350 --> 00:02:25,757
So to summarize we know that we want to
make these changes one at a time.

42
00:02:25,757 --> 00:02:27,893
[BLANK_AUDIO]

43
00:02:27,893 --> 00:02:30,473
And make sure we can rebuild the app and

44
00:02:30,473 --> 00:02:34,910
run on our of device between
each change if possible.

45
00:02:34,910 --> 00:02:40,230
In cases where we're missing the actual
data when use fake data as a placeholder

46
00:02:40,230 --> 00:02:42,480
until the real data is ready.

47
00:02:42,480 --> 00:02:45,860
So in our case if we don't have
the final images from the designer yet

48
00:02:46,860 --> 00:02:51,430
we want to get as far as we can until
we get completely blocked off and

49
00:02:51,430 --> 00:02:55,390
need to wait for the real data to
finish implementing the feature.

50
00:02:55,390 --> 00:02:58,560
All right so
taking a look at this list of changes

51
00:02:58,560 --> 00:03:03,880
I like your help on figuring out how to
prioritize which order to do these in.

52
00:03:03,880 --> 00:03:07,300
So go ahead and
assign the numbers one through four

53
00:03:07,300 --> 00:03:11,280
on which step you would take first,
second, third, and fourth.
