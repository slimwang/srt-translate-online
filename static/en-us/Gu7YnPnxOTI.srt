1
00:00:00,000 --> 00:00:03,000
So let's start building up these chained environments

2
00:00:03,000 --> 00:00:05,000
through a series of function calls.

3
00:00:05,000 --> 00:00:07,000
What will that look like?

4
00:00:07,000 --> 00:00:11,000
Well, at some point we declare or define the function--some fun, we'll call it--

5
00:00:11,000 --> 00:00:13,000
and then later on we call it.

6
00:00:13,000 --> 00:00:16,000
We want to have some fun, and we're going to pass in as the actual arguments

7
00:00:16,000 --> 00:00:19,000
three different expressions.

8
00:00:19,000 --> 00:00:21,000
Here are the steps we go through.

9
00:00:21,000 --> 00:00:27,000
First, we create a new environment, and its parent pointer points to the current environment.

10
00:00:27,000 --> 00:00:29,000
This parent part is really essential.

11
00:00:29,000 --> 00:00:34,000
Next, in that new environment we create storage places for each formal parameter.

12
00:00:34,000 --> 00:00:37,000
Formal parameters, in this example, p1, p2, and p3.

13
00:00:37,000 --> 00:00:39,000
There are three formal parameters.

14
00:00:39,000 --> 00:00:44,000
Then you want to fill in those places with the values of the actual arguments.

15
00:00:44,000 --> 00:00:47,000
The actual arguments are e1, e2, and e3.

16
00:00:47,000 --> 00:00:49,000
Oh, no! There's a step 4.

17
00:00:49,000 --> 00:00:51,000
Then you actually just do it.

18
00:00:51,000 --> 00:00:53,000
You evaluate the function body in the new environment.

19
00:00:53,000 --> 00:00:56,000
That means it's going to be able to see the values of the actual arguments,

20
00:00:56,000 --> 00:00:59,000
which is just what we wanted.

21
00:00:59,000 --> 00:01:02,000
Let's try this out with a bit of a quiz.

22
00:01:02,000 --> 00:01:05,000
Here I've got a 5-line Python program.

23
00:01:05,000 --> 00:01:07,000
X gets 1; Y gets 2.

24
00:01:07,000 --> 00:01:11,000
I define a function, myfun, of formal parameters A, B, and X,

25
00:01:11,000 --> 00:01:13,000
prints out A + B + X.

26
00:01:13,000 --> 00:01:19,000
And then I make a call to myfun with actual arguments 1+2, 3+4, and 5+6.

27
00:01:19,000 --> 00:01:21,000
I'm definitely going to have a global environment,

28
00:01:21,000 --> 00:01:24,000
and when we call myfun, we want to make a new environment

29
00:01:24,000 --> 00:01:26,000
pointing back to the old one,

30
00:01:26,000 --> 00:01:28,000
which is going to have room for some new places.

31
00:01:28,000 --> 00:01:31,000
But I haven't quite filled everything out, and I'm hoping you will help me.

32
00:01:31,000 --> 00:01:34,000
We need to know the value of X and Y in the global environment

33
00:01:34,000 --> 00:01:39,000
and then fill in these three boxes down here in this child environment

34
00:01:39,000 --> 99:59:59,999
corresponding to the myfun function call. Fill in the blanks.
