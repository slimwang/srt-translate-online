1
00:00:00,100 --> 00:00:01,620
So I promised you some properties.

2
00:00:01,620 --> 00:00:02,680
There's a bunch of them.

3
00:00:02,680 --> 00:00:04,689
One of them is that it's useful,
and that in particular,

4
00:00:04,689 --> 00:00:07,520
it's useful for large state spaces.

5
00:00:07,520 --> 00:00:10,640
And the reason that that works, right,
is I don't have to actually look at all

6
00:00:10,640 --> 00:00:12,670
the states, do all the value
iteration for everything.

7
00:00:12,670 --> 00:00:14,880
I basically just kind
of do it as I go along.

8
00:00:14,880 --> 00:00:16,930
And I only visit the states
that I need to visit,

9
00:00:16,930 --> 00:00:18,342
given where I happen to be in the world.

10
00:00:18,342 --> 00:00:22,090
There are some downsides of this,
and one downside is,

11
00:00:22,090 --> 00:00:25,980
depending upon just how much randomness
there is in your transition model,

12
00:00:25,980 --> 00:00:29,340
you need lots of samples in
order to get a good q hat.

13
00:00:29,340 --> 00:00:31,050
But you know what, that's true anyway.

14
00:00:31,050 --> 00:00:35,015
If you have many, many, many,
many many, many states, then you're

15
00:00:35,015 --> 00:00:38,510
going to have to do a lot of visiting
to figure out what's going on usually.

16
00:00:38,510 --> 00:00:41,740
So, this is the sort of, I think it's
kind of intrinsic to the problem.

17
00:00:41,740 --> 00:00:45,150
Now of course, if you don't have a lot
of states, you still end up generating

18
00:00:45,150 --> 00:00:49,390
lots and lots of samples because
of the way Monte Carlo works.

19
00:00:49,390 --> 00:00:53,700
Luckily there, it's relatively
inexpensive to do, in most cases,

20
00:00:53,700 --> 00:00:55,410
at least,
most of the cases that we worry about.

21
00:00:55,410 --> 00:00:59,030
And in the end, despite all that,
it has another good feature.

22
00:00:59,030 --> 00:01:00,260
I really like this feature.

23
00:01:00,260 --> 00:01:03,470
It's my favorite of its features,
is that the planning time

24
00:01:03,470 --> 00:01:07,930
is actually independent of
the number of states that you have.

25
00:01:07,930 --> 00:01:10,580
That's why it's useful for
large state spaces.

26
00:01:10,580 --> 00:01:13,930
>> I see, I mean,
I guess if there's a lot of states,

27
00:01:13,930 --> 00:01:17,370
do we have to expand like a fixed
percentage of them to know what to do?

28
00:01:17,370 --> 00:01:18,830
>> Well sure, you have to.

29
00:01:18,830 --> 00:01:20,990
That's how you're going to
generate your samples.

30
00:01:20,990 --> 00:01:22,770
You're going to have to generate
lots of samples that way.

31
00:01:22,770 --> 00:01:23,630
So yeah.

32
00:01:23,630 --> 00:01:25,124
>> But then it's not independent of s?

33
00:01:25,124 --> 00:01:27,054
>> Well, it is independent of s.

34
00:01:27,054 --> 00:01:29,160
That's one of the cool things
about Monte Carlo Tree Search.

35
00:01:29,160 --> 00:01:34,450
>> No, I know, but what I asked was,
so that means that as the state

36
00:01:34,450 --> 00:01:38,440
space gets bigger, do we have to expand
a fixed percentage of the state space?

37
00:01:38,440 --> 00:01:40,390
>> You said percentage, I'm sorry.

38
00:01:40,390 --> 00:01:43,110
I didn't even turn that into percentage,
I'm sorry.

39
00:01:43,110 --> 00:01:44,899
So the answer is no, because if you did,

40
00:01:44,899 --> 00:01:46,803
it would depend upon
the number of states.

41
00:01:46,803 --> 00:01:48,350
>> [LAUGH] Okay, but how could that be?

42
00:01:48,350 --> 00:01:50,690
How could it be that the state
space gets bigger, and yet,

43
00:01:50,690 --> 00:01:55,840
we don't have to look at very
much of it to know what to do?

44
00:01:55,840 --> 00:01:58,710
>> Well, it's because you're
really only going through,

45
00:01:58,710 --> 00:02:00,470
you're executing through the world.

46
00:02:00,470 --> 00:02:02,550
And the trade off happens
in the other bullet,

47
00:02:02,550 --> 00:02:04,104
which is the bad thing about MCTS.

48
00:02:04,104 --> 00:02:10,205
>> It kind of reminds me of, like,
I don't know, election surveys.

49
00:02:10,205 --> 00:02:11,540
It's probably not the right word.

50
00:02:11,540 --> 00:02:14,650
But this sort of idea that you can
actually get an idea of how many

51
00:02:14,650 --> 00:02:15,530
people are voting,

52
00:02:15,530 --> 00:02:20,070
no matter how big the country is by
just surveying a fixed number of people.

53
00:02:20,070 --> 00:02:24,550
>> Right, so long as they have
properties that are representative,

54
00:02:24,550 --> 00:02:28,950
and so long as you can get a
representative sample of the states and

55
00:02:28,950 --> 00:02:31,276
the actions, then you're good.

56
00:02:31,276 --> 00:02:32,862
>> That's really interesting.

57
00:02:32,862 --> 00:02:36,147
>> Right, now, of course, that's
going to depend, I mean, so to me,

58
00:02:36,147 --> 00:02:39,149
what's going to drive that is going
to be how much randomness and

59
00:02:39,149 --> 00:02:41,810
entropy there is in
the transition function.

60
00:02:41,810 --> 00:02:42,330
>> I see.

61
00:02:42,330 --> 00:02:44,360
>> Because if it's
completely deterministic,

62
00:02:44,360 --> 00:02:45,660
you don't have to do
a lot of samples at all.

63
00:02:45,660 --> 00:02:46,570
>> Yeah, that would make sense.

64
00:02:46,570 --> 00:02:49,220
>> But
there's something else that drives how

65
00:02:50,240 --> 00:02:52,280
expensive Monte Carlo Tree Search is,

66
00:02:52,280 --> 00:02:55,190
which is the fourth bullet that I was
about to write down before you asked me

67
00:02:55,190 --> 00:02:57,514
this complicated question,
which is that the running time.

68
00:02:57,514 --> 00:03:00,170
>> Is independent of
the size of the state space.

69
00:03:00,170 --> 00:03:02,540
>> It's independent in the sense
that it's exponential.

70
00:03:02,540 --> 00:03:04,140
>> Wait, in the size of the state space?

71
00:03:04,140 --> 00:03:06,780
>> It's exponential in
the affective horizon.

72
00:03:06,780 --> 00:03:09,390
>> So you're saying it doesn't
matter how many states

73
00:03:09,390 --> 00:03:10,270
are in the state space, but

74
00:03:10,270 --> 00:03:15,000
it does matter how far into the future
you need to look to make a decision?

75
00:03:15,000 --> 00:03:19,420
>> Yes, and of course, the tree
itself is growing exponentially.

76
00:03:19,420 --> 00:03:21,810
[LAUGH] So you're going to
need to have more and more and

77
00:03:21,810 --> 00:03:23,900
more of those samples to make it work.

78
00:03:23,900 --> 00:03:26,450
Actually, due to Kearns and
his colleagues,

79
00:03:26,450 --> 00:03:29,660
we actually know exactly
what the running time is.

80
00:03:29,660 --> 00:03:34,680
It is big O of the size
of your action space,

81
00:03:35,980 --> 00:03:38,080
which makes sense because
that's your branching factor.

82
00:03:39,620 --> 00:03:41,890
And I need another variable here.

83
00:03:41,890 --> 00:03:43,500
Let's call it x,

84
00:03:43,500 --> 00:03:47,760
which is how many steps you're
going to actually run the thing for.

85
00:03:47,760 --> 00:03:51,060
And that loop that I did
before raised to the horizon.
