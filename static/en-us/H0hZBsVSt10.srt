1
00:00:00,400 --> 00:00:02,969
Let's talk a little bit ,about how to implement consistent

2
00:00:02,969 --> 00:00:05,920
hashing. One option is for every node to know the

3
00:00:05,920 --> 00:00:09,620
location of every other node. In this case, lookups are

4
00:00:09,620 --> 00:00:12,810
fast. In fact, they are order one, but the routing

5
00:00:12,810 --> 00:00:16,730
tables are large. In particular, because every node needs to

6
00:00:16,730 --> 00:00:20,300
know the location of every other node in the network.

7
00:00:20,300 --> 00:00:23,230
The routing table, must be order N, where n is

8
00:00:23,230 --> 00:00:25,890
the number of nodes in the network. So ,for example,

9
00:00:25,890 --> 00:00:28,660
if node 32 wanted to look up the location

10
00:00:28,660 --> 00:00:31,800
of Annie Hall, that value might hash to 60,

11
00:00:31,800 --> 00:00:35,340
and if every node maintains a routing table entry

12
00:00:35,340 --> 00:00:38,730
for every other node, 32 would know that the key

13
00:00:38,730 --> 00:00:43,260
corresponding to ID 60 was located at node one.

14
00:00:43,260 --> 00:00:45,330
So the look up, would be order one, but the

15
00:00:45,330 --> 00:00:47,960
table ,would be order N. Another option, is that

16
00:00:47,960 --> 00:00:51,520
each node, only knows the location of its immediate successor

17
00:00:51,520 --> 00:00:53,910
in the ring. So for example ,node 32, would

18
00:00:53,910 --> 00:00:57,280
know the location of node 43, but of no

19
00:00:57,280 --> 00:00:59,990
other node. This results in a small table, of

20
00:00:59,990 --> 00:01:04,470
size order one. But locating the content, as before,

21
00:01:04,470 --> 00:01:08,090
would require order N lookups. So in summary, if

22
00:01:08,090 --> 00:01:10,610
every node knows the location of every other node,

23
00:01:10,610 --> 00:01:13,100
then lookups have good performance at the expense of

24
00:01:13,100 --> 00:01:16,800
larger tables. If every node only knows its successor ,then

25
00:01:16,800 --> 00:01:20,870
routing tables can be small, but every lookup operation is order N.
