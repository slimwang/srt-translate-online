1
00:00:00,012 --> 00:00:04,689
So, here they are. These are the tests from the provided question. And that was

2
00:00:04,689 --> 00:00:10,241
called test, as well, so I'm going to rename my test mytest, and let's see now

3
00:00:10,241 --> 00:00:15,106
if we pass all the tests. And we do, so I'm fairly confident my code is correct,

4
00:00:15,106 --> 00:00:18,193
now. If we wanted it to be faster, there's lots of things we could do better

5
00:00:18,193 --> 00:00:21,620
than this really simple, stupid approach of just going day by day. But in terms

6
00:00:21,620 --> 00:00:25,726
of getting correct code The simple approach had a lot of advantages. So I'll

7
00:00:25,726 --> 00:00:29,422
encourage you if you want to extend this as another programming exercise to try

8
00:00:29,422 --> 00:00:33,528
to make it faster. But in this case we're pretty happy with this. The other

9
00:00:33,528 --> 00:00:37,526
thing I'll mention if this were not a programming exercise. Python has built in

10
00:00:37,526 --> 00:00:40,740
types for managing dates. And that would make your life a lot easier to use

11
00:00:40,740 --> 00:00:43,714
those. There are lots and lots of different ways to solve this problem. Some of

12
00:00:43,714 --> 00:00:47,095
you may have come up with better ways than the one that I did. Certainly most of

13
00:00:47,095 --> 00:00:50,600
you probably came up with more efficient ways. If you have an interesting way of

14
00:00:50,600 --> 00:00:53,879
solving I would encourage you to post that for discussion on the class forum.
