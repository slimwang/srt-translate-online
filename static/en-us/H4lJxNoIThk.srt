1
00:00:00,100 --> 00:00:03,060
Naturally, once you've initialized
a dictionary you're going to want

2
00:00:03,060 --> 00:00:04,410
to add items to it.

3
00:00:04,410 --> 00:00:07,250
To add a key value pair to a dictionary,
set the value for

4
00:00:07,250 --> 00:00:09,840
the key using subscript syntax.

5
00:00:09,840 --> 00:00:13,190
So here we'll add a couple of entries
to our animal groups dictionary.

6
00:00:13,190 --> 00:00:14,680
A group of crows is called a murder.

7
00:00:14,680 --> 00:00:17,120
I always thought that was a strange one.

8
00:00:17,120 --> 00:00:19,700
And a group of monkeys
is called a troop.

9
00:00:19,700 --> 00:00:23,150
If we use the count method, which has
the same syntax of the array classes

10
00:00:23,150 --> 00:00:27,560
count method, we can see that before we
had three entries, but now we have five.

11
00:00:28,800 --> 00:00:31,800
And if we print out the dictionary,
we can see the two new entries.

12
00:00:33,180 --> 00:00:36,880
Removing a value from a dictionary
looks very similar to adding a value.

13
00:00:36,880 --> 00:00:39,940
But in this case, the value for
the key is assigned to nil.

14
00:00:39,940 --> 00:00:42,530
And after we assign the value for
crows to nil.

15
00:00:42,530 --> 00:00:46,750
We can see that the crows murder pair
has been removed from the dictionary.

16
00:00:46,750 --> 00:00:49,680
What if we want to change
the value associated with a key?

17
00:00:49,680 --> 00:00:51,760
For this we have a couple options.

18
00:00:51,760 --> 00:00:56,120
We can keep using the same versatile
subscript syntax like this.

19
00:00:56,120 --> 00:01:01,380
Here, let's change troop to barrel, or

20
00:01:01,380 --> 00:01:03,720
we could use the method update value for
key.

21
00:01:05,050 --> 00:01:08,250
This method is interesting because
it returns an optional value.

22
00:01:09,530 --> 00:01:12,740
This is good because if you try to
update a value that's not in your

23
00:01:12,740 --> 00:01:13,480
dictionary.

24
00:01:13,480 --> 00:01:14,890
Your program will crash.

25
00:01:14,890 --> 00:01:17,920
The update value method will
just return nil And go ahead and

26
00:01:17,920 --> 00:01:20,800
add the new key-value
pair to the dictionary.

27
00:01:20,800 --> 00:01:24,490
And here you can see we've added a crash
of rhinoceros to our dictionary.

28
00:01:24,490 --> 00:01:26,040
No pun intended, I swear.

29
00:01:26,040 --> 00:01:30,710
If the dictionary does indeed contain
the value you tried to update,

30
00:01:30,710 --> 00:01:33,790
the update value for
key method returns the former value.

31
00:01:33,790 --> 00:01:34,950
The old value.

32
00:01:34,950 --> 00:01:36,940
Like we saw here when
the method returned flock.

33
00:01:38,290 --> 00:01:39,860
If you want to retrieve the value for

34
00:01:39,860 --> 00:01:43,300
a particular key you can use,
you guessed it.

35
00:01:43,300 --> 00:01:45,040
Sub script syntax.

36
00:01:45,040 --> 00:01:49,210
In other words, the dictionary name
followed by the key in square brackets.

37
00:01:49,210 --> 00:01:52,170
Let's scroll this up and
make a little more room.

38
00:01:52,170 --> 00:01:55,280
One has to be careful when
retrieving values from dictionaries.

39
00:01:55,280 --> 00:01:56,650
Because retrieving a value for

40
00:01:56,650 --> 00:02:00,010
a given key from a dictionary
returns an optional.

41
00:02:00,010 --> 00:02:02,088
Why would a dictionary
return an optional?

42
00:02:02,088 --> 00:02:04,808
I'm just going to pause for
a few seconds and let you think.

43
00:02:08,168 --> 00:02:11,520
It returns an optional because there's
always a chance that the key value pair

44
00:02:11,520 --> 00:02:14,040
you're looking for
isn't in the dictionary.

45
00:02:14,040 --> 00:02:17,990
There are many cases in which a program
might ask for a value from a dictionary,

46
00:02:17,990 --> 00:02:21,970
not knowing whether it will be there or
not, so it returns an optional.

47
00:02:21,970 --> 00:02:24,540
And naturally,
that optional needs to be unwrapped.

48
00:02:24,540 --> 00:02:28,150
We unwrap a value returned from
a dictionary using if let,

49
00:02:28,150 --> 00:02:30,670
just like we'd unwrap
any other optional.

50
00:02:30,670 --> 00:02:34,430
In this example we want to retrieve
the value for a group of whales and

51
00:02:34,430 --> 00:02:36,560
use that value in this print statement.

52
00:02:36,560 --> 00:02:38,600
So we unwrap it like so.

53
00:02:38,600 --> 00:02:41,490
And here the optional has a value, pod.

54
00:02:41,490 --> 00:02:44,300
So what happens if the key isn't found?

55
00:02:44,300 --> 00:02:46,030
No problem, we're covered.

56
00:02:46,030 --> 00:02:47,500
Like in this example.

57
00:02:47,500 --> 00:02:51,710
Sasquatches are not in our dictionary,
so the optional has a nil value.

58
00:02:51,710 --> 00:02:55,620
But that's okay because we've specified
exactly what we want the program to do

59
00:02:55,620 --> 00:02:56,730
in case of a nil value.
