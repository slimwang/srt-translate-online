1
00:00:00,000 --> 00:00:05,000
All right. The question was which of these five strings are in the language of this grammar.

2
00:00:05,000 --> 00:00:08,000
The first one looks pretty good. I just apply rule 1.

3
00:00:08,000 --> 00:00:12,000
P goes to open P close and then rule two to get rid of the P, and I'm in like Flynn.

4
00:00:12,000 --> 00:00:17,000
How about this? Well, I'm going to apply rule one twice.

5
00:00:17,000 --> 00:00:23,000
I'll end up with open open P close close, and then I'll use rule two to get rid of the P.

6
00:00:23,000 --> 00:00:27,000
Similarly, over here I'm going to apply rule one three times.

7
00:00:27,000 --> 00:00:30,000
Open open open P close close close.

8
00:00:30,000 --> 00:00:33,000
Then I'll apply rule two to get rid of the P.

9
00:00:33,000 --> 00:00:35,000
Totally in the language of our grammar.

10
00:00:35,000 --> 00:00:41,000
But this--tsk, tsk, tsk--this is going to be problematic.

11
00:00:41,000 --> 00:00:44,000
Just an open parenthesis.

12
00:00:44,000 --> 00:00:52,000
If you look over here, there's actually no way to make just a lonely open parenthesis

13
00:00:52,000 --> 00:00:55,000
that does not have a matching close parenthesis.

14
00:00:55,000 --> 00:00:59,000
There's only one rule that introduces the open parenthesis,

15
00:00:59,000 --> 00:01:02,000
and it makes just as many close parentheses at the same time.

16
00:01:02,000 --> 00:01:05,000
This cannot happen. Here this looks good.

17
00:01:05,000 --> 00:01:09,000
These parentheses match, open close open close,

18
00:01:09,000 --> 00:01:15,000
but if you take a look at this grammar, there is never a way to have an open after a close.

19
00:01:15,000 --> 00:01:20,000
I can apply this rule as many times as I want in this pattern,

20
00:01:20,000 --> 00:01:24,000
but I'm never going to end up making something like this--not as written.

21
00:01:24,000 --> 00:01:27,000
We could write a grammar for this, but not currently shown.

22
00:01:27,000 --> 00:01:31,000
This sort of system is known a balanced parentheses.

23
00:01:31,000 --> 00:01:35,000
The parentheses are balanced, because the number on the left equals the number on the right.

24
00:01:35,000 --> 00:01:40,000
One to one, two to two, three to three.

25
00:01:40,000 --> 00:01:44,000
In fact, you could imagine some sort of scale that'd have to be exactly equal--

26
00:01:44,000 --> 00:01:48,000
two openings, two closings. Balanced parentheses.

27
00:01:48,000 --> 99:59:59,999
This is a super-important problem in computer science.
