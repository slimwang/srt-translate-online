1
00:00:00,220 --> 00:00:03,620
You've covered the theory behind
loaders as well as the code sample.

2
00:00:03,620 --> 00:00:08,472
So, [SOUND] you're ready to practice
implementing a loader on your own

3
00:00:08,472 --> 00:00:10,209
in the Quake Report app.

4
00:00:10,209 --> 00:00:14,134
Your app already successfully fetches
earthquake data from the Internet, so

5
00:00:14,134 --> 00:00:17,404
in this task, you'll be refactoring
your app to use an AsyncTask

6
00:00:17,404 --> 00:00:19,092
loader instead of an AsyncTask.

7
00:00:19,092 --> 00:00:23,013
Code refactoring mean changing the
implementation details of how your code

8
00:00:23,013 --> 00:00:26,820
is structured, while still maintaining
the same external behavior.

9
00:00:26,820 --> 00:00:27,830
The UI will still look and

10
00:00:27,830 --> 00:00:31,550
behave the same, so the end user of
the app won't notice the difference.

11
00:00:31,550 --> 00:00:35,405
But now, will be more memory efficient
because loaders can handle device

12
00:00:35,405 --> 00:00:38,373
rotations and
the activity cycle much better.

13
00:00:38,373 --> 00:00:42,050
There are three pieces we need to put
together to swap out our AsyncTask for

14
00:00:42,050 --> 00:00:43,900
an AsyncTaskLoader.

15
00:00:43,900 --> 00:00:47,910
First, we need to write a subclass
of the AsyncTaskLoader,

16
00:00:47,910 --> 00:00:50,790
which we'll call
the EarthquakeLoader class.

17
00:00:50,790 --> 00:00:53,590
The most important method
is LoadInBackground,

18
00:00:53,590 --> 00:00:56,760
which works just like
AsyncTask's DoInBackground.

19
00:00:56,760 --> 00:00:59,950
Next, we need to do some plumbing
to allow EarthquakeActivity

20
00:00:59,950 --> 00:01:01,350
to use our loader.

21
00:01:01,350 --> 00:01:04,510
So we need to implement
the LoaderCallbacks interface.

22
00:01:04,510 --> 00:01:08,600
That way the LoaderManager can either
notify us to create a loader, or

23
00:01:08,600 --> 00:01:11,220
notify us when our loader
has results to deliver.

24
00:01:11,220 --> 00:01:14,740
Finally, when the EarthquakeActivity
is created, we should ask the loader

25
00:01:14,740 --> 00:01:19,570
manager to initialize a new earthquake
loader, or reuse an existing one.

26
00:01:19,570 --> 00:01:21,870
Here's another way to think
about the code refactoring.

27
00:01:21,870 --> 00:01:24,555
In essence, you want to move
over the code that was in

28
00:01:24,555 --> 00:01:29,950
the AsyncTask's DoInBackground method to
the loader's LoadInBackground method.

29
00:01:29,950 --> 00:01:33,220
As for
the AsyncTask's onPostExecute method,

30
00:01:33,220 --> 00:01:37,174
that code should be moved over to
the earthquake activity's onLoadFinished

31
00:01:37,174 --> 00:01:39,690
method, because that's
run on the main thread.

32
00:01:39,690 --> 00:01:43,720
In this method, we take the result
from the loader and update the UI.

33
00:01:43,720 --> 00:01:46,710
As an extra hint, you can check
the notes below the quiz for

34
00:01:46,710 --> 00:01:48,760
a gist of some partial code
to help you get started.

35
00:01:48,760 --> 00:01:53,320
It doesn't have all the details of a
proper Java file such as a package name

36
00:01:53,320 --> 00:01:56,060
or import statements, but hopefully
it points you in the right direction.

37
00:01:56,060 --> 00:01:59,680
When you're done with these three steps,
check this boxes right here to continue.
