1
00:00:00,022 --> 00:00:02,590
Most modern web applications
have elegant URLs.

2
00:00:02,590 --> 00:00:06,038
This helps people remember links which
then can be easily bookmarked or

3
00:00:06,038 --> 00:00:07,081
shared with others.

4
00:00:07,081 --> 00:00:11,354
As we saw in previous videos, the route
decorator is used to bind a function to

5
00:00:11,354 --> 00:00:14,339
a URL, but there is more to
it than just static paths.

6
00:00:14,339 --> 00:00:16,702
We can make certain paths
of the URL dynamic and

7
00:00:16,702 --> 00:00:18,649
attach multiple rules to a function.

8
00:00:18,649 --> 00:00:24,285
To add variables to a URL, I can specify
a rule with type: variable_name,

9
00:00:24,285 --> 00:00:28,522
where type can be an integer,
string, or another path.

10
00:00:28,522 --> 00:00:31,151
I will make a new route for
my menu app as so, and

11
00:00:31,151 --> 00:00:34,401
use the restaurant id to specify
which menu I want to see.

12
00:00:34,401 --> 00:00:37,128
Note that it's handy to leave
in this trailing slash, and

13
00:00:37,128 --> 00:00:40,202
Flask will render the page,
even when it's not there in the URL.

14
00:00:40,202 --> 00:00:43,449
I will now save my changes and
visit localhost port

15
00:00:43,449 --> 00:00:48,488
5000/restaurants/1/menu and
see my first restaurant menu there.

16
00:00:48,488 --> 00:00:50,765
If I change the integer
after restaurants,

17
00:00:50,765 --> 00:00:53,420
I can see other restaurants
in my database as well.
