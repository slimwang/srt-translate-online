1
00:00:00,250 --> 00:00:02,320
Here's the alternating
trick in some more detail.

2
00:00:03,410 --> 00:00:08,590
Suppose that M1 recognizes L and
M2 recognizes L complement.

3
00:00:08,590 --> 00:00:10,020
We want to decide the language L.

4
00:00:11,020 --> 00:00:14,510
In pseudo code the alternating
strategy might look like this.

5
00:00:14,510 --> 00:00:17,750
In every iteration we
execute both machines,

6
00:00:17,750 --> 00:00:19,690
one more step than we did the last time.

7
00:00:20,815 --> 00:00:23,810
Note that it doesn't matter if we
save the machines' configuration and

8
00:00:23,810 --> 00:00:26,600
start where we left off, or start over.

9
00:00:26,600 --> 00:00:30,420
The question is whether we get
the right answer, not how fast.

10
00:00:30,420 --> 00:00:34,270
The string has to either be an L,
or an L complement.

11
00:00:34,270 --> 00:00:38,270
So one of these has to halt after
some finite number of steps.

12
00:00:38,270 --> 00:00:42,850
And when i hits that value this
program will give the right answer.

13
00:00:42,850 --> 00:00:45,200
Overall then we have
the following theorem.

14
00:00:45,200 --> 00:00:50,600
A language L is decidable if and only if
L and its compliment are recognizable.
