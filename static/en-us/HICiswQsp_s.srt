1
00:00:00,430 --> 00:00:03,230
So, we now have a token
based authentication system

2
00:00:03,230 --> 00:00:07,140
that will authenticate a user based on
their user name and password or a token.

3
00:00:07,140 --> 00:00:11,230
But if we were going to actually store
passwords, users will be forced to make

4
00:00:11,230 --> 00:00:14,870
accounts and remember another
password in order to use our API.

5
00:00:14,870 --> 00:00:17,530
In a real application,
we would need to implement some sort of

6
00:00:17,530 --> 00:00:20,230
account verification and
password recovery for

7
00:00:20,230 --> 00:00:23,250
our application, since users can
often forget their passwords.

8
00:00:24,450 --> 00:00:27,730
And users would need to fill out another
profile and probably upload another

9
00:00:27,730 --> 00:00:32,470
profile picture, adding more delay time
for the user to access our application

10
00:00:32,470 --> 00:00:35,360
and potentially introducing a place for
a loss in user retention.

11
00:00:36,870 --> 00:00:39,100
If we add OAuth 2.0 to our application,

12
00:00:39,100 --> 00:00:42,040
we can let users log in with their
existing accounts, like Google and

13
00:00:42,040 --> 00:00:45,480
Facebook, and
quickly gain access to our application.

14
00:00:45,480 --> 00:00:49,160
In this next video, I will show you how
to add an endpoint using Google signin

15
00:00:49,160 --> 00:00:52,030
that will allow users to log in with
their existing Google accounts.
