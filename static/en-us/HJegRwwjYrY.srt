1
00:00:00,400 --> 00:00:04,800
In JavaScript you have two different
kinds of scope, global scope and

2
00:00:04,799 --> 00:00:06,469
function scope.

3
00:00:06,469 --> 00:00:10,259
If you define an identifier
outside of all of your functions

4
00:00:10,259 --> 00:00:13,259
it is considered part
of the global scope.

5
00:00:13,259 --> 00:00:16,559
That means the variable can be accessed
everywhere within the program.

6
00:00:16,559 --> 00:00:18,449
It is available globally.

7
00:00:18,449 --> 00:00:23,049
All functions in your program can access
variables defined in global scope.

8
00:00:23,050 --> 00:00:26,940
On the other hand,
you also have function scope.

9
00:00:26,940 --> 00:00:31,820
If an identifier is defined inside of a
function, it will be visible everywhere

10
00:00:31,820 --> 00:00:37,030
inside that function even inside
other functions inside that function.

11
00:00:37,030 --> 00:00:42,359
In this example here, the variable
james is defined in global scope.

12
00:00:43,369 --> 00:00:46,757
The variable librarian,
has fiunction scope.

13
00:00:46,758 --> 00:00:49,840
And it's accessible in both
the library function and

14
00:00:49,840 --> 00:00:52,120
the classic literature function.

15
00:00:52,119 --> 00:00:54,949
The book also has function scope,

16
00:00:54,950 --> 00:00:58,510
but it's only visible in
the classic literature function.

17
00:00:59,770 --> 00:01:03,330
If you try to access the book variable
outside of the classic literature

18
00:01:03,329 --> 00:01:06,099
function, you will get
a reference error.

19
00:01:07,120 --> 00:01:10,980
The way this works is,
when the JavaScript engine tries to find

20
00:01:10,980 --> 00:01:15,159
an identifier,
let's say the James variable here.

21
00:01:15,159 --> 00:01:20,099
It first look to see if that identifiers
define than the current function and

22
00:01:20,099 --> 00:01:23,309
if it finds it there then
it's job is done, but

23
00:01:23,310 --> 00:01:27,519
if it can't find it in the current
function it then moves out one level

24
00:01:29,359 --> 00:01:30,670
and then another level,
and then another level.

25
00:01:30,670 --> 00:01:35,150
And it keeps moving to the outer
functions until it's no longer

26
00:01:35,150 --> 00:01:36,469
in a function.

27
00:01:36,469 --> 00:01:39,409
That means it has reached
the global scope.

28
00:01:39,409 --> 00:01:43,310
If the JavaScript engine checks all of
the outer functions and global scope,

29
00:01:43,310 --> 00:01:48,250
and it still can't find the identifier
then it will return an error.

30
00:01:48,250 --> 00:01:50,950
Here it did find the identifier.

31
00:01:50,950 --> 00:01:53,030
James out there in global scope.

32
00:01:53,030 --> 00:01:56,060
Now that you have
the basics of global and

33
00:01:56,060 --> 00:01:58,969
function scope, let's take a moment
to practice what you've learned.

