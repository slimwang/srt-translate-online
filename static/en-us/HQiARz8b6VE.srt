1
00:00:00,526 --> 00:00:03,620
Datastore is a database that runs in the Google

2
00:00:03,620 --> 00:00:07,110
Cloud, and it's available to any App Engine application.

3
00:00:07,110 --> 00:00:09,110
As you already heard, it is built on big

4
00:00:09,110 --> 00:00:11,670
table, which is used by many of the huge services

5
00:00:11,670 --> 00:00:14,604
being run at Google. So, that also gives datastore

6
00:00:14,604 --> 00:00:18,990
unlimited scalability. Please see the instructor comments for more

7
00:00:18,990 --> 00:00:22,515
information on big table. Datastore is a no sequel

8
00:00:22,515 --> 00:00:25,781
database and to be more specific, it is a key-value,

9
00:00:25,781 --> 00:00:30,000
column-oriented store. It is key-value because the way

10
00:00:30,000 --> 00:00:32,049
you get and put the information, is very

11
00:00:32,049 --> 00:00:34,940
similar to that of hash tables or associative

12
00:00:34,940 --> 00:00:38,720
arrays in programming languages. And it's column-oriented which

13
00:00:38,720 --> 00:00:41,340
means that columns, not rows, are stored together,

14
00:00:41,340 --> 00:00:44,140
which means better performance and scalability for certain

15
00:00:44,140 --> 00:00:47,460
operations. This also means that Datastore is not

16
00:00:47,460 --> 00:00:51,570
like a traditional relational database system using SQL.

17
00:00:51,570 --> 00:00:54,630
The design of Datastore allows you to create applications

18
00:00:54,630 --> 00:00:57,610
operating at Google scale. And by that, we mean

19
00:00:57,610 --> 00:01:01,550
that your application can scale indefinitely, using distribution in

20
00:01:01,550 --> 00:01:03,730
the same way as many of the very big

21
00:01:03,730 --> 00:01:07,130
Google services do. This means that your data is

22
00:01:07,130 --> 00:01:10,010
not only stored on one computer or file system,

23
00:01:10,010 --> 00:01:13,290
but on multiple ones. Even in separate data centers,

24
00:01:13,290 --> 00:01:16,630
these type of distribution increases performance as you can retrieve

25
00:01:16,630 --> 00:01:20,360
data from these locations in parallel. Your application does

26
00:01:20,360 --> 00:01:22,410
not need to do anything extra to get all of

27
00:01:22,410 --> 00:01:25,220
this value. This is one of the great benefits using

28
00:01:25,220 --> 00:01:28,060
Datastore. You don't have to think about it, because Datastore

29
00:01:28,060 --> 00:01:32,700
automatically manages the scalability. However, this also means that you

30
00:01:32,700 --> 00:01:35,070
need to design your data model to take advantage of

31
00:01:35,070 --> 00:01:38,620
this. And when the data is stored in multiple locations,

32
00:01:38,620 --> 00:01:42,030
you also replicate the data. This means, you can always

33
00:01:42,030 --> 00:01:46,740
rely on that data being available. Because even if there is a failure somewhere,

34
00:01:46,740 --> 00:01:51,750
for example, a disk fails or lightning strikes and destroys a data center. That

35
00:01:51,750 --> 00:01:54,660
data is always available from another location.

36
00:01:54,660 --> 00:01:56,390
So with the design of data storage,

37
00:01:56,390 --> 00:01:59,040
you get both scalability and availability without

38
00:01:59,040 --> 00:02:01,610
having to do anything. It's quite amazing.
