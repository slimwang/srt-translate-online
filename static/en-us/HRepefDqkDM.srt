1
00:00:00,260 --> 00:00:04,685
And the one that I think is best is the next day procedure. This is sort of the

2
00:00:04,685 --> 00:00:08,432
most important thing to make the solution work. If we can't do this, then we

3
00:00:08,432 --> 00:00:12,104
would need to think of a different approach. And the reason that I think this is

4
00:00:12,104 --> 00:00:15,947
best is that, we can solve this in a simple way for the simple case, which is

5
00:00:15,947 --> 00:00:19,916
what we'll do next, not worrying about the complexity of how many days are in

6
00:00:19,916 --> 00:00:23,956
different months. And get a good feeling that we're able to get close to the

7
00:00:23,956 --> 00:00:27,940
right answer for some cases. The other answer that I think would be okay is

8
00:00:27,940 --> 00:00:31,090
doing is leap year. This is something we know we're going to need at some point.

9
00:00:31,090 --> 00:00:34,201
We need to determine whether the years are leap years to know how many days

10
00:00:34,201 --> 00:00:37,414
there are in the month of February but it's kind of a grungy, painful thing to

11
00:00:37,414 --> 00:00:40,454
write. It's something we know we're going to be able to do. And it's something

12
00:00:40,454 --> 00:00:43,682
that's not too interesting, so we're going to leave that until later. You could

13
00:00:43,682 --> 00:00:47,838
certainly make a case for doing that first. The other two are really not good

14
00:00:47,838 --> 00:00:51,350
answers. Trying to do the whole problem at this point is a little early. We

15
00:00:51,350 --> 00:00:54,500
still want to break it down into simpler parts and make progress and know that

16
00:00:54,500 --> 00:00:59,712
we're making progress. That other one is closer to something very small. The

17
00:00:59,712 --> 00:01:03,616
problem is this is probably not really the procedure that we want and until we

18
00:01:03,616 --> 00:01:07,642
write these other procedures and think more about how we're going to do this, we

19
00:01:07,642 --> 00:01:11,802
might not know enough to implement this correctly. And the reason that I'm going

20
00:01:11,802 --> 00:01:15,393
to suggest that this is not what we want is the number of days in a month

21
00:01:15,393 --> 00:01:19,182
actually depends on the year, if the month is February. So let's start by

22
00:01:19,182 --> 00:01:23,208
writing the next day procedure, and to keep things simple we'll assume that all

23
00:01:23,208 --> 00:01:24,294
months have 30 days.
