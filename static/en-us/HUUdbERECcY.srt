1
00:00:00,000 --> 00:00:02,000
Only the second one is true.

2
00:00:02,000 --> 00:00:05,000
Let's go through each one to see why it's true or false.

3
00:00:05,000 --> 00:00:08,000
OFB doesn't provide any stronger tamper protection than CFB does,

4
00:00:08,000 --> 00:00:11,000
and both of them don't provide very much tamper protection at all.

5
00:00:11,000 --> 00:00:14,000
To see this, it's quite easy for an attacker

6
00:00:14,000 --> 00:00:18,000
to mess with a byte of C1, and that will directly effect

7
00:00:18,000 --> 00:00:21,000
bytes in the message.

8
00:00:21,000 --> 00:00:26,000
This is similar to a way an attacker could tamper with a message in a one-time pad.

9
00:00:26,000 --> 00:00:30,000
With output feedback mode, it is possible to recover most of an encrypted file

10
00:00:30,000 --> 00:00:32,000
if one cipher block is lost.

11
00:00:32,000 --> 00:00:36,000
We can see this because in the decrypt process,

12
00:00:36,000 --> 00:00:39,000
we need to calculate this input into the XOR,

13
00:00:39,000 --> 00:00:45,000
and that can be calculated without knowledge of C1, C2, C3,

14
00:00:45,000 --> 00:00:48,000
or any of the other cipher messages.

15
00:00:48,000 --> 00:00:50,000
Even if we're missing a cipher text block,

16
00:00:50,000 --> 00:00:55,000
the rest of the MIs can be XORed with the remaining cipher text blocks.

17
00:00:55,000 --> 00:00:59,000
Ends are calculated inputs to find our message block.

18
00:00:59,000 --> 00:01:01,000
Likewise, this shows that output feedback mode

19
00:01:01,000 --> 00:01:04,000
won't make a good cryptographic hash function.

20
00:01:04,000 --> 00:01:06,000
A cryptographic hash function must have the property

21
00:01:06,000 --> 00:01:08,000
that the final output depends on all the blocks in the message.

22
00:01:08,000 --> 00:01:10,000
In output feedback mode, the cipher block text does not

23
00:01:10,000 --> 00:01:12,000
depend on previous parts of the message.

24
00:01:12,000 --> 00:01:16,000
For example, C2 does not depend on message 1.

25
00:01:16,000 --> 00:01:18,000
And this shows that we can easily change a block

26
00:01:18,000 --> 00:01:20,000
and calculate to the same final output.

27
00:01:20,000 --> 00:01:25,000
For the 4th option, no, it is not safe to use 0 vector as the initialization vector.

28
00:01:25,000 --> 00:01:27,000
As with cipher feedback mode and cipher block chaining,

29
00:01:27,000 --> 00:01:30,000
the initialization vector is important to prevent an attacker

30
00:01:30,000 --> 00:01:32,000
from deriving repetition in the messages.

31
00:01:32,000 --> 99:59:59,999
Always using the 0 initialization vector leaves output feedback mode vulnerable to this attack.
