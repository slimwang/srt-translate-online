1
00:00:00,390 --> 00:00:01,950
All right, you're done.

2
00:00:01,950 --> 00:00:04,850
Here's how I ended up changing
the layouts in the forecast view.

3
00:00:06,010 --> 00:00:10,480
Let's first look at what I had to do
in activity_main.xml to the toolbar.

4
00:00:10,480 --> 00:00:11,750
This one was pretty easy,

5
00:00:11,750 --> 00:00:15,800
because I already had a linear layout
containing a toolbar in our image view.

6
00:00:15,800 --> 00:00:17,470
As well as this fragment.

7
00:00:17,470 --> 00:00:22,730
Basically, all I had to do was add this
new margin top for action bar size and

8
00:00:22,730 --> 00:00:26,110
set the layout_height, or image view,
to listpreferreditemheight.

9
00:00:26,110 --> 00:00:29,320
Then, I set the layout_gravity
to center_horizontal and

10
00:00:29,320 --> 00:00:32,470
I have it wrap our content,
rather than match parent.

11
00:00:32,470 --> 00:00:35,520
This will create the additional
height we want for the app bar.

12
00:00:35,520 --> 00:00:40,460
And it'll actually center the image
view inside of the entire toolbar.

13
00:00:40,460 --> 00:00:43,530
So if we had left this as match parent,
when it tried to center the image it

14
00:00:43,530 --> 00:00:46,460
would've actually not known how to
take into account the fact that

15
00:00:46,460 --> 00:00:49,860
we have an overflow menu, and so
it wouldn't actually be centered.

16
00:00:49,860 --> 00:00:54,030
Other than that, we set
the background to color primary here.

17
00:00:54,030 --> 00:00:58,210
That's really not helping us,
because we don't really need it [LAUGH].

18
00:00:58,210 --> 00:00:58,820
And finally, for

19
00:00:58,820 --> 00:01:02,240
the toolbar, we actually set
the layout height to wrap_content.

20
00:01:02,240 --> 00:01:05,420
So it'll grow in response
to this margin top.

21
00:01:05,420 --> 00:01:06,100
It's very important.

22
00:01:07,150 --> 00:01:09,780
And that's it, pretty straight
forward for activity main.

23
00:01:10,920 --> 00:01:12,760
Lets look at list item forecast today.

24
00:01:12,760 --> 00:01:16,580
Now, if you were paying attention,
you notice that this grid layout looks

25
00:01:16,580 --> 00:01:20,640
almost identical to the grid layout
that's actually in the detail view.

26
00:01:20,640 --> 00:01:22,990
Now you guys didn't actually
end up coding that one up, so

27
00:01:22,990 --> 00:01:25,910
if you took the time to code
this one up, all the better.

28
00:01:25,910 --> 00:01:27,370
It's pretty straight forward and

29
00:01:27,370 --> 00:01:29,720
we covered it pretty completely
in the previous lecture.

30
00:01:30,995 --> 00:01:33,310
We just remember we have
two columns in our grid.

31
00:01:34,430 --> 00:01:39,320
Breaking apart our grid view,
we start off with our date,

32
00:01:39,320 --> 00:01:43,470
which it uses to add vertical
white space by about 16 pixels.

33
00:01:43,470 --> 00:01:47,070
All right, let's take a look at
how our date text view works.

34
00:01:47,070 --> 00:01:50,510
It has a margin bottom and top, and
that adds 16 DP of space above and

35
00:01:50,510 --> 00:01:52,160
below the layout.

36
00:01:52,160 --> 00:01:55,270
We're actually centering
the text inside of the layout,

37
00:01:55,270 --> 00:01:57,620
rather than centering the layout itself.

38
00:01:57,620 --> 00:02:00,240
So we're actually going to fill
the entire space horizontally.

39
00:02:00,240 --> 00:02:03,470
And we're going to span both columns.

40
00:02:03,470 --> 00:02:05,320
And then we have our icon.

41
00:02:05,320 --> 00:02:10,690
Once again, we're using maxHeight and
maxWidth, based upon our dimensions.

42
00:02:10,690 --> 00:02:14,130
So that if things come in from the net,
it's not going to change our layout, or

43
00:02:14,130 --> 00:02:17,490
at least it's not going to make our
layout bigger than we want it to be.

44
00:02:17,490 --> 00:02:20,540
We set a column weight of 1 here,
because we want to make sure that

45
00:02:20,540 --> 00:02:24,040
all of our columns are participating
in getting extra space.

46
00:02:24,040 --> 00:02:28,101
Same thing here for the high textview,
the forecast textview, and

47
00:02:28,101 --> 00:02:29,680
the low textview.

48
00:02:29,680 --> 00:02:31,480
These are all handled
pretty much the same.

49
00:02:31,480 --> 00:02:34,870
So the one thing to note here is
that the layout margin bottom here

50
00:02:34,870 --> 00:02:38,520
actually provide 16 DP of margin for
the entire row,

51
00:02:38,520 --> 00:02:43,590
even though it's actually only
a part of this particular cell.

52
00:02:43,590 --> 00:02:46,340
Finally, let's take a look
at list item forecast.

53
00:02:46,340 --> 00:02:48,850
In this one we're not doing
anything particularly special.

54
00:02:48,850 --> 00:02:53,490
We're using frame layouts and
linear layouts, as we always have.

55
00:02:53,490 --> 00:02:56,460
The biggest difference between this and
the last one is that, one,

56
00:02:56,460 --> 00:02:59,390
we're using proper
dimensions everywhere,

57
00:02:59,390 --> 00:03:03,670
We've actually eliminated a linear
layout that used to be in this section.

58
00:03:03,670 --> 00:03:04,230
As you can see,

59
00:03:04,230 --> 00:03:07,460
we've really tried to make sure that
we're using dimensions everywhere.

60
00:03:07,460 --> 00:03:09,280
This helps to create a sort of style for

61
00:03:09,280 --> 00:03:12,260
our application that's consistent,
especially since we're trying to go for

62
00:03:12,260 --> 00:03:16,500
material design, which is very explicit
about how the spacing should be.

63
00:03:16,500 --> 00:03:17,910
And here's what this looks
like when we run it.

64
00:03:17,910 --> 00:03:21,429
As you expect, it looks pretty
much like our original diagrams.

65
00:03:23,270 --> 00:03:23,770
Nice stuff.

66
00:03:25,180 --> 00:03:26,580
And that's it!

67
00:03:26,580 --> 00:03:29,979
Pretty similar to what you
came up with or different?

68
00:03:29,979 --> 00:03:32,990
Again, there's not
necessarily a right answer.

69
00:03:32,990 --> 00:03:35,280
But the goal is to try and
create a fairly simple layout.
