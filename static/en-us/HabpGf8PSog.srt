1
00:00:00,430 --> 00:00:03,240
Your game is going to look
awesome on the big screen.

2
00:00:03,240 --> 00:00:06,570
But before we look towards the future,
let's start with a trip to the past.

3
00:00:06,570 --> 00:00:07,350
First you need to be

4
00:00:07,350 --> 00:00:10,610
aware of something called overscan
when you're designing your game.

5
00:00:10,610 --> 00:00:14,430
Overscan refers to a problem with
many older, and some modern TV's.

6
00:00:14,430 --> 00:00:17,510
Basically, some older CRTs
had trouble centering images,

7
00:00:17,510 --> 00:00:19,899
and there was some variability
in how different models did it.

8
00:00:21,060 --> 00:00:23,640
The solution was to center
an image as best they could and

9
00:00:23,640 --> 00:00:27,130
then slightly enlarge it to make sure
it would take up the whole screen.

10
00:00:27,130 --> 00:00:30,840
Unfortunately, this meant that the edges
of the image would sometimes be cut off.

11
00:00:30,840 --> 00:00:34,460
So here, for example,
our Android's feet might not be visible.

12
00:00:34,460 --> 00:00:38,240
Surprisingly, even modern flat
screen TVs suffer from this problem,

13
00:00:38,240 --> 00:00:41,280
although for different technical
reasons and to a lesser degree.

14
00:00:41,280 --> 00:00:42,600
Here's what to do.

15
00:00:42,600 --> 00:00:45,570
I recommend establishing a safe zone for
important content.

16
00:00:45,570 --> 00:00:48,770
Your best bet is to avoid placing
important screen elements within

17
00:00:48,770 --> 00:00:51,440
about 5% from each edge of the display.

18
00:00:51,440 --> 00:00:53,060
Five percent is a rough guideline and

19
00:00:53,060 --> 00:00:56,540
that's because the overscan amount
varies on different television.

20
00:00:56,540 --> 00:00:59,340
Here's how that might look
on a 1080 pixel screen.

21
00:00:59,340 --> 00:01:01,490
We could add a 96 pixel
margin on the left and

22
00:01:01,490 --> 00:01:05,060
right edges and a 54 pixel margin
on the top and bottom edges.

23
00:01:05,060 --> 00:01:06,960
This is just for illustration.

24
00:01:06,960 --> 00:01:08,386
Check out the instructor notes, for

25
00:01:08,386 --> 00:01:10,459
more details on the specific
margins you should add.

26
00:01:11,840 --> 00:01:14,950
If you're designing a TV app, then you
don't need to worry about over scan if

27
00:01:14,950 --> 00:01:17,450
you're using lean back fragments.

28
00:01:17,450 --> 00:01:21,290
For example, the browse fragment you
see here automatically applies overscan

29
00:01:21,290 --> 00:01:22,440
margins to your layouts.

30
00:01:23,520 --> 00:01:27,110
If you're building a game that will run
on both a mobile device and a TV, then

31
00:01:27,110 --> 00:01:30,580
at run time, you might want to detect
what type of device you're running on so

32
00:01:30,580 --> 00:01:32,249
you can adjust how
the screen's base is used.

33
00:01:33,340 --> 00:01:35,410
You can do this using
the UI Mode Manager.

34
00:01:35,410 --> 00:01:38,660
And there's more details on this in the
building TV app section of this course.
