1
00:00:00,000 --> 00:00:04,000
The answer surprisingly is 0, 0, 0.

2
00:00:04,000 --> 00:00:06,000
It just survives the way it was before.

3
00:00:06,000 --> 00:00:10,000
To see this, [ ] initially faces east.

4
00:00:10,000 --> 00:00:17,000
Next direction, it'll move forward 40, and then its heading direction changes

5
00:00:17,000 --> 00:00:21,000
by 4 x pi/8, which is pi(1/2), so it's going to start pointing up.

6
00:00:21,000 --> 00:00:26,000
It repeats the same action 3 more times, and eventually arrives at the original location

7
00:00:26,000 --> 00:00:28,000
and points right again.

8
00:00:28,000 --> 00:00:35,000
So this is a square motion. The results are in the exact same initial state as it started out with.

9
00:00:35,000 --> 00:00:41,000
Now in reality, if we didn't use these equations over here, it would be on a circle,

10
00:00:41,000 --> 00:00:44,000
but even in a circle, it would arrive back at the original location with those

11
00:00:44,000 --> 00:00:46,000
parameters shown over here.

12
00:00:46,000 --> 00:00:49,000
So the fact that our simulation simulates a square

13
00:00:49,000 --> 00:00:51,000
doesn't effect the end result of this question,

14
00:00:51,000 --> 00:00:53,000
and I didn't even ask about the circle.

15
00:00:53,000 --> 99:59:59,999
I just asked about applying those equations over here, so 0, 0, 0 is the correct answer.
