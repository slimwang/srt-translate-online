1
00:00:00,180 --> 00:00:03,170
Let's look more formally at
what Cloud computing provides.

2
00:00:03,170 --> 00:00:05,200
Traditionally businesses would buy and

3
00:00:05,200 --> 00:00:09,280
configure the resources that
are needed for their services.

4
00:00:09,280 --> 00:00:12,730
How many resources should be
purchased and configured?

5
00:00:12,730 --> 00:00:15,930
So what is the capacity
of those resources?

6
00:00:15,930 --> 00:00:18,550
Well that typically would be based on

7
00:00:18,550 --> 00:00:22,520
some expectations regarding the demand
for that particular business, for

8
00:00:22,520 --> 00:00:26,570
that particular service,
typically considering the peak demand.

9
00:00:26,570 --> 00:00:31,130
So if we have a situation in which
the Demand follows this pink or

10
00:00:31,130 --> 00:00:35,240
this red line, then the business
would configure their resources,

11
00:00:35,240 --> 00:00:38,130
their capacity,
based on this blue line, so

12
00:00:38,130 --> 00:00:43,040
that it can tolerate the expected
peak in the service demand.

13
00:00:43,040 --> 00:00:47,500
Now the expectations turn out
to be not quite accurate and

14
00:00:47,500 --> 00:00:52,260
the demand ends up exceeding
the provision capacity.

15
00:00:52,260 --> 00:00:55,570
The business will end up with
a situation in which requests have

16
00:00:55,570 --> 00:00:58,305
to be dropped and
there will be a lost opportunity.

17
00:00:58,305 --> 00:01:02,840
In the case of given the very
rapid spike in the workload,

18
00:01:02,840 --> 00:01:05,700
this lost opportunity would
have been tremendous.

19
00:01:05,700 --> 00:01:09,080
Instead, what we would like
would be the ideal case

20
00:01:09,080 --> 00:01:10,980
is if the following were to happen.

21
00:01:10,980 --> 00:01:16,630
The capacity or the available resources
should scale elastically with the demand

22
00:01:16,630 --> 00:01:19,340
and the scaling should be instantaneous.

23
00:01:19,340 --> 00:01:23,740
As soon as the demand increases,
the capacity should increase too.

24
00:01:23,740 --> 00:01:25,370
And then in the other direction, too,

25
00:01:25,370 --> 00:01:29,780
as soon as the demand decreases
the capacity should decrease as well.

26
00:01:29,780 --> 00:01:34,510
Meaning that the cost to operate
these resources, the cost to support

27
00:01:34,510 --> 00:01:39,440
this service should be proportional to
the demand to the revenue opportunity.

28
00:01:39,440 --> 00:01:42,400
All of this should happen
automatically without the need for

29
00:01:42,400 --> 00:01:44,550
some hacking wizardry.

30
00:01:44,550 --> 00:01:48,993
And all these resources can be
accessed anytime from anywhere.

31
00:01:48,993 --> 00:01:53,385
One potential [INAUDIBLE] here
is that you wouldn't necessarily

32
00:01:53,385 --> 00:01:57,235
own these resources that
magically appear on demand.

33
00:01:57,235 --> 00:02:01,095
But that may be something that
you're willing to compromise on

34
00:02:01,095 --> 00:02:05,520
provided that you really do
achieve these kinds of benefits.

35
00:02:05,520 --> 00:02:09,660
And that there is some kind of
proper assurance as to what exactly

36
00:02:09,660 --> 00:02:13,690
can possibly go wrong with these
resources that you're accessing.

37
00:02:13,690 --> 00:02:17,970
So the goal of Cloud Computing is
to provide these capabilities that

38
00:02:17,970 --> 00:02:21,340
match the idea scenario
as much as possible.

39
00:02:21,340 --> 00:02:24,410
The resulting requirements
can be distilled as follows.

40
00:02:24,410 --> 00:02:28,930
Cloud computing should provide on
demand, elastic resources and services.

41
00:02:28,930 --> 00:02:32,760
There should be fine-grained
pricing based on usage.

42
00:02:32,760 --> 00:02:35,510
Not for actual or
potentially idle physical

43
00:02:35,510 --> 00:02:40,370
servers like in the hosting data centers
that were the alternative at the time.

44
00:02:40,370 --> 00:02:44,280
All the resources should be
professionally managed and hosted.

45
00:02:44,280 --> 00:02:49,070
And all of this should be available via
APIs that can be used for remote access.
