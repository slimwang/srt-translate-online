1
00:00:05,227 --> 00:00:09,568
Hey James, what do you say about treating a displayProjects function that will

2
00:00:09,568 --> 00:00:12,500
handle all of our projects and display them on a page?

3
00:00:12,500 --> 00:00:14,330
>> I have a better idea.

4
00:00:14,330 --> 00:00:17,440
We only just touch the surface of what objects can do.

5
00:00:17,440 --> 00:00:19,170
Let's take a look at them first, and

6
00:00:19,170 --> 00:00:23,110
then we'll finish off our resume using our newfound knowledge of objects.

7
00:00:23,110 --> 00:00:23,820
Does that work for you?

8
00:00:23,820 --> 00:00:24,410
>> Yeah.

9
00:00:24,410 --> 00:00:26,060
Why don't you start us off?

10
00:00:26,060 --> 00:00:30,250
>> We saw earlier that we define objects with these curly braces.

11
00:00:30,250 --> 00:00:34,080
And we also include code for functions inside the curly braces.

12
00:00:34,080 --> 00:00:34,810
Guess what?

13
00:00:34,810 --> 00:00:36,140
Functions are objects.

14
00:00:36,140 --> 00:00:36,680
>> What?

15
00:00:36,680 --> 00:00:38,250
>> I know you knew that already.

16
00:00:38,250 --> 00:00:43,160
It's a little bit crazy, but pretty much everything in JavaScript is really

17
00:00:43,160 --> 00:00:45,180
an object when you get right down to it.

18
00:00:45,180 --> 00:00:48,300
There's a link in the instructor's notes with implications from

19
00:00:48,300 --> 00:00:50,850
the relationship between functions and object.

20
00:00:50,850 --> 00:00:54,190
For our purposes it's useful to note that objects can

21
00:00:54,190 --> 00:00:56,310
encapsulate functions as well.

22
00:00:56,310 --> 00:00:56,850
>> Yeah.

23
00:00:56,850 --> 00:01:01,190
For instance, let's create display as a method of the projects object.

24
00:01:01,190 --> 00:01:02,860
Projects, the object,

25
00:01:02,860 --> 00:01:06,120
already includes all of our data about all of the projects we've completed.

26
00:01:06,120 --> 00:01:09,400
And now it's going to include a function that will help us display

27
00:01:09,400 --> 00:01:10,680
those projects.

28
00:01:10,680 --> 00:01:12,340
Using dot notation here,

29
00:01:12,340 --> 00:01:15,590
we can add a new property to the projects object called display.

30
00:01:15,590 --> 00:01:17,910
And we'll set it equal to a function.

31
00:01:17,910 --> 00:01:21,730
Within these curly braces, we'll define what the function display will do.

32
00:01:21,730 --> 00:01:26,370
Even though we defined the projects object with object literal notation,

33
00:01:26,370 --> 00:01:28,860
it doesn't matter how we defined the projects object,

34
00:01:28,860 --> 00:01:32,350
we can still crreate this property display using dot notation.

35
00:01:32,350 --> 00:01:33,990
This is called encapsulation,

36
00:01:33,990 --> 00:01:38,440
meaning that we're holding the display function inside the projects object.

37
00:01:38,440 --> 00:01:41,370
It's a nice way to organize our code into logical domains and

38
00:01:41,370 --> 00:01:43,680
JavaScript makes it really easy to do so.

39
00:01:43,680 --> 00:01:44,280
>> Nice.

40
00:01:44,280 --> 00:01:46,830
So what should go inside projects.display?

41
00:01:46,830 --> 00:01:47,750
>> Hm, you know what?

42
00:01:47,750 --> 00:01:49,220
Let's let the students decide first.
