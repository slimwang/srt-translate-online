1
00:00:00,610 --> 00:00:04,640
D3, I want to unpack that name a bit because I think that speaks to

2
00:00:04,640 --> 00:00:10,310
why the library was created and how it integrates data with a webpage.

3
00:00:10,310 --> 00:00:13,540
Data driven documents.

4
00:00:13,540 --> 00:00:18,620
Data in this case refers to some information we are trying to visualize.

5
00:00:18,620 --> 00:00:22,525
Be it CSV or JSON, loaded externally, or

6
00:00:22,525 --> 00:00:27,110
simply a JavaScript object or variables.

7
00:00:27,110 --> 00:00:32,390
Documents is a reference to a webpage or web document, rather,

8
00:00:32,390 --> 00:00:38,010
a collection of HTML, CSS, JavaScript, and SVG often.

9
00:00:38,010 --> 00:00:41,470
But hey, data driven html or

10
00:00:41,470 --> 00:00:47,180
data driven pages, just didn't have the same ring to it.

11
00:00:47,180 --> 00:00:52,040
And driven, D3, binds data to the document, or

12
00:00:52,040 --> 00:00:58,660
rather more concretely, rows of a CSV or JSON to SVG elements.

13
00:00:58,660 --> 00:01:04,599
More formally, documents doesn't only refer to the source of the page,

14
00:01:04,599 --> 00:01:10,080
and the content of the HTML, CSS, JavaScript, or SVG, but

15
00:01:10,080 --> 00:01:15,200
it could also refer to what's called the Document Object Model, or DOM.

16
00:01:16,400 --> 00:01:19,920
Web browsers can be thought to store two versions of the web page or

17
00:01:19,920 --> 00:01:22,110
rather two views.

18
00:01:22,110 --> 00:01:25,618
One of which is the initial source, as I mentioned,

19
00:01:25,618 --> 00:01:31,050
that gets returned from the web server, and the other is a parsed DOM object.

20
00:01:31,050 --> 00:01:36,194
The Document Object Model is a specification, much like HTML and CSS,

21
00:01:36,194 --> 00:01:42,820
that specifies a common programming interface for HTML and XML documents.

22
00:01:42,820 --> 00:01:48,080
Once the source of the HTML is returned from the server, the web browser

23
00:01:48,080 --> 00:01:53,040
parses the file and transforms it into a hierarchical object that can

24
00:01:53,040 --> 00:01:57,530
accessed programmatically, most often through JavaScript, called the DOM.

25
00:01:58,610 --> 00:02:04,140
D3 actually binds data to the DOM rather than the source or

26
00:02:04,140 --> 00:02:06,610
visual elements of the HTML.

27
00:02:06,610 --> 00:02:09,660
But since the DOM actually represents and

28
00:02:09,660 --> 00:02:15,680
can interact with what's displayed visually, when we bind data to the DOM,

29
00:02:15,680 --> 00:02:21,580
D3 drives the document, in this case the visual representation of the DOM,

30
00:02:21,580 --> 00:02:26,250
and creates a chart based on the data that's in the DOM.
