1
00:00:00,240 --> 00:00:04,260
Now Sarah has just shown you how one can use object tracing to find a bug in a

2
00:00:04,260 --> 00:00:08,430
method implementation. And I'd like to show you another kind of bug that's

3
00:00:08,430 --> 00:00:12,940
fairly common. So over here I have my drive method. I drive a given distance, I

4
00:00:12,940 --> 00:00:17,280
update the miles driven. I compute the gas consumed. I update the gasInTank.

5
00:00:17,280 --> 00:00:21,050
And when I compile it, I get an error message. Where it says can not find

6
00:00:21,050 --> 00:00:26,490
symbol variable gas consumed. It's complaining over here. Now it's a common

7
00:00:26,490 --> 00:00:30,990
error to now say oh, it can't find it so let me just make another instance

8
00:00:30,990 --> 00:00:43,330
variable. So on the surface it doesn't seem like an error because the class

9
00:00:43,330 --> 00:00:48,200
will compile and actually the code will kind of work but it's really inelegant.

10
00:00:48,200 --> 00:00:52,140
Let's use the tracing technique to find out why. Note that this class now has

11
00:00:52,140 --> 00:00:56,900
four instance variables. Here they are on an index card. And now let's quickly

12
00:00:56,900 --> 00:01:01,140
run through the same scenario that we had previously. The car gets constructed,

13
00:01:01,140 --> 00:01:07,360
we add 30 gallons, we drive 10 miles. That consumes a gallon. We then drive 20

14
00:01:07,360 --> 00:01:13,850
miles for a total of 30, that consumes 2 gallons. We're left with 27 gallons.

15
00:01:13,850 --> 00:01:18,055
So what's wrong? Have a look at this variable. The stuff that it remembers is

16
00:01:18,055 --> 00:01:22,250
short-term information. The amount of gas consumed the last time we drove,

17
00:01:22,250 --> 00:01:25,230
that's just like remembering what pizza you had for lunch. You don't really

18
00:01:25,230 --> 00:01:29,880
need to remember this long term. There's absolutely no need to remember these

19
00:01:29,880 --> 00:01:34,280
values after a call to drive, they should be short term memory that should be a

20
00:01:34,280 --> 00:01:40,780
local variable. Okay, let's make it so. Over here let's not make gas consumed

21
00:01:40,780 --> 00:01:45,800
into an instance variable. Over here we turn it into a local variable simply by

22
00:01:45,800 --> 00:01:50,160
adding the type. Remember the difference between an assignment and a variable

23
00:01:50,160 --> 00:01:55,450
declaration is nothing but the type. Now the code will compile. And when we

24
00:01:55,450 --> 00:02:00,350
review the instance variables up here, we'll find there are no unnecessary one.

25
00:02:00,350 --> 00:02:04,990
Your car does need to remember the miles driven at a gas level across multiple

26
00:02:04,990 --> 00:02:08,449
method calls. And of course, it needs to know the mileage so that it can

27
00:02:08,449 --> 00:02:11,750
compute the gas consumption. So you've just seen how the technique of object

28
00:02:11,750 --> 00:02:16,525
tracing gives us an insight into what an object does and it lets us find some

29
00:02:16,525 --> 00:02:18,511
errors.
