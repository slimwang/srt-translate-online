1
00:00:00,530 --> 00:00:02,610
Creating one cube is kind of cool.

2
00:00:02,610 --> 00:00:05,380
But what about creating 100 cubes?

3
00:00:05,380 --> 00:00:06,540
What about 1,000?

4
00:00:06,540 --> 00:00:10,530
Try doing that in the Unity
editor just using your mouse.

5
00:00:10,530 --> 00:00:11,580
Ouch!

6
00:00:11,580 --> 00:00:13,800
Stuff like that is
better done with code.

7
00:00:13,800 --> 00:00:14,280
Let's try it.

8
00:00:15,310 --> 00:00:17,550
Okay, back in the Unity editor,
go ahead and

9
00:00:17,550 --> 00:00:20,585
create a new script
called ManyObjectMaker.

10
00:00:21,720 --> 00:00:24,010
Okay, go ahead and open that up.

11
00:00:24,010 --> 00:00:25,190
Just like last time,

12
00:00:25,190 --> 00:00:29,360
let's add two lines of code to
create an object using a reference.

13
00:00:29,360 --> 00:00:35,020
Now, let's write some code to
create a long line of 1,000 cubes.

14
00:00:35,020 --> 00:00:39,600
First of all, comment out the line
that starts with Object.Instantiate.

15
00:00:39,600 --> 00:00:44,460
This way we can reference the code for
later, but Unity will ignore the line.

16
00:00:44,460 --> 00:00:45,828
Let's talk about comments for a second.

17
00:00:45,828 --> 00:00:50,700
Comments are a great way to write
programming notes to yourself and

18
00:00:50,700 --> 00:00:51,980
others.

19
00:00:51,980 --> 00:00:56,190
And in this case, they're also a very
useful way to keep code around so

20
00:00:56,190 --> 00:00:58,310
that we can reference it later.

21
00:00:58,310 --> 00:01:00,590
Okay, let's go back to the code.

22
00:01:00,590 --> 00:01:03,210
Below the comment,
add the following lines.

23
00:01:03,210 --> 00:01:08,150
This is called a for loop, you'll see
them all the time in programming.

24
00:01:08,150 --> 00:01:12,340
Loops are a big part of programming,
and this is just one kind of loop.

25
00:01:12,340 --> 00:01:14,350
So, what does a for loop do?

26
00:01:14,350 --> 00:01:17,630
Well, this loop executes a set
of instructions 1,000 times.

27
00:01:17,630 --> 00:01:19,380
And how do I know that?

28
00:01:19,380 --> 00:01:22,890
Well, let's talk a bit more about for
loops.

29
00:01:22,890 --> 00:01:27,242
So here's a for loop that looks very
similar to the one we just wrote.

30
00:01:27,242 --> 00:01:31,350
When Unity hits this very first line,
it creates a variable called i.

31
00:01:31,350 --> 00:01:33,160
And it sets its value to zero.

32
00:01:34,230 --> 00:01:39,070
Right after that, it checks to
see if i is less than 1,000.

33
00:01:39,070 --> 00:01:41,942
Since it is, because i equals to zero,

34
00:01:41,942 --> 00:01:45,519
Unity executes the command
between the braces.

35
00:01:46,610 --> 00:01:49,510
In this case,
we mark that with do stuff.

36
00:01:49,510 --> 00:01:53,540
When Unity hits the closing brace,
it jumps back to the top, and

37
00:01:53,540 --> 00:01:55,550
it adds one to i.

38
00:01:55,550 --> 00:01:58,230
That's what the ++ means here.

39
00:01:58,230 --> 00:02:00,270
So, now i holds a value of one.

40
00:02:01,600 --> 00:02:06,110
Right after that, Unity checks again
to see if i is less than 1,000.

41
00:02:06,110 --> 00:02:12,040
And it is, because i is equal to one,
so we execute the same code again.

42
00:02:12,040 --> 00:02:13,520
So, do stuff happens again.

43
00:02:15,250 --> 00:02:18,400
Now this goes on and on and
on, until i is equal to 1,000.

44
00:02:18,400 --> 00:02:24,092
And at that point, Unity exits the loop,
because i is 1,000,

45
00:02:24,092 --> 00:02:28,489
and 1,000 is not less than 1,000.

46
00:02:28,489 --> 00:02:32,000
So, the next thing that it executes
is the line labeled finished.

47
00:02:33,590 --> 00:02:37,420
Okay, so a for
loop is really just a very succinct way

48
00:02:37,420 --> 00:02:40,360
to tell Unity to do
something a bunch of times.

49
00:02:41,640 --> 00:02:43,630
All right, let's go back to the code.

50
00:02:43,630 --> 00:02:46,190
Let's add some new code
below the do stuff comment.

51
00:02:47,650 --> 00:02:51,179
This line looks almost exactly like the
last instantiate command, doesn't it?

52
00:02:52,590 --> 00:02:57,250
Notice we're just changing the location
where the object will be created.

53
00:02:57,250 --> 00:02:59,520
We're setting the x coordinate to i.

54
00:03:01,180 --> 00:03:05,960
And remember, that i goes from 0
to 1,000, because of the for loop.

55
00:03:07,400 --> 00:03:10,520
Okay, save the script,
and go back to Unity.

56
00:03:10,520 --> 00:03:13,046
Just like last time,
let's create a new empty game object.

57
00:03:13,046 --> 00:03:18,760
Let's call it MyManyObjectMaker.

58
00:03:18,760 --> 00:03:20,010
Let's drag our script onto it.

59
00:03:20,010 --> 00:03:23,442
Let's go up and create a new cube, and

60
00:03:23,442 --> 00:03:29,360
drag our cube into the Object to
Create slot, and now press Play.

61
00:03:29,360 --> 00:03:32,047
[BLANK_AUDIO]

62
00:03:32,047 --> 00:03:32,590
Voila.

63
00:03:34,040 --> 00:03:36,050
You just created 1,000
cubes in an instant.

64
00:03:37,080 --> 00:03:37,930
That's a lot of cubes.

65
00:03:39,420 --> 00:03:42,190
At this point,
take some time to play with the loop.

66
00:03:42,190 --> 00:03:45,470
Can you make the cubes be stacked on top
of each other instead of laying side

67
00:03:45,470 --> 00:03:46,900
by side?

68
00:03:46,900 --> 00:03:50,890
Can you make X, Y, and
Z change at the same time?

69
00:03:50,890 --> 00:03:52,010
Have fun.

70
00:03:52,010 --> 00:03:54,330
Loops are an incredibly
powerful programming tool.
