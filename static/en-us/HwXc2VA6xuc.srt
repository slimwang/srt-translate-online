1
00:00:00,130 --> 00:00:04,080
Let me show you how I did this. We have the loop for the rows, and the loop for

2
00:00:04,080 --> 00:00:08,707
the columns. Notice that the rows jump in steps of two. We'll do the same thing

3
00:00:08,707 --> 00:00:13,585
for the columns. Now I need to compute the average of these four pixels. Let me

4
00:00:13,585 --> 00:00:18,230
draw my little picture again. So here's position I J. And I want to compute the

5
00:00:18,230 --> 00:00:23,182
average of this one. This one. This one, and this one. I already have the one

6
00:00:23,182 --> 00:00:30,356
in I J. This one here has row I, column J plus 1. The one over here has row I

7
00:00:30,356 --> 00:00:34,707
plus 1 and column J. And finally the one over here has row I plus 1, column J

8
00:00:34,707 --> 00:00:42,560
plus 1. I add those four, divide by 4, and that's my average. And I need to

9
00:00:42,560 --> 00:00:47,984
stick it back into. Each of those four pixels. I already have the coordinates,

10
00:00:47,984 --> 00:00:52,080
so I can just copy them. I'm almost done, but I still have to put in the bounds

11
00:00:52,080 --> 00:00:56,967
here. When we talked about the gas prices, we were told, what the general rule

12
00:00:56,967 --> 00:01:02,487
is, so let's just do that. The length of a two dimensional array, is the number

13
00:01:02,487 --> 00:01:07,638
of rows, and the length of a row is the number of columns. Let's see what it

14
00:01:07,638 --> 00:01:12,370
looks like when we run it. Here was the original picture. Here are the process

15
00:01:12,370 --> 00:01:16,048
gray levels. Now, you won't be able to see this on the video, but if you run

16
00:01:16,048 --> 00:01:19,324
this at home, if you carefully look at this arc for example, you will see that

17
00:01:19,324 --> 00:01:25,080
it is more pixelated. Now, the point of all this was, to work with neighbors.

18
00:01:25,080 --> 00:01:30,090
To figure out if you have a pixel position, what other neighboring positions.

19
00:01:30,090 --> 00:01:33,930
That many, many image manipulation algorithms where you have to do just that.

20
00:01:33,930 --> 00:01:39,240
For example, to blur a photo, to sharpen it or to process it in other ways. Now

21
00:01:39,240 --> 00:01:43,190
you will work with Sarah with an entirely different problem. She will show you

22
00:01:43,190 --> 00:01:46,970
how to use two dimensional arrays for a grade book with a kind instructor who

23
00:01:46,970 --> 00:01:50,750
wants to know which students are doing very well and also which exams are too

24
00:01:50,750 --> 00:01:53,213
hard.
