1
00:00:00,180 --> 00:00:02,690
Note, to make matters slightly more confusing,

2
00:00:02,690 --> 00:00:06,800
JavaScript allows you to assign to variables you've never even declared before.

3
00:00:06,800 --> 00:00:11,370
In this example I took the var statement off of this assignment operation.

4
00:00:11,370 --> 00:00:14,710
So foil has not been declared anywhere in our whole program.

5
00:00:14,710 --> 00:00:18,060
When you do this kind of assignment, variables that you're assigning to for

6
00:00:18,060 --> 00:00:21,910
the first time will be added automatically to the global scope, and

7
00:00:21,910 --> 00:00:24,930
not to whatever scope you did the assignment in.

8
00:00:24,930 --> 00:00:29,580
This is actually a pretty bad practice because leaving the var keyword off

9
00:00:29,580 --> 00:00:32,689
is more often done by accident than on purpose.

10
00:00:32,689 --> 00:00:35,770
Even if you do purposefully decide that you want to do this,

11
00:00:35,770 --> 00:00:38,350
it'll be very confusing for other people reading your code and

12
00:00:38,350 --> 00:00:40,950
they'll probably assume you just made a mistake.

13
00:00:40,950 --> 00:00:43,970
Also note, that unlike a lot of other languages,

14
00:00:43,970 --> 00:00:47,850
not all curly braces in Java Script are relevant for scoping.

15
00:00:47,850 --> 00:00:51,600
Blocks on if statements or while statements and

16
00:00:51,600 --> 00:00:55,650
other looping constructs like that, do not create new scopes.

17
00:00:55,650 --> 00:01:00,040
Only the curly braces that you find on a function statement creates a scope.

18
00:01:00,040 --> 00:01:02,650
Scoping limitations are actually very useful.

19
00:01:02,650 --> 00:01:05,870
They allow us to think about less of our program all at once.

20
00:01:05,870 --> 00:01:09,510
So we don't want to subvert them by leaving off var declarations.

21
00:01:09,510 --> 00:01:12,480
So for now, just remember to declare every variable with a var

22
00:01:12,480 --> 00:01:15,420
keyword in whichever lexical scope you want that variable to live.
