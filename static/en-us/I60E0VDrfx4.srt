1
00:00:00,250 --> 00:00:05,710
And the way to sort of think about this
role is sort of more based on a function

2
00:00:05,710 --> 00:00:10,210
or job, which is closer to what kind
of resources you need for that.

3
00:00:10,210 --> 00:00:13,840
If you're a payroll manager you need
access to payroll files, for example.

4
00:00:13,840 --> 00:00:14,990
That's what you're talking about.

5
00:00:14,990 --> 00:00:18,420
So roles are sort of characterized
more by function and

6
00:00:18,420 --> 00:00:20,790
the resources that go
along with that function.

7
00:00:20,790 --> 00:00:25,880
Groups, on the other hand,
are basically what set of users or

8
00:00:25,880 --> 00:00:30,430
what UIDs or what subjects have
some sort of similarity so

9
00:00:30,430 --> 00:00:31,740
they can be grouped together.

10
00:00:31,740 --> 00:00:35,630
Okay, so
roles are sort of more resource-related

11
00:00:35,630 --> 00:00:38,990
versus groups are more subject or
user-related.

12
00:00:38,990 --> 00:00:42,340
So that's sort of the way
to think about the two.

13
00:00:42,340 --> 00:00:45,880
And then the question is
can we get the benefits.

14
00:00:45,880 --> 00:00:49,450
So depending on how you
actually implement groups,

15
00:00:49,450 --> 00:00:54,872
role activation could be like
activating a group for yourself.

16
00:00:54,872 --> 00:00:59,370
And deactivation is
leaving the group and

17
00:00:59,370 --> 00:01:01,380
having permissions
associated with the group.

18
00:01:01,380 --> 00:01:06,130
So only when you activate your members
in the group you able to access it.

19
00:01:06,130 --> 00:01:10,998
So in theory, the answer is that you
could actually do the kind of things you

20
00:01:10,998 --> 00:01:13,785
can do with roles with groups as well.

21
00:01:13,785 --> 00:01:14,935
But there's sort of this,

22
00:01:14,935 --> 00:01:20,625
basically the difference is in how
the two come about that we talked about.

23
00:01:20,625 --> 00:01:24,755
But the way, actually,
groups are typically implemented in

24
00:01:24,755 --> 00:01:29,590
Unix-based systems, actually they don't
work the way that I was talking about.

25
00:01:29,590 --> 00:01:33,110
You don't join a group and
then leave it and things like that.

26
00:01:33,110 --> 00:01:38,020
If you used how we implement groups and

27
00:01:38,020 --> 00:01:40,990
define access based on those groups,

28
00:01:40,990 --> 00:01:44,360
if you want to say I want to go and
basically use that to get RBAC,

29
00:01:44,360 --> 00:01:47,260
you're not going to be able to
get that in systems that we have.

30
00:01:47,260 --> 00:01:49,750
So there is a difference
between the two, and

31
00:01:49,750 --> 00:01:52,610
I said the difference
is somewhat subtle.

32
00:01:52,610 --> 00:01:56,251
Possible to sort of think,
subject-focused then centric,

33
00:01:56,251 --> 00:01:58,287
then you are sort of in the groups.

34
00:01:58,287 --> 00:02:00,962
Or object or resource-centric,

35
00:02:00,962 --> 00:02:04,844
then you are with roles
based on the job function.

36
00:02:04,844 --> 00:02:07,392
But if we look at how we
implement groups, and

37
00:02:07,392 --> 00:02:10,811
what kind of functionality that
you want to have with roles,

38
00:02:10,811 --> 00:02:13,914
I would go with the false
answer here to this question.
