1
00:00:00,230 --> 00:00:03,476
Let's step back for a moment to talk
about the Android system architecture.

2
00:00:03,476 --> 00:00:06,934
The Android framework offers lots of
useful classes to help you interact with

3
00:00:06,934 --> 00:00:07,527
the system.

4
00:00:07,527 --> 00:00:11,713
Think the activity of lifecycle or
device permissions, for example.

5
00:00:11,713 --> 00:00:15,020
Or to help you access some type of
device functionality, like the camera or

6
00:00:15,020 --> 00:00:16,810
the radios, like Wi-Fi or Bluetooth.

7
00:00:16,810 --> 00:00:19,507
Sometimes, sensors like the gyroscope.

8
00:00:19,507 --> 00:00:23,056
The path to accessing device hardware
from the framework comes together via

9
00:00:23,056 --> 00:00:24,725
a series of layered abstractions.

10
00:00:24,725 --> 00:00:26,400
What do I mean by that?

11
00:00:26,400 --> 00:00:30,630
Each layer focuses on solving a bit of
the problem while the underlying layers

12
00:00:30,630 --> 00:00:34,370
focus on solving subsequently
smaller problems until eventually,

13
00:00:34,370 --> 00:00:37,230
with all the layers combined,
the desired functionality is achieved.

14
00:00:38,320 --> 00:00:41,274
Now we won't go into heavy details
about what each layer does, but

15
00:00:41,274 --> 00:00:44,148
we'll help you focus on the layers
you should be familiar with.

16
00:00:44,148 --> 00:00:45,375
Lets take a look.

17
00:00:45,375 --> 00:00:48,511
You can think of a functioning
Android device as being made up of

18
00:00:48,511 --> 00:00:50,085
different layers.

19
00:00:50,085 --> 00:00:53,535
Now we've simplified this a tad
to focus on the essentials, but

20
00:00:53,535 --> 00:00:55,685
feel free to check out
the link in the nodes for

21
00:00:55,685 --> 00:00:58,585
an exhausted diagram on
the Android Open Source Project site.

22
00:00:59,835 --> 00:01:03,420
The very top layer is
the application layer where

23
00:01:03,420 --> 00:01:07,050
all the applications that
developers like you and I build.

24
00:01:07,050 --> 00:01:08,270
Within our app,

25
00:01:08,270 --> 00:01:13,440
we make use of the Android framework
classes like text view and activity.

26
00:01:13,440 --> 00:01:16,330
And when we use these classes,
we can do some complex or

27
00:01:16,330 --> 00:01:19,700
powerful things with
only a few lines of code.

28
00:01:19,700 --> 00:01:22,910
In this case, we're displaying some
text or opening a new screen, for

29
00:01:22,910 --> 00:01:24,980
example, but there's so much more.

30
00:01:26,030 --> 00:01:27,910
So, how is this possible?

31
00:01:27,910 --> 00:01:31,516
Well, the framework classes
are obstructing away unnecessary

32
00:01:31,516 --> 00:01:35,188
complexity from us by calling into
the lower levels of Android and

33
00:01:35,188 --> 00:01:37,471
relying on them to do the heavy lifting.

34
00:01:37,471 --> 00:01:41,646
That is the tough and intricate job
of controlling a devices hardware.

35
00:01:41,646 --> 00:01:47,310
Until eventually, it all works and this
is what we mean by layer obstructions.

36
00:01:47,310 --> 00:01:49,649
The core operating system or an OS for

37
00:01:49,649 --> 00:01:54,024
short has its own sophisticated code
to regulate how application and

38
00:01:54,024 --> 00:01:58,942
system processes both access the limited
resources of the device hardware.

39
00:01:58,942 --> 00:02:03,502
Now, applications running simultaneously
must share the resources of the device

40
00:02:03,502 --> 00:02:07,685
in order to preserve the system's
overall usability and responsiveness.

41
00:02:07,685 --> 00:02:11,654
The lowest layer is the actual
physical device hardware.

42
00:02:11,654 --> 00:02:15,530
That is the silicone that makes up for
example the wireless radios,

43
00:02:15,530 --> 00:02:17,847
like cellular, Wi-Fi and Bluetooth.

44
00:02:17,847 --> 00:02:22,668
The chips that control the screen and
then there's the CPU, the memory,

45
00:02:22,668 --> 00:02:25,350
the GPU and much, much more.

46
00:02:25,350 --> 00:02:28,288
These are the physical electronic
components that are packed in to

47
00:02:28,288 --> 00:02:28,924
your device.

48
00:02:28,924 --> 00:02:31,152
If you're going to
take away a one thing,

49
00:02:31,152 --> 00:02:35,001
know that the beauty of these layers
is that they exist to simplify or

50
00:02:35,001 --> 00:02:38,463
distract away the system's
complexity from US developer.

51
00:02:38,463 --> 00:02:41,919
Allowing you to focus on making grade
apps that can leverage as much of

52
00:02:41,919 --> 00:02:44,630
the device's hardware as possible.

53
00:02:44,630 --> 00:02:49,228
So you can think of the framework,
as these clue between our app and

54
00:02:49,228 --> 00:02:50,143
the device.

55
00:02:50,143 --> 00:02:53,810
The framework classes allow us to
articulate how the device should behave

56
00:02:53,810 --> 00:02:55,062
when a user is in our app.

57
00:02:55,062 --> 00:02:58,879
Now, the framework compose of all
these Java classes that we see on

58
00:02:58,879 --> 00:03:02,496
developer.android.com, as well
as some libraries written

59
00:03:02,496 --> 00:03:06,340
in a programming language called C and
its relatives.

60
00:03:06,340 --> 00:03:09,110
Lets talk about a few examples of
how we've already relied on these

61
00:03:09,110 --> 00:03:11,650
different layers without
even realizing it.

62
00:03:11,650 --> 00:03:15,390
In our app code,
we've been calling the framework APIs.

63
00:03:15,390 --> 00:03:20,168
So for example, when we were building
the Me Walk app, we were using the media

64
00:03:20,168 --> 00:03:24,225
framework classes to play audio
from the speakers of the device.

65
00:03:24,225 --> 00:03:28,446
In the current lesson, we're using
the HTTP URL connection class to

66
00:03:28,446 --> 00:03:33,103
make network requests, which uses the
radio on the device to send packets of

67
00:03:33,103 --> 00:03:35,307
information across the internet.

68
00:03:35,307 --> 00:03:38,988
Now, we don't need to deal with
the Android Operating System directly.

69
00:03:38,988 --> 00:03:42,609
Now, the framework classes are Java
classes that obstruct the implementation

70
00:03:42,609 --> 00:03:45,430
details over what's happening
underneath in the hardware.

71
00:03:45,430 --> 00:03:48,599
Now, the immediate player
in HTTP URL connection or

72
00:03:48,599 --> 00:03:53,136
two examples of classes that use the
physical functionality of our Android

73
00:03:53,136 --> 00:03:56,102
device by interacting
with framework classes.

74
00:03:56,102 --> 00:03:58,160
There are many more examples
that you'll come across,

75
00:03:58,160 --> 00:04:00,315
as you continue to learn more
about Android development.
