1
00:00:00,230 --> 00:00:04,740
The question is,
what do we do in situations like this

2
00:00:04,740 --> 00:00:08,050
where we don't have data
between two separate dates?

3
00:00:08,050 --> 00:00:12,060
Now, you might think,
Gee, let's interpolate.

4
00:00:12,060 --> 00:00:17,360
And so we would estimate what a line
is between those two dates and

5
00:00:17,360 --> 00:00:22,160
then fill in at each point
an interpolated value.

6
00:00:22,160 --> 00:00:23,700
Why not do that?

7
00:00:23,700 --> 00:00:26,040
Well, the truth of the matter is,

8
00:00:26,040 --> 00:00:28,930
between these two dates,
there was no trading.

9
00:00:28,930 --> 00:00:31,600
There really was no price for that data.

10
00:00:31,600 --> 00:00:36,760
But if we're going to do something like,
for instance, compute a rolling average.

11
00:00:36,760 --> 00:00:39,110
Or a mean over that data,

12
00:00:39,110 --> 00:00:43,540
and there's nans there,
that'll wipe out our entire calculation.

13
00:00:43,540 --> 00:00:48,820
So we can't leave it empty, but
we shouldn't interpolate it either.

14
00:00:48,820 --> 00:00:51,600
So here's what we might do.

15
00:00:51,600 --> 00:00:54,840
One thing that we can do,
is we fill forward,

16
00:00:54,840 --> 00:00:58,360
going from, we go over all the data,
and when there's some missing data,

17
00:00:58,360 --> 00:01:02,050
we fill forward from the last,
previous known value.

18
00:01:02,050 --> 00:01:04,629
So for instance,
if we were to do that here,

19
00:01:04,629 --> 00:01:09,490
we would get these values up until
that date, where it takes over there.

20
00:01:09,490 --> 00:01:14,390
We would fill forward here,
and fill forward here.

21
00:01:14,390 --> 00:01:18,810
Now notice there's a big gap between
there, and there's a big gap here, but

22
00:01:18,810 --> 00:01:23,150
that realistically reflects what
was going on with the data.

23
00:01:23,150 --> 00:01:29,500
Now the reason we do this instead of
the interpolation is the following.

24
00:01:29,500 --> 00:01:33,890
Let's suppose we were looking for
patterns in the data and

25
00:01:33,890 --> 00:01:38,730
we had rolled back time and
we were simulating history.

26
00:01:38,730 --> 00:01:42,620
And let's suppose for
a moment we had this interpolation.

27
00:01:42,620 --> 00:01:46,130
And let's suppose we're
right here in time and

28
00:01:46,130 --> 00:01:48,700
we're trying to figure out
what's going to happen next.

29
00:01:48,700 --> 00:01:51,000
We're looking for patterns and so on.

30
00:01:51,000 --> 00:01:55,380
We're actually giving ourselves
information about the future.

31
00:01:55,380 --> 00:01:57,820
We're observing that
the price is going up.

32
00:01:57,820 --> 00:02:00,350
So if we were to make
a calculation here,

33
00:02:00,350 --> 00:02:03,240
we would actually be
peeking into the future.

34
00:02:03,240 --> 00:02:05,410
And that is not allowed.

35
00:02:05,410 --> 00:02:07,210
We do not want to do that.

36
00:02:07,210 --> 00:02:11,540
So we need to stick with only
filling forward a last known price.

37
00:02:11,540 --> 00:02:14,020
If we do that then we're not
picking into the future.

38
00:02:15,020 --> 00:02:19,160
So let's get rid of that ugly,
nasty picking into the future.

39
00:02:19,160 --> 00:02:22,550
Okay, so now we've actually
filled in all our gaps and

40
00:02:22,550 --> 00:02:27,410
we have continuous data from this
start point all the way to the end.

41
00:02:27,410 --> 00:02:32,130
However, there still is missing
data here at the beginning.

42
00:02:32,130 --> 00:02:39,540
And because we need some value here in
order to calculate rolling averages or

43
00:02:39,540 --> 00:02:43,940
whatever sort of statistics we want to
do, it's better to have some value here.

44
00:02:43,940 --> 00:02:46,180
Instead of not a number.

45
00:02:46,180 --> 00:02:49,990
And in this case, we fill backwards.

46
00:02:51,390 --> 00:02:56,310
So remember, if you are going to fill
your data to resolve problems with gaps,

47
00:02:56,310 --> 00:03:00,790
fill forward first and
fill backward second.

48
00:03:00,790 --> 00:03:04,290
That way you will avoid,
to the max extent possible,

49
00:03:04,290 --> 00:03:06,030
picking into the future.

50
00:03:06,030 --> 00:03:07,800
Now we'll hand it over to Dave.

51
00:03:07,800 --> 00:03:11,210
And she's going to show you
how to do this in code.

52
00:03:11,210 --> 00:03:11,960
Here's to you, Dave!
