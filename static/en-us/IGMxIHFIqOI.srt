1
00:00:00,078 --> 00:00:02,966
Let's our first bit of
interactivity to this demo.

2
00:00:02,966 --> 00:00:06,210
LibGDX provides a very simple
way to check if a key is

3
00:00:06,210 --> 00:00:09,156
pressed using Gdx.input.isKeyPressed and

4
00:00:09,156 --> 00:00:12,717
passing in a constant from
the keys class like Keys.Z.

5
00:00:12,717 --> 00:00:14,287
If we do this check every frame,

6
00:00:14,287 --> 00:00:17,271
then we can make some change to
the world based on this input.

7
00:00:17,271 --> 00:00:20,101
In this demo the ball
radius is determined by

8
00:00:20,101 --> 00:00:23,546
multiplying a radiusMultiplier
by a BASE_RADIUS.

9
00:00:23,546 --> 00:00:25,396
So we can see, if z is pressed,

10
00:00:25,396 --> 00:00:29,113
we grow the radiusMultiplier
by the RADIUS_GROWTH_RATE.

11
00:00:29,113 --> 00:00:29,998
If x is pressed,

12
00:00:29,998 --> 00:00:33,684
then the radiusMultiplier is
shrunk by the RADIUS_GROWTH_RATE.

13
00:00:33,684 --> 00:00:38,101
Also, we check that the radiusMultiplier
doesn't go below some minimum value.

14
00:00:38,101 --> 00:00:42,250
That way, we don't end up with
invisible balls of negative radius.

15
00:00:42,250 --> 00:00:43,875
Let's give this a try.

16
00:00:43,875 --> 00:00:45,780
So, here's our demo again.

17
00:00:45,780 --> 00:00:50,656
And now, if we hold z, the ball
grows bigger and bigger and bigger.

18
00:00:50,656 --> 00:00:53,938
And if we hold x,
the ball shrinks and shrinks and

19
00:00:53,938 --> 00:00:56,270
shrinks until it's just a point.
