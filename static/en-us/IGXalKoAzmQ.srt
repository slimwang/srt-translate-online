1
00:00:00,000 --> 00:00:02,000
So here I've written the utility function.

2
00:00:02,000 --> 00:00:06,000
I called this utility function "The Winning Differential."

3
00:00:06,000 --> 00:00:08,000
And given a state,

4
00:00:08,000 --> 00:00:11,000
it tells me what that differential is--

5
00:00:11,000 --> 00:00:13,000
expected differential for that state.

6
00:00:13,000 --> 00:00:16,000
And what it says is if we're at the end of the game,

7
00:00:16,000 --> 00:00:18,000
if somebody's won,

8
00:00:18,000 --> 00:00:22,000
then before, remember that our utility function was 0 or 1,

9
00:00:22,000 --> 00:00:25,000
but here utility function is my score--

10
00:00:25,000 --> 00:00:27,000
which is me, and I'm going to reap the pending--

11
00:00:27,000 --> 00:00:29,000
minus your score.

12
00:00:29,000 --> 00:00:32,000
Otherwise, we just do the same thing with a Q function

13
00:00:32,000 --> 00:00:34,000
that we did before.

14
00:00:34,000 --> 00:00:37,000
And note that we're always careful to memoize these functions,

15
00:00:37,000 --> 00:00:40,000
because they're recursive, they're recalling themselves over and over again.

16
00:00:40,000 --> 00:00:42,000
We don't want to repeat those computations,

17
00:00:42,000 --> 00:00:46,000
so we memoize them so we only have to each date computation once.

18
00:00:46,000 --> 00:00:49,000
Now, what I want you to do is write the strategy function.

19
00:00:49,000 --> 00:00:53,000
This was the utility function over states, now I want you to write the strategy function.

20
00:00:53,000 --> 99:59:59,999
You can do it in terms of what we've defined before
