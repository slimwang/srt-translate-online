1
00:00:00,200 --> 00:00:04,309
Let's quickly talk about what the toy
shop manager should want to evaluate.

2
00:00:04,309 --> 00:00:06,420
It should be something like this.

3
00:00:06,420 --> 00:00:12,680
Given that the most complex case of
toy orders includes trains, then we

4
00:00:12,680 --> 00:00:18,170
should have in each of the trials a set
of orders that are really for trains.

5
00:00:18,170 --> 00:00:21,796
Second, the toy shop has
three working areas.

6
00:00:21,796 --> 00:00:26,548
We can perform any kind of toy order
in each of the working area and

7
00:00:26,548 --> 00:00:29,286
multiple workers can share an area.

8
00:00:29,286 --> 00:00:34,782
So, as we're trying to see how many
more workers can we add in the system,

9
00:00:34,782 --> 00:00:37,354
how many more toys can we process,

10
00:00:37,354 --> 00:00:43,320
we really should be trying to get as
many more workers per working area.

11
00:00:43,320 --> 00:00:47,515
Now, if we take a look at
configuration one, configuration one

12
00:00:47,515 --> 00:00:52,503
has correctly in each trial order of
trains, the sequence of train orders.

13
00:00:52,503 --> 00:00:55,428
That corresponds to our
worst case scenario.

14
00:00:55,428 --> 00:00:58,742
However, the way the workers
are varied in the first case,

15
00:00:58,742 --> 00:01:03,340
there are a total of three workers,
so there is one in each working area.

16
00:01:03,340 --> 00:01:06,020
In the second case,
there are a total of four workers, so

17
00:01:06,020 --> 00:01:09,280
the first working area
has one extra worker.

18
00:01:09,280 --> 00:01:14,270
So the number of resources in that case,
is larger for the first working area,

19
00:01:14,270 --> 00:01:16,130
and then lower for the next two.

20
00:01:16,130 --> 00:01:21,096
Similarly, in the third trial We have
in two working areas, two workers and

21
00:01:21,096 --> 00:01:22,733
in the last one just one.

22
00:01:22,733 --> 00:01:25,027
It's really hard to
draw any conclusions.

23
00:01:25,027 --> 00:01:28,839
The amount of resources that's
available in each of these for

24
00:01:28,839 --> 00:01:31,624
handling the toys is not equal,
therefore,

25
00:01:31,624 --> 00:01:37,310
it doesn't really tell us anything about
the worst case capacity of the system.

26
00:01:37,310 --> 00:01:40,793
If we take a look at
the second configuration here,

27
00:01:40,793 --> 00:01:43,877
we have the first trial
is an order of blocks.

28
00:01:43,877 --> 00:01:46,113
The second trial is an order of bears.

29
00:01:46,113 --> 00:01:49,250
The third trial is an order of trains.

30
00:01:49,250 --> 00:01:53,347
Again, it doesn't tell us anything about
the worst case capacity of the system.

31
00:01:53,347 --> 00:01:54,951
This could tell us something, but

32
00:01:54,951 --> 00:01:58,390
it really is not the question
that the manager is asking.

33
00:01:58,390 --> 00:02:02,621
The third configuration similarly,
it could provide some information.

34
00:02:02,621 --> 00:02:07,280
In every single one of these,
the workload is mixed.

35
00:02:07,280 --> 00:02:11,709
So this could correspond to the average
number of toys that can be processed

36
00:02:11,709 --> 00:02:13,831
with different number of workers.

37
00:02:13,831 --> 00:02:18,039
So how is the average throughput
impacted by adding more

38
00:02:18,039 --> 00:02:19,747
workers in the store?

39
00:02:19,747 --> 00:02:24,187
Again, however, this doesn't
address the question of how is

40
00:02:24,187 --> 00:02:29,420
the worst case impacted by adding
more workers to the store?

41
00:02:29,420 --> 00:02:33,531
So that basically gives us the answer
to the final configuration.

42
00:02:33,531 --> 00:02:38,474
The last configuration is identical
to configuration 3 in the number of

43
00:02:38,474 --> 00:02:43,912
workers, but it uses the worst case
scenario, so it's just orders of trains.

44
00:02:43,912 --> 00:02:49,001
So this tells us how much better will
I be able to handle the worst case,

45
00:02:49,001 --> 00:02:53,488
of just receiving trains,
if I add more and more workers, and

46
00:02:53,488 --> 00:02:58,093
then really adding an even amount
of workers per working area.

47
00:02:58,093 --> 00:03:03,160
This is a meaningful set of experiments
that will let me draw some conclusions.

48
00:03:03,160 --> 00:03:07,136
It will also likely ultimately
demonstrate what is the capacity of

49
00:03:07,136 --> 00:03:08,983
the individual working area.

50
00:03:08,983 --> 00:03:13,847
So, let's say, if I tried maybe to
add another trial where I'm running

51
00:03:13,847 --> 00:03:19,140
train orders with 12 workers, so
four workers per working area.

52
00:03:19,140 --> 00:03:23,641
Likely, I will, at some, point no longer
start seeing any kind of improvement,

53
00:03:23,641 --> 00:03:27,313
simply because I cannot squeeze
in more workers per working area.

54
00:03:27,313 --> 00:03:30,690
So performing this type of
experiment will actually be useful.
