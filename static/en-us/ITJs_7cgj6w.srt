1
00:00:00,000 --> 00:00:03,543
Before we start coding
our content provider,

2
00:00:03,693 --> 00:00:06,336
let's make sure the manifest
is set up correctly.

3
00:00:06,716 --> 00:00:09,450
You need to update
the androidmanifest.xml file

4
00:00:09,450 --> 00:00:12,010
within the application tag
to add the content provider

5
00:00:12,010 --> 00:00:14,960
so that Android's content resolver
can see it.

6
00:00:15,610 --> 00:00:18,340
The authority really should match
your package name.

7
00:00:18,670 --> 00:00:20,660
While the name indicates which file

8
00:00:20,660 --> 00:00:22,850
your content provider class is in.

9
00:00:23,280 --> 00:00:25,180
Next, let's code up onCreate.

10
00:00:25,730 --> 00:00:27,850
We'll begin by
creating an instance variable

11
00:00:27,850 --> 00:00:29,513
for our database helper.

12
00:00:30,123 --> 00:00:33,406
In onCreate, we
initialize our instance variable.

13
00:00:33,406 --> 00:00:36,210
We return true,
which is how we tell Android

14
00:00:36,210 --> 00:00:39,340
that the content provider
has been created successfully.

15
00:00:39,340 --> 00:00:42,060
It turns out that we
can repurpose the same test

16
00:00:42,060 --> 00:00:44,860
we did for the database
to test our new content provider.

17
00:00:44,860 --> 00:00:47,920
This will allow you
to both test your content provider code

18
00:00:47,920 --> 00:00:52,210
and see how the content provider calls
replace the SQLIte database calls.

19
00:00:52,510 --> 00:00:54,560
Let's start by using Android Studio

20
00:00:54,560 --> 00:00:57,730
to copy TestDB to test provider.

21
00:01:01,690 --> 00:01:06,050
Let's rename test create DB,
to test delete DB.

22
00:01:08,330 --> 00:01:10,266
So we can start with a clean slate.

23
00:01:10,266 --> 00:01:13,717
We'll just leave the
nContext.deleteDatatbase line in there.

24
00:01:14,998 --> 00:01:17,000
We'll leave the other test the same,

25
00:01:17,000 --> 00:01:18,810
we'll get to it soon.
