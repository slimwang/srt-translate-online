1
00:00:00,000 --> 00:00:02,000
And that is why you could think of hardness,

2
00:00:02,000 --> 00:00:06,000
meaning how hard is a specific input to solve as a combination of 2 things.

3
00:00:06,000 --> 00:00:09,000
One is, I think, the size of the input,

4
00:00:09,000 --> 00:00:11,000
and we always measure this as a number N.

5
00:00:11,000 --> 00:00:14,000
But the other thing is the structure of the input.

6
00:00:14,000 --> 00:00:17,000
In a way, it's not larger instances are harder to solve,

7
00:00:17,000 --> 00:00:21,000
but in a way you could say, harder instances are harder to solve.

8
00:00:21,000 --> 00:00:24,000
This of course might seem like a bit nitpicking around,

9
00:00:24,000 --> 00:00:27,000
so the question is, is this actually useful, and the answer is yes.

10
00:00:27,000 --> 00:00:33,000
For some problems, you can actually express the structure of the input,

11
00:00:33,000 --> 00:00:36,000
and I'm soon going to show you how to do that, as a number K.

12
00:00:36,000 --> 00:00:39,000
And while in classical NP-completeness,

13
00:00:39,000 --> 00:00:43,000
so to say, you would measure hardness as some function of N.

14
00:00:43,000 --> 00:00:47,000
You can then measure hardness as a function of 2 parameters.

15
00:00:47,000 --> 00:00:49,000
One parameter is still the size of the input,

16
00:00:49,000 --> 00:00:52,000
and the other parameter is going to specify

17
00:00:52,000 --> 00:00:54,000
something about the structure of the input.

18
00:00:54,000 --> 00:00:56,000
Now this might sound a bit abstract,

19
00:00:56,000 --> 00:00:58,000
so what could this parameter be?

20
00:00:58,000 --> 00:01:00,000
And I'm going to show you 2 possibilities for this parameter,

21
00:01:00,000 --> 00:01:02,000
and we're going to discuss them in detail.

22
00:01:02,000 --> 00:01:04,000
One is size of the solution,

23
00:01:04,000 --> 00:01:08,000
and the other one is something I would call distance from triviality.

24
00:01:08,000 --> 00:01:10,000
So for example, for the network from the last quiz,

25
00:01:10,000 --> 00:01:14,000
you could actually see that both parameters could tell us

26
00:01:14,000 --> 00:01:16,000
that finding a solution here is easy,

27
00:01:16,000 --> 00:01:20,000
because first of all, the solution here and optimum vertex cover is very small,

28
00:01:20,000 --> 00:01:22,000
you only require 1 vertex.

29
00:01:22,000 --> 00:01:25,000
And also, you could argue that this graph here is very trivial

30
00:01:25,000 --> 00:01:27,000
because all you need is a pre-processing rule

31
00:01:27,000 --> 00:01:29,000
to actually find the best possible solution.

32
00:01:29,000 --> 00:01:31,000
But again, we'll get into more detail.

33
00:01:31,000 --> 99:59:59,999
Let's start out with the size of the solution.
