1
00:00:00,000 --> 00:00:04,000
Now let's talk about how to implement any of these, see if there's any difficulties,

2
00:00:04,000 --> 00:00:07,000
an areas that we think might be hard to implement.

3
00:00:07,000 --> 00:00:13,000
The board can be some kind of two-dimensional array, maybe a list of lists is one possibility.

4
00:00:13,000 --> 00:00:18,000
One thing I'm not quite clear on now is do I need one board or two?

5
00:00:18,000 --> 00:00:23,000
It's clear I need one board to hold all the letters, but then there's also the bonus squares.

6
00:00:23,000 --> 00:00:27,000
Should that be part of the same board or should that be a separate board

7
00:00:27,000 --> 00:00:32,000
and the letters are layered on top of this background of bonus squares?

8
00:00:32,000 --> 00:00:35,000
I'm not quite sure yet, but I'm not too worried about it,

9
00:00:35,000 --> 00:00:37,000
because I can make either approach work.

10
00:00:37,000 --> 00:00:41,000
A letter can be one character string.

11
00:00:41,000 --> 00:00:43,000
A word can be a string.

12
00:00:43,000 --> 00:00:48,000
A hand can also be a string. It could also be a list of letters. Either one would be fine.

13
00:00:48,000 --> 00:00:51,000
Any collection of letters would be okay.

14
00:00:51,000 --> 00:00:55,000
Note that a set would not work for the hand.

15
00:00:55,000 --> 00:00:58,000
The hand can't be a set of letters, because we might have duplicates,

16
00:00:58,000 --> 00:01:00,000
and sets don't allow duplicates.

17
00:01:00,000 --> 00:01:06,000
Now, for the notion of a legal play, we'll have some function that generates legal plays,

18
00:01:06,000 --> 00:01:12,000
given a board position and a hand, and then the plays themselves will need some representation.

19
00:01:12,000 --> 00:01:17,000
Maybe they can be something like a tuple of say starting position--

20
00:01:17,000 --> 00:01:22,000
for example, "RITZY" starts in this location, the direction in which they're going--

21
00:01:22,000 --> 00:01:27,000
are they going across or down, the two allow about directions--and the word itself.

22
00:01:27,000 --> 00:01:32,000
In this case, RITZY. That seems like a good representation for a legal play.

23
00:01:32,000 --> 00:01:36,000
I'm not quite sure yet what the representation of a position or a direction should be,

24
00:01:36,000 --> 00:01:38,000
but that's easy enough.

25
00:01:38,000 --> 00:01:41,000
A score--we'll have some function to compute the score.

26
00:01:41,000 --> 00:01:47,000
For letters, we can have a dictionary that says the value of Z is 10.

27
00:01:47,000 --> 00:01:51,000
For plays we'll need some function to compute that.

28
00:01:51,000 --> 00:01:55,000
For the bonus squares, we'll need some mapping from a position on the board

29
00:01:55,000 --> 00:02:00,000
to double word or triple letter or whatever.

30
00:02:00,000 --> 00:02:03,000
A dictionary is a set of words.

31
00:02:03,000 --> 00:02:08,000
The blank letter--well, we said letters were strings, so that's probably okay.

32
00:02:08,000 --> 00:02:14,000
We could use the string space or the string underscore, to represent the blank.

33
00:02:14,000 --> 00:02:17,000
Then it's dealing with it that will be an issue later on.

34
00:02:17,000 --> 00:02:21,000
Now, I'm a little bit worried about blanks, because in poker Jokers were easy.

35
00:02:21,000 --> 00:02:25,000
We just said, replace them by any card and just deal with all the possibilities.

36
00:02:25,000 --> 00:02:28,000
Our routines are fast enough that we could probably deal with them all.

37
00:02:28,000 --> 00:02:33,000
Here I'm pretty confident we can make it fast enough that that approach will work,

38
00:02:33,000 --> 00:02:38,000
but it doesn't quite work because not only do we have to try all possibilities for the letter,

39
00:02:38,000 --> 00:02:41,000
but the scoring rules are actually different.

40
00:02:41,000 --> 00:02:47,000
When you use a blank instead of a letter, you don't get the letter scores for that blank.

41
00:02:47,000 --> 00:02:52,000
We'll have to have scoring know about blanks and not just know about filling things in.

42
00:02:52,000 --> 00:02:54,000
That'll be a complication.

43
00:02:54,000 --> 00:02:56,000
But overall I went through all the concepts.

44
00:02:56,000 --> 00:02:58,000
I've got an implementation for both.

45
00:02:58,000 --> 00:03:01,000
Some of them are functions that I don't quite know how to do,

46
00:03:01,000 --> 00:03:04,000
but I don't see anything that looks like a show stopper.

47
00:03:04,000 --> 00:03:06,000
I think I can go ahead.

48
00:03:06,000 --> 00:03:10,000
The difficulty then is not that I have to invent something new

49
00:03:10,000 --> 00:03:12,000
in order to solve one of the problems.

50
00:03:12,000 --> 00:03:14,000
The difficulty is just that there's so much.

51
00:03:14,000 --> 00:03:20,000
When faced with a problem of this size or problems can be much larger,

52
00:03:20,000 --> 00:03:23,000
the notion of pacing is an important one.

53
00:03:23,000 --> 00:03:24,000
What do I mean by that?

54
00:03:24,000 --> 00:03:28,000
It means I want to attack this, and I know I'm not going to solve it all at once.

55
00:03:28,000 --> 00:03:33,000
I'm not just going to sit down for 20 minutes and knock out the whole problem.

56
00:03:33,000 --> 00:03:35,000
It's going to be a lot longer than that.

57
00:03:35,000 --> 00:03:39,000
I want to have pacing in that I have intermediate goals along the way

58
00:03:39,000 --> 00:03:43,000
where I can say, okay, now I'm going focus on one part of the problem,

59
00:03:43,000 --> 00:03:45,000
and I'm going to get that done.

60
00:03:45,000 --> 00:03:48,000
Then when I'm done with that part, then I can move on to the next part.

61
00:03:48,000 --> 00:03:50,000
If you don't have that pacing, you can lose your focus.

62
00:03:50,000 --> 00:03:53,000
You can get discouraged that there's so much left to do.

63
00:03:53,000 --> 00:03:57,000
But if you break it up into bite-sized pieces, then you can say, okay, I'm almost there.

64
00:03:57,000 --> 00:04:01,000
I just have to finish a little bit more, and now this piece will be done,

65
00:04:01,000 --> 00:04:03,000
and then I can move on to the next piece.

66
00:04:03,000 --> 00:04:07,000
The first piece I'm going to look at is finding words from a hand.

67
00:04:07,000 --> 00:04:11,000
In other words, I'm going ignore the whole board.

68
00:04:11,000 --> 00:04:16,000
I'm going to say pretend the board isn't there and pretend all we have is the hand,

69
00:04:16,000 --> 00:04:19,000
and we have the dictionary, a set of legal words.

70
00:04:19,000 --> 99:59:59,999
I want to know out of that hand, what words in the dictionary can I make?
