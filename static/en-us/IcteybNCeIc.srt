1
00:00:00,000 --> 00:00:03,789
What we find here is almost a little interpretation of the equations.

2
00:00:03,789 --> 00:00:08,709
However, it's important to notice we compute h new as a modification of h

3
00:00:08,709 --> 00:00:12,707
but only use h in the implementation of Heun's method up here.

4
00:00:12,707 --> 00:00:16,799
We might run into some difficulties if the numerical error becomes really, really tiny

5
00:00:16,799 --> 00:00:20,689
because then as you can see right here in the computation of h new, we're dividing by the error

6
00:00:20,689 --> 00:00:24,629
and that would basically make us end up dividing by zero.

7
00:00:24,629 --> 00:00:27,739
So one option to prevent this from happening would be to divide

8
00:00:27,739 --> 00:00:31,478
not just by the error but by the error plus some really small number.

9
00:00:31,478 --> 00:00:33,660
Another precautionary measure that we might want to take would be

10
00:00:33,660 --> 00:00:36,619
to limit the range of possible values of the step size.

11
00:00:36,619 --> 00:00:38,779
So if we do that, then here's what happens.

12
00:00:38,779 --> 00:00:45,489
If h is smaller than 0.1, then the maximum becomes 0.1 and eventually you'll end up with a value of 0.1.

13
00:00:45,489 --> 00:00:50,789
Now if time gets larger than 1800, then the minimum becomes 1800

14
00:00:50,789 --> 00:00:58,678
and the new step size becomes 1800 since it limits the range of h new to be between 0.1 and 1800.

15
00:00:58,678 --> 00:01:00,749
Now let's look at the output.

16
00:01:00,749 --> 00:01:03,738
So we can see that the program takes huge steps along its trajectory

17
00:01:03,738 --> 00:01:06,739
and keep in mind that these steps are not at regular time intervals

18
00:01:06,739 --> 00:01:10,788
because they represent the steps that we're taking with adaptive step size.

19
00:01:10,788 --> 00:01:14,619
So time interval down here is much smaller than the time interval up here.

20
00:01:14,619 --> 00:01:18,618
One last thing that we can notice here is that the very first step size is small

21
00:01:18,618 --> 00:01:23,619
because we initially set h to 100 seconds and then the method automatically chooses the larger one

22
00:01:23,619 --> 99:59:59,999
as you can see right here and then it keeps that larger one, although of course it does change.
