1
00:00:00,000 --> 00:00:01,002
Okay.
So now that we

2
00:00:01,002 --> 00:00:04,500
know that recipe is a class, let's
see what that looks like in the code.

3
00:00:04,500 --> 00:00:06,875
Let's start by saying
that it is a class.

4
00:00:06,875 --> 00:00:09,532
And since we want to store
it in the datastore,

5
00:00:09,532 --> 00:00:12,542
it's going to be a subclass
of the datastore model.

6
00:00:12,542 --> 00:00:14,775
That means that I'm going to
take a generic data model and

7
00:00:14,775 --> 00:00:18,042
define something specific called Recipe
to store in the App Engine datastore.

8
00:00:18,042 --> 00:00:19,583
Now let's take a look at the properties.

9
00:00:19,583 --> 00:00:22,715
Just as we saw for fields and
message classes, we're going to have

10
00:00:22,715 --> 00:00:25,917
to construct the properties, so
let's put some parens in here.

11
00:00:25,917 --> 00:00:29,208
Notice that unlike ProtoRPC fields,
we don't have to put a number here.

12
00:00:29,208 --> 00:00:33,172
But we do have to put for ingredients,
because there are multiple ingredients

13
00:00:33,172 --> 00:00:36,125
in a recipe is that we'll say
that it's a repeated field.

14
00:00:36,125 --> 00:00:40,042
Repeated field is basically like
an array of values of a particular type.

15
00:00:40,042 --> 00:00:42,833
Here, ingredients is going to
be like an array of strings.

16
00:00:42,833 --> 00:00:45,125
This is looking more and
more like real working Python.

17
00:00:45,125 --> 00:00:46,958
There's just a couple of things left.

18
00:00:46,958 --> 00:00:49,543
First off, where do all these
property classes come from?

19
00:00:49,543 --> 00:00:53,182
They're provided by
the App Engine datastore library,

20
00:00:53,182 --> 00:00:56,375
which is called
google.appengine.ext.ndb.

21
00:00:56,375 --> 00:00:58,937
And since all of these come from ndb,

22
00:00:58,937 --> 00:01:02,500
we're going to have to be ndb
dot on each one of these.

23
00:01:02,500 --> 00:01:03,459
And hey, that's it.

24
00:01:03,459 --> 00:01:06,673
What we have here in real Python isn't
very much different from the outline

25
00:01:06,673 --> 00:01:09,083
that we started with, but
now it's fully functional.

26
00:01:09,083 --> 00:01:11,500
So that's our intro to using
the datastore from Python.

27
00:01:11,500 --> 00:01:12,500
I think you've got it now.

28
00:01:12,500 --> 00:01:14,830
Let's go back to Magnus to learn
some more about properties.
