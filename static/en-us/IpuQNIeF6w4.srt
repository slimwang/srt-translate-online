1
00:00:00,150 --> 00:00:05,150
To explain what's happening, let's consider a sequence of different situations.

2
00:00:05,150 --> 00:00:09,720
The first case we'll look at, both the user-level signal mask and

3
00:00:09,720 --> 00:00:13,210
the kernel-level signal mask had the signal enabled.

4
00:00:13,210 --> 00:00:16,760
Let's say this is the user-level thread that's currently actually executing on

5
00:00:16,760 --> 00:00:18,850
top of this kernel-level thread.

6
00:00:18,850 --> 00:00:20,870
Now when the signal occurs, no problem.

7
00:00:20,870 --> 00:00:25,510
The kernel sees that the signal is enabled, so it will interrupt the currently

8
00:00:25,510 --> 00:00:29,936
running user-level thread that's running on top of this kernel-level thread.

9
00:00:29,936 --> 00:00:33,210
And there's absolutely no problem because that user-level thread

10
00:00:33,210 --> 00:00:37,010
had the signal enabled as well, so the processing will be safe.
