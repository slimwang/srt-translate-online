1
00:00:00,630 --> 00:00:03,200
First of all, data in Pandas is often contained

2
00:00:03,200 --> 00:00:05,770
in a structure called a dataframe. A dataframe is

3
00:00:05,770 --> 00:00:09,200
a two-dimensional labeled data structure with columns which can

4
00:00:09,200 --> 00:00:12,576
be different types if necessary. For example types like string,

5
00:00:12,576 --> 00:00:17,020
int, float, and Boolean. You can think of a

6
00:00:17,020 --> 00:00:19,960
dataframe as being similar to an Excel spreadsheet. We'll

7
00:00:19,960 --> 00:00:22,630
talk about making dataframes in a bit. For now,

8
00:00:22,630 --> 00:00:25,850
here's what an example dataframe might look like. Using data

9
00:00:25,850 --> 00:00:28,960
describing passengers on the Titanic, and whether or not

10
00:00:28,960 --> 00:00:32,350
they survived the Titanic's tragic collision with an iceberg.

11
00:00:32,350 --> 00:00:36,840
Note that there are numerous columns. Name, age, fare,

12
00:00:36,840 --> 00:00:40,862
and survived? These columns have different data-types. There are also

13
00:00:40,862 --> 00:00:43,942
some Not-a-Number entries which happen when we don't specify

14
00:00:43,942 --> 00:00:46,130
a value. There are a bunch of cool things

15
00:00:46,130 --> 00:00:48,850
we can do with this data frame. Let's jump

16
00:00:48,850 --> 00:00:50,990
to the command line. Say that I had already loaded

17
00:00:50,990 --> 00:00:54,860
this data into a data frame called DF. We can operate on specific

18
00:00:54,860 --> 00:00:58,520
columns by calling on them as if they were keys in a dictionary. For

19
00:00:58,520 --> 00:01:03,730
example, DFH and we can call on specific rows by calling a data frame objects

20
00:01:03,730 --> 00:01:08,681
loc method, and passing the row index as an argument, for example, df.loc('a').
