1
00:00:00,180 --> 00:00:03,340
Now, let's go back to
our cache optimizations,

2
00:00:03,340 --> 00:00:05,790
which are about reducing the AMAT.

3
00:00:05,790 --> 00:00:10,480
We have seen that AMAT can be
reduced by reducing the hit time.

4
00:00:10,480 --> 00:00:14,560
And we have seen several
techniques that do this.

5
00:00:14,560 --> 00:00:18,910
The AMAT can also be reduced
by reducing the miss rate.

6
00:00:18,910 --> 00:00:22,590
And we will now look at some
techniques that try to do that.

7
00:00:22,590 --> 00:00:25,640
So, in our work on
reducing the miss rate,

8
00:00:25,640 --> 00:00:29,350
we really need to consider
what are the causes of misses.

9
00:00:29,350 --> 00:00:31,120
So, what can cause misses.

10
00:00:31,120 --> 00:00:35,710
And the causes of misses
are what we call the 3Cs.

11
00:00:35,710 --> 00:00:40,579
You should remember this because very
often, we will refer to the 3Cs.

12
00:00:40,579 --> 00:00:45,284
And you need to know that
the 3Cs are compulsory misses,

13
00:00:45,284 --> 00:00:48,880
capacity misses and conflict misses.

14
00:00:48,880 --> 00:00:53,700
A compulsory miss is a miss that
occurs when a block is accessed for

15
00:00:53,700 --> 00:00:54,790
the first time.

16
00:00:54,790 --> 00:00:58,405
It's called compulsory because
you have to have this miss.

17
00:00:58,405 --> 00:01:03,115
So even if we have an infinite cache
that starts out empty, we would still

18
00:01:03,115 --> 00:01:07,625
have the compulsory misses, but we would
not have any of the other two kinds.

19
00:01:07,625 --> 00:01:11,050
So a compulsory miss is a miss you
have to have simply because for

20
00:01:11,050 --> 00:01:13,950
the first time you have to
bring a block into the cache.

21
00:01:13,950 --> 00:01:19,090
Capacity misses are misses that we
have on blocks that were in the cache,

22
00:01:19,090 --> 00:01:23,650
but were evicted because we didn't
have enough room in the cache

23
00:01:23,650 --> 00:01:26,060
because the cache is of a finite size.

24
00:01:26,060 --> 00:01:31,620
So these are misses that we would not
have in an infinite cache but capacity

25
00:01:31,620 --> 00:01:37,210
misses would be misses even in a
fully-associative cache of a given size.

26
00:01:37,210 --> 00:01:40,850
So for example,
if we have an eight kilobyte cache

27
00:01:40,850 --> 00:01:44,850
that is let's say direct map,
we have a capacity miss.

28
00:01:44,850 --> 00:01:47,150
If that block would not
be found in the cache,

29
00:01:47,150 --> 00:01:50,430
even if it was fully-associative
eight kilobyte cache.

30
00:01:50,430 --> 00:01:56,150
And finally, conflict misses occur
because of conflicts within a set.

31
00:01:56,150 --> 00:02:01,280
So the block was evicted not because the
cache didn't have enough space in it,

32
00:02:01,280 --> 00:02:04,920
but because it had
limited associativity.

33
00:02:04,920 --> 00:02:09,220
So a conflict miss is a miss
that would not be a miss

34
00:02:09,220 --> 00:02:12,590
if the cache was fully associative and
of the same size.

35
00:02:12,590 --> 00:02:15,540
So now some of
the obvious techniques for

36
00:02:15,540 --> 00:02:19,120
using the miss rate will
target some of these.

37
00:02:19,120 --> 00:02:20,790
So for example,

38
00:02:20,790 --> 00:02:26,220
a larger cache would help us reduce
a number of capacity misses.

39
00:02:26,220 --> 00:02:31,130
A larger associativity would help
us reduce the conflict misses.

40
00:02:31,130 --> 00:02:35,050
A better replacement policy would
also help us with conflict misses.

41
00:02:35,050 --> 00:02:39,030
But all of those techniques
also affect the hit time.

42
00:02:39,030 --> 00:02:43,520
So now let's look at some techniques
that are trying to reduce the miss rate

43
00:02:43,520 --> 00:02:47,260
without necessarily increasing
the hit time in return.
