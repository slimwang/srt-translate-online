1
00:00:00,340 --> 00:00:04,640
The answer for reusability is A, increased system fragmentation.

2
00:00:04,640 --> 00:00:07,500
High reusability means high cohesion.

3
00:00:07,500 --> 00:00:10,630
That is, that each module has a single purpose.

4
00:00:10,630 --> 00:00:12,160
This might lead to more modules, and

5
00:00:12,160 --> 00:00:15,510
hence, to more connections among the modules.

6
00:00:15,510 --> 00:00:20,120
The answer for performance is B, reduced system understanding.

7
00:00:20,120 --> 00:00:24,795
Performance requirements often are dealt with via introducing special cases or

8
00:00:24,795 --> 00:00:28,950
Achaean data structures, which can make the code harder to understand.

9
00:00:28,950 --> 00:00:33,400
The answer for security is C, increased coupling.

10
00:00:33,400 --> 00:00:35,290
Security means data security, and

11
00:00:35,290 --> 00:00:39,130
data security is provided by controlling access to the data.

12
00:00:39,130 --> 00:00:41,970
This means that in order for modules in order to access the data,

13
00:00:41,970 --> 00:00:45,260
they need to go through some form of data access control.

14
00:00:45,260 --> 00:00:48,700
Which is typically provided by a centralized control module,

15
00:00:48,700 --> 00:00:51,490
to which all the other modules must be coupled.

16
00:00:51,490 --> 00:00:56,380
Finally, the answer for reliability is D, compromised delivery schedule.

17
00:00:56,380 --> 00:00:59,590
Increased reliability typically means extra code to check for

18
00:00:59,590 --> 00:01:01,160
potential problems.

19
00:01:01,160 --> 00:01:04,700
Extra code means extra coding, checking, documentation, and

20
00:01:04,700 --> 00:01:07,340
so on, which can lead to difficulties delivering on time.
