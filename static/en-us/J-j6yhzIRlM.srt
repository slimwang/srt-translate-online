1
00:00:00,000 --> 00:00:03,000
You could almost imagine that there's a conversation

2
00:00:03,000 --> 00:00:06,000
going on between a psychic and a detective to solve a murder mystery.

3
00:00:06,000 --> 00:00:13,000
The detective is at a dead end and can't figure out how to solve the murder mystery

4
00:00:13,000 --> 00:00:19,000
and the psychic has this sort of amazing leap--oh, you need to check the finger prints on the body.

5
00:00:19,000 --> 00:00:24,000
This maybe not that amazing of a leap and you'll find that the murderer is Smith.

6
00:00:24,000 --> 00:00:27,000
Now, we wouldn't arrest someone based on just the word of the psychic.

7
00:00:27,000 --> 00:00:32,000
This detective now actually needs to go and check it out and see that it is actually is true,

8
00:00:32,000 --> 00:00:37,000
and assuming that the psychic is giving checkable information and it's correct,

9
00:00:37,000 --> 00:00:40,000
then the two of them together should be able to solve the problem.

10
00:00:40,000 --> 00:00:44,000
Now the role of the psychic here is actually to pick the accepting certificate,

11
00:00:44,000 --> 00:00:49,000
I don't know out of thin air or somehow, just guess it

12
00:00:49,000 --> 00:00:52,000
and then the verification algorithm actually can check it.

13
00:00:52,000 --> 00:00:57,000
This actually explains this notion guessing a certificate pulling out of thin air.

14
00:00:57,000 --> 00:00:59,000
It's not a deterministic process.

15
00:00:59,000 --> 00:01:01,000
It's not something that we could just program an algorithm to do

16
00:01:01,000 --> 00:01:06,000
to just jump right to the right answer and that makes it a non-deterministic step.

17
00:01:06,000 --> 00:01:11,000
It's not the kind of thing that you can actually write into a program that proceeds step by step by step.

18
00:01:11,000 --> 00:01:14,000
It sorts of make this crazy leap, non-deterministic leap

19
00:01:14,000 --> 00:01:19,000
and as long as we can check that leap is correct with the verification algorithm,

20
00:01:19,000 --> 00:01:23,000
we can at least conceptualize that this is a way of solving problems.

21
00:01:23,000 --> 00:01:27,000
We can actually implement a computer like this, but we can imagine a computer

22
00:01:27,000 --> 00:01:31,000
that we call a non-deterministic computer, non-deterministic turing machine

23
00:01:31,000 --> 00:01:34,000
that could this sort of magical step

24
00:01:34,000 --> 00:01:40,000
and that's where NP gets its name, non-deterministic polynomial time.

25
00:01:40,000 --> 00:01:44,000
And just a quick aside, there are actually some researchers working on something like this.

26
00:01:44,000 --> 00:01:49,000
There's reasons to believe that a quantum computer can do certain kinds of guessing,

27
00:01:49,000 --> 00:01:56,000
essentially by in parallel kind of imagining all the different situations that all these different certificates

28
00:01:56,000 --> 00:02:01,000
that might exists, and then designing the algorithm in such a way that the correct certificate

29
00:02:01,000 --> 00:02:04,000
will actually bubble up to the top efficiently.

30
00:02:04,000 --> 00:02:07,000
This doesn't exist yet so don't get worry

31
00:02:07,000 --> 00:02:11,000
that what your learning in computer science is all completely irrelevant.

32
00:02:11,000 --> 00:02:14,000
It's still relevant for as far as we can tell into the future

33
00:02:14,000 --> 00:02:17,000
but the idea of a quantum computer is actually very interesting.

34
00:02:17,000 --> 00:02:23,000
We have reason to believe that the design and analysis of algorithms for quantum computer

35
00:02:23,000 --> 00:02:29,000
are going to lean pretty heavily on the stuff that we do for classical computers as well.
