1
00:00:00,190 --> 00:00:03,830
With the addition of these concepts, the Map's gotten a lot more complicated.

2
00:00:03,830 --> 00:00:05,710
Let's start by looking at this spot.

3
00:00:05,710 --> 00:00:09,976
The thing that goes here has to be a type of clone, and it's a part of GitHub.

4
00:00:09,976 --> 00:00:12,660
So, it will be something that's GitHub specific and

5
00:00:12,660 --> 00:00:15,120
not a part of the original Git system.

6
00:00:15,120 --> 00:00:18,350
It's also going to be something that operates on a repository.

7
00:00:18,350 --> 00:00:22,420
Of these options, the only one that fits is fork.

8
00:00:22,420 --> 00:00:23,870
Let's double check that this makes sense.

9
00:00:25,300 --> 00:00:26,940
Forking is like cloning but

10
00:00:26,940 --> 00:00:31,120
with some extra steps and you can only do it on GitHub itself.

11
00:00:32,479 --> 00:00:34,940
It also takes a repository and makes another repository, so

12
00:00:34,940 --> 00:00:37,360
it does operate on repositories.

13
00:00:37,360 --> 00:00:38,940
All right, let's move on.

14
00:00:38,940 --> 00:00:43,050
Remember, how we talked about pull being a combination of fetching and merging?

15
00:00:43,050 --> 00:00:46,960
When we have merge here, so this will have to be fetch.

16
00:00:46,960 --> 00:00:48,780
Let's check, that this makes sense.

17
00:00:48,780 --> 00:00:51,020
We know that fetching is a part of pull, but

18
00:00:51,020 --> 00:00:53,440
does it operate on remotes and branches?

19
00:00:53,440 --> 00:00:54,700
It clearly operates on remotes,

20
00:00:54,700 --> 00:00:58,570
because you're fetching data from the remote repository.

21
00:00:58,570 --> 00:01:01,280
The connection to branch is a little less clear.

22
00:01:01,280 --> 00:01:03,960
You can definitely, fetch a particular branch.

23
00:01:03,960 --> 00:01:07,440
When you fetch, the branch doesn't necessarily get updated.

24
00:01:07,440 --> 00:01:11,720
But remember that, we have references to the remote versions of our branches,

25
00:01:11,720 --> 00:01:13,800
and those are the things that get updated.

26
00:01:13,800 --> 00:01:16,180
So, it does operate on branches, as well.

27
00:01:16,180 --> 00:01:19,230
Now, it might be tempting to put fast-forward merge here.

28
00:01:19,230 --> 00:01:22,650
Since, you would think fast-forward merge would be related to merges.

29
00:01:22,650 --> 00:01:23,320
But the way that I think,

30
00:01:23,320 --> 00:01:28,690
about fast-forward merges is basically, that they change where a branch points.

31
00:01:28,690 --> 00:01:31,900
So, it's take a branch label from one commit to another commit.

32
00:01:31,900 --> 00:01:34,740
So in my mind, it just operates on a branch.

33
00:01:34,740 --> 00:01:37,450
We're down to one option and only one spot left, so this is gotta be,

34
00:01:37,450 --> 00:01:39,100
where this guy goes.

35
00:01:39,100 --> 00:01:40,910
Let's check, that this actually makes sense.

36
00:01:40,910 --> 00:01:45,290
When you make a pull request, you're asking to have a particular branch

37
00:01:45,290 --> 00:01:49,070
be merged in, with the main branch or some other branch.

38
00:01:49,070 --> 00:01:50,460
It doesn't necessarily, have to be a master.

39
00:01:51,550 --> 00:01:54,340
And pull requests are purely GitHub idea.

40
00:01:54,340 --> 00:01:56,110
They don't exist in git proper.

41
00:01:56,110 --> 00:01:58,980
So, mergers are part of pull requests.

42
00:01:58,980 --> 00:02:02,140
Pull requests, work on branches.

43
00:02:02,140 --> 00:02:04,210
You merge two branches together.

44
00:02:04,210 --> 00:02:07,510
And it's something that's part of GitHub, so it all fits.

45
00:02:07,510 --> 00:02:09,560
All right, we're done with the Concept Map for this lesson.
