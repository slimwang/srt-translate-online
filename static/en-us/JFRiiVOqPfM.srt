1
00:00:00,240 --> 00:00:03,670
Andy Rubin, head of 
Google's Android team until 2013

2
00:00:03,670 --> 00:00:06,680
famously defined Android's 
openness with this Tweet,

3
00:00:06,680 --> 00:00:08,920
offering the instructions for
downloading and building

4
00:00:08,920 --> 00:00:11,580
the Android source code.

5
00:00:11,580 --> 00:00:13,630
As app developers,
it's handy to be able to peak

6
00:00:13,630 --> 00:00:16,910
behind the curtains and see
how the framework actually works.

7
00:00:16,910 --> 00:00:18,760
And it's an excellent way
to find answers

8
00:00:18,760 --> 00:00:21,030
to tricky Stack Overflow questions.

9
00:00:21,030 --> 00:00:24,710
But the Android Open Source Project, 
or AOSP as its commonly known,

10
00:00:24,710 --> 00:00:26,290
is much more than that.

11
00:00:26,290 --> 00:00:29,420
The source code is available
under the Apache 2 license,

12
00:00:29,420 --> 00:00:32,200
so anyone can take it 
and do anything they want with it,

13
00:00:32,200 --> 00:00:34,428
including modifying it
and redistributing it.

14
00:00:34,428 --> 00:00:35,946
And they have.

15
00:00:35,946 --> 00:00:38,354
Android has always had
a passionate community of modders,

16
00:00:38,354 --> 00:00:41,082
from Steve Kondik
and the Cyanogen community

17
00:00:41,082 --> 00:00:43,050
to XDA and many others
who have been distributing

18
00:00:43,050 --> 00:00:45,200
modified images of Android

19
00:00:45,200 --> 00:00:48,070
for phone owners
brave enough to try them.

20
00:00:48,070 --> 00:00:50,800
Even big companies like Amazon
have taken the Android source code

21
00:00:50,800 --> 00:00:53,300
and modified it for use 
in their own line of products.

22
00:00:53,300 --> 00:00:56,230
That openness extends 
to the apps themselves.

23
00:00:56,230 --> 00:00:59,410
The AOSP includes key mobile apps 
like the dialer, app launcher,

24
00:00:59,410 --> 00:01:01,140
calendar, and email.

25
00:01:01,140 --> 00:01:03,930
And Google offers its
own versions of each as well.

26
00:01:03,930 --> 00:01:06,450
In the early days those native apps
were tightly bound

27
00:01:06,450 --> 00:01:09,760
to the framework and could only
get updated along with the platform.

28
00:01:09,760 --> 00:01:13,270
Which admittedly in the early days 
seemed like every few weeks.

29
00:01:13,270 --> 00:01:16,230
But as the time between
platform releases grew,

30
00:01:16,230 --> 00:01:18,100
so did the efforts
to unbundle those apps,

31
00:01:18,100 --> 00:01:20,850
allowing them to be updated 
through Google Play.

32
00:01:20,850 --> 00:01:23,950
That was great news for users, 
but it had an even better side effect

33
00:01:23,950 --> 00:01:25,440
for us developers.

34
00:01:25,440 --> 00:01:27,363
Because apps like Gmail and Maps

35
00:01:27,363 --> 00:01:29,786
depend on a number
of proprietary Google APIs,

36
00:01:29,786 --> 00:01:32,150
Google released Google Play Services.

37
00:01:32,150 --> 00:01:35,700
Also code named after food 
to support the Google apps,

38
00:01:35,700 --> 00:01:38,626
while also giving us developers
Google specific APIs,

39
00:01:38,626 --> 00:01:41,262
like Maps, Wallet, Drive, and YouTube.

40
00:01:41,262 --> 00:01:42,824
So now we get
the latest and greatest

41
00:01:42,824 --> 00:01:45,596
Google specific APIs
every six weeks or so.

42
00:01:45,596 --> 00:01:48,100
And rather than being 
tied to a specific platform,

43
00:01:48,100 --> 00:01:51,390
they're available on every device, 
back to Gingerbread.

44
00:01:51,390 --> 00:01:55,190
Oh, and of course every native app
is also entirely replaceable.

45
00:01:55,190 --> 00:01:57,470
So you can publish apps
to replace any of the apps

46
00:01:57,470 --> 00:01:58,832
shipped with the device.

47
00:01:58,832 --> 00:02:02,421
And we can build our own SMS apps, 
homescreens or maps apps,

48
00:02:02,421 --> 00:02:05,760
publish it on Play and give users
the choice to make it their default.

49
00:02:05,760 --> 00:02:07,150
When Android
was first announced,

50
00:02:07,150 --> 00:02:11,650
Andy Rubin described the AOSP as, 
all the software to run a mobile phone

51
00:02:11,650 --> 00:02:14,910
but without the proprietary obstacles
that have hindered mobile innovation.

52
00:02:14,910 --> 00:02:18,000
Today, Android runs on more
than just mobiles,

53
00:02:18,000 --> 00:02:20,310
but the core of its purpose 
remains the same.

54
00:02:20,310 --> 00:02:23,143
A platform and ecosystem
that allows models, carriers,

55
00:02:23,143 --> 00:02:26,030
OEMs and app developers 
to innovate and compete.

56
00:02:26,030 --> 00:02:28,030
So armed with an open, 
evolving platform

57
00:02:28,030 --> 00:02:30,090
enriched by a growing
set of Google API's

58
00:02:30,090 --> 00:02:32,290
and the ability to create
great apps that let users

59
00:02:32,290 --> 00:02:35,910
customize every aspect
of their user experience,

60
00:02:35,910 --> 00:02:39,260
you can use other people's work
to help define the computing platform

61
00:02:39,260 --> 00:02:40,668
of the future.

62
00:02:40,668 --> 00:02:42,958
And that's my definition of open.
