1
00:00:00,000 --> 00:00:03,000
The answer is it could reveal all three of their nonces

2
00:00:03,000 --> 00:00:06,000
and show that they compute the correct xi value.

3
00:00:06,000 --> 00:00:11,000
Assuming the encryption function has the properties it should, it should be difficult to find

4
00:00:11,000 --> 00:00:17,000
r0, r1, and r2 values that encrypt in the same way with a different vote.

5
00:00:17,000 --> 00:00:20,000
Note that this requires the property of the encryption function

6
00:00:20,000 --> 00:00:23,000
that it's hard to do this by cheating by finding a different vote

7
00:00:23,000 --> 00:00:27,000
with different nonce values that encrypt to the same thing.

8
00:00:27,000 --> 00:00:29,000
This is actually a required property of encryption.

9
00:00:29,000 --> 00:00:32,000
As long as the encryption is invertible, this would be impossible.

10
00:00:32,000 --> 00:00:36,000
If we could find two such values, well then we couldn't decrypt

11
00:00:36,000 --> 00:00:39,000
and get the same x or y out correctly that went in.

12
00:00:39,000 --> 00:00:45,000
That's why this works--if we're willing to reveal these values and show that they produce xi

13
00:00:45,000 --> 00:00:48,000
that proves that someone somewhere along the chain cheated

14
00:00:48,000 --> 00:00:50,000
if the vote is not recorded in the final tally.

15
00:00:50,000 --> 00:00:54,000
The big drawback of this is it requires that the voter reveals her vote

16
00:00:54,000 --> 99:59:59,999
in order to show that her vote was not included in the tally.
