1
00:00:00,400 --> 00:00:03,480
This lesson has illustrated some uses of OCL to provide

2
00:00:03,480 --> 00:00:08,630
precise specifications for simple library information system. Even so

3
00:00:08,630 --> 00:00:12,490
there are many more things we need to do to complete this exercise.

4
00:00:12,490 --> 00:00:16,781
We haven't even mentioned some of the other requirements like numbers one,

5
00:00:16,781 --> 00:00:21,380
three, eight, ten, 11 which we would need to specify. We haven't of course at

6
00:00:21,380 --> 00:00:24,532
all in this whole exercise mention anything having to do with non functional.

7
00:00:24,532 --> 00:00:30,540
Requirements. Along the way we invented some axillary operations like

8
00:00:30,540 --> 00:00:35,150
is available, and is available is actually pretty complicated itself and

9
00:00:35,150 --> 00:00:39,410
we'd have, we'd have to white that out. We'd have to handle some

10
00:00:39,410 --> 00:00:43,930
situations implicit in the requirements such as returning a loanable item,

11
00:00:43,930 --> 00:00:48,420
as returning a book we checked out. Paying a fine, cancelling a request, and so

12
00:00:48,420 --> 00:00:53,330
on. And, we might have to consider some new

13
00:00:53,330 --> 00:00:57,870
some new issues that arise during the course of doing this. For example,

14
00:00:57,870 --> 00:01:03,520
if one item in a title is a best seller, need all of them be best sellers,

15
00:01:04,670 --> 00:01:09,580
okay? It would make sense in a library if you have some. Designated a book as

16
00:01:09,580 --> 00:01:13,810
a best seller that all the items in that title, are a best seller. But

17
00:01:13,810 --> 00:01:17,700
we haven't stated anything explicitly that would require that. We would also

18
00:01:17,700 --> 00:01:23,530
need to op, add in some specifications for operations for classes date. And

19
00:01:23,530 --> 00:01:28,470
money. Money had to do with paying fines. Although in those situations we could

20
00:01:28,470 --> 00:01:34,230
presumably reuse those specification in other systems that we're building.

21
00:01:34,230 --> 00:01:39,420
Likewise, for the operating system operations. We also haven't said

22
00:01:39,420 --> 00:01:44,070
anything about constructing instances of loanable items and patrons. Although,

23
00:01:44,070 --> 00:01:48,690
we did construct instances of associations and we can use similar techniques for

24
00:01:48,690 --> 00:01:53,040
constructing h, the instances of the other two classes.
