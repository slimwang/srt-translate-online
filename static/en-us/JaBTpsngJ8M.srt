1
00:00:00,310 --> 00:00:03,280
Okay, so here's a bag we'd like
to split into roughly two parts.

2
00:00:03,280 --> 00:00:04,240
How do we do it?

3
00:00:04,240 --> 00:00:07,570
Now so far, we've relied on using
patterns from binary arithmetic

4
00:00:07,570 --> 00:00:10,500
to derive algorithms for bag operations.

5
00:00:10,500 --> 00:00:12,320
That begs the natural question,

6
00:00:12,320 --> 00:00:15,115
what's the right analogy for
splitting in binary.

7
00:00:16,155 --> 00:00:16,865
So here's an idea.

8
00:00:16,865 --> 00:00:19,455
What about right bit shifting?

9
00:00:19,455 --> 00:00:23,388
After all, in binary a right bit shift
is like dividing by two which would be

10
00:00:23,388 --> 00:00:25,195
a kind of split.

11
00:00:25,195 --> 00:00:28,175
Let's try it on our now
favorite integer, 23.

12
00:00:28,175 --> 00:00:31,553
Shifting by one effectively
chops off the last bit.

13
00:00:31,553 --> 00:00:35,251
And that will give us 1 0 1 1,
and lo and behold,

14
00:00:35,251 --> 00:00:41,610
1 0 1 1 is 11 in decimal and
that's approximately 23 divided by two.

15
00:00:41,610 --> 00:00:44,070
Okay.
Bur how do we actually apply this idea

16
00:00:44,070 --> 00:00:45,580
to bag splitting?

17
00:00:45,580 --> 00:00:48,670
Okay, let's see how this
works on a simpler example.

18
00:00:48,670 --> 00:00:53,660
So here's a bag whose smallest
pennant is of size 4, in other words,

19
00:00:53,660 --> 00:00:56,880
the 2 slot is full and
1 and 0 slots are empty.

20
00:00:58,120 --> 00:01:02,420
Now, to shift this by 1, or in other
words, slide this somehow into the 1

21
00:01:02,420 --> 00:01:06,260
slot, we're going to need to figure
out how to chop up this pennant.

22
00:01:06,260 --> 00:01:10,450
Because the 1 slot can only
hold a pennant of size 2.

23
00:01:10,450 --> 00:01:14,120
Now let's assume that we also have
a spare bag which is initially empty.

24
00:01:14,120 --> 00:01:16,370
And we'll need this so
that as we're breaking things up or

25
00:01:16,370 --> 00:01:19,210
breaking things apart,
we have some place to put them.

26
00:01:19,210 --> 00:01:22,470
Let's start by splitting
the pennant into halves.

27
00:01:22,470 --> 00:01:25,560
Now we can move one of these
smaller halves into the 1 slot.

28
00:01:25,560 --> 00:01:28,170
This is now a legal operation.

29
00:01:28,170 --> 00:01:30,590
And let's sort the other
half into our spare bag.

30
00:01:31,630 --> 00:01:34,680
Now in the worst case, we might have
to move or touch every pennant.

31
00:01:34,680 --> 00:01:38,280
But remember that each pennant
split only takes constant time.

32
00:01:38,280 --> 00:01:42,680
Therefore, the whole splitting should
be possible in just log n steps.

33
00:01:42,680 --> 00:01:47,880
So again, that's log n splits, constant
time per split, log n overall cost.
