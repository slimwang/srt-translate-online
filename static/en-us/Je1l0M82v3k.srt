1
00:00:00,012 --> 00:00:03,830
Great, so we know how to define classes and create instances. We don't know how

2
00:00:03,830 --> 00:00:06,780
to do anything useful with them yet, so that's what we're going to learn next.

3
00:00:06,780 --> 00:00:09,970
We're going to learn about attributes. If we want to do something more

4
00:00:09,970 --> 00:00:13,412
interesting with our classes, we need to add attributes to them. And in Python,

5
00:00:13,412 --> 00:00:17,269
we can do that very simply. We can use the object, followed by a dot, followed

6
00:00:17,269 --> 00:00:20,914
by a name. This is the name of the attribute. And if we want to create a new

7
00:00:20,914 --> 00:00:24,626
attribute, or update an old one, we can use assignment so we can assign that to

8
00:00:24,626 --> 00:00:29,202
some value. What this does is it sets the value associated with the attribute

9
00:00:29,202 --> 00:00:34,082
name, for the object here, to be whatever this expression evaluates to. So, let

10
00:00:34,082 --> 00:00:38,732
me show you an example. So here, we've created an instance of the Restaurant

11
00:00:38,732 --> 00:00:43,360
class. It has no attributes yet, but we can add one. Using the syntax, we're

12
00:00:43,360 --> 00:00:47,824
adding an attribute name and giving it the value of the string, McDowell's

13
00:00:47,824 --> 00:00:54,299
Burger Emporium. And now, we can use that attribute. Note that adding an

14
00:00:54,299 --> 00:00:59,500
attribute doesn't create a new object, it just adds attributes to that object.

15
00:00:59,500 --> 00:01:03,070
So, we already had our Restaurant object. That was created when we did this. We

16
00:01:03,070 --> 00:01:07,886
had a new instance of it, and we labeled it McDowell's. Now, we've taken that

17
00:01:07,886 --> 00:01:11,240
object and we've added an attribute name to it, and we've given it some value.

18
00:01:11,240 --> 00:01:15,388
Notice that if we create a new Restaurant instance, this is creating a new

19
00:01:15,388 --> 00:01:20,284
object and we're assigning it to the name chez_bananas. So, the chez_bananas

20
00:01:20,284 --> 00:01:25,736
object does not have a name attribute. If we try to look for it, we'll get an

21
00:01:25,736 --> 00:01:30,010
error. We get an AttributeError that says, this Restaurant object has no

22
00:01:30,010 --> 00:01:37,752
attribute name, name. We can add one. Now, we've added a name attribute to Chez

23
00:01:37,752 --> 00:01:46,230
Bananas, add this long string. That didn't change the name of McDowell's.

24
00:01:46,231 --> 00:01:50,356
They're separate objects with separate names. We can of course add other

25
00:01:50,356 --> 00:01:56,451
attributes, so we can add say, an owner. Add another attribute, and we will also

26
00:01:56,451 --> 00:02:01,105
add a chef attributes. These didn't change anything about the object that Chez

27
00:02:01,105 --> 00:02:06,504
Bananas points to. Just to confirm, Chez Bananas still has no chef. Just like

28
00:02:06,504 --> 00:02:10,347
any other name, we can change what a name refers to, so we can change what an

29
00:02:10,347 --> 00:02:15,408
attribute refers to. We'll do that just within assignment. So, suppose Chef

30
00:02:15,408 --> 00:02:20,631
Quesy was fired. We have a new chef at McDowell's, we have Chef Hurl. And

31
00:02:20,631 --> 00:02:25,140
that'll change the value associated with this name. Now, the chef attribute

32
00:02:25,140 --> 00:02:30,238
points to the string, Chef Hurl. Sounds very yummy to me. We can define

33
00:02:30,238 --> 00:02:36,829
functions that work on our objects. Let's define a display_restaurant function,

34
00:02:36,829 --> 00:02:42,380
and it's going to take a restaurant as input, and all it will do is print the

35
00:02:42,380 --> 00:02:47,571
name of the restaurant. So, let's try that. We'll call the display restaurant

36
00:02:47,571 --> 00:02:51,229
passing in the object McDowell's refers to, which has the name McDowell's

37
00:02:51,229 --> 00:02:56,702
something or other. We can do the same thing with the object Chez Bananas refers

38
00:02:56,702 --> 00:02:57,013
to.
