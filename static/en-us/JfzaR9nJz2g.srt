1
00:00:00,592 --> 00:00:04,090
Welcome back, and let's take a look
at the correct code statements

2
00:00:04,090 --> 00:00:05,880
needed to implement
each of these comments.

3
00:00:07,090 --> 00:00:11,460
So for this first comment here, asking
us to create a new ArrayList object

4
00:00:11,460 --> 00:00:15,780
called restaurantsToTry, and
containing a list of strings.

5
00:00:15,780 --> 00:00:17,810
The code for that looks like this.

6
00:00:17,810 --> 00:00:20,560
So we have ArrayList of type String,

7
00:00:20,560 --> 00:00:25,540
the object name restaurantsToTry
= new ArrayList of type String.

8
00:00:25,540 --> 00:00:27,700
And note that when
instantiating an ArrayList,

9
00:00:27,700 --> 00:00:30,470
we don't need to input
any parameters here.

10
00:00:30,470 --> 00:00:33,540
Now for this second comment,
asking us to add a restaurant called

11
00:00:33,540 --> 00:00:37,240
Morning Cafe to the ArrayList,
the code looks like this.

12
00:00:37,240 --> 00:00:42,700
So we have restaurantsToTry.add and it's
taking in Morning Cafe as its input.

13
00:00:42,700 --> 00:00:44,790
So here's what that looks like visually.

14
00:00:44,790 --> 00:00:46,780
So using our .add method,

15
00:00:46,780 --> 00:00:51,788
we've added Morning Cafe at the zeroth
index of our restaurantsToTry ArrayList.

16
00:00:51,788 --> 00:00:53,608
So now onto the third comment,

17
00:00:53,608 --> 00:00:56,763
asking us to add another
restaurant called BBQ Time.

18
00:00:56,763 --> 00:00:58,043
So the code looks really similar.

19
00:00:58,043 --> 00:01:00,098
We have restaurantsToTry.add, and

20
00:01:00,098 --> 00:01:03,390
this time, it's taking in
BBQ Time as its input parameter.

21
00:01:03,390 --> 00:01:05,870
So here's the code again, and this time,

22
00:01:05,870 --> 00:01:09,830
we're adding in BBQ Time as
the first index of this ArrayList.

23
00:01:09,830 --> 00:01:11,930
So now onto our fourth comment.

24
00:01:11,930 --> 00:01:14,680
So the user has just tried
our Morning Cafe restaurant.

25
00:01:14,680 --> 00:01:17,850
So we want to go ahead and
remove it from our ArrayList.

26
00:01:17,850 --> 00:01:22,043
So all we need to do is use
the restaurantsToTry.remove method, and

27
00:01:22,043 --> 00:01:25,330
then take in Morning Cafe
as its parameter.

28
00:01:25,330 --> 00:01:29,510
So for our fourth comment, the user has
just tried our Morning Cafe restaurant,

29
00:01:29,510 --> 00:01:33,020
and so we just want to remove it
from the restaurant's ArrayList now.

30
00:01:33,020 --> 00:01:37,470
So the code for that looks like this,
restaurantsToTry.remove, and

31
00:01:37,470 --> 00:01:40,550
it takes in Morning Cafe
as its input parameter.

32
00:01:40,550 --> 00:01:46,580
So visually, using the .remove method,
we remove Morning Cafe and that shrinks

33
00:01:46,580 --> 00:01:51,660
the size of the array and moves BBQ Time
up to the zeroth index of the ArrayList.

34
00:01:51,660 --> 00:01:53,680
So onto our last comment.

35
00:01:53,680 --> 00:01:55,627
So we want to get
the length of the list and

36
00:01:55,627 --> 00:01:58,525
then store it in an integer
called numberOfRestaurants.

37
00:02:00,200 --> 00:02:01,800
So the code for that looks like this.

38
00:02:01,800 --> 00:02:06,900
We have int numberOfRestaurants
= restaurantsToTry.size.

39
00:02:08,994 --> 00:02:13,450
Remember for ArrayList, when we use
the method size, it doesn't take in any

40
00:02:13,450 --> 00:02:18,210
input parameters and it retrieves for
us the number of elements in the list.

41
00:02:18,210 --> 00:02:22,150
So in our case right now,
the size of the ArrayList is just one.

42
00:02:22,150 --> 00:02:22,650
[BLANK_AUDIO].
