1
00:00:00,400 --> 00:00:03,490
So let's talk about some
differences in perspective.

2
00:00:03,490 --> 00:00:04,540
Developers write code.

3
00:00:04,540 --> 00:00:07,740
They are responsible for
implementing feature requests,

4
00:00:07,740 --> 00:00:09,690
fixing bugs, and so on.

5
00:00:09,690 --> 00:00:11,960
Their incentives tend to
be more feature oriented.

6
00:00:11,960 --> 00:00:14,630
They want to have big
launches as accomplishments.

7
00:00:14,630 --> 00:00:17,670
Building new features might be dependent
on exploring new technologies or

8
00:00:17,670 --> 00:00:19,530
approaches that have
not been used before.

9
00:00:19,530 --> 00:00:21,280
Taking new risks.

10
00:00:21,280 --> 00:00:23,660
Operations people run services.

11
00:00:23,660 --> 00:00:25,780
They might take care of
physical servers, or

12
00:00:25,780 --> 00:00:27,920
run services on hosted infrastructure.

13
00:00:27,920 --> 00:00:30,180
They do deployment upkeep and
trouble shooting.

14
00:00:30,180 --> 00:00:32,900
Their incentives tend to
be more stability oriented.

15
00:00:32,900 --> 00:00:36,800
Anything that requires new untested
technologies or introduces new features

16
00:00:36,800 --> 00:00:40,150
is a potential problem for the stability
and performance of the system.

17
00:00:40,150 --> 00:00:43,950
The work Ops does is also usually
invisible to the company.

18
00:00:43,950 --> 00:00:48,000
Ops is noticed when something does not
work, not when everything works fine.

19
00:00:48,000 --> 00:00:51,350
The new release that developers get
praise for might cause problems in

20
00:00:51,350 --> 00:00:55,660
production, and it's Ops that gets paged
if the app is unavailable to the user.

21
00:00:55,660 --> 00:00:58,040
While both of these
perspectives are valid,

22
00:00:58,040 --> 00:01:01,370
sometimes they seem like opposite
in conflicting interests.

23
00:01:01,370 --> 00:01:05,090
Dev can feel like ops is blocking their
work by not providing resources fast

24
00:01:05,090 --> 00:01:08,050
enough or not being supportive
of new cutting edge tech.

25
00:01:08,050 --> 00:01:11,110
And Ops can feel like Devs are being
irresponsible and reckless and

26
00:01:11,110 --> 00:01:14,650
just implement new features without
thinking about performance and security.

27
00:01:14,650 --> 00:01:18,160
And there are other players in the
field, as well, like product management.

28
00:01:18,160 --> 00:01:21,370
Product managers may be even
more feature oriented than devs.

29
00:01:21,370 --> 00:01:23,080
They may make external promises, and

30
00:01:23,080 --> 00:01:26,420
they might not ever talk with
traditional operations staff.

31
00:01:26,420 --> 00:01:31,140
If the organization has a security team,
they may be even more change-overse than

32
00:01:31,140 --> 00:01:35,230
ops, in the fear of introducing new,
unknown vulnerabilities.

33
00:01:35,230 --> 00:01:38,819
Or, on the other hand, they may be more
willing to risk service down-time,

34
00:01:38,819 --> 00:01:42,400
in order to patch nearly discovered
vulnerabilities quickly.

35
00:01:42,400 --> 00:01:45,150
And then there's business management,
responsible for budgeting and

36
00:01:45,150 --> 00:01:46,820
buying resources.

37
00:01:46,820 --> 00:01:50,190
Ops may have to requisition
additional resources from them and

38
00:01:50,190 --> 00:01:52,190
reason why they need those resources,

39
00:01:52,190 --> 00:01:55,760
even if the underlying problem might
be performance of the new release.

40
00:01:55,760 --> 00:01:59,830
So how can you get all of these involve
parties to understand each other's

41
00:01:59,830 --> 00:02:03,210
different perspective and
work toward shared goals.

42
00:02:03,210 --> 00:02:06,690
After all, the server that's offline
doesn't have any features and

43
00:02:06,690 --> 00:02:07,670
that's bad for everybody.
