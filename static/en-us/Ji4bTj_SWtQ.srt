1
00:00:00,110 --> 00:00:01,410
So let's take a quick look at the

2
00:00:01,410 --> 00:00:05,510
filter playground method where you've been adding your filters.

3
00:00:05,510 --> 00:00:08,600
And here you see I've added the filter for

4
00:00:08,600 --> 00:00:11,560
month equals six which basically says, give me the

5
00:00:11,560 --> 00:00:14,580
conferences in June then I deployed that to

6
00:00:14,580 --> 00:00:17,640
AppSpot. And I went to the API's explorer for

7
00:00:17,640 --> 00:00:20,780
my project, actually out on AppSpot this is not

8
00:00:20,780 --> 00:00:25,290
in local host. Chose my method, my playground method,

9
00:00:25,290 --> 00:00:31,540
executed it and you see I get an error and it's a backend error. So one thing we

10
00:00:31,540 --> 00:00:36,930
can do at this point is to go look at the index viewer in the admin console. To

11
00:00:36,930 --> 00:00:40,740
get there, you go to the console.developers.google.com, you select

12
00:00:40,740 --> 00:00:43,550
your project and then over here you choose cloud

13
00:00:43,550 --> 00:00:48,130
data store and then you choose indexes. You see

14
00:00:48,130 --> 00:00:50,470
the indexes that have already been created. And these are

15
00:00:50,470 --> 00:00:54,000
what we'd expect, we already searched for this ancestor query,

16
00:00:54,000 --> 00:00:57,400
which basically give me all conferences for a user, where the

17
00:00:57,400 --> 00:01:00,250
user was the ancestor of the conference. And then we have

18
00:01:00,250 --> 00:01:03,160
this other one where we search for city topics and name

19
00:01:03,160 --> 00:01:07,040
and if you've never actually deployed your app with this

20
00:01:07,040 --> 00:01:10,570
filter to Appspot. You won't see this filter, but that's okay,

21
00:01:10,570 --> 00:01:13,010
that's fine. Now what I want you to do is to

22
00:01:13,010 --> 00:01:15,480
go back to Eclipse and I want you to look at

23
00:01:15,480 --> 00:01:21,090
the automatically generated index configuration file. So to get to that,

24
00:01:21,090 --> 00:01:26,630
sorry this is a little hard to see but you go into the Target directory. You

25
00:01:26,630 --> 00:01:30,537
drill down into Conference-1.0. Then into Web-inf,

26
00:01:30,537 --> 00:01:33,579
then into app engine generated and you

27
00:01:33,579 --> 00:01:39,100
see data store-indexes-auto. Now exactly what you

28
00:01:39,100 --> 00:01:40,490
see might be different to what I've

29
00:01:40,490 --> 00:01:44,050
got here but it's perfectly fine if it's blank.

30
00:01:44,050 --> 00:01:46,650
It may already have some index configurations in it.

31
00:01:47,840 --> 00:01:50,510
Now what I'm going to do is run Conference

32
00:01:50,510 --> 00:01:54,710
Central on Local Host. Okay my Dev App Server's

33
00:01:54,710 --> 00:01:57,060
now running. So, I'm going to go to the API's

34
00:01:57,060 --> 00:01:59,920
Explorer on Local Host. Make sure you're at, in

35
00:01:59,920 --> 00:02:02,520
the API's Explorer on Local Host not back in

36
00:02:02,520 --> 00:02:05,470
your App on App spot. Again, we drill down,

37
00:02:05,470 --> 00:02:08,000
we got to our filter playground method. I get

38
00:02:08,000 --> 00:02:10,840
a response, I don't actually have any items that match

39
00:02:10,840 --> 00:02:13,980
that query but this doesn't matter at this point.

40
00:02:13,980 --> 00:02:16,600
So now I go back to Eclipse. I'm going to look

41
00:02:16,600 --> 00:02:20,100
at my index configuration file again and you see

42
00:02:20,100 --> 00:02:24,082
that this index configuration entry has been automatically added for

43
00:02:24,082 --> 00:02:27,820
me. I didn't write this, app engine routed when it

44
00:02:27,820 --> 00:02:30,530
run the query on local host. So, I'm searching for

45
00:02:30,530 --> 00:02:34,790
kind Conference, no ancestor. I'm searching for filtering by

46
00:02:34,790 --> 00:02:38,060
city, filtering by month, filtering by topics, filtering by

47
00:02:38,060 --> 00:02:40,890
name. I should not filtering by name, I'm sorting

48
00:02:40,890 --> 00:02:43,760
by name but to all intents and purposes a

49
00:02:43,760 --> 00:02:46,630
sort order is a filter. So now, I'm going to

50
00:02:46,630 --> 00:02:50,120
go run my app again on App Spot. When

51
00:02:50,120 --> 00:02:53,060
you deploy your application to App Spot, the updated

52
00:02:53,060 --> 00:02:55,950
index configuration file will be deployed with it and

53
00:02:55,950 --> 00:02:58,790
App Engine will start to build your new index. Back

54
00:02:58,790 --> 00:03:01,360
in the index viewer page in the admin console for

55
00:03:01,360 --> 00:03:03,590
my app running on App Spot, I see that my

56
00:03:03,590 --> 00:03:08,660
new index is preparing. Now if I actually run this query

57
00:03:08,660 --> 00:03:11,740
again I'll still get an error and I'll keep getting

58
00:03:11,740 --> 00:03:15,440
an error until it's finished preparing. It needs to be

59
00:03:15,440 --> 00:03:19,130
ready to serve before I can run the query. So

60
00:03:19,130 --> 00:03:20,950
to get ready for the query I'm just going to go

61
00:03:20,950 --> 00:03:23,600
ahead and make sure I've got some conferences that will satisfy

62
00:03:23,600 --> 00:03:29,230
the query. So I'm searching for conferences, in London about medical innovations

63
00:03:29,230 --> 00:03:32,758
happening in June. If you made any changes in your query

64
00:03:32,758 --> 00:03:37,783
property you'll need to create a conference that satisfies your query criteria.

65
00:03:37,783 --> 00:03:44,902
[BLANK_AUDIO]

66
00:03:44,902 --> 00:03:46,937
Okay, let's go and see how our index is

67
00:03:46,937 --> 00:03:50,910
doing, see if it's built yet. Okay, good, it

68
00:03:50,910 --> 00:03:53,550
has. It's no longer preparing, so it's ready to

69
00:03:53,550 --> 00:03:57,590
serve. So, over here in the API's Explorer for

70
00:03:57,590 --> 00:04:04,060
my app on App Spot, I will run my query again. Execute it. Oh good and it found

71
00:04:04,060 --> 00:04:06,830
the conference I just created. Which matches all the

72
00:04:06,830 --> 00:04:10,260
filters on the query. Good. One thing to mention

73
00:04:10,260 --> 00:04:12,210
is that when you deploy an app that needs a new

74
00:04:12,210 --> 00:04:17,360
index, the request to update the index actually goes into a queue

75
00:04:17,360 --> 00:04:21,010
along with other similar requests, so your index may not get

76
00:04:21,010 --> 00:04:24,360
updated immediately. And that could be why it may take a little

77
00:04:24,360 --> 00:04:27,140
bit longer to prepare than you think if might need to.

78
00:04:27,140 --> 00:04:29,780
It's not because it take a long time to build the index,

79
00:04:29,780 --> 00:04:32,380
although sometimes it can but generally the wait time is just

80
00:04:32,380 --> 00:04:34,710
waiting for your request to get to the top of the queue.

81
00:04:35,960 --> 00:04:41,480
So another thing that you could do instead of running your query on local host

82
00:04:41,480 --> 00:04:43,110
is that you can create your own index

83
00:04:43,110 --> 00:04:49,160
configuration, called datastore/indexes.xml so whatever indexes are defined

84
00:04:49,160 --> 00:04:52,170
in either the datastore/index. Says file that

85
00:04:52,170 --> 00:04:56,020
you created or in the order generated, datastore

86
00:04:56,020 --> 00:04:59,050
dash indexes dash auto. When you deploy your

87
00:04:59,050 --> 00:05:01,450
app to App Spot both those index configuration

88
00:05:01,450 --> 00:05:04,100
files will go up and any indexes defined

89
00:05:04,100 --> 00:05:06,160
in either of those files will be created

90
00:05:06,160 --> 00:05:08,220
and you'll be able to serve queries that

91
00:05:08,220 --> 00:05:11,100
use the filters defined in those index configuration files
