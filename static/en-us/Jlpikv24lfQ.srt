1
00:00:00,220 --> 00:00:04,549
Phase one is the pre data, or menu data. This is the first set of screens the

2
00:00:04,549 --> 00:00:08,742
user sees and needed to be loaded immediately. In GRITS, all of our menu assets

3
00:00:08,742 --> 00:00:12,774
are defined and positioned in HTML. So the browser will handle loading of these

4
00:00:12,774 --> 00:00:17,040
assets as part of parsing and processing the HTML file for presentation. Since

5
00:00:17,040 --> 00:00:20,064
these assets are defined in a DOM, their loading is handled by the browser's

6
00:00:20,064 --> 00:00:24,076
page parser and handler. So, we don't have to do anything explicit here. Once

7
00:00:24,076 --> 00:00:28,288
the user hits Join Game, we enter into a new phase. We must load all the

8
00:00:28,288 --> 00:00:31,387
scripting data that's used by the game. The data hasn't been defined by the

9
00:00:31,387 --> 00:00:34,555
DOM. As such, we need to issue commands to our asset loader to fetch that

10
00:00:34,555 --> 00:00:38,793
information and wait until it's been loaded. It's worth pointing out that the

11
00:00:38,793 --> 00:00:42,777
game scripting and menu scripting are really two separate code bases. Which is

12
00:00:42,777 --> 00:00:46,110
why we load the separately, as well. The scripting code will load up the object

13
00:00:46,110 --> 00:00:49,360
definitions, systems, physics, et cetera, and all of the other things we need

14
00:00:49,360 --> 00:00:54,000
to run the game. But not needed during menu browsing. So here is a list of

15
00:00:54,000 --> 00:00:58,648
scripts that we use inside of GRITS. What we'd like you to do is pass the array

16
00:00:58,648 --> 00:01:02,008
of file names, to the asset manager as a batch operation to load all of the

17
00:01:02,008 --> 00:01:06,922
data. After the batch is entirely loaded call window.alert to notify the player

18
00:01:06,922 --> 00:01:08,840
that the files are loaded
