1
00:00:00,440 --> 00:00:02,800
This probably seems like
a whole lot of magic.

2
00:00:02,800 --> 00:00:04,980
How did Gradle know where
to find your sources?

3
00:00:04,980 --> 00:00:07,610
And how did Gradle know what
compiler options to use?

4
00:00:07,610 --> 00:00:09,610
Or what directory to
put your build outputs?

5
00:00:09,610 --> 00:00:12,790
Gradle uses the philosophy of
convention over configuration, or

6
00:00:12,790 --> 00:00:17,080
as I prefer to think about it, Gradle
has sensible, opinionated defaults.

7
00:00:17,080 --> 00:00:20,200
You can lay out a Java project
however you please, but by default,

8
00:00:20,200 --> 00:00:22,940
Gradle will assume your
sources in source, main, java.

9
00:00:22,940 --> 00:00:25,660
And your test in source, test, java.

10
00:00:25,660 --> 00:00:28,140
And your outputs in the build directory.

11
00:00:28,140 --> 00:00:30,300
Gradle is married to that idea however,
and

12
00:00:30,300 --> 00:00:33,080
you can easily tell gradle that
your sources live somewhere else.

13
00:00:33,080 --> 00:00:35,580
There is a big upside to falling
into gradle defaults though.

14
00:00:35,580 --> 00:00:38,280
It means you can pick up any
other Gradle Java project and

15
00:00:38,280 --> 00:00:41,580
be pretty confident that you already
know how the project is laid out.

16
00:00:41,580 --> 00:00:44,120
It also means that if the project
deviates from the defaults,

17
00:00:44,120 --> 00:00:46,940
that configuration is
obvious in the build script.

18
00:00:46,940 --> 00:00:50,470
Gradle also does its best to
separate capabilities from opinions.

19
00:00:50,470 --> 00:00:54,290
The Java plugin actually first
applies the Java base plugin.

20
00:00:54,290 --> 00:00:57,930
The Java base plugin is what provides
the ability to compile Java, and

21
00:00:57,930 --> 00:01:00,300
adds the concept of source
sets to the project.

22
00:01:00,300 --> 00:01:03,130
However it doesn't add any
source sets in particular.

23
00:01:03,130 --> 00:01:05,720
The opinionated conventions
are applied by the Java plugin.
