1
00:00:00,046 --> 00:00:02,316
All right, today we're going to cover Lecture 3.

2
00:00:02,316 --> 00:00:05,057
This lecture is going to be on fundamental GPU algorithms.

3
00:00:05,057 --> 00:00:09,587
We're going to cover 3 different algorithms today: reduce, scan, and histogram.

4
00:00:09,587 --> 00:00:13,531
GPU computing is based on exploiting concurrency in a workload.

5
00:00:13,531 --> 00:00:17,765
Expressing that concurrency in a language like CUDA allows parallel implementations on the GPU

6
00:00:17,765 --> 00:00:21,269
that can take advantage of hundreds of simultaneous computations.

7
00:00:21,269 --> 00:00:24,887
The GPU is well suited to communication patterns that are completely independent,

8
00:00:24,887 --> 00:00:27,004
like the map operation.

9
00:00:27,004 --> 00:00:30,643
So in the map operation, we're going to have a number of computational elements,

10
00:00:30,643 --> 00:00:36,853
and each one of them will compute its output in parallel

11
00:00:36,853 --> 00:00:40,853
and completely separately without any communication whatsoever.

12
00:00:40,853 --> 00:00:45,057
It's also great at stencil or, more generally, gather operations like we saw in the last lecture.

13
00:00:45,057 --> 00:00:48,225
So we might have an item we want to compute here,

14
00:00:48,225 --> 00:00:53,829
and we're going to go out and fetch several items from memory and do our computation.

15
00:00:53,829 --> 00:00:57,743
But the computation of the next item

16
00:00:57,743 --> 00:01:01,007
is again completely separate from the computation of the first one.

17
00:01:01,007 --> 00:01:04,081
However, not all communications fall into these categories.

18
00:01:04,081 --> 00:01:06,451
Some of them have more complex computation patterns,

19
00:01:06,451 --> 00:01:09,737
such as all to one or all to many communication patterns.

20
00:01:09,737 --> 00:01:13,827
So, for instance, this element here depends on these 3 elements here,

21
00:01:13,827 --> 00:01:17,760
and the computation of this element here will depend on these 3 elements.

22
00:01:17,760 --> 00:01:20,758
And notice that there's some overlap here. So it's a little bit more complicated.

23
00:01:20,758 --> 00:01:23,460
So we'll cover these more complex computation patterns

24
00:01:23,460 --> 00:01:26,397
and 3 primitives that can implement them in today's lecture.

25
00:01:26,397 --> 00:01:31,604
These primitives are reduce, scan and histogram. And we'll also use them in this week's homework.
