1
00:00:00,280 --> 00:00:02,920
So going back to our mani-core challenges, we have

2
00:00:02,920 --> 00:00:05,500
seen that there are solutions to the increasing the

3
00:00:05,500 --> 00:00:09,050
on-chip coherence traffic as the number of cores grows.

4
00:00:09,050 --> 00:00:12,650
We have seen solutions to the increasing off-chip traffic

5
00:00:12,650 --> 00:00:15,726
as the number of cores grows. And we have

6
00:00:15,726 --> 00:00:18,094
also seen a way to have a directory that

7
00:00:18,094 --> 00:00:21,720
will support our on-chip network and that solution was,

8
00:00:21,720 --> 00:00:25,568
as we have recently seen, a distributed partial directory,

9
00:00:25,568 --> 00:00:28,824
which doesn't keep information for every possible

10
00:00:28,824 --> 00:00:31,892
block in memory. It only keeps information

11
00:00:31,892 --> 00:00:34,322
for a limited number of blocks, and

12
00:00:34,322 --> 00:00:38,453
has a replacement policy, and invalidates on-chip caches

13
00:00:38,453 --> 00:00:41,093
as a result of such replacements. The

14
00:00:41,093 --> 00:00:44,748
next mani-core challenge we will consider is that

15
00:00:44,748 --> 00:00:47,723
the power budget available for the chip,

16
00:00:47,723 --> 00:00:51,123
for example 100 watts that we can reasonably

17
00:00:51,123 --> 00:00:56,223
call from a chip of the area that we can manufacture is split among all the

18
00:00:56,223 --> 00:01:02,050
cores. So as the number of cores goes up, the power we can spend in each

19
00:01:02,050 --> 00:01:05,712
core goes down. And that means that the

20
00:01:05,712 --> 00:01:09,044
frequency and the voltage that we can use

21
00:01:09,044 --> 00:01:12,193
in each core goes down. And that means

22
00:01:12,193 --> 00:01:16,183
that if we have a single-threaded program it gets

23
00:01:16,183 --> 00:01:21,825
slower and slower, the more cores we have. because that single-threaded program,

24
00:01:21,825 --> 00:01:24,729
if we only had one core, would get the power budget of

25
00:01:24,729 --> 00:01:29,490
the entire chip. With, let's say, 64 cores, it gets

26
00:01:29,490 --> 00:01:34,950
only a 64th part of the power budget. So what do we do about this?
