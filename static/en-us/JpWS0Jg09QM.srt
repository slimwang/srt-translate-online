1
00:00:00,850 --> 00:00:03,300
Let's understand what exactly this shadow page table

2
00:00:03,300 --> 00:00:06,130
is and what it is. In many architectures,

3
00:00:06,130 --> 00:00:10,920
for example, Intel's X86 family, the CPU uses

4
00:00:10,920 --> 00:00:13,970
the page table for address translation. What that means

5
00:00:13,970 --> 00:00:17,760
is presented with the virtual address, The CPU

6
00:00:17,760 --> 00:00:19,740
gets to what? It first looks up the TLB

7
00:00:19,740 --> 00:00:22,290
to see if there is a match for

8
00:00:22,290 --> 00:00:25,890
the virtual page number contained in this virtual address.

9
00:00:25,890 --> 00:00:27,900
If there is a match, it's a hit and it

10
00:00:27,900 --> 00:00:30,970
can translate this virtual address to the physical address. If

11
00:00:30,970 --> 00:00:35,140
it is a miss, CPU knows word in memory the

12
00:00:35,140 --> 00:00:38,670
page table data structure is kept by the operating system. And

13
00:00:38,670 --> 00:00:41,650
therefore what it does, it goes to the page table,

14
00:00:41,650 --> 00:00:45,430
which is in main memory, and retrieves the specific entry

15
00:00:45,430 --> 00:00:48,030
which will give it the translation from the virtual page

16
00:00:48,030 --> 00:00:51,100
number to the physical page number. And once it gets that,

17
00:00:51,100 --> 00:00:56,420
It'll stash it in the TLB, as well, and be able to generate the physical address

18
00:00:56,420 --> 00:00:59,230
that is specified by this particular virtual address.

19
00:00:59,230 --> 00:01:02,510
So that's the way the CPU does the

20
00:01:02,510 --> 00:01:04,910
translation in many architectures. So in other words,

21
00:01:04,910 --> 00:01:08,080
both the TLB and the page table are

22
00:01:08,080 --> 00:01:11,560
data structures that the architecture uses for address

23
00:01:11,560 --> 00:01:16,170
translation. Page table is also a data structure that

24
00:01:16,170 --> 00:01:20,030
is set by the operating system for enabling the processor to

25
00:01:20,030 --> 00:01:23,420
do this translation. So in other words, the hardware page table

26
00:01:23,420 --> 00:01:27,450
is really the Shadow page table in the virtualized setting, if

27
00:01:27,450 --> 00:01:30,730
the architecture is going to use the page table for address translation.
