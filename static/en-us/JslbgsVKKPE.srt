1
00:00:00,300 --> 00:00:01,990
Well start with the house class.

2
00:00:01,990 --> 00:00:05,750
To begin with, the house class will
have three properties an address,

3
00:00:05,750 --> 00:00:06,750
represented as an MLS.

4
00:00:06,750 --> 00:00:07,660
sting.

5
00:00:07,660 --> 00:00:10,730
A bowl, indicating whether
the House has a hot tub or not.

6
00:00:10,730 --> 00:00:13,660
And an int,
representing the number of bedrooms.

7
00:00:13,660 --> 00:00:17,450
In the diagram here, I've depicted
objects, outlined in orange.

8
00:00:17,450 --> 00:00:21,620
>> To write our house class first we're
going to create a command line project.

9
00:00:21,620 --> 00:00:23,800
We'll be making a lot of these
throughout the course so

10
00:00:23,800 --> 00:00:26,810
do take the time to click
through these steps on your own.

11
00:00:26,810 --> 00:00:31,980
Under file click New, and
then Project instead of an iOS

12
00:00:31,980 --> 00:00:36,500
app this time choose OS X application
and then command line tool.

13
00:00:37,520 --> 00:00:39,640
And we'll call this house, and

14
00:00:39,640 --> 00:00:42,495
make sure Objective C is
the language that's chosen.

15
00:00:42,495 --> 00:00:47,240
With a command line tool, we can
focus on the code and not worry so

16
00:00:47,240 --> 00:00:48,700
much about the UI.

17
00:00:48,700 --> 00:00:51,490
To add the files for
the house class to the project,

18
00:00:51,490 --> 00:00:55,490
control click on the house folder just
like you would any other Xcode project.

19
00:00:55,490 --> 00:00:57,260
Go down to a new file.

20
00:00:57,260 --> 00:01:02,510
Choose OS10 as your source and
then coco class.

21
00:01:02,510 --> 00:01:04,360
And again, we'll call the class house.

22
00:01:05,489 --> 00:01:09,748
Now, in the project navigator on the
left you should see the files house.age

23
00:01:09,748 --> 00:01:11,430
and house.m.

24
00:01:11,430 --> 00:01:15,720
In Objective C every class is associated
with two files, a header file and

25
00:01:15,720 --> 00:01:17,460
an implementation file.

26
00:01:17,460 --> 00:01:21,910
The header file represents the public
interface and the implementation file

27
00:01:21,910 --> 00:01:26,550
holds method implementations as well as
any properties we'd like to be private.

28
00:01:26,550 --> 00:01:28,560
Open up the house.h file and

29
00:01:28,560 --> 00:01:32,460
you'll see that the house class
descends from the class in this object.

30
00:01:32,460 --> 00:01:35,830
All objective C classes
descend from this class.

31
00:01:35,830 --> 00:01:39,810
The class has been declared for
us using at @interface

32
00:01:39,810 --> 00:01:44,120
the name of the class colon and
then the name of the superclass.

33
00:01:44,120 --> 00:01:46,560
Let's go ahead and
declare our properties.

34
00:01:46,560 --> 00:01:49,870
For now, we'll do that in the header
file which means they'll be public and

35
00:01:49,870 --> 00:01:52,060
accessible outside the class.

36
00:01:52,060 --> 00:01:56,870
To do that I type at sign property
nonatomic then the class that

37
00:01:56,870 --> 00:02:00,650
the property belongs to which
in this case is an NSString, and

38
00:02:00,650 --> 00:02:02,690
asterisk to indicate
that this is a pointer.

39
00:02:02,690 --> 00:02:05,430
And then,
the name of the property address and

40
00:02:05,430 --> 00:02:08,669
of course top it all
off with a semi-colon.

41
00:02:08,669 --> 00:02:11,620
We'll add number of bedrooms,
and since a number of bedrooms is

42
00:02:11,620 --> 00:02:14,320
a primitive type, an int,
we don't use a pointer.

43
00:02:14,320 --> 00:02:17,000
And the same goes for
the BOOL, hasHotTub.
