1
00:00:00,200 --> 00:00:03,770
We've just shown how to position and orient a camera in world space. If we

2
00:00:03,770 --> 00:00:06,920
apply this matrix C to some camera object, the camera then gets placed in the

3
00:00:06,920 --> 00:00:11,671
world. However, we want exactly the opposite of this. We don't want to position

4
00:00:11,671 --> 00:00:14,090
the camera with respect to the world, we want to position the world with

5
00:00:14,090 --> 00:00:18,120
respect to the camera. Think about what's happening. We have some objects in a

6
00:00:18,120 --> 00:00:21,862
scene, they've perhaps had a number of modeling transforms applied to them. The

7
00:00:21,862 --> 00:00:25,414
objects are now all positioned in world space. What we want to do now is

8
00:00:25,414 --> 00:00:29,250
transform the world to the camera's frame of reference. Here's a camera and a

9
00:00:29,250 --> 00:00:33,431
model. Say we slide the camera five units along the world's x axis. From the

10
00:00:33,431 --> 00:00:36,097
camera's point of view, if we subtracted 5 from all the world coordinates,

11
00:00:36,097 --> 00:00:40,136
everything would be nicely oriented for the camera. The long and short here is

12
00:00:40,136 --> 00:00:42,332
that we use the inverse of the matrix that would position the camera in the

13
00:00:42,332 --> 00:00:47,418
world. Inverting basically says, no. It's all about me, the camera. Reorient

14
00:00:47,418 --> 00:00:51,784
everything with respect to me, me, me. This inverse matrix is called the view

15
00:00:51,784 --> 00:00:55,602
matrix. For this reason, this view matrix is sometimes written as the inverse

16
00:00:55,602 --> 00:00:59,155
of the camera matrix. The matrix that would move the camera to its place in

17
00:00:59,155 --> 00:01:02,762
world space. Another way to think of this view transform is simply as the very

18
00:01:02,762 --> 00:01:06,766
last modelling matrix in the chain. The M matrix represents all the transforms

19
00:01:06,766 --> 00:01:11,160
needed to get the object into world space. Modelling transforms. Now one last

20
00:01:11,160 --> 00:01:14,121
transform, the view matrix V takes the objects in world space and moves them

21
00:01:14,121 --> 00:01:18,720
into camera's frame of reference. If you deal with WebGL or OpenGL directly,

22
00:01:18,720 --> 00:01:22,100
you'll see these two matrices put together as a single matrix called the model

23
00:01:22,100 --> 00:01:26,451
view matrix. This matrix is applied to an object, immediately taking it from

24
00:01:26,451 --> 00:01:28,650
its own model space to view space.
