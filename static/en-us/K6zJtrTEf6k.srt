1
00:00:00,470 --> 00:00:05,150
What we can see here, is that the debugger caught inside the plot-points

2
00:00:05,150 --> 00:00:10,509
callback function, which gets called after our data gets loaded, that represents

3
00:00:10,509 --> 00:00:15,186
our attendance data for all the games, and just as standard you check if we

4
00:00:15,186 --> 00:00:20,351
use the console .table function, to display the first ten rows of our data set.

5
00:00:20,351 --> 00:00:23,670
We can see here that it looks the same even though some of

6
00:00:23,670 --> 00:00:25,269
the columns are smushed.

7
00:00:25,269 --> 00:00:29,862
But we have a game ID, attendance, team one, team two,

8
00:00:29,862 --> 00:00:36,012
goals, tie and so forth, so it appears that our data's loaded correctly.

9
00:00:36,012 --> 00:00:39,548
Stepping once more through to the key function.

10
00:00:39,548 --> 00:00:41,529
If we inspect what D is,

11
00:00:41,529 --> 00:00:46,879
we can see here that it's game ID one represents the first game,

12
00:00:46,879 --> 00:00:52,845
Italy versus the US and so forth with all the other data of our first row.

13
00:00:52,845 --> 00:00:57,725
If we call the getUTCFullYear function on our date object,

14
00:00:57,725 --> 00:01:01,834
we can see here that returns correctly 1934.

15
00:01:01,834 --> 00:01:05,570
Stepping through to our roll up function,

16
00:01:05,570 --> 00:01:10,357
we can see here [NOISE] that leaves represents an array.

17
00:01:10,357 --> 00:01:16,502
And here we can see there is an array of 17 objects.

18
00:01:16,502 --> 00:01:21,332
If we inspect each of these, we can see that it is one game, in this case,

19
00:01:21,332 --> 00:01:23,647
from the tournament in 1934.

20
00:01:23,647 --> 00:01:28,430
The second one is another game from the year 1934.

21
00:01:28,430 --> 00:01:31,040
So what gets past the roll up,

22
00:01:31,040 --> 00:01:36,110
is one group at a time of the grouping specified in the key function.

23
00:01:36,110 --> 00:01:41,350
And it is the job of the roll up function to distill, in this case,

24
00:01:41,350 --> 00:01:47,390
the 17 object or games into a single value, or a single aggregate.

25
00:01:47,390 --> 00:01:51,130
Going back to our editor, to fix up our roll up aggregate function,

26
00:01:51,130 --> 00:01:54,900
we need three things from each of these groups.

27
00:01:54,900 --> 00:01:59,490
The first of which is the sum of all the games attendances for a given year,

28
00:01:59,490 --> 00:02:04,400
the second is the longitude of where to draw the circle on our map,

29
00:02:04,400 --> 00:02:07,500
and the third is the latitude of where to draw this.

30
00:02:07,500 --> 00:02:12,600
To get the sum of the attendances, we'll be using the D3 sum method,

31
00:02:12,600 --> 00:02:17,520
which takes both sum array or list-like object, in our case,

32
00:02:17,520 --> 00:02:22,450
leaves, and an accessor function that defines what to actually sum.
