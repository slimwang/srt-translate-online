1
00:00:00,180 --> 00:00:02,932
This decision to make parts of the pipeline programmable is in fact one of the

2
00:00:02,932 --> 00:00:07,140
challenges of computer chip design. The designers have to decide how many

3
00:00:07,140 --> 00:00:10,040
transistors are dedicated to memory cache and registers, how many to

4
00:00:10,040 --> 00:00:14,811
instruction processing, and how many to dedicated algorithm logic. CPUs spend

5
00:00:14,811 --> 00:00:18,828
their transistors on memory caches and instruction processing. GPUs use to

6
00:00:18,828 --> 00:00:22,875
spend theirs almost entirely on algorithm logic. Which is also called

7
00:00:22,875 --> 00:00:26,352
fixed-function processing. What's great about the fixed-function logic is that

8
00:00:26,352 --> 00:00:30,227
it can be extremely fast while using less transistors and less power. The

9
00:00:30,227 --> 00:00:34,325
drawback of fixed-function logic is that you're locked in. The trend over the

10
00:00:34,325 --> 00:00:37,069
past decade or so has been to add to the GPU more and more instruction

11
00:00:37,069 --> 00:00:42,118
processing, in other words, more general programmability. In our pipeline the

12
00:00:42,118 --> 00:00:45,432
vertex and fragment shaders are programmable. Only those tests that are

13
00:00:45,432 --> 00:00:48,036
commonly performed and have large bang for the buck have survived as fixed

14
00:00:48,036 --> 00:00:51,950
function hardware in the pipeline. For example, triangle set up and

15
00:00:51,950 --> 00:00:55,490
rasterization as well as z depth testing are used all the time and do not

16
00:00:55,490 --> 00:00:58,660
normally need programmability.
