1
00:00:00,310 --> 00:00:03,440
Let's have a look at these relationships, beginning with associations.

2
00:00:04,680 --> 00:00:11,010
Associations are denoted by solid lines connecting two class rectangles.

3
00:00:11,010 --> 00:00:16,530
Here's an example of a UML class diagram containing two relationships and

4
00:00:16,530 --> 00:00:21,170
three classes. We have the Polygon class, the Point class, and

5
00:00:21,170 --> 00:00:26,260
a GraphicsBundle class. Between Polygon and Point,

6
00:00:27,450 --> 00:00:34,160
we have a association called Contains. That is a polygon contains points.

7
00:00:35,920 --> 00:00:40,800
The little filled triangle to the right of the word Contains means that,

8
00:00:40,800 --> 00:00:45,530
when reading aloud that particular relationship,

9
00:00:45,530 --> 00:00:49,700
you would read from left to right. So polygon contains point.

10
00:00:50,830 --> 00:00:55,220
You wouldn't say point contains polygon. You would say something like point is

11
00:00:55,220 --> 00:01:01,060
contained by polygon. The second association at the bottom,

12
00:01:01,060 --> 00:01:06,430
between GraphicsBundle and Polygon, isn't named directly. This is fine.

13
00:01:06,430 --> 00:01:12,960
We'll see that we can describe it using roles, which are ways of saying,

14
00:01:14,390 --> 00:01:19,890
giving similar information about how the association is relating the two,

15
00:01:19,890 --> 00:01:25,870
the two classes. There's lots of possible notational affordances for

16
00:01:25,870 --> 00:01:31,210
associations. You can have a name, as in contains.

17
00:01:33,480 --> 00:01:37,930
You can have association classes. They weren't shown in this diagram, but

18
00:01:37,930 --> 00:01:42,100
we'll look at them a little bit later. And you can have aggregation and

19
00:01:42,100 --> 00:01:46,715
composition. In the example, we saw both of these.

20
00:01:46,715 --> 00:01:52,450
The open diamond indicated aggregation and the closed,

21
00:01:52,450 --> 00:01:58,310
that is the filled diamond, indicated composition. In both cases,

22
00:01:58,310 --> 00:02:04,110
we are saying that the two classes are related by some kind of containment

23
00:02:04,110 --> 00:02:12,380
relationship, that is a polygon is made up of points. We saw reading direction,

24
00:02:12,380 --> 00:02:19,570
that was the filled, filled triangle. We can also express Navigability,

25
00:02:19,570 --> 00:02:25,060
which is the appearance of an arrowhead on one end of, or

26
00:02:25,060 --> 00:02:30,450
both ends of the association line. This indicates that the primary

27
00:02:31,600 --> 00:02:37,540
access pattern for those classes is in the direction of the arrow.

28
00:02:37,540 --> 00:02:42,550
That is, we are going to be going normally from polygons to their points and

29
00:02:42,550 --> 00:02:48,760
not in the other direction. You can express multiplicity, in the,

30
00:02:48,760 --> 00:02:56,420
diagram we saw star. We saw 3 dot dot star. Star means any number of,

31
00:02:56,420 --> 00:03:01,860
instances. 3 dot dot star means between 3 and any number of instances.

32
00:03:02,950 --> 00:03:08,220
We also saw a property ordered which indicates that at least for

33
00:03:08,220 --> 00:03:13,690
the case of the polygon and its points, those points are in a particular order.

34
00:03:13,690 --> 00:03:16,490
They might be, for example, in clockwise order.

35
00:03:17,560 --> 00:03:22,690
Not shown in the example diagram is the ability in UML to, UML class model

36
00:03:22,690 --> 00:03:27,800
diagrams to express associations which involve more than two classes.

37
00:03:29,570 --> 00:03:34,840
In our text browser example, there were three classes involved and

38
00:03:34,840 --> 00:03:38,940
we used a rhombus into which the various lines,

39
00:03:41,180 --> 00:03:45,150
the various lines come in to indicate all the participants within that

40
00:03:45,150 --> 00:03:50,450
particular association. We saw also the fact that you could have role names.

41
00:03:50,450 --> 00:03:58,190
The word bundle, adjacent to the graphics bundle class,

42
00:03:58,190 --> 00:04:04,220
indicates the graphics bundle is playing the role of bundle in that particular

43
00:04:04,220 --> 00:04:09,500
association. You can have these role names on either or

44
00:04:09,500 --> 00:04:13,440
both ends of the association line, or you don't need to have them at all.

45
00:04:14,450 --> 00:04:19,970
Also not shown, are the fact that you can express qualification.

46
00:04:19,970 --> 00:04:25,380
You can think of qualification as this as indicating what are the keys

47
00:04:25,380 --> 00:04:30,600
into the set of instances. We'll see an example of that in a minute. And

48
00:04:30,600 --> 00:04:36,370
you can express also, certain, Constraints on the association. For example,

49
00:04:36,370 --> 00:04:39,100
that they're ordered, that they're frozen, that is,

50
00:04:39,100 --> 00:04:44,820
the association can't change, that you can only add things to it and so on.
