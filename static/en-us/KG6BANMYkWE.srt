1
00:00:00,190 --> 00:00:04,154
The most common way to construct a hash table on a CPU works as follows.

2
00:00:04,154 --> 00:00:07,777
So we have a bunch of buckets here, and we have a hash function h.

3
00:00:07,777 --> 00:00:12,720
And this hash function takes a key and maps that key into one of those buckets.

4
00:00:12,720 --> 00:00:18,452
So if the the hash function of the key k returns 0, h of k is 0,

5
00:00:18,452 --> 00:00:21,263
then that key is associated with bucket 0.

6
00:00:21,263 --> 00:00:25,561
If h of k is 1, then that key is associated with bucket 1 and so on.

7
00:00:25,561 --> 00:00:30,240
Within a bucket, we store a bunch of items as a linked list, and this is called chaining.

8
00:00:30,240 --> 00:00:34,571
So we might have multiple items in this bucket, multiple keys.

9
00:00:34,571 --> 00:00:37,138
So key 12, key 29, key 123

10
00:00:37,138 --> 00:00:39,675
all have a hash function that's equal to 1,

11
00:00:39,675 --> 00:00:43,779
so they're placed in bucket 1, and we store them as this chained, linked list.

12
00:00:43,779 --> 00:00:46,438
Then when we want to look up a key, we take that key.

13
00:00:46,438 --> 00:00:48,619
We run it through the hash function

14
00:00:48,619 --> 00:00:51,289
to get a particular value out of the hash function

15
00:00:51,289 --> 00:00:55,081
that's going to refer us to a particular bucket, so we have this key.

16
00:00:55,081 --> 00:00:56,929
It's going to return; oh, he's in bucket 1.

17
00:00:56,929 --> 00:01:00,240
Then we will look through all these chained items

18
00:01:00,240 --> 00:01:03,885
to find the key that we're looking for.
