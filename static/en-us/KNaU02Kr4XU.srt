1
00:00:00,190 --> 00:00:03,850
To set a Matrix4 in creation, you can pass the values for the matrix in the

2
00:00:03,850 --> 00:00:07,804
constructor function. These values happen to set the matrix to perform

3
00:00:07,804 --> 00:00:12,316
translation, moving an object to the position 12, 16, negative 5. Note that this

4
00:00:12,316 --> 00:00:16,389
initialization is purposely made to look like column major form. Where the

5
00:00:16,389 --> 00:00:20,660
translation values are on the right. However, this order is not how the data is

6
00:00:20,660 --> 00:00:25,860
stored in the matrix itself. Looking at the order here, 1, 0, 0, 12. You might

7
00:00:25,860 --> 00:00:32,540
expect to see that in the matrix itself. But instead you see 1, 0, 0, 0. That's

8
00:00:32,540 --> 00:00:37,490
because as we've pointed out before the translation values go at the very end of

9
00:00:37,490 --> 00:00:42,327
the matrix as show here. Since translation is a common transform 3JS provides a

10
00:00:42,327 --> 00:00:46,720
function to set a translation matrix called makeTranslation. You give the

11
00:00:46,720 --> 00:00:51,230
position and it fills in the matrix for you. So say we have our robot arm, in

12
00:00:51,230 --> 00:00:56,444
object 3D. To apply a matrix 4D to an object 3D, the most direct way of doing so

13
00:00:56,444 --> 00:01:01,466
is to set the local matrix on the object itself, however you also need to set

14
00:01:01,466 --> 00:01:06,576
matrix auto update to false. Remember that 3JS has its own transform system

15
00:01:06,576 --> 00:01:12,112
built in. Position, Rotation and Scale. By setting matrix auto update to false

16
00:01:12,112 --> 00:01:16,630
you say, don't use this, but use this matrix instead.
