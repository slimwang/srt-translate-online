1
00:00:00,000 --> 00:00:05,000
Here's the answer to our tricky word quiz. Let's go through these answers one by one.

2
00:00:05,000 --> 00:00:10,000
First, every infection can be traced back to defect that causes it.

3
00:00:10,000 --> 00:00:14,000
This is actually correct because if we have an infection if we have

4
00:00:14,000 --> 00:00:20,000
an error in the program state that is, we can find out which defect causes it namely

5
00:00:20,000 --> 00:00:24,000
the piece in the program which got the same state as input

6
00:00:24,000 --> 00:00:28,000
and which produced an erroneous state of infection as output.

7
00:00:28,000 --> 00:00:34,000
Second, every execution of a defect causes an infection. That's actually not the case.

8
00:00:34,000 --> 00:00:39,000
It may will be that there's a defect in the code, which operates only under certain circumstances,

9
00:00:39,000 --> 00:00:43,000
which works fine most of the time, and only under certain circumstances produces an infection.

10
00:00:43,000 --> 00:00:47,000
So this is not correct. Every infection ends in a failure.

11
00:00:47,000 --> 00:00:51,000
If only it were so, then it would be far easier to make a program defect free.

12
00:00:51,000 --> 00:00:57,000
Note, like real infections, they can die out before they ever, ever cause real harm.

13
00:00:57,000 --> 00:01:01,000
Finally, every defect can cause a failure. How? That's tricky.

14
00:01:01,000 --> 00:01:05,000
Remember a defect is an error in the code,

15
00:01:05,000 --> 00:01:09,000
failure is an error in the execution and infection is an error in the state.

16
00:01:09,000 --> 00:01:14,000
A defect is an error in the code and you can have an error in the code

17
00:01:14,000 --> 00:01:19,000
even in code that's never executed or in code that's actually unreachable.

18
00:01:19,000 --> 00:01:21,000
How can be it be an error if it can never be executed.

19
00:01:21,000 --> 00:01:26,000
Well, it may well be that over time when the program is maintained,

20
00:01:26,000 --> 00:01:31,000
the error actually becomes executable and then it can actually cause a failure.

21
00:01:31,000 --> 00:01:35,000
It is not the case that every defect always can cause a failure because defects

22
00:01:35,000 --> 00:01:39,000
cannot be an unreachable code and therefore, they may not cause a failure.

23
00:01:39,000 --> 00:01:41,000
So this is not correct just as well.
