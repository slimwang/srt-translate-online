1
00:00:00,540 --> 00:00:02,200
All right, now it's your turn.

2
00:00:03,242 --> 00:00:06,590
Implement AppBar scrolling into
the forecast fragment layout

3
00:00:06,590 --> 00:00:08,730
when in phone portrait mode.

4
00:00:08,730 --> 00:00:12,910
First, we're going to add the design
support library into app dependencies.

5
00:00:12,910 --> 00:00:16,970
And then we do all the rest of
the work inside of fragment_main.xml.

6
00:00:16,970 --> 00:00:20,370
We begin by converting the base
view to a frame layout.

7
00:00:20,370 --> 00:00:22,550
You might be able to use
Cordinarily out here, but

8
00:00:22,550 --> 00:00:24,350
I ran into life cycle
problems when I tried that.

9
00:00:25,480 --> 00:00:28,920
Wrap the toolbar in RecyclerView
with a Parent Coordinator Layout and

10
00:00:28,920 --> 00:00:32,270
then wrap just a toolbar
with a Parent AppBar layout.

11
00:00:32,270 --> 00:00:35,180
Add the scrolling view
behavior to the RecyclerView.

12
00:00:35,180 --> 00:00:37,640
There is a string defined for
this in the design's support library.

13
00:00:38,680 --> 00:00:40,420
Add the scroll flags to the toolbar.

14
00:00:41,430 --> 00:00:45,910
I chose scroll or with Enter Always
to get the behavior I wanted.

15
00:00:45,910 --> 00:00:48,800
Finally, we anchored the empty
view to the RecyclerView,

16
00:00:48,800 --> 00:00:52,840
taking advantage of the frame layout
type properties of Cordinarily Layout.

17
00:00:52,840 --> 00:00:56,970
I also set Anchor Gravity to fill,
so the empty view fills the space.
