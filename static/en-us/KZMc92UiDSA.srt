1
00:00:00,000 --> 00:00:02,000
Sounds like the system is getting better there.

2
00:00:02,000 --> 00:00:10,000
Now, my understanding is this rat's
nest of computers is also gone.

3
00:00:10,000 --> 00:00:13,000
Right. So in the process of
moving to Cassandra,

4
00:00:13,000 --> 00:00:21,000
the system for the precomputed queries became
--a lot more of them were mutated in place.

5
00:00:21,000 --> 00:00:29,000
What the app will do when say, you remove
something from your saved links

6
00:00:29,123 --> 00:00:33,000
it has to be taken out of your saved page.

7
00:00:33,000 --> 00:00:37,646
Is it will fetch from Cassandra the
precomputed list of your saved page,

8
00:00:37,646 --> 00:00:42,000
remove the item from it that you didn't want anymore,
and then put it back into Cassandra,

9
00:00:42,000 --> 00:00:45,000
and it has to lock around that.

10
00:00:45,000 --> 00:00:49,000
But the advantage there is it doesn't
have to just re-run the entire query

11
00:00:49,000 --> 00:00:50,538
because it will only making one little change.

12
00:00:50,538 --> 00:00:54,000
So, instead of sending this
complex query to a machine

13
00:00:54,000 --> 00:00:56,000
that's already doing a lots of complex queries,

14
00:00:56,000 --> 00:01:02,000
You just smartly update the--. >>Right. >>
The ultimate product of this is a cache.

15
00:01:02,000 --> 00:01:04,000
Yes. >>So you just update the cache directly?

16
00:01:04,000 --> 00:01:08,000
Right. There are a few types of queries
that that's not possible with

17
00:01:08,000 --> 00:01:11,000
and those are things like your top links of this hour.

18
00:01:11,000 --> 00:01:14,000
So this all goes away? >>Yes.

19
00:01:14,000 --> 00:01:17,000
Yes. I'm just going to make this go away.

20
00:01:17,000 --> 00:01:22,000
We do still use "Q." >>We still have a "Q".
>>But not for this stuff. >>Okay.

21
00:01:22,000 --> 00:01:25,000
The top links of this hour that kind of stuff instead

22
00:01:25,000 --> 00:01:29,000
is recomputed enmasse for the
entire site using MapReduce,

23
00:01:29,000 --> 00:01:34,000
and what that does is it will dump every link
that was submitted in the last hour

24
00:01:34,000 --> 00:01:36,200
and it like groups them up and
figures out where they should go

25
00:01:36,200 --> 00:01:41,000
and them just completely overwrites
those listings every 10-15 minutes.

26
00:01:41,000 --> 00:01:43,000
We haven't talked about MapReduce yet.

27
00:01:43,000 --> 00:01:48,000
The first question I have for you is the data that you're mapping over, where is that stored?

28
00:01:48,000 --> 00:01:50,000
It's coming out of Postgres.

29
00:01:50,000 --> 00:01:58,000
So you have a job that takes that out of Postgres
and then runs the big job on it? >>Right.

30
00:01:58,000 --> 00:02:02,000
Now, is this the same set of machines
that you would use for--

31
00:02:02,000 --> 00:02:05,000
We have one slave for links dedicated.

32
00:02:05,000 --> 00:02:12,000
Okay. So, there's like another little replica
that is only read for dumps.

33
00:02:12,000 --> 00:02:15,107
Yeah. >>Now, what about the comments
and votes in these other guys?

34
00:02:15,107 --> 00:02:19,000
There is no actual queries that need that.
>>Ah. Good point, good point.

35
00:02:19,000 --> 00:02:25,000
There is this special links thing and then
you run MapReduce jobs on this

36
00:02:25,000 --> 00:02:29,000
ever so often and than that
get stored in Cassandra.
