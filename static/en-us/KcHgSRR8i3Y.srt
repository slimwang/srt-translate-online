1
00:00:00,390 --> 00:00:05,020
Let's start by talking about how
Android Wear deals with notifications.

2
00:00:05,020 --> 00:00:08,230
When an Android handheld and
Android Wear device are connected,

3
00:00:08,230 --> 00:00:11,640
the handheld automatically pushes
notifications to the wearable.

4
00:00:11,640 --> 00:00:12,550
On the wearable,

5
00:00:12,550 --> 00:00:16,700
each notification appears as
a new card in the context stream.

6
00:00:16,700 --> 00:00:20,000
Notifications are shown on
the Android Wear device automatically

7
00:00:20,000 --> 00:00:22,260
with no extra work
required by the developer.

8
00:00:22,260 --> 00:00:25,210
If you want to give the best
wearable experience to your users,

9
00:00:25,210 --> 00:00:29,540
you can add wearable specific extensions
with just a few extra lines of code.

10
00:00:29,540 --> 00:00:33,270
Let's start off by showing how regular
Android notifications work on a phone

11
00:00:33,270 --> 00:00:35,020
by loading and running a sample.

12
00:00:35,020 --> 00:00:37,780
We'll use the sample basic
notifications for this.

13
00:00:37,780 --> 00:00:40,840
We'll use the same sample later
on in the Android auto messaging

14
00:00:40,840 --> 00:00:42,050
lesson as well.

15
00:00:42,050 --> 00:00:46,420
Go to File > Import Sample,
and search for notification.

16
00:00:46,420 --> 00:00:48,870
You'll see there's basic
notifications here.

17
00:00:48,870 --> 00:00:51,230
Click on that, and then Next.

18
00:00:51,230 --> 00:00:53,390
You can leave everything
as the default values.

19
00:00:53,390 --> 00:00:56,070
Click Finish and it'll create
a new project on your machine

20
00:00:56,070 --> 00:00:58,790
based on the basic notifications sample.

21
00:00:58,790 --> 00:01:00,460
Now let's build and run the sample.

22
00:01:00,460 --> 00:01:04,560
By clicking the green Play button here,
it runs the assemble debug task to

23
00:01:04,560 --> 00:01:06,980
compile it and
then it asks where to run it.

24
00:01:06,980 --> 00:01:08,940
So we select our phone,
which is already connected,

25
00:01:08,940 --> 00:01:12,870
and then we hit OK to begin
the installation and start running it.

26
00:01:12,870 --> 00:01:14,580
You can see the sample
has started on the phone.

27
00:01:14,580 --> 00:01:16,350
We'll walk through the code shortly.

28
00:01:16,350 --> 00:01:18,880
We click do it to generate
the notification and

29
00:01:18,880 --> 00:01:22,150
you can see it appear here
in the notification shade.

30
00:01:22,150 --> 00:01:24,750
When you click on it,
you'll see it launch a web browser and

31
00:01:24,750 --> 00:01:25,780
open up a URL for

32
00:01:25,780 --> 00:01:29,540
the notification documentation, which is
what the sample was configured to do.

33
00:01:29,540 --> 00:01:32,650
Now lets go back and click Do It again.

34
00:01:32,650 --> 00:01:34,870
This will regenerate a new notification.

35
00:01:34,870 --> 00:01:36,860
And if we look at our
Android wear devices,

36
00:01:36,860 --> 00:01:40,460
you'll see both of them show
a notification from the application.

37
00:01:40,460 --> 00:01:42,360
This all happens automatically.

38
00:01:42,360 --> 00:01:45,700
We can make the intent trigger by
clicking Open on the phone and

39
00:01:45,700 --> 00:01:48,740
you'll see it appear here
just like it did before.

40
00:01:48,740 --> 00:01:52,490
The nice thing is that Android wear
takes care of all of this for us.

41
00:01:52,490 --> 00:01:55,010
So now I want you to
replicate the same steps.

42
00:01:55,010 --> 00:01:58,210
Run the sample in a phone or emulator
and check that you can get it to work.
