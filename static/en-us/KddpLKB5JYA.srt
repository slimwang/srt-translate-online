1
00:00:00,000 --> 00:00:03,000
Let's move on to a new topic that we're promptly going to forget.

2
00:00:03,000 --> 00:00:05,000
This is called Joins.

3
00:00:05,000 --> 00:00:10,000
So this is a type of SQL query that you can use that involves multiple tables.

4
00:00:10,000 --> 00:00:12,000
Remember we have our Link table.

5
00:00:12,000 --> 00:00:15,000
We've been working with that this entire lecture.

6
00:00:15,000 --> 00:00:17,000
It looks something like this.

7
00:00:17,000 --> 00:00:21,000
It's got the columns--ID and Votes and the User ID Submitted,

8
00:00:21,000 --> 00:00:23,000
Data, Title, URL.

9
00:00:23,000 --> 00:00:25,000
So let's make up some values for these.

10
00:00:25,000 --> 00:00:29,000
Now, what I want to talk about right now is this User ID column.

11
00:00:29,000 --> 00:00:31,000
Remember I mentioned before

12
00:00:31,000 --> 00:00:34,000
that if we had another table called Users

13
00:00:34,000 --> 00:00:36,000
that looks something like this--

14
00:00:36,000 --> 00:00:41,000
it's got a column for ID and a column for Name and Password and Date--

15
00:00:41,000 --> 00:00:43,000
the User ID in the Links table

16
00:00:43,000 --> 00:00:47,000
refers to the ID column of the User table.

17
00:00:47,000 --> 00:00:49,000
This should always match up,

18
00:00:49,000 --> 00:00:54,000
because you want everything in your system to be consistent.

19
00:00:54,000 --> 00:00:57,000
So for every unique User ID in the Links table,

20
00:00:57,000 --> 00:01:00,000
there should be a valid user in the User table.

21
00:01:00,000 --> 00:01:03,000
Now, one of the things we can do in most SQL databases is something called a Join,

22
00:01:03,000 --> 00:01:07,000
which is a SQL statement that involves two tables.

23
00:01:07,000 --> 00:01:10,000
So we have a basic SQL statement that looks something like this.

24
00:01:10,000 --> 00:01:13,000
So select from the Link table,

25
00:01:13,000 --> 00:01:15,000
where user ID equals 22.

26
00:01:15,000 --> 00:01:18,000
So that would return all of the links submitted by this user,

27
00:01:18,000 --> 00:01:21,000
assuming there's more than one.

28
00:01:21,000 --> 00:01:23,000
What if we didn't know the user's ID?

29
00:01:23,000 --> 00:01:26,000
What if instead we wanted to select from the link table

30
00:01:26,000 --> 00:01:30,000
all of the links submitted by users with the name Spez?

31
00:01:30,000 --> 00:01:33,000
Well, there's a couple of ways you could do that.

32
00:01:33,000 --> 00:01:36,000
You could first do a lookup for

33
00:01:36,000 --> 00:01:40,000
what is the user ID of the person named Spez,

34
00:01:40,000 --> 00:01:43,000
grab this user ID, then run the SQL query.

35
00:01:43,000 --> 00:01:46,000
So you could do two queries. It might look something like this.

36
00:01:46,000 --> 00:01:51,000
So I could run one query to get the ID from the user table

37
00:01:51,000 --> 00:01:53,000
for the user whose name equals Spez,

38
00:01:53,000 --> 00:01:57,000
and then we can use that ID in a second query.

39
00:01:57,000 --> 00:02:00,000
But there's another way of doing this query.

40
00:02:00,000 --> 00:02:03,000
I could, instead of running two queries,

41
00:02:03,000 --> 00:02:05,000
combine this into one query.

42
00:02:05,000 --> 00:02:09,000
So instead of From Link, we can change this to Link, User--

43
00:02:09,000 --> 00:02:11,000
which will scan both tables.

44
00:02:11,000 --> 00:02:14,000
And we don't want to get all of the attributes.

45
00:02:14,000 --> 00:02:16,000
We want to preserve the same results from the query,

46
00:02:16,000 --> 00:02:18,000
so we don't want to select * from link, user--

47
00:02:18,000 --> 00:02:20,000
we want to select link.*,

48
00:02:20,000 --> 00:02:24,000
which will return just the columns from the link table.

49
00:02:24,000 --> 00:02:27,000
Then we want to change our Where clause

50
00:02:27,000 --> 00:02:29,000
to link these two tables.

51
00:02:29,000 --> 00:02:34,000
So where user_id=user.id.

52
00:02:34,000 --> 00:02:39,000
I could have also said link.user_id

53
00:02:39,000 --> 00:02:41,000
so we include the table names in all of our properties.

54
00:02:41,000 --> 00:02:43,000
That will make things more clear.

55
00:02:43,000 --> 00:02:46,000
I need to add another clause to this.

56
00:02:46,000 --> 00:02:49,000
And user.name = Spez.

57
00:02:49,000 --> 00:02:51,000
So what does this do?

58
00:02:51,000 --> 00:02:54,000
Select all of the columns from link--link.*--

59
00:02:54,000 --> 00:02:57,000
from the link table and the user table,

60
00:02:57,000 --> 00:03:00,000
where user.name=Spez

61
00:03:00,000 --> 00:03:04,000
and link.userid=user.id.

62
00:03:04,000 --> 00:03:07,000
And what this does is what's called a Join Query.

63
00:03:07,000 --> 00:03:10,000
And your SQL engine will decide

64
00:03:10,000 --> 00:03:13,000
which of these tables to scan first,

65
00:03:13,000 --> 00:03:16,000
and in this case, it will probably do the user table first.

66
00:03:16,000 --> 00:03:19,000
So it will find the username Spez, and then it will find all the links

67
00:03:19,000 --> 00:03:22,000
whose user_id property

68
00:03:22,000 --> 00:03:24,000
matches the ID field in the User table.

69
00:03:24,000 --> 00:03:26,000
So this is a handy thing.

70
00:03:26,000 --> 00:03:29,000
Now, the reason I said we were going to learn something we were promptly going to forget

71
00:03:29,000 --> 00:03:32,000
is because we don't use joins very often

72
00:03:32,000 --> 00:03:35,000
when writing web software.

73
00:03:35,000 --> 00:03:40,000
It's something you'll see in almost every SQL tutorial,

74
00:03:40,000 --> 00:03:44,000
but for reasons we'll explain later in this lecture,

75
00:03:44,000 --> 00:03:47,000
joins don't work very well for the types of problems we're going to be solving

76
00:03:47,000 --> 00:03:49,000
writing web stuff.

77
00:03:49,000 --> 00:03:52,000
But you should be familiar with them; you should know what they are.

78
00:03:52,000 --> 00:03:55,000
You may be writing something that requires this,

79
00:03:55,000 --> 00:03:58,000
but they're often--well, as I said,

80
00:03:58,000 --> 00:04:01,000
we'll get into this later in the lecture--why we don't want to use joins.

81
00:04:01,000 --> 00:04:05,000
Let's move on to something new.
