1
00:00:00,310 --> 00:00:02,300
Let's take a closer look if we have solved

2
00:00:02,300 --> 00:00:05,950
the problem. First of all, virtual machines are nowadays

3
00:00:05,950 --> 00:00:09,100
a standard offering by any cloud service provider. You

4
00:00:09,100 --> 00:00:11,780
rent any number of virtual machines. And you pay by

5
00:00:11,780 --> 00:00:14,650
the hour, or minute or so. This is called

6
00:00:14,650 --> 00:00:18,500
IaaS, or Infrastructure as a Service. This is, because a

7
00:00:18,500 --> 00:00:21,630
computer and therefore also a virtual machine, can be

8
00:00:21,630 --> 00:00:25,940
considered infrastructure today. So getting back to our original picture.

9
00:00:25,940 --> 00:00:29,200
Problem solved, right? We could use standard virtual

10
00:00:29,200 --> 00:00:32,990
machines from any cloud service provider. And achieve unlimited

11
00:00:32,990 --> 00:00:37,110
scalability by distributing the execution of our application, across

12
00:00:37,110 --> 00:00:39,820
these virtual machines. On a high level, it may

13
00:00:39,820 --> 00:00:41,920
appear so. But let's look at what you

14
00:00:41,920 --> 00:00:45,040
need to do to actually realize this architecture. And

15
00:00:45,040 --> 00:00:47,600
as it turns out, creating this architecture for your

16
00:00:47,600 --> 00:00:52,030
application is a very complicated and resource intensive problem.

17
00:00:52,030 --> 00:00:56,030
Let's look at some of the things you need to think about and take care of.

18
00:00:56,030 --> 00:00:59,070
VM Management. Starting and stopping the virtual machine.

19
00:00:59,070 --> 00:01:01,510
Operating system images. Software

20
00:01:01,510 --> 00:01:05,250
management. Installing, patching and upgrading.

21
00:01:05,250 --> 00:01:08,350
A powerful web server. Installing it and configuring

22
00:01:08,350 --> 00:01:11,350
it for the correct settings. A distributed database

23
00:01:11,350 --> 00:01:13,180
where you can read and write data, from

24
00:01:13,180 --> 00:01:16,980
all of your virtual machines. A distributed file system,

25
00:01:16,980 --> 00:01:20,380
where you can read and write data which is accessible from all your virtual

26
00:01:20,380 --> 00:01:24,340
machines. Application monitoring, with a consolidated view

27
00:01:24,340 --> 00:01:27,250
of any problems occurring in your distributed execution

28
00:01:27,250 --> 00:01:31,900
environment. Availability including data replication, hardware software

29
00:01:31,900 --> 00:01:36,030
resilience, geographic disaster recovery strategies. Back ups, recovery,

30
00:01:36,030 --> 00:01:39,350
automatic fail overs, et cetera. Security set

31
00:01:39,350 --> 00:01:42,900
up and management in your distributed execution environment.

32
00:01:42,900 --> 00:01:45,790
And load balancing. How to spread the load across the

33
00:01:45,790 --> 00:01:49,430
VMs, including application level session management. And all of the

34
00:01:49,430 --> 00:01:51,400
other things that we did not have space to list

35
00:01:51,400 --> 00:01:55,250
here. As you can see, this is an extremely complex problem

36
00:01:55,250 --> 00:01:58,000
to solve in a scalable way. So even though our

37
00:01:58,000 --> 00:02:00,510
solution looked good on a high level. We have now

38
00:02:00,510 --> 00:02:04,450
created an architecture that requires a monumental engineering effort to

39
00:02:04,450 --> 00:02:07,620
realize. At the same time, as you have limited amount of

40
00:02:07,620 --> 00:02:11,470
time and resources. Remember that we started the service

41
00:02:11,470 --> 00:02:14,100
side history, by looking at the server sitting under the

42
00:02:14,100 --> 00:02:17,800
office desk. And sadly enough, for many projects we

43
00:02:17,800 --> 00:02:20,590
have reached a present day. These are the challenges many

44
00:02:20,590 --> 00:02:23,070
projects are facing today, when trying to build scalable

45
00:02:23,070 --> 00:02:26,610
systems. Now, let's do a reality check with a question

46
00:02:26,610 --> 00:02:30,140
for you. Since you have limited time and resources, select

47
00:02:30,140 --> 00:02:33,300
three of these problems you would prioritize over the others.
