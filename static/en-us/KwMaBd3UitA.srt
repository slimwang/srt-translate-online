1
00:00:00,340 --> 00:00:02,895
>> So, we saw before when we looked at AND and

2
00:00:02,895 --> 00:00:05,377
OR versus XOR that in the case of AND and OR

3
00:00:05,377 --> 00:00:08,077
we only needed two nodes but in the case of XOR

4
00:00:08,077 --> 00:00:11,928
we needed three. The difference between two and three is not that

5
00:00:11,928 --> 00:00:14,474
big, but it actually does turn out to be big if

6
00:00:14,474 --> 00:00:18,986
you start thinking about having more than simply two attributes. So, let's

7
00:00:18,986 --> 00:00:22,850
look at generalized versions of OR and generalized versions of XOR

8
00:00:22,850 --> 00:00:25,541
and see if we can see how the size of the decision

9
00:00:25,541 --> 00:00:33,130
tree grows differently. So in the case of an n version of OR. That is we have n

10
00:00:33,130 --> 00:00:35,730
attributes as opposed to just two. We might call

11
00:00:35,730 --> 00:00:40,320
that the any function. That is a function were any

12
00:00:40,320 --> 00:00:42,700
of the variables are true then the output is

13
00:00:42,700 --> 00:00:45,110
true. We can see that the decision tree for that

14
00:00:45,110 --> 00:00:48,540
has a very particular and kind of interesting form.

15
00:00:48,540 --> 00:00:51,430
Any ideas Michael about what that decision tree looks like?

16
00:00:51,430 --> 00:00:53,800
>> So, well. So going off of the way you described

17
00:00:53,800 --> 00:00:56,550
OR in the two case. We can start with that. And you.

18
00:00:56,550 --> 00:01:01,480
You pick Pick one of the variables. And if its true

19
00:01:01,480 --> 00:01:04,700
then yeah. Any of them is true since the leaf is true.

20
00:01:04,700 --> 00:01:06,500
>> What happens if its false?

21
00:01:06,500 --> 00:01:11,970
>> Well, then we have to check what everything that's left. [LAUGH]

22
00:01:11,970 --> 00:01:14,470
So then we move on to one of the other attributes like A2.

23
00:01:14,470 --> 00:01:15,050
>> mm hm.

24
00:01:15,050 --> 00:01:16,903
>> And again, if it's

25
00:01:16,903 --> 00:01:22,180
true, it's true and if it's false then we don't know.

26
00:01:22,180 --> 00:01:24,600
>> Look at A3.

27
00:01:24,600 --> 00:01:26,380
>> Good idea.

28
00:01:29,070 --> 00:01:30,820
This could take some time.

29
00:01:30,820 --> 00:01:33,210
>> Yes, oh that was actually an interesting point. Let's

30
00:01:33,210 --> 00:01:37,270
say if there were only three, we would be done. Right?

31
00:01:37,270 --> 00:01:38,950
>> Right.

32
00:01:38,950 --> 00:01:40,590
>> But wait, what if there were five?

33
00:01:40,590 --> 00:01:42,000
>> Then we need one more node.

34
00:01:43,130 --> 00:01:44,260
>> What if there were n?

35
00:01:44,260 --> 00:01:45,960
>> Then we need n minus 4 more nodes.

36
00:01:47,520 --> 00:01:49,260
>> Right, so what you end up with in

37
00:01:49,260 --> 00:01:54,080
this case is a nice little structure around the

38
00:01:54,080 --> 00:01:56,630
decision tree. And how many nodes do we need?

39
00:01:57,900 --> 00:02:00,090
>> Looks like one for each attribute, so that would be n.

40
00:02:00,090 --> 00:02:05,040
>> n nodes, exactly right. So we have a term for this

41
00:02:05,040 --> 00:02:09,350
sort of thing, the size of the decision tree is, in fact, linear.

42
00:02:12,450 --> 00:02:16,310
In n. And that's for any. Now what about an n version of XOR?

43
00:02:16,310 --> 00:02:24,750
>> Mm. So XOR is, if one is true but the other one's not true then it's true.

44
00:02:24,750 --> 00:02:26,560
And if they're both true. Yeah I don't. It's

45
00:02:26,560 --> 00:02:29,960
not clear headed. Generalize that. So why not hmm.

46
00:02:29,960 --> 00:02:32,840
>> So, while the usual general version of this we like

47
00:02:32,840 --> 00:02:37,470
to think of as parity. All parity is a way of counting,

48
00:02:37,470 --> 00:02:40,820
so there's usual two forms of parity that we worry about. Either

49
00:02:40,820 --> 00:02:44,850
even parity or odd parity. So let's pick one, it doesn't matter.

50
00:02:47,250 --> 00:02:48,280
Let's say.

51
00:02:48,280 --> 00:02:48,770
>> Odd.

52
00:02:48,770 --> 00:02:51,780
>> I like that, we'll do odd parity. And all that

53
00:02:51,780 --> 00:02:54,390
works out to be in this case is, if the number

54
00:02:54,390 --> 00:02:58,360
of attributes that are true is an odd number, then the

55
00:02:58,360 --> 00:03:02,240
output of the function is true, otherwise it's false. Got it?

56
00:03:02,240 --> 00:03:03,260
>> Got it.

57
00:03:03,260 --> 00:03:06,060
>> Okay, so, how would we make that decision tree work?

58
00:03:06,060 --> 00:03:12,370
>> Ooh. Well, we got to split on something and there all the same, so let's

59
00:03:12,370 --> 00:03:13,340
split on A1 again.

60
00:03:13,340 --> 00:03:13,850
>> Okay.

61
00:03:16,280 --> 00:03:20,080
So what do we do if A1 is true, versus being false.

62
00:03:20,080 --> 00:03:26,730
>> We don't know much if A1 is true. We have to look at everybody else.

63
00:03:26,730 --> 00:03:34,790
>> Right. So let's look at A2. What if A2 is true versus false?

64
00:03:34,790 --> 00:03:37,580
>> Well if A1 and A2 are true then, then the output is going to be

65
00:03:37,580 --> 00:03:40,350
whatever the parity of all the remaining variables

66
00:03:40,350 --> 00:03:41,600
are. So you still have to do that.

67
00:03:41,600 --> 00:03:45,170
>> Uh-huh, yup. And I'm already running out of room,

68
00:03:45,170 --> 00:03:48,170
so let's pretend there's only three variables. What's the output?

69
00:03:48,170 --> 00:03:51,400
>> [LAUGH] All right, so the far left. Is there's

70
00:03:51,400 --> 00:03:53,660
three trues which is odd so the output is true.

71
00:03:53,660 --> 00:03:54,180
>> Yep.

72
00:03:54,180 --> 00:04:01,560
>> The next leaf over, only two trues. A1 is true, A2 is true,

73
00:04:01,560 --> 00:04:05,430
but A3 is false, so that's two trues which is is even so the answer's false.

74
00:04:05,430 --> 00:04:07,100
>> Um-huh.

75
00:04:07,100 --> 00:04:08,164
>> Is this going to, is this pattern

76
00:04:08,164 --> 00:04:09,910
continuing? Now we've got. No, so then it's

77
00:04:09,910 --> 00:04:12,835
false again because we've got two trues and a false to get to the next leaf.

78
00:04:12,835 --> 00:04:13,675
>> Mm-hm.

79
00:04:13,675 --> 00:04:15,660
>> And we've got one true to get to the

80
00:04:15,660 --> 00:04:19,610
next leaf so that's true. Oh, that looks like XOR.

81
00:04:19,610 --> 00:04:22,100
>> It looks just like XOR. In fact, each

82
00:04:22,100 --> 00:04:23,860
one of these sub trees is kind of a version

83
00:04:23,860 --> 00:04:27,690
of XOR isn't it? Now what we have is, we have to do the same thing on the right.

84
00:04:30,020 --> 00:04:33,230
So we gotta redo A2, and we're going to be in the same

85
00:04:33,230 --> 00:04:36,340
situation before. And we're going to start drawing on top of each other because.

86
00:04:36,340 --> 00:04:36,725
>> [LAUGH]

87
00:04:36,725 --> 00:04:41,970
>> there's just not enough room. Hm, so, what's the answer to the one

88
00:04:41,970 --> 00:04:44,730
on the very right. Where all of them is false. All of them are false.

89
00:04:44,730 --> 00:04:50,650
>> So that's, an even number of trues. Zero is even. So that's false.

90
00:04:50,650 --> 00:04:55,490
Okay, so in the case where only A3 is true, it's true and

91
00:04:55,490 --> 00:04:59,030
we just keep going on and on and on again. Now imagine what would happen, in

92
00:04:59,030 --> 00:05:00,140
fact let me ask you Michael, what would

93
00:05:00,140 --> 00:05:03,750
happen if we had four attributes instead of three.

94
00:05:03,750 --> 00:05:06,200
>> Then we would be really tired of this game.

95
00:05:06,200 --> 00:05:09,350
>> Yes, and I am already tired of this game so the question is, can you.

96
00:05:09,350 --> 00:05:11,560
>> We get a whole another, a whole other level of this tree.

97
00:05:11,560 --> 00:05:15,290
>> Yep. We have the, it just goes on and on and on and nobody

98
00:05:15,290 --> 00:05:16,580
wants to think about it anymore. [LAUGH] So,

99
00:05:16,580 --> 00:05:18,230
how many nodes do you think there are?

100
00:05:18,230 --> 00:05:20,240
>> Well, for three there was one,

101
00:05:20,240 --> 00:05:23,050
two, three, four, five, six, seven. Which seems

102
00:05:23,050 --> 00:05:26,660
suspiciously like one less than the power of two.

103
00:05:26,660 --> 00:05:30,130
>> Mm-hm. And that is exactly right. You need

104
00:05:30,130 --> 00:05:32,320
more or less 2 to the n nodes. Or.

105
00:05:32,320 --> 00:05:34,720
>> 2 to the n, maybe, minus 1.

106
00:05:34,720 --> 00:05:39,110
>> Yeah. So let's just say big O of 2 to the n. Everyone watching this is a

107
00:05:39,110 --> 00:05:41,460
computer scientist to they know what they're doing. Okay

108
00:05:41,460 --> 00:05:45,370
so, you need an exponential therefore, as opposed to linear

109
00:05:49,500 --> 00:05:50,390
number of nodes.

110
00:05:50,390 --> 00:05:52,180
>> Gad.

111
00:05:52,180 --> 00:05:54,443
>> Yeah, so you very, very quickly run

112
00:05:54,443 --> 00:05:56,830
out of room here. You very, very quickly

113
00:05:56,830 --> 00:05:58,460
have a really, really big tree because it's

114
00:05:58,460 --> 00:06:02,520
growing exponentially. So, XOR is an exponential problem and

115
00:06:02,520 --> 00:06:06,380
is also known as hard. Whereas OR, at

116
00:06:06,380 --> 00:06:08,580
least in terms of space that you need, it's

117
00:06:08,580 --> 00:06:10,820
a relatively easy one. This is linear. We

118
00:06:10,820 --> 00:06:13,540
have another name for exponential and that is evil.

119
00:06:14,700 --> 00:06:17,300
Evil, evil, evil. And it's evil because it's a very

120
00:06:17,300 --> 00:06:21,380
difficult problem. There is no clever way to pick the right

121
00:06:21,380 --> 00:06:23,560
attributes in order to give you an answer. You have to

122
00:06:23,560 --> 00:06:27,040
look at every single thing. That's what make this kind of

123
00:06:27,040 --> 00:06:30,370
problem difficult. So, just as a general point, Michael, I

124
00:06:30,370 --> 00:06:33,390
want to make, is that we hope that in our machine

125
00:06:33,390 --> 00:06:37,080
learning problems we're looking at things that are more like any

126
00:06:37,080 --> 00:06:40,150
than we are looking at things that are more like parity.

127
00:06:40,150 --> 00:06:44,780
Because otherwise, we're going to need to ask a lot of questions in order to

128
00:06:44,780 --> 00:06:47,040
answer the, the parity questions. And we can't

129
00:06:47,040 --> 00:06:48,670
be particularly clever about how we do it.

130
00:06:48,670 --> 00:06:51,530
>> Though, if we were kind of clever and added another attribute,

131
00:06:51,530 --> 00:06:55,150
which is like, the sum of all the other attribute values, that

132
00:06:55,150 --> 00:06:58,331
would make it not so bad again. So maybe it's just a,

133
00:06:58,331 --> 00:07:01,530
it's just a kind of, bad way of writing the problem down.

134
00:07:01,530 --> 00:07:03,632
>> Well, you know, what they say about AI

135
00:07:03,632 --> 00:07:05,230
is that the hardest problem is coming up with

136
00:07:05,230 --> 00:07:07,490
a good representation. So what you just did

137
00:07:07,490 --> 00:07:09,820
is, you came up with a better representation,

138
00:07:09,820 --> 00:07:11,785
where you created some new pair, new variable.

139
00:07:11,785 --> 00:07:14,710
Let's call it B, which is just the sum

140
00:07:16,770 --> 00:07:19,000
of all of the As, where we pretend that I don't know,

141
00:07:19,000 --> 00:07:21,710
true is one and false is zero. This is actually a really good

142
00:07:21,710 --> 00:07:26,370
idea. It's also called cheating. [LAUGH] Because you [LAUGH] got to solve the

143
00:07:26,370 --> 00:07:29,980
problem by picking the best representation in the first place. But you know

144
00:07:29,980 --> 00:07:32,270
what? It's a good point, that in order for a machine running

145
00:07:32,270 --> 00:07:34,480
to work, you either need an easy problem or you need to find

146
00:07:34,480 --> 00:07:37,090
a clever way of cheating. So, let's come back and think about that

147
00:07:37,090 --> 00:07:39,340
throughout all the rest of the lessons. What's the best way to cheat?
