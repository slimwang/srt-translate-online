1
00:00:00,210 --> 00:00:03,320
Let's learn another quick piece of syntax that is pretty handy, that I'll

2
00:00:03,320 --> 00:00:05,140
use a lot in this course. And it's just for doing a for

3
00:00:05,140 --> 00:00:08,900
loop. So, the syntax is very much like that of the if statement.

4
00:00:08,900 --> 00:00:11,890
In fact we use, false statements are like this, so, it's going to look like

5
00:00:11,890 --> 00:00:16,560
this. Curly brace and then we'll have our for statement, percent, close curly

6
00:00:16,560 --> 00:00:19,780
brace. And then we can have our, our the body of the for

7
00:00:19,780 --> 00:00:22,350
statement. And just like the if statement, we have a closing block as

8
00:00:22,350 --> 00:00:25,630
well. And our for statement will be just like the Python for statement, and

9
00:00:25,630 --> 00:00:28,522
this, is, allows us to execute or print or whatever, whatever

10
00:00:28,522 --> 00:00:31,180
is in body, do that, you know, in a loop, which is

11
00:00:31,180 --> 00:00:32,910
really handy in a template. So let's go ahead and see a

12
00:00:32,910 --> 00:00:36,370
quick example of that. Okay. We're going to leave our n the way

13
00:00:36,370 --> 00:00:39,080
it is. Okay. And let's replace our if statement demo with a

14
00:00:39,080 --> 00:00:42,460
little for statement demo. So, I'm going to put all of this in

15
00:00:42,460 --> 00:00:47,770
an ordered list. Now, we used unordered list before. Remember ul, ol

16
00:00:47,770 --> 00:00:51,260
is this ordered list, which means I'll actually print the item number.

17
00:00:51,260 --> 00:00:58,060
It's kind of handy. So, for x in range 1 to n plus 1, so this'll basically if n

18
00:00:58,060 --> 00:01:04,110
is 10, this'll go from 1 to 10. And say put a list item, for x

19
00:01:05,120 --> 00:01:08,280
to the power of 2, x squared, which

20
00:01:08,280 --> 00:01:11,572
is Python syntax for doing that. Now notice inside

21
00:01:11,572 --> 00:01:13,690
the, the double curly braces, remember, this just means

22
00:01:13,690 --> 00:01:16,370
print. So, and we can put. Just about any

23
00:01:16,370 --> 00:01:19,210
arbitrary Python inside here, which is indeed what I've done,

24
00:01:19,210 --> 00:01:22,360
so x to the power of 2. And then we

25
00:01:22,360 --> 00:01:26,070
end our for statement, and we close our list. So

26
00:01:26,070 --> 00:01:29,010
let's go ahead and see if this works. I'm going to set

27
00:01:29,010 --> 00:01:32,310
n to 10, and indeed, it works. And we can

28
00:01:32,310 --> 00:01:36,750
see, this basically is printing x, 1 through 10, along, in

29
00:01:36,750 --> 00:01:39,320
the left column, and then x squared in the right

30
00:01:39,320 --> 00:01:41,300
column. Lets go ahead and view the source for this file.

31
00:01:41,300 --> 00:01:44,298
You can see down here, here is the code we generated.

32
00:01:44,298 --> 00:01:48,000
Ordered list, and then 1, 4, 9, you know, 1 squared, 2

33
00:01:48,000 --> 00:01:50,280
squared, 3 squared, 4 squared, all the way down to 10

34
00:01:50,280 --> 00:01:53,390
squared, and then close ordered list. And so the template made it

35
00:01:53,390 --> 00:01:55,500
real handy to do that. Lets go ahead and see what

36
00:01:55,500 --> 00:01:58,000
would happen if I changed this ordered list to an unordered list

37
00:01:58,000 --> 00:02:02,180
in our code. So if we change this ol to a

38
00:02:02,180 --> 00:02:06,220
ul, and we go back to Chrome and we reload this page,

39
00:02:06,220 --> 00:02:10,910
you see the o changed to u. And we go here, instead of the numbers for

40
00:02:10,910 --> 00:02:14,330
our list items, we get the little dots. It comes up from time to time, these

41
00:02:14,330 --> 00:02:16,850
days you often just generate your list markers

42
00:02:16,850 --> 00:02:19,360
yourself using templates but. You know, for quick

43
00:02:19,360 --> 00:02:23,150
and dirty, you can just use ol or ul to get, to get what you want.
