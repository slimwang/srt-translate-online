1
00:00:00,740 --> 00:00:03,980
As we go through the following steps
I'll give you intervals in which to

2
00:00:03,980 --> 00:00:07,910
pause the video and
implement the steps on your own project.

3
00:00:07,910 --> 00:00:09,270
Feel free to do this or

4
00:00:09,270 --> 00:00:12,820
to follow the whole video to the end and
try it all at once.

5
00:00:12,820 --> 00:00:14,960
I'll start by creating
an empty project and

6
00:00:14,960 --> 00:00:17,579
then adding a method
called SandboxPlayground.

7
00:00:18,810 --> 00:00:20,790
You can pause here to do this step now.

8
00:00:23,070 --> 00:00:28,130
Now within this method we need to
create an instance of NSFileManager.

9
00:00:28,130 --> 00:00:33,438
This class allows us to find folders,
copy files, remove files etc.

10
00:00:33,438 --> 00:00:38,165
We'll use this to get the path to
the documents folder within our sandbox.

11
00:00:39,235 --> 00:00:44,275
Oddly enough, instead of a URL we're
going to get an array of URLs.

12
00:00:44,275 --> 00:00:45,545
What's going on?

13
00:00:45,545 --> 00:00:46,805
Well, if we think about it,

14
00:00:46,805 --> 00:00:50,155
there is actually more than
one documents folder, right.

15
00:00:50,155 --> 00:00:53,850
Remember, there is one for
each app installed.

16
00:00:53,850 --> 00:00:56,710
This method works by
returning all of them, but

17
00:00:56,710 --> 00:00:59,620
since we are only asking for
one right now,

18
00:00:59,620 --> 00:01:03,560
we'll add in the second parameter to
filter out the ones that we don't need.

19
00:01:05,110 --> 00:01:09,290
Now we have an array with
just the one URL we need.

20
00:01:09,290 --> 00:01:10,420
So let's grab it.

21
00:01:10,420 --> 00:01:13,160
This is a URL to the documents folder,
but

22
00:01:13,160 --> 00:01:16,730
I want a URL to the new
file I'm going to create.

23
00:01:16,730 --> 00:01:20,090
That's pretty easy, we only have
to add the name of the file.

24
00:01:20,090 --> 00:01:23,790
I'll do this now and then you can pause
the video and edit your own code.

25
00:01:25,470 --> 00:01:28,075
Okay, so
now we're ready to save something.

26
00:01:28,075 --> 00:01:32,295
We could use NSData or NSString,
both work in a very similar way.

27
00:01:32,295 --> 00:01:36,185
Let's write the text inside
a string into a file.

28
00:01:36,185 --> 00:01:39,650
There's nothing wrong with being
a little paranoid when it comes to code.

29
00:01:39,650 --> 00:01:42,470
So let's make sure we
wrote that correctly.

30
00:01:42,470 --> 00:01:44,160
How can we find that out?

31
00:01:44,160 --> 00:01:46,970
Let's read it and
see if it's the same content.

32
00:01:46,970 --> 00:01:48,630
So did you try it on your end?

33
00:01:48,630 --> 00:01:49,570
Works?

34
00:01:49,570 --> 00:01:50,300
Perfect.

35
00:01:50,300 --> 00:01:54,440
Doesn't work, check out the companion
text and see if that helps.

36
00:01:54,440 --> 00:01:58,730
So right now we've just saved some data
to disk and retrieved it back, but

37
00:01:58,730 --> 00:02:03,690
this doesn't exactly seem practical for
saving and retrieving tons of data,

38
00:02:03,690 --> 00:02:08,160
many different types of objects,
several versions of the data or

39
00:02:08,160 --> 00:02:12,850
showing it in views and handling
it with controllers, and it isn't.

40
00:02:12,850 --> 00:02:15,580
But what we just did is
just the base concept.

41
00:02:15,580 --> 00:02:18,090
There are frameworks that
build on top of this.

42
00:02:18,090 --> 00:02:20,420
Let's see if Marty and
Doug have some ideas.
