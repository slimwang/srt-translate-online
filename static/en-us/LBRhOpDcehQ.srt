1
00:00:00,180 --> 00:00:04,610
If you've marked all of these as correct
answers, then you're correct, and

2
00:00:04,610 --> 00:00:06,270
I'll explain why.

3
00:00:06,270 --> 00:00:10,310
First, at the lowest level,
we said that the virtual machine monitor

4
00:00:10,310 --> 00:00:14,880
must provide guest VMs with
a virtual platform interface

5
00:00:14,880 --> 00:00:19,130
to all of the hardware resources,
the CPU, the memory, the devices.

6
00:00:19,130 --> 00:00:21,210
So this clearly is a requirement.

7
00:00:21,210 --> 00:00:25,320
Obviously, the virtual machine
monitor will have to isolate guest

8
00:00:25,320 --> 00:00:26,380
VMs from one another.

9
00:00:27,410 --> 00:00:29,910
And this actually can be
pretty easily achieved

10
00:00:29,910 --> 00:00:35,210
using the similar kinds of mechanisms
that are used by operating systems

11
00:00:35,210 --> 00:00:37,520
to provide isolation
across the guest VMs.

12
00:00:38,550 --> 00:00:42,170
So, the hypervisor will use techniques
or the virtual machine monitor

13
00:00:42,170 --> 00:00:46,840
will use techniques like preemption,
will take advantage of hardware support

14
00:00:46,840 --> 00:00:51,850
in the memory management unit so
that it can perform validations and

15
00:00:51,850 --> 00:00:55,898
translations of memory
references pretty quickly.

16
00:00:55,898 --> 00:00:59,710
So, there are opportunities
to achieve this requirement

17
00:00:59,710 --> 00:01:04,349
efficiently using the existing methods
and the existing hardware support.

18
00:01:04,349 --> 00:01:08,970
Also, within the virtual machine
at the topmost level of the stack,

19
00:01:08,970 --> 00:01:13,830
the virtualization solution must
continue to provide the ability to

20
00:01:13,830 --> 00:01:19,100
protect the guest operating system
from faulty or malicious applications.

21
00:01:19,100 --> 00:01:21,790
We don't want a single application,
when it crashes,

22
00:01:21,790 --> 00:01:24,260
to take the entire guest OS down.

23
00:01:24,260 --> 00:01:29,620
What this means is that somehow we have
to have separate protection levels for

24
00:01:29,620 --> 00:01:32,640
the applications and for the guest OS.

25
00:01:32,640 --> 00:01:36,870
So these expectations that exist
when the guest OS is executing

26
00:01:36,870 --> 00:01:38,970
natively on the physical platform,

27
00:01:38,970 --> 00:01:42,940
they must continue to be valid
in the virtualized environment.

28
00:01:42,940 --> 00:01:47,190
At the same time, the virtualization
solution has to have mechanisms

29
00:01:47,190 --> 00:01:52,460
to protect the virtual machine monitor
from the guest operating systems.

30
00:01:52,460 --> 00:01:54,620
We don't want a single faulty or

31
00:01:54,620 --> 00:01:59,430
malicious guest OS to bring down
the hypervisor in the entire machine.

32
00:01:59,430 --> 00:02:03,975
What this means is that we cannot have
a solution in which the guest operating

33
00:02:03,975 --> 00:02:08,389
system and the virtual machine monitor
run at the same protection level.

34
00:02:08,389 --> 00:02:09,710
They have to be separated.
