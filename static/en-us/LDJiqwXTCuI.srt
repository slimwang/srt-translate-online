1
00:00:00,760 --> 00:00:06,120
The second view not listed by Cruchen I consider to be quite important,

2
00:00:06,120 --> 00:00:07,810
and that's the non-functional view.

3
00:00:08,880 --> 00:00:12,400
In coming up a software architecture, it's youre responsibility not

4
00:00:12,400 --> 00:00:16,510
only to describe a system that's going to compute what it needs to compute, but

5
00:00:16,510 --> 00:00:22,170
also compute it in a way that satisfies those non-functional requirements.

6
00:00:22,170 --> 00:00:24,140
Satisfying non-functional requirements is hard,

7
00:00:24,140 --> 00:00:27,150
it often involves some kind of tradeoff, okay?

8
00:00:27,150 --> 00:00:31,680
So you need to be expressing what the options are and

9
00:00:31,680 --> 00:00:35,760
how you decided to trade things off, and I'm suggesting here some tabular text.

10
00:00:36,980 --> 00:00:42,530
Here's an example, if you imagine a web browser and you say,

11
00:00:42,530 --> 00:00:45,790
what's it's major computational responsibility?

12
00:00:45,790 --> 00:00:47,830
Well it's displaying web pages.

13
00:00:47,830 --> 00:00:48,620
Quite simple.

14
00:00:48,620 --> 00:00:50,200
But if you actually look at the code for

15
00:00:50,200 --> 00:00:55,640
a web browser, it's filled with code having to do with managing caches.

16
00:00:55,640 --> 00:01:00,440
There are page caches and connection caches and image caches and so on.

17
00:01:00,440 --> 00:01:01,310
Okay?

18
00:01:01,310 --> 00:01:02,790
Why are there caches?

19
00:01:02,790 --> 00:01:07,128
Well, caches are a technique for dealing with performance constraints and

20
00:01:07,128 --> 00:01:10,880
non-functional requirement, okay?

21
00:01:10,880 --> 00:01:14,370
So it's important to relate that information, first of all,

22
00:01:14,370 --> 00:01:19,500
that there is a performance requirement, and second of all, what technique is

23
00:01:19,500 --> 00:01:22,820
being used to address that performance requirement, the caches.
