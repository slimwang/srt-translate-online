1
00:00:00,008 --> 00:00:04,310
For approach one, where we have a single reference in a student course.

2
00:00:04,310 --> 00:00:07,460
The problem is that using this scheme a student can only take one course.

3
00:00:07,460 --> 00:00:11,780
So for the second approach a vector of references to students in each course,

4
00:00:11,780 --> 00:00:13,340
this solves the first problem.

5
00:00:13,340 --> 00:00:16,850
But it makes it hard to find the courses taken by a student.

6
00:00:16,850 --> 00:00:19,590
That is you have pointers from courses back to students but

7
00:00:19,590 --> 00:00:21,730
you don't have pointers from students to courses.

8
00:00:21,730 --> 00:00:24,850
And the third option was to have an association class.

9
00:00:24,850 --> 00:00:28,310
And the disadvantage here, as I indicated a moment ago,

10
00:00:28,310 --> 00:00:31,510
was that there's an extra step involved in doing any kind of traversal,

11
00:00:31,510 --> 00:00:33,310
which might have a performance hit.

12
00:00:33,310 --> 00:00:37,580
And finally, the symmetric Vector approach in which there are vectors in

13
00:00:37,580 --> 00:00:41,880
each instance of the student class and each instance of the course class is

14
00:00:41,880 --> 00:00:45,700
perfectly general, but it may lead to referential integrity problems.

15
00:00:45,700 --> 00:00:50,330
That is when a student drops a course, we have to make sure that you remove

16
00:00:50,330 --> 00:00:54,790
that particular reference in the student class but also in the course class.
