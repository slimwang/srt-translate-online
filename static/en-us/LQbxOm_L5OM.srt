1
00:00:00,580 --> 00:00:03,040
So Charles, how would we go about trying to figure this out?

2
00:00:03,040 --> 00:00:05,215
>> How would we go about trying to figure this out?

3
00:00:05,215 --> 00:00:07,360
>> Yeah, what do you think? Which one

4
00:00:07,360 --> 00:00:09,190
would you choose and how would you choose?

5
00:00:09,190 --> 00:00:12,700
>> so, well that's a good question. Well

6
00:00:12,700 --> 00:00:14,760
just given what you, what you've given me, I'm

7
00:00:14,760 --> 00:00:18,210
going to ask. I think smartly guess, that

8
00:00:18,210 --> 00:00:22,540
probably k equals 3, is the right one, and

9
00:00:22,540 --> 00:00:23,556
>> K equals 3

10
00:00:23,556 --> 00:00:25,560
>> And I'll tell you why.

11
00:00:25,560 --> 00:00:32,223
It's because zero, one and two seem to make quite a few errors.

12
00:00:32,223 --> 00:00:32,990
>> Mh-hm

13
00:00:32,990 --> 00:00:39,610
>> Three does a pretty good job but doesn't, doesn't over commit to the data.

14
00:00:39,610 --> 00:00:40,820
>> Hm.

15
00:00:40,820 --> 00:00:42,050
>> And that's the problem with eight, is that

16
00:00:42,050 --> 00:00:44,490
eight says, you know, the training data that I have

17
00:00:44,490 --> 00:00:48,300
is exactly right and I should been and moved

18
00:00:48,300 --> 00:00:50,810
heaven and earth in order to, to match the data.

19
00:00:50,810 --> 00:00:53,390
And that's probably the wrong thing, certainly if there's any

20
00:00:53,390 --> 00:00:55,740
noise or, or anything else going on in the data.

21
00:00:55,740 --> 00:00:59,230
>> Right. So it sort of seems like it's overkill,

22
00:00:59,230 --> 00:01:02,220
especially that it's doing these crazy things between the points. Whereas

23
00:01:02,220 --> 00:01:04,849
the cubic one, even though it clings pretty close to the

24
00:01:04,849 --> 00:01:08,780
points, it stays between the points, kind of between the points.

25
00:01:08,780 --> 00:01:08,920
>> Yeah.

26
00:01:08,920 --> 00:01:12,400
>> Which seems like a really smart thing. So yeah so, so that

27
00:01:12,400 --> 00:01:16,010
turns out to be the right answer but lets actually lets actually evaluate

28
00:01:16,010 --> 00:01:17,970
that more concretely.
