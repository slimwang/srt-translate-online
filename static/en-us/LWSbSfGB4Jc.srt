1
00:00:00,360 --> 00:00:03,220
In the previous algorithm you've seen how many elements match a condition but

2
00:00:03,220 --> 00:00:06,920
we didn't get to see any of the elements that match. Let's start modestly and

3
00:00:06,920 --> 00:00:10,724
say we want to see the first one. That's a match. So here in our series of

4
00:00:10,724 --> 00:00:13,530
pictures we just want to find the first one that is a portrait which I guess

5
00:00:13,530 --> 00:00:18,362
here just happens to be this one. The difficulty with this algorithm is that we

6
00:00:18,362 --> 00:00:22,020
don't really want to look at all of the elements, we want to stop as soon as we

7
00:00:22,020 --> 00:00:28,155
have found one. Let's set a Boolean variable. We'll keep looking while we

8
00:00:28,155 --> 00:00:33,250
haven't found a match. If the ith element matches, then we set found to true,

9
00:00:33,250 --> 00:00:39,876
and otherwise, we increment i. We still need to be clear about what i is. i

10
00:00:39,876 --> 00:00:44,696
should start at zero, and of course i shouldn't get too large. It needs to be

11
00:00:44,696 --> 00:00:48,328
less than the size of the collection. Now when we terminated this loop there

12
00:00:48,328 --> 00:00:52,394
are two possibilities. Maybe there wasn't any match in there at all. You could

13
00:00:52,394 --> 00:00:56,824
imagine a picture gallery only with landscapes. But if there was at least one

14
00:00:56,824 --> 00:01:03,386
match, then i is the index of that match. Once again it's your turn. Draw the

15
00:01:03,386 --> 00:01:05,889
first portrait in the gallery.
