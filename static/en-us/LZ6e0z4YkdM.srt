1
00:00:00,210 --> 00:00:01,600
>> All right Charles, what do you think?

2
00:00:01,600 --> 00:00:02,870
>> I don't know but I know how to do it.

3
00:00:02,870 --> 00:00:03,630
>> All right.

4
00:00:03,630 --> 00:00:06,190
>> I'm just going to substitute any equation we had before.

5
00:00:06,190 --> 00:00:07,060
>> Yeah, that's what I was thinking, uh-huh.

6
00:00:07,060 --> 00:00:09,730
>> Alright, so M is greater than or equal to, 1 over

7
00:00:09,730 --> 00:00:13,990
epsilon times the natural log of the size of the hypothesis space.

8
00:00:13,990 --> 00:00:16,540
>> Mm, which is what, that is not one of our variables here.

9
00:00:17,706 --> 00:00:19,146
>> ten.

10
00:00:19,146 --> 00:00:22,460
>> Yeah. Right, so it's not 2 to the 10. Even though

11
00:00:22,460 --> 00:00:25,340
the input space is 2 to the 10. The number of hypotheses.

12
00:00:25,340 --> 00:00:28,290
There's one hypothesis corresponding to each of the bit positions. So, good?

13
00:00:28,290 --> 00:00:33,760
>> Right. Plus, the natural log of 1 over delta. So

14
00:00:33,760 --> 00:00:38,710
that would be greater than or equal to ten times the natural log of ten.

15
00:00:38,710 --> 00:00:40,985
>> [LAUGH]

16
00:00:40,985 --> 00:00:46,070
>> Plus the natural log of, five. So,

17
00:00:46,070 --> 00:00:51,060
let's see. The natural log of ten is something

18
00:00:51,060 --> 00:00:55,040
like three point something, the natural log of five is something like, two point

19
00:00:55,040 --> 00:01:02,498
something. We add those up, multiply by ten you're going to end up with 39.12.

20
00:01:02,498 --> 00:01:06,220
>> Good, so, we need, you know, 40 samples?

21
00:01:06,220 --> 00:01:07,980
>> Yeah. That sounds about right.

22
00:01:07,980 --> 00:01:10,186
>> That actually doesn't sound too bad. Well, you

23
00:01:10,186 --> 00:01:12,078
know, it's not learning a very hard problem, but

24
00:01:12,078 --> 00:01:13,926
it's, you know, a pretty big input space. So

25
00:01:13,926 --> 00:01:16,270
let's see. What, how big is the input space?

26
00:01:16,270 --> 00:01:19,504
It's like two to the ten, which is.

27
00:01:19,504 --> 00:01:19,602
>> 1,024.

28
00:01:19,602 --> 00:01:24,797
>> 1,024. So how much of 1024 is 40? It's,

29
00:01:24,797 --> 00:01:27,960
it's, you know, less than 4%. Hm, that's not bad.

30
00:01:27,960 --> 00:01:30,590
>> Before we leave this quiz, let me point out one

31
00:01:30,590 --> 00:01:35,290
more thing: that this bound is actually agnostic to the distribution

32
00:01:35,290 --> 00:01:37,560
from which samples came, so this idea that it's from a

33
00:01:37,560 --> 00:01:41,460
uniform distribution is actually not being directly used here. So so

34
00:01:41,460 --> 00:01:43,460
this is pretty cool. It actually doesn't matter, we only

35
00:01:43,460 --> 00:01:46,480
need 40 samples no matter what the distribution is. It's

36
00:01:46,480 --> 00:01:50,200
not like some distributions are harder or easier ,because we

37
00:01:50,200 --> 00:01:53,160
are measuring the true error on the same distribution that we

38
00:01:53,160 --> 00:01:55,400
used to, to create the training set. So if it's

39
00:01:55,400 --> 00:01:58,800
a really hard distribution and some tough examples never appear,

40
00:01:58,800 --> 00:02:02,400
then we're unlikely to see them in the training set,

41
00:02:02,400 --> 00:02:05,470
but they're not going to contribute very much to the true error.

42
00:02:05,470 --> 00:02:06,670
>> Well that makes sense. So the

43
00:02:06,670 --> 00:02:08,479
distri, oh right. So in some sense, I

44
00:02:08,479 --> 00:02:09,889
mean, I guess the equation doesn't show this,

45
00:02:09,889 --> 00:02:12,990
but in some sense, the distribution is, cancels

46
00:02:12,990 --> 00:02:15,766
out between the training and the true error

47
00:02:15,766 --> 00:02:17,710
>> Yeah, that's one way to think about it.

48
00:02:17,710 --> 00:02:23,330
>> Well, I like that. So 40 is pretty good to get 10% error.

49
00:02:23,330 --> 00:02:29,240
If we wanted to get say, only 1% error, Then we would go from 40 to 400.

50
00:02:29,240 --> 00:02:29,812
>> Mm.

51
00:02:29,812 --> 00:02:30,669
>> Right?

52
00:02:30,669 --> 00:02:31,713
>> That's a good

53
00:02:31,713 --> 00:02:32,860
point, yeah.

54
00:02:32,860 --> 00:02:35,390
>> And it's, it's, it's one decimal point even.

55
00:02:35,390 --> 00:02:38,560
And so, that would be about 40% of the data.

56
00:02:38,560 --> 00:02:41,150
>> Yeah, that's true. Yeah, if we want to go a little

57
00:02:41,150 --> 00:02:43,995
bit beyond that we may need all the data multiple times.

58
00:02:43,995 --> 00:02:45,081
>> Mm-hm.

59
00:02:45,081 --> 00:02:46,750
>> Yeah, but this example doesn't look so bad. So

60
00:02:46,750 --> 00:02:48,700
let's just move on before we think about it too hard.

61
00:02:48,700 --> 00:02:50,190
>> Okay. That seems fair, I like that.
