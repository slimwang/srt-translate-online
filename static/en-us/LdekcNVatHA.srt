1
00:00:00,160 --> 00:00:03,590
The Angular framework is very
relaxed in how you can use it.

2
00:00:03,590 --> 00:00:05,390
If you just want to use
some of its features and

3
00:00:05,390 --> 00:00:08,360
not the whole framework,
then you totally can.

4
00:00:08,360 --> 00:00:09,530
But to stay organized and

5
00:00:09,530 --> 00:00:13,780
consistent with our apps, we'll use a
project scaffolding tool called Yeoman.

6
00:00:13,780 --> 00:00:16,490
Before we do that let's see how
easy it is to add Angular to

7
00:00:16,490 --> 00:00:17,880
an existing project.

8
00:00:17,880 --> 00:00:20,175
Here's a simple app that lists
some information about a brick.

9
00:00:20,175 --> 00:00:23,398
I want to give customers the ability
to enter a number of bricks and

10
00:00:23,398 --> 00:00:25,320
calculate how much it'll cost.

11
00:00:25,320 --> 00:00:28,790
This is a simple request and can easily
be done with Vanilla JavaScript.

12
00:00:28,790 --> 00:00:32,290
But let's see how easy it is to
do with Angular from scratch.

13
00:00:32,290 --> 00:00:34,890
First we need to link to
Angular in the project.

14
00:00:34,890 --> 00:00:37,750
Then to bootstrap Angular,
we need to include an Angular specific

15
00:00:37,750 --> 00:00:40,280
attribute called ng-app
on the body element.

16
00:00:40,280 --> 00:00:41,633
Now Angular will run.

17
00:00:41,633 --> 00:00:47,000
Awesome, except we're not
really seeing anything.

18
00:00:47,000 --> 00:00:48,460
Angular is actually working.

19
00:00:48,460 --> 00:00:50,570
We just haven't told it to do anything.

20
00:00:50,570 --> 00:00:54,300
To actually see something, we need to
add some special code that Angular will

21
00:00:54,300 --> 00:00:56,470
use to display the information.

22
00:00:56,470 --> 00:00:58,200
In the index file is an input field for

23
00:00:58,200 --> 00:01:01,270
the user to select how many
bricks they want to purchase.

24
00:01:01,270 --> 00:01:04,150
And here's a section for
the cart that will show the total price.

25
00:01:04,150 --> 00:01:06,820
But how do we get these two
sections linked together?

26
00:01:06,820 --> 00:01:09,800
We'll look at this in more detail when
we get to the section on directives.

27
00:01:09,800 --> 00:01:12,580
But I'll add this Angular
attribute to the input field.

28
00:01:12,580 --> 00:01:15,330
Then I'll use this same value
down here in the calculation.

29
00:01:15,330 --> 00:01:17,970
Looking at the browser,
we now have an interactive app.

30
00:01:17,970 --> 00:01:20,890
Granted, this is a very simple app,
but isn't it incredible what

31
00:01:20,890 --> 00:01:23,900
we've accomplished without even
opening a single JavaScript file?

32
00:01:23,900 --> 00:01:26,890
So I just added the code directly
to the existing index file.

33
00:01:26,890 --> 00:01:28,420
That's fine for small projects,

34
00:01:28,420 --> 00:01:31,790
but if you're app grows or if multiple
developers are working on an app,

35
00:01:31,790 --> 00:01:34,480
you'll probably want some
organization and consistency.

36
00:01:34,480 --> 00:01:37,550
Let's look at Yeoman to see one way
professional Angular projects are built.
