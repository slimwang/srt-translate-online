1
00:00:00,210 --> 00:00:02,910
For computer vision object recognition,

2
00:00:02,910 --> 00:00:08,230
we're inherently interested in
finding objects in images, okay?

3
00:00:08,230 --> 00:00:11,138
And that finding means
essentially two parts.

4
00:00:11,138 --> 00:00:12,403
There's sometimes one.

5
00:00:12,403 --> 00:00:15,690
There's this notion of detection and
labeling, right?

6
00:00:15,690 --> 00:00:20,230
So here in this picture of you know,
person standing next to a car,

7
00:00:20,230 --> 00:00:23,610
I have to not only sort of tell you
what's in it, I have to say oh okay,

8
00:00:23,610 --> 00:00:26,590
over here and I'll draw a box because
a lot of these things are Windows based.

9
00:00:26,590 --> 00:00:32,110
Saying okay, that's the car and
by the way over here, that's the person.

10
00:00:32,110 --> 00:00:34,098
So in general that's
what you have to do.

11
00:00:34,098 --> 00:00:37,270
And the, sort of the most common
approach to doing that is referred to as

12
00:00:37,270 --> 00:00:38,440
windowing methods.

13
00:00:38,440 --> 00:00:39,040
All right?

14
00:00:39,040 --> 00:00:42,010
So there are lots of different
ways of thinking about Windows.

15
00:00:42,010 --> 00:00:46,080
We can start by thinking about
sort of whole images, right.

16
00:00:46,080 --> 00:00:50,670
So, here I have a picture of a couple
of training examples of koalas and

17
00:00:50,670 --> 00:00:52,880
a couple of training examples of pandas.

18
00:00:52,880 --> 00:00:56,130
This slide borrowed from
Kristen Grauman, Kristen has a thing for

19
00:00:56,130 --> 00:00:58,560
cuddly folks with big ears.

20
00:00:58,560 --> 00:01:03,410
So if any of you are cuddly with big
ears, you can give Kristen a call.

21
00:01:03,410 --> 00:01:05,239
I hope Kristen's okay with that.

22
00:01:05,239 --> 00:01:08,243
So you know, clearly here I have my
koalas, we've talked about koalas before

23
00:01:08,243 --> 00:01:10,940
about how they're not bears, right,
that koalas are these things.

24
00:01:10,940 --> 00:01:14,710
And here we have pandas,
which are bears but are just mean.

25
00:01:14,710 --> 00:01:18,478
Anyway, and we'd like to do is we'd like
to somehow learn a way of discriminating

26
00:01:18,478 --> 00:01:21,720
between them and say, you know,
which ones are which.

27
00:01:21,720 --> 00:01:25,620
So, one way of doing this would
be to just build some sort of

28
00:01:25,620 --> 00:01:29,710
a holistic description
of the entire picture,

29
00:01:29,710 --> 00:01:33,690
with the assumption, we'll get to this
part later, that the picture thing that

30
00:01:33,690 --> 00:01:37,730
I'm looking at is mostly the koala,
or mostly the panda.

31
00:01:37,730 --> 00:01:40,410
So what would be the simplest
possible description?

32
00:01:40,410 --> 00:01:41,840
Well here's one.

33
00:01:41,840 --> 00:01:45,450
How about I just build
a histogram of the pixel colors?

34
00:01:45,450 --> 00:01:48,540
Now, I'm showing it here in a single
image so it's, it's black and white.

35
00:01:48,540 --> 00:01:50,410
You can do this in R, G, and B, and

36
00:01:50,410 --> 00:01:52,610
have, you'd essentially
have three histograms.

37
00:01:52,610 --> 00:01:56,770
And you could imagine that basically,
you could try to determine that,

38
00:01:56,770 --> 00:02:00,240
you know, these things look kind of,
pretty much different than this, so

39
00:02:00,240 --> 00:02:05,780
that might be a good descriptor to try
to find where the boundary might be.

40
00:02:05,780 --> 00:02:09,288
You might try something even simpler.

41
00:02:09,288 --> 00:02:11,230
I don't know, if it's simp,
yeah, I guess it's simpler.

42
00:02:11,230 --> 00:02:13,260
It's not a very good idea.

43
00:02:13,260 --> 00:02:13,890
All right?

44
00:02:13,890 --> 00:02:19,170
The same way we did in PCA,
you can take all the little pixels,

45
00:02:19,170 --> 00:02:24,100
put them in a great big vector space and
you could say, okay, here are a whole

46
00:02:24,100 --> 00:02:27,980
bunch of koalas, here are a bunch
of pandas, find me the boundary.

47
00:02:27,980 --> 00:02:29,420
You know,
do you think that would work well, or

48
00:02:29,420 --> 00:02:30,580
do you think that would not work well?

49
00:02:30,580 --> 00:02:31,757
What do you think Megan?
Do you think it would work well?

50
00:02:31,757 --> 00:02:33,145
>> No.

51
00:02:33,145 --> 00:02:38,284
>> No, okay, one of the problems is,
you know, if I shift the picture just

52
00:02:38,284 --> 00:02:43,114
a little bit, all those pixels move
around in that feature vector.

53
00:02:43,114 --> 00:02:47,207
So a small change in the image is going
to give me a large change in my feature

54
00:02:47,207 --> 00:02:50,971
vector, which is not something you
want to have if you're going to have

55
00:02:50,971 --> 00:02:55,020
a good ability to discriminate
between them, so that won't work.

56
00:02:55,020 --> 00:02:57,820
And what about the color thing well,
you think if I just did that color and

57
00:02:57,820 --> 00:02:59,456
intensity thing,
that would work pretty well?

58
00:02:59,456 --> 00:03:00,042
>> No.

59
00:03:00,042 --> 00:03:00,820
>> No.

60
00:03:00,820 --> 00:03:02,480
Okay, look.

61
00:03:02,480 --> 00:03:04,423
Suppose I make it brighter today or

62
00:03:04,423 --> 00:03:08,490
there's a shadow being cast upon
the thing etcetera, whatever.

63
00:03:08,490 --> 00:03:09,500
I get, you know,

64
00:03:09,500 --> 00:03:14,258
major variations in sort of the
distribution of the intensities, okay.

65
00:03:14,258 --> 00:03:18,650
Do you remember when we were talking
about trying to do tracking or

66
00:03:18,650 --> 00:03:22,880
trying to find things you know, motion.

67
00:03:22,880 --> 00:03:25,680
We were looking for
what were called interest points.

68
00:03:25,680 --> 00:03:26,840
I hope you remember that, okay?

69
00:03:26,840 --> 00:03:29,980
And if you remember interest points,
house features, those kind of things,

70
00:03:29,980 --> 00:03:33,580
they were based on the idea of places
where you had high gradients, okay.

71
00:03:33,580 --> 00:03:36,280
In particular, those were where you
had variations in the direction of

72
00:03:36,280 --> 00:03:40,690
the gradients as well, and the idea
was that gradients corners were quite

73
00:03:40,690 --> 00:03:43,530
robust with respect to
changes in illumination.

74
00:03:43,530 --> 00:03:47,780
So if we take our koalas and our pandas,
we can consider sort of edges, contour.

75
00:03:47,780 --> 00:03:50,580
The idea of these intensity gradients,
right?

76
00:03:50,580 --> 00:03:55,265
Those things tend to sort of stay
where they are, in terms of, you know,

77
00:03:55,265 --> 00:03:57,015
if I change the intensity.

78
00:03:57,015 --> 00:03:57,525
All right.

79
00:03:57,525 --> 00:04:00,955
But of course we do have this problem
that is, I move the image just a little

80
00:04:00,955 --> 00:04:05,425
bit, I might get shifts in the location
of where those pixels are.

81
00:04:05,425 --> 00:04:09,975
So now, remember sift features, so we
did that whole thing with sift features,

82
00:04:09,975 --> 00:04:13,275
which took histograms
of the orientation,

83
00:04:13,275 --> 00:04:15,860
and we computed these
little feature vectors.

84
00:04:15,860 --> 00:04:16,500
Right?

85
00:04:16,500 --> 00:04:21,070
Well here, imagine taking your picture,
and you just cut it up into, say,

86
00:04:21,070 --> 00:04:22,450
four quadrants, right?

87
00:04:22,450 --> 00:04:23,210
It's easier, right?

88
00:04:23,210 --> 00:04:26,210
So, one, two, three, four.

89
00:04:26,210 --> 00:04:30,370
And I,
suppose I just compute some histograms

90
00:04:30,370 --> 00:04:34,320
of the orientations of the gradients
in each of those regions.

91
00:04:34,320 --> 00:04:37,990
And I do that for
each of these pictures, okay?

92
00:04:37,990 --> 00:04:42,750
It's robust with respect to illumination
changes because the gradient's there.

93
00:04:42,750 --> 00:04:45,880
Is it robust with respect to
small shifts in the picture?

94
00:04:45,880 --> 00:04:47,430
Megan, yes or no?

95
00:04:47,430 --> 00:04:48,510
>> Yes.

96
00:04:48,510 --> 00:04:50,150
>> Yes, it is.

97
00:04:50,150 --> 00:04:54,640
So the reason that it's robust with
respect to these small changes is that,

98
00:04:54,640 --> 00:04:57,850
you know, if I move this guy's
ear a little bit around.

99
00:04:57,850 --> 00:04:59,550
You know, a bunch of pixels.

100
00:04:59,550 --> 00:05:02,190
The distribution of the gradients is,

101
00:05:02,190 --> 00:05:05,380
in that quadrant,
is going to remain about the same.

102
00:05:05,380 --> 00:05:08,100
That's why down here it
says locally orderless.

103
00:05:08,100 --> 00:05:11,270
What it means is that I'm not
worried about exactly which pixel

104
00:05:11,270 --> 00:05:11,970
you're, you're in.

105
00:05:11,970 --> 00:05:17,110
I've got a general distribution in, in
one or two different areas of the image.

106
00:05:17,110 --> 00:05:17,610
Okay?
