1
00:00:00,240 --> 00:00:04,090
Events in real life take the form of
specific actions occurring at specific

2
00:00:04,090 --> 00:00:04,770
times.

3
00:00:05,920 --> 00:00:10,450
For instance, in the game of basketball,
when the ball goes through the hoop.

4
00:00:10,450 --> 00:00:12,940
The shooting team gets points.

5
00:00:12,940 --> 00:00:16,110
The event is the ball
going through the hoop.

6
00:00:16,110 --> 00:00:19,059
The resulting action is that
the scoring team gets points.

7
00:00:20,230 --> 00:00:22,070
The browser has events as well.

8
00:00:22,070 --> 00:00:25,860
Every time you move your mouse,
click on a link,

9
00:00:25,860 --> 00:00:29,080
submit a form, or do anything really,

10
00:00:29,080 --> 00:00:32,630
your browser makes an announcement
of the action you just took.

11
00:00:32,630 --> 00:00:35,660
I want to show you what
the browser is actually doing.

12
00:00:35,660 --> 00:00:37,902
Google Chrome provides a handy function.

13
00:00:37,902 --> 00:00:41,890
The monitorEvents function, that will
allow you to take a peek under the hood

14
00:00:41,890 --> 00:00:43,450
to see events as they are taking place.

15
00:00:44,930 --> 00:00:48,490
You pass to the function the element
on the page that you want it to watch

16
00:00:48,490 --> 00:00:49,020
for events.

17
00:00:50,780 --> 00:00:55,440
Now this function can only be used in
the console on the Chrome Dev Tools.

18
00:00:55,440 --> 00:00:58,420
Don't try to use this function
in your JavaScript file.

19
00:00:58,420 --> 00:01:00,950
It won't work, and
will cause a reference error.

20
00:01:00,950 --> 00:01:04,599
With that disclaimer out of the way, let
me show you the feedback it provides.

21
00:01:05,660 --> 00:01:08,590
So, on this page, you can see,
I have a simple text field.

22
00:01:10,210 --> 00:01:13,460
First I'll use jQuery to select
all the inputs on the page,

23
00:01:13,460 --> 00:01:15,980
then I'll select just
this first one here.

24
00:01:15,980 --> 00:01:18,865
Next I'm going to call
the monitorEvents function and

25
00:01:18,865 --> 00:01:21,630
pass it the variable holding
the first input field.

26
00:01:22,732 --> 00:01:27,550
The monitorEvents function watches
the element for events, and

27
00:01:27,550 --> 00:01:28,870
log them all out.

28
00:01:28,870 --> 00:01:33,290
So, I'll interact with the text field
and watch Chrome log out all the events.

29
00:01:33,290 --> 00:01:36,040
As you can see using
the monitorEvents function,

30
00:01:36,040 --> 00:01:39,310
you can observe what the browsers doing
when you interact with the page elements

31
00:01:39,310 --> 00:01:40,180
in different ways.
