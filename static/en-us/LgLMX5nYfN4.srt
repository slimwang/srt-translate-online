1
00:00:00,420 --> 00:00:02,770
Alright. So, we've actually done pretty well. So through all of

2
00:00:02,770 --> 00:00:04,980
this, we finally figured out what decision trees actually are. We know

3
00:00:04,980 --> 00:00:08,029
what they represent. We know how expressive they are. We have

4
00:00:08,029 --> 00:00:13,560
an algorithm that lets us build the decision trees in an effective

5
00:00:13,560 --> 00:00:17,270
way. We've done just about everything there is to do with

6
00:00:17,270 --> 00:00:20,710
decision trees, but there is still a couple of open questions that

7
00:00:20,710 --> 00:00:23,010
I want to think about. So, here's a couple of them and

8
00:00:23,010 --> 00:00:25,280
I want you to, to think about and then we'll discuss them.

9
00:00:26,360 --> 00:00:30,060
So, so far all of our examples that we've used. All

10
00:00:30,060 --> 00:00:33,790
the the things we've been thinking about for good pedagogical reasons. We

11
00:00:33,790 --> 00:00:39,050
had not only discreet outputs but we also had discreet inputs. So

12
00:00:39,050 --> 00:00:43,020
one question we might ask ourselves, is what happens if we have,

13
00:00:45,400 --> 00:00:49,070
continuous attributes? So Michael, let me ask

14
00:00:49,070 --> 00:00:51,620
you this. Let's say we had some continuous

15
00:00:51,620 --> 00:00:53,360
attributes. We weren't just asking whether someone's an

16
00:00:53,360 --> 00:00:54,900
animal or whether they're human or whether it's

17
00:00:54,900 --> 00:00:57,360
raining outside or we really cared about age

18
00:00:58,380 --> 00:01:00,870
or weight or distance or anything else that

19
00:01:00,870 --> 00:01:02,930
might have a continuous attribute. How are we

20
00:01:02,930 --> 00:01:04,780
going to make that work in a decision tree?

21
00:01:04,780 --> 00:01:07,110
>> Well, I guess the literal way to do it would

22
00:01:07,110 --> 00:01:10,430
be for something like age to have a branching factor that's equal

23
00:01:10,430 --> 00:01:11,870
to the number of possible ages.

24
00:01:11,870 --> 00:01:17,190
>> Okay, so that's one, one possibility. So we stick in age and then

25
00:01:17,190 --> 00:01:22,507
we have one. 1.0, we have one for 1.1, we

26
00:01:22,507 --> 00:01:27,742
have one for 1.11, we have one for 1.111

27
00:01:27,742 --> 00:01:32,620
>> Ahh, I see. Alright. Well, at the very least, okay. Heheheh. What

28
00:01:32,620 --> 00:01:35,970
if, what if we only included ages that were in the training set?

29
00:01:35,970 --> 00:01:38,430
Presumably there's at least a finite number of those. Oh,

30
00:01:38,430 --> 00:01:40,510
we could do that. We could just do that, except

31
00:01:40,510 --> 00:01:42,500
what are we going to do then when we come up

32
00:01:42,500 --> 00:01:46,660
with something in the future that wasn't in the training session.

33
00:01:46,660 --> 00:01:49,580
>> Oh, right. Can we look at the testing set?

34
00:01:49,580 --> 00:01:52,700
>> No were not allowed to look at the testing set. That is cheating,

35
00:01:52,700 --> 00:01:55,640
and not the kind of good cheating that we do when we pic good representation.

36
00:01:55,640 --> 00:02:01,690
>> Okay, fair enough. Well we could, we could Ranges. What about ranges?

37
00:02:01,690 --> 00:02:04,720
Isn't that the way we cover more than just individual values?

38
00:02:04,720 --> 00:02:05,620
>> Give me an example.

39
00:02:05,620 --> 00:02:09,090
>> Say ages you know, in the 20s.

40
00:02:09,090 --> 00:02:12,480
>> Okay, so, huh. How would we represent that

41
00:02:12,480 --> 00:02:18,970
with a decision tree? Let's say in the 20s. Age.

42
00:02:18,970 --> 00:02:19,570
>> How we do that.

43
00:02:19,570 --> 00:02:22,780
>> You could do like age, element sign, bracket.

44
00:02:22,780 --> 00:02:23,680
>> 20.

45
00:02:23,680 --> 00:02:27,400
>> 20 comma 21, or, or 29 or 30 right

46
00:02:27,400 --> 00:02:28,730
per end.

47
00:02:28,730 --> 00:02:33,860
>> Yeah it's too much. Why don't I just say age

48
00:02:35,460 --> 00:02:42,200
Is between less is, let's see, greater than or equal to, 20 and, less than 30.

49
00:02:42,200 --> 00:02:47,200
And just draw a big oval for that. Alright? So that's a range, so

50
00:02:47,200 --> 00:02:51,900
that's all numbers between, 20 and 30 inclusive of 20 but not 30 Right.

51
00:02:51,900 --> 00:02:52,460
>> Yeah.

52
00:02:53,810 --> 00:02:56,950
>> And what's good about that is that's a question. You are either in your

53
00:02:56,950 --> 00:03:05,118
20s or you are not. So, the output of that is actually true or false.

54
00:03:05,118 --> 00:03:08,170
>> So, I guess the good news there is that now

55
00:03:08,170 --> 00:03:10,960
we know how to evaluate attributes like that because we have

56
00:03:10,960 --> 00:03:13,840
a formula from ID3 that tells you what to do.

57
00:03:13,840 --> 00:03:17,220
But seems like there's an awful lot of different ones to check.

58
00:03:17,220 --> 00:03:18,930
>> Right, and in fact if it's

59
00:03:18,930 --> 00:03:22,010
truly a continuous variable, there are in principal an infinite number of

60
00:03:22,010 --> 00:03:25,170
them checked. But we can do now the sort of cheating you wanted

61
00:03:25,170 --> 00:03:27,750
to do before. We can just look at the training set, and

62
00:03:27,750 --> 00:03:30,920
we could try to pick questions that cover the sorts of data in

63
00:03:30,920 --> 00:03:34,080
the training set. So, for example, if all of the values are

64
00:03:34,080 --> 00:03:36,990
in the 20s, then there is no point of even asking the question.

65
00:03:36,990 --> 00:03:40,240
You will start just split instead upon values that were, say less than

66
00:03:40,240 --> 00:03:43,990
25 or greater than 25, and you could imagine all kinds of ways

67
00:03:43,990 --> 00:03:46,370
where you might do that. You might look at all of the values that show up in

68
00:03:46,370 --> 00:03:49,720
the training set, and say well, I am going to do a binary search. So, I am

69
00:03:49,720 --> 00:03:52,740
just going to create an attribute for Less

70
00:03:52,740 --> 00:03:54,280
than half of whatever is in the training set

71
00:03:54,280 --> 00:03:55,920
or greater than half of whatever the range

72
00:03:55,920 --> 00:03:57,520
is in the training set. Does that make sense?

73
00:03:57,520 --> 00:03:58,800
>> Yeah, that's clever.

74
00:03:58,800 --> 00:04:00,900
>> Right. Thank you. I just made that up on the

75
00:04:00,900 --> 00:04:03,560
spot. Okay, so you do those sorts of things and that's how

76
00:04:03,560 --> 00:04:06,995
you would deal with continuous attributes. That brings me to a next

77
00:04:06,995 --> 00:04:09,070
question, I'm going to actually do this as a quiz because I

78
00:04:09,070 --> 00:04:12,620
want an answer from our audience.
