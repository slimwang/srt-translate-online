1
00:00:00,000 --> 00:00:03,060
So we have talked about using search trees, pre-processing,

2
00:00:03,060 --> 00:00:06,270
and approximation to solve NP complete problems.

3
00:00:06,270 --> 00:00:08,820
But there's one technique that we haven't yet talked about

4
00:00:08,820 --> 00:00:13,080
and that is using randomness to solve challenging problems.

5
00:00:13,080 --> 00:00:16,280
Now you know that so far in this course, I have always insisted

6
00:00:16,280 --> 00:00:20,100
on finding guarantees for the performance of algorithms.

7
00:00:20,100 --> 00:00:23,120
I wanted to have guarantees for the running time of the search trees.

8
00:00:23,120 --> 00:00:28,040
I even wanted to have guarantees for approximation. So am I ready to give that up now?

9
00:00:28,040 --> 00:00:30,860
Actually, I'm not, because even when we use randomness,

10
00:00:30,860 --> 00:00:34,720
we can demand certain guarantees from our algorithms.

11
00:00:34,720 --> 00:00:38,100
So, one way we could demand a guarantee from a random algorithm is,

12
00:00:38,100 --> 00:00:43,640
that we say it produces the correct or best possible solution with a certain probability.

13
00:00:43,640 --> 00:00:46,130
So best would be in the case of optimization problems

14
00:00:46,130 --> 00:00:49,370
and correct, of course, in the case of decision problems.

15
00:00:49,370 --> 00:00:52,090
And so, we'll also write this down for decision problems

16
00:00:52,090 --> 00:00:57,610
and finally we could also say that the algorithm has a running time that is random,

17
00:00:57,610 --> 00:01:02,410
and we want the running time to be polynomial with a certain probability

18
00:01:02,410 --> 00:01:05,640
and of course in this case here, we would be demanding that the solution is always

19
00:01:05,640 --> 00:01:08,730
the best possible solution or the correct solution.

20
00:01:08,730 --> 00:01:11,470
Well, actually we could also have combinations of these,

21
00:01:11,470 --> 00:01:13,840
but then the algorithm becomes rather weak in my mind

22
00:01:13,840 --> 00:01:17,650
and actually I'm not aware of any example where I have seen this before.

23
00:01:17,650 --> 00:01:19,550
Now, some of these approaches have special names

24
00:01:19,550 --> 00:01:22,860
and this one here is known as a Monte Carlo algorithm,

25
00:01:22,860 --> 00:01:25,510
and this one here is known as a Las Vegas approach.

26
00:01:25,510 --> 00:01:28,410
Don't ask me what that says about casinos in

27
00:01:28,410 --> 00:01:32,580
Europe versus casinos in America because I have no clue.

28
00:01:32,580 --> 00:01:36,340
Now the two approaches, Monte Carlo and Las Vegas are actually related to each other,

29
00:01:36,340 --> 00:01:40,170
and if you think about it for a little while, I think you can figure that out yourself.

30
00:01:40,170 --> 00:01:43,220
So my question for you is how are Monte Carlo algorithms

31
00:01:43,220 --> 00:01:47,460
and Las Vegas algorithms related to each other, and I'll give you three choices here.

32
00:01:47,460 --> 00:01:52,150
Is it that any Las Vegas algorithm can be turned into a Monte Carlo algorithm?

33
00:01:52,150 --> 00:01:56,150
So any algorithm over here can be turned into an algorithm like this.

34
00:01:56,150 --> 00:02:02,290
Is it the other way around, that any Monte Carlo algorithm can be turned into a Las Vegas algorithm?

35
00:02:02,290 --> 99:59:59,999
Or is it even that the two approaches are, roughly speaking, of course, more or less the same.
