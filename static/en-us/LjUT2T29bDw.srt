1
00:00:00,230 --> 00:00:04,270
The aria design practices' advice for
the radio group Pattern notes.

2
00:00:04,270 --> 00:00:08,050
It is recommended that both the radio
group and the radio button have a label

3
00:00:08,050 --> 00:00:11,810
that is visible and referenced
using the aria-labelledby property.

4
00:00:11,810 --> 00:00:16,175
And use an aria-describedby property to
add additional information to the radio

5
00:00:16,175 --> 00:00:18,442
buttons or radio group.

6
00:00:18,442 --> 00:00:21,090
Aria provides several mechanisms for
adding labels and

7
00:00:21,090 --> 00:00:22,810
descriptions to elements.

8
00:00:22,810 --> 00:00:26,250
In fact, aria is the only way to add
accessible help or description text.

9
00:00:27,400 --> 00:00:30,510
Let's take a look at the properties
aria provides to enable us to create

10
00:00:30,510 --> 00:00:31,309
accessible labels.

11
00:00:31,309 --> 00:00:35,435
Aria-label allows us to specify
a string directly to be

12
00:00:35,435 --> 00:00:37,645
used as the accessible label.

13
00:00:37,645 --> 00:00:40,995
One situation in which you might use an
aria-label attribute is where you have

14
00:00:40,995 --> 00:00:44,897
some kind of visual indication
as to the purpose of an element.

15
00:00:44,897 --> 00:00:46,867
But still need to clarify that for

16
00:00:46,867 --> 00:00:50,037
anyone who might not be able to
access that visual indication,

17
00:00:50,037 --> 00:00:53,197
such as a button which uses
a graphic to indicate its purpose.

18
00:00:53,197 --> 00:00:57,887
This overrides any other native labeling
mechanism such as a label element.

19
00:00:57,887 --> 00:01:02,781
Or for example, if a button has both
text content and an aria-label,

20
00:01:02,781 --> 00:01:05,627
only the aria-label value will be used.

21
00:01:05,627 --> 00:01:09,690
Aria-labelledby allows us
to specify an element ID

22
00:01:09,690 --> 00:01:12,725
to refer to another element in
the dumb as this element's label.

23
00:01:12,725 --> 00:01:16,449
Aria-labelledby is much like we're
using a label element with some key

24
00:01:16,449 --> 00:01:17,275
differences.

25
00:01:17,275 --> 00:01:20,825
Aria-labelledby may be
used on any element.

26
00:01:20,825 --> 00:01:25,395
Aria-labelledby is much like using a
label element with some key differences.

27
00:01:25,395 --> 00:01:30,020
Aria-labelledby may be used on any
element, not just labellable elements.

28
00:01:31,130 --> 00:01:34,100
While a label element refers
to the thing it labels,

29
00:01:34,100 --> 00:01:37,680
the relationship is reversed
in the case of aria-laelledby.

30
00:01:37,680 --> 00:01:40,880
The thing which is labeled refers
to the thing which labels it.

31
00:01:40,880 --> 00:01:43,445
Since aria only affects
the accessibility tree,

32
00:01:43,445 --> 00:01:46,460
aria-laelledby by does not
give you the nice label

33
00:01:46,460 --> 00:01:48,705
clicking behavior you get
from the label element.

34
00:01:48,705 --> 00:01:51,830
Aria-labelledby can take a list

35
00:01:51,830 --> 00:01:55,440
of ID refs to compose a label
out of multiple elements.

36
00:01:55,440 --> 00:01:58,800
The label will be concatenated in
the order the ID refs are given.

37
00:01:59,810 --> 00:02:02,840
And aria-labelledby can refer
to elements which are otherwise

38
00:02:02,840 --> 00:02:04,365
hidden from assistive technology.

39
00:02:04,365 --> 00:02:09,199
Aria-labelledby overrides all
other name sources for an element.

40
00:02:09,199 --> 00:02:14,060
So for example, if something has both
an aria-labelledby and an aria label.

41
00:02:14,060 --> 00:02:16,703
Or an aria-labelledby and
a native HTML label,

42
00:02:16,703 --> 00:02:19,930
the aria-labelledby label
will always take precedence.
