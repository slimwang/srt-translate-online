1
00:00:00,390 --> 00:00:03,420
So the wakeup tree for the MCS barrier

2
00:00:03,420 --> 00:00:06,490
is a binary wakeup tree. Once again here, there's

3
00:00:06,490 --> 00:00:09,900
a theoretical result that backs this particular choice

4
00:00:09,900 --> 00:00:12,580
that the shortest critical path from the root to

5
00:00:12,580 --> 00:00:17,250
the last awakened child, is shortest when you

6
00:00:17,250 --> 00:00:19,520
have a binary wakeup tree, and that's the reason

7
00:00:19,520 --> 00:00:21,980
that... They chosen to have this construction. Even

8
00:00:21,980 --> 00:00:25,907
though the arrival tree's a [INAUDIBLE] tree. The construction

9
00:00:25,907 --> 00:00:27,565
for the wake up tree is a binary

10
00:00:27,565 --> 00:00:30,180
tree. And let me explain the construction of this

11
00:00:30,180 --> 00:00:33,740
binary wake up tree. Every processor is assigned

12
00:00:33,740 --> 00:00:36,070
a unique spot again. So P 0 the root

13
00:00:36,070 --> 00:00:39,470
And uh,P1, P2 over here, P3, P4, P5,

14
00:00:39,470 --> 00:00:43,125
P6, and P7 So that completes the eight processes

15
00:00:43,125 --> 00:00:47,500
for this binary tree set-up for wakeup. And the

16
00:00:47,500 --> 00:00:51,140
latest structure that is used in the wakeup tree

17
00:00:51,140 --> 00:00:54,640
is as a child pointer data structure. And

18
00:00:54,640 --> 00:00:57,610
the ChildPointer data structure is essentially a way by

19
00:00:57,610 --> 00:00:59,590
which a parent can reach down to the

20
00:00:59,590 --> 00:01:02,620
children and indicate that that it is time to

21
00:01:02,620 --> 00:01:05,730
wake up. So, that's the purpose of this

22
00:01:05,730 --> 00:01:09,750
ChildPointer data structure. And, once again, as you can

23
00:01:09,750 --> 00:01:13,640
see, depending on the particular location in this

24
00:01:13,640 --> 00:01:16,150
wakeup tree, they may have children, they may not

25
00:01:16,150 --> 00:01:23,420
have children. So, P0 has two children, P1 has two children, P3 and P4. P2

26
00:01:23,420 --> 00:01:29,480
has two children, P5 and P6. P3 had one child, P7, and that is it. Because you

27
00:01:29,480 --> 00:01:36,040
have a processors, and these guys. Don't have any children P4, P5, and P6. So in

28
00:01:36,040 --> 00:01:38,650
terms of wake up, what is going to happen

29
00:01:38,650 --> 00:01:41,480
is that when everybody arrives at the barrier P0

30
00:01:41,480 --> 00:01:44,470
is going to be noticing it, and through the

31
00:01:44,470 --> 00:01:46,690
arrival tree. And so now it says oh, it's

32
00:01:46,690 --> 00:01:48,900
time now to wake up everybody, and the way

33
00:01:48,900 --> 00:01:53,220
it does that, it has a specific pointer To reach

34
00:01:53,220 --> 00:01:56,580
into P1 and signal to P1 that it's time

35
00:01:56,580 --> 00:02:00,190
to wake up. And similarly it has a specific pointer

36
00:02:00,190 --> 00:02:03,090
in, in, in, in P2 to wake up. So

37
00:02:03,090 --> 00:02:06,720
a particular memory location, which is a pointer to a

38
00:02:06,720 --> 00:02:09,600
location that this guy's waiting on to wake up.

39
00:02:09,600 --> 00:02:12,830
So it's going to do that. And so what is

40
00:02:12,830 --> 00:02:15,540
going on is that agian, this is another important

41
00:02:15,540 --> 00:02:19,300
point that in order to, to know that it is

42
00:02:19,300 --> 00:02:22,250
time to wake up, each one of these processes

43
00:02:22,250 --> 00:02:25,350
is standing on a statically determined location. P2 is

44
00:02:25,350 --> 00:02:28,580
standing on a particular location here, and, and P1

45
00:02:28,580 --> 00:02:31,900
is standing on a particular location here. And so when

46
00:02:31,900 --> 00:02:36,700
P0 signals P1 it is exactly sending a signal

47
00:02:36,700 --> 00:02:41,510
to P1 and it is not affecting any of the other processes. And similarly, when it

48
00:02:41,510 --> 00:02:46,760
signals P2 it signals exactly P2 using this pointer. And

49
00:02:46,760 --> 00:02:52,280
similarly, once P1 and P2 are woken up. They can march down the tree

50
00:02:52,280 --> 00:02:57,490
and signal P3 and P4, and signal P5 and P6

51
00:02:57,490 --> 00:03:02,700
by using the, the statically assigned spots that

52
00:03:02,700 --> 00:03:05,380
the children are spinning on to indicate that it

53
00:03:05,380 --> 00:03:09,950
is time to wake up. So, the key point I want to stress again is the fact

54
00:03:09,950 --> 00:03:13,520
that. In this construction of the tree, by

55
00:03:13,520 --> 00:03:17,000
design. We make sure that we know a position

56
00:03:17,000 --> 00:03:19,530
in the tree and we know exactly the,

57
00:03:19,530 --> 00:03:22,540
the memory location that we have to spin on,

58
00:03:22,540 --> 00:03:28,650
in order to know that it is time to wake up. So these red arrows show the

59
00:03:28,650 --> 00:03:31,730
specific location that is associated with each one

60
00:03:31,730 --> 00:03:36,030
of these processors In the wakeup tree. So once

61
00:03:36,030 --> 00:03:39,310
the parents signal the children and they marched

62
00:03:39,310 --> 00:03:41,420
down and signal all the other children, then at

63
00:03:41,420 --> 00:03:44,580
that point, everybody's awake, and the barrier has

64
00:03:44,580 --> 00:03:48,030
been reached. So the key take, take away points

65
00:03:48,030 --> 00:03:53,650
with the MCS tree barrier is that the wakeup tree is binary. The arrival tree

66
00:03:53,650 --> 00:03:58,330
is forwarding and the static locations associated

67
00:03:58,330 --> 00:04:01,460
with each processor, both in the arrival tree

68
00:04:01,460 --> 00:04:03,404
that we saw earlier, and the /?

69
00:04:03,404 --> 00:04:08,680
tree. And through the specific statically assigned spot

70
00:04:08,680 --> 00:04:11,200
that each processor can spin on, we

71
00:04:11,200 --> 00:04:13,380
are making sure that the amount of contention

72
00:04:13,380 --> 00:04:16,850
on the network is limited. And also by

73
00:04:16,850 --> 00:04:20,740
packing the variables into a single data structure

74
00:04:20,740 --> 00:04:22,420
we can make sure that the contention for

75
00:04:22,420 --> 00:04:25,500
shared locations is minimized as neat as possible.
