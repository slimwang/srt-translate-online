1
00:00:00,170 --> 00:00:03,900
When you did your programming with Sarah, it's quite possible that some things

2
00:00:03,900 --> 00:00:07,635
went wrong and you got some nasty error messages. When you learn a new

3
00:00:07,635 --> 00:00:11,440
langauge, be it a human language or a programming language, errors are a fact

4
00:00:11,440 --> 00:00:16,320
of life. Let me show you some common errors so that you can recognize and fix

5
00:00:16,320 --> 00:00:21,250
them. Here's a typical error. Have a quick look and see if you can tell which

6
00:00:21,250 --> 00:00:27,167
part is wrong. That can't be right, the terminal window object was system.out

7
00:00:27,167 --> 00:00:32,580
not system.ouch. Let's see what happens if one makes such an error. You may

8
00:00:32,580 --> 00:00:38,080
want to work along with me here in Blue Jay. Open the errors project and open

9
00:00:38,080 --> 00:00:44,920
error 1. Here is the error. Let's compile and the compiler, the program that

10
00:00:44,920 --> 00:00:50,520
translate Java into lower-level code complains and says it has no idea what the

11
00:00:50,520 --> 00:00:56,320
variable ouch is. The compiler knows system.out, it doesn't know system.ouch.

12
00:00:56,320 --> 00:00:59,940
Such an error is called a compile time error because it's found when you

13
00:00:59,940 --> 00:01:04,260
compile. Some people call it a syntax error because there's something wrong

14
00:01:04,260 --> 00:01:09,660
with the syntax of this statement here. As you can imagine there are lots of

15
00:01:09,660 --> 00:01:13,610
syntax errors you could make. You might forget the semicolon. You might forget

16
00:01:13,610 --> 00:01:18,370
one of these quotation marks or both. You might forget one of these dots. Any

17
00:01:18,370 --> 00:01:22,830
time you do that the compiler will complain and you just fix that particular

18
00:01:22,830 --> 00:01:27,520
error and recompile. It happens to the best of us. Now here we have a different

19
00:01:27,520 --> 00:01:31,810
kind of error, again have a look and see if you can guess. The programmer

20
00:01:31,810 --> 00:01:36,940
misspelled world, let's see what happens in this case. When you compile,

21
00:01:36,940 --> 00:01:41,640
there's no error, the compiler doesn't know English. And it has no idea that

22
00:01:41,640 --> 00:01:46,540
this part has been misspelled. We can run the program and it runs. It just does

23
00:01:46,540 --> 00:01:51,040
the wrong thing. When a program compiles and runs but it produces the wrong

24
00:01:51,040 --> 00:01:56,750
output, then that's called a run time error. Some people call it a logic error

25
00:01:56,750 --> 00:02:01,270
because there's something wrong with the logic of the program not just it's

26
00:02:01,270 --> 00:02:05,640
syntax. Now have a look at this statement, it also has an error. What do you

27
00:02:05,640 --> 00:02:11,780
think will happen when you try to compile and run a program containing this

28
00:02:11,780 --> 00:02:15,750
statement? Do you think it doesn't even compile? Do you think that it compiles

29
00:02:15,750 --> 00:02:21,070
and runs but then it prints the wrong value? Like in this case. Or will it

30
00:02:21,070 --> 00:02:25,130
compile and run and then print an error message? Or will your keyboard melt

31
00:02:25,130 --> 00:02:28,665
into a puddle of plastic? If you have BlueJ open right now, just give it a

32
00:02:28,665 --> 00:02:30,110
quick try.
