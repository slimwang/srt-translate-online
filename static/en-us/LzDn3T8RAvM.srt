1
00:00:00,730 --> 00:00:03,100
Back to our networking diagram.

2
00:00:03,100 --> 00:00:07,470
So the HTTP request will include
the URL we just talked about along with

3
00:00:07,470 --> 00:00:11,770
other bits of information, such as what
action we want to perform on the data,

4
00:00:11,770 --> 00:00:14,660
information about the device,
making a request, and more.

5
00:00:14,660 --> 00:00:17,090
The whole request gets
packaged up together.

6
00:00:17,090 --> 00:00:19,580
It's like sticking
a message in an envelope.

7
00:00:19,580 --> 00:00:25,110
The HTTP request is like an envelope
with a destination and a return address.

8
00:00:25,110 --> 00:00:29,450
After the request is packaged, Android
offers functionality to help a sender

9
00:00:29,450 --> 00:00:32,540
message over the network
to the correct web server.

10
00:00:32,540 --> 00:00:35,495
We haven't officially defined
the word network yet, but

11
00:00:35,495 --> 00:00:37,916
you can think of it as
a digital postal service.

12
00:00:37,916 --> 00:00:39,397
A network is really just two or

13
00:00:39,397 --> 00:00:42,727
more computers connected in some
way that lets them communicate.

14
00:00:42,727 --> 00:00:47,624
And when I say computer, I mean
any computing device like a phone,

15
00:00:47,624 --> 00:00:49,119
laptop or a server.

16
00:00:49,119 --> 00:00:53,214
The internet is a large scale network
consisting of many computers around

17
00:00:53,214 --> 00:00:54,210
the world.

18
00:00:54,210 --> 00:00:57,650
And we can use the HTTP
protocol to route our request

19
00:00:57,650 --> 00:00:59,640
from one computer to the other.

20
00:00:59,640 --> 00:01:03,350
To communicate to a computer on
a different location, we must establish

21
00:01:03,350 --> 00:01:08,230
communication channel, also known as a
network connection, across the internet.

22
00:01:08,230 --> 00:01:10,760
Then we can exchange messages
with the other computer.

23
00:01:12,640 --> 00:01:16,060
In this diagram, we've represented
USGS as a single computer, but

24
00:01:16,060 --> 00:01:18,520
keep in mind that they
have a lot of data.

25
00:01:18,520 --> 00:01:22,088
So they probably have a whole group
of computers who are responding to

26
00:01:22,088 --> 00:01:22,709
requests.

27
00:01:22,709 --> 00:01:27,355
A single computer wouldn't be able to
handle requests from all over the world

28
00:01:27,355 --> 00:01:29,080
for the US geological data.

29
00:01:30,200 --> 00:01:32,720
At this point,
I want to introduce you to some more

30
00:01:32,720 --> 00:01:35,450
formal terminology
that you'll often hear.

31
00:01:35,450 --> 00:01:39,970
You can refer to the USGS
computers that are providing data

32
00:01:39,970 --> 00:01:42,550
as the USGS Web Server.

33
00:01:42,550 --> 00:01:46,911
A web server is simply another
computer or a group of computers on

34
00:01:46,911 --> 00:01:51,047
a network running a program
that responds to HTTP requests.

35
00:01:51,047 --> 00:01:55,322
On the other hand, your phone can
be referred to as the client.

36
00:01:55,322 --> 00:01:58,472
The client requests the information
from the server and

37
00:01:58,472 --> 00:02:01,100
then displays the results to the user.

38
00:02:01,100 --> 00:02:04,640
Often, many different clients would
be connected to the same server, but

39
00:02:04,640 --> 00:02:08,050
each client may display
the data in different ways.

40
00:02:08,050 --> 00:02:12,679
For example, a mobile client may show
information that is more convenient to

41
00:02:12,679 --> 00:02:15,030
viewing in a small mobile screen.

42
00:02:15,030 --> 00:02:20,330
A web client on a desktop, for instance,
might show more detailed information

43
00:02:20,330 --> 00:02:23,220
taking full advantage of
the larger screen size.

44
00:02:23,220 --> 00:02:26,050
Each client sends out
a request to the server.

45
00:02:26,050 --> 00:02:30,751
When the web server receives the
request, it may compose an HTML web page

46
00:02:30,751 --> 00:02:35,378
to return to the sender for display,
or it might return structured data

47
00:02:35,378 --> 00:02:39,954
that we can use in an app we're building
in a format such as JSON or XML.

48
00:02:39,954 --> 00:02:42,666
Once the clients receive
the response from the server,

49
00:02:42,666 --> 00:02:45,730
they control how the data
gets displayed to the users.

50
00:02:45,730 --> 00:02:49,464
For example, a web browser can
render a web page to the screen or

51
00:02:49,464 --> 00:02:53,479
a mobile app can parse out the bits
of data that it needs to show useful

52
00:02:53,479 --> 00:02:55,612
information on the device screen.

53
00:02:55,612 --> 00:03:00,300
In this lesson, we'll zoom in on major
steps for the data exchange process.

54
00:03:00,300 --> 00:03:03,420
First, we'll talk about how
to form a proper HTTP request

55
00:03:03,420 --> 00:03:07,400
based on the information we want and
from where we want to get it.

56
00:03:07,400 --> 00:03:11,870
Second, we'll send the request to
the server, which will process it and

57
00:03:11,870 --> 00:03:14,110
figure out a proper
response to send back.

58
00:03:15,210 --> 00:03:19,698
Third, we'll talk about how the client
can process or parse this response and

59
00:03:19,698 --> 00:03:22,359
convert it into a format
that it understands.

60
00:03:22,359 --> 00:03:27,650
Then lastly, we can update the UI in our
app to show the results to the user.

61
00:03:27,650 --> 00:03:30,470
Before we get into the details
of networking, though,

62
00:03:30,470 --> 00:03:34,480
there's one constraint on the Android
device that we need to deal with first.
