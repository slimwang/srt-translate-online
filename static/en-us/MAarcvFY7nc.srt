1
00:00:00,000 --> 00:00:04,000
Okay, so now that we know that while sometimes we can be clever

2
00:00:04,000 --> 00:00:07,000
a lot of the time we just can't test everything we would like.

3
00:00:07,000 --> 00:00:10,000
How useful is any individual test case?

4
00:00:10,000 --> 00:00:15,000
Is there any way to make a test case that is a little bit more useful in practice?

5
00:00:15,000 --> 00:00:19,000
Let's look at this real quick--we just enqueued 7 into our

6
00:00:19,000 --> 00:00:22,000
fixed-size queue and then immediately dequeue it.

7
00:00:22,000 --> 00:00:29,000
So we should get 7 back out and if that's the case then we print success

8
00:00:29,000 --> 00:00:31,000
and otherwise we have an error.

9
00:00:31,000 --> 00:00:36,000
How useful is this? Let's go ahead and turn this into a quiz.

10
00:00:36,000 --> 00:00:39,000
The question is if we passed this test case, what else have we learned

11
00:00:39,000 --> 00:00:42,000
about our code or have we learned anything?

12
00:00:42,000 --> 00:00:46,000
And your options are our code passes this one test case,

13
00:00:46,000 --> 00:00:49,000
our code passes any test case where we replaced 7 with a different integer,

14
00:00:49,000 --> 00:00:53,000
or our code passes many test cases where we replaced 7 with a different integer.

15
00:00:53,000 --> 99:59:59,999
Check all that apply.
