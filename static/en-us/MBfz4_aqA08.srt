1
00:00:00,330 --> 00:00:05,290
So now that we have seen two policies
that try to approximate LRU replacement,

2
00:00:05,290 --> 00:00:08,620
let's see if we understood
how NMRU works.

3
00:00:08,620 --> 00:00:12,650
Suppose we have a fully associative
cache with only four lines and

4
00:00:12,650 --> 00:00:15,480
it's choosing NMRU replacement.

5
00:00:15,480 --> 00:00:20,060
Starts out empty,
none of the lines contain any blocks.

6
00:00:20,060 --> 00:00:24,840
And suppose the processor accesses
blocks in the following order.

7
00:00:24,840 --> 00:00:30,060
It accesses something in Block A,
then again something in Block A,

8
00:00:30,060 --> 00:00:34,990
then something in Block B,
then something in Block A,

9
00:00:34,990 --> 00:00:38,000
then something in Block C, then
something in Block A, then something in

10
00:00:38,000 --> 00:00:42,336
Block D, then something in Block A,
then something in Block E.

11
00:00:42,336 --> 00:00:49,720
A, A, A, A, and
finally something in block B.

12
00:00:49,720 --> 00:00:52,130
The question for you.

13
00:00:52,130 --> 00:00:55,380
What's the smallest
number of cache misses

14
00:00:55,380 --> 00:00:59,460
we will have on this sequence
of accesses, and what's

15
00:00:59,460 --> 00:01:03,690
the largest number of cache misses
that we might have on these accesses?
