1
00:00:00,610 --> 00:00:07,280
Discretization or discretizing is
an important step in this whole process.

2
00:00:07,280 --> 00:00:11,170
What we want to do is
have a way to convert

3
00:00:11,170 --> 00:00:16,440
a real number into an integer
across a limited scale.

4
00:00:16,440 --> 00:00:22,130
In other words, we might have hundreds
of individual values here between 0 and

5
00:00:22,130 --> 00:00:24,140
25 of a real number, and

6
00:00:24,140 --> 00:00:28,091
we want to convert that into an integer,
say between 0 and 9.

7
00:00:29,110 --> 00:00:31,830
There's a fairly easy way to do that and
I'll show you how right now.

8
00:00:32,860 --> 00:00:33,880
So here's what we do.

9
00:00:33,880 --> 00:00:38,590
First thing is we determine ahead of
time how many steps we're going to have.

10
00:00:38,590 --> 00:00:44,030
In other words, how many groups do we
want to be able to put the data into?

11
00:00:44,030 --> 00:00:48,243
Like I said before,
to have an integer between zero and

12
00:00:48,243 --> 00:00:50,930
nine, we would use ten in this case.

13
00:00:50,930 --> 00:00:54,510
So we divide how many data
elements we have all together

14
00:00:54,510 --> 00:00:56,250
by the number of steps.

15
00:00:56,250 --> 00:01:01,410
Then we sort the data, and
then the thresholds just end

16
00:01:01,410 --> 00:01:06,358
up being the locations for
each one of these values.

17
00:01:06,358 --> 00:01:10,389
So in other words, if we had,
say, 100 data elements and

18
00:01:10,389 --> 00:01:13,958
we were going to have 10 steps,
our step size is 10.

19
00:01:13,958 --> 00:01:16,758
So we just find the 10th
data element and

20
00:01:16,758 --> 00:01:22,380
that's our first threshold, and
then our 20th and 30th and so on.

21
00:01:22,380 --> 00:01:24,620
It ends up looking something like this.

22
00:01:24,620 --> 00:01:29,990
When the data is sort of sparse,
our thresholds are set far apart.

23
00:01:29,990 --> 00:01:35,480
When the data is not sparse, these
thresholds end up being closer together.

24
00:01:35,480 --> 00:01:37,770
So in this particular example,

25
00:01:37,770 --> 00:01:40,640
our thresholds might end up
looking something like this.

26
00:01:40,640 --> 00:01:43,718
And when we go to query,
when we have a new value and

27
00:01:43,718 --> 00:01:50,200
we want to see what is its discretized
value, we'll say it was a value here.

28
00:01:50,200 --> 00:01:52,945
Boom, it's between those two thresholds,
so it would be an 8.
