1
00:00:00,008 --> 00:00:01,740
The most well-known heuristic for

2
00:00:01,740 --> 00:00:04,860
graph partitioning is
the Kernighan-Lin algorithm.

3
00:00:04,860 --> 00:00:07,730
By the way,
the g in Kernighan is silent.

4
00:00:07,730 --> 00:00:09,830
That's gnu as in the wildebeest,

5
00:00:09,830 --> 00:00:14,470
not the the free software thing,
which has a hard g, as in ga-nu.

6
00:00:14,470 --> 00:00:15,858
So it's gnu, not ga-nu.

7
00:00:15,858 --> 00:00:17,120
Got it?

8
00:00:17,120 --> 00:00:20,010
The idea behind the K-L
algorithm is simple.

9
00:00:20,010 --> 00:00:23,990
Given a graph, divide the vertices
into two subsets of equal or

10
00:00:23,990 --> 00:00:25,930
nearly equal size.

11
00:00:25,930 --> 00:00:26,520
Yes.

12
00:00:26,520 --> 00:00:28,570
Any split will do.

13
00:00:28,570 --> 00:00:30,620
I'm serious, any one you want.

14
00:00:30,620 --> 00:00:31,200
It's okay.

15
00:00:31,200 --> 00:00:32,470
Go ahead.

16
00:00:32,470 --> 00:00:35,000
Oh, for goodness sake,
just pick a partition already!

17
00:00:35,000 --> 00:00:38,200
Let's define the cost of this
partitioning to be the number of edges

18
00:00:38,200 --> 00:00:40,800
that go between V1 and V2.

19
00:00:40,800 --> 00:00:46,590
Now imagine that a magic bean hands you
two equal sized subsets of V1 and V2.

20
00:00:46,590 --> 00:00:50,040
Let's call these subsets X1 and X2.

21
00:00:50,040 --> 00:00:53,150
Imagine that you were to
swap these two subsets.

22
00:00:53,150 --> 00:00:55,880
Naturally you would expect
the cut size to change.

23
00:00:55,880 --> 00:00:57,460
But by how much?

24
00:00:57,460 --> 00:01:01,430
To answer this question in a formal way,
let's start with some definitions.

25
00:01:01,430 --> 00:01:06,380
Consider one vertex, let's call it a,
which lives on one side of a partition.

26
00:01:06,380 --> 00:01:09,250
Define its external cost
as the number of edges that

27
00:01:09,250 --> 00:01:11,320
land in the other partition.

28
00:01:11,320 --> 00:01:12,140
In this cartoon,

29
00:01:12,140 --> 00:01:16,870
a's external cost, denoted E 1
of a is equal to three edges.

30
00:01:16,870 --> 00:01:22,870
To find a similar external cost, E 2 of
b for any vertex b that lives in V 2.

31
00:01:22,870 --> 00:01:26,300
Next, define the notion
of an internal cost.

32
00:01:26,300 --> 00:01:29,540
The internal cost will count
the number of edges from a vertex to

33
00:01:29,540 --> 00:01:32,450
other vertices that live
in the same partition.

34
00:01:32,450 --> 00:01:37,110
From these definitions, you can write
down the cost of a partition as follows.

35
00:01:37,110 --> 00:01:42,090
It's the cost of the partition, ignoring
a and b, plus the external cost of a,

36
00:01:42,090 --> 00:01:45,810
the external cost of b,
and minus some constant.

37
00:01:45,810 --> 00:01:47,600
So what's this constant?

38
00:01:47,600 --> 00:01:52,060
You need that constant to account for
a possible edge between a and b.

39
00:01:52,060 --> 00:01:55,940
The constant is one if there's
an edge there and zero otherwise.

40
00:01:55,940 --> 00:01:56,900
But why subtract it?

41
00:01:58,070 --> 00:02:01,950
That is a terrific question and
you should take a moment to ponder it.

42
00:02:01,950 --> 00:02:04,410
Now suppose you swap a and b.

43
00:02:04,410 --> 00:02:06,080
What's the new cost?

44
00:02:06,080 --> 00:02:08,810
Well, any edge that was
incident on a that was

45
00:02:08,810 --> 00:02:11,690
previously external is now internal.

46
00:02:11,690 --> 00:02:13,370
Same thing goes for b.

47
00:02:13,370 --> 00:02:17,190
So to get the new cost, let's start
with the old cost, ignoring a and b, and

48
00:02:17,190 --> 00:02:19,220
then add some adjustments.

49
00:02:19,220 --> 00:02:21,740
The adjustments involve
the internal costs of a and

50
00:02:21,740 --> 00:02:24,130
b plus the constant again.

51
00:02:24,130 --> 00:02:26,630
Hey, what's with the plus constant, now?

52
00:02:26,630 --> 00:02:29,230
Now let's look at the change in cost.

53
00:02:29,230 --> 00:02:31,960
That's the old cost minus the new cost.

54
00:02:31,960 --> 00:02:34,010
After some algebra, you get this.

55
00:02:34,010 --> 00:02:35,430
The larger this change,

56
00:02:35,430 --> 00:02:39,400
the better, because it means
a larger decrease in the cost.

57
00:02:39,400 --> 00:02:42,510
Let's call this cost the gain
from swapping a and b.

58
00:02:43,640 --> 00:02:44,296
By the way,

59
00:02:44,296 --> 00:02:48,386
do you see that it's possible that
gain of ab could actually be negative?
