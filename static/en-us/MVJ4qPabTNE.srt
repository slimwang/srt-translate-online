1
00:00:00,000 --> 00:00:03,000
Here's my answer. Here's the definition for the do function.

2
00:00:03,000 --> 00:00:05,000
I make a random choice of the cards,

3
00:00:05,000 --> 00:00:09,000
and I replace that card in the deck with the empty string.

4
00:00:09,000 --> 00:00:13,000
I do that once, and that gives me the cards left without that 1 card.

5
00:00:13,000 --> 00:00:19,000
Then if the action is gathering, I add to my score the number of hens that were in the yard,

6
00:00:19,000 --> 00:00:21,000
and there's no more hens left in the yard.

7
00:00:21,000 --> 00:00:24,000
If the action was waiting and a hen shows up,

8
00:00:24,000 --> 00:00:27,000
then I add that to the number of hens in the yard.

9
00:00:27,000 --> 00:00:30,000
And if the action was waiting and a fox shows up,

10
00:00:30,000 --> 00:00:35,000
then, oops, I don't add anything to my score and the yard goes down to 0,

11
00:00:35,000 --> 00:00:37,000
and I've still got those cards left.

12
00:00:37,000 --> 00:00:43,000
Then if something went wrong, if the strategy function returned a bad value or something,

13
00:00:43,000 --> 00:00:46,000
then I just don't do anything and I return the state.

14
00:00:46,000 --> 00:00:50,000
And since we didn't specify what to do, you're free to do what you want in that case.

15
00:00:50,000 --> 00:00:53,000
You could have raised an error. That would be a reasonable thing to do.

16
00:00:53,000 --> 00:00:55,000
But the easiest is just to return the state.

17
00:00:55,000 --> 00:00:57,000
Here's my strategy function.

18
00:00:57,000 --> 00:01:01,000
I didn't bother writing out the optimal function, although you certainly could do that.

19
00:01:01,000 --> 00:01:03,000
What I did is first I said, "We're counting cards."

20
00:01:03,000 --> 00:01:06,000
"We better take advantage of that to some degree."

21
00:01:06,000 --> 00:01:09,000
"If there are no foxes left, then we might as well wait

22
00:01:09,000 --> 00:01:12,000
"and gather up all the rest of the chickens."

23
00:01:12,000 --> 00:01:14,000
So I made sure I did that.

24
00:01:14,000 --> 00:01:20,000
And then I tried all possible values of how long we should wait for

25
00:01:20,000 --> 00:01:22,000
and found that 3 was the best.

26
00:01:22,000 --> 00:01:26,000
So we wait until there's 3, then we gather them,

27
00:01:26,000 --> 00:01:29,000
and if there's less than 3, then we wait.

28
00:01:29,000 --> 00:01:33,000
Is this strategy superior? The answer is yes, it is.

29
00:01:33,000 --> 00:01:35,000
By how much? By almost 3 points.

30
00:01:35,000 --> 00:01:41,000
Take5 averaged 29.57, and my strategy averaged 32.3.
