1
00:00:00,130 --> 00:00:02,290
So our app isn't the most exciting or

2
00:00:02,290 --> 00:00:04,154
interactive website
that's ever been created.

3
00:00:04,154 --> 00:00:07,370
Let's spruce it up a bit by adding
an order manager to it that

4
00:00:07,370 --> 00:00:09,790
will track what we're eating each day.

5
00:00:09,790 --> 00:00:13,580
We'll build up this order manager with
templates, controllers and a service.

6
00:00:14,960 --> 00:00:17,060
We'll need to create the service
that will be responsible for

7
00:00:17,060 --> 00:00:17,829
managing the orders.

8
00:00:19,970 --> 00:00:22,830
This service will need to keep track
of what has been ordered for each day.

9
00:00:22,830 --> 00:00:27,100
To do that we can create a simple object
to keep track of each day's items.

10
00:00:27,100 --> 00:00:29,640
We also need to keep track of
the currently selected day, so

11
00:00:29,640 --> 00:00:32,930
the user will know which day
they're ordering a menu item for.

12
00:00:32,930 --> 00:00:35,440
For this service to be useful,
it needs to manage this data.

13
00:00:36,530 --> 00:00:40,140
Consumers of this service should be
able to get the current list of orders.

14
00:00:40,140 --> 00:00:43,940
They should also be able to get and
set the active day.

15
00:00:43,940 --> 00:00:47,400
And last they should be able to
choose an item for a meal and

16
00:00:47,400 --> 00:00:49,530
then remove an item from a meal.

17
00:00:49,530 --> 00:00:52,700
The order manager is now capable of
tracking anything the user wants to

18
00:00:52,700 --> 00:00:53,480
eat for any meal.

19
00:00:54,620 --> 00:00:55,480
Let's create a template and

20
00:00:55,480 --> 00:00:58,330
control it to let the user keep
track of their menu items.

21
00:00:58,330 --> 00:01:00,820
We need a template that
will display our orders and

22
00:01:00,820 --> 00:01:04,750
a controller that will set the initial
state for the template's expressions.

23
00:01:04,750 --> 00:01:06,414
Now let's add that template to the page.

24
00:01:10,438 --> 00:01:13,732
To get the data to our template we need
to inject the order manager service

25
00:01:13,732 --> 00:01:15,650
into the controller.

26
00:01:15,650 --> 00:01:19,050
Remember we do that by passing
an array of items to inject and

27
00:01:19,050 --> 00:01:21,590
then the controller function
as the last item in the array.

28
00:01:24,570 --> 00:01:27,690
Now we can set the list property of
the controller to the orders returned by

29
00:01:27,690 --> 00:01:29,120
the order manager.

30
00:01:29,120 --> 00:01:32,930
The controller is all set, so
we can now start modifying the template.

31
00:01:32,930 --> 00:01:35,330
We want to show the orders for
each meal and

32
00:01:35,330 --> 00:01:37,680
we want to repeat this list for
every day.

33
00:01:37,680 --> 00:01:40,140
That means we need
the ng-repeat directive.

34
00:01:40,140 --> 00:01:42,550
The first time through
day will be Monday and

35
00:01:42,550 --> 00:01:44,920
menu category will be this object.

36
00:01:44,920 --> 00:01:46,649
So now let's add the data
to our template.

37
00:01:47,680 --> 00:01:49,180
So we can now track orders but

38
00:01:49,180 --> 00:01:51,910
the user doesn't have any
way to pick a menu item.

39
00:01:51,910 --> 00:01:55,220
In the menu template we'll add this
section where the user can pick when

40
00:01:55,220 --> 00:01:56,970
they want to eat this menu item.

41
00:01:56,970 --> 00:01:59,870
And we'll need a button to let
them actually pick the meal.

42
00:01:59,870 --> 00:02:02,940
When the user clicks on this button
we'll send along the item's name and

43
00:02:02,940 --> 00:02:04,630
when they want to eat it.

44
00:02:04,630 --> 00:02:06,380
We'll need to create this
choose item function.

45
00:02:06,380 --> 00:02:08,840
So in menu.js we'll create it.

46
00:02:08,840 --> 00:02:12,320
Order information is managed by
the order manager service, so we need to

47
00:02:12,320 --> 00:02:15,740
inject it into this controller so
we can pass along the data.

48
00:02:15,740 --> 00:02:18,540
Order manager already has
a method to let us add an item so

49
00:02:18,540 --> 00:02:19,680
we'll just pass the data to it.

50
00:02:21,770 --> 00:02:24,210
Now we can select an item and
choose when to eat it and

51
00:02:24,210 --> 00:02:25,680
add it to the order manager.

52
00:02:25,680 --> 00:02:26,740
How cool is that?

53
00:02:26,740 --> 00:02:28,960
Except we can only pick items for
Monday.

54
00:02:28,960 --> 00:02:29,940
Let's fix that.

55
00:02:29,940 --> 00:02:33,140
In the order template we need to make it
so that when we click on a specific day,

56
00:02:33,140 --> 00:02:35,360
we'll update the order manager's
active day to that one.

57
00:02:36,680 --> 00:02:39,220
So if Tuesday's clicked,
we'll pass that along and

58
00:02:39,220 --> 00:02:42,750
tell order manager to update
its active day to Tuesday.

59
00:02:42,750 --> 00:02:45,220
We just made a bunch of
modifications to our app and

60
00:02:45,220 --> 00:02:47,260
it's really starting to come together.

61
00:02:47,260 --> 00:02:49,900
If you got lost along the way,
just step back and

62
00:02:49,900 --> 00:02:51,820
remember what we're trying to do.

63
00:02:51,820 --> 00:02:53,580
Services maintain our data.

64
00:02:53,580 --> 00:02:55,260
We inject services into controllers, so

65
00:02:55,260 --> 00:02:57,460
that controllers have
access to that data.

66
00:02:57,460 --> 00:02:59,610
And then we display
that data in templates.

67
00:02:59,610 --> 00:03:03,370
And again, services aren't tied to
specific views or controllers as we saw

68
00:03:03,370 --> 00:03:06,340
with the order manager service that we
injected into two separate controllers.
