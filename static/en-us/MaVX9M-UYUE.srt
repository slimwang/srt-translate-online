1
00:00:00,550 --> 00:00:03,520
So we've talked about problems with content-based filtering.

2
00:00:03,520 --> 00:00:06,300
What about IP blacklists? Well, first, the way an

3
00:00:06,300 --> 00:00:08,670
IP blacklists works is that when a sender

4
00:00:08,670 --> 00:00:12,540
sends an email to the receiver the receiver sends

5
00:00:12,540 --> 00:00:14,420
a query for that IP address to a

6
00:00:14,420 --> 00:00:19,620
blacklist or a DNS-based blacklist sometimes called a DNSBL

7
00:00:19,620 --> 00:00:22,400
such as spamhaus. Depending on whether or not that

8
00:00:22,400 --> 00:00:25,710
IP address appears in the blacklist the receiver can

9
00:00:25,710 --> 00:00:30,010
then decide to accept the message or, if the

10
00:00:30,010 --> 00:00:32,430
IP address turns out to be on the blacklist,

11
00:00:32,430 --> 00:00:35,560
the receiver can decide to terminate the connection and

12
00:00:35,560 --> 00:00:37,990
not even accept the mail in the first place,

13
00:00:37,990 --> 00:00:40,470
thereby saving the operator the trouble of even having

14
00:00:40,470 --> 00:00:44,280
to store the message. The third approach is to

15
00:00:44,280 --> 00:00:47,460
filter a message on how it is sent. In

16
00:00:47,460 --> 00:00:50,950
particular, we can look at such features as the geographic

17
00:00:50,950 --> 00:00:53,680
locations of the sender and receiver, the set

18
00:00:53,680 --> 00:00:57,320
of target recipients, the sender's upstream ISP or

19
00:00:57,320 --> 00:01:02,910
our inference as to whether the sender is a member of a botnet or a network of

20
00:01:02,910 --> 00:01:05,640
comprised hosts that are doing the bidding of

21
00:01:05,640 --> 00:01:08,360
some command and control server. Now the challenges

22
00:01:08,360 --> 00:01:11,580
of buildling a filter around this notion is

23
00:01:11,580 --> 00:01:16,640
first, understanding network level behavior and second, building classifiers

24
00:01:16,640 --> 00:01:20,480
using network level features to execute the filtering.
