1
00:00:03,230 --> 00:00:05,150
Companies come to us for

2
00:00:05,150 --> 00:00:08,230
three different reasons to host
machine learning competitions.

3
00:00:08,230 --> 00:00:10,840
The first is they have a really
challenging use case and

4
00:00:10,840 --> 00:00:13,900
they want to put some of the best
minds of the world on the problem and

5
00:00:13,900 --> 00:00:17,230
to attack the use case in
a very competitive setting.

6
00:00:17,230 --> 00:00:22,120
So this looks like are R&D development
or IP development, and for

7
00:00:22,120 --> 00:00:26,690
the companies that are falling into that
basket at the end of the competition

8
00:00:26,690 --> 00:00:32,600
they get access to the top three to
five winning solutions as well as

9
00:00:32,600 --> 00:00:35,060
contact with teams that won them.

10
00:00:35,060 --> 00:00:39,940
And then in many cases they go on to
either hire the teams that won them or

11
00:00:39,940 --> 00:00:43,890
continue on in a consulting
engagement with the teams that won.

12
00:00:43,890 --> 00:00:47,400
There's two other reasons that companies
host competitions with us as well.

13
00:00:47,400 --> 00:00:52,430
The first is marketing, either their own
brand or they have a tool that they want

14
00:00:52,430 --> 00:00:56,880
to promote encouraged asked scientists
to use or things along those lines.

15
00:00:56,880 --> 00:01:00,551
So, and then the second is recruiting
where they're looking to hire

16
00:01:00,551 --> 00:01:04,351
the scientists to solve problems
internally some of which can be framed

17
00:01:04,351 --> 00:01:06,583
in the machinery learning competition.

18
00:01:06,583 --> 00:01:10,060
[BLANK_AUDIO]

19
00:01:10,060 --> 00:01:12,250
Yes, absolutely.

20
00:01:12,250 --> 00:01:16,770
Kaggle is a really great distribution
platform for innovative techniques

21
00:01:16,770 --> 00:01:20,900
because whenever someone sees
the first person on the leaderboard

22
00:01:20,900 --> 00:01:23,400
in a competition that they
participated and competed heavily and

23
00:01:23,400 --> 00:01:27,880
they spent many hours in, they really
really want to know what beat them and

24
00:01:27,880 --> 00:01:31,140
how did that winning person win.

25
00:01:31,140 --> 00:01:33,900
So that means if there's a technique
that tends to do well in

26
00:01:33,900 --> 00:01:37,390
a SQL competition we have 1,000 or
10,000 participants

27
00:01:37,390 --> 00:01:40,570
pouring over the details of that
technique and how it works.

28
00:01:40,570 --> 00:01:44,322
And that makes Kaggle a really
effective grounds both for

29
00:01:44,322 --> 00:01:48,543
proving out that this technique
on a problem really works as well

30
00:01:48,543 --> 00:01:51,529
as growing a large-scale
adoption of that.

31
00:01:51,529 --> 00:01:56,345
One example of that is a library called
XGboost which is a quick and efficient

32
00:01:56,345 --> 00:02:01,089
implementation of Gradientboosting
machines that is super easy to use and

33
00:02:01,089 --> 00:02:03,064
is also enormously flexible.

34
00:02:06,765 --> 00:02:08,775
It was released a couple years ago.

35
00:02:08,775 --> 00:02:11,565
It started doing really well in
competitions about a year and

36
00:02:11,565 --> 00:02:12,475
a half ago.

37
00:02:12,475 --> 00:02:16,310
Over the past year and a half we've
now seen over 50% of the Kaggle

38
00:02:16,310 --> 00:02:20,365
competitions have used XGboost as
a key part of that winning solution.
