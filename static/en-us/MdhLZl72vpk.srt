1
00:00:00,340 --> 00:00:02,060
What I'm going to do now is I'm going to, we're going to build a

2
00:00:02,060 --> 00:00:07,080
little web application that uses cookies to keep track of how many times

3
00:00:07,080 --> 00:00:09,510
you've visited a website. And then I'll show you, you know, how

4
00:00:09,510 --> 00:00:13,720
to use cookies in App Engine and some, some things we need to

5
00:00:13,720 --> 00:00:16,309
keep in, keep in mind, so. This is the kind of template

6
00:00:16,309 --> 00:00:20,462
I've been working from for App Engine stuff. First thing I want to do

7
00:00:20,462 --> 00:00:23,100
is, is just set the content type to text so we don't have

8
00:00:23,100 --> 00:00:25,410
to deal with HTML for right now. Okay, so, I've added this line

9
00:00:25,410 --> 00:00:27,760
here that gets a cookie called visits. The way this

10
00:00:27,760 --> 00:00:30,320
works is we look at the request object, which is always

11
00:00:30,320 --> 00:00:35,490
on self. The request object will have a cookies object, which

12
00:00:35,490 --> 00:00:37,390
is a convenience thing that App Engine did for us, it

13
00:00:37,390 --> 00:00:39,420
parsed our HTP hatters and it threw all of the

14
00:00:39,420 --> 00:00:44,390
cookies into this dictionary-like object and we can call get on

15
00:00:44,390 --> 00:00:48,050
it which you know, distinct from this get, of course. This

16
00:00:48,050 --> 00:00:50,560
is a function we call in dictionaries to check to see

17
00:00:50,560 --> 00:00:53,870
if a key is in the dictionary and if it is, we

18
00:00:53,870 --> 00:00:55,600
get the value of that key. And if it's not, we get the

19
00:00:55,600 --> 00:00:58,340
default which we'll set to zero. What I want to do is I want

20
00:00:58,340 --> 00:01:02,070
to print through our user how many times we visited the site. Okay,

21
00:01:02,070 --> 00:01:04,970
so I added this line to just write to the user you've

22
00:01:04,970 --> 00:01:07,700
been here %s times. Remember our

23
00:01:07,700 --> 00:01:10,440
string substitution? And we'll print visits there.

24
00:01:10,440 --> 00:01:12,640
So let's go ahead and give this a test in our browser. And

25
00:01:12,640 --> 00:01:16,110
I'm, I've loaded my page and it says I've been here zero times.

26
00:01:16,110 --> 00:01:19,240
And if I reload the page over and over, it still says zero

27
00:01:19,240 --> 00:01:22,330
times because we're not doing any counting, we're just printing the number zero

28
00:01:22,330 --> 00:01:26,890
over and over. So let's go ahead and store how many times we've

29
00:01:26,890 --> 00:01:29,510
been to the site in a cookie. So the way we do this

30
00:01:29,510 --> 00:01:32,610
first we're going to take the number of visits we have and we're going to

31
00:01:32,610 --> 00:01:35,690
increment it by one. Visits plus equals one and then we're going to store

32
00:01:35,690 --> 00:01:38,660
the number of visits in this cookie called visits so the next time

33
00:01:38,660 --> 00:01:41,460
we come back we'll get it. The way we set a cookie in

34
00:01:41,460 --> 00:01:43,830
App Engine is we just set the cookie header. Okay,

35
00:01:43,830 --> 00:01:48,000
so I added two more lines here. Visits plus equals 1,

36
00:01:48,000 --> 00:01:50,980
which will increment the visits count that we got from our

37
00:01:50,980 --> 00:01:56,020
cookie, and then we're going to set the Cookie. So the way

38
00:01:56,020 --> 00:01:58,570
we do that is on the response object, there is

39
00:01:58,570 --> 00:02:01,230
a headers object. You know, just like when we set the

40
00:02:01,230 --> 00:02:04,260
Content Type. And now we want to, we're going to call add_header. We

41
00:02:04,260 --> 00:02:06,580
could treat it like a dictionary, but add_header here is special

42
00:02:06,580 --> 00:02:09,520
because remember, you can have multiple headers with the same name,

43
00:02:09,520 --> 00:02:14,400
and so if you used a dictionary syntax, you'd overwrite the header.

44
00:02:14,400 --> 00:02:16,530
So in this case, we're going to use add_header, that's what we're going to

45
00:02:16,530 --> 00:02:19,710
use for cookies here. So we're going to use the Set-Cookie header, and

46
00:02:19,710 --> 00:02:21,670
I'm just going to use, I'm not going to worry about domain and path

47
00:02:21,670 --> 00:02:24,710
right now. That's not what we're trying to experiment with here and

48
00:02:24,710 --> 00:02:28,430
we're going to say, visits equals %s, and we're going to include our Visits

49
00:02:28,430 --> 00:02:31,650
parameter. All right, so let's see if that works. We're on our,

50
00:02:31,650 --> 00:02:35,620
our browser and you know when I, and I've

51
00:02:35,620 --> 00:02:37,190
reloaded the page. And so we see I've been

52
00:02:37,190 --> 00:02:40,130
here one time, and I reload the page again.

53
00:02:40,130 --> 00:02:44,019
Ooh, and we see an error, and this makes sense.

54
00:02:45,178 --> 00:02:48,181
Need a string, int found on visits plus equals

55
00:02:48,181 --> 00:02:52,204
1. Cookies you know, the browser doesn't care what datatype

56
00:02:52,204 --> 00:02:54,040
our cookie is here we just says that it's,

57
00:02:54,040 --> 00:02:56,845
you know, it's basically this, this, this string, this blob

58
00:02:56,845 --> 00:02:58,477
of data and here I am treating it like an

59
00:02:58,477 --> 00:03:00,862
integer. So let's, let's go ahead and update this code to

60
00:03:00,862 --> 00:03:04,472
make this work properly for strings. Okay, so, we've improved

61
00:03:04,472 --> 00:03:07,320
our code a little bit here. I changed our, our default

62
00:03:07,320 --> 00:03:10,710
zero to the string zero and so that this next

63
00:03:10,710 --> 00:03:15,840
line will work without exceptions. If visits.isdigit, remember that checks to

64
00:03:15,840 --> 00:03:19,260
see if visits is made up of only, only digits in

65
00:03:19,260 --> 00:03:22,250
which case we can safely convert it to an integer and

66
00:03:22,250 --> 00:03:24,870
we add one to it. So we increment visits every time,

67
00:03:24,870 --> 00:03:28,490
otherwise we just set visits to zero and that's what we print.

68
00:03:28,490 --> 00:03:31,568
Okay, so let's give this a whirl. So now we've got our

69
00:03:31,568 --> 00:03:33,920
page here, and I re-load it, the arrow went away, and we

70
00:03:33,920 --> 00:03:37,820
can see this counting up. Pretty neat huh, so that count is

71
00:03:37,820 --> 00:03:40,730
stored in a cookie in this browser. The server has no idea

72
00:03:40,730 --> 00:03:43,660
what the count is, so, let's go ahead and add some functionality

73
00:03:43,660 --> 00:03:47,082
to further my agenda. Now what we want to do, is, is let's,

74
00:03:47,082 --> 00:03:51,060
let's do something with this cookie value. Let's say we want to reward users who

75
00:03:51,060 --> 00:03:56,638
have been to our website 100 times with a special message of thanks. So

76
00:03:56,638 --> 00:04:01,621
let's, let's do it like let's, let's make some changes here. We'll say if

77
00:04:01,621 --> 00:04:06,945
visits is greater than 100, self.write you are

78
00:04:06,945 --> 00:04:12,470
the best ever. And for everybody else, we'll just

79
00:04:12,470 --> 00:04:15,590
tell them how many times they've been here. Let's see this in action.

80
00:04:15,590 --> 00:04:18,019
Actually so we want to, we want to do it on 100, but let's go ahead

81
00:04:18,019 --> 00:04:20,540
and, and test it on ten so we don't have to reload the

82
00:04:20,540 --> 00:04:23,640
page 100 times, just to make sure this works. Okay, so I'm going to save

83
00:04:23,640 --> 00:04:25,560
this, and we're going to go to our browser and give it a shot.

84
00:04:25,560 --> 00:04:30,510
Conveniently I'm at nine times we, reload ten times. Hah greater than ten after

85
00:04:30,510 --> 00:04:34,264
I reloaded it switched to you are the best ever. Great, we feel very

86
00:04:34,264 --> 00:04:37,758
good let's go back to our code and change that ten to a 100.

87
00:04:37,758 --> 00:04:39,830
So change that 10 to a 100, we go back to

88
00:04:39,830 --> 00:04:44,185
our browser, we keep reloading again. Okay, so we really want to see

89
00:04:44,185 --> 00:04:48,510
our, our special message. But it's going to take us awhile to

90
00:04:48,510 --> 00:04:50,560
get there, we're going to have to sit here and reload the page.

91
00:04:50,560 --> 00:04:55,580
Actually let's make this 100,000, okay? We're never going to get there,

92
00:04:55,580 --> 00:04:58,330
we're going to have to be a super loyal user to, to get

93
00:04:58,330 --> 00:05:00,340
up to that amount. So, what I'd like you to do

94
00:05:00,340 --> 00:05:02,760
is think about, how we might cheat the system a little bit.
