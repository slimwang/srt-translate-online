1
00:00:00,250 --> 00:00:03,010
Now we want to make a script
that changes the scene.

2
00:00:03,010 --> 00:00:05,760
But to do it,
we're going to need to use methods.

3
00:00:05,760 --> 00:00:08,580
Methods are a block of code you
can run whenever you want to.

4
00:00:08,580 --> 00:00:11,530
And in our case, we're going to
write the code that gets executed

5
00:00:11,530 --> 00:00:12,900
when the vacation block is clicked.

6
00:00:14,140 --> 00:00:17,660
Let's get started by adding a script to
our vacation block, which will program

7
00:00:17,660 --> 00:00:21,980
to change the scene when the user looks
at it and clicks the cardboard button.

8
00:00:21,980 --> 00:00:25,940
With the vacation block selected,
go to the Inspector and

9
00:00:25,940 --> 00:00:27,585
scroll down to Add Component.

10
00:00:27,585 --> 00:00:32,104
Now type Change Scene.

11
00:00:32,104 --> 00:00:35,260
And the only option you
should have is New Script.

12
00:00:36,340 --> 00:00:37,990
Go ahead and click on that.

13
00:00:37,990 --> 00:00:40,840
And then it'll automatically
have Change Scene for

14
00:00:40,840 --> 00:00:43,530
your name, and
then click Create and Add.

15
00:00:44,790 --> 00:00:47,350
We now have an empty
script called Change Scene

16
00:00:47,350 --> 00:00:49,520
which is attached to our vacation block.

17
00:00:49,520 --> 00:00:54,070
And the script itself is saved in the
root of the Assets folder, right here.

18
00:00:55,360 --> 00:00:57,680
Go ahead and double click on the script,
and open it up.

19
00:00:59,050 --> 00:01:02,180
In MonoDevelop,
you'll see Start and Update.

20
00:01:02,180 --> 00:01:04,280
Go ahead and delete both of these.

21
00:01:04,280 --> 00:01:08,420
We don't need to do anything on start or
every frame.

22
00:01:08,420 --> 00:01:11,303
Instead, we're going to create our
own method that changes the scene.

23
00:01:11,303 --> 00:01:15,701
Now type public void

24
00:01:15,701 --> 00:01:21,525
GoToScene and
then open brace and close brace.

25
00:01:21,525 --> 00:01:25,140
And if you don't know where
the brace keys are in your keyboard,

26
00:01:25,140 --> 00:01:26,530
on a standard US keyboard,

27
00:01:26,530 --> 00:01:30,590
you can type them by holding Shift and
then they're right beside the P key.

28
00:01:32,600 --> 00:01:34,400
So in this case,

29
00:01:34,400 --> 00:01:39,800
public means that other scripts in our
system can see our method and call it.

30
00:01:39,800 --> 00:01:41,470
This includes the event system.

31
00:01:41,470 --> 00:01:43,960
It needs to be public or
it won't show up to other scripts.

32
00:01:45,420 --> 00:01:49,510
Void allows us to execute this block
of code without having to return

33
00:01:49,510 --> 00:01:51,580
any specific data type.

34
00:01:51,580 --> 00:01:54,350
Don't really worry about
this too much right now,

35
00:01:54,350 --> 00:01:57,210
just know that this is the way that
we're going to build this method.

36
00:01:58,665 --> 00:02:01,810
GoToScene is the name of our method and

37
00:02:01,810 --> 00:02:05,710
then inside the braces is what's going
to happen when this method is called.

38
00:02:07,070 --> 00:02:11,067
For now, we just want to test that
our click method is working properly.

39
00:02:11,067 --> 00:02:15,961
So inside the GoToScene method,

40
00:02:15,961 --> 00:02:18,766
type debug.log.

41
00:02:18,766 --> 00:02:23,310
And then type something
like my method was called.

42
00:02:23,310 --> 00:02:24,620
When this method is called,

43
00:02:24,620 --> 00:02:28,500
we'll see a little debug output at
the bottom left with our message.

44
00:02:28,500 --> 00:02:30,560
But nothing is calling our method yet.

45
00:02:30,560 --> 00:02:31,660
So let's fix that.

46
00:02:33,302 --> 00:02:36,660
All right, let's go back to Unity and
call our method.

47
00:02:36,660 --> 00:02:42,850
Navigate back to the vacation box and
then scroll down to the event trigger.

48
00:02:42,850 --> 00:02:45,270
Now this might seem a little strange,
but

49
00:02:45,270 --> 00:02:49,510
we're going to go to the hierarchy and
click on the vacation box.

50
00:02:49,510 --> 00:02:54,630
And drag it all the way over
to that little slot for

51
00:02:54,630 --> 00:02:57,480
an object in the event
trigger right here.

52
00:02:57,480 --> 00:03:01,280
What that's doing is saying,
when somebody clicks on a vacation box,

53
00:03:02,340 --> 00:03:06,450
it's going to call a method
that's on this object.

54
00:03:06,450 --> 00:03:07,455
And in this case,

55
00:03:07,455 --> 00:03:12,450
we want to call the GoToScene method
in the change scene script right here.

56
00:03:12,450 --> 00:03:15,320
So click on the drop down
box that says no function.

57
00:03:16,370 --> 00:03:18,110
And then Change Scene.

58
00:03:19,390 --> 00:03:21,900
And then go to a scene.

59
00:03:21,900 --> 00:03:23,650
All right, that's it.

60
00:03:23,650 --> 00:03:25,400
Let's test it, for

61
00:03:25,400 --> 00:03:29,480
now we should get a debug message
when we click on the vacation block.

62
00:03:29,480 --> 00:03:32,139
So, run the scene in Unity and
try to clicking on the block.

63
00:03:32,139 --> 00:03:35,915
[BLANK_AUDIO]

64
00:03:35,915 --> 00:03:38,810
All right, so I'm going to click on it.

65
00:03:40,250 --> 00:03:42,090
And there you go.

66
00:03:42,090 --> 00:03:44,476
Down at the bottom left,
it says my method was called.

67
00:03:44,476 --> 00:03:47,990
All right, that's great.

68
00:03:47,990 --> 00:03:52,430
Okay, so technically we're already
interacting with VR objects now.

69
00:03:52,430 --> 00:03:54,680
But why don't we do something
a bit more satisfying,

70
00:03:54,680 --> 00:03:56,437
like actually going on vacation [LAUGH].

71
00:03:57,750 --> 00:04:01,110
Next up, let's modify our method to
change our scene when it's called.
