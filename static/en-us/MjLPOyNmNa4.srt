1
00:00:00,250 --> 00:00:03,070
Now let's see a two-way set associative cache in action.

2
00:00:03,070 --> 00:00:06,110
We will assume a 5-bit address space with a 2 byte

3
00:00:06,110 --> 00:00:08,930
cache length. Notice that I've added a valid bit to

4
00:00:08,930 --> 00:00:11,510
our cache here, so that we can tell whether data has

5
00:00:11,510 --> 00:00:15,240
ever been loaded up to a line in the cache.

6
00:00:15,240 --> 00:00:19,100
Uninitialized caches are called coal. Let's say that 0 is the

7
00:00:19,100 --> 00:00:22,250
first address. In most systems that's not allowed, but it's fine

8
00:00:22,250 --> 00:00:25,400
for our example. The second bit here tells us the index

9
00:00:25,400 --> 00:00:28,073
for the cache. So we'll need to put this

10
00:00:28,073 --> 00:00:30,950
in the 0 set somewhere. We put it in here,

11
00:00:30,950 --> 00:00:35,560
flipping the recently used item to say 1, because

12
00:00:35,560 --> 00:00:38,760
that would be our preferred place to write the next

13
00:00:38,760 --> 00:00:41,960
cache line with index 0. Maybe after this, I

14
00:00:41,960 --> 00:00:45,170
have an address that looks like this one. The index

15
00:00:45,170 --> 00:00:47,270
here is 1, so we want to put it in this

16
00:00:47,270 --> 00:00:50,320
group, and again I'll put it in the first line,

17
00:00:50,320 --> 00:00:54,590
setting the valid bit, writing the data, and marking

18
00:00:54,590 --> 00:00:57,970
the least recently used bit. Our next address has

19
00:00:57,970 --> 00:01:01,070
index 0, so it gets written there. Notice that

20
00:01:01,070 --> 00:01:03,730
I chose this slot because the LRU had been one,

21
00:01:03,730 --> 00:01:05,730
and I flipped it back to zero because this

22
00:01:05,730 --> 00:01:09,160
is now the least recently used item in this

23
00:01:09,160 --> 00:01:11,880
part of the cache. Next we have an address

24
00:01:11,880 --> 00:01:15,390
with index 1. We checked the tag and we see

25
00:01:15,390 --> 00:01:19,930
that it's a hit. Oh my goodness. Notice that this address is a hit, even

26
00:01:19,930 --> 00:01:21,930
though we didn't read the exact same address

27
00:01:21,930 --> 00:01:24,900
before. But we did read an address belonging

28
00:01:24,900 --> 00:01:27,190
to the same cache block. Next, we have

29
00:01:27,190 --> 00:01:30,720
another address with index 0. So, he comes

30
00:01:30,720 --> 00:01:33,010
in here and evicting one of the previous

31
00:01:33,010 --> 00:01:35,690
entries. This one, because of the LRU bit.
