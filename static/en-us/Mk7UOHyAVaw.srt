1
00:00:00,340 --> 00:00:02,950
This possibility of Turing
machines looping forever

2
00:00:02,950 --> 00:00:06,150
leads us to define the notion
of a language recognizing.

3
00:00:06,150 --> 00:00:09,100
We say that a Turing machine
recognizes a language if and

4
00:00:09,100 --> 00:00:12,490
only if it accepts every
string in the language and

5
00:00:12,490 --> 00:00:15,900
does not accept any string
not in the language.

6
00:00:15,900 --> 00:00:18,600
Thus we can say that the turning
machine from the quiz

7
00:00:18,600 --> 00:00:22,410
does indeed recognize the language
consisting of strings that contain a 1.

8
00:00:22,410 --> 00:00:25,610
It accepts those containing a 1.

9
00:00:25,610 --> 00:00:27,990
And it doesn't accept the others.

10
00:00:27,990 --> 00:00:30,130
Instead, it loops on them.

11
00:00:30,130 --> 00:00:32,210
Contrast this definition
with what it takes for

12
00:00:32,210 --> 00:00:34,600
a Turing machine to decide a language.

13
00:00:34,600 --> 00:00:38,020
Then, it must not only accept
every string in the language but

14
00:00:38,020 --> 00:00:41,590
it has to reject every
string not in the language.

15
00:00:41,590 --> 00:00:44,110
It can't loop like this Turing machine.

16
00:00:44,110 --> 00:00:45,990
If we wanted to build a decider for
this language,

17
00:00:45,990 --> 00:00:48,740
we would need to modify
the Turing machine so

18
00:00:48,740 --> 00:00:53,290
that it detects the end of the string
and moves into the reject state like so.

19
00:00:53,290 --> 00:00:57,350
At this point, it also makes sense to
define the language of the machine.

20
00:00:57,350 --> 00:01:00,650
Which is just the language
that the machine recognizes.

21
00:01:00,650 --> 00:01:05,250
After all, every machine recognizes some
language even if it's the empty one.

22
00:01:05,250 --> 00:01:11,460
Formally, we define L(M) to be
the set of strings that m accepts.

23
00:01:11,460 --> 00:01:13,150
That's the language of the machine M.
