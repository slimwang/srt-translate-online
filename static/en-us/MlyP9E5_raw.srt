1
00:00:00,000 --> 00:00:04,000
Let's just review what we've defined in terms of our API.

2
00:00:04,000 --> 00:00:07,000
We have a function match and a function search,

3
00:00:07,000 --> 00:00:11,000
and they both take a pattern and a text,

4
00:00:11,000 --> 00:00:18,000
and they both return a string representing the earliest longest match.

5
00:00:18,000 --> 00:00:22,000
But for match the string would only return if it's at the start of the string.

6
00:00:22,000 --> 00:00:25,000
For search, it'll be anywhere within the string.

7
00:00:25,000 --> 00:00:28,000
If they don't match, then they return none.

8
00:00:28,000 --> 00:00:33,000
We've also defined an API of functions to create patterns--

9
00:00:33,000 --> 00:00:39,000
a literal string, an alternative between two patterns x and y,

10
00:00:39,000 --> 00:00:44,000
a sequence of two patterns x and y, and so on.

11
00:00:44,000 --> 00:00:49,000
That's sort of the API that we expect the programmer to program to.

12
00:00:49,000 --> 00:00:53,000
You create a pattern on this side and then you use a pattern over here

13
00:00:53,000 --> 00:00:57,000
against a text to get some result.

14
00:00:57,000 --> 00:01:02,000
Then below the line of the API--sort of an internal function--we've defined matchset,

15
00:01:02,000 --> 00:01:05,000
which is not really designed for the programmer to call it.

16
00:01:05,000 --> 00:01:08,000
It was designed for the programmer to go through this interface, but this function is there.

17
00:01:08,000 --> 00:01:12,000
It also takes a pattern and a text.

18
00:01:12,000 --> 00:01:20,000
Instead of returning a single string, which is a match, it returns a set of strings, which are remainders.

19
00:01:20,000 --> 00:01:26,000
For any remainder we have the constraint that the match plus the remainder

20
00:01:26,000 --> 00:01:28,000
equals the original text.

21
00:01:28,000 --> 00:01:32,000
Here I've written versions of search and match. We already wrote matchset.

22
00:01:32,000 --> 00:01:39,000
The one part that we missed out was this component that pulls out the x, y and op components out of a tuple.

23
00:01:39,000 --> 99:59:59,999
I've left out two pieces of code here that I want you to fill in.
