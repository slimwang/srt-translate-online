1
00:00:00,430 --> 00:00:03,150
You are looking at the final project.

2
00:00:03,150 --> 00:00:04,800
Congratulations on making it this far.

3
00:00:04,800 --> 00:00:08,010
You're going to need a copy of this
project on your local machine, so

4
00:00:08,010 --> 00:00:10,670
check the instructor notes for
download information.

5
00:00:10,670 --> 00:00:14,660
In this app, Paul has created
a performance nightmare.

6
00:00:14,660 --> 00:00:18,080
This news aggregator uses
the Hacker News API to

7
00:00:18,080 --> 00:00:20,140
pull up the current top stories.

8
00:00:20,140 --> 00:00:23,804
It's pretty cool, but watch the frame
rate right here as I scroll.

9
00:00:26,762 --> 00:00:28,480
That definitely didn't look good.

10
00:00:28,480 --> 00:00:30,679
Now watch what happens when
stories slide in and out.

11
00:00:33,970 --> 00:00:35,520
See how it drops?

12
00:00:35,520 --> 00:00:37,560
And just try using this app on mobile.

13
00:00:37,560 --> 00:00:39,720
It is totally unusable.

14
00:00:39,720 --> 00:00:41,360
There's going to be a lot to improve.

15
00:00:41,360 --> 00:00:44,050
In the instructor notes,
I'm going to leave a list of hints for

16
00:00:44,050 --> 00:00:46,270
major areas that definitely need fixing.

17
00:00:46,270 --> 00:00:49,890
But if you want a real performance
challenge, don't look.

18
00:00:49,890 --> 00:00:52,410
Take some measurements and
see what you can find out on your own.

19
00:00:52,410 --> 00:00:55,270
Try it yourself first, and
then use the hints as a fallback.

20
00:00:55,270 --> 00:00:56,370
In the solution video,

21
00:00:56,370 --> 00:01:00,360
you'll see me go over a few of the high
level problems that this app faces.

22
00:01:00,360 --> 00:01:02,790
And I'll also show you
how I fixed those.

23
00:01:02,790 --> 00:01:06,230
Keep in mind though,
that my solution is just one of many.

24
00:01:06,230 --> 00:01:09,140
It is extremely likely that
your code will look very,

25
00:01:09,140 --> 00:01:10,800
very different than mine.

26
00:01:10,800 --> 00:01:13,940
I'll also post a link to my code,
which you'll be able to peruse and

27
00:01:13,940 --> 00:01:15,270
compare to your own.

28
00:01:15,270 --> 00:01:16,980
And for the completionists among you,

29
00:01:16,980 --> 00:01:20,960
I will also be posting a list of
all the known bugs in the project.

30
00:01:20,960 --> 00:01:24,580
If you've made it this far, you've got
all of the tools that you need to make

31
00:01:24,580 --> 00:01:26,720
this app run at 60 frames per second.

32
00:01:26,720 --> 00:01:28,270
So what are you waiting for?

33
00:01:28,270 --> 00:01:30,350
Download the app,
start measuring and start improving!

34
00:01:30,350 --> 00:01:32,760
When you are hitting
60 frames per second,

35
00:01:32,760 --> 00:01:36,050
post a link to the live version of
your Performant app in the forums so

36
00:01:36,050 --> 00:01:38,590
that we can see what
improvements you've made.

37
00:01:38,590 --> 00:01:39,240
Good luck everybody!
