1
00:00:00,000 --> 00:00:05,000
The answer is the second choice--that you can recover almost the full message--

2
00:00:05,000 --> 00:00:07,000
everything except for the very first block--

3
00:00:07,000 --> 00:00:10,000
that the point of the initialization vector is just to hide

4
00:00:10,000 --> 00:00:15,000
repetition among encryptions that would appear just looking at the first block.

5
00:00:15,000 --> 00:00:19,000
And the reason for this--we can look at how the encryption mode behaves--

6
00:00:19,000 --> 00:00:24,000
We saw that for all of the blocks except for the first one, the value of C_i

7
00:00:24,000 --> 00:00:28,000
is the encryption of the value m_i--include my key there--and we saw for

8
00:00:28,000 --> 00:00:32,000
the way the encryption mode works, C_i is equal to the encryption

9
00:00:32,000 --> 00:00:39,000
using the key K of M_i EXOR C_(i -1). The exception to that is block C_0.

10
00:00:39,000 --> 00:00:45,000
Where that's the value of encrypting m_0 EXOR'd with IV.

11
00:00:45,000 --> 00:00:48,000
So we didn't explain how to do decryption.

12
00:00:48,000 --> 00:00:51,000
But from the way the encryption was, you should be able to figure that out.

13
00:00:51,000 --> 00:00:57,000
We can look at this backwards--so in order to get the last message block--

14
00:00:57,000 --> 00:01:04,000
well, what we need to do is decrypt using key K, and input to decrypt

15
00:01:04,000 --> 00:01:09,000
is this last ciphertext block. So we're going backwards--

16
00:01:09,000 --> 00:01:12,000
we're decrypting. We don't have the message block yet. To get the message block,

17
00:01:12,000 --> 00:01:17,000
We need to do the EXOR to get the message block N - 1

18
00:01:17,000 --> 00:01:21,000
and so that means we're EXORing that with the ciphertext value

19
00:01:21,000 --> 00:01:24,000
of the previous block, which we already have.

20
00:01:24,000 --> 00:01:28,000
Remember we have--to decrypt, we start wtih all the ciphertext blocks.

21
00:01:28,000 --> 00:01:31,000
So this is how we decrypted the last block, but each

22
00:01:31,000 --> 00:01:36,000
block is the same. To get message block i, we need to decrypt ciphertext block i,

23
00:01:36,000 --> 00:01:40,000
and EXOR that with the previous ciphertext block.

24
00:01:40,000 --> 00:01:43,000
So we can do that for all the blocks, except for--we have this exception

25
00:01:43,000 --> 00:01:46,000
for the last one. The encryption for the last one used this IV--

26
00:01:46,000 --> 00:01:50,000
to get the last message block, what we need to do is decrypt

27
00:01:50,000 --> 00:01:55,000
the last ciphertext block--or the first ciphertext block--we're going backwards now.

28
00:01:55,000 --> 00:01:59,000
And then EXOR that result with the IV.

29
00:01:59,000 --> 00:02:02,000
So if we lose the IV but don't lose the key,

30
00:02:02,000 --> 00:02:06,000
and don't lose the ciphertext, we've lost just the first block.

31
00:02:06,000 --> 00:02:09,000
And if the IV was selected perfectly at random, well,

32
00:02:09,000 --> 00:02:12,000
we have no information at all about the first block.

33
00:02:12,000 --> 00:02:16,000
Because whatever we get out of this decryption is EXOR'd with that IV

34
00:02:16,000 --> 00:02:19,000
to get the message. So if we have no information about the IV,

35
00:02:19,000 --> 00:02:22,000
we have no information about the first message block.

36
00:02:22,000 --> 99:59:59,999
But we can decrypt all the other blocks.
