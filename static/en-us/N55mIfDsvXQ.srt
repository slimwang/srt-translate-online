1
00:00:00,380 --> 00:00:03,260
Let's consider that we want to transmit a message

2
00:00:03,260 --> 00:00:05,360
which is made up of four words, A, B,

3
00:00:05,360 --> 00:00:08,070
C and D. And let's assume that all the

4
00:00:08,070 --> 00:00:11,330
four letters are used equally in the language. They

5
00:00:11,330 --> 00:00:14,660
occur, the frequency of each letter occurring in the

6
00:00:14,660 --> 00:00:18,150
language is equal. So, you can be present A,

7
00:00:18,150 --> 00:00:25,640
B, C and D in binary, with two bits itch, each, like so. Which means if we have

8
00:00:25,640 --> 00:00:30,280
a sequence such as zero, one, zero, zero, one,

9
00:00:30,280 --> 00:00:35,720
one, the six bits spell out the word BAD,

10
00:00:35,720 --> 00:00:41,060
bad. So basically we'd require two bits or symbol. Other way to

11
00:00:41,060 --> 00:00:44,630
look at this sequence is that you need to ask two questions to this sequence

12
00:00:44,630 --> 00:00:48,520
to atleast recognize one symbol. So, two

13
00:00:48,520 --> 00:00:50,650
bits per symbol also means that you have

14
00:00:50,650 --> 00:00:54,990
to ask two yes or no questions per symbol.

15
00:00:54,990 --> 00:00:57,280
Now let's consider the second message to be made up

16
00:00:57,280 --> 00:01:00,150
of the same symbols but in this case A

17
00:01:00,150 --> 00:01:03,530
occurs more frequently than B, C or D. D of

18
00:01:03,530 --> 00:01:07,080
course more frequently than B and C. and, let's

19
00:01:07,080 --> 00:01:10,800
assume that these are the probabilities by which we can

20
00:01:10,800 --> 00:01:16,230
see A, B, C, or D. Now, we can do the same thing again, we can use the same

21
00:01:16,230 --> 00:01:23,424
binary representation to represent A, B, C, and D. So again, we'll end up with

22
00:01:23,424 --> 00:01:26,190
two bits per symbol. But can we do

23
00:01:26,190 --> 00:01:29,050
any better? Well, A occurs more frequently than

24
00:01:29,050 --> 00:01:35,400
the others so can we somehow use this to our benefit and use a different bit

25
00:01:35,400 --> 00:01:39,080
representation to get slightly less than two bits

26
00:01:39,080 --> 00:01:41,390
per symbol? Think about it. Can you think

27
00:01:41,390 --> 00:01:43,570
of a new representation that might be better?
