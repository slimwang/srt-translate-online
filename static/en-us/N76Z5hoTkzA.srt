1
00:00:00,260 --> 00:00:02,710
There's a number of different ways people use the word scope and

2
00:00:02,710 --> 00:00:05,150
first, I want to explore the simplest of them.

3
00:00:05,150 --> 00:00:08,350
The first use of the word scope is lexical scope.

4
00:00:08,350 --> 00:00:11,590
This usage of the word describes the regions in your source code,

5
00:00:11,590 --> 00:00:15,960
where you can refer to a variable by name without getting access errors.

6
00:00:15,960 --> 00:00:18,760
The specific rules for this version of scoping can be

7
00:00:18,760 --> 00:00:22,650
understood even without running your code, since it only concerns the area of

8
00:00:22,650 --> 00:00:26,080
your code where different variable names will have meaning.

9
00:00:26,080 --> 00:00:29,600
Imagine this file held the source code for a very simple program.

10
00:00:29,600 --> 00:00:32,159
In simple programs with no functions at all,

11
00:00:32,159 --> 00:00:35,700
there is exactly one scope which is called the global scope.

12
00:00:35,700 --> 00:00:38,390
Every variable in such a program would be stored there.

13
00:00:38,390 --> 00:00:41,700
We represent the global scope in these slides using the color green.

14
00:00:41,700 --> 00:00:45,410
Now in some JavaScript environments, global scope is shared across different

15
00:00:45,410 --> 00:00:49,380
files as a way for any part of the program to interact with any other part.

16
00:00:49,380 --> 00:00:51,540
If we add a variable to the program,

17
00:00:51,540 --> 00:00:54,140
that variable is to be said to be within the global scope and

18
00:00:54,140 --> 00:00:57,070
thus it could be accessed from anywhere else in your whole program.

19
00:00:57,070 --> 00:00:59,790
Now we want this program to help us generate stories that

20
00:00:59,790 --> 00:01:01,660
are all about the same hero.

21
00:01:01,660 --> 00:01:05,459
So let's put this hero variable into the global scope where every other line of

22
00:01:05,459 --> 00:01:06,610
code can reference it.

23
00:01:06,610 --> 00:01:10,350
Also for the sake of this example, we should pretend that there exists

24
00:01:10,350 --> 00:01:15,140
a function called aHero and that function returns a randomly generated name.

25
00:01:15,140 --> 00:01:17,120
We won't be investigating the source code or

26
00:01:17,120 --> 00:01:19,910
the run behavior of that function during this talk.

27
00:01:19,910 --> 00:01:23,640
After defining a variable in a lexical scope, you may make reference to

28
00:01:23,640 --> 00:01:26,650
that variable from anywhere else in that lexical scope.

29
00:01:26,650 --> 00:01:28,590
Global variables are the easiest,

30
00:01:28,590 --> 00:01:30,800
since there's nowhere in your code that you couldn't access them
