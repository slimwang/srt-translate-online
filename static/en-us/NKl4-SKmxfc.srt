1
00:00:00,230 --> 00:00:04,410
So let's try this, let's make a global variable called sagas that will

2
00:00:04,410 --> 00:00:09,150
store an array for us, and we'll use this array for storage of saga functions.

3
00:00:09,150 --> 00:00:12,780
Then all we would need in order to have permanent access to each of

4
00:00:12,780 --> 00:00:16,070
these saga functions is to push them into that global array.

5
00:00:16,070 --> 00:00:19,150
At that point, we could choose to access these functions,

6
00:00:19,150 --> 00:00:21,700
even outside the scope they were defined within.

7
00:00:21,700 --> 00:00:25,130
The invocation of those saga functions could actually happen

8
00:00:25,130 --> 00:00:28,630
after the newSaga function that created them was done running.

9
00:00:28,630 --> 00:00:32,875
So let's try moving these lines of code down here in between the two calls to

10
00:00:32,875 --> 00:00:35,420
newSaga just to see how it would work.

11
00:00:35,420 --> 00:00:38,780
Let's try running this code with our simulated interpreter again.

12
00:00:38,780 --> 00:00:41,950
So this first line of code will create an array and

13
00:00:41,950 --> 00:00:43,610
put it in a global variable called sagas.

14
00:00:43,610 --> 00:00:47,450
And this will be where we store each of the saga functions eventually.

15
00:00:47,450 --> 00:00:51,410
Then the line that assigns a new value to the hero variable will run and

16
00:00:51,410 --> 00:00:56,915
create some random string, in this case Boy, to store into the hero variable.

17
00:00:56,915 --> 00:00:57,870
NewSaga is yet

18
00:00:57,870 --> 00:01:02,360
another assignment so a function object gets placed into the newSaga variable.

19
00:01:02,360 --> 00:01:05,830
And we're ready to do a lookup of newSaga, find this function object, and

20
00:01:05,830 --> 00:01:07,970
invoke it because of those two parens.

21
00:01:07,970 --> 00:01:10,820
Invoking any function creates a new context, and

22
00:01:10,820 --> 00:01:13,410
that context is where all the lookups will start.

23
00:01:13,410 --> 00:01:16,640
So first we add another variable to that context, foil.

24
00:01:16,640 --> 00:01:20,320
Foil is randomly selected to be ran, and here's the interesting part.

25
00:01:20,320 --> 00:01:24,330
The sagas array is now stored in a global variable,

26
00:01:24,330 --> 00:01:28,570
which means calls to that push should have a lasting effect on it

27
00:01:28,570 --> 00:01:31,740
that persists even after newSaga has finished running.

28
00:01:31,740 --> 00:01:35,630
What do you think is going to be added into this saga's array as a result of

29
00:01:35,630 --> 00:01:36,250
this line?
