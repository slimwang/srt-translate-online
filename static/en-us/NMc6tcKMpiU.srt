1
00:00:00,115 --> 00:00:03,307
Another parallel communication pattern worth mentioning is called transpose.

2
00:00:03,307 --> 00:00:07,343
For example, you might have a 2D array, such as an image laid out in row-major order.

3
00:00:07,343 --> 00:00:13,802
This means that the elements of the array, or the pixels of the image, are laid out one row at a time.

4
00:00:13,802 --> 00:00:17,332
And I've color-coded the rows here just to show you more clearly what I'm doing.

5
00:00:17,332 --> 00:00:20,529
But you might want to do some processing on the columns of this image.

6
00:00:20,529 --> 00:00:22,150
And so you'd want a lay out like this.

7
00:00:22,150 --> 00:00:24,748
This means you need to do an operation to reorder the elements.

8
00:00:24,767 --> 00:00:27,440
As you can see, I've drawn this as a scatter operation.

9
00:00:27,440 --> 00:00:31,917
So each thread is reading from an adjacent element in the array,

10
00:00:31,917 --> 00:00:35,500
but is writing to someplace scattered in memory, according to the

11
00:00:35,500 --> 00:00:38,633
stride of this row column transpose.

12
00:00:38,633 --> 00:00:42,250
I could also have expressed this as a gather operation, like so.
