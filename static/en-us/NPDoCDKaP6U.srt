1
00:00:00,230 --> 00:00:03,940
Now that we've coded the three
basic operations we'll be using,

2
00:00:03,940 --> 00:00:07,290
let's start on the first part of
the Gaussian Elimination Algorithm.

3
00:00:07,290 --> 00:00:10,640
Taking a system and
putting it into triangular form.

4
00:00:10,640 --> 00:00:15,130
Here, I've added a function called
compute_triangular_form to my module.

5
00:00:15,130 --> 00:00:19,393
It won't take any inputs but it will
return a new system in triangular form

6
00:00:19,393 --> 00:00:22,580
that has the same solution
set as the original system.

7
00:00:22,580 --> 00:00:25,556
Note that I'm using deepcopy
from the copy module, so

8
00:00:25,556 --> 00:00:28,604
that I'm not modifying
the original system directly.

9
00:00:28,604 --> 00:00:31,900
That way it's still left intact
in case I need it later on.

10
00:00:31,900 --> 00:00:32,780
Now go ahead and

11
00:00:32,780 --> 00:00:35,770
code a compute_triangular_form
method of your own.

12
00:00:35,770 --> 00:00:39,361
So you can check your work, I'll
provide some test cases for you to run.

13
00:00:39,361 --> 00:00:42,344
I should note that there
are many valid triangular

14
00:00:42,344 --> 00:00:44,911
forms based on some
choices that you make.

15
00:00:44,911 --> 00:00:49,860
For example, which row to swap for
a row with a zero coefficient.

16
00:00:49,860 --> 00:00:53,598
But the answers that will be used in the
test cases will assume the following.

17
00:00:53,598 --> 00:00:58,585
First, if you swap a row with a zero
coefficient for one below it, swap with

18
00:00:58,585 --> 00:01:03,428
the topmost row below the current
one that has a non-zero coefficient.

19
00:01:03,428 --> 00:01:07,636
So for example,
if we have this system, y + z = 1,

20
00:01:07,636 --> 00:01:12,031
2y- z = 2, x + z = -1,
and 2x + 3y + 2z = 1,

21
00:01:12,031 --> 00:01:17,872
then in order to get a non-zero
coefficient for x in the first equation,

22
00:01:17,872 --> 00:01:22,330
we could swap row one with
either row three or row four.

23
00:01:22,330 --> 00:01:27,624
But according to our assumption, we will
need to swap rows 1 and 3 in this case.

24
00:01:27,624 --> 00:01:30,473
Second, for
this portion of the exercise,

25
00:01:30,473 --> 00:01:34,094
do not use the operation
multiply coefficient and row.

26
00:01:34,094 --> 00:01:38,380
We will use it later in the algorithm
but not for computing triangular form.

27
00:01:38,380 --> 00:01:43,720
And third, only add multiples
of rows to rows underneath.

28
00:01:43,720 --> 00:01:44,770
For example,

29
00:01:44,770 --> 00:01:49,030
you don't want to add a multiple of
row three to row two or row one.

30
00:01:49,030 --> 00:01:51,770
Good luck,
this might be a bit challenging.

31
00:01:51,770 --> 00:01:54,900
If you need a hint,
the first portion of the solution video

32
00:01:54,900 --> 00:01:57,840
will have some suggestions on
how to write the algorithm.

33
00:01:57,840 --> 00:02:01,270
You can access the solution
video by just clicking submit

34
00:02:01,270 --> 00:02:04,930
without checking the box here and
then clicking view answer.
