1
00:00:00,000 --> 00:00:02,000
In this unit here, we'll have fun.

2
00:00:02,000 --> 00:00:06,000
Somehow in the last couple of days on Facebook,

3
00:00:06,000 --> 00:00:12,000
a discussion brought out what Sebastian's weight is.

4
00:00:12,000 --> 00:00:22,000
And I decided rather than telling people how much I weigh I turned this into statistics.

5
00:00:22,000 --> 00:00:28,000
And upfront I want you to put everything together what we've done so far

6
00:00:28,000 --> 00:00:34,000
using programming and since programming has been optional in this class

7
00:00:34,000 --> 00:00:40,000
consider this unit optional but it'd be great if you had a chance to try it.

8
00:00:40,000 --> 00:00:44,000
It's not that hard and at the end of the day you'll know something about me

9
00:00:44,000 --> 00:00:46,000
that I rarely discuss in public.

10
00:00:46,000 --> 00:00:51,000
Through a comment I made in class on Facebook a discussion erupted in our

11
00:00:51,000 --> 00:00:55,000
Facebook STATS 101 discussion group what my actual weight is.

12
00:00:55,000 --> 00:00:59,000
And here is the form that I posted.

13
00:00:59,000 --> 00:01:03,000
They were asked to submit their best estimate how much I weight in kilograms,

14
00:01:03,000 --> 00:01:07,000
and also to submit how much they thought I weighed a year ago.

15
00:01:07,000 --> 00:01:10,000
And within a few hours, there was a good number of guesses

16
00:01:10,000 --> 00:01:17,000
including this one over here that's about as much as the planet Pluto weighs

17
00:01:17,000 --> 00:01:19,000
and also some negative guesses.

18
00:01:19,000 --> 00:01:23,000
These are both the negative weight of Pluto each.

19
00:01:23,000 --> 00:01:26,000
But other than that, there were lots of really good guesses.

20
00:01:26,000 --> 00:01:35,000
And you can see in kilograms, some people think I weigh 80 or 65, others think I weigh 250.

21
00:01:35,000 --> 00:01:42,000
I took the good guesses and added them into a large list called weight.

22
00:01:42,000 --> 00:01:46,000
That's just below 100 of those and now I want to do a statistics on those.

23
00:01:46,000 --> 00:01:51,000
The very first thing I did is I printed the mean estimate and it turns out to be negative.

24
00:01:51,000 --> 00:02:00,000
It's -2.10x10²⁰, and it's a typical situation in statistics.

25
00:02:00,000 --> 00:02:03,000
When you look at those numbers, most of them are actually pretty good guesses.

26
00:02:03,000 --> 00:02:11,000
But these extreme guesses of 10²² or -10²² over here completely affect

27
00:02:11,000 --> 00:02:14,000
and screw up the actual statistics.

28
00:02:14,000 --> 00:02:19,000
Now, you've learned how to deal with this. You know everything about statistics.

29
00:02:19,000 --> 00:02:28,000
What I want you to do is to now code a piece of software called calculate_weight

30
00:02:28,000 --> 00:02:32,000
that has 3 things, and I think you can do all three of them yourself.

31
00:02:32,000 --> 00:02:36,000
First, I want you to remove the outliers by only extracting data

32
00:02:36,000 --> 00:02:38,000
between the lower and upper quartile.

33
00:02:38,000 --> 00:02:41,000
It turns out the number of data points make it well defined

34
00:02:41,000 --> 00:02:43,000
what the lower and upper quartile is.

35
00:02:43,000 --> 00:02:49,000
And all test cases we run through have a well-defined number of data points.

36
00:02:49,000 --> 00:02:52,000
And all the test cases we'll be using will have the property

37
00:02:52,000 --> 00:02:56,000
that the lower and upper quartile are well-defined elements.

38
00:02:56,000 --> 00:03:00,000
Then, I want you to fit a Gaussian using the maximum likelihood estimator.

39
00:03:00,000 --> 00:03:05,000
And from there, I want you to compute the value x that corresponds

40
00:03:05,000 --> 00:03:10,000
to the standard score z, so I'll be giving you not just the weight statistics or the weight data

41
00:03:10,000 --> 00:03:13,000
but also where my extra weight is.

42
00:03:13,000 --> 00:03:18,000
If you plug in the standard score of -2, which is two standard deviations below the mean

43
00:03:18,000 --> 00:03:24,000
of the data that we will estimate, you'll find out my extra weight that I took this morning.

44
00:03:24,000 --> 00:03:26,000
It's amazingly accurate.

45
00:03:26,000 --> 00:03:32,000
But definitely, the data that you guys provided for this was overestimating my weight

46
00:03:32,000 --> 00:03:37,000
and I'm happy to report by two standard deviations.

47
00:03:37,000 --> 00:03:39,000
All these formulas are known,

48
00:03:39,000 --> 00:03:44,000
and I think you have all the coding skills necessary from the past to fill these gaps.

49
00:03:44,000 --> 00:03:46,000
Obviously, the first step is the hardest.

50
00:03:46,000 --> 99:59:59,999
And when you're done with it, this command over here will give you the correct answer.
