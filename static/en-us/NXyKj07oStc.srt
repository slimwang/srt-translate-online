1
00:00:00,000 --> 00:00:05,000
It's a usual thing to note that there's a relationship between the class NP

2
00:00:05,000 --> 00:00:09,000
and the cluster problems that are solvable in exponential time.

3
00:00:09,000 --> 00:00:13,000
Any problems that's in NP is also going to be solvable in exponential time.

4
00:00:13,000 --> 00:00:18,000
So the set of exponential time solvable problems includes NP.

5
00:00:18,000 --> 00:00:23,000
Now that by includes I mean that it takes at most exponential time.

6
00:00:23,000 --> 00:00:26,000
None of the problems in NP can be any harder than that,

7
00:00:26,000 --> 00:00:31,000
say requiring double exponential time or factorial time or whatever happens will be,

8
00:00:31,000 --> 00:00:34,000
they can all be solvable in exponential time.

9
00:00:34,000 --> 00:00:40,000
So if the problem is in NP that means there's a bound on the size of the certificate needed.

10
00:00:40,000 --> 00:00:45,000
Say it's polynomial n to the c for some constant that's specific to this problem,

11
00:00:45,000 --> 00:00:48,000
where n is related to the size of the input

12
00:00:48,000 --> 00:00:54,000
and there is also a bound on the running time of the verification algorithm like n to the k where

13
00:00:54,000 --> 00:00:58,000
again is related to the size of the input and k is some constant that

14
00:00:58,000 --> 00:01:01,000
can depend on the problem but it can't depend on the input.

15
00:01:01,000 --> 00:01:05,000
Well, if we have those two things, we can actually create an algorithm

16
00:01:05,000 --> 00:01:08,000
that can solve the problem for any input.

17
00:01:08,000 --> 00:01:13,000
So what it needs to do is we can just run through all the certificates

18
00:01:13,000 --> 00:01:21,000
that could possibly be relevant for the input x and for each one we run the verification algorithm,

19
00:01:21,000 --> 00:01:26,000
and if the verification algorithm ever says--oh, yeah that's something that shows that x is true,

20
00:01:26,000 --> 00:01:29,000
then we can return true as the solution for the problem and if we run through

21
00:01:29,000 --> 00:01:35,000
all the possible certificates and none of them made the accepting, the verification algorithm return true

22
00:01:35,000 --> 00:01:38,000
then we can return false, and the running time of this algorithm

23
00:01:38,000 --> 00:01:46,000
is well the number of times we go to this loop is like 2 to the n to the c,

24
00:01:46,000 --> 00:01:51,000
if we imagine the size of this certificate is written down in bits.

25
00:01:51,000 --> 00:01:56,000
This is the number of different assignments of bits to certificates of this size.

26
00:01:56,000 --> 00:02:00,000
So if we run through all possible into those, we know that we've checked everything

27
00:02:00,000 --> 00:02:05,000
and then for each of those the running time is in the order of n to the k.

28
00:02:05,000 --> 00:02:09,000
So the total running time is like n to the k,

29
00:02:09,000 --> 00:02:14,000
which is a polynomial times 2 to the n to the c, which is exponential.

30
00:02:14,000 --> 00:02:19,000
So the total running time is exponential. It's not worse than exponential. It's not great.

31
00:02:19,000 --> 00:02:24,000
Unless we are talking about problems that are really tiny, this is going to be horrible,

32
00:02:24,000 --> 00:02:31,000
but sometimes problems really are tiny and mostly I'm introducing this as a way of just connecting

33
00:02:31,000 --> 00:02:36,000
these two concepts of the class NP and what it means to be able to find an exponential time.

34
00:02:36,000 --> 00:02:39,000
It's nice to know that at least any problem that's in NP is solvable.

35
00:02:39,000 --> 00:02:41,000
All right, we can write an algorithm that would run it.

36
00:02:41,000 --> 00:02:47,000
It just that algorithm may take a very, very long time to complete.
