1
00:00:00,260 --> 00:00:02,310
Let's look at another example of this.

2
00:00:02,310 --> 00:00:03,030
This time around,

3
00:00:03,030 --> 00:00:07,340
what I want to do is I want to project
an image, but I have a bigger display or

4
00:00:07,340 --> 00:00:12,208
a bigger screen and I actually been
allowed four different projectors.

5
00:00:12,208 --> 00:00:14,210
What I want to do now
is take an image and

6
00:00:14,210 --> 00:00:18,650
use that four different projectors
to project one large image.

7
00:00:18,650 --> 00:00:22,330
A much different aspect ratio
onto this large screen.

8
00:00:22,330 --> 00:00:24,190
So this is the output I want.

9
00:00:24,190 --> 00:00:25,310
So, to achieve this,

10
00:00:25,310 --> 00:00:29,000
what we need to do is start thinking
about what's going to happen.

11
00:00:29,000 --> 00:00:32,920
Of course, what I can do is,
I can convert this large image into four

12
00:00:32,920 --> 00:00:37,510
smaller images and distribute them
to the four different projectors.

13
00:00:37,510 --> 00:00:40,310
Of course, the first projector's
going to project it this way, of course,

14
00:00:40,310 --> 00:00:42,290
going to have a different
aspect ratio here.

15
00:00:42,290 --> 00:00:43,880
Another one is going to
project it beneath,

16
00:00:43,880 --> 00:00:45,800
make sure there's some
sort of an overlap.

17
00:00:45,800 --> 00:00:49,740
Third one projects another image here,
and the fourth one is projecting.

18
00:00:49,740 --> 00:00:52,810
Now what we can do is what we'd actually
talked about in the previous slide

19
00:00:52,810 --> 00:00:53,990
the quiz itself.

20
00:00:53,990 --> 00:00:56,350
If I actually had a camera, you know,

21
00:00:56,350 --> 00:01:00,590
a camera looking at this scene, I can
basically get the information about all

22
00:01:00,590 --> 00:01:04,860
four of the different images and suggest
to each one of the four projectors

23
00:01:04,860 --> 00:01:08,480
how to inverse transform the image,
and then also kind of do

24
00:01:08,480 --> 00:01:12,230
the processing at a central server
that actually does the stitching.

25
00:01:12,230 --> 00:01:14,890
So I can basically do stitching for
four different images

26
00:01:14,890 --> 00:01:19,170
after I've done simple transformations
and applied to generate a full image.

27
00:01:19,170 --> 00:01:22,710
That is actually the idea that
we will see in action next.

28
00:01:22,710 --> 00:01:26,430
So here we are actually going to see
an example of how they've done this with

29
00:01:26,430 --> 00:01:29,750
six roughly aligned projectors.

30
00:01:29,750 --> 00:01:34,450
What each projector does is it basically
it displays this gray code pattern.

31
00:01:34,450 --> 00:01:37,758
We know the gray code pattern,
and actually it projects it, and

32
00:01:37,758 --> 00:01:41,804
using this projection, and getting
the reflections, captured by a camera,

33
00:01:41,804 --> 00:01:45,235
we can now use the inverse transform
to be able to transform each and

34
00:01:45,235 --> 00:01:46,794
every one of the projectors.

35
00:01:46,794 --> 00:01:50,490
Here, of course, we see the process
of it doing this for each and

36
00:01:50,490 --> 00:01:52,412
everyone of the six projectors.

37
00:01:57,056 --> 00:02:00,713
Now of course, by just doing analysis on
this one I can actually learn more about

38
00:02:00,713 --> 00:02:02,210
the shape of all of the images.

39
00:02:02,210 --> 00:02:05,890
And this of course now you see all
six cameras have been aligned.

40
00:02:06,930 --> 00:02:10,520
This is the final projection
of the six different cameras.

41
00:02:10,520 --> 00:02:14,430
Here, basically now allows you to
generate a much larger display

42
00:02:15,720 --> 00:02:18,930
by combining all six of the cameras,
here you still see a little bit

43
00:02:18,930 --> 00:02:22,690
of an artifact, but you basically see
that if the camera intensities and

44
00:02:22,690 --> 00:02:25,020
alignments can be done correctly,
you won't see any.
