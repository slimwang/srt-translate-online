1
00:00:00,000 --> 00:00:04,000
So this is my solution to the problem, so let's just go ahead and run through it.

2
00:00:04,000 --> 00:00:06,000
Since clauses is a list of lists,

3
00:00:06,000 --> 00:00:10,000
we're just going to run through each inner list of for clause and clauses.

4
00:00:10,000 --> 00:00:16,000
We're going to set a variable called clause satisfied to false to begin with,

5
00:00:16,000 --> 00:00:18,000
then for each variable in the clause, if it is positive,

6
00:00:18,000 --> 00:00:23,000
that is if it is not negated than if the assignment to the variable is true,

7
00:00:23,000 --> 00:00:26,000
then we switch clause satisfied to true and break

8
00:00:26,000 --> 00:00:29,000
and go to the next variable in the clause.

9
00:00:29,000 --> 00:00:33,000
Else, we go ahead and recognize that the variable is negated

10
00:00:33,000 --> 00:00:37,000
and we check that the assignment is false,

11
00:00:37,000 --> 00:00:39,000
and if that is the case, then we set

12
00:00:39,000 --> 00:00:41,000
the clause satisfied to true and break.

13
00:00:41,000 --> 00:00:44,000
Finally, once we are done looping through all the

14
00:00:44,000 --> 00:00:49,000
variables in the clause we check if clause satisfied is false,

15
00:00:49,000 --> 00:00:51,000
and it is still false,

16
00:00:51,000 --> 00:00:54,000
then we immediately return false

17
00:00:54,000 --> 00:00:56,000
because there is a clause that is not satisfied.

18
00:00:56,000 --> 00:00:58,000
This is simply a shortcut to make the

19
00:00:58,000 --> 00:01:00,000
algorithm run a little bit faster.

20
00:01:00,000 --> 00:01:02,000
And once we're done with that,

21
00:01:02,000 --> 00:01:04,000
we simply loop back to the next clause and start all over.

22
00:01:04,000 --> 00:01:07,000
And if we fall through all of those,

23
00:01:07,000 --> 00:01:09,000
then we return true and say, yes,

24
00:01:09,000 --> 99:59:59,999
the entire Boolean formula is in fact satisfied by the given assignment.
