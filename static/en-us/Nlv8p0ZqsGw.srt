1
00:00:00,450 --> 00:00:01,050
Let's move ahead.

2
00:00:01,050 --> 00:00:05,190
The next thing I want to do is supply
out NSURL session with a request.

3
00:00:05,190 --> 00:00:08,380
But first, there are a few important
things that I want to point out.

4
00:00:08,380 --> 00:00:12,740
What we've been calling requests,
the NSURL session refers to as tasks.

5
00:00:12,740 --> 00:00:18,650
Also, any task used by NSURL session
is a sub class of NSURL session tasks.

6
00:00:18,650 --> 00:00:19,720
Let's break that down.

7
00:00:19,720 --> 00:00:24,570
There are three main tasks that we can
work with, data task, download task, and

8
00:00:24,570 --> 00:00:25,730
upload task.

9
00:00:25,730 --> 00:00:29,970
A data task, or
an NSURLSession data task, returns

10
00:00:29,970 --> 00:00:34,700
data from the network directly into
memory as one or more NS data objects.

11
00:00:34,700 --> 00:00:37,730
The key word for
remembering this type of task is data.

12
00:00:37,730 --> 00:00:40,310
Data tasks are good for
short lived requests, and

13
00:00:40,310 --> 00:00:43,260
we'll be using them
exclusively in this course.

14
00:00:43,260 --> 00:00:46,590
A download task, or
NSURL session download task,

15
00:00:46,590 --> 00:00:49,540
returns data from the network
into a temporary file.

16
00:00:49,540 --> 00:00:52,520
Think of these tasks like downloading
a file from the Internet,

17
00:00:52,520 --> 00:00:55,580
when the task completes you
have a file to work with.

18
00:00:55,580 --> 00:00:59,780
And finally, the upload task,
or NSURL upload session task.

19
00:00:59,780 --> 00:01:03,100
These kinds of tasks are specialized for
uploading content.

20
00:01:03,100 --> 00:01:06,830
Like I said, in this course we're
just going to focus on data task.

21
00:01:06,830 --> 00:01:10,320
To recap,
in the code we have the image URL and

22
00:01:10,320 --> 00:01:12,500
we have the shared NSURL session.

23
00:01:12,500 --> 00:01:16,630
So, now we're ready to make our request,
or a task in this case.

24
00:01:16,630 --> 00:01:19,400
To create an NSURL session data task,

25
00:01:19,400 --> 00:01:23,870
we need to use the NSURL sessions
method called data task with URL.

26
00:01:23,870 --> 00:01:26,810
We'll be using the version of this
method that takes the URL and

27
00:01:26,810 --> 00:01:32,170
a closure called a completionHandler and
it returns a NSURLSession data task.

28
00:01:32,170 --> 00:01:35,400
So I'll go ahead and capture the return
value, which is the task, and

29
00:01:35,400 --> 00:01:37,440
then I'll specify our imageURL.

30
00:01:37,440 --> 00:01:39,950
And now let's talk about
the completionHandler.

31
00:01:39,950 --> 00:01:42,970
The completionHandler is
just like any other closure.

32
00:01:42,970 --> 00:01:46,790
It's named completionHandler because
it's executed after the data task

33
00:01:46,790 --> 00:01:49,780
completes and we can't really
be sure when that will happen.

34
00:01:49,780 --> 00:01:52,150
The task might complete
in a few milliseconds, or

35
00:01:52,150 --> 00:01:53,260
it might take a whole minute.

36
00:01:53,260 --> 00:01:55,570
But that's the real
power of this closure.

37
00:01:55,570 --> 00:01:59,090
It's like us saying I don't really know
when this task is going to complete, but

38
00:01:59,090 --> 00:02:01,420
when it does run this block of code.

39
00:02:01,420 --> 00:02:05,290
Now instead of using this closure,
we could use NSURL session's family of

40
00:02:05,290 --> 00:02:08,720
delegates to handle running code
after the task completes but

41
00:02:08,720 --> 00:02:10,368
we won't be doing that in this course.

42
00:02:10,368 --> 00:02:13,320
If you're interested, I'll post links
in the instructor notes that cover

43
00:02:13,320 --> 00:02:16,540
the NSURL session
delegates in more detail.

44
00:02:16,540 --> 00:02:19,710
Now this completion handler
takes three parameters.

45
00:02:19,710 --> 00:02:25,020
The types of those parameters are NS
data, NS URL response, and NS error.

46
00:02:25,020 --> 00:02:27,140
Now if you haven't seen those
types before, don't worry.

47
00:02:27,140 --> 00:02:29,100
We'll slowly introduce them.

48
00:02:29,100 --> 00:02:32,680
For their local parameter names I'll
call them data, response, and error.

49
00:02:32,680 --> 00:02:34,560
For now let's ignore all of them and

50
00:02:34,560 --> 00:02:37,400
try printing task finish
when the task completes.

51
00:02:37,400 --> 00:02:38,940
And we'll build and run this.

52
00:02:43,010 --> 00:02:44,510
Hm, well,

53
00:02:44,510 --> 00:02:47,860
it doesn't appear to be working because
our print statement isn't showing up.

54
00:02:47,860 --> 00:02:49,450
Let's talk about why this is next.
