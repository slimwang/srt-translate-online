1
00:00:01,110 --> 00:00:03,210
In the previous lesson,
we built a method for

2
00:00:03,210 --> 00:00:06,220
escaping the characters in
the parameters of our URL,

3
00:00:06,220 --> 00:00:09,590
to make sure that none of
the characters were unsafe ASCII.

4
00:00:09,590 --> 00:00:13,720
Now, our method worked, but Apple
actually provides a set of classes that

5
00:00:13,720 --> 00:00:16,580
we can use to accomplish
the exact same thing.

6
00:00:16,580 --> 00:00:20,740
The first of these classes that we're
going to talk about is NSURLComponents.

7
00:00:22,290 --> 00:00:25,000
NSURLComponents is a class
designed to help us

8
00:00:25,000 --> 00:00:27,650
build URLs in a piecewise fashion.

9
00:00:27,650 --> 00:00:32,720
That is to say that a URL can be built
from individual pieces or components.

10
00:00:32,720 --> 00:00:36,070
If we look at URLs more closely we
can start to see some of these common

11
00:00:36,070 --> 00:00:37,160
components.

12
00:00:37,160 --> 00:00:37,980
Here's a URL for

13
00:00:37,980 --> 00:00:41,770
a web page that has information about
Udacity's nano degree programs.

14
00:00:41,770 --> 00:00:44,480
We can actually omit the www portion.

15
00:00:44,480 --> 00:00:47,250
It isn't required, and
we can focus on the rest.

16
00:00:47,250 --> 00:00:49,810
The first part of the URL
called the scheme

17
00:00:49,810 --> 00:00:52,160
specifies the protocol that we're using.

18
00:00:52,160 --> 00:00:54,470
In this case,
the scheme we're using is https.

19
00:00:55,690 --> 00:00:59,950
Next, the part many refer to as
the website name, here it's udacity.com,

20
00:00:59,950 --> 00:01:02,610
is called the host name,
or host for short.

21
00:01:02,610 --> 00:01:06,330
The host is used to determine
the location of the server.

22
00:01:06,330 --> 00:01:09,100
The final part of this
URL is called the path.

23
00:01:09,100 --> 00:01:12,850
It specifies the location on the server
where the resource that we want

24
00:01:12,850 --> 00:01:13,870
is located.

25
00:01:13,870 --> 00:01:17,830
In this case, we want the resource
located at the path nanodegree.

26
00:01:17,830 --> 00:01:21,470
And like we said before, the resource
at this location is a webpage that has

27
00:01:21,470 --> 00:01:23,940
information about Udacity's
nano degree programs.

28
00:01:25,540 --> 00:01:29,790
Using NSURL components, we can create
this URL in just a few lines of code.

29
00:01:29,790 --> 00:01:34,470
And you can see here in this code
example that I've had to use these slash

30
00:01:34,470 --> 00:01:38,330
character in the path, that is required,
so it may not look the exact same on

31
00:01:38,330 --> 00:01:42,040
the previous screen that we saw, but
you'll need to provide the slash here.

32
00:01:43,900 --> 00:01:48,290
But what about a more complex URL like
the ones we'll be using in FlickFinder?

33
00:01:48,290 --> 00:01:49,765
Here's another example.

34
00:01:49,765 --> 00:01:55,095
This URL uses the Flickr APIs
flickr.photos.search method.

35
00:01:55,095 --> 00:01:55,795
And just so you know,

36
00:01:55,795 --> 00:02:00,005
I've omitted some of the parameters in
this particular example for brevity.

37
00:02:00,005 --> 00:02:02,545
We can go ahead and label the scheme,
the host and the path,

38
00:02:02,545 --> 00:02:05,455
but what do we call everything else?

39
00:02:05,455 --> 00:02:09,830
Well the question mark separates the
path from the next component in this URL

40
00:02:09,830 --> 00:02:11,850
that's called the query.

41
00:02:11,850 --> 00:02:15,260
The query is composed of name
value pairs that a server can

42
00:02:15,260 --> 00:02:17,760
use to determine its response.

43
00:02:17,760 --> 00:02:20,660
You'll notice that each pair
is separated by an ampersand.

44
00:02:23,047 --> 00:02:27,247
To add the query component to
a URL using NSURLComponents,

45
00:02:27,247 --> 00:02:32,080
we need to introduce a new
class called NSURLQueryItem.

46
00:02:32,080 --> 00:02:36,850
The NSURLQueryItem represents a single
name value pair in the query component

47
00:02:36,850 --> 00:02:37,400
of a URL.

48
00:02:37,400 --> 00:02:41,560
To create an NSURLQueryItem
is pretty straightforward.

49
00:02:41,560 --> 00:02:44,230
We just need to specify the name and
the value.

50
00:02:44,230 --> 00:02:47,810
Then, NSURLComponents has
a property called queryItems,

51
00:02:47,810 --> 00:02:50,530
which is an array of NSURLQueryItem.

52
00:02:50,530 --> 00:02:53,592
So we can just add any queryItems
that we make to this array.

53
00:02:53,592 --> 00:02:58,220
In code,
it might look something like this.

54
00:02:58,220 --> 00:03:00,625
If we go over here we might
see the resulting URL.

55
00:03:02,587 --> 00:03:06,480
And I know this might seem like
a lot of work just to create a URL.

56
00:03:06,480 --> 00:03:11,010
But the big trade off is that NSURL
components takes care of insuring that

57
00:03:11,010 --> 00:03:15,610
our URLs are properly escaped and
only contains safe ASCII characters.

58
00:03:15,610 --> 00:03:17,850
And that's a nice reinsurance for us.

59
00:03:17,850 --> 00:03:19,490
Let's take a look at one final example.

60
00:03:20,560 --> 00:03:26,070
This URL is taken from Matt Thompson's
post on NSURL components on NSHipster.

61
00:03:26,070 --> 00:03:28,720
I posted a link to the article
in the instructor notes.

62
00:03:28,720 --> 00:03:31,920
Now, on first glance this
URL is a lot to take in, but

63
00:03:31,920 --> 00:03:34,730
it just contains some extra
optional components of the URL.

64
00:03:34,730 --> 00:03:36,820
They're already labeled here and

65
00:03:36,820 --> 00:03:39,780
if you're interested I encourage you
to check out the article to learn more.
