1
00:00:00,540 --> 00:00:04,340
So, the first thing to do is define your projection matrix.

2
00:00:04,340 --> 00:00:07,260
Note that it has a size of 3 cross 4.

3
00:00:07,260 --> 00:00:09,600
That is three rows, four columns.

4
00:00:09,600 --> 00:00:13,620
Next, we convert p to homogeneous coordinates and transpose it.

5
00:00:13,620 --> 00:00:16,790
The resulting size should be 4 cross 1.

6
00:00:16,790 --> 00:00:19,590
That is a column vector with four rows.

7
00:00:19,590 --> 00:00:22,550
It is easy to append an element to any vector.

8
00:00:22,550 --> 00:00:25,890
A single quote after a vector transposes it.

9
00:00:25,890 --> 00:00:29,180
Finally, we can apply the projection transformation, and

10
00:00:29,180 --> 00:00:31,550
this ends up being a simple matrix multiplication.

11
00:00:32,750 --> 00:00:34,130
Note that we use star,

12
00:00:34,130 --> 00:00:38,057
not dot star, because we are not doing element-wise multiplication.

13
00:00:39,070 --> 00:00:41,860
Remember to convert back to non-homogeneous coordinates when

14
00:00:41,860 --> 00:00:42,720
returning the value.

15
00:00:44,080 --> 00:00:49,470
u equals x by z, and v equals y by z.

16
00:00:49,470 --> 00:00:50,630
And that's it.

17
00:00:50,630 --> 00:00:53,800
Here's a quick check to see if the function's return values make sense.

18
00:00:55,270 --> 00:00:57,730
Say we keep the focal length at 50 millimeters.

19
00:00:58,750 --> 00:01:03,168
Then we know that any point at 50 millimeters should be

20
00:01:03,168 --> 00:01:06,459
projected at the same x, y coordinates.

21
00:01:06,459 --> 00:01:07,370
Let's try this out.

22
00:01:09,680 --> 00:01:12,280
This should be true regardless of what the coordinates are.

23
00:01:13,460 --> 00:01:14,990
Let's try something else.

24
00:01:17,260 --> 00:01:20,650
Similarly, points that double the focal length should be reduced to

25
00:01:20,650 --> 00:01:21,470
half the size.

26
00:01:23,740 --> 00:01:25,990
See, perspective projection is not too bad.
