1
00:00:00,190 --> 00:00:04,496
I implemented the changes in todo-view.js and

2
00:00:04,496 --> 00:00:08,590
in index.html, which is the place where our templates are.

3
00:00:08,590 --> 00:00:10,470
Now, I had to figure this one out as well,

4
00:00:10,470 --> 00:00:13,910
so here's the thought process I went through.

5
00:00:13,910 --> 00:00:16,590
Now, first I knew I had to add the edit button in

6
00:00:16,590 --> 00:00:20,590
the same place as the delete button, so I had to figure out where that was.

7
00:00:20,590 --> 00:00:24,700
One way to do that would be to pop in to our developer tools here and

8
00:00:24,700 --> 00:00:27,060
take a look at what that button actually looks like.

9
00:00:27,060 --> 00:00:31,540
And if you poke around, you'll find that the button has a class of destroy.

10
00:00:31,540 --> 00:00:32,810
So, that's what we're looking for.

11
00:00:32,810 --> 00:00:36,390
Let's close the developer tools here and let's go look around for

12
00:00:36,390 --> 00:00:38,300
something with a class of destroy.

13
00:00:38,300 --> 00:00:42,970
Here it is right here, inside of the same place as before, the item-template.

14
00:00:42,970 --> 00:00:47,200
Remember this is the HTML that is going to represent each one of our items.

15
00:00:47,200 --> 00:00:48,850
So that's our x button.

16
00:00:48,850 --> 00:00:51,110
We want to have an edit button as well.

17
00:00:51,110 --> 00:00:54,007
I'm literally going to copy and paste, but

18
00:00:54,007 --> 00:00:59,240
I'm going to change the class to that class name that I gave you, edit-btn.

19
00:00:59,240 --> 00:01:03,874
If I save this and I go back to the browser and refresh, sure enough now,

20
00:01:03,874 --> 00:01:09,280
I should have two buttons, and they look exactly how we want them to look.

21
00:01:09,280 --> 00:01:12,780
Now, the only problem is when I click on the edit button, nothing happens.

22
00:01:12,780 --> 00:01:14,020
Why not?

23
00:01:14,020 --> 00:01:15,870
Well, it's because I haven't wired it up yet.

24
00:01:15,870 --> 00:01:19,910
So, now that I've tested it and the button shows up but it doesn't do anything,

25
00:01:19,910 --> 00:01:24,350
I need to figure out where is this edit functionality going to live?

26
00:01:24,350 --> 00:01:25,420
Well, think about it.

27
00:01:25,420 --> 00:01:28,160
The edit functionality already exists.

28
00:01:28,160 --> 00:01:32,010
It happens anytime I double-click on one of these items.

29
00:01:32,010 --> 00:01:34,750
So, I need to find where that happens and

30
00:01:34,750 --> 00:01:39,180
maybe consider putting the click on my little edit button in that same area.

31
00:01:39,180 --> 00:01:45,100
So, if I poke around, it turns out I'll find that in the todo-view.js.

32
00:01:45,100 --> 00:01:49,920
If we go over here and scroll down just a teeny bit, this right here is

33
00:01:49,920 --> 00:01:56,060
the events object literal that binds these things to these functions.

34
00:01:56,060 --> 00:01:58,210
So, how does this actually work?

35
00:01:58,210 --> 00:02:03,930
I mean, we'll find edit functionality when we double-click on a label, so

36
00:02:03,930 --> 00:02:05,280
that seems pretty simple.

37
00:02:05,280 --> 00:02:10,690
My guess would be that this is the event, click or double-click.

38
00:02:10,690 --> 00:02:15,740
This is the CSS selector, .toggle or label, and

39
00:02:15,740 --> 00:02:21,510
this over here, toggleCompleted or edit or clear, is the actual functionality.

40
00:02:21,510 --> 00:02:26,460
If we scroll down, sure enough, there is toggleCompleted and there is edit.

41
00:02:26,460 --> 00:02:27,420
It says in the comment,

42
00:02:27,420 --> 00:02:31,360
Switch this view into editing mode, displaying the input field.

43
00:02:31,360 --> 00:02:35,560
So, yes indeed, this is exactly what we want right here.

44
00:02:35,560 --> 00:02:39,220
So, we have a double-click on label resulting in the edit,

45
00:02:39,220 --> 00:02:43,720
and we also want a click event on what?

46
00:02:43,720 --> 00:02:45,830
Well, in case the answer isn't popping out at you,

47
00:02:45,830 --> 00:02:48,190
let's think about how that destroy button works.

48
00:02:48,190 --> 00:02:52,200
In index.html, this button has a class of destroy.

49
00:02:52,200 --> 00:02:54,640
When you click on it, something happens, so let's go ahead and

50
00:02:54,640 --> 00:02:57,440
take a look and see if we can figure out how that works.

51
00:02:57,440 --> 00:03:02,300
When you click on .destroy, run this function.

52
00:03:02,300 --> 00:03:07,015
When you click on .edit button, run this function.

53
00:03:07,015 --> 00:03:11,230
When you double-click on label, run this function.

54
00:03:11,230 --> 00:03:14,800
Now, I'm kind of intuiting this just by reading the code.

55
00:03:14,800 --> 00:03:18,120
When I first did it, I'd no idea if it was actually going to work.

56
00:03:18,120 --> 00:03:22,160
But because experimentation is cheap and

57
00:03:22,160 --> 00:03:24,610
there are no high stakes because of our version control,

58
00:03:24,610 --> 00:03:29,420
we can always revert our changes, I'm going to experiment and try it anyway.

59
00:03:29,420 --> 00:03:33,030
I'll save it, go back to my browser, hit refresh.

60
00:03:33,030 --> 00:03:34,720
And now, if I roll over and

61
00:03:34,720 --> 00:03:38,830
I click, sure enough, it runs the edit functionality.

62
00:03:38,830 --> 00:03:43,140
I can hit Enter to get back and I can do it with any of these,

63
00:03:43,140 --> 00:03:46,950
including these that have not been checked, so that's pretty cool.

64
00:03:46,950 --> 00:03:49,710
Now, I can also confirm this in the documentation.

65
00:03:49,710 --> 00:03:52,830
events and then an object literal, let's look that up.

66
00:03:54,460 --> 00:03:59,310
If we go to backbonejs,org, and we scroll down to the area where it talks about

67
00:03:59,310 --> 00:04:06,131
views, sure enough, right here at the very top, we have Backbone.View.extend

68
00:04:06,131 --> 00:04:10,670
events, and then inside of this, we've got these various things.

69
00:04:10,670 --> 00:04:15,370
It turns out this is indeed where we specify our declarative events.

70
00:04:15,370 --> 00:04:16,390
We can click on this and

71
00:04:16,390 --> 00:04:20,440
read even more about it, and understand exactly how it works.

72
00:04:20,440 --> 00:04:22,460
Right now, I'm not going to go into this, but

73
00:04:22,460 --> 00:04:27,160
just know the documentation does exist, and if the documentation ever fails you,

74
00:04:27,160 --> 00:04:30,055
a Google search will actually do very well as well.

75
00:04:30,055 --> 00:04:33,460
Oftentimes, Google searches will link you more effectively to the part of

76
00:04:33,460 --> 00:04:35,500
the documentation that you need.

77
00:04:35,500 --> 00:04:38,950
So, once again, not a very hard process.

78
00:04:38,950 --> 00:04:42,320
The specific details of what code I wrote?

79
00:04:42,320 --> 00:04:43,321
That doesn't matter.

80
00:04:43,321 --> 00:04:45,730
The point is my thought process.

81
00:04:45,730 --> 00:04:47,440
Figure out what you need and

82
00:04:47,440 --> 00:04:51,190
then be a detective to figure out where it could best fit in.

83
00:04:51,190 --> 00:04:53,210
And lastly, be tofu.

84
00:04:53,210 --> 00:04:57,580
Fit your code in as if it was already there originally.

85
00:04:57,580 --> 00:04:59,280
Make it look exactly the same.

86
00:04:59,280 --> 00:05:02,470
You'll notice I did not put a space before my colon.

87
00:05:02,470 --> 00:05:06,210
The reason is because the code here does not put a space.

88
00:05:06,210 --> 00:05:08,300
I did put a space after.

89
00:05:08,300 --> 00:05:12,800
And again, that's because that's what the code here has done, so

90
00:05:12,800 --> 00:05:13,930
I'm just going to emulate that.
