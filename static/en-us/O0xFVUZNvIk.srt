1
00:00:00,000 --> 00:00:03,127
And the car hierarchy you've just seen, makes it easy to understand the

2
00:00:03,127 --> 00:00:06,466
concepts of super and sub classes but it doesn't make for a very interesting

3
00:00:06,466 --> 00:00:12,044
implementation, instead lets look at quizzes. In a quiz, you can have different

4
00:00:12,044 --> 00:00:17,808
kinds of questions so it's natural to have a super class question. And then,

5
00:00:17,808 --> 00:00:21,915
you may have various sub classes. Maybe a question where you need to fill in a

6
00:00:21,915 --> 00:00:25,490
missing word, or a question where you're given a bunch of choices, or one where

7
00:00:25,490 --> 00:00:28,900
you've to supply a number, but it might be okay if it's not exactly the right

8
00:00:28,900 --> 00:00:36,196
answer. A numeric question might take round off into account. And so on. You

9
00:00:36,196 --> 00:00:41,494
could even think that there is a, sub-class of choice question. I'll call it a

10
00:00:41,494 --> 00:00:44,896
Multi Choice Question, you know, one of those where you need to supply all of

11
00:00:44,896 --> 00:00:50,594
the choices that are correct. What do our questions have in common? They all

12
00:00:50,594 --> 00:00:54,314
need to be able to display themselves, and the display may be as simple as

13
00:00:54,314 --> 00:01:00,690
showing the question text, or it might have to have a list of choices. Or an

14
00:01:00,690 --> 00:01:04,045
underscore at the right place for filling in a word, and also any question

15
00:01:04,045 --> 00:01:09,232
needs to be able to check its answer. That might be a string comparison or a

16
00:01:09,232 --> 00:01:15,820
number comparison that's, or a number comparison after some accuracy. So the

17
00:01:15,820 --> 00:01:20,308
idea is that, the super-class question will give reasonable implementations of

18
00:01:20,308 --> 00:01:24,532
these methods, and the sub-classes can modify them if they don't work for the

19
00:01:24,532 --> 00:01:30,504
context of the sub-classes. I've implemented the question class for you, and

20
00:01:30,504 --> 00:01:33,960
here is a programming problem that's designed to make you familiar with that

21
00:01:33,960 --> 00:01:39,928
class. So that you can form sub-classes, as we go, go along. Here's the

22
00:01:39,928 --> 00:01:43,732
question class. Have a look at it's methods, as you answer the next programming

23
00:01:43,732 --> 00:01:48,454
question. And here is a demo program, in which I want you to fill in some

24
00:01:48,454 --> 00:01:54,550
details. Make a question object, and then there is a method present question.

25
00:01:54,550 --> 00:01:59,940
That displays a question, gets the user response, checks whether was correct.

26
00:01:59,940 --> 00:02:04,648
They're methods for displaying and for checking a response. And I want you to

27
00:02:04,648 --> 00:02:08,389
look them up and call them.
