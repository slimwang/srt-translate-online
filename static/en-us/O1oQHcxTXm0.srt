1
00:00:00,510 --> 00:00:03,940
There are two main types of tests
you can add to your Android project,

2
00:00:03,940 --> 00:00:06,230
unit tests and connected tests.

3
00:00:06,230 --> 00:00:08,460
The primary distinction between the two,

4
00:00:08,460 --> 00:00:12,180
is that unit tests run on a regular
Java VM on your computer.

5
00:00:12,180 --> 00:00:15,560
And connected tests run on
an Android device or emulator.

6
00:00:15,560 --> 00:00:17,170
In general,
you should use unit tests for

7
00:00:17,170 --> 00:00:20,060
testing generic,
non-Android related classes.

8
00:00:20,060 --> 00:00:23,150
In fact, since unite tests are run
against a mock Android STK

9
00:00:23,150 --> 00:00:27,490
implementation, any code that
calls the android API will fail.

10
00:00:27,490 --> 00:00:30,920
In this case, you should either use
a mocking framework like Makido, to mock

11
00:00:30,920 --> 00:00:34,710
the appropriate android dependencies,
or use a connected test instead.

12
00:00:34,710 --> 00:00:37,800
Additionally, you can configure
the testing options in your Gradle built

13
00:00:37,800 --> 00:00:42,140
script, to construct the mock Android
implementation to return default values,

14
00:00:42,140 --> 00:00:43,720
rather than throw an error.

15
00:00:43,720 --> 00:00:44,570
In any case,

16
00:00:44,570 --> 00:00:48,280
it's up to you as a developer to decide
how to best write your tests, and

17
00:00:48,280 --> 00:00:51,380
how to structure your code in such
a way as to make testing easier.

18
00:00:51,380 --> 00:00:52,660
Connected tests should be reserved for

19
00:00:52,660 --> 00:00:55,720
testing logic that depend
on Android API's, or for

20
00:00:55,720 --> 00:00:58,940
more high level testing like
integration and functional tests.

21
00:00:58,940 --> 00:01:02,850
Remember, connected tests are packaged
as an APK that will be installed on

22
00:01:02,850 --> 00:01:04,640
an Android device or emulator.

23
00:01:04,640 --> 00:01:07,760
So there's typically more overhead
involved in their execution.

24
00:01:07,760 --> 00:01:11,840
Both unit tests and connected tests have
their own source sets, named test and

25
00:01:11,840 --> 00:01:13,790
android test respectively.

26
00:01:13,790 --> 00:01:16,230
The notion of variants
extends to tests as well.

27
00:01:16,230 --> 00:01:19,760
Allowing you to write tests specific
to your build type of product flavor.

28
00:01:19,760 --> 00:01:22,830
The naming conventions for these source
sets follow the same pattern as for

29
00:01:22,830 --> 00:01:26,200
application code, except for
the test or android test suffix.
