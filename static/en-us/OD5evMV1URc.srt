1
00:00:00,320 --> 00:00:02,760
So, let's see which storage
class was the best match for

2
00:00:02,760 --> 00:00:04,180
each of these attributes.

3
00:00:04,180 --> 00:00:05,965
So for the first attribute, name,

4
00:00:05,965 --> 00:00:09,950
this should be text since it's
essentially a string input.

5
00:00:10,960 --> 00:00:12,490
Next would be breed.

6
00:00:12,490 --> 00:00:15,420
So given that there are many different
types of breeds and that we might add

7
00:00:15,420 --> 00:00:19,280
a new breed into the system,
we can go ahead and sort this as text.

8
00:00:20,640 --> 00:00:24,030
Now in the case of there were just
limited number of susceptible breeds,

9
00:00:24,030 --> 00:00:25,900
you could have made a choice
before using integers.

10
00:00:27,200 --> 00:00:29,940
Moving on we have gender,
and in this example

11
00:00:29,940 --> 00:00:33,020
we listed here that there will
only be three options for gender.

12
00:00:33,020 --> 00:00:36,680
And because of this,
we like to sort as an integer.

13
00:00:36,680 --> 00:00:40,960
So for example,
we have zero equal unknown, one for

14
00:00:40,960 --> 00:00:43,570
male, and two for female.

15
00:00:43,570 --> 00:00:45,490
And next off would be weight.

16
00:00:45,490 --> 00:00:48,870
So, you could have made a real
strong case that this can be sort

17
00:00:48,870 --> 00:00:51,950
as a real value, but
to keeps things simple,

18
00:00:51,950 --> 00:00:55,470
we're not going to support
weights with decimal points.

19
00:00:55,470 --> 00:00:56,860
So we'll just use integers
