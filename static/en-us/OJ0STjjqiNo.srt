1
00:00:00,008 --> 00:00:02,530
There is a need for customization and

2
00:00:02,530 --> 00:00:06,700
the opportunity for customization is what spurred

3
00:00:06,700 --> 00:00:09,310
operating systems designers to think of a

4
00:00:09,310 --> 00:00:11,770
structure of the operating system that would

5
00:00:11,770 --> 00:00:15,920
allow customization of the services and gave

6
00:00:15,920 --> 00:00:19,710
birth to the idea of microkernel-based operating

7
00:00:19,710 --> 00:00:23,310
system. As before, each of the applications

8
00:00:23,310 --> 00:00:25,576
is in its own hardware address space,

9
00:00:25,576 --> 00:00:32,980
the microkernel runs in a privileged mode of the architecture, and provides

10
00:00:32,980 --> 00:00:36,120
simple abstractions such as threads, address

11
00:00:36,120 --> 00:00:38,440
space, and inter-process communication. In other

12
00:00:38,440 --> 00:00:44,400
words, small number of mechanisms are supported by the microkernel. The keyword

13
00:00:44,400 --> 00:00:47,270
is mechanisms, there are no policies

14
00:00:47,270 --> 00:00:50,860
ingrained in the microkernel, only mechanisms for

15
00:00:50,860 --> 00:00:57,510
accessing hardware resources. The operating system services, such as virtual

16
00:00:57,510 --> 00:01:03,790
memory management, CPU scheduling, file system, and so on that implemented as

17
00:01:03,790 --> 00:01:09,420
servers on top of the microkernel. So in other words, these

18
00:01:09,420 --> 00:01:16,490
system services execute with a same privilege as the applications themselves.

19
00:01:16,490 --> 00:01:21,650
Each of the system service is in its own address space and it is protected from

20
00:01:21,650 --> 00:01:24,560
one another and protected from the application and

21
00:01:24,560 --> 00:01:28,440
the microkernel, being below this red line, is running

22
00:01:28,440 --> 00:01:31,320
in privileged mode, it is protected from all

23
00:01:31,320 --> 00:01:34,520
of the applications as well as the system services.

24
00:01:34,520 --> 00:01:37,000
So in other words, we no longer have

25
00:01:37,000 --> 00:01:41,820
that monolithic structure that we had before. Instead each

26
00:01:41,820 --> 00:01:44,100
operating system service is in its

27
00:01:44,100 --> 00:01:46,950
own hardware address space. In principle, there

28
00:01:46,950 --> 00:01:51,360
is no distinction between regular applications and

29
00:01:51,360 --> 00:01:54,020
the system services that are executing a

30
00:01:54,020 --> 00:01:57,640
server processes on top of the microkernel.

31
00:01:57,640 --> 00:02:00,120
Thus, we have very strong protection among

32
00:02:00,120 --> 00:02:03,020
the applications, between the applications and system

33
00:02:03,020 --> 00:02:07,940
services, among the system services and between

34
00:02:07,940 --> 00:02:13,140
application system services and the microkernel. Now, the structure what

35
00:02:13,140 --> 00:02:18,294
it entails is that you need the microkernel to provide

36
00:02:18,294 --> 00:02:23,540
inter-process communication so that the applications

37
00:02:23,540 --> 00:02:28,680
can request system services by contacting the servers and

38
00:02:28,680 --> 00:02:32,940
the servers need to talk to one another as well. And in order

39
00:02:32,940 --> 00:02:34,770
for them to talk to one another

40
00:02:34,770 --> 00:02:37,510
they need inter-process communication as well. So

41
00:02:37,510 --> 00:02:42,220
what have we gained by the structure? What we have gained by the structure

42
00:02:42,220 --> 00:02:47,500
is extensibility. Because these OS services are implemented as service

43
00:02:47,500 --> 00:02:52,630
processes, we can have replicated server processes with

44
00:02:52,630 --> 00:02:58,710
different characteristics. For instance, this application may choose to use

45
00:02:58,710 --> 00:03:02,110
this particular file system. Another application may

46
00:03:02,110 --> 00:03:05,220
choose a different file system. No longer

47
00:03:05,220 --> 00:03:07,440
do we have that one size fits

48
00:03:07,440 --> 00:03:11,470
all characterization of the monolithic kernel. And this

49
00:03:11,470 --> 00:03:17,350
is the biggest draw for the microkernel based design that it is easy to extend

50
00:03:17,350 --> 00:03:20,010
the services that are provided with the

51
00:03:20,010 --> 00:03:23,910
operating system to customize the services depending on

52
00:03:23,910 --> 00:03:27,710
the needs of the application. This all sounds good, but is there a catch?
