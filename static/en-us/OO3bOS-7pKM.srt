1
00:00:00,120 --> 00:00:03,590
If you're displaying dynamic content
where you don't know the exact size it

2
00:00:03,590 --> 00:00:06,510
will be or
when handling different size devices,

3
00:00:06,510 --> 00:00:10,560
it can be useful to display
the image at a fixed aspect ratio.

4
00:00:10,560 --> 00:00:13,500
So you know how your design
will appear for your users.

5
00:00:13,500 --> 00:00:17,380
We've already covered using
scale type such as center crop,

6
00:00:17,380 --> 00:00:19,880
to make the content fit
within an image view.

7
00:00:19,880 --> 00:00:22,480
But how do we enforce
the size of the view itself?

8
00:00:22,480 --> 00:00:27,290
To do this, we can easily subclass image
view to enforce a given aspect ratio.

9
00:00:27,290 --> 00:00:31,807
Let's walk through an example of always
wanting our images to show with a 3:2

10
00:00:31,807 --> 00:00:33,090
aspect ratio.

11
00:00:33,090 --> 00:00:35,190
That is whatever width its given,

12
00:00:35,190 --> 00:00:38,020
will set its own height
to be two-thirds of this.

13
00:00:38,020 --> 00:00:42,420
Let's create a new class and
we're calling it 3:2 image view here.

14
00:00:42,420 --> 00:00:45,330
And will extend from ImageView itself.

15
00:00:45,330 --> 00:00:48,140
Now, we'll generate all of
the required constructors to

16
00:00:48,140 --> 00:00:51,040
handle create this view from code or
from XML.

17
00:00:51,040 --> 00:00:55,930
Now the key part,
let's override the onMeasure method.

18
00:00:55,930 --> 00:01:02,380
We'll unpack the width we're given,
and then calculate two-thirds of this.

19
00:01:02,380 --> 00:01:04,530
As the threeTwoHeight.

20
00:01:04,530 --> 00:01:08,080
We'll then say that our view's
height wants to be exactly

21
00:01:08,080 --> 00:01:10,400
that two-thirds of the width height.

22
00:01:10,400 --> 00:01:13,310
We then pass these onto
the superclass to handle the rest

23
00:01:13,310 --> 00:01:14,630
of the measurement class.

24
00:01:14,630 --> 00:01:19,070
To use our custom class, we use our
fully qualified name in the tag and

25
00:01:19,070 --> 00:01:23,160
follow the convention
setting 0dp as the height.

26
00:01:23,160 --> 00:01:26,533
As this declared value isn't used,
but has to be provided.

27
00:01:26,533 --> 00:01:30,840
And the view itself will then calculate
height later on when it measures itself.

28
00:01:30,840 --> 00:01:34,550
This is similar to how we used weights
in lesson one to fill the space in

29
00:01:34,550 --> 00:01:36,030
a linear layout.

30
00:01:36,030 --> 00:01:40,610
We set 0dp as the unused size because
the weight would fill it in later.

31
00:01:40,610 --> 00:01:42,940
We'll go into much more detail
on altering your lay out for

32
00:01:42,940 --> 00:01:44,990
different size devices in lesson five.
