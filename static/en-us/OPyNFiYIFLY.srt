1
00:00:00,140 --> 00:00:05,140
Trust in the trusted computing base is
going to come from a number of things

2
00:00:05,140 --> 00:00:07,000
we expect it to do.

3
00:00:07,000 --> 00:00:10,770
We talked about design principles for
secure systems.

4
00:00:10,770 --> 00:00:14,370
And this system is something
that everything relies on it.

5
00:00:14,370 --> 00:00:17,130
So it better be secure
to the degree possible.

6
00:00:17,130 --> 00:00:20,210
So it should be using some
of those design principles.

7
00:00:20,210 --> 00:00:25,170
So let's go back and review
a number of those design principles

8
00:00:25,170 --> 00:00:28,130
that we talked in general for
secure systems but

9
00:00:28,130 --> 00:00:31,800
we're going to see that they also
apply to the trusted computing base.

10
00:00:31,800 --> 00:00:34,150
One of the design principles
was least privilege.

11
00:00:34,150 --> 00:00:38,270
Any time we are executing, the idea is
to execute with the fewest possible

12
00:00:38,270 --> 00:00:42,300
privileges, and
the idea is that if something was wrong.

13
00:00:42,300 --> 00:00:46,310
So, remember trustworthy means
that a high likelihood that

14
00:00:46,310 --> 00:00:49,880
things go the way you want them to,
but there's no guarantee.

15
00:00:49,880 --> 00:00:51,700
There's no proof, as we said, so

16
00:00:51,700 --> 00:00:55,710
if something were to go wrong of
course we have damage containment and

17
00:00:55,710 --> 00:00:59,050
fewer things will be affected
because what can be affected,

18
00:00:59,050 --> 00:01:03,750
what resources can be abused is based on
what privileges you hold at the time.

19
00:01:03,750 --> 00:01:08,050
So holding as few as you need for
doing what you're doing at the time.

20
00:01:08,050 --> 00:01:12,110
You want to use that principle even when
you design the trusted computing base.

21
00:01:12,110 --> 00:01:13,860
Economy is the other thing.

22
00:01:13,860 --> 00:01:16,960
Economy is, we also said,
keep it simple.

23
00:01:16,960 --> 00:01:20,210
It's really more important
when it comes to trusted code.

24
00:01:20,210 --> 00:01:25,850
You want to keep it simple and as small
as possible the other design principle,

25
00:01:25,850 --> 00:01:28,920
we're going to look at a couple
of these, is open design.

26
00:01:28,920 --> 00:01:32,650
The idea is that trust is not going to
come because somebody tells you take my

27
00:01:32,650 --> 00:01:33,940
word for it.

28
00:01:33,940 --> 00:01:35,880
We're not going to have trust, or

29
00:01:35,880 --> 00:01:38,610
confidence, when security
is by obscurity.

30
00:01:38,610 --> 00:01:40,451
We don't know how something is done, but

31
00:01:40,451 --> 00:01:42,668
we basically have to take
someone's word for it.

32
00:01:42,668 --> 00:01:45,678
That's not a good way to design
a trusted computing system.

33
00:01:45,678 --> 00:01:49,876
You do want to have an open design so
security is because you understand

34
00:01:49,876 --> 00:01:54,780
exactly how that level of security
is being accomplished or achieved.

35
00:01:54,780 --> 00:02:00,040
We definitely want complete mediation,
and that means that every access,

36
00:02:00,040 --> 00:02:03,290
that one of the basic requirements for
a trusted computing base,

37
00:02:03,290 --> 00:02:07,840
that every access is checked,
any attempt to bypass the system,

38
00:02:07,840 --> 00:02:12,980
to go to a resource that needs to be
secured, course is going to prevented.

39
00:02:12,980 --> 00:02:17,250
So we want complete mediation,
if that's not there then of course

40
00:02:17,250 --> 00:02:20,310
you will have no trust in
the trusted computing base.

41
00:02:20,310 --> 00:02:23,265
We also talked about
other design principles.

42
00:02:23,265 --> 00:02:28,060
Fail-safe defaults is the default
that gives you safe behavior,

43
00:02:28,060 --> 00:02:31,700
so when it comes to access control,
the default should be denied.

44
00:02:31,700 --> 00:02:36,400
And finally ease of use or
psychological acceptability.

45
00:02:36,400 --> 00:02:40,270
Basically, we have to make the right
assumption about what users are able to

46
00:02:40,270 --> 00:02:42,210
do and what they're not able to do.

47
00:02:42,210 --> 00:02:46,880
If you make sort of assumptions
about users that are unreasonable.

48
00:02:46,880 --> 00:02:49,980
They're going to avoid security
that gets in their way.

49
00:02:49,980 --> 00:02:52,340
They're going to find ways
to work around it, and

50
00:02:52,340 --> 00:02:54,870
that's going to result in
a lower level of trust.

51
00:02:54,870 --> 00:02:58,390
I decided to sort of revisit
these design principles.

52
00:02:58,390 --> 00:03:02,860
One of the things we're talking about
here is the trusted computing base and

53
00:03:02,860 --> 00:03:04,190
where trust comes from.

54
00:03:04,190 --> 00:03:08,470
Well, if it's designed with
the design principles in mind

55
00:03:08,470 --> 00:03:10,510
the number of those that
we have discussed here.

56
00:03:10,510 --> 00:03:12,750
Of course,
that's a question you're going to ask.

57
00:03:12,750 --> 00:03:15,040
And if somebody answers in
the affirmative saying,

58
00:03:15,040 --> 00:03:17,810
yes, we follow those principles,
that's a good thing
