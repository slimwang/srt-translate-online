1
00:00:00,450 --> 00:00:03,390
Time to dive into how you can use
the Youdassi scripts to create

2
00:00:03,390 --> 00:00:06,510
a high performance ocean
complete with moving waves.

3
00:00:07,939 --> 00:00:11,150
For this,
we'll be taking a look at shaders.

4
00:00:11,150 --> 00:00:15,720
If you recall, a shader is code that
is used to create custom materials and

5
00:00:15,720 --> 00:00:16,985
runs on the GPU.

6
00:00:16,985 --> 00:00:22,030
We're going to try to modify the way
the ocean looks to change the scene from

7
00:00:22,030 --> 00:00:25,590
pleasant float to a tumultuous storm.

8
00:00:25,590 --> 00:00:29,690
If we stop the scene from playing
we'll see that the ocean disappears.

9
00:00:29,690 --> 00:00:33,390
This is because it's created
dynamically with the scene game object.

10
00:00:34,600 --> 00:00:37,680
Assigned to that script
is the ocean material.

11
00:00:37,680 --> 00:00:41,880
If we click on the Sea_Island material,
we'll reveal that with in the project.

12
00:00:43,070 --> 00:00:46,090
If we look at the top,
we'll see the name of our shader.

13
00:00:46,090 --> 00:00:49,310
Let's take a look at it with in
the shader folder, and open it up.

14
00:00:51,650 --> 00:00:56,180
As you can see,
the script is pretty complex and

15
00:00:56,180 --> 00:00:57,370
it can take a lot of time and

16
00:00:57,370 --> 00:01:01,490
deep understanding to be able to modify
and understand what exactly is going on.

17
00:01:02,600 --> 00:01:06,740
But, luckily for us most high quality
scripts will expose their important

18
00:01:06,740 --> 00:01:10,750
values publicly, which with shaders
is done using properties right here.

19
00:01:12,060 --> 00:01:13,890
This means that they will
appear in the inspector.

20
00:01:14,930 --> 00:01:17,350
Instead of picking apart
this intricate shader,

21
00:01:17,350 --> 00:01:20,520
let's think about our objective,
to make a sea stormy.

22
00:01:21,640 --> 00:01:24,869
And let's see if we can accomplish this
using the public values listed right

23
00:01:24,869 --> 00:01:25,180
here.

24
00:01:26,200 --> 00:01:29,350
Let's go back to Inspector,
and find our ocean material.

25
00:01:30,640 --> 00:01:33,730
Here again is the list of
properties we can change.

26
00:01:33,730 --> 00:01:36,930
But we want to see our effects live,
so let's start by running our scene.

27
00:01:38,100 --> 00:01:41,700
Now to edit our material, we need to
find it on the ocean game object.

28
00:01:42,910 --> 00:01:43,990
Pause the video here,

29
00:01:43,990 --> 00:01:47,410
to spend a few minutes playing with
the sliders to get a stormy appearance.

30
00:01:48,460 --> 00:01:52,270
The properties that are probably
most relevant, are the water color,

31
00:01:52,270 --> 00:01:57,330
the roughness, the refractive index,
and the wave height.

32
00:01:58,660 --> 00:02:03,000
Nice, we now have a bit more realistic
looking ocean, with values we can modify

33
00:02:03,000 --> 00:02:06,480
in the inspector to make
it feel the way we want.

34
00:02:06,480 --> 00:02:09,750
Let's move on to a script which uses
something called a flocking algorithm

35
00:02:09,750 --> 00:02:12,020
to create cool swarming visual effects.
