1
00:00:00,500 --> 00:00:02,719
Now we turn our attention to the Transport layer, which

2
00:00:02,719 --> 00:00:05,960
sits between the Network layer and the Application layer. The

3
00:00:05,960 --> 00:00:08,910
key contribution of this layer, is the notion of ports,

4
00:00:08,910 --> 00:00:12,380
which tells the OS which process the data is intended for.

5
00:00:12,380 --> 00:00:14,525
On a Linux machine, you can see this mapping using

6
00:00:14,525 --> 00:00:19,360
LSOF-I. Having multiple ports allows more than one application to

7
00:00:19,360 --> 00:00:23,020
receive data from the network at once, something called multiplex.

8
00:00:23,020 --> 00:00:25,500
Port numbers are 16 bits long, and many of them are

9
00:00:25,500 --> 00:00:28,770
reserved for special purposes. Port 80, for instance, is

10
00:00:28,770 --> 00:00:32,150
typically the one used for receiving HTTP requests, like a

11
00:00:32,150 --> 00:00:34,335
browser would send. In fact, we'll use this as an

12
00:00:34,335 --> 00:00:37,080
example. Let's say we're running Chrome, and that we visit

13
00:00:37,080 --> 00:00:40,490
the Udacity homepage. Then Chrome will ask the operating system

14
00:00:40,490 --> 00:00:42,760
for a port number that it can use, or it'll

15
00:00:42,760 --> 00:00:46,050
pick one that has been allocated already. Let's say the

16
00:00:46,050 --> 00:00:51,040
port number is 55804. It sends, then sends the request

17
00:00:51,040 --> 00:00:53,350
in a packet with a source port of 55804 and

18
00:00:53,350 --> 00:00:58,250
a destination port of 80. When the Udacity server responds,

19
00:00:58,250 --> 00:01:01,640
it will send back a packet whose destination port matches

20
00:01:01,640 --> 00:01:04,610
the one that we sent. That way, the OS will know

21
00:01:04,610 --> 00:01:06,710
to route the packet to Chrome, and not to some

22
00:01:06,710 --> 00:01:09,940
other program. It is important to realize that the transport

23
00:01:09,940 --> 00:01:12,290
layer is really only active at the end points at

24
00:01:12,290 --> 00:01:16,350
the route. The intermediate routers on the internet need only look

25
00:01:16,350 --> 00:01:18,890
at the IP address to know where to forward the

26
00:01:18,890 --> 00:01:22,560
packet to. So they never examine the port number. Control starts

27
00:01:22,560 --> 00:01:26,100
at the Application layer, moves through the Transport layer and

28
00:01:26,100 --> 00:01:28,400
the Network layer and the Link layer and the Physical layer.

29
00:01:28,400 --> 00:01:31,730
At the first node. Then through these intermediate steps, of

30
00:01:31,730 --> 00:01:34,570
course, we need to interpret the signal. Pull off any sort

31
00:01:34,570 --> 00:01:37,680
of ethernet frame, or the like. And then look at the

32
00:01:37,680 --> 00:01:41,690
IP packet to figure out where the packet should go next.

33
00:01:41,690 --> 00:01:45,920
We never need to look inside the IP packet at whatever comes in the

34
00:01:45,920 --> 00:01:49,310
transport layer. And then forward it and

35
00:01:49,310 --> 00:01:51,570
the same thing happens in the next node,

36
00:01:51,570 --> 00:01:55,620
and then only when we receive it do we need to. Unpack the transport

37
00:01:55,620 --> 00:01:58,140
layer. Route it to the correct application,

38
00:01:58,140 --> 00:02:00,030
and then let the application interpret the data.
