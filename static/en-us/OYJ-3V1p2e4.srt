1
00:00:00,180 --> 00:00:04,890
Now in a previous lesson, we looked at how AS path pre pending, can be used

2
00:00:04,890 --> 00:00:07,930
to control inbound traffic. As it turns out,

3
00:00:07,930 --> 00:00:10,240
longest prefix match, can also be used to

4
00:00:10,240 --> 00:00:17,040
control inbound traffic. Suppose, that ASA owns 10.1.0.0/16,

5
00:00:17,040 --> 00:00:20,220
and it might advertise that prefix Both of

6
00:00:20,220 --> 00:00:22,630
it's upstream links and that route might similarly

7
00:00:22,630 --> 00:00:25,220
be advertised further upstream. Now of course as

8
00:00:25,220 --> 00:00:27,660
we know from a previous lesson, given the

9
00:00:27,660 --> 00:00:31,450
advertisement of one prefix upstream, ASD is going to

10
00:00:31,450 --> 00:00:34,970
pick one best BGP route; along which to

11
00:00:34,970 --> 00:00:38,200
send traffic back to A. But let's suppose

12
00:00:38,200 --> 00:00:41,600
that ASA wanted to balance that traffic, across

13
00:00:41,600 --> 00:00:44,420
its incoming links. Well in that case, ASA

14
00:00:44,420 --> 00:00:47,260
could actually advertise routes for 2 more specific

15
00:00:47,260 --> 00:00:50,820
prefixes, effectively splitting the slash 16 in half,

16
00:00:50,820 --> 00:00:55,300
so in addition to advertising 10.1/16, across

17
00:00:55,300 --> 00:00:58,950
both links, ASA might advertise 10.1/17 on

18
00:00:58,950 --> 00:01:05,770
the top link and 10.1.128.0/17, the other half of the /16 on the bottom

19
00:01:05,770 --> 00:01:10,880
link. Now, if either link fails, the covering /16 will ensure that the prefix

20
00:01:10,880 --> 00:01:12,810
remains reachable by one of the two

21
00:01:12,810 --> 00:01:15,950
upstream links. But because longest prefix match.

22
00:01:15,950 --> 00:01:20,380
Wins the traffic for 10.1.128 would now traverse

23
00:01:20,380 --> 00:01:23,810
the bottom link, and the traffic for 10.1/17 would

24
00:01:23,810 --> 00:01:26,820
now traverse the top link, effectively sending traffic

25
00:01:26,820 --> 00:01:29,230
for half of the prefixes along the top path

26
00:01:29,230 --> 00:01:30,320
and traffic for the other half of the

27
00:01:30,320 --> 00:01:33,070
prefixes along the bottom path. Although we just explored

28
00:01:33,070 --> 00:01:37,400
a perfectly good reason to deaggregate a contiguous prefix,

29
00:01:37,400 --> 00:01:41,700
it turns out that sometimes autonomous systems may deaggregate

30
00:01:41,700 --> 00:01:44,990
larger prefixes unnecessarily. A report called

31
00:01:44,990 --> 00:01:47,830
the CIDR Report, which is released weekly,

32
00:01:47,830 --> 00:01:51,650
shows autonomous systems who are advertising IP

33
00:01:51,650 --> 00:01:55,279
prefixes. That, at least according to observation,

34
00:01:55,279 --> 00:01:59,790
are continuous and could be aggregated. For example, the top offender for the

35
00:01:59,790 --> 00:02:04,160
week of December 12th, 2013, was AS6389.

36
00:02:04,160 --> 00:02:07,760
This single autonomous system, is actually advertising

37
00:02:07,760 --> 00:02:14,680
more than 3,000 unique IP prefixes. The cider report analysis, suggests that.

38
00:02:14,680 --> 00:02:17,950
With appropriate aggregation, this autonomous system

39
00:02:17,950 --> 00:02:22,180
could instead advertise only 56, unique, IP

40
00:02:22,180 --> 00:02:26,580
prefixes. Now this might be overly optimistic. As we just explored, there

41
00:02:26,580 --> 00:02:29,620
are perfectly good reasons, to deaggregate

42
00:02:29,620 --> 00:02:33,080
a contiguous IP prefix, into multiple smaller

43
00:02:33,080 --> 00:02:37,610
contiguous IP prefixes. But nonetheless, the report shows,

44
00:02:37,610 --> 00:02:40,670
that there are probably a lot more IP prefixes,

45
00:02:40,670 --> 00:02:43,530
in the Global Internet Routing table, than there

46
00:02:43,530 --> 00:02:47,600
could be, if AS's took full advantage of aggregation.
