1
00:00:00,630 --> 00:00:03,421
Sometimes you don't have to implement an algorithm at all to reuse code. The

2
00:00:03,421 --> 00:00:08,605
Comparable Interface is a very common interface. And implementing comparable

3
00:00:08,605 --> 00:00:12,520
allows you to use handy pre-implemented algorithms for tasks like sorting.

4
00:00:12,520 --> 00:00:17,393
Here's the documentation for Comparable. It's an interface that has exactly one

5
00:00:17,393 --> 00:00:21,760
method, the compareTo method. Classes that implement the comparable interface

6
00:00:21,760 --> 00:00:26,065
promise that they will implement the compareTo method. When you call

7
00:00:26,065 --> 00:00:32,280
a.compareTo(b), it returns a negative number if a comes before b. It returns a

8
00:00:32,280 --> 00:00:36,497
positive number if a comes after b. And it returns zero is a and b are exactly

9
00:00:36,497 --> 00:00:41,335
equal. Once you implement the compareTo method, anyone coding can use it to

10
00:00:41,335 --> 00:00:46,563
figure out what the natural order of objects in your class is.
