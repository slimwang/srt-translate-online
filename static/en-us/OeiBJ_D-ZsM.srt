1
00:00:00,140 --> 00:00:02,180
It's more likely that we would extract all the

2
00:00:02,180 --> 00:00:05,200
author data from documents such as these. How would we

3
00:00:05,200 --> 00:00:09,610
do that? Assuming this document was illustrative of the entire

4
00:00:09,610 --> 00:00:12,660
biomed central schema, write a program that will use the

5
00:00:12,660 --> 00:00:15,870
element tree module to extract all the data for

6
00:00:15,870 --> 00:00:18,780
a given research article. The data for each author should

7
00:00:18,780 --> 00:00:22,320
be stored in a python dictionary, and all the dictionaries

8
00:00:22,320 --> 00:00:25,190
should be stored in a list. By all the author

9
00:00:25,190 --> 00:00:28,630
data, I mean all of the values stored here for each

10
00:00:28,630 --> 00:00:32,710
one of the author tags in the author group that is part

11
00:00:32,710 --> 00:00:35,880
of the front matter section. Now this is a lot like what

12
00:00:35,880 --> 00:00:38,940
we did with CSV files, building python dictionaries to represent the data

13
00:00:38,940 --> 00:00:42,050
we're extracting from, in this case XML files. Now, one thing to

14
00:00:42,050 --> 00:00:44,070
keep in mind as you're doing this is that this is a

15
00:00:44,070 --> 00:00:47,360
lot like what we did with CSV data, building python dictionaries to

16
00:00:47,360 --> 00:00:51,230
represent the data we are extracting from. In this case XML files.

17
00:00:51,230 --> 00:00:54,400
One final point here is that you may ignore the

18
00:00:54,400 --> 00:00:57,610
INSR tags, simply leave them out of your data processing
