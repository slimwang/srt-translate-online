1
00:00:00,000 --> 00:00:03,000
[Narrator] The answer is 5.

2
00:00:03,000 --> 00:00:06,000
Let's step through each statement to see why.

3
00:00:06,000 --> 00:00:09,000
The first statement creates a new list.

4
00:00:09,000 --> 00:00:15,000
It's elements are 1 and 2, and makes the variable P refer to that list.

5
00:00:15,000 --> 00:00:20,000
The next statement evokes append on P, passing in the value 3.

6
00:00:20,000 --> 00:00:23,000
Append adds an element to the end of the list,

7
00:00:23,000 --> 00:00:30,000
so after this the value that P refers to will include 1 extra element with the value 3.

8
00:00:30,000 --> 00:00:34,000
The next statement uses the plus operator.

9
00:00:34,000 --> 00:00:37,000
The operands to the plus are P, which we already have,

10
00:00:37,000 --> 00:00:40,000
and the new list containing the elements 4 and 5,

11
00:00:40,000 --> 00:00:45,000
and remember what happens with plus; it doesn't mutate any of the inputs.

12
00:00:45,000 --> 00:00:50,000
It creates a new list that consists of all the elements concatenated together.

13
00:00:50,000 --> 00:00:52,000
That will be this 5-element list.

14
00:00:52,000 --> 00:00:58,000
We assign that to the variable P, so now P will no longer refer to the list 1, 2, 3.

15
00:00:58,000 --> 00:01:01,000
It will refer to this new list that has 5 elements,

16
00:01:01,000 --> 00:01:04,000
and at the end of this, the len of P is 5, since there are 5 elements in P.
