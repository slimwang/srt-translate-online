1
00:00:00,940 --> 00:00:03,440
When you start talking about
Version Control Systems.

2
00:00:03,440 --> 00:00:05,450
There are a lot of options.

3
00:00:05,450 --> 00:00:09,970
You could be using Git, Mercurial,
or even older ones like Subversion.

4
00:00:09,970 --> 00:00:13,930
There's also a bunch of proprietary
enterprise systems, all of that said,

5
00:00:13,930 --> 00:00:18,120
most of the open source dev apps tools
easily integrate with get repositories.

6
00:00:18,120 --> 00:00:21,620
And they also work well with GitHub, and
so that's what we're going to use for

7
00:00:21,620 --> 00:00:22,790
this course.

8
00:00:22,790 --> 00:00:25,730
Beyond deciding what Version
Control System you're going to use,

9
00:00:25,730 --> 00:00:29,230
you also have to decide on the strategy
for using version control.

10
00:00:29,230 --> 00:00:31,100
Depending on the size of the project and

11
00:00:31,100 --> 00:00:33,810
the team,
different strategies can be used.

12
00:00:33,810 --> 00:00:36,900
The most important thing is that
everybody agrees to a strategy and

13
00:00:36,900 --> 00:00:38,240
sticks to it.

14
00:00:38,240 --> 00:00:40,990
In general,
there are three major strategies.

15
00:00:40,990 --> 00:00:45,860
Those are Release Branching,
Feature Branching, and Task Branching.

16
00:00:45,860 --> 00:00:47,790
For each of these version
control strategies,

17
00:00:47,790 --> 00:00:51,070
you're going to have some space for
developers to work on new code.

18
00:00:51,070 --> 00:00:54,340
And that new code is eventually
going to be merged back into one or

19
00:00:54,340 --> 00:00:56,060
more main branches.

20
00:00:56,060 --> 00:00:59,920
This merging or integrating into the
main branch is generally what triggers

21
00:00:59,920 --> 00:01:03,160
the rest of the continuous integration,
continuous delivery process.
