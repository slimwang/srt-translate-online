1
00:00:00,400 --> 00:00:03,090
So some pros and cons of the Hough transform.

2
00:00:03,090 --> 00:00:07,160
All the points are processed independently, so it's okay if, you know,

3
00:00:07,160 --> 00:00:10,840
part of my stuff is occluded because each point just gets to vote.

4
00:00:10,840 --> 00:00:14,520
There's a modest amount of robustness with respect to noise so,

5
00:00:14,520 --> 00:00:16,580
because the noise points, as we said before, there are,

6
00:00:16,580 --> 00:00:20,100
they're unlikely to sort of collude to vote for the wrong thing.

7
00:00:20,100 --> 00:00:23,460
And you can use it to find multiple instances of the object

8
00:00:23,460 --> 00:00:25,100
within the single image.

9
00:00:25,100 --> 00:00:26,620
There are some downsides.

10
00:00:26,620 --> 00:00:31,130
The biggest challenge is that the complexity goes up

11
00:00:31,130 --> 00:00:34,310
exponentially with the number of model parameters.

12
00:00:34,310 --> 00:00:37,470
So you're never going to use this if you've got, like, seven model parameters,

13
00:00:37,470 --> 00:00:40,540
or maybe even four, that you're, that you're trying to explore.

14
00:00:40,540 --> 00:00:42,170
You'll have to use other methods.

15
00:00:42,170 --> 00:00:46,030
And the other thing is if you have sort of non-target shapes, suppose instead of

16
00:00:46,030 --> 00:00:49,990
circles, you actually had slightly squashed ellipses, then the voting can

17
00:00:49,990 --> 00:00:52,790
break down, and you have to be careful in terms of how you handle that.

18
00:00:52,790 --> 00:00:57,440
And as we said before, the quantization is hard to pick of good grid size and

19
00:00:57,440 --> 00:00:59,090
does require experimentation.
