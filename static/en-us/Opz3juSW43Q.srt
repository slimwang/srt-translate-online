1
00:00:00,325 --> 00:00:03,420
Okay, so thus far, we have a button with an image of a microphone.

2
00:00:03,420 --> 00:00:06,140
But when I click on it, nothing happens.

3
00:00:06,140 --> 00:00:07,800
So let's change that.

4
00:00:07,800 --> 00:00:11,180
Notice that we are currently in the standard editor.

5
00:00:11,180 --> 00:00:12,760
How do I know that, you ask?

6
00:00:12,760 --> 00:00:17,610
Well, because this button, which is labeled Standard editor, is selected.

7
00:00:17,610 --> 00:00:21,360
The button right next to it is called the Assistant editor.

8
00:00:21,360 --> 00:00:26,130
If I click on it, Xcode continues to show me the storyboard, but in addition to

9
00:00:26,130 --> 00:00:30,420
that, it shows me another file which is logically related to the storyboard.

10
00:00:30,420 --> 00:00:33,910
This file is called ViewController.swift.

11
00:00:33,910 --> 00:00:36,969
Let me slide out the Navigator so we can see this a little bit better.

12
00:00:38,260 --> 00:00:39,300
There.

13
00:00:39,300 --> 00:00:44,330
Now, the way these two are related is that when we click on the record button,

14
00:00:44,330 --> 00:00:46,260
some code will get executed.

15
00:00:46,260 --> 00:00:50,480
And that code will go right here in the ViewController.swift.

16
00:00:50,480 --> 00:00:51,455
By the way, this file,

17
00:00:51,455 --> 00:00:56,680
ViewController.swift, was created by Xcode when we made our project.

18
00:00:56,680 --> 00:01:01,380
Now, I can almost hear some of you say, how are these two files related?

19
00:01:01,380 --> 00:01:02,440
Here's how.

20
00:01:02,440 --> 00:01:05,860
Let me select this phone frame in the storyboard such that there is

21
00:01:05,860 --> 00:01:07,640
a blue outline around it.

22
00:01:07,640 --> 00:01:10,860
And now, if I slide out the utility area and

23
00:01:10,860 --> 00:01:15,910
then click on this little icon right here, which is labeled Identity Inspector,

24
00:01:15,910 --> 00:01:21,870
I can see that this frame is connected to a class called ViewController.

25
00:01:21,870 --> 00:01:27,280
By the way, all of this work was done by Xcode where we actually made our app.

26
00:01:27,280 --> 00:01:30,130
Okay, let me slide out the utility area for a bit.

27
00:01:31,300 --> 00:01:36,170
All right, let's scan the code inside this file, ViewController.swift.

28
00:01:36,170 --> 00:01:39,710
Now, it's okay if you do not understand everything in this file.

29
00:01:39,710 --> 00:01:43,070
For now, I just want to highlight that the name of this file

30
00:01:43,070 --> 00:01:45,750
is the exact same as the name of the class inside the file.

31
00:01:46,810 --> 00:01:52,840
And this class has two functions, viewDidLoad and didReceiveMemoryWarning.

32
00:01:52,840 --> 00:01:56,000
Now, these are functions that allow us to manage or

33
00:01:56,000 --> 00:01:58,300
control certain events with the app.

34
00:01:58,300 --> 00:02:01,720
For instance, if we wanted our app to do something special in case our

35
00:02:01,720 --> 00:02:05,210
app received a memory warning, that code would go right in here.

36
00:02:06,280 --> 00:02:07,070
All right.

37
00:02:07,070 --> 00:02:10,340
Now I'm going to write code that will execute when we hit this button.

38
00:02:11,680 --> 00:02:17,010
I will press and hold Control down on my keyboard, click on the button, and

39
00:02:17,010 --> 00:02:19,040
then drag towards my code.

40
00:02:19,040 --> 00:02:20,420
And once I'm there, I'll let go.

41
00:02:21,980 --> 00:02:24,670
You will be presented with a pop-up that will try and

42
00:02:24,670 --> 00:02:28,200
make a connection between the storyboard and this code.

43
00:02:28,200 --> 00:02:32,090
And because we are trying to do something when we click on this button,

44
00:02:32,090 --> 00:02:34,430
the type of this connection is Action.

45
00:02:35,710 --> 00:02:38,795
Let's call the name of this connection recordAudio.

46
00:02:40,000 --> 00:02:43,200
The type of the button is UIButton.

47
00:02:43,200 --> 00:02:46,000
UI stands for user interface.

48
00:02:46,000 --> 00:02:49,440
Under Event, I will select Touch Up Inside.

49
00:02:49,440 --> 00:02:52,540
What that means is that this event will be triggered when my

50
00:02:52,540 --> 00:02:56,842
finger is within the bounds of the button, and then I'll hit Connect.

51
00:02:56,842 --> 00:03:01,500
All right, I now have a skeleton function which will be called when I

52
00:03:01,500 --> 00:03:03,110
hit the record button.

53
00:03:03,110 --> 00:03:04,810
Let's examine this function.

54
00:03:04,810 --> 00:03:08,330
Its name is recordAudio, which seems about right.

55
00:03:08,330 --> 00:03:10,870
Also, the center of this action, or

56
00:03:10,870 --> 00:03:15,920
the thing that actually triggers this function, is our UI button.

57
00:03:15,920 --> 00:03:20,380
We also see something new, something called IBAction.

58
00:03:20,380 --> 00:03:23,210
IB stands for interface builder, and

59
00:03:23,210 --> 00:03:27,150
this thing tells developers that this is not an ordinary function, but

60
00:03:27,150 --> 00:03:31,610
is instead linked to the storyboard or the interface builder somehow.

61
00:03:31,610 --> 00:03:34,479
Okay, so I want to do two things when this function is called.

62
00:03:35,550 --> 00:03:42,370
The first is that I want to show some text that says, recording in progress.

63
00:03:42,370 --> 00:03:47,560
And then the other thing I want to do is actually record the user's voice.

64
00:03:47,560 --> 00:03:50,900
By the way, when you start to add TODOs in this way,

65
00:03:50,900 --> 00:03:55,170
they start to show up really clearly in this drop-down at the top.

66
00:03:55,170 --> 00:03:58,270
This way, you can easily keep track of the things you need to do.

67
00:03:58,270 --> 00:04:01,830
For now, I'm going to add a print statement to this function and

68
00:04:01,830 --> 00:04:05,410
see if this function is in fact executed when I click on this button.

69
00:04:06,540 --> 00:04:08,220
I'm going to run this project.

70
00:04:08,220 --> 00:04:11,600
Now when I click on the button, I will see the output of

71
00:04:11,600 --> 00:04:14,850
the print statement in the debug area at the bottom of Xcode.

72
00:04:14,850 --> 00:04:16,290
Let me do that one more time.

73
00:04:16,290 --> 00:04:17,510
There it is.

74
00:04:17,510 --> 00:04:22,460
All right, I'm going to go back to my Xcode, slide out the debug area from here,

75
00:04:24,220 --> 00:04:28,100
and the next thing I'm going to do is show some text that reads,

76
00:04:28,100 --> 00:04:29,280
recording in progress.
