1
00:00:00,000 --> 00:00:02,153
When we first defined our tables,

2
00:00:02,153 --> 00:00:05,275
we defined the relationship between them
in terms of constraints.

3
00:00:05,995 --> 00:00:08,029
Now we are going to implement
that relationship

4
00:00:08,029 --> 00:00:09,910
into our query using a join.

5
00:00:10,860 --> 00:00:13,280
This join will allow us
to query the weather table

6
00:00:13,280 --> 00:00:16,560
for values from
a specific location setting.

7
00:00:16,720 --> 00:00:21,290
We'll start by adding
a SQL ITE query builder class variable

8
00:00:21,290 --> 00:00:23,060
at the top of WeatherProvider.

9
00:00:23,470 --> 00:00:25,830
We'll initialize the SQL ITE query builder

10
00:00:25,830 --> 00:00:27,210
in the static constructor for the class,

11
00:00:27,990 --> 00:00:30,500
describing the join between both tables.

12
00:00:30,710 --> 00:00:35,030
Note, since both tables
have a column named _ID,

13
00:00:35,450 --> 00:00:37,860
we must explicitly use the TABLE_NAME

14
00:00:37,860 --> 00:00:41,600
in order to disambiguate which _ID
we are talking about in the join.

15
00:00:42,420 --> 00:00:44,390
Then we can define the query.

16
00:00:44,660 --> 00:00:48,200
The query is to find using 
the question mark replacement syntax.

17
00:00:48,850 --> 00:00:52,440
These question marks will be replaced
by the query parameters.

18
00:00:52,790 --> 00:00:56,010
Since we allow people to specify
the start date in the URI,

19
00:00:56,380 --> 00:00:58,460
we're also going to add
a second selection

20
00:00:58,460 --> 00:01:01,850
which includes checking to see
whether DATETEXT

21
00:01:01,850 --> 00:01:04,370
is greater than or equal to our parameter.

22
00:01:04,370 --> 00:01:07,320
Next, we'll add a method
to get the weather by location entry,

23
00:01:07,320 --> 00:01:09,090
using the same query builder.

24
00:01:09,090 --> 00:01:11,970
Note, that we fetch
the parameters from our URI.

25
00:01:13,010 --> 00:01:16,490
And build a string array,
so they can be substituted into our query.

26
00:01:16,490 --> 00:01:19,470
Note that if a URI
does not contain a start date,

27
00:01:19,470 --> 00:01:21,913
we actually use a different selection.

28
00:01:22,306 --> 00:01:23,850
Finally, we add the function

29
00:01:23,850 --> 00:01:26,440
into the query routine
of our content provider.
