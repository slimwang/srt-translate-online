1
00:00:00,270 --> 00:00:05,500
So once again recapping what we said. The sources of RPC latency are

2
00:00:05,500 --> 00:00:10,557
the following. Marshaling and data copying. Context switches,

3
00:00:10,557 --> 00:00:15,340
both at the client side and the server side. Similarly marshaling and

4
00:00:15,340 --> 00:00:17,540
data copying also happens both in the client

5
00:00:17,540 --> 00:00:20,540
side and the server side. And the actual protocol

6
00:00:20,540 --> 00:00:23,160
processing in order to send the packet on

7
00:00:23,160 --> 00:00:25,290
the wire. These are all the things that are

8
00:00:25,290 --> 00:00:28,650
happening in software. Those are the things that

9
00:00:28,650 --> 00:00:31,290
as OS designers, we have a chance to

10
00:00:31,290 --> 00:00:34,180
do something about. And what we saw were

11
00:00:34,180 --> 00:00:36,300
techniques that we can employ for each one of

12
00:00:36,300 --> 00:00:39,080
those, reduce the number of copies, reduce the

13
00:00:39,080 --> 00:00:41,990
number of context switches, and make the protocol

14
00:00:41,990 --> 00:00:45,390
processing lean and mean so that the latency

15
00:00:45,390 --> 00:00:50,700
involved in RPC is reduced to as minimum as

16
00:00:50,700 --> 00:00:53,404
possible from the software side. And we are going

17
00:00:53,404 --> 00:00:56,400
to take whatever the hardware gives us. If the

18
00:00:56,400 --> 00:00:59,650
hardware gives us an ability to, to do DMA

19
00:00:59,650 --> 00:01:02,470
from the client buffer, we'll use that but if it

20
00:01:02,470 --> 00:01:05,129
doesn't, then we have to anchor that. So that's

21
00:01:05,129 --> 00:01:08,260
what we are seeing here. As the opportunities for

22
00:01:08,260 --> 00:01:12,600
reducing the total latency in going from the client

23
00:01:12,600 --> 00:01:15,240
to the server and back to the client in RPC.
