1
00:00:00,000 --> 00:00:05,280
It's actually a wide open discussion whether randomization is actually helpful

2
00:00:05,280 --> 00:00:08,630
because with considerable analysis many randomized algorithms

3
00:00:08,630 --> 00:00:13,020
can actually be turned into deterministic algorithms by using a process

4
00:00:13,020 --> 00:00:18,180
called derandomization, and derandomization usually keeps fundamental properties

5
00:00:18,180 --> 00:00:21,570
such as polynomial running time, all the base of the exponent.

6
00:00:21,570 --> 00:00:24,790
Randomized algorithms therefore might be a bit faster

7
00:00:24,790 --> 00:00:29,570
but it's unclear whether this is due to luck if you will or lack of thinking.

8
00:00:29,570 --> 00:00:34,080
So, if you were to pit these two against each other, randomization versus determinism,

9
00:00:34,080 --> 00:00:36,610
it's not really clear who would win or if it's a draw.

10
00:00:36,610 --> 00:00:41,590
So to conclude our exploration of randomization, what might be some reasons that randomization

11
00:00:41,590 --> 00:00:45,550
is actually at least a bit more powerful than determinism?

12
00:00:45,550 --> 00:00:48,930
Is it that randomized algorithms are in some way harder to trick

13
00:00:48,930 --> 00:00:52,990
into a worst case behavior as compared to determinism

14
00:00:52,990 --> 00:00:57,010
and after all we're analyzing all of the algorithms using worst case analysis.

15
00:00:57,010 --> 00:01:02,460
Is it that randomized algorithm can usually be easier to analyze than deterministic algorithms

16
00:01:02,460 --> 00:01:05,910
or is it that randomized algorithms actually explore solutions

17
00:01:05,910 --> 99:59:59,999
that their deterministic counterparts could miss.
