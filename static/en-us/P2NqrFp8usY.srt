1
00:00:00,420 --> 00:00:02,990
Consider now the data
that we're going to use.

2
00:00:02,990 --> 00:00:06,585
We're going to have features that
we've computed, these are things like

3
00:00:06,585 --> 00:00:11,630
Bollinger bands and momentum and
price change and things like that.

4
00:00:11,630 --> 00:00:18,200
We're going to use these features to try
and predict prices or price changes.

5
00:00:18,200 --> 00:00:22,080
So this is our X data, and
if we've got multiple features,

6
00:00:22,080 --> 00:00:24,460
we've got multiple dimensions in X.

7
00:00:24,460 --> 00:00:30,590
So this might be X1, X2, X3, and so on.

8
00:00:30,590 --> 00:00:34,660
And this is our Y data,
which we're trying to predict.

9
00:00:34,660 --> 00:00:38,460
In order to evaluate our learning
algorithms in a scientific manner

10
00:00:38,460 --> 00:00:43,040
we need to split this data
into at least two sections.

11
00:00:43,040 --> 00:00:46,160
A training section and
a testing section.

12
00:00:46,160 --> 00:00:49,810
If we trained over the same
data that we tested over,

13
00:00:49,810 --> 00:00:53,310
the results would be suspicious
because we should obviously be able

14
00:00:53,310 --> 00:00:57,640
to do very well if we test over
the same data we trained on.

15
00:00:57,640 --> 00:01:00,400
This procedure of separating testing and

16
00:01:00,400 --> 00:01:05,120
training data from one another
is called out of sample testing.

17
00:01:05,120 --> 00:01:08,450
This is a very important and
essential technique.

18
00:01:08,450 --> 00:01:13,220
We'll call the X data that we use for
training, Xtrain and

19
00:01:13,220 --> 00:01:16,750
the Y data that we use for
training, Ytrain.

20
00:01:16,750 --> 00:01:22,380
Similarly, the data we'll test
on will be split into X and

21
00:01:22,380 --> 00:01:24,980
Y sections, Xtest and Ytest.

22
00:01:24,980 --> 00:01:29,051
So the general idea here is that
we'll take our Xtrain data and

23
00:01:29,051 --> 00:01:33,831
our Ytrain data, run that through
our machine learning algorithm which

24
00:01:33,831 --> 00:01:37,960
might be linear regression or
KNN to generate a model.

25
00:01:37,960 --> 00:01:43,760
We can then test the accuracy
of that model using this data.

26
00:01:43,760 --> 00:01:50,460
So, the input to the model is Xtest,
so we plug that X data into the model,

27
00:01:50,460 --> 00:01:54,830
and out comes something, some kind of Y.

28
00:01:54,830 --> 00:02:01,700
And the question is, is that Y equal to
this Y which we know is ground truth.

29
00:02:02,770 --> 00:02:07,000
The more closely the model
outputs a Y that reflects

30
00:02:07,000 --> 00:02:11,550
this Xtest data,
the more accurate the model is.

31
00:02:11,550 --> 00:02:15,110
Something that I didn't mention,
is that in this class,

32
00:02:15,110 --> 00:02:17,800
our data is time oriented.

33
00:02:17,800 --> 00:02:21,160
So, as you move downward,
we're going forward in time.

34
00:02:22,200 --> 00:02:26,370
We typically split the data
up according to time.

35
00:02:26,370 --> 00:02:31,480
We train our model on older data and
test it on newer data.

36
00:02:31,480 --> 00:02:34,530
It's generally frowned
upon to do the reverse.

37
00:02:34,530 --> 00:02:37,260
You might argue, well this
data's different than that data.

38
00:02:37,260 --> 00:02:39,080
It's still out of sample.

39
00:02:39,080 --> 00:02:44,920
But there are certain look-ahead
biases that can occur

40
00:02:44,920 --> 00:02:49,380
if you were to train on later data and
test on earlier data.
