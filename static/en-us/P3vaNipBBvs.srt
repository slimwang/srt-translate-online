1
00:00:00,550 --> 00:00:05,110
The first principle of knowledge based AI, as we have discussed it in CS7637,

2
00:00:05,110 --> 00:00:10,540
is that AI agents use heuristics to find solutions that are good enough, but

3
00:00:10,540 --> 00:00:15,020
not necessarily optimal. Some schools of AI put a lot of emphasis on

4
00:00:15,020 --> 00:00:19,350
finding the optimal solution to every problem. In knowledge based AI,

5
00:00:19,350 --> 00:00:22,380
we consider agents that find solutions that are good enough.

6
00:00:22,380 --> 00:00:26,760
Herbert Simon called this satisficing. The reason for

7
00:00:26,760 --> 00:00:30,415
finding solutions that are only good enough is because of the trade off between

8
00:00:30,415 --> 00:00:34,820
computational efficiency on one hand and optimality of solutions on the other.

9
00:00:34,820 --> 00:00:37,775
We can find optimal solutions, but that comes with the cost of

10
00:00:37,775 --> 00:00:42,990
computational efficiency. Recall one of the conundrums of AI. AI agents

11
00:00:42,990 --> 00:00:47,520
are with limited resources, bounded rationality, limited processing power,

12
00:00:47,520 --> 00:00:52,670
limited memory size. Yet, most intrusting problems are impractical. How can

13
00:00:52,670 --> 00:00:57,720
we get AI agents to solve impractical problems with limited rationality and yet

14
00:00:57,720 --> 00:01:02,230
give nearly a ten performance? We can get AI agents to do that if we can

15
00:01:02,230 --> 00:01:05,510
focus on finding solutions that are good enough, but not necessarily optimum.

16
00:01:06,530 --> 00:01:10,450
Most of the time you and I as human agents do not find optimum solutions.

17
00:01:10,450 --> 00:01:13,040
The plan you may have to make dinner for

18
00:01:13,040 --> 00:01:17,090
yourself tonight is not necessarily optimum, it's just good enough.

19
00:01:17,090 --> 00:01:20,760
The plan that you have to go from your house to your office is not

20
00:01:20,760 --> 00:01:24,510
necessary optimal, it's just good enough. The plan that you have to walk from

21
00:01:24,510 --> 00:01:29,370
your car to your office is not necessary optimal, it's just good enough.

22
00:01:29,370 --> 00:01:33,170
Further, AI agents use heuristics to find solutions that are good enough.

23
00:01:33,170 --> 00:01:37,660
They do not do an exhaustive search, even the exhaustive search might yield

24
00:01:37,660 --> 00:01:42,000
more optimal solutions because exhaustive search is computationally costly.

25
00:01:42,000 --> 00:01:46,040
We came across this notion of heuristic search several times in this course.

26
00:01:46,040 --> 00:01:49,640
Once place where we discussed this in some detail, was in incremental concept

27
00:01:49,640 --> 00:01:55,150
learning. Given a current concept definition and a negative example, we arrive

28
00:01:55,150 --> 00:01:59,762
at a new concept definition by using heuristics like require-link heuristic.

29
00:01:59,762 --> 00:02:04,230
The require-link heuristic adds the must clause to this support link

30
00:02:04,230 --> 00:02:09,110
between these two bricks. Mean-sense analysis was a heuristic method. It said

31
00:02:09,110 --> 00:02:13,950
that given the current position and the goal position, find the differences and

32
00:02:13,950 --> 00:02:18,080
then select an operator that will reduce the difference. Because mean-sense

33
00:02:18,080 --> 00:02:21,500
analysis was a heuristic method sometimes it ran into problems and

34
00:02:21,500 --> 00:02:25,150
did not follow guarantees of optimality. But when it worked,

35
00:02:25,150 --> 00:02:28,976
it was very efficient. Another case where we explicitly made use of heuristic

36
00:02:28,976 --> 00:02:32,930
laws in the generate interest method. Here we had a heuristic which said,

37
00:02:32,930 --> 00:02:36,570
do not generate a state that duplicates a previously generated state

38
00:02:36,570 --> 00:02:40,215
which made the method more efficient. Does the focus of knowledge based

39
00:02:40,215 --> 00:02:44,270
AI agents is a near real time performance? They're addressing computational

40
00:02:44,270 --> 00:02:49,360
intractable problems with bounded resources. And yet being able to solve a very

41
00:02:49,360 --> 00:02:54,700
large class of problems in robust intelligence and flexible intelligence. And

42
00:02:54,700 --> 00:02:58,790
that happens not by finding optimal solutions to a narrow class of problems, but

43
00:02:58,790 --> 00:03:02,890
by using heuristics to find solutions that are good enough to very large classes

44
00:03:02,890 --> 00:03:07,600
of problems. This principle comes very much from theories of human cognition.

45
00:03:07,600 --> 00:03:12,040
As I mentioned earlier, humans do not normally find optimal solutions for

46
00:03:12,040 --> 00:03:15,870
every problem they face. However, we do manage to find solutions that

47
00:03:15,870 --> 00:03:19,650
are good enough, and we do so in near real time, and that's where the power lies
