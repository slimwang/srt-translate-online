1
00:00:00,280 --> 00:00:04,140
A key takeaway from life cycles is that
your application runs until Android

2
00:00:04,140 --> 00:00:06,950
needs to free resources or
something else.

3
00:00:06,950 --> 00:00:11,310
That means, it's best if we design
Sunshine to continue to work well even

4
00:00:11,310 --> 00:00:15,600
if the operating system has to close us
and the app no longer has weather data.

5
00:00:16,630 --> 00:00:20,250
One might ask, this is the error
of the connected cloud.

6
00:00:20,250 --> 00:00:23,530
Why don't we just always
fetch the weather on demand?

7
00:00:23,530 --> 00:00:26,650
Do we really need to worry about
saving anything on the device?

8
00:00:27,740 --> 00:00:31,180
Well, first,
user experience is important.

9
00:00:31,180 --> 00:00:34,880
When Sunshine is launched, we want our
users to be immediately greeted with up

10
00:00:34,880 --> 00:00:39,040
to date hot off the API weather
information and not a blank screen.

11
00:00:39,040 --> 00:00:42,850
The faster people can use an app,
the more it will be used.

12
00:00:42,850 --> 00:00:47,150
For something like weather, people want
the details immediately available.

13
00:00:47,150 --> 00:00:52,280
Second, using any radio is detrimental
to the battery life of the device,

14
00:00:52,280 --> 00:00:54,640
especially the cellular radio.

15
00:00:54,640 --> 00:00:57,800
Storing the weather data rather
than fetching it each time saves

16
00:00:57,800 --> 00:00:58,920
battery life.

17
00:00:58,920 --> 00:01:01,190
And that leads to happier users.

18
00:01:01,190 --> 00:01:04,670
Third, there are many users
on metered data plans or

19
00:01:04,670 --> 00:01:07,770
users may be roaming when
they want to use Sunshine.

20
00:01:07,770 --> 00:01:11,148
All those unnecessary
data fetches can add up.

21
00:01:11,148 --> 00:01:14,620
Fourth, if you're running a web
service for your application,

22
00:01:14,620 --> 00:01:19,070
you'll be highly motivated to reduce
the server load and network bandwidth.

23
00:01:19,070 --> 00:01:22,040
Fifth, there are still
lots of places that don't

24
00:01:22,040 --> 00:01:24,820
have a network connection
available constantly.

25
00:01:24,820 --> 00:01:28,878
One of the prime advantages of having a
mobile app is being resistant to bad or

26
00:01:28,878 --> 00:01:31,240
non-existent network conditions.

27
00:01:31,240 --> 00:01:36,690
Sixth, and finally, you never know
where a user will want to use your app.

28
00:01:36,690 --> 00:01:41,470
Although our weather API currently
doesn't support outer space locations.

29
00:01:41,470 --> 00:01:45,834
Being smart about the way we use system
resources is key to making the Sunshine

30
00:01:45,834 --> 00:01:48,080
a good Android citizen.

31
00:01:48,080 --> 00:01:52,321
As conscientious developers, we strive
to make all of our apps adhere to these

32
00:01:52,321 --> 00:01:55,010
principles by minimizing
network activity and

33
00:01:55,010 --> 00:01:59,660
working seamlessly between offline and
online states.

34
00:01:59,660 --> 00:02:03,520
We persist data in Sunshine to make
it both a better experience for

35
00:02:03,520 --> 00:02:07,550
users, while making it use less
network and battery resources.
