1
00:00:00,500 --> 00:00:03,510
What about all the different
variations of fonts?

2
00:00:03,510 --> 00:00:04,450
A font family, or

3
00:00:04,450 --> 00:00:08,990
even a family of families can
contain dozens of variations.

4
00:00:08,990 --> 00:00:13,050
First, Roboto actually has
four distinct font families,

5
00:00:13,050 --> 00:00:18,900
including a condensed, monospace and
even an older slab serif family.

6
00:00:18,900 --> 00:00:22,910
Within each font family you
have a variety of weights.

7
00:00:22,910 --> 00:00:25,730
Font weight is the relative
thickness of each letter.

8
00:00:25,730 --> 00:00:28,090
The most common weights are regular and
bold, but

9
00:00:28,090 --> 00:00:32,900
really great fonts will come in light,
thin, regular, medium, bold or black.

10
00:00:32,900 --> 00:00:37,330
And now these can go by different names,
like semi-bold or ultra-thin.

11
00:00:37,330 --> 00:00:41,190
Weights often also get numbers
assigned to them, from 0 to 1000,

12
00:00:41,190 --> 00:00:45,460
where the thinnest weights have
something like 100 value, and

13
00:00:45,460 --> 00:00:49,750
the darkest or the thickest
weights have a 900 or 1000 value.

14
00:00:50,780 --> 00:00:54,050
And finally, each of these
weights normally has a normal and

15
00:00:54,050 --> 00:00:55,990
an italic style.

16
00:00:55,990 --> 00:00:58,150
Now when it comes to
styling text in Android,

17
00:00:58,150 --> 00:01:01,070
the terminology is a little different.

18
00:01:01,070 --> 00:01:05,060
If you're using Roboto, text views have
two attributes that let you customize

19
00:01:05,060 --> 00:01:09,215
the font, fontFamily and textStyle.

20
00:01:09,215 --> 00:01:12,415
FontFamily lets you choose
which family to use and

21
00:01:12,415 --> 00:01:15,475
the specific weight,
such as thin or light.

22
00:01:15,475 --> 00:01:21,975
And textStyle lets you choose italics,
but it also lets you make the text bold.

23
00:01:21,975 --> 00:01:25,465
You should generally avoid using
textStyle to make text bold and

24
00:01:25,465 --> 00:01:27,765
instead use the fontFamily attribute,

25
00:01:27,765 --> 00:01:30,469
since you'll have more control
over the exact weight to use.

26
00:01:31,550 --> 00:01:34,960
Also note that not every weight
is available in every family.

27
00:01:34,960 --> 00:01:39,640
For example as of this writing, Roboto
condensed doesn't include a thin and

28
00:01:39,640 --> 00:01:41,330
a black weight.

29
00:01:41,330 --> 00:01:45,430
Here's some sample code for
applying a font family in text style.

30
00:01:45,430 --> 00:01:49,558
Here we're saying to use
the condensed family but italicized.

31
00:01:49,558 --> 00:01:52,530
And here are some other examples
of values you can use for

32
00:01:52,530 --> 00:01:58,280
fontFamily to set the fontFamily or
the weight, like thin, medium, light.

33
00:01:58,280 --> 00:02:01,580
Now, one quick note with
the condensed fonts,

34
00:02:01,580 --> 00:02:04,190
the Roboto Condensed example here.

35
00:02:04,190 --> 00:02:09,100
You can squeeze a lot more text into the
same horizontal space with these fonts,

36
00:02:09,100 --> 00:02:12,040
but condensed fonts can
definitely be overused.

37
00:02:12,040 --> 00:02:15,070
They're not quite as legible and
don't always look great with

38
00:02:15,070 --> 00:02:20,300
other wider fonts, like Roboto Regular,
or even wider fonts than that.

39
00:02:20,300 --> 00:02:24,420
So definitely be careful when using
condensed fonts as your font family.
