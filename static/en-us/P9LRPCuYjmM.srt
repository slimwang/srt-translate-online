1
00:00:00,290 --> 00:00:03,520
Yes, nearby pixels
tend to move together.

2
00:00:03,520 --> 00:00:06,790
This is because an object
seen moving in a certain way

3
00:00:06,790 --> 00:00:09,210
occupies more than a few pixels.

4
00:00:09,210 --> 00:00:11,570
Well, otherwise it would be hard to see.

5
00:00:12,600 --> 00:00:15,110
This can be thought of
as a local constraint.

6
00:00:15,110 --> 00:00:17,490
And we'll see more of this later.

7
00:00:17,490 --> 00:00:21,080
Saying that motion must be
consistent over an entire image

8
00:00:21,080 --> 00:00:25,030
is a pretty bold claim, but
it is still fairly valid and

9
00:00:25,030 --> 00:00:28,700
useful, especially when
used as a soft constraint.

10
00:00:28,700 --> 00:00:33,480
This means you're not saying that motion
across the image has to be identical,

11
00:00:33,480 --> 00:00:36,440
it's just that solutions
to the optical flow problem

12
00:00:36,440 --> 00:00:39,850
that generate consistent
motion are preferable.

13
00:00:39,850 --> 00:00:42,400
As you might have guessed,
this is a global constraint.

14
00:00:43,530 --> 00:00:47,600
Remember that our goal is to
compute optical flow at each pixel.

15
00:00:47,600 --> 00:00:49,390
That is dense flow.

16
00:00:49,390 --> 00:00:52,190
Now if we consider
only distinct regions,

17
00:00:52,190 --> 00:00:54,450
then how are we going to do that?

18
00:00:54,450 --> 00:00:56,950
Well, at distinct regions like corners,

19
00:00:56,950 --> 00:00:59,800
the ambiguity of flow
direction is small.

20
00:00:59,800 --> 00:01:02,410
If we compute optical
flow at these regions,

21
00:01:02,410 --> 00:01:05,390
we could interpolate
the flow between them.

22
00:01:05,390 --> 00:01:08,060
So yes,
this is a useful approach as well,

23
00:01:08,060 --> 00:01:10,740
although it might result
in approximate flow.

24
00:01:11,910 --> 00:01:13,180
Anything else you have in mind?

25
00:01:14,290 --> 00:01:16,520
Don't agree with these constraints?

26
00:01:16,520 --> 00:01:17,660
You know where to discuss.
