1
00:00:00,090 --> 00:00:04,270
The packet filtering or the state fill
inspection firewalls on a two main or

2
00:00:04,270 --> 00:00:06,540
more traditional types of firewalls.

3
00:00:06,540 --> 00:00:09,090
There are other more modern firewalls.

4
00:00:09,090 --> 00:00:11,600
In particular,
an application-level gateway, or

5
00:00:11,600 --> 00:00:16,700
sometimes called an application proxy,
is an application-specific firewall.

6
00:00:16,700 --> 00:00:21,650
It essentially acts as a relay of
application-level traffic, or a man or

7
00:00:21,650 --> 00:00:22,710
system in the middle.

8
00:00:22,710 --> 00:00:26,930
That is, to the external server,
this gateway acts as the client, and

9
00:00:26,930 --> 00:00:30,890
to the internal client, this gateway
acts as the external server.

10
00:00:30,890 --> 00:00:34,250
For example,
many organizations have a web proxy, and

11
00:00:34,250 --> 00:00:36,850
that is a application-level gateway.

12
00:00:36,850 --> 00:00:40,930
Let's discuss a typical workflow
of an application-level gateway.

13
00:00:40,930 --> 00:00:45,500
First, the user contacts the gateway
using an application such as FTP or

14
00:00:45,500 --> 00:00:46,650
the browser.

15
00:00:46,650 --> 00:00:50,800
The gateway then asks information such
as the name of the remote server,

16
00:00:50,800 --> 00:00:53,300
the user login information, and so on.

17
00:00:53,300 --> 00:00:56,980
The user then provides the valid
authentication information

18
00:00:56,980 --> 00:00:58,100
to the gateway.

19
00:00:58,100 --> 00:01:00,700
The gateway then contacts
the external server and

20
00:01:00,700 --> 00:01:04,090
provides the valid user
authentication information.

21
00:01:04,090 --> 00:01:08,560
In other words, the gateway acts as
the user to the external server.

22
00:01:08,560 --> 00:01:11,390
When the external server
sends back a response,

23
00:01:11,390 --> 00:01:13,770
the gateway is going to analyze it, and

24
00:01:13,770 --> 00:01:17,930
if the traffic is allowed, it's going to
forward it to the user, but in order for

25
00:01:17,930 --> 00:01:21,740
the gateway to be able to correctly
analyze the server response,

26
00:01:21,740 --> 00:01:25,340
the gateway must implement
the correct application logic.

27
00:01:25,340 --> 00:01:27,230
For example, if this is a web proxy,

28
00:01:27,230 --> 00:01:31,400
you must be able to process web traffic,
just like a browser.

29
00:01:31,400 --> 00:01:35,020
As we can see, if you want to
use application-level firewalls,

30
00:01:35,020 --> 00:01:39,430
we must implement proxy code for each
application that we want to protect.

31
00:01:39,430 --> 00:01:43,860
The advantage is that we can then
restrict certain application features.

32
00:01:43,860 --> 00:01:48,160
For example, a web proxy can prevent
active scripts in web pages.

33
00:01:48,160 --> 00:01:52,280
This can be accomplished by the proxy
removing the scripts in the pages

34
00:01:52,280 --> 00:01:54,000
returned by the remote server, and

35
00:01:54,000 --> 00:01:57,290
therefore application-level
gateways tend to be more secure.

36
00:01:57,290 --> 00:02:01,730
On the other hand, application-level
gateway does incur additional overhead.

37
00:02:01,730 --> 00:02:04,550
This is easy to see,
because each connection

38
00:02:04,550 --> 00:02:09,199
from the user to the external server is
actually spliced into two connections.

39
00:02:09,199 --> 00:02:11,860
One is from the user to the gateway, and

40
00:02:11,860 --> 00:02:14,970
the other one is from the gateway
to the external server.

41
00:02:14,970 --> 00:02:19,130
And the gateway must examine and
forward all traffic in both directions.
