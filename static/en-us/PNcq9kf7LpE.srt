1
00:00:00,000 --> 00:00:05,180
And the correct answer is the first one--any Las Vegas algorithm can be turned into

2
00:00:05,180 --> 00:00:08,830
a Monte Carlo algorithm and the reason for that is the following--

3
00:00:08,830 --> 00:00:14,530
In a Las Vegas algorithm, we said that the running time was polynomial with a certain probability

4
00:00:14,530 --> 00:00:20,470
and that means that we can let the algorithm run a few times, so sometimes it will take

5
00:00:20,470 --> 00:00:24,790
polynomial running time, sometime it would take exponential running time like this.

6
00:00:24,790 --> 00:00:29,250
So this is suppose to be the running time and let's say in the first time it's also exponential

7
00:00:29,250 --> 00:00:34,960
and we basically jut watch over the algorithm and as soon as it takes longer than polynomial time

8
00:00:34,960 --> 00:00:40,560
we stop it, we cut it off, and that would then give us exactly a Monte Carlo algorithm

9
00:00:40,560 --> 00:00:45,200
because here we said for this approach we demand that when we get the solution

10
00:00:45,200 --> 00:00:47,740
that solution is suppose to be the best possible one.

11
00:00:47,740 --> 00:00:51,880
So here the algorithm would also produce the best possible solution but we stopped it.

12
00:00:51,880 --> 00:00:56,020
We are stuck with some suboptimal solution or even no solution.

13
00:00:56,020 --> 00:01:01,000
Here the same thing as well, but then we started the next time and it just uses polynomial time

14
00:01:01,000 --> 00:01:03,700
and then we use that solution and this is exactly

15
00:01:03,700 --> 00:01:05,820
how a Monte Carlo algorithm would behave as well.

16
00:01:05,820 --> 00:01:10,540
It produces the best solution with a certain probability and in this case here

17
00:01:10,540 --> 00:01:14,110
this probability is dependent on the running time of the Las Vegas algorithm,

18
00:01:14,110 --> 99:59:59,999
which sometimes will be polynomial and sometimes will be exponential.
