1
00:00:00,220 --> 00:00:03,816
So, for our last quiz of the unit, I want to go back to the menu example we

2
00:00:03,816 --> 00:00:07,970
started with and ask you to define classes that provide behavior that will allow

3
00:00:07,970 --> 00:00:12,270
us to represent main dishes and appetizers. So, both main dishes and appetizers

4
00:00:12,270 --> 00:00:15,981
have some properties in common. They all have names and prices, and they both

5
00:00:15,981 --> 00:00:20,155
might have a description. As well as an indication whether they're appropriate

6
00:00:20,155 --> 00:00:24,649
for vegetarians or not. These have default values of None and False. A MainDish

7
00:00:24,649 --> 00:00:29,140
comes with sides, and the default number of sides is 0. An Appetizer does not

8
00:00:29,140 --> 00:00:33,480
come with any sides, but it serves a variable number of people, the default

9
00:00:33,480 --> 00:00:37,394
being 1. So, your goal is to find a dish module that will provide this behavior,

10
00:00:37,394 --> 00:00:41,106
it will define types for at least the MainDish and Appetizer, we'll be able to

11
00:00:41,106 --> 00:00:45,788
create a MainDish. Passing in a name, a price, and then optional description and

12
00:00:45,788 --> 00:00:49,552
vegetarian parameters. When we print out a MainDish, we'll see the name of the

13
00:00:49,552 --> 00:00:52,790
dish, followed by the name of the price. If there is a description, we'll see

14
00:00:52,790 --> 00:00:56,360
that. Here's another example of a MainDish. This one has two sides and is

15
00:00:56,360 --> 00:01:00,585
vegetarian. And when we print this out, we'll see the star, meaning it's

16
00:01:00,585 --> 00:01:04,747
vegetarian. And that it has two sides. We can also create Appetizers. And

17
00:01:04,747 --> 00:01:08,818
appetizers have names, prices, might have a description, might have vegetarian,

18
00:01:08,818 --> 00:01:12,290
and might have the number of people they serve. And we can print out an

19
00:01:12,290 --> 00:01:16,130
Appetizer, and it'll print out the name, the price, extra information like a

20
00:01:16,130 --> 00:01:20,420
dish would, as well as the number that it serves. Here's another example. We're

21
00:01:20,420 --> 00:01:23,948
creating an Appetizer with a description that serves three and we'll see it

22
00:01:23,948 --> 00:01:27,780
print out the description followed by the serves. So, your goal is to define a

23
00:01:27,780 --> 00:01:31,745
module that provides this behavior and to do it in a way that reuses code as

24
00:01:31,745 --> 00:01:35,962
much as possible. You want to avoid having any unnecessary duplication of code.

25
00:01:35,962 --> 00:01:39,334
Doing this well will take advantage of several of the things that I've

26
00:01:39,334 --> 00:01:40,673
introduced in this class.
