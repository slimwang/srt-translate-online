1
00:00:00,150 --> 00:00:02,090
In this final exam problem, we are given a

2
00:00:02,090 --> 00:00:05,810
regular language in the form of a non-deterministic finite state

3
00:00:05,810 --> 00:00:09,630
machine, and we want to construct another non-deterministic finite state

4
00:00:09,630 --> 00:00:14,030
machine that accepts exactly the same strings, but backwards. So,

5
00:00:14,030 --> 00:00:16,780
let's say we have this regular expression that accepts

6
00:00:16,780 --> 00:00:18,490
strings that begin with an a and end with a

7
00:00:18,490 --> 00:00:21,660
c and in between, have one or more occurrences of

8
00:00:21,660 --> 00:00:25,170
bx and by. An example string that that regular expression

9
00:00:25,170 --> 00:00:30,330
matches looks like this. a, bx, bx,

10
00:00:30,330 --> 00:00:35,550
by, and c. So we do a, bx, by, and then c. So

11
00:00:35,550 --> 00:00:40,260
here I have a finite state machine representation of that regular expression. We

12
00:00:40,260 --> 00:00:45,430
start with an a, we require at least one bx or by. And then we can repeat

13
00:00:45,430 --> 00:00:50,100
the bx and by afterwards as many times as we want, and we finish with a c.

14
00:00:50,100 --> 00:00:53,720
Remembe,r the finite state machine we want to generate

15
00:00:53,720 --> 00:00:57,185
will have to accept strings like this, where we begin

16
00:00:57,185 --> 00:00:59,495
with a c, we then have yb, xb, xb,

17
00:00:59,495 --> 00:01:02,810
and then a. Our strategy for doing that is going

18
00:01:02,810 --> 00:01:06,870
to be basically reversing all of the edges. In

19
00:01:06,870 --> 00:01:09,710
this finite state machine, to go the other direction, and

20
00:01:09,710 --> 00:01:12,670
finishing it off by changing the start state with

21
00:01:12,670 --> 00:01:15,160
the accepting state. Okay, so the first thing I'm going to

22
00:01:15,160 --> 00:01:18,900
do is change the start state and the accepting state.

23
00:01:18,900 --> 00:01:21,210
So now we start at 6, and finish at 1,

24
00:01:21,210 --> 00:01:23,980
and now I'm going to change all of the arrows. And

25
00:01:23,980 --> 00:01:26,420
we're done. If you look closely, you'll see that this

26
00:01:26,420 --> 00:01:30,440
finite state machine. Matches exactly the same set as the

27
00:01:30,440 --> 00:01:34,470
original one, finite state machine, but backwards. So, let's apply

28
00:01:34,470 --> 00:01:38,160
that same methodology to coding our solution. So, I've started

29
00:01:38,160 --> 00:01:40,200
coding the solution, and the first thing I do is

30
00:01:40,200 --> 00:01:44,340
create a dictionary to contain the reversed edges, and I switch

31
00:01:44,340 --> 00:01:47,410
the start and accepting states. Now I'm going to go through each

32
00:01:47,410 --> 00:01:50,220
of the original edges, and right here on these three lines,

33
00:01:50,220 --> 00:01:53,230
I'm just extracting the data from the original edge and the

34
00:01:53,230 --> 00:01:56,790
original finite state machine to make it easier to manipulate later.

35
00:01:56,790 --> 00:01:59,090
So, for this edge in the original finance state machine I'm

36
00:01:59,090 --> 00:02:02,820
looking at, I'm going to go through each of its destinations, so

37
00:02:02,820 --> 00:02:05,930
that I'm going to create an edge that goes the other direction.

38
00:02:05,930 --> 00:02:08,410
And because the way we structure a data structure. I'm going

39
00:02:08,410 --> 00:02:10,690
to have to do it in kind of a continuing fashion. I

40
00:02:10,690 --> 00:02:13,080
can't just finish the edge. I have to look at every edge

41
00:02:13,080 --> 00:02:15,940
in the original one before I can be certain that I've finished

42
00:02:15,940 --> 00:02:18,890
the edge in the new finite state machine. So this line of

43
00:02:18,890 --> 00:02:23,410
code sees if we've already created the beginning of this edge, and

44
00:02:23,410 --> 00:02:26,960
that's going to overwrite the empty list we had before. And either

45
00:02:26,960 --> 00:02:30,930
way, we're gong to set the new state of this edge in

46
00:02:30,930 --> 00:02:34,710
the new finite state machine to be the concatenation

47
00:02:34,710 --> 00:02:37,900
of the before list with the added state we got

48
00:02:37,900 --> 00:02:41,350
from this iteration. And once we're done going through

49
00:02:41,350 --> 00:02:43,800
the original finite state machine, we just return the result.
