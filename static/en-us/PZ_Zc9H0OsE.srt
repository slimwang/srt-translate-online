1
00:00:00,025 --> 00:00:03,170
So remember that set announcement servelet that you created

2
00:00:03,170 --> 00:00:05,620
earlier? Now you're going to set up cron job

3
00:00:05,620 --> 00:00:08,370
to run it regularly, say every minute, every ten

4
00:00:08,370 --> 00:00:11,760
minutes, whatever, to update the announcement. So to set up

5
00:00:11,760 --> 00:00:14,623
your cron job, you're going to need to create

6
00:00:14,623 --> 00:00:19,940
a cron.xml file and configure it to run /cron/set_announcement

7
00:00:19,940 --> 00:00:21,610
because that's the path that we set up for

8
00:00:21,610 --> 00:00:25,390
our set, set announcement function. And then specify the schedule,

9
00:00:25,390 --> 00:00:28,150
let's say once per minute. The development server on

10
00:00:28,150 --> 00:00:31,690
localhost doesn't run cron jobs, so when you're ready, go

11
00:00:31,690 --> 00:00:35,044
ahead and deploy your app to appspot. Then add one

12
00:00:35,044 --> 00:00:38,552
or more conferences that have between zero and five seats

13
00:00:38,552 --> 00:00:41,260
available. And the easiest way to do that is

14
00:00:41,260 --> 00:00:44,050
just to create a new conference with max attendees less

15
00:00:44,050 --> 00:00:46,866
than five. And then use the cron viewer in the

16
00:00:46,866 --> 00:00:50,340
Admin Console to make sure that your cron job's running.

17
00:00:50,340 --> 00:00:52,200
And then of course go ahead and get the latest

18
00:00:52,200 --> 00:00:56,450
announcement to check that the latest announcement did get updated. And

19
00:00:56,450 --> 00:00:59,630
you can do this either, you can use either the mem-cache

20
00:00:59,630 --> 00:01:03,960
viewer or the API's console to get the latest announcement. So

21
00:01:03,960 --> 00:01:06,190
now your cron job is humming along, it'll keep going

22
00:01:06,190 --> 00:01:08,970
by itself. That means it's going to run a query to look

23
00:01:08,970 --> 00:01:12,030
for conferences every minute, or however often you scheduled it to

24
00:01:12,030 --> 00:01:15,520
run. It's helpful for learning purposes to see the cron job

25
00:01:15,520 --> 00:01:18,620
running frequently, but it's not a good practice to leave cron

26
00:01:18,620 --> 00:01:22,160
jobs running more frequently than you really need them. This cron job

27
00:01:22,160 --> 00:01:24,870
does a fairly simple query, and then puts a value in mem

28
00:01:24,870 --> 00:01:28,120
cache, for which there's no daily quota. But if your cron job

29
00:01:28,120 --> 00:01:31,460
did something that intensively hit the data store it could easily use

30
00:01:31,460 --> 00:01:34,060
up much more quota. So you need to think about what your

31
00:01:34,060 --> 00:01:37,740
cron jobs do and how often they need to run. I've accidentally

32
00:01:37,740 --> 00:01:40,610
used up my entire daily quota running a cron job that searched

33
00:01:40,610 --> 00:01:43,420
all the conferences and saved results in the data store, so

34
00:01:43,420 --> 00:01:45,410
I learned my lesson the hard way. So go ahead and

35
00:01:45,410 --> 00:01:48,270
change the frequency to once an hour and when you've done

36
00:01:48,270 --> 00:01:52,710
that come over here and check this box. Alternatively, you could disable

37
00:01:52,710 --> 00:01:56,200
the cron job completely by uploading an empty cron job config,

38
00:01:56,200 --> 00:01:59,510
but remember if you just delete the cron config file completely

39
00:01:59,510 --> 00:02:02,500
then the one that's already up on app spot stays running.

40
00:02:02,500 --> 00:02:05,610
So one more quick quiz. How do you schedule your cron job

41
00:02:05,610 --> 00:02:08,780
to run once every two hours? Go ahead and enter

42
00:02:08,780 --> 00:02:11,610
that value in here. And that's it for cron jobs.
