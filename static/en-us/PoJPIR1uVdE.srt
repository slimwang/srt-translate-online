1
00:00:00,550 --> 00:00:03,330
The second issue is versioning, which can be tricky.

2
00:00:03,330 --> 00:00:05,610
As new versions of the components are released,

3
00:00:05,610 --> 00:00:08,800
backward compatibility becomes a problem.

4
00:00:08,800 --> 00:00:11,960
If you are a component vendor, you need to keep your customers up to date with

5
00:00:11,960 --> 00:00:15,970
changing standards, new programming language releases, and enhanced features.

6
00:00:15,970 --> 00:00:17,070
The question then becomes,

7
00:00:17,070 --> 00:00:20,640
to what extent should you remain compatible with previous versions?

8
00:00:20,640 --> 00:00:22,760
Think of the issue from the customer's point of view.

9
00:00:22,760 --> 00:00:23,800
They have a working product.

10
00:00:23,800 --> 00:00:28,000
It will cost them time and energy to upgrade to a new version of your component,

11
00:00:28,000 --> 00:00:31,440
and there's a risk of breaking their system if they do so.

12
00:00:31,440 --> 00:00:33,480
If they don't need the new feature that you are offering,

13
00:00:33,480 --> 00:00:35,500
they're going to be reluctant to upgrade.

14
00:00:35,500 --> 00:00:38,890
From your point of view, however, this may mean you've got to maintain and

15
00:00:38,890 --> 00:00:42,946
support a long history of previous versions at additional expense.

16
00:00:42,946 --> 00:00:45,870
Moreover, if there are multiple components involved,

17
00:00:45,870 --> 00:00:46,950
each with their own versions,

18
00:00:46,950 --> 00:00:50,110
you have an explosion in the number of combinations you have to support.

19
00:00:50,110 --> 00:00:51,150
What's a poor vendor to do?
