1
00:00:00,510 --> 00:00:05,299
Distribution is by far the most
important of the stack views properties.

2
00:00:05,299 --> 00:00:08,650
Through this property, you can control
the way the views are displayed

3
00:00:08,650 --> 00:00:11,470
along the axis of the stack view.

4
00:00:11,470 --> 00:00:14,640
There are two groups of
distribution algorithms.

5
00:00:14,640 --> 00:00:18,429
Those that try to preserve
the size of the views, and

6
00:00:18,429 --> 00:00:23,609
those that will try to preserve
the spacing between the views.

7
00:00:23,609 --> 00:00:25,339
Let's start with them.

8
00:00:25,339 --> 00:00:31,289
Equal spacing does its best not to
change the intrinsic size of a view.

9
00:00:31,289 --> 00:00:35,329
Instead, it will distribute
the views along the available space

10
00:00:35,329 --> 00:00:38,140
with an equal separation between them.

11
00:00:38,140 --> 00:00:42,710
Of course, if there is not enough space,
it will reduce the size of the views

12
00:00:42,710 --> 00:00:46,960
starting by those that have
the lowest compression resistance.

13
00:00:46,960 --> 00:00:50,060
If all the views have the same
compression resistance,

14
00:00:50,060 --> 00:00:54,160
which is pretty common by the way, it
will shrink the first one from the left.

15
00:00:55,640 --> 00:00:58,789
Equal centering is similar
to the previous one.

16
00:00:58,789 --> 00:01:02,859
Instead of measuring the separation
from the edges of the views,

17
00:01:02,859 --> 00:01:05,679
it measures them from their center.

18
00:01:05,680 --> 00:01:09,210
If your views have very different sizes,
it might look good.

19
00:01:09,209 --> 00:01:11,119
Otherwise, I would stay away from it.

20
00:01:12,150 --> 00:01:15,570
There's not a lot of difference
between these two algorithms.

21
00:01:15,569 --> 00:01:16,750
Let's check out the other group.

22
00:01:18,329 --> 00:01:19,780
Fill equally.

23
00:01:19,780 --> 00:01:22,870
This one divides all
the available space in

24
00:01:22,870 --> 00:01:26,120
equal chunks among the available views.

25
00:01:26,120 --> 00:01:30,500
It if has to change the intrinsic
content size, then it will go ahead.

26
00:01:31,670 --> 00:01:32,780
Fill proportionally.

27
00:01:32,780 --> 00:01:37,650
If the size of the views doesn't
match the available space,

28
00:01:37,650 --> 00:01:39,830
it will change the size of the views.

29
00:01:39,829 --> 00:01:43,959
However, it will do it while keeping
the compression resistance and

30
00:01:43,959 --> 00:01:45,518
hugging priority in mind.

31
00:01:46,879 --> 00:01:51,659
This one is pretty tweakable as you
can change which view gets squeezed or

32
00:01:51,659 --> 00:01:56,709
expanded by changing the compression
resistance and the hugging priority.

33
00:01:56,709 --> 00:02:00,479
The last one, fill,
is similar to the previous one.

34
00:02:00,480 --> 00:02:04,810
But when it comes to changing a view
size, it shows some preference.

35
00:02:04,810 --> 00:02:10,599
It will always try to change the first
view, and this is a default value.

36
00:02:10,599 --> 00:02:13,629
Let's wrap it up before moving to Xcode.

37
00:02:13,629 --> 00:02:14,349
By far,

38
00:02:14,349 --> 00:02:19,328
the most important property of a stack
view is the distribution algorithm.

39
00:02:19,328 --> 00:02:24,439
They are several distribution
algorithms, and at this point,

40
00:02:24,439 --> 00:02:28,969
you don't have to worry about
remembering exactly each one of them.

41
00:02:31,110 --> 00:02:35,480
What you should remember is that some
try to change the size of the views,

42
00:02:35,479 --> 00:02:41,079
the fill ones, while others will try to
change the separation between the views,

43
00:02:41,080 --> 00:02:41,650
the equal ones.

44
00:02:43,259 --> 00:02:48,699
Fill proportionally is perhaps the most
tweakable where you can easily change

45
00:02:48,699 --> 00:02:52,699
which view gets the squeeze or expanded

46
00:02:52,699 --> 00:02:57,489
by playing around with the compression
resistance and the hugging priority.

47
00:02:59,810 --> 00:03:01,810
And fill is the default.

