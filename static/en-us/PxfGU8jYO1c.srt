1
00:00:00,330 --> 00:00:01,680
Some of you may have thought of this

2
00:00:01,680 --> 00:00:05,620
already, and that is, prior to P two getting

3
00:00:05,620 --> 00:00:09,460
its lock, it is possible that maybe another processor,

4
00:00:09,460 --> 00:00:13,400
say P three, also used the same lock. And

5
00:00:13,400 --> 00:00:16,620
so, when it executed its critical section, maybe in

6
00:00:16,620 --> 00:00:20,280
its critical section, it modified the page X again,

7
00:00:20,280 --> 00:00:22,520
and it creates its own def, let's call it

8
00:00:22,520 --> 00:00:25,350
Xd prime. Because all of these locks are the

9
00:00:25,350 --> 00:00:31,860
same, When, the DSM software knows that now there are two difs associated with

10
00:00:31,860 --> 00:00:38,450
this lock, L, one dif is with the processor P one, and another dif is residing

11
00:00:38,450 --> 00:00:45,180
with processor P three, and therefore when processor P two tries to access x

12
00:00:45,180 --> 00:00:50,580
The DSM software has not only to get the diff from P one, but it also needs

13
00:00:50,580 --> 00:00:56,920
to get the diff from P two and apply it to the original, pristine

14
00:00:56,920 --> 00:01:02,430
version of the page that is with the owner of the page so that it can create

15
00:01:02,430 --> 00:01:04,280
the current version of the page. And it

16
00:01:04,280 --> 00:01:07,610
can extend this to any number of processors.

17
00:01:07,610 --> 00:01:12,180
That may have made modifications, their own modifications,

18
00:01:12,180 --> 00:01:15,460
to this page under the provision of the

19
00:01:15,460 --> 00:01:21,112
lock L. All of those diffs are going to be applied in order for the process of P

20
00:01:21,112 --> 00:01:27,050
two to access the page as the current page. If after accessing the page

21
00:01:27,050 --> 00:01:33,890
x and its execution P two. Touches let's say page Z at that point once again

22
00:01:33,890 --> 00:01:37,430
the [INAUDIBLE] knows that, oh, I know that

23
00:01:37,430 --> 00:01:41,080
Z was modified by the previous lock holder

24
00:01:41,080 --> 00:01:46,540
Zd is the diff I know where to find it I'll bring the original copy of z from...

25
00:01:46,540 --> 00:01:49,150
The owner of Z and apply the diffs to

26
00:01:49,150 --> 00:01:52,750
it before letting P two access Z. So you can

27
00:01:52,750 --> 00:01:56,520
see, that even though the invalidation was done right

28
00:01:56,520 --> 00:02:00,600
at the beginning, we're procrastinating getting the this til

29
00:02:00,600 --> 00:02:03,230
the point of access. So this is what LRC

30
00:02:03,230 --> 00:02:06,240
allows you to do is just bring in what this

31
00:02:06,240 --> 00:02:08,288
guy needs. So for instance, inside this critical

32
00:02:08,288 --> 00:02:13,130
section maybe only X is accessed. Y and

33
00:02:13,130 --> 00:02:18,935
Z are not accessed at all, in which case, we never bring the diffs from P one

34
00:02:18,935 --> 00:02:23,255
to P two for y and z.P two On the other hand, it is possible that P

35
00:02:23,255 --> 00:02:26,030
two, as part of its execution of its

36
00:02:26,030 --> 00:02:30,910
critical section. Modifies another page Q, different from X,

37
00:02:30,910 --> 00:02:37,870
Y, and Z. So now, the DSM software knows that this particular lock is associated

38
00:02:37,870 --> 00:02:43,440
not just with X, Y, and Z, but it is also associated with Q. So future lock

39
00:02:43,440 --> 00:02:49,960
request for L will result in invalidating X, Y, Z, and Q because all of those

40
00:02:49,960 --> 00:02:52,870
may have been modified and the next critical

41
00:02:52,870 --> 00:02:56,220
section that wants to access this lock L has

42
00:02:56,220 --> 00:03:01,860
to get the current versions of all the pages that were ever associated with L.
