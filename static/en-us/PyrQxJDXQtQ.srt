1
00:00:00,290 --> 00:00:02,550
We're going to switch gears for
just a minute and

2
00:00:02,550 --> 00:00:05,620
focus on what a Swift file
looks like in context.

3
00:00:05,620 --> 00:00:09,730
Here's a very simple Xcode project
from the UI Kit Fundamentals course.

4
00:00:09,730 --> 00:00:11,280
Ignore the code for now.

5
00:00:11,280 --> 00:00:14,870
I just want you to notice the files
over here in the project navigator.

6
00:00:14,870 --> 00:00:18,137
You can see here that there's
a .swift file for the AppDelegate,

7
00:00:18,137 --> 00:00:20,763
there's a .swift file for
the ViewController, and

8
00:00:20,763 --> 00:00:24,620
here in the center you see
the ViewController.swift file opened.

9
00:00:24,620 --> 00:00:27,840
Now, if you're accustomed to
writing code in Java or C,

10
00:00:27,840 --> 00:00:31,800
you might be wondering
where is the header file?

11
00:00:31,800 --> 00:00:35,720
The implementation files and interface
files are not separated in Swift.

12
00:00:35,720 --> 00:00:38,439
There's just one .swift file
in which a class is defined.

13
00:00:39,450 --> 00:00:43,120
You might be wondering, if there's
not a separate interface file,

14
00:00:43,120 --> 00:00:46,320
then how do you know which objects
are public and which are private?

15
00:00:46,320 --> 00:00:50,060
In Swift the default access
control is internal.

16
00:00:50,060 --> 00:00:52,400
Which is similar to protected in Java.

17
00:00:52,400 --> 00:00:56,460
In general, with simple apps, you can
use an object with internal access from

18
00:00:56,460 --> 00:00:59,520
anywhere in the app, but
not outside the app.

19
00:00:59,520 --> 00:01:03,230
Practically speaking, this means that
sometimes we'll need to specify a class

20
00:01:03,230 --> 00:01:06,700
as private, but rarely will we
need to specify a class as public.
