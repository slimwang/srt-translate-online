1
00:00:01,219 --> 00:00:05,883
Here we give you an intuition as to why
an optimistic heuristic function, h,

2
00:00:05,884 --> 00:00:07,768
finds the lowest-cost path.

3
00:00:07,767 --> 00:00:14,003
When a* ends, it returns a path,
p, with estimated cost, C.

4
00:00:14,003 --> 00:00:18,131
And turns out that C is
actually also the actual cost,

5
00:00:18,132 --> 00:00:21,542
because at the goal,
the h component is 0.

6
00:00:21,542 --> 00:00:25,989
And so the path cost is the total
cost as estimated by the function.

7
00:00:25,989 --> 00:00:31,664
Now, all the paths on the frontier have
an estimated cost that's greater than C.

8
00:00:31,664 --> 00:00:35,566
And we know that because the frontier
is explored in cheapest-first order.

9
00:00:35,566 --> 00:00:37,571
But if h is optimistic,

10
00:00:37,570 --> 00:00:41,893
then the estimated cost is
less than the true cost.

11
00:00:41,893 --> 00:00:46,332
So the path p must have a cost that's
less than the true cost of any of

12
00:00:46,332 --> 00:00:48,570
the other paths in the frontier.

13
00:00:48,570 --> 00:00:53,695
And any paths that go beyond the
frontier must have a cost that's greater

14
00:00:53,695 --> 00:00:58,579
than that, because we agreed that
the step cost is always 0 or more.

15
00:00:58,579 --> 00:01:03,826
So that means that this path, p,
must be the minimal cost path.

16
00:01:03,826 --> 00:01:10,060
Now, this argument, I should say, only
goes through just as is for tree search.

17
00:01:10,060 --> 00:01:13,275
For graph search, the argument's
slightly more complicated, but

18
00:01:13,275 --> 00:01:15,111
the general intuitions hold the same.

19
00:01:15,111 --> 00:01:22,009
[BLANK_AUDIO]

