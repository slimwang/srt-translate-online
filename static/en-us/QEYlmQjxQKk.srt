1
00:00:00,300 --> 00:00:03,270
Hello, everyone. It's my pleasure to introduce

2
00:00:03,270 --> 00:00:07,250
to you Doctor Yousef Khalidi. Yousef, as I

3
00:00:07,250 --> 00:00:10,230
call him graduated from Georgia Tech in

4
00:00:10,230 --> 00:00:14,590
1989. And and then after he graduated from

5
00:00:14,590 --> 00:00:18,970
Georgia Tech with a PhD in computer science, and I'm very proud to say that he

6
00:00:18,970 --> 00:00:25,420
was my first PhD student. He went to work for Sun Microsystems where he was

7
00:00:25,420 --> 00:00:30,000
developing multiprocessor operating systems and then at

8
00:00:30,000 --> 00:00:33,360
some point of time Microsoft found him.

9
00:00:33,360 --> 00:00:39,150
And he moved to Microsoft and while he was at Sun he was the CTO

10
00:00:39,150 --> 00:00:45,580
of the Solaris MC product. And some of which we saw in our own discussion of

11
00:00:45,580 --> 00:00:51,610
structure of operating systems early on. And and then he moved to Microsoft and

12
00:00:51,610 --> 00:00:57,810
in Microsoft he developed the current he developed the cloud platform which is

13
00:00:57,810 --> 00:01:01,430
called the Microsoft Azure cloud platform, and

14
00:01:01,430 --> 00:01:03,660
that's the one that he'd been leading.

15
00:01:03,660 --> 00:01:07,130
He was a distinguished engineer at Sun Microsystems and then, now he is

16
00:01:07,130 --> 00:01:11,610
a distinguished engineer at Microsoft. And so, it's a great pleasure to have you

17
00:01:11,610 --> 00:01:13,573
>> Thank you Kishore for having me, and I just want

18
00:01:13,573 --> 00:01:19,180
to say that Kishore was a great professor. But a tough professor.

19
00:01:19,180 --> 00:01:23,020
>> [LAUGH] And I want him to tell, tell that to my students even now. [LAUGH]

20
00:01:23,020 --> 00:01:25,033
>> I'm sorry, but that's the truth.

21
00:01:25,033 --> 00:01:28,290
>> So Yousef, it's a pleasure always to meet you and, and see

22
00:01:28,290 --> 00:01:33,790
you. And, and, and the thing that is really exciting for me is

23
00:01:33,790 --> 00:01:38,858
being able to bring you back to this interview because this is, interview's

24
00:01:38,858 --> 00:01:40,540
going to be part of the course

25
00:01:40,540 --> 00:01:44,070
that I'm developing in advanced operating systems,

26
00:01:44,070 --> 00:01:47,800
and and, and you contributed a lot to that. And

27
00:01:47,800 --> 00:01:53,510
so what I want to do is first sort of rewind.

28
00:01:53,510 --> 00:01:54,180
>> 'Kay.

29
00:01:54,180 --> 00:02:02,680
>> Back to the the mid to late 80s. When you were a PhD student and

30
00:02:02,680 --> 00:02:04,970
and you developed, as part of your dissertation

31
00:02:04,970 --> 00:02:09,080
work, the cloud's distributed operating system. And then

32
00:02:09,080 --> 00:02:15,197
fast forward to 2013. You're heading the cloud Azure platform at

33
00:02:15,197 --> 00:02:20,810
Microsoft. Talk to us about your journey and, and if you

34
00:02:20,810 --> 00:02:25,930
can, connect the dots from what you did back then, to what you're doing now.

35
00:02:25,930 --> 00:02:30,950
>> You know, in many way, things have changed. In many other

36
00:02:30,950 --> 00:02:35,140
ways things have not changed at all. So the fundamentals are the same.

37
00:02:35,140 --> 00:02:37,750
The structure of an OS, the way you

38
00:02:37,750 --> 00:02:42,250
layer the system, the basic concepts of security, isolation.

39
00:02:44,390 --> 00:02:47,430
All these high separation policy of mechanisms, simplicity of

40
00:02:47,430 --> 00:02:50,020
design, recovery from failures and the like, all these

41
00:02:50,020 --> 00:02:53,480
concepts still apply. But at the same time, things

42
00:02:53,480 --> 00:02:55,860
have changed quite a bit. Give you an example.

43
00:02:56,910 --> 00:02:59,640
The product you mentioned that you and I worked

44
00:02:59,640 --> 00:03:02,440
on, clouds and, for 85, 86, to 89, it

45
00:03:02,440 --> 00:03:05,520
was a distributed system, true, but we had exactly

46
00:03:05,520 --> 00:03:09,510
three machines. Growing, it grew to four or five machines

47
00:03:09,510 --> 00:03:12,410
later on. That was it. I mean we had

48
00:03:12,410 --> 00:03:15,360
to manage three, four, five machines. Lots of algorithms that

49
00:03:15,360 --> 00:03:17,380
are very similar today but the SK wasn't the

50
00:03:17,380 --> 00:03:21,690
same. Fast forward to today. I can't even tell you

51
00:03:21,690 --> 00:03:23,730
how many machines, how many VMs run in a

52
00:03:23,730 --> 00:03:27,170
public lot. Millions, millions of VMs run all over the

53
00:03:27,170 --> 00:03:32,070
place. So the scale have been going up by orders

54
00:03:32,070 --> 00:03:35,410
and orders of magnitude. So the fundamentals are the same,

55
00:03:35,410 --> 00:03:38,480
but the problem at hand has changed, and of course, the physics and the

56
00:03:38,480 --> 00:03:44,460
how the industry moved. before, a given machine was what? A vax 11 750.

57
00:03:44,460 --> 00:03:45,985
>> Mm-hm.

58
00:03:45,985 --> 00:03:47,760
>> This is an old machine now of course.

59
00:03:47,760 --> 00:03:47,940
>> Mm-hm.

60
00:03:47,940 --> 00:03:50,316
>> Well, I mean, there many, many students

61
00:03:50,316 --> 00:03:52,570
may not even know about vax 11 750.

62
00:03:52,570 --> 00:03:56,157
>> You find them in the, in the history museum now. It used to be as big as a

63
00:03:56,157 --> 00:03:57,980
>> And the company doesn't exist. That we.

64
00:03:57,980 --> 00:04:00,516
>> Company's gone. The machine is gone but it was the best machine

65
00:04:00,516 --> 00:04:04,010
there was for awhile. As big as this. And probably my

66
00:04:04,010 --> 00:04:07,000
watch or my phone has order of magnitude more power than

67
00:04:07,000 --> 00:04:09,366
this. So, you know, again this is just how the industry

68
00:04:09,366 --> 00:04:12,360
moved. So again, the, the concepts are the same, the fundamentals

69
00:04:12,360 --> 00:04:16,670
are the same. Some of the papers that we now teach

70
00:04:16,670 --> 00:04:19,300
and learn from, are the same ones that were written back

71
00:04:19,300 --> 00:04:22,610
then, even before. But their application now has been applied to

72
00:04:22,610 --> 00:04:26,020
a much, much bigger scale. So, so my short answer here.

73
00:04:26,020 --> 00:04:28,800
And this scale, of course, you see everywhere. All

74
00:04:28,800 --> 00:04:31,560
of us have some devices, some smart phone, or some

75
00:04:31,560 --> 00:04:33,380
machine, or a PC and the like. And all these

76
00:04:33,380 --> 00:04:37,050
services out there are using the the, the, the connectivity,

77
00:04:37,050 --> 00:04:39,830
the computing, the power of the collective if you

78
00:04:39,830 --> 00:04:42,850
will. That's new as well. Before we used to apply

79
00:04:42,850 --> 00:04:46,700
all these concepts in the small. To a given machine.

80
00:04:46,700 --> 00:04:49,930
To a server. Now we apply them to a collective.

81
00:04:49,930 --> 00:04:51,270
>> So, is it fair to say

82
00:04:51,270 --> 00:04:57,240
that some of the techniques that were invented in the 80s,

83
00:04:57,240 --> 00:05:02,250
and the 90s are still applicable today? It is just that the scale has gone up.

84
00:05:02,250 --> 00:05:04,620
>> Very much so. I mean, the fundamentals of

85
00:05:04,620 --> 00:05:06,970
distributed computing, replication algorithms,

86
00:05:06,970 --> 00:05:11,510
consistence, leader election, synchronization, all

87
00:05:11,510 --> 00:05:16,300
these are of course the bread and butter of what we do. It's a given. But at the

88
00:05:16,300 --> 00:05:18,290
same time since things have changed, when we

89
00:05:18,290 --> 00:05:21,750
scale changes by one, two, three orders of

90
00:05:21,750 --> 00:05:24,950
magnitude some other things break. So we have

91
00:05:24,950 --> 00:05:27,470
to think in terms of maybe loose consistency instead

92
00:05:27,470 --> 00:05:29,950
of very absolute consistency. You would need to

93
00:05:29,950 --> 00:05:33,538
think of handling failures in a different way.

94
00:05:33,538 --> 00:05:36,520
Optimized for mean time to recovery versus making

95
00:05:36,520 --> 00:05:41,490
it perfect the first time through. So, as you

96
00:05:41,490 --> 00:05:44,910
know, in computer science, when change by this much, some

97
00:05:44,910 --> 00:05:47,260
things have to move, but the fundamentals are the same.

98
00:05:47,260 --> 00:05:51,530
>> That's a very comforting piece of news for

99
00:05:51,530 --> 00:05:53,880
the students because some of the papers that we

100
00:05:53,880 --> 00:05:56,950
read are from the 90s and the 80s and

101
00:05:56,950 --> 00:05:58,970
the classic papers and I tell them why they are.

102
00:05:58,970 --> 00:06:00,940
>> The classic even goes before that as you know.

103
00:06:00,940 --> 00:06:01,528
>> Right. Exactly.

104
00:06:01,528 --> 00:06:04,190
>> It, somebody said that was, wasn't me that nothing has

105
00:06:04,190 --> 00:06:06,320
been invented in our field for the last 20 years or so.

106
00:06:06,320 --> 00:06:07,221
>> Mm-hm.

107
00:06:07,221 --> 00:06:08,740
>> And, again, they're partially right.

108
00:06:08,740 --> 00:06:09,083
>> Mm-hm.

109
00:06:09,083 --> 00:06:10,050
>> The fundamentals are the same.

110
00:06:10,050 --> 00:06:11,390
>> Mm-hm.

111
00:06:11,390 --> 00:06:12,760
>> So you have to start with the basics.

112
00:06:12,760 --> 00:06:13,343
>> Mm-hm.

113
00:06:13,343 --> 00:06:14,150
>> And you build on top of them.

114
00:06:14,150 --> 00:06:19,120
>> Right, right. So, I, I wanted to ask specifically with respect to

115
00:06:19,120 --> 00:06:25,780
Microsoft Azure it uses the platform as a service model for the cloud.

116
00:06:27,710 --> 00:06:32,980
Now discuss why that model is the one that you chose.

117
00:06:32,980 --> 00:06:33,942
And what are the pros and cons of

118
00:06:33,942 --> 00:06:35,790
that, that model, vis-a-vis other kinds of models?

119
00:06:35,790 --> 00:06:39,020
>> Sure. So, I just want to tell you, in Azure we

120
00:06:39,020 --> 00:06:43,250
have the whole spectrum now. Platform as a service, infrastructure as a service,

121
00:06:43,250 --> 00:06:45,835
all combined to build, basically, services,

122
00:06:45,835 --> 00:06:48,920
so-called software as a service. First I

123
00:06:48,920 --> 00:06:51,050
want to start by telling you I'm not a fan of these terms.

124
00:06:51,050 --> 00:06:51,450
>> Okay.

125
00:06:51,450 --> 00:06:54,352
>> They are not technical at all. The industry at

126
00:06:54,352 --> 00:06:58,290
times wants to put things into separate segments. Separate segments.

127
00:06:58,290 --> 00:06:58,795
>> Mm-hm.

128
00:06:58,795 --> 00:06:59,780
>> But by, you know what the definition

129
00:06:59,780 --> 00:07:01,860
of them are. Platform services you typically have

130
00:07:01,860 --> 00:07:03,730
APIs and other services out of which you

131
00:07:03,730 --> 00:07:09,020
compose other services. Whereas infrastructure service is typically just

132
00:07:09,020 --> 00:07:12,530
comp, built VMs, virtual machines, and instantiate them.

133
00:07:12,530 --> 00:07:14,310
Real life, of course, is more complex than that.

134
00:07:14,310 --> 00:07:18,680
It's a combination. And Azure, like other systems

135
00:07:18,680 --> 00:07:23,388
support both. The long-term direct, direction, though, many applications

136
00:07:23,388 --> 00:07:27,150
are not written from scratch anymore. You compose existing

137
00:07:27,150 --> 00:07:30,430
components. There was a time, before I was in

138
00:07:30,430 --> 00:07:32,460
this field, you know? People used to write machine

139
00:07:32,460 --> 00:07:35,984
language, then assembly language. You wrote things like maybe in

140
00:07:35,984 --> 00:07:38,040
C and so forth. And you started with a

141
00:07:38,040 --> 00:07:40,990
program out of scratch from nothing. Now fast forward to

142
00:07:40,990 --> 00:07:44,310
today. Everything's composed. So you may have some storage

143
00:07:44,310 --> 00:07:49,090
services, some database services, some caching services, some identity services.

144
00:07:49,090 --> 00:07:50,550
And you compose your application out of that.

145
00:07:50,550 --> 00:07:51,775
>> Mm-hm.

146
00:07:51,775 --> 00:07:53,250
>> And that's really the way to go from now on.

147
00:07:53,250 --> 00:07:53,340
>> Right.

148
00:07:53,340 --> 00:07:55,520
>> And you compose things out those compositions.

149
00:07:55,520 --> 00:07:56,085
>> Mm-hm.

150
00:07:56,085 --> 00:07:57,090
>> To restful APIs and the like.

151
00:07:57,090 --> 00:07:58,520
>> Mm-hm.

152
00:07:58,520 --> 00:08:00,890
>> So in this spectrum I, that's why I am not a very fan of

153
00:08:00,890 --> 00:08:04,030
those terms. You know, yes they have a definition. Yes, you can look at them and

154
00:08:04,030 --> 00:08:06,330
apply them. But what's more interesting is

155
00:08:06,330 --> 00:08:09,210
to have a very large, scalable, reliable platform

156
00:08:09,210 --> 00:08:14,090
with rich services that allows you to run, if you want to, VMs, all the way

157
00:08:14,090 --> 00:08:16,180
to compose apps at a very high level.

158
00:08:16,180 --> 00:08:19,510
>> So in, in that sense what I'm hearing you

159
00:08:19,510 --> 00:08:23,080
say is that these distinctions are, are not that important.

160
00:08:23,080 --> 00:08:25,240
>> Architecturally, scientifically, whatever.

161
00:08:25,240 --> 00:08:25,670
>> There is no.

162
00:08:25,670 --> 00:08:26,770
>> I don't think so.

163
00:08:26,770 --> 00:08:28,220
>> There is more of a marketing.

164
00:08:28,220 --> 00:08:31,080
>> Marketing or, or a way to simplify concepts.

165
00:08:31,080 --> 00:08:32,150
>> Okay.

166
00:08:32,150 --> 00:08:36,130
>> Remember cloud computing is still early on. And

167
00:08:36,130 --> 00:08:39,330
we feel early sometimes people have to define terms

168
00:08:39,330 --> 00:08:43,140
just to be able to reason about the concepts. To me speaking

169
00:08:43,140 --> 00:08:45,690
for myself I really think it's far more important to look at the

170
00:08:45,690 --> 00:08:50,440
actual services APIs have and what can you do with them to

171
00:08:50,440 --> 00:08:53,390
make your life easier to develop applications and to run reliably at scale.

172
00:08:55,380 --> 00:08:59,660
>> Now students get to know about these giant scale

173
00:08:59,660 --> 00:09:04,350
services and how cloud computing is enabling the giant scale services.

174
00:09:06,470 --> 00:09:08,940
What do you see as the future evolution of

175
00:09:08,940 --> 00:09:13,243
system structure for providing distributed services? Is it going

176
00:09:13,243 --> 00:09:15,253
to be the same, more of the same, or

177
00:09:15,253 --> 00:09:18,350
is it going to be drastically different in the future?

178
00:09:18,350 --> 00:09:21,080
>> To be honest if I knew exactly I'd be probably

179
00:09:21,080 --> 00:09:24,250
lying. We, nobody knows, exactly. But we can look at the trend.

180
00:09:24,250 --> 00:09:25,271
>> Mm-hm.

181
00:09:25,271 --> 00:09:27,760
>> And the trend, as I alluded to, shifted from

182
00:09:27,760 --> 00:09:31,580
the old days where we used to have three machines

183
00:09:31,580 --> 00:09:32,220
in our data center.

184
00:09:32,220 --> 00:09:32,401
>> Mm-hm.

185
00:09:32,401 --> 00:09:33,490
>> You and I used to have three machines.

186
00:09:33,490 --> 00:09:34,520
>> Yeah.

187
00:09:34,520 --> 00:09:37,770
>> We used to have mainframes bigger than this room we're in at the

188
00:09:37,770 --> 00:09:42,860
moment. Is shifting to more of a scale out model. Where it's built out

189
00:09:42,860 --> 00:09:46,570
of smaller servers, off the shelf components,

190
00:09:46,570 --> 00:09:50,410
and many, many of them. That's dictating

191
00:09:50,410 --> 00:09:53,000
a trend in application structure and format

192
00:09:53,000 --> 00:09:56,948
that's different than before. You are no longer

193
00:09:56,948 --> 00:10:00,182
looking at big SAP boxes and an app that optimizes a

194
00:10:00,182 --> 00:10:04,210
big SAP box. Looking at an application that may have multiple

195
00:10:04,210 --> 00:10:07,860
cores in a box but has to live across boxes, across

196
00:10:07,860 --> 00:10:09,840
servers, and has to deal with failures, and has to deal with

197
00:10:12,360 --> 00:10:18,940
the network, as as a, as a reality. Latency is there and so forth. So the shift

198
00:10:18,940 --> 00:10:23,440
will be more and more towards scale out, horizontal scaling, versus scale up.

199
00:10:23,440 --> 00:10:26,170
And more trend towards simplicity where failures

200
00:10:26,170 --> 00:10:28,315
will happen and you have to optimize for

201
00:10:28,315 --> 00:10:32,000
recovery from failures and to make forward progress.

202
00:10:32,000 --> 00:10:35,530
Said differently all our apps today are what?

203
00:10:37,450 --> 00:10:40,589
You know, back end services to your phone, to your

204
00:10:40,589 --> 00:10:44,043
PC, to your laptop, to your pad, et cetera. They

205
00:10:44,043 --> 00:10:47,660
expect the network to be always there. They expect the

206
00:10:47,660 --> 00:10:49,600
servers to be always there. Of course, this is not

207
00:10:49,600 --> 00:10:52,800
true, but you have to design it as it, to

208
00:10:52,800 --> 00:10:55,600
make sure it can handle failures, for it to appear

209
00:10:55,600 --> 00:10:58,668
to be always there. So this disconnected operation of the

210
00:10:58,668 --> 00:11:02,660
network is important. Caching and, and, the, and the host stack

211
00:11:02,660 --> 00:11:05,100
is important. And when a component fails,

212
00:11:05,100 --> 00:11:06,550
you need to have to state somewhere else.

213
00:11:06,550 --> 00:11:06,870
>> Mm-hm.

214
00:11:06,870 --> 00:11:08,760
>> The truth has to be in the network, not anywhere else.

215
00:11:08,760 --> 00:11:09,192
>> Mm-hm. Mm-hm.

216
00:11:09,192 --> 00:11:11,370
>> So those, I think, trends will only accelerate.

217
00:11:11,370 --> 00:11:12,636
>> Mm-hm. Mm-hm. Mm-hm.

218
00:11:12,636 --> 00:11:15,450
>> Exactly where they're going to be in ten years from now, I'm not sure.

219
00:11:15,450 --> 00:11:15,812
>> Mm-hm.

220
00:11:15,812 --> 00:11:17,280
>> Five years, probably like I described.

221
00:11:17,280 --> 00:11:21,220
>> Mm-hm. Now, so I think you started touching on this already in your

222
00:11:21,220 --> 00:11:27,770
answer. So what do you see changing in the data centers for catering to these

223
00:11:27,770 --> 00:11:30,148
kinds of future evolution of distributed services?

224
00:11:30,148 --> 00:11:35,045
>> Uh,a number of things are changing in a data center. First given the

225
00:11:35,045 --> 00:11:40,230
accounts of scale you have by having the horizontal model, you have a, an

226
00:11:40,230 --> 00:11:45,810
increasing concentration of computing power in a, effectively in a flat network.

227
00:11:45,810 --> 00:11:47,830
>> So, when you said horizontal model.

228
00:11:47,830 --> 00:11:48,130
>> Yes.

229
00:11:48,130 --> 00:11:50,230
>> Perhaps you may want to elaborate it for the students.

230
00:11:50,230 --> 00:11:52,930
>> Okay, so on a horizontal model if you want extra

231
00:11:52,930 --> 00:11:56,650
capacity you end up adding more servers to a

232
00:11:56,650 --> 00:12:01,470
network. So, you may start with one server with maybe

233
00:12:01,470 --> 00:12:03,750
one CPU with multiple cores and a fixed amount

234
00:12:03,750 --> 00:12:06,780
of memory. If you want more capacity, like extra memory

235
00:12:06,780 --> 00:12:09,200
or extra cores, you don't open up the box

236
00:12:09,200 --> 00:12:11,660
and add to it. There's nothing to add to it,

237
00:12:11,660 --> 00:12:14,970
the box is closed. You add more boxes. I'm

238
00:12:14,970 --> 00:12:17,730
being figurative here, but you know what I mean. So,

239
00:12:17,730 --> 00:12:20,070
this is as, to contrast how it used to be

240
00:12:20,070 --> 00:12:22,600
in the past where you bought one big mainframe, one big

241
00:12:22,600 --> 00:12:25,100
chassis, and you added more stuff inside it to make it

242
00:12:25,100 --> 00:12:28,375
bigger. So, you have to know networks. You have to know

243
00:12:28,375 --> 00:12:32,672
distributed systems. It's a fact of life, basically. So the trend

244
00:12:32,672 --> 00:12:34,790
is basically to go that way. If, if you go to

245
00:12:34,790 --> 00:12:38,292
a modern data center now, a truly modern one, you're going

246
00:12:38,292 --> 00:12:42,590
to find a network which is fairly flat network where it,

247
00:12:42,590 --> 00:12:47,410
it caters both to south, east traffic, and west,

248
00:12:47,410 --> 00:12:50,300
east, west traffic. Which in different words, it can

249
00:12:50,300 --> 00:12:52,860
do well to take requests in and send them

250
00:12:52,860 --> 00:12:56,180
back out, or to do traffic within the network.

251
00:12:56,180 --> 00:12:57,970
>> Meaning computations that are going inside.

252
00:12:57,970 --> 00:12:59,330
>> Computation and data replication.

253
00:12:59,330 --> 00:13:00,650
>> Okay.

254
00:13:00,650 --> 00:13:02,652
>> So that's a trend that's definitely happening, so,

255
00:13:02,652 --> 00:13:07,560
scale out model of many, many servers. Typically commodity service,

256
00:13:07,560 --> 00:13:09,866
which is fairly small. They increase of course

257
00:13:09,866 --> 00:13:12,240
with Moore's law, but still are fairly small. A

258
00:13:12,240 --> 00:13:13,770
network which is fairly flat, so you you

259
00:13:13,770 --> 00:13:16,145
can do a lot of traffic between them. And

260
00:13:16,145 --> 00:13:18,690
applications that are basically laid over that network.

261
00:13:19,700 --> 00:13:23,090
And with the app itself is mostly, mostly structured

262
00:13:23,090 --> 00:13:25,790
in way it can withstand any piece going

263
00:13:25,790 --> 00:13:30,424
down. And the state, replicated in different data tiers.
