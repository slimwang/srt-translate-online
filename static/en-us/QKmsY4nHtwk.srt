1
00:00:00,170 --> 00:00:04,470
So we're going to use package sk learns knears neighbors implementation.

2
00:00:04,470 --> 00:00:08,580
In the case of sk learn it is called k neighbors regressor.

3
00:00:08,580 --> 00:00:12,720
For fun I created a knears neighbors model using five neighbors and

4
00:00:12,720 --> 00:00:14,690
one using three neighbors.

5
00:00:14,690 --> 00:00:17,030
Lets collect our training data.

6
00:00:17,030 --> 00:00:20,540
And we'll use it to train our three nearest neighbors model.

7
00:00:20,540 --> 00:00:24,750
Now let's create a list of values containing the error values for

8
00:00:24,750 --> 00:00:26,440
the training data.

9
00:00:26,440 --> 00:00:31,200
Here's a plot of the histogram of the signed error on the training set.

10
00:00:31,200 --> 00:00:34,160
As you can see, it looks like performance on the training set is quite

11
00:00:35,490 --> 00:00:40,780
good it had a mean absolute error of 1,876 seconds.

12
00:00:40,780 --> 00:00:42,290
Although 50% of the time,

13
00:00:42,290 --> 00:00:46,220
it predicts time correctly within eight seconds or better.

14
00:00:46,220 --> 00:00:47,970
Let's look at performance on the test set.

15
00:00:49,520 --> 00:00:53,540
As you can see, the model did quite well in the test set as well.

16
00:00:54,900 --> 00:01:00,351
The predictor had a mean absolute error of 1,837 seconds.

17
00:01:00,351 --> 00:01:02,230
Although 75% of the time.

18
00:01:03,630 --> 00:01:08,260
It predicts time correctly to within 32 seconds or better.

19
00:01:08,260 --> 00:01:09,120
As you can see,

20
00:01:09,120 --> 00:01:14,690
our knears neighbors fit totally blew away our initial exponential model.

21
00:01:14,690 --> 00:01:17,500
Just to put that in perspective, let's examine how far we've come.

22
00:01:18,700 --> 00:01:23,340
As you can see, adding the additional features of text length and

23
00:01:23,340 --> 00:01:26,475
mention distance and then using the updated model of

24
00:01:26,475 --> 00:01:31,540
knears neighbors made a dramatic difference in our prediction accuracy.

25
00:01:31,540 --> 00:01:36,138
We went from guessing 8585 and 1/2 seconds.

26
00:01:37,195 --> 00:01:42,680
And being right to within about five minutes, half of the time to using a knears

27
00:01:42,680 --> 00:01:48,710
neighbors predictor, that uses elapse time, length of the previous tweet.

28
00:01:48,710 --> 00:01:52,370
And amount of time elapsed since the previous mention.

29
00:01:52,370 --> 00:01:57,030
In order to predict the amount of time remaining until the next tweet.

30
00:01:57,030 --> 00:01:58,540
Using that model.

31
00:01:58,540 --> 00:02:04,480
Were able to guess within 32 seconds of accuracy 75% of the time.

32
00:02:04,480 --> 00:02:05,320
Looks pretty good.

33
00:02:06,430 --> 00:02:09,729
In the next video we'll think about some possible ways forward.
