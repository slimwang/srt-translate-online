1
00:00:00,220 --> 00:00:03,200
How can we check if all the images
on a site have been optimized?

2
00:00:04,200 --> 00:00:07,280
Remember that in order to serve
the smallest possible image file on your

3
00:00:07,280 --> 00:00:11,840
site, you need to make sure you've run
images through optimization tools.

4
00:00:11,840 --> 00:00:16,129
Now, one great tool for
checking this is PageSpeed Insights.

5
00:00:16,129 --> 00:00:18,880
Let's use that to check
a page from our website.

6
00:00:18,880 --> 00:00:21,140
One image that needs some help.

7
00:00:21,140 --> 00:00:24,190
We can also use PageSpeed Insights
from the dev tools.

8
00:00:25,760 --> 00:00:26,680
Just click Analyze.

9
00:00:27,760 --> 00:00:32,210
Best of all, there's
a PageSpeed Insights API that lets you

10
00:00:32,210 --> 00:00:34,990
incorporate checking
within your workflow.

11
00:00:34,990 --> 00:00:38,830
Here I'm running a code command to
make an HTTP request from a terminal.

12
00:00:39,910 --> 00:00:44,280
Key here holds the value of my
API key for PageSpeed Insights.

13
00:00:44,280 --> 00:00:48,160
And I'm redirecting the response
of that request to psi.jason.

14
00:00:48,160 --> 00:00:51,010
Let's open up that file and
take a look at the output.

15
00:00:51,010 --> 00:00:56,480
Looks like psi found one image
that needs to be optimized,

16
00:00:56,480 --> 00:00:58,700
same as it did from the website.

17
00:00:58,700 --> 00:01:02,380
You could easily incorporate this
into build tests when pushing code to

18
00:01:02,380 --> 00:01:06,630
a repository, for example using
a task runner such as grunt.

19
00:01:06,630 --> 00:01:10,920
In fact there's even a grunt plug-in for
PageSpeed Insights.

20
00:01:10,920 --> 00:01:14,820
For more information about using
PageSpeed to check images with grunt

21
00:01:14,820 --> 00:01:16,340
take a look at the link below the video.
