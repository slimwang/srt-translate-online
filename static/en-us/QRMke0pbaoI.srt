1
00:00:00,790 --> 00:00:04,480
There's a lot going on here and
some of it we have not discussed before.

2
00:00:04,480 --> 00:00:05,300
As an example,

3
00:00:05,300 --> 00:00:09,700
the exclamation marks indicate these
are implicitly unwrapped optionals.

4
00:00:09,700 --> 00:00:14,020
A concept in swift that you'll learn
in the UI kit fundamentals lesson

5
00:00:14,020 --> 00:00:15,280
in a later part of the course.

6
00:00:16,480 --> 00:00:19,160
Let's break down the audio
recorder code piece by piece.

7
00:00:20,560 --> 00:00:23,130
You can see we first
import AVFoundation,

8
00:00:23,130 --> 00:00:25,970
the framework that has
AV audio recorder.

9
00:00:25,970 --> 00:00:30,060
Without this import, Xcode won't know
about any AVFoundation classes, and

10
00:00:30,060 --> 00:00:31,705
our IOS app won't compile.

11
00:00:31,705 --> 00:00:35,610
If we scroll down to the record
audio function, here,

12
00:00:35,610 --> 00:00:38,700
we see what looks like the code
to get the directory path and

13
00:00:38,700 --> 00:00:41,700
build a full path,
including the file name.

14
00:00:41,700 --> 00:00:46,644
In the essence, this grabs the pitch
perfect's document directory and

15
00:00:46,644 --> 00:00:49,820
stores it as a string in
the dirPath constant.

16
00:00:49,820 --> 00:00:51,760
Later in this course,
when we get to persistence,

17
00:00:51,760 --> 00:00:55,990
you'll learn the various directories and
storage locations available in IOS.

18
00:00:55,990 --> 00:00:58,700
For now, we just need a place
to store the audio recording and

19
00:00:58,700 --> 00:01:00,720
the documents directory
will work just fine.

20
00:01:01,860 --> 00:01:05,750
A few lines down, we make an array with
the directory path and the file name.

21
00:01:06,960 --> 00:01:11,280
Join those together and create
a URL to use with AVAudioRecorder.

22
00:01:12,610 --> 00:01:15,490
We also print out the path so
you can see it in the console.

23
00:01:16,620 --> 00:01:21,680
Next up, we grab the AVAudioSession and
set up the category to play and record.

24
00:01:21,680 --> 00:01:26,140
In order to either record or playback
audio, we need an audio session.

25
00:01:26,140 --> 00:01:29,650
There's just one that exists for
the entire time your app is running and

26
00:01:29,650 --> 00:01:32,580
we grab it with a shared
instance method.

27
00:01:32,580 --> 00:01:37,670
The AV audio session class is basically
an abstraction over the audio hardware.

28
00:01:37,670 --> 00:01:39,640
Since there's only one audio hardware,

29
00:01:39,640 --> 00:01:42,035
there's only one instance
of AVAudioSession.

30
00:01:43,330 --> 00:01:46,870
You grab the shared instance that's
used by all apps on the iOS device.

31
00:01:47,950 --> 00:01:50,640
This is a common pattern you
will find in cocoa touch.

32
00:01:50,640 --> 00:01:52,500
When you reach into the iOS API and

33
00:01:52,500 --> 00:01:56,660
grab a singleton, it is usually
a function called shared instance.

34
00:01:56,660 --> 00:02:00,380
So with the AVAudioSession set up,
we can set up the AVAudioRecorder.

35
00:02:01,840 --> 00:02:05,100
Here we see the line with
AVAudioRecorder inside of a try

36
00:02:05,100 --> 00:02:08,330
statement, without handling if it fails.

37
00:02:08,330 --> 00:02:10,520
We will cover error handling
later in this course.

38
00:02:10,520 --> 00:02:13,060
For now,
we can just assume it will work.

39
00:02:13,060 --> 00:02:16,410
We tell it to prepare recording and
start recording.

40
00:02:16,410 --> 00:02:19,890
That's it,
AVAudioRecorder is now recording audio.
