1
00:00:00,180 --> 00:00:04,270
Let's look at the solution for the part two of our one cycle quiz.

2
00:00:04,270 --> 00:00:08,010
Where we are looking at reservation stations and trying to figure out

3
00:00:08,010 --> 00:00:12,550
what's happening to them. To figure out what happens to reservation stations,

4
00:00:12,550 --> 00:00:16,900
we need to figure out whether there is something that issues. So

5
00:00:16,900 --> 00:00:21,250
does this instruction issue? What happens to the instruction that is

6
00:00:21,250 --> 00:00:26,420
broadcasting its result and is there any result capturing in

7
00:00:26,420 --> 00:00:31,780
the remaining reservation stations? We can do this in any order but

8
00:00:31,780 --> 00:00:35,440
we have to be careful if multiple updates are made into the same field. So

9
00:00:35,440 --> 00:00:39,710
let's try to do it just, you know, let's firs see what issuing is going to do.

10
00:00:39,710 --> 00:00:43,670
Well, when we are issuing we are going to look for a free reservation station.

11
00:00:43,670 --> 00:00:48,400
There is one. So, this reservation station becomes occupied.

12
00:00:49,520 --> 00:00:54,160
This is an add instruction so we put add here. And it adds F0 and F1.

13
00:00:54,160 --> 00:01:00,490
We consult the Rat here to check what are we going to do.

14
00:01:00,490 --> 00:01:04,851
Both of these are pointing at reservation stations. So

15
00:01:04,851 --> 00:01:07,865
our first operand is whatever RS0 produces. And

16
00:01:07,865 --> 00:01:14,320
our second operand is whatever RS1 produces. But that's not the end.

17
00:01:14,320 --> 00:01:18,260
We also need to consider what happens when a result is broadcast.

18
00:01:19,750 --> 00:01:25,360
What happens then, is that this instruction frees its reservation station,

19
00:01:25,360 --> 00:01:30,140
so this one is not going to be occupied anymore at the end of this cycle.

20
00:01:30,140 --> 00:01:33,740
I put an x here, but what you should have done is not select this one

21
00:01:33,740 --> 00:01:37,810
as still busy. This one of course, remains busy.

22
00:01:38,860 --> 00:01:44,257
The result that is broadcast here is captured by anybody waiting for R 0.

23
00:01:44,257 --> 00:01:52,430
So this here becomes 4.4, thus this is a change that you needed to make.

24
00:01:52,430 --> 00:01:55,603
This one here stays the same, actually this reservation station is free.

25
00:01:55,603 --> 00:02:00,654
So it doesn't matter what is here, but it stays the same. And then this one,

26
00:02:00,654 --> 00:02:06,786
that we just put in our reservation station, needs to capture the 4.4.

27
00:02:06,786 --> 00:02:10,919
Otherwise things are not going to go well. So this needs to happen in the same

28
00:02:10,919 --> 00:02:15,790
cycle. The processor won't work well if we left it at RS0, because RS0 is never

29
00:02:15,790 --> 00:02:21,290
going to broadcast anything. This instruction is still waiting for RS1, and

30
00:02:21,290 --> 00:02:27,810
that's fine, RS1 hasn't executed yet. So this is all that happens

31
00:02:27,810 --> 00:02:33,200
to reservation stations as a result of things that happen in this cycle.
