1
00:00:00,000 --> 00:00:02,000
And let's go through each of the options.

2
00:00:02,000 --> 00:00:04,000
This first option will not work.

3
00:00:04,000 --> 00:00:06,000
Since ta_data is a tuple

4
00:00:06,000 --> 00:00:11,000
containing 3 elements, we need to reference each of those 3 elements

5
00:00:11,000 --> 00:00:13,000
for Python to understand what we want.

6
00:00:13,000 --> 00:00:15,000
Here we only reference name, country;

7
00:00:15,000 --> 00:00:18,000
we don't even reference course at all,

8
00:00:18,000 --> 00:00:21,000
so Python gets confused and if you try to run this you will get an error.

9
00:00:21,000 --> 00:00:24,000
The second option looks great.

10
00:00:24,000 --> 00:00:26,000
It's readable; name, plus lives in country

11
00:00:26,000 --> 00:00:28,000
is very easy to understand.

12
00:00:28,000 --> 00:00:31,000
It references all 3 variables in ta_data.

13
00:00:31,000 --> 00:00:35,000
Looks like I forgot my closed brackets here.

14
00:00:35,000 --> 00:00:38,000
This third option will also work.

15
00:00:38,000 --> 00:00:40,000
It has 2 variable names,

16
00:00:40,000 --> 00:00:44,000
and we reference all 3 elements in the tuple,

17
00:00:44,000 --> 00:00:46,000
but I don't like this one as much as the second one.

18
00:00:46,000 --> 00:00:49,000
The reason being "x lives in y"

19
00:00:49,000 --> 00:00:53,000
doesn't remind me that I'm talking about a name and a country.

20
00:00:53,000 --> 00:00:55,000
As far as readability is concerned,

21
00:00:55,000 --> 00:00:57,000
I prefer option 2.

22
00:00:57,000 --> 00:01:00,000
And, you can see, if we try to run option 1,

23
00:01:00,000 --> 00:01:04,000
we get an error message--value error--

24
00:01:04,000 --> 00:01:06,000
too many values to unpack.

25
00:01:06,000 --> 00:01:08,000
If we run option 2 or 3 however,

26
00:01:08,000 --> 00:01:10,000
we get exactly what we want.
