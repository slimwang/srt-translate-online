1
00:00:00,709 --> 00:00:06,042
[Wes] Ok, I'm here at Mozilla, which is responsible for the Open Source Firefox web browser.

2
00:00:06,042 --> 00:00:09,642
And it's also where we find Brendan Eich, the designer of JavaScript.

3
00:00:09,642 --> 00:00:11,942
Let's go in to learn more about that language.

4
00:00:11,942 --> 00:00:17,761
So in this class we handle a very restricted subset of JavaScript.

5
00:00:17,761 --> 00:00:22,676
For example, we don't pay very much attention, or any attention to the Document Object Model.

6
00:00:22,676 --> 00:00:27,092
One question that one might have is: how really useful is to focus on a subset

7
00:00:27,092 --> 00:00:30,177
of Javascript or HTML.

8
00:00:30,177 --> 00:00:35,927
Can the skills that we'll learn in making a lexer, a parser, an interpreter for a smaller language

9
00:00:35,927 --> 00:00:38,838
carry over for important tasks in the real world.

10
00:00:38,838 --> 00:00:46,092
[Brendan]The answer is yes. Mozilla and other working browser in the Web

11
00:00:46,092 --> 00:00:49,427
often are doing with a subset of JavaScript.

12
00:00:49,427 --> 00:00:53,642
There is a subset, not quite a subset, called JSON

13
00:00:53,642 --> 00:00:56,426
that is quite popular, for describing trees of data.

14
00:00:56,426 --> 00:01:01,641
And it turns out that we want to parse JSON very quickly

15
00:01:01,641 --> 00:01:08,792
in order to have Javascript to "eval()".

16
00:01:08,792 --> 00:01:17,108
So, in our implementation we actually do a very quick subset's parse in the middle

17
00:01:17,108 --> 00:01:20,492
of line for JSON, because that's such a common case.

18
00:01:20,492 --> 00:01:24,476
And if we can parse this JSON, which is asubset, JavaScript would be much more efficient.

19
00:01:24,476 --> 00:01:29,658
I also observed a lot of JavaScript libraries, that have almost 'query' in their name,

20
00:01:29,658 --> 00:01:34,442
are doing a sort of compiled generated functions that are optimized to match

21
00:01:34,442 --> 00:01:37,792
certain queries against the Document Object Model.

22
00:01:37,792 --> 00:01:39,892
And so there's co-generation going on.

23
00:01:39,892 --> 00:01:44,593
There are some partial evaluations going on, there is a subset of the language been used

24
00:01:44,593 --> 00:01:46,916
to construct simple matches and rules, for matching trees.
