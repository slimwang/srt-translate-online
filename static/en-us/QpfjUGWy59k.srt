1
00:00:00,400 --> 00:00:02,240
Welcome back to Computer Vision.

2
00:00:02,240 --> 00:00:05,300
Today, we're going to
continue on our long and, and

3
00:00:05,300 --> 00:00:07,970
winding excursion through tracking.

4
00:00:07,970 --> 00:00:09,700
And in particular,
what we're going to do, today,

5
00:00:09,700 --> 00:00:12,160
is we're going to revisit
the whole notion of base,

6
00:00:12,160 --> 00:00:17,180
based fi filter tracking or,
or, or Bayesian tracking.

7
00:00:17,180 --> 00:00:23,120
And sort of develop a method
that allows us to do that well.

8
00:00:23,120 --> 00:00:26,140
So you remember the tracking
with dynamics, right?

9
00:00:26,140 --> 00:00:30,570
So the whole idea was, because we're
tracking something that's moving with

10
00:00:30,570 --> 00:00:34,380
respect to the imagery, we're going to
learn something about the dynamics and

11
00:00:34,380 --> 00:00:36,240
use the dynamics in order
to make predictions.

12
00:00:36,240 --> 00:00:38,960
And we're doing this so that we can
limit the area of search that we're

13
00:00:38,960 --> 00:00:43,550
looking in, and also so that we can
get a better total estimate when

14
00:00:43,550 --> 00:00:47,450
we're done under the assumption that
the things we were trying to track it's,

15
00:00:47,450 --> 00:00:51,110
you can't perfectly detect them and
it's noisy to begin with.

16
00:00:51,110 --> 00:00:55,170
And we're basically making an assumption
that there's some sort of smooth

17
00:00:55,170 --> 00:00:59,010
motion going on and that essentially
our dynamics don't surprise us is,

18
00:00:59,010 --> 00:01:00,310
is the underlying element.

19
00:01:00,310 --> 00:01:03,950
So last time we developed what
was called the Kalman filter.

20
00:01:03,950 --> 00:01:07,620
And the Kalman filter was for
linear dynamical systems,

21
00:01:07,620 --> 00:01:11,400
dynamic systems where you
had Gaussian noise contexts.

22
00:01:11,400 --> 00:01:16,570
So what we meant by that was the motion
could be predicted by a linear

23
00:01:17,950 --> 00:01:22,220
factor applied to the motion that you've
estimated and then you add in some

24
00:01:22,220 --> 00:01:26,100
Gaussian noise, if you were thinking
about what the uncertainties are.

25
00:01:26,100 --> 00:01:27,170
Same thing with our measurements.

26
00:01:27,170 --> 00:01:31,790
They were a linear function of
the state, and then there was noise, and

27
00:01:31,790 --> 00:01:34,830
what was nice about it is everything,
prediction,

28
00:01:34,830 --> 00:01:38,610
correction your lunch break,
it's all Gaussian, all right?

29
00:01:38,610 --> 00:01:41,420
And so the only thing you have
to do is maintain the mean and

30
00:01:41,420 --> 00:01:46,180
the covariances of these Gaussians and
it just works in one d or n d, etc.

31
00:01:46,180 --> 00:01:47,450
It's really easy.

32
00:01:47,450 --> 00:01:49,266
And the calculations are pretty
straightforward also.

33
00:01:49,266 --> 00:01:50,880
I mean the,
the equations looked a little ugly,

34
00:01:50,880 --> 00:01:53,830
but it's just a bunch of matrix
multiplies and a couple of inverses
