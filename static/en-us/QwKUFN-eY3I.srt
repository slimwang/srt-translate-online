1
00:00:00,190 --> 00:00:05,630
Here's an example of extending our previous top level description with

2
00:00:05,630 --> 00:00:09,900
some properties. We still have our client and server components.

3
00:00:09,900 --> 00:00:14,300
We still have our RPC connector. We still have our attachments. However, we've

4
00:00:14,300 --> 00:00:19,920
added some property statements within the descriptions of the components and

5
00:00:19,920 --> 00:00:26,280
connector. In particular, the first property is labeled Aesop-style, and

6
00:00:26,280 --> 00:00:32,640
it's some kind of style ID. Second one is Unicon-style. Now, be aware that Aesop

7
00:00:32,640 --> 00:00:38,290
and Unicon are other architectural description languages with their own tools.

8
00:00:38,290 --> 00:00:43,690
By the way, I've indicated here a comment using C++'s slash, slash commenting

9
00:00:43,690 --> 00:00:48,080
style. For the second component, the server component, there are two properties,

10
00:00:48,080 --> 00:00:54,530
and these are not intended for particular external architectural style

11
00:00:54,530 --> 00:00:59,525
architectural description language. The first one is labeled idempotence, and

12
00:00:59,525 --> 00:01:05,290
it's got a Boolean value indicated as true. The second one is an integer,

13
00:01:05,290 --> 00:01:11,700
including a maximum concurrent clients that this particular component can,

14
00:01:11,700 --> 00:01:14,840
is capable of dealing with. As far as the connector is concerned,

15
00:01:14,840 --> 00:01:17,920
there are properties for synchronization. For the maximum number of

16
00:01:17,920 --> 00:01:23,360
roles that that connector can have and for a particular protocol, in this case,

17
00:01:23,360 --> 00:01:28,950
using the Wright, as in Frank Lloyd Wright, architectural description language.
