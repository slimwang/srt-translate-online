1
00:00:01,720 --> 00:00:06,270
I think one advantage that we may have is because all of

2
00:00:06,270 --> 00:00:10,760
the different parts are sharing the memory, sharing the data.

3
00:00:10,760 --> 00:00:15,630
The porting may be easier, or like the interplay between components might be

4
00:00:15,630 --> 00:00:19,220
easier, but it seems like maintaining any kind of change for

5
00:00:19,220 --> 00:00:22,950
the system in the long run is going to be more difficult than if you had

6
00:00:22,950 --> 00:00:26,690
the components kind of isolated and the functionalities isolated.

7
00:00:26,690 --> 00:00:30,590
>> So, [COUGH] we have shared data, it's all in memory.

8
00:00:30,590 --> 00:00:33,730
That's going to be quite simple for

9
00:00:33,730 --> 00:00:36,170
all the components to get out the information.

10
00:00:36,170 --> 00:00:38,090
It's also going to be very efficient.

11
00:00:38,090 --> 00:00:38,740
Okay.

12
00:00:38,740 --> 00:00:42,030
There's no there's no function calls involved in getting that data,

13
00:00:42,030 --> 00:00:44,230
you just go and get the data, okay.

14
00:00:44,230 --> 00:00:48,020
On the other hand, if we wanted to change the way that that data is represented,

15
00:00:48,020 --> 00:00:49,272
every one of the components would break,

16
00:00:49,272 --> 00:00:52,880
all right, because they all have to know how to get the data out.

17
00:00:52,880 --> 00:00:56,390
So we have a plus with respect to efficiency and simplicity, and

18
00:00:56,390 --> 00:01:01,100
we have a negative with respect to resilience to changes in representation.
