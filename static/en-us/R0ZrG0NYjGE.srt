1
00:00:00,260 --> 00:00:03,209
Constraint layout allows you to
create a complex layout without

2
00:00:03,209 --> 00:00:05,879
having to nest view
groups inside each other.

3
00:00:05,879 --> 00:00:08,699
It's very similar to a relative
layout in that older views

4
00:00:08,699 --> 00:00:12,339
are laid out relative to each other,
or to the parent layout itself.

5
00:00:12,339 --> 00:00:15,500
But the underlying structure of
a constraint layout is much simpler.

6
00:00:15,500 --> 00:00:18,769
And hence, it usually
outperforms other layout types.

7
00:00:18,769 --> 00:00:21,169
In this lesson try app,
you're going to implement and

8
00:00:21,170 --> 00:00:23,030
design a boarding pass application.

9
00:00:23,030 --> 00:00:26,520
Something similar to the paper one that
you get when you're boarding a plane.

10
00:00:26,519 --> 00:00:29,149
A typical boarding pass tells
you important information

11
00:00:29,149 --> 00:00:33,170
about where to go inside the airport,
which terminal and which gate number.

12
00:00:33,170 --> 00:00:35,670
It also tells you what seat
number inside the plane.

13
00:00:35,670 --> 00:00:39,399
They also usually contain a barcode that
will be scanned as you board the plane.

14
00:00:39,399 --> 00:00:42,789
The cool thing about smartphones is
that you can get live information and

15
00:00:42,789 --> 00:00:44,500
updates to your phone straight away.

16
00:00:44,500 --> 00:00:47,500
Like gate changes, or
approaching boarding times, so

17
00:00:47,500 --> 00:00:50,710
that all that can be integrated in
your boarding pass application.

18
00:00:50,710 --> 00:00:54,130
We will use a constraint layout to
build this design from scratch.

19
00:00:54,130 --> 00:00:57,150
But before that, let's start and
make sure that you've got the constraint

20
00:00:57,149 --> 00:00:59,390
layout libraries set up
in your Android Studio.

