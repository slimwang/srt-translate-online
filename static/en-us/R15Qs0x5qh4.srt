1
00:00:00,110 --> 00:00:04,268
Let's look at the first one. This variable declaration says var x equals 13.

2
00:00:04,268 --> 00:00:08,760
Well, var isn't a type that we've seen yet. So it looks like the answer is D.

3
00:00:08,760 --> 00:00:13,940
The variable has a bad type. Let's look at the next one. Int X equals in

4
00:00:13,940 --> 00:00:19,670
quotation marks 13. Well, int usually takes a number. And 13 is actually a

5
00:00:19,670 --> 00:00:24,300
string. So it looks like these don't match. So the answer is c. The variable

6
00:00:24,300 --> 00:00:30,910
type doesn't match the initial value type. The next one, double x equals 13.0.

7
00:00:30,910 --> 00:00:35,740
Well, we're missing the semicolon. That was an option. Looks like F. Int lucky

8
00:00:35,740 --> 00:00:41,580
number equals 13. That one's a little bit trickier, but it looks like there's a

9
00:00:41,580 --> 00:00:45,890
space in what we meant to be our variable name, lucky number. We can't have

10
00:00:45,890 --> 00:00:49,580
spaces in variable names. they can only contain letters and numbers, so that

11
00:00:49,580 --> 00:00:55,700
would be a, x equals 13. Well, we don't know if this is right or not because we

12
00:00:55,700 --> 00:01:00,120
don't know if x is actually an int. The answer is g, variable declarations must

13
00:01:00,120 --> 00:01:05,280
have types. Int x, we haven't given any initial value. It's always a good idea

14
00:01:05,280 --> 00:01:10,503
to include an initial value. Int lucky number equals 13. This one looks good to

15
00:01:10,503 --> 00:01:12,798
me, so there is no mistake.
