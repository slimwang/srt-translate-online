1
00:00:00,082 --> 00:00:04,342
Well, in this operation, we're copying some memory in to d_arr1.

2
00:00:04,342 --> 00:00:08,578
We're operating in stream1 and then the kernel is launched in stream2,

3
00:00:08,578 --> 00:00:11,697
so it can proceed immediately and operate on d_arr2.

4
00:00:11,697 --> 00:00:15,912
Both of these operations will complete in 1 second. Everything's done in 1 second.

5
00:00:15,912 --> 00:00:18,095
And this one is a bit of a trick question.

6
00:00:18,095 --> 00:00:21,657
Once again, we have 2 operations. They're in different streams.

7
00:00:21,657 --> 00:00:25,606
So it's correct to say that the final result will be completed in 1 second.

8
00:00:25,606 --> 00:00:31,249
But hopefully you noticed that we're both copying some information into d_arr1

9
00:00:31,249 --> 00:00:34,372
and at the same time, because we didn't wait to launch the kernel,

10
00:00:34,372 --> 00:00:36,884
we're operating on d_arr1.

11
00:00:36,884 --> 00:00:38,944
We're doing something with contents of d_arr1,

12
00:00:38,944 --> 00:00:41,897
even as it's being overwritten by the cudaMemcpyAsync.

13
00:00:41,897 --> 00:00:43,988
And so while it's true that we'll complete in 1 second,

14
00:00:43,988 --> 00:00:45,682
we're going to get the wrong answer.
