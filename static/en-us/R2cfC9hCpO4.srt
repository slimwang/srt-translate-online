1
00:00:00,720 --> 00:00:03,530
Let's get back to the HTTP request.

2
00:00:03,530 --> 00:00:07,070
We need to specify some additional
details that are essential

3
00:00:07,070 --> 00:00:08,990
before establishing
the network connection.

4
00:00:10,160 --> 00:00:15,285
So far the HttpUrlConnection object only
contains the destination we want for

5
00:00:15,285 --> 00:00:19,025
this request, we still need to define
the action that the server should

6
00:00:19,025 --> 00:00:21,275
perform on the request.

7
00:00:21,275 --> 00:00:25,865
This is expressed using one of the HTTP
verbs we described earlier such as GET

8
00:00:25,865 --> 00:00:27,335
or POST.

9
00:00:27,335 --> 00:00:32,220
The next step is to make sure you
set the desired HTTP method which

10
00:00:32,220 --> 00:00:37,450
allows you to be explicit about what
exactly want to do with HTTP connection.

11
00:00:37,450 --> 00:00:43,370
There are few common HTTP method types
or actions that you should be aware of.

12
00:00:43,370 --> 00:00:45,530
When we're getting information
to be return to us.

13
00:00:45,530 --> 00:00:47,300
The best method to use is GET.

14
00:00:47,300 --> 00:00:50,650
There are several
methods to use in HTTP.

15
00:00:50,650 --> 00:00:55,880
Well get is the most commonly used
option, POST is also frequently used

16
00:00:55,880 --> 00:00:59,950
when you need to update some information
on a server such as when you update

17
00:00:59,950 --> 00:01:04,950
a blog post or you're entering billing
information or shopping online.

18
00:01:06,590 --> 00:01:09,950
In other words,
a GET request is typically

19
00:01:09,950 --> 00:01:14,780
reading information from the server and
sending it back to the client.

20
00:01:14,780 --> 00:01:18,390
Well a POST request is generally
contains information to be written to

21
00:01:18,390 --> 00:01:19,830
the server.

22
00:01:19,830 --> 00:01:21,690
Check out the list and
notes for links and

23
00:01:21,690 --> 00:01:25,079
where you can learn more about
the various other HTTP methods.

24
00:01:26,170 --> 00:01:29,500
For example,
when you enter a URL into a web browser,

25
00:01:29,500 --> 00:01:34,230
a GET request containing the destination
URL is generated and sent to the server.

26
00:01:34,230 --> 00:01:37,730
This request also contains a header
section which includes metadata

27
00:01:37,730 --> 00:01:39,040
about the request.

28
00:01:39,040 --> 00:01:41,330
This includes things like
what types of languages and

29
00:01:41,330 --> 00:01:44,170
encodings the client can accept,
an information about

30
00:01:44,170 --> 00:01:47,418
the client has operating system
in the screen dimensions.

31
00:01:47,418 --> 00:01:50,380
Mobile apps do the exact same thing,

32
00:01:50,380 --> 00:01:53,410
when they are requesting
information from a server.

33
00:01:53,410 --> 00:01:57,200
So how do you know what request
method to set, while you can check

34
00:01:57,200 --> 00:02:00,860
the documentation for the given
API they are using to confirm it.

35
00:02:01,960 --> 00:02:07,160
Each API endpoint should be explicitly
documented with a HTTP action required.

36
00:02:07,160 --> 00:02:12,120
It should be consistent with the GET and
POST behavior we explained earlier

37
00:02:12,120 --> 00:02:17,000
in cases where no action is
specified GET is typically assumed.

38
00:02:17,000 --> 00:02:20,460
For example,
let's go back to the Twitter public API.

39
00:02:20,460 --> 00:02:23,940
There are many endpoints provided
to fetch information about users,

40
00:02:23,940 --> 00:02:26,520
tweets, friends or account information.

41
00:02:26,520 --> 00:02:30,150
Twitter specifies up front whether
any of these endpoints are GET or

42
00:02:30,150 --> 00:02:32,040
POST requests.

43
00:02:32,040 --> 00:02:36,800
Let's click on this API endpoint
which let's us get the most recent

44
00:02:36,800 --> 00:02:38,160
tweets posted by a user.

45
00:02:39,380 --> 00:02:42,960
If I scroll down a bit I
can find the resource URL

46
00:02:42,960 --> 00:02:45,540
where we can make the HTTP request.

47
00:02:45,540 --> 00:02:48,560
And GET is the HTTP request
method type because we're

48
00:02:48,560 --> 00:02:51,890
reading the existing tweets
from the Twitter server.

49
00:02:51,890 --> 00:02:55,770
There are many other examples where we
make GET requests to get the list of

50
00:02:55,770 --> 00:02:59,340
direct messages or
lists of friends from a user.

51
00:02:59,340 --> 00:03:03,820
On the other hand, if we want to
write new data to the Twitter server,

52
00:03:03,820 --> 00:03:06,090
we need to use a POST request.

53
00:03:06,090 --> 00:03:09,560
The API endpoint allows us
to point to a new tweet.

54
00:03:09,560 --> 00:03:15,150
Just to make a connection to a new
URL and specify the POST method type.

55
00:03:15,150 --> 00:03:18,360
Remember that if you make a POST request

56
00:03:18,360 --> 00:03:21,580
you need to send the new
data along as well.

57
00:03:21,580 --> 00:03:25,540
In this case,
the message text for a new tweet.

58
00:03:25,540 --> 00:03:29,450
POST is used when you're writing to
the server, which means you're creating,

59
00:03:29,450 --> 00:03:32,070
deleting, or updating an entity.

60
00:03:32,070 --> 00:03:35,220
This will make the new information
available to other clients

61
00:03:35,220 --> 00:03:38,570
when they perform a GET request for
the latest Tweets.

62
00:03:38,570 --> 00:03:42,080
Here's another quick example,
the Instagram API.

63
00:03:42,080 --> 00:03:45,730
These endpoints allow you to
get information about a user or

64
00:03:45,730 --> 00:03:49,990
the images or video files that
they recently posted or liked.

65
00:03:49,990 --> 00:03:53,050
All of these requests are reading
information from the server so

66
00:03:53,050 --> 00:03:55,130
they are all GET requests.

67
00:03:55,130 --> 00:03:59,420
On the other hand, the Instagram
comments API allows you to get or

68
00:03:59,420 --> 00:04:01,710
modify the comments on POST.

69
00:04:01,710 --> 00:04:06,100
Here you can see the request
method type is GET, POST or DEL.

70
00:04:06,100 --> 00:04:10,170
Sometimes you'll see
DEL as its own action,

71
00:04:10,170 --> 00:04:13,165
whereas POST will be for
creating a comment.

72
00:04:13,165 --> 00:04:15,560
DEL is for deleting a comment.

73
00:04:15,560 --> 00:04:19,310
Sometimes all of this behavior is
combined in a general POST request that

74
00:04:19,310 --> 00:04:22,970
handles any type of modification
on the server data.

75
00:04:22,970 --> 00:04:25,400
It just depends on how
the API was built.

76
00:04:25,400 --> 00:04:29,490
For a list of all the API request
methods, see the link below.

77
00:04:29,490 --> 00:04:31,090
But for the purposes of this course,

78
00:04:31,090 --> 00:04:35,200
we just want you to become comfortable
with the distinction between GET verses

79
00:04:35,200 --> 00:04:40,090
POST, or reading from verses
writing to the web server.
