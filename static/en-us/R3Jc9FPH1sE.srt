1
00:00:00,410 --> 00:00:02,980
We saw earlier that pods
can be restarted for

2
00:00:02,980 --> 00:00:06,260
all kinds of reasons like
fail liveliness checks,

3
00:00:06,260 --> 00:00:11,200
readiness checks, a command,
and this leads to a problem.

4
00:00:11,200 --> 00:00:13,380
What happens if we want to
communicate with a set of pods.

5
00:00:14,380 --> 00:00:16,710
When they get restarted it might
have a different IP address.

6
00:00:17,770 --> 00:00:19,200
And this is where services come in.

7
00:00:20,420 --> 00:00:23,820
Instead of relying on pod
IP addresses which change,

8
00:00:23,820 --> 00:00:26,720
provide services as
a stable endpoint for pods.

9
00:00:28,228 --> 00:00:31,730
The pods that the service exposes
are based on a set of labels.

10
00:00:31,730 --> 00:00:34,980
If pods have the correct labels,
they are automatically picked up and

11
00:00:34,980 --> 00:00:36,040
exposed by our services.

12
00:00:37,140 --> 00:00:40,620
Now, the level of access the service
provides to a set of pods

13
00:00:40,620 --> 00:00:42,000
depends on the services type.

14
00:00:43,150 --> 00:00:44,480
Currently there are three types.

15
00:00:46,070 --> 00:00:48,380
There is cluster IP
which is internal only.

16
00:00:49,610 --> 00:00:55,430
There's tight node port which gives each
node an external IP that's accessible.

17
00:00:55,430 --> 00:00:59,670
And then there's type load balancing
which adds a load balancer from

18
00:00:59,670 --> 00:01:03,795
the cloud provider which forced traffic
from the service to nodes within it.

19
00:01:03,795 --> 00:01:07,210
Okay, it's time for
you to learn how to create a service and

20
00:01:07,210 --> 00:01:10,950
use label selectors to expose the limits
set of those pods externally.
