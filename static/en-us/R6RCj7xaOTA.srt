1
00:00:00,000 --> 00:00:08,000
And now for our programming challenge, this is completely optional and is fairly challenging

2
00:00:08,000 --> 00:00:14,000
and requires a decent knowledge of programming but if you're up for a challenge

3
00:00:14,000 --> 00:00:18,000
and want to learn to do something fun, let's dive in.

4
00:00:18,000 --> 00:00:26,000
We have a bag filled with coins. Each of these coins maybe a bit different.

5
00:00:26,000 --> 00:00:33,000
This coin may have a probability of landing on heads of 0.5

6
00:00:33,000 --> 00:00:37,000
and this coin might have a probability of 0.1

7
00:00:37,000 --> 00:00:48,000
Now, I'm going to draw one coin from this bag and I'm going to flip it repeatedly and each time I flip it,

8
00:00:48,000 --> 00:00:58,000
I'd like you to tell me what your best guess is for the probability of it being heads on the next flip.

9
00:00:58,000 --> 00:01:01,000
To do this, we're going to write a program in Python.

10
00:01:01,000 --> 00:01:07,000
What we're going to ask you to write is a Python class called flip predictor

11
00:01:07,000 --> 00:01:10,000
that's going to take the set of coins in the bag.

12
00:01:10,000 --> 00:01:19,000
In this case, coins with probabilities of landing on heads of 0.5, 0.4, and 0.3

13
00:01:19,000 --> 00:01:21,000
then we're going to flip the coins several times.

14
00:01:21,000 --> 00:01:26,000
In this case, the results were heads, heads, tails, and heads.

15
00:01:26,000 --> 00:01:33,000
After every flip, we'll tell you what the result was and then we'll ask you to tell us

16
00:01:33,000 --> 00:01:36,000
what the probability of heads will be the next time we flip the coin.

17
00:01:36,000 --> 00:01:48,000
So to solve this, remember that Bayes' Rule tells us that the probability of the coin selected

18
00:01:48,000 --> 00:01:57,000
being a given coin is equal to the probability of the flip being what it was that it's head or tails

19
00:01:57,000 --> 00:02:06,000
given coin i times the probability of coin i being the coin divided by the probability

20
00:02:06,000 --> 00:02:09,000
of the flip either heads or tails.

21
00:02:09,000 --> 00:02:13,000
So now let's look at the code you're going to have to write.

22
00:02:13,000 --> 00:02:15,000
So here we are back in the our editor

23
00:02:15,000 --> 00:02:18,000
with an outline of the program you're going to have to write.

24
00:02:18,000 --> 00:02:23,000
First, we just make division work the way you'd expect it to work

25
00:02:23,000 --> 00:02:29,000
that is 1/2=0.5 so you don't have to think about it.

26
00:02:29,000 --> 00:02:31,000
Then we defined this thing called a class.

27
00:02:31,000 --> 00:02:34,000
If you aren't familiar of what a class is, don't worry, you're not going

28
00:02:34,000 --> 00:02:36,000
to actually have to do anything with the class.

29
00:02:36,000 --> 00:02:39,000
We set up the class right here for you.

30
00:02:39,000 --> 00:02:47,000
A class is just a way of grouping functions and data those functions can use.

31
00:02:47,000 --> 00:02:57,000
So here we just set up our data and that is we're given a set of coins in our bag and we just call that

32
00:02:57,000 --> 00:03:03,000
self.coins and so in these functions down here you're going to be able to

33
00:03:03,000 --> 00:03:10,000
access the coins in your bag as self.coins and that's going to be a Python list.

34
00:03:10,000 --> 00:03:17,000
And then we create this new list called self.probs and that's just going to be a list

35
00:03:17,000 --> 00:03:22,000
with the same number of items as in coins giving the probability that

36
00:03:22,000 --> 00:03:27,000
each point in time of a coin being the coin selected.

37
00:03:27,000 --> 00:03:33,000
At first, since the coin was selected at random that probability is simply 1/n

38
00:03:33,000 --> 00:03:37,000
so if there are three coins it's a third, if there are 10 coins it's a 10th.

39
00:03:37,000 --> 00:03:42,000
So what I'd like you to do is fill in these two functions.

40
00:03:42,000 --> 00:03:51,000
P heads is a function that just returns the probability of heads right now.

41
00:03:51,000 --> 00:03:54,000
So given your best guess of the current probabilities,

42
00:03:54,000 --> 00:03:57,000
what's the probability of coming up with heads?

43
00:03:57,000 --> 00:04:02,000
And you can compute this using self.probs and self.coins.

44
00:04:02,000 --> 00:04:09,000
Then for the slightly trickier part, I want you to write an update function and that's going to take

45
00:04:09,000 --> 00:04:18,000
a result either in H or a T, and based on that result, you're going to update self.probs

46
00:04:18,000 --> 00:04:23,000
so that p heads will return with the correct value in the future.

47
00:04:23,000 --> 99:59:59,999
Good luck! This is a very challenging problem. I hope you enjoy it.
