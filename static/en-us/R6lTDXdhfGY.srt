1
00:00:00,420 --> 00:00:03,590
When planning how to build this layout,
we're going to start with the assumption

2
00:00:03,590 --> 00:00:06,570
that we're going off of what
we currently have in our app.

3
00:00:06,570 --> 00:00:08,370
We're not building this from scratch.

4
00:00:08,370 --> 00:00:09,080
For step one,

5
00:00:09,080 --> 00:00:12,790
selecting the views, we actually already
have all the views that we need.

6
00:00:12,790 --> 00:00:15,010
There's no need to add or remove views.

7
00:00:15,010 --> 00:00:18,150
We should have three buttons and
four TextViews in our layout.

8
00:00:18,150 --> 00:00:18,820
For step two,

9
00:00:18,820 --> 00:00:21,680
positioning the views, I first describe
what the layout looks like to me.

10
00:00:21,680 --> 00:00:26,560
I see a header followed by a row
of buttons and a TextView.

11
00:00:26,560 --> 00:00:29,580
Then I see another header and
another TextView.

12
00:00:29,580 --> 00:00:32,689
And, lastly,
that it's followed by an Order button.

13
00:00:32,689 --> 00:00:36,590
From this observation, I notice that we
can't just use a vertical LinearLayout

14
00:00:36,590 --> 00:00:39,610
because this item here is made
up of more than one view.

15
00:00:40,820 --> 00:00:43,130
We could potentially
consider RelativeLayout, but

16
00:00:43,130 --> 00:00:45,540
I'm going to leave
a question mark by that.

17
00:00:45,540 --> 00:00:47,780
For step three,
we want to style the views.

18
00:00:47,780 --> 00:00:51,165
The style actually remains pretty
much the same as we had before.

19
00:00:51,165 --> 00:00:53,795
Although I do notice
that this quantity value

20
00:00:53,795 --> 00:00:57,605
has a little bit of space between
the minus button and the plus button.

21
00:00:57,605 --> 00:00:59,915
So we might want to achieve
this with either padding or

22
00:00:59,915 --> 00:01:01,235
margin around this TextView.
