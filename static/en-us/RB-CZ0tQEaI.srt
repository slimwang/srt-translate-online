1
00:00:00,270 --> 00:00:02,330
So let's look at the whole concept of using,

2
00:00:02,330 --> 00:00:06,260
again, computing derivatives using cross-correlation.

3
00:00:06,260 --> 00:00:11,290
Let's take a simple example here of an image, of a monarch butterfly.

4
00:00:11,290 --> 00:00:15,350
Here I'm interested, now looking for this, how can I actually extract from this,

5
00:00:15,350 --> 00:00:20,050
the two derivatives, both in the x, which is in the columns, and in y.

6
00:00:20,050 --> 00:00:23,065
What I can do basically is now I can come up with a kernel and

7
00:00:23,065 --> 00:00:29,000
cross-correlate with that to be able to extract my derivative, I could look for

8
00:00:29,000 --> 00:00:36,220
derivatives in columns that is x or, I need to look for derivatives in y.

9
00:00:36,220 --> 00:00:41,380
For doing this computation for the original, for del F x, y in x,

10
00:00:41,380 --> 00:00:45,500
how about I use the simple kernel like this, where I take the negative value and

11
00:00:45,500 --> 00:00:48,270
the positive value, this is what we did in the pa,

12
00:00:48,270 --> 00:00:52,280
last slide, and see if we do an inner dot product, with each and

13
00:00:52,280 --> 00:00:55,130
every aspect of the image, this is what we get as an output.

14
00:00:55,130 --> 00:00:58,080
This is exactly what we wanted, right, because we wanted to be able to

15
00:00:58,080 --> 00:01:03,550
kind of look at where there was traverse this way, maximal change,

16
00:01:03,550 --> 00:01:07,490
in an image, which was referred to, of course, as the derivative in x.

17
00:01:07,490 --> 00:01:10,250
Similarly for del y, the chain in y,

18
00:01:10,250 --> 00:01:15,349
we need to create a falter, that has a looks for the derivative change, in,

19
00:01:15,349 --> 00:01:20,167
this direction, which is basically minus 1 and

20
00:01:20,167 --> 00:01:23,760
1 here, again, we showed example in the last slide of this, but

21
00:01:23,760 --> 00:01:29,020
in this case of course we would do this for y, this was for del x.

22
00:01:29,020 --> 00:01:32,040
Looking at this process, we will actually now notice the same

23
00:01:32,040 --> 00:01:36,060
monarch butterfly starts giving me information as I traverse down this way.

24
00:01:36,060 --> 00:01:39,260
So basically what we've done is taken these two kernels and

25
00:01:39,260 --> 00:01:42,100
applied them separately to this original image

26
00:01:42,100 --> 00:01:45,050
using the cross-correlation method, something you looked at before.

27
00:01:46,350 --> 00:01:48,980
Just in the last image you may not have been able to see all the details,

28
00:01:48,980 --> 00:01:50,590
clearly I'm just zooming up the images so

29
00:01:50,590 --> 00:01:54,570
you can see the monarch butterfly and the dx and del dy of this.

30
00:01:54,570 --> 00:01:58,610
So in this image, as I traverse, in the column, you can see basically again,

31
00:01:58,610 --> 00:02:03,180
gradient changes, happened here, and of course, kind of a bright line,

32
00:02:03,180 --> 00:02:08,590
dark line, which basically again shows that there was a beacon, troth, or

33
00:02:08,590 --> 00:02:12,890
changes in the image gradient itself, and x and y, of course we know there's

34
00:02:12,890 --> 00:02:17,070
the same phenomenon coming down this way, so here for example, you can see more

35
00:02:17,070 --> 00:02:22,510
details of this part, here, but, we don't see it here, but of course,

36
00:02:22,510 --> 00:02:26,880
coming down in this axis you see more details here, and you don't see that here.

37
00:02:26,880 --> 00:02:30,120
Of course, as we've looked at with gradience we can,

38
00:02:30,120 --> 00:02:32,110
want to compute more information out of it.

39
00:02:32,110 --> 00:02:35,670
This output was generated basically using a kernel process where we

40
00:02:35,670 --> 00:02:39,760
basically came up with the kernel that I showed you and used that,

41
00:02:39,760 --> 00:02:40,690
to generate these images.
