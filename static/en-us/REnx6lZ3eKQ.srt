1
00:00:00,480 --> 00:00:04,510
Now let's try to figure out Tomasulo timing on our own. Suppose we

2
00:00:04,510 --> 00:00:09,160
have a processor with these latencies. A load takes one cycle to execute,

3
00:00:09,160 --> 00:00:14,150
an add takes one cycle, and a multiply takes five cycle. Suppose that

4
00:00:14,150 --> 00:00:19,550
the latencies of instruction execution are load one cycle, add one cycle, and

5
00:00:19,550 --> 00:00:26,230
multiply five cycles. Suppose we also have this number of reservation stations.

6
00:00:26,230 --> 00:00:30,610
We have one load reservation station, two add, and two multiply reservation

7
00:00:30,610 --> 00:00:35,670
stations. And finally, we need to know what's allowed in the same cycle. And for

8
00:00:35,670 --> 00:00:40,930
that, issuing and then dispatching instruction in the same cycle is not allowed.

9
00:00:40,930 --> 00:00:44,110
Capturing the upper end and then dispatching the instruction in

10
00:00:44,110 --> 00:00:48,120
the same cycle is not allowed in this processor. And finally,

11
00:00:48,120 --> 00:00:53,060
if a reservation station is freed, it cannot be used in the same cycle again for

12
00:00:53,060 --> 00:00:56,590
another instruction. So once we free a reservation station,

13
00:00:56,590 --> 00:01:01,530
it only becomes eligible for issuing another instruction in the next cycle.

14
00:01:01,530 --> 00:01:06,580
These are the instructions we have. And what we need to now do is figure out

15
00:01:06,580 --> 00:01:11,587
the timing for them, when do they share dispatch and write. To get you started,

16
00:01:11,587 --> 00:01:16,410
these four instructions will issue in cycles one, two, three, and four.

17
00:01:16,410 --> 00:01:22,860
This quiz has two parts. Part one is for you to figure out for

18
00:01:22,860 --> 00:01:27,190
this four instructions that issue in cycles one, two, three, and four. When do

19
00:01:27,190 --> 00:01:32,160
they dispatch for each one of them and when does each of them write it's result?
