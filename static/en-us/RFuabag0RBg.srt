1
00:00:00,000 --> 00:00:04,000
Now, since it seems complicated to solve this game in this form,

2
00:00:04,000 --> 00:00:08,000
one way we can address it is to change from this matrix form

3
00:00:08,000 --> 00:00:11,000
into the familiar tree form.

4
00:00:11,000 --> 00:00:13,000
We'll move this over here,

5
00:00:13,000 --> 00:00:15,000
and we'll draw it as a game tree.

6
00:00:15,000 --> 00:00:20,000
Max will be the even player, and min will be the odd player,

7
00:00:20,000 --> 00:00:25,000
and for the moment, let's look at the game

8
00:00:25,000 --> 00:00:28,000
of what would happen if max had to go first

9
00:00:28,000 --> 00:00:31,000
rather than having them move simultaneously.

10
00:00:31,000 --> 00:00:36,000
So, max would make a move either 1 or 2.

11
00:00:36,000 --> 00:00:41,000
And then min--so max is even and min is O--

12
00:00:41,000 --> 00:00:46,000
would also make the move, 1 or 2, 1 or 2.

13
00:00:46,000 --> 00:00:50,000
And then the outcome in terms of E would be 2 here

14
00:00:50,000 --> 00:00:54,000
-3 here, -3 here and 4 here.

15
00:00:54,000 --> 00:00:57,000
And now what does min do? Well, try to minimize.

16
00:00:57,000 --> 00:01:01,000
So, we choose 2 here, so this node would be -3.

17
00:01:01,000 --> 00:01:06,000
We'd choose 1 here, so this node would be -3,

18
00:01:06,000 --> 00:01:08,000
and then E tries to maximize.

19
00:01:08,000 --> 00:01:11,000
It doesn't matter what he chooses,

20
00:01:11,000 --> 00:01:14,000
and we get a -3 up here.

21
00:01:14,000 --> 00:01:17,000
So, that's giving E the disadvantage of having to reveal

22
00:01:17,000 --> 00:01:21,000
his or her strategy first.

23
00:01:21,000 --> 00:01:23,000
What if we did it the other way around?

24
00:01:23,000 --> 00:01:25,000
Let's take a look at that.

25
00:01:25,000 --> 00:01:29,000
What if O had to go first and reveal a strategy of 1 or 2

26
00:01:29,000 --> 00:01:35,000
and then E as the maximizing player goes second

27
00:01:35,000 --> 00:01:37,000
and does a 1 or 2?

28
00:01:37,000 --> 00:01:41,000
And then we have these 4 terminal states here,

29
00:01:41,000 --> 00:01:45,000
and I want you to fill in the values of the 4 terminal states

30
00:01:45,000 --> 00:01:49,000
taken from the table and the intermediate states

31
00:01:49,000 --> 99:59:59,999
or the higher up states in the tree as well.
