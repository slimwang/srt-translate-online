1
00:00:00,450 --> 00:00:03,510
Now, let me show you a simple feature,
matching demo,

2
00:00:03,510 --> 00:00:06,410
to kind of demonstrate how we can
do this kind of feature detection.

3
00:00:06,410 --> 00:00:08,960
To show you this demo,
let's go to the Sandbox.

4
00:00:08,960 --> 00:00:09,560
Again, remember,

5
00:00:09,560 --> 00:00:13,040
it's always going to have the last code
that you had played around with, and

6
00:00:13,040 --> 00:00:16,390
here, I'm basically putting in the code
to help us do feature detection.

7
00:00:16,390 --> 00:00:22,040
Again, setting up numpy and cv2, and all
of that stuff, some code to draw things.

8
00:00:22,040 --> 00:00:25,930
Look for things in there and
read an image.

9
00:00:25,930 --> 00:00:27,360
Now, one thing I want to point out,

10
00:00:27,360 --> 00:00:30,370
we're using a special
variant on SIFT called orb.

11
00:00:30,370 --> 00:00:32,290
That's what we're going to be using.

12
00:00:32,290 --> 00:00:36,000
You should be able to, in your own
setup space, if you have all configured

13
00:00:36,000 --> 00:00:40,140
correctly with open CVN python,
be able to actually use a Sift, also.

14
00:00:40,140 --> 00:00:45,780
I encourage you to look at documentation
of Sift on open CV to try that.

15
00:00:46,910 --> 00:00:48,470
So basically again, in this process,

16
00:00:48,470 --> 00:00:51,380
we come up with the whole
process to find the key points.

17
00:00:51,380 --> 00:00:55,450
We draw them, which is shown here,
and then we actually run a matching

18
00:00:55,450 --> 00:00:58,760
algorithm to be able to
match these types of things.

19
00:00:58,760 --> 00:01:02,300
And once these matches are appearing,
we will print them out, and

20
00:01:02,300 --> 00:01:04,030
then of course, show the matches.

21
00:01:04,030 --> 00:01:06,410
So let’s run.

22
00:01:06,410 --> 00:01:08,790
Okay, it’s pointing out the image sizes.

23
00:01:08,790 --> 00:01:14,170
It found 500 key points in the two
images, and found 257 matches.

24
00:01:14,170 --> 00:01:15,108
These are the two images.

25
00:01:15,108 --> 00:01:19,240
This one and this one.

26
00:01:19,240 --> 00:01:23,805
This is the box cover itself directly,
and this box,

27
00:01:23,805 --> 00:01:28,280
again here, with conclusions and
all shown there.

28
00:01:28,280 --> 00:01:31,530
Of course, now, if you notice that I
actually did a lot of computation to

29
00:01:31,530 --> 00:01:35,010
find all of those features
on both of these images,

30
00:01:35,010 --> 00:01:38,980
lots of colors here, and once it found
those features, it matched them.

31
00:01:38,980 --> 00:01:41,360
So now,
I was starting to put this here, and

32
00:01:41,360 --> 00:01:45,040
if you notice, all of the visible
parts that were there, here,

33
00:01:45,040 --> 00:01:50,640
were matched between the image here and
this one image here.

34
00:01:50,640 --> 00:01:53,035
So this showcases how
this could be done, and

35
00:01:53,035 --> 00:01:55,470
this showcased the whole
code is right above here.

36
00:01:55,470 --> 00:01:57,080
I will even share with you this code so

37
00:01:57,080 --> 00:01:58,750
you can actually play
around with it yourself.
