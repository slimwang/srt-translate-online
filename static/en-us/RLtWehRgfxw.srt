1
00:00:00,520 --> 00:00:04,470
Up until this point, you've been working
mostly with primitive data types.

2
00:00:04,469 --> 00:00:09,029
This types have been strings, numbers,
booleans, undefined, and null.

3
00:00:09,029 --> 00:00:12,639
If you type the following code in
the JavaScript console, predictably

4
00:00:12,640 --> 00:00:18,100
the console will return string because
hello, is a primitive string data type.

5
00:00:18,100 --> 00:00:19,610
No surprises there.

6
00:00:19,609 --> 00:00:21,079
But if you instead ask for

7
00:00:21,079 --> 00:00:25,750
the type of this array,
you'd expect it to display array, right?

8
00:00:25,750 --> 00:00:28,370
Well instead it returns object.

9
00:00:28,370 --> 00:00:30,519
So what is this mysterious object?

10
00:00:30,519 --> 00:00:33,179
An object is a data
structure in JavaScript

11
00:00:33,179 --> 00:00:36,299
that lets you store any
kind of data value.

12
00:00:36,299 --> 00:00:39,259
And you can keep track
of the data using a key.

13
00:00:39,259 --> 00:00:42,809
Before we dive into the syntax of
defining an object, let's think about

14
00:00:42,810 --> 00:00:46,080
what information an object that
represents a person might need.

15
00:00:47,229 --> 00:00:51,759
A variable containing just
the person's name is not enough.

16
00:00:51,759 --> 00:00:56,259
A person also has an age,
parents, siblings,

17
00:00:56,259 --> 00:00:59,589
favorite colors, and the list goes on.

18
00:00:59,590 --> 00:01:04,189
So instead of defining all the data
about a person in isolated variables,

19
00:01:04,189 --> 00:01:06,530
objects allow you to
group this information.

20
00:01:06,530 --> 00:01:08,420
Like the information shown here.

21
00:01:08,420 --> 00:01:10,730
Into a meaningful structure.

22
00:01:10,730 --> 00:01:13,969
Here is an object that's stored
in a variable called sister.

23
00:01:13,969 --> 00:01:17,189
And the object's data,
information about my sister,

24
00:01:17,189 --> 00:01:20,859
can be stored as a list of key
value pairs inside curly braces.

25
00:01:20,859 --> 00:01:25,409
You might be noticing that this code
is a bit hard to read at first.

26
00:01:25,409 --> 00:01:28,030
It's common to format objects with each

27
00:01:28,030 --> 00:01:32,189
key value pair on its own
line to improve readability.

28
00:01:32,189 --> 00:01:34,349
Note that the syntax hasn't changed,

29
00:01:34,349 --> 00:01:38,159
we just added a new line after
each comma and indented each pair.

