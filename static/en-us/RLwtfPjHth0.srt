1
00:00:00,280 --> 00:00:04,250
So what happens if you just make up an
IP address and port and try to NC to it?

2
00:00:05,280 --> 00:00:08,470
Well, depending on the address you pick
you might get any of several different

3
00:00:08,470 --> 00:00:09,660
results.

4
00:00:09,660 --> 00:00:11,850
NC might exit immediately.

5
00:00:11,850 --> 00:00:14,930
Or, it might just sit there and
do nothing for a while and

6
00:00:14,930 --> 00:00:18,810
then eventually exit with an error
saying that it timed out.

7
00:00:18,810 --> 00:00:21,964
You might have sometimes seen
similar errors from a web browser,

8
00:00:21,964 --> 00:00:23,808
talking about a connection timeout.

9
00:00:23,808 --> 00:00:26,970
TCP has a number of built in timers.

10
00:00:26,970 --> 00:00:30,370
If it takes too long to hear back from
the server we're trying to connect to,

11
00:00:30,370 --> 00:00:32,990
TCP will abandon the attempt
to make a connection and

12
00:00:32,990 --> 00:00:34,970
give an error to the application.

13
00:00:34,970 --> 00:00:38,290
There's another different timeout from
when our end has sent some data but

14
00:00:38,290 --> 00:00:39,810
the other end hasn't yet responded.

15
00:00:40,950 --> 00:00:43,890
So when you're building applications
up at the web level that's something to

16
00:00:43,890 --> 00:00:44,970
keep in mind.

17
00:00:44,970 --> 00:00:47,560
Sometimes you'll send a query
to another endpoint and

18
00:00:47,560 --> 00:00:49,170
you won't get anything back.

19
00:00:49,170 --> 00:00:52,920
And whether the default behavior is
reasonable depends on an application.

20
00:00:52,920 --> 00:00:56,670
That's why various libraries,
such as Python's requests library,

21
00:00:56,670 --> 00:00:59,040
have the ability to set
a timeout on queries and

22
00:00:59,040 --> 00:01:00,650
notice when that timeout has elapsed.
