1
00:00:00,520 --> 00:00:03,532
Here's the dovetailing trick which
lets you run a countable set of

2
00:00:03,532 --> 00:00:04,780
computations all at once.

3
00:00:05,950 --> 00:00:09,570
We'll illustrate the technique for the
case where we're simulating a machine M

4
00:00:09,570 --> 00:00:11,805
on all binary strings
with this table here.

5
00:00:11,805 --> 00:00:16,360
Every row in the table corresponds
to a computation, or a sequence of

6
00:00:16,360 --> 00:00:20,180
configurations that the machine
goes through for the given input.

7
00:00:20,180 --> 00:00:24,750
Simulating all these computations means
hitting every entry in the table.

8
00:00:24,750 --> 00:00:28,420
Note that we can't just simulate
M on the enpty string first.

9
00:00:28,420 --> 00:00:32,229
Or we might just keep going forever
filling out the first row, and

10
00:00:32,229 --> 00:00:33,850
never getting to the second.

11
00:00:33,850 --> 00:00:36,670
This is the same problem that we
encountered when trying to show that

12
00:00:36,670 --> 00:00:40,230
a countable union of countable
sets is countable, or

13
00:00:40,230 --> 00:00:42,730
that the set of rational
numbers in countable.

14
00:00:42,730 --> 00:00:44,690
And the solution is the same too.

15
00:00:44,690 --> 00:00:49,250
We go diagonal by diagonal, first
simulating the first computation for

16
00:00:49,250 --> 00:00:52,840
one step, then the second
computation for one step.

17
00:00:52,840 --> 00:00:55,540
And the first computation for two steps.

18
00:00:55,540 --> 00:00:57,970
Then the third computation for one step.

19
00:00:57,970 --> 00:01:00,420
The second computation for two steps.

20
00:01:00,420 --> 00:01:02,970
And the first computation for
three steps.

21
00:01:02,970 --> 00:01:05,090
And we just keep going,
diagonal by diagonal.

22
00:01:06,130 --> 00:01:09,660
Eventually every configuration
in the table is reached.

23
00:01:09,660 --> 00:01:13,100
Thus, if we're trying to recognize the
language of Turing machine descriptions,

24
00:01:13,100 --> 00:01:15,728
where the Turing machine
accepts something.

25
00:01:15,728 --> 00:01:18,510
Then a Turing machine in
this language must accept

26
00:01:18,510 --> 00:01:22,310
a string after some fixed
finite number of steps.

27
00:01:22,310 --> 00:01:24,320
Say that configuration
appears here in the table.

28
00:01:25,390 --> 00:01:28,560
Well then we'll eventually reach it
with the dovetailing strategy and

29
00:01:28,560 --> 00:01:29,240
we can accept.
