1
00:00:00,280 --> 00:00:04,504
And the way search depends on how the index and ranks are represented is through

2
00:00:04,504 --> 00:00:08,858
the outputs. So, the crawl_web procedure outputs two things, an index and a

3
00:00:08,858 --> 00:00:13,000
ranks list. Both of those are represented as dictionaries, the index maps the

4
00:00:13,000 --> 00:00:16,900
keyword to a list of URLs and the ranks map the URL to its ranks score. In the

5
00:00:16,900 --> 00:00:21,124
search module, a procedure like lucky_search depends on getting both of those

6
00:00:21,124 --> 00:00:25,105
things as inputs. So, this is quite a complex dependency, and this is the kind

7
00:00:25,105 --> 00:00:28,625
of thing that makes it much harder to maintain code, it makes it much harder to

8
00:00:28,625 --> 00:00:32,124
understand code, and it makes it much harder to change code. If we decide to

9
00:00:32,124 --> 00:00:35,772
change something about the crawler, well, we've gotta worry about all these

10
00:00:35,772 --> 00:00:39,985
procedures in search that use these outputs. So, our goal is to hide all that

11
00:00:39,985 --> 00:00:43,272
complexity. In general, the way we hide things is to use Abstraction.

12
00:00:43,272 --> 00:00:48,156
Abstraction is about hiding details. Our goal is to find a way to restructure

13
00:00:48,156 --> 00:00:51,747
the code so we don't need to know all those details and that's a form of

14
00:00:51,747 --> 00:00:55,752
Abstraction, Abstraction is all about hiding details. What we want is an

15
00:00:55,752 --> 00:01:00,376
abstract object that the crawler creates that has the properties search needs to

16
00:01:00,376 --> 00:01:04,660
be able to do its work but without search requiring to know the details of how

17
00:01:04,660 --> 00:01:08,927
that's represented. So, our goal is to replace all this with one abstract

18
00:01:08,927 --> 00:01:14,224
object. We'll call that a Web Corpus, and that will be the output of the crawler

19
00:01:14,224 --> 00:01:19,404
and the input to the search. And we'll end up defining this Web Corpus object in

20
00:01:19,404 --> 00:01:23,484
a new module. What this is, is actually a new type, and Python provides a way to

21
00:01:23,484 --> 00:01:27,909
define new types. They're called classes. Before we get into how to create our

22
00:01:27,909 --> 00:01:32,169
own type like the Web Corpus type that we need here, we're going to step back

23
00:01:32,169 --> 00:01:34,933
and learn more about how types work in Python.
