1
00:00:00,358 --> 00:00:02,054
In the Forecast Fragment class,

2
00:00:02,054 --> 00:00:05,890
we add the Callback interface
that was provided in the gist.

3
00:00:05,890 --> 00:00:10,220
Then, in the onCreateView method,
we modify the list item click behavior.

4
00:00:10,220 --> 00:00:13,590
When an item is clicked, instead of
always launching a new intent to

5
00:00:13,590 --> 00:00:17,170
the detail activity,
we want to notify the Callback instead.

6
00:00:17,170 --> 00:00:18,330
We call getActivity and

7
00:00:18,330 --> 00:00:23,380
then cast it to a Callback object,
then we can call onItemSelected on it.

8
00:00:23,380 --> 00:00:26,890
We pass the URI that represents
the selected location and date.

9
00:00:27,920 --> 00:00:31,988
Then, in the main activity,
we implement the Callback interface.

10
00:00:31,988 --> 00:00:36,110
In the onItemSelected method, we fork
the behavior based on the mTwoPane

11
00:00:36,110 --> 00:00:38,070
variable that we defined earlier.

12
00:00:38,070 --> 00:00:41,890
If we're in two-pane mode,
then we create a DetailFragment and

13
00:00:41,890 --> 00:00:44,660
put the URI inside the arguments bundle.

14
00:00:44,660 --> 00:00:47,406
Then we replace the existing
DetailFragment in

15
00:00:47,406 --> 00:00:51,540
the weather_detail_container,
using the DETAILFRAGMENT_TAG.

16
00:00:51,540 --> 00:00:55,780
In one pane mode, we create a new
Intent to launch the DetailActivity and

17
00:00:55,780 --> 00:00:57,690
we set the data URI.

18
00:00:57,690 --> 00:00:59,120
In the DetailActivity,

19
00:00:59,120 --> 00:01:03,920
we modify the onCreate method to read
the data URI from the incoming intent.

20
00:01:03,920 --> 00:01:08,540
We take the URI and set it as
an arguments in the new DetailFragment.

21
00:01:08,540 --> 00:01:12,300
Then we dynamically add this
fragment to this container.

22
00:01:12,300 --> 00:01:15,900
In the detail fragment,
we modify the onCreateView method

23
00:01:15,900 --> 00:01:19,120
to read the arguments that
the fragment was initialized with.

24
00:01:19,120 --> 00:01:24,260
We read the data URI and
store that in the member variable mUri.

25
00:01:24,260 --> 00:01:28,540
In the OnCreateLoader method,
we remove some code that relied on

26
00:01:28,540 --> 00:01:33,170
incoming intent, and
switched it to use mUri instead.

27
00:01:33,170 --> 00:01:37,495
Whether this DetailFragment is in
the main activity or the DetailActivity,

28
00:01:37,495 --> 00:01:39,520
it should have mUri set.

29
00:01:39,520 --> 00:01:43,170
Then we're going to use mUri to
query the content provider for

30
00:01:43,170 --> 00:01:46,350
the data to display in
this DetailFragment.

31
00:01:46,350 --> 00:01:48,050
When you try it out on the tablet,

32
00:01:48,050 --> 00:01:51,300
there is one bug related to
navigation that we should fix.

33
00:01:51,300 --> 00:01:55,430
Say we select tomorrow's date, if you
navigate to the settings activity, and

34
00:01:55,430 --> 00:01:58,720
then hit the up button,
the detail fragment is blank.

35
00:01:58,720 --> 00:02:02,190
That's because a brand new instance
of main activity got launched, and

36
00:02:02,190 --> 00:02:04,850
for a brand new instance,
nothing is selected yet.

37
00:02:04,850 --> 00:02:08,850
To fix this, when the setting activity
up button is pressed, we want to

38
00:02:08,850 --> 00:02:12,430
navigate to the previous running
instance of the main activity where

39
00:02:12,430 --> 00:02:16,688
the tomorrow item is selected and now
create a new instance of main activity.

40
00:02:16,688 --> 00:02:21,910
In the SettingsActivity, override this
method, which the system will call

41
00:02:21,910 --> 00:02:25,790
in order to get the parent activity
intent for the up button behavior.

42
00:02:25,790 --> 00:02:28,940
Get the parent activity
intent from the super class,

43
00:02:28,940 --> 00:02:31,770
this should create a new
intent to main activity.

44
00:02:31,770 --> 00:02:35,570
Then add the intent flag called
FLAG_ACTIVITY_CLEAR_TOP.

45
00:02:35,570 --> 00:02:38,730
This flag indicates that we should
check if the main activity is

46
00:02:38,730 --> 00:02:40,360
already running in our task.

47
00:02:40,360 --> 00:02:44,270
And to use that one instead of
creating a new main activity instance.

48
00:02:44,270 --> 00:02:46,850
Also this method didn't
exist prior to Jelly Bean so

49
00:02:46,850 --> 00:02:50,170
we need to add this
@TargetApi annotation.

50
00:02:50,170 --> 00:02:53,120
If you check the documentation for
the activity class,

51
00:02:53,120 --> 00:02:57,160
the getParentActivityIntent method
was only added in API level 16,

52
00:02:57,160 --> 00:03:00,477
and you can check that version
16 maps to Jelly Bean.
