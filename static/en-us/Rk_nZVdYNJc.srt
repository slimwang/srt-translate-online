1
00:00:00,120 --> 00:00:06,030
So one way of doing this is,
just compare that distribution

2
00:00:06,030 --> 00:00:09,630
to the distributions of the word,
of the, of the images that you know.

3
00:00:09,630 --> 00:00:13,090
And you can do it as say,
like a, a scaler.product, right?

4
00:00:13,090 --> 00:00:14,730
So just a histogram.

5
00:00:14,730 --> 00:00:18,450
If you normalize it to one, you can
think of it as a normalized vector, and

6
00:00:18,450 --> 00:00:21,270
I can pair, unit vector,
I can compare unit vectors, for example,

7
00:00:21,270 --> 00:00:24,310
by taking dot product and
finding nearest neighbor.

8
00:00:24,310 --> 00:00:26,490
So, that's illustrated here.

9
00:00:26,490 --> 00:00:29,983
So I have some exampled,
d sub j and I want to,

10
00:00:29,983 --> 00:00:33,820
I've got some query, q, and
I want to compare them.

11
00:00:33,820 --> 00:00:35,881
And so, here are my two histograms.

12
00:00:35,881 --> 00:00:38,380
So my histogram here is 1, 8, 1, 4.

13
00:00:38,380 --> 00:00:40,950
My histogram over here is 5, 1, 1, 0.

14
00:00:40,950 --> 00:00:45,070
So remember,
it's the same set of words, right?

15
00:00:45,070 --> 00:00:48,480
We're just going to say for all the
words in English, what's the histogram?

16
00:00:48,480 --> 00:00:51,720
For all the words in my collection,
what's the histogram?

17
00:00:51,720 --> 00:00:54,410
And I'm just going to compare,
say a similarity.

18
00:00:54,410 --> 00:00:59,700
So here is one example of where I take
the dot product between the d and

19
00:00:59,700 --> 00:01:01,350
q, divide by the length and

20
00:01:01,350 --> 00:01:05,980
that's essentially giving me
a similarity between them.

21
00:01:05,980 --> 00:01:07,758
And this is just written out for
i equal 1 to v,

22
00:01:07,758 --> 00:01:10,970
where the idea is that you
have v number of words.

23
00:01:10,970 --> 00:01:15,010
And again, we didn't talk about exactly
how you decide if what v should be.

24
00:01:15,010 --> 00:01:18,290
That's sort of part of
the art of doing this work.

25
00:01:18,290 --> 00:01:22,380
So that's essentially doing
a nearest neighbor look up, right?

26
00:01:22,380 --> 00:01:24,780
Given some input,
nearest neighbor, all right?
