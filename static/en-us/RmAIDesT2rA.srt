1
00:00:00,430 --> 00:00:04,330
Over the next four lessons, we'll
discuss two very important problems.

2
00:00:04,330 --> 00:00:06,570
Finding a maximum flow on a graph and

3
00:00:06,570 --> 00:00:08,380
solving a linear
programming optimization.

4
00:00:09,470 --> 00:00:13,120
These problems are P-complete, meaning
that any problem that can be solved on

5
00:00:13,120 --> 00:00:16,760
a Turing machine in polynomial time, can
be turned into one of these problems.

6
00:00:18,060 --> 00:00:22,310
We will also see an important restricted
case in the bipartite matching problem.

7
00:00:22,310 --> 00:00:25,060
And then we'll explore the connections
among all these problems,

8
00:00:25,060 --> 00:00:28,390
in a discussion of the principal of
duality, which is the inspiration for

9
00:00:28,390 --> 00:00:30,150
a large class of
approximation algorithms.

10
00:00:31,720 --> 00:00:32,870
In this first lesson,

11
00:00:32,870 --> 00:00:35,420
we discuss the problem of finding
a maximum flow through a network.

12
00:00:36,520 --> 00:00:38,810
A network here is essentially
anything that can be modeled

13
00:00:38,810 --> 00:00:40,400
as a directive graph.

14
00:00:40,400 --> 00:00:44,260
And by flow, we mean the movement
of some stuff through a medium,

15
00:00:44,260 --> 00:00:46,990
from some designated
source to a destination.

16
00:00:48,050 --> 00:00:50,400
Typically we want to maximize the flow.

17
00:00:50,400 --> 00:00:53,070
That is to say,
we want to route as many packets

18
00:00:53,070 --> 00:00:56,960
as possible from one computer
across a network to another, or

19
00:00:56,960 --> 00:01:00,449
we want to ship as many items
from our factories to our stores.

20
00:01:01,580 --> 00:01:05,400
Even if we don't actually want to move
as much as possible across the network,

21
00:01:05,400 --> 00:01:08,980
understanding the maximum flow can
give us important information.

22
00:01:08,980 --> 00:01:11,050
For instance, in communication networks,

23
00:01:11,050 --> 00:01:13,480
it tells us something about how
robust we are to link failures.

24
00:01:14,560 --> 00:01:18,450
And even more abstractly, maximum flow
problems can help us figure out things

25
00:01:18,450 --> 00:01:20,130
that seem unrelated to networks.

26
00:01:20,130 --> 00:01:23,299
Like, which teams have been eliminated
playoff contention in sports.

27
00:01:24,610 --> 00:01:27,740
Given the variety and importance of
these applications, it should be no

28
00:01:27,740 --> 00:01:31,760
surprise that maximum flow problems
have been studied extensively, and

29
00:01:31,760 --> 00:01:35,440
we have some sophisticated and
elegant algorithms for solving them.

30
00:01:35,440 --> 00:01:35,940
Let's dive in.
