1
00:00:00,550 --> 00:00:04,790
In the last lesson, we talked informally
about what it meant to be computable.

2
00:00:04,790 --> 00:00:06,610
But what does it mean to be computable?

3
00:00:06,610 --> 00:00:08,270
What even is a computer?

4
00:00:08,270 --> 00:00:12,010
What kind of problems can we solve on
a computer, or problems can't be solved?

5
00:00:13,410 --> 00:00:16,770
To answer these questions,
we need a model of computation.

6
00:00:16,770 --> 00:00:20,490
There are many, many ways we could
define a notion of computability.

7
00:00:20,490 --> 00:00:24,610
Ideally, something simple and
easy to describe, yet powerful enough so

8
00:00:24,610 --> 00:00:30,130
this model can capture everything any
computer can do now or in the future.

9
00:00:30,130 --> 00:00:33,910
Luckily, one of the very first
mathematical models of a computer

10
00:00:33,910 --> 00:00:37,670
serves us quite well,
a model developed by Alan Turing.

11
00:00:38,880 --> 00:00:42,640
In the 1930's decades before we
had digital computers, Turing

12
00:00:42,640 --> 00:00:46,710
developed a simple model that captured
the thinking process of a mathematician.

13
00:00:46,710 --> 00:00:51,500
This model which we now call the Turing
machine is an extremely simple device

14
00:00:51,500 --> 00:00:54,040
and yet completely captures
our notion of computability.

15
00:00:55,080 --> 00:00:57,480
In this lesson,
we'll define a Turing machine.

16
00:00:57,480 --> 00:01:00,580
What it means for the machine
to compute and either accept or

17
00:01:00,580 --> 00:01:02,240
reject a given input.

18
00:01:02,240 --> 00:01:03,530
In future lessons,

19
00:01:03,530 --> 00:01:08,000
we use this model to give specific
problems that we cannot solve and more.
