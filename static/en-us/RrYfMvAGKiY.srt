1
00:00:00,520 --> 00:00:02,960
Let's revisit the example from
the beginning of the lesson, and

2
00:00:02,960 --> 00:00:06,580
try to put in the context what's
happening using JavaScript code.

3
00:00:06,580 --> 00:00:07,440
Now if you don't remember,

4
00:00:07,440 --> 00:00:11,339
the scenario we had was whether or
not to purchase an item from the store.

5
00:00:11,339 --> 00:00:12,789
To make this a little more realistic,

6
00:00:12,789 --> 00:00:16,750
let's say the store I'm purchasing
the item from is JD's Department Store.

7
00:00:16,750 --> 00:00:19,788
Let's say the item that I want to
purchase is a hammer, and

8
00:00:19,788 --> 00:00:21,510
let's say it costs 15 bucks.

9
00:00:21,510 --> 00:00:25,600
I'll update this flow chart and, okay,
there we go, that looks a little better.

10
00:00:25,600 --> 00:00:28,060
We've got purchased hammer
from JD's Department Store.

11
00:00:28,059 --> 00:00:30,369
If we got enough money,
yes, buy the hammer.

12
00:00:30,370 --> 00:00:32,710
If we don't, don't buy the hammer.

13
00:00:32,710 --> 00:00:36,920
So the real question here is, do we have
enough money to purchase the hammer?

14
00:00:36,920 --> 00:00:39,480
And to answer that question,
we need to know two things.

15
00:00:39,479 --> 00:00:41,769
We need to know how much
money do I have, and

16
00:00:41,770 --> 00:00:44,460
how much money does the hammer cost.

17
00:00:44,460 --> 00:00:47,070
Now we already know that
the hammer costs $15, so

18
00:00:47,070 --> 00:00:50,939
in code, I can store that value
in a variable called price.

19
00:00:50,939 --> 00:00:52,789
So let's do that right now.

20
00:00:52,789 --> 00:01:00,363
Okay, so I've got my text editor open,
and we'll say var price = $15.

21
00:01:00,363 --> 00:01:05,099
And that's going to be the price
of our hammer, all right.

22
00:01:05,099 --> 00:01:07,189
And let's say, I have $20 on me, and

23
00:01:07,188 --> 00:01:11,315
we'll store into another code called
money, and set that equal to the $20.

24
00:01:11,316 --> 00:01:15,659
So this is how much money I have, cool.

25
00:01:15,659 --> 00:01:18,039
This gives us enough information
to answer whether or

26
00:01:18,040 --> 00:01:20,680
not I have enough money
to purchase the hammer.

27
00:01:20,680 --> 00:01:25,420
But in order to represent that question
in code, we'll need to use a comparison.

28
00:01:25,420 --> 00:01:28,100
If you remember back to
the last lesson of data types,

29
00:01:28,099 --> 00:01:32,379
we can use a comparison that
compare two strings or two numbers.

30
00:01:32,379 --> 00:01:36,239
So for this situation, I'll write
my comparison to see if my money

31
00:01:36,239 --> 00:01:39,629
is greater than or
equal to my price of the hammer.

32
00:01:39,629 --> 00:01:40,799
Now by itself,

33
00:01:40,799 --> 00:01:45,399
we know that this expression will
either evaluate the true or false.

34
00:01:45,400 --> 00:01:46,859
If it evaluates to true,

35
00:01:46,859 --> 00:01:49,810
then I know I've got enough
money to purchase the hammer.

36
00:01:49,810 --> 00:01:54,388
If it evaluates to false, then I'm out
of luck and I can't buy the hammer.

37
00:01:54,388 --> 00:01:57,920
But this code doesn't really
do anything for us by itself.

38
00:01:57,920 --> 00:01:59,960
So here's where things
get really awesome.

39
00:01:59,959 --> 00:02:02,129
We can actually represent
this question and

40
00:02:02,129 --> 00:02:05,539
both possible results using
an if else statement.

41
00:02:05,540 --> 00:02:07,960
So let me type that out, and
then explain what's going on.

42
00:02:08,990 --> 00:02:14,260
Okay, so the way this code reads
is if money is greater than or

43
00:02:14,259 --> 00:02:19,060
equal to price, then we'll want to
print out, buy the hammer.

44
00:02:19,060 --> 00:02:23,490
Otherwise, or else, we'll want to say,
don't buy the hammer.

45
00:02:23,490 --> 00:02:26,530
So what this actually means is,
if our money is greater than or

46
00:02:26,530 --> 00:02:30,120
equal to the price,
run the code inside these curly braces.

47
00:02:30,120 --> 00:02:33,930
Otherwise, run the code
inside these curly braces.

48
00:02:33,930 --> 00:02:37,280
Now pay attention to the curly braces
here, because they're super important.

49
00:02:37,280 --> 00:02:41,129
Whatever code is written inside of these
things is going to be the code that's

50
00:02:41,129 --> 00:02:45,979
executed when our condition is either
true, like it is up here, or false.

51
00:02:45,979 --> 00:02:48,009
Also, notice how I've
indented the code over, so

52
00:02:48,009 --> 00:02:51,269
you can tell what part of our
code belongs to which block.

53
00:02:51,270 --> 00:02:54,110
The code here belongs
to our if statement.

54
00:02:54,110 --> 00:02:56,490
The code here belongs
to our else statement.

55
00:02:56,490 --> 00:02:58,640
So to show you this code working,
I'm just going to copy and

56
00:02:58,639 --> 00:03:00,750
paste it over the JavaScript console.

57
00:03:00,750 --> 00:03:02,949
We paste it in, awesome.

58
00:03:02,949 --> 00:03:04,009
That's what we expect to see.

59
00:03:04,009 --> 00:03:09,109
So our money, which is $20 is
greater than or equal to the price.

60
00:03:09,110 --> 00:03:12,770
So it hits this conditional statement
because it's true, and it prints out,

61
00:03:12,770 --> 00:03:14,150
buy the hammer.

62
00:03:14,150 --> 00:03:17,611
And just to show you that it
can work the other way around,

63
00:03:17,611 --> 00:03:22,824
let's redo the same code, but let's say,
it's $10 that I have instead of 20.

64
00:03:22,824 --> 00:03:24,799
Awesome, then it prints out,
don't buy the hammer.

