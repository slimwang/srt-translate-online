1
00:00:00,340 --> 00:00:03,350
So how can we fix this problem? Well, the first thing

2
00:00:03,350 --> 00:00:06,210
we should think about is, well, can we give a base case.

3
00:00:06,210 --> 00:00:08,780
All right. All of the recursive definitions we had. We had a

4
00:00:08,780 --> 00:00:11,860
way of stopping. So, we had a base case. Right. With, factorial,

5
00:00:11,860 --> 00:00:15,280
we said, we are going to pre-define, that we know the value

6
00:00:15,280 --> 00:00:18,720
of factorial when the input is 0. We know that the value

7
00:00:18,720 --> 00:00:21,650
is 1. We are not going to define it, in terms of factorial.

8
00:00:21,650 --> 00:00:25,420
We are going to note it's value. We did this for palindrome we

9
00:00:25,420 --> 00:00:29,350
said, palindrome, we have a base case, when the input

10
00:00:29,350 --> 00:00:32,720
string is an empty string, it's predefined as a palindrome We

11
00:00:32,720 --> 00:00:35,182
don't have to do anything else. And we did this

12
00:00:35,182 --> 00:00:38,100
for fibonacci, where we had two bases cases? But for all

13
00:00:38,100 --> 00:00:41,180
these definitions, we had some starting point, that was not

14
00:00:41,180 --> 00:00:43,990
defined in terms of thing we are defining. And that's why

15
00:00:43,990 --> 00:00:47,350
it was good recursive definition, because we had the base case.

16
00:00:47,350 --> 00:00:50,890
We don't have one here. So let's try to invent one.

17
00:00:50,890 --> 00:00:53,540
Let's suppose that we made our base case. So if

18
00:00:53,540 --> 00:00:55,350
we're going to fix this, what we need to do

19
00:00:55,350 --> 00:00:57,990
is invent a base case. Maybe that will solve our

20
00:00:57,990 --> 00:01:00,550
problem. So let's try and add a base case. So.

21
00:01:00,550 --> 00:01:04,849
Suppose we assume we know the popularity of Alice and

22
00:01:06,180 --> 00:01:10,110
sadly Alice is not very popular. Her popularity score is

23
00:01:10,110 --> 00:01:12,930
a 1. So that looks like a base case, right

24
00:01:12,930 --> 00:01:15,920
we define the base case for factorial for 0 for palindrome

25
00:01:15,920 --> 00:01:18,410
for space. Let's pick Alice as our base case

26
00:01:18,410 --> 00:01:22,000
now. And. That works like this for the mathematical

27
00:01:22,000 --> 00:01:24,240
definition. For the python code, what we would need

28
00:01:24,240 --> 00:01:26,150
to do is add the base case, as in a

29
00:01:26,150 --> 00:01:28,460
statement. So we would insert a line here that

30
00:01:28,460 --> 00:01:35,110
says that if p is Alice, return Alice's popularity

31
00:01:35,110 --> 00:01:38,500
score which is our base case which is 1.

32
00:01:38,500 --> 00:01:41,300
So this looks more like the recursive definitions we've seen.

33
00:01:41,300 --> 00:01:43,410
Now we have a question. See if this

34
00:01:43,410 --> 00:01:46,850
actually works. So the question is, would this definition

35
00:01:46,850 --> 00:01:51,770
work? The possible answers are, only if everyone

36
00:01:51,770 --> 00:01:54,720
is friends with Alice, only if no one is

37
00:01:54,720 --> 00:01:58,200
friends with Alice, only if, from every person

38
00:01:58,200 --> 00:02:00,940
in the network,. There's some way that you can

39
00:02:00,940 --> 00:02:04,550
follow links that eventually reaches Alice. Only if there

40
00:02:04,550 --> 00:02:06,410
are no cycles in the graph. So there's no

41
00:02:06,410 --> 00:02:08,720
way to start from one person and end

42
00:02:08,720 --> 00:02:10,663
up at the same person by following friendship's, by

43
00:02:10,663 --> 00:02:15,090
following friendship links. And the final choice is no,

44
00:02:15,090 --> 00:02:18,050
that there's really no situation where this works well.
