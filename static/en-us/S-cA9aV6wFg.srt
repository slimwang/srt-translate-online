1
00:00:00,000 --> 00:00:00,981
In the meme app,

2
00:00:00,981 --> 00:00:05,272
we need to show the Activity view in
order to enable users to share memes.

3
00:00:05,272 --> 00:00:07,254
Let's go back into our
experiment app and

4
00:00:07,254 --> 00:00:09,811
see about presenting
the ActivityViewController.

5
00:00:09,811 --> 00:00:12,571
We'll start out with just
an empty image object,

6
00:00:12,571 --> 00:00:17,020
we can then use that image to
instantiate a UI ActivityViewController.

7
00:00:17,020 --> 00:00:18,619
And then we just present it.

8
00:00:18,619 --> 00:00:20,100
Let's see how that worked.

9
00:00:21,760 --> 00:00:23,424
And there's our Activity View.

10
00:00:23,424 --> 00:00:26,330
One can make an alert
view in a similar way.

11
00:00:26,330 --> 00:00:29,509
Here we're just constructing
our AlertViewController and

12
00:00:29,509 --> 00:00:32,061
presenting it and
then we'll try and run it, and

13
00:00:32,061 --> 00:00:35,002
then we'll try and
present our AlertViewController.

14
00:00:35,002 --> 00:00:37,270
Oh, uh-oh, okay.

15
00:00:37,270 --> 00:00:42,343
So let's scroll up to the top of
the console to see what's going on.

16
00:00:42,343 --> 00:00:47,000
URL alert controller must have a title,
a message, or an action to display.

17
00:00:47,000 --> 00:00:50,752
Okay, so if we add one of those,
this should fix the error.

18
00:00:50,752 --> 00:00:52,340
So we'll try that.

19
00:00:52,340 --> 00:00:54,588
Let's close the console up.

20
00:00:54,588 --> 00:00:58,583
And then we'll return to our

21
00:00:58,583 --> 00:01:03,750
ViewController and close that too.

22
00:01:05,910 --> 00:01:09,375
So here we're adding a title and
a message to our AlertViewController, so

23
00:01:09,375 --> 00:01:11,138
let's see if that fixes the problem.

24
00:01:11,138 --> 00:01:14,410
All right,
show me an Alert View hey, sweet.

25
00:01:15,970 --> 00:01:19,414
Okay, now we're successfully
presenting our AlertViewController, but

26
00:01:19,414 --> 00:01:21,415
right now there's no
way to make it go away.

27
00:01:21,415 --> 00:01:23,467
Remember that any time
you present a view,

28
00:01:23,467 --> 00:01:26,640
you also need to provide the user
with a way to dismiss it.

29
00:01:26,640 --> 00:01:29,168
The first two view controllers
we presented had their

30
00:01:29,168 --> 00:01:30,572
own Cancel buttons built in,

31
00:01:30,572 --> 00:01:34,295
but Alert View doesn't have that, so
we have to solve the problem ourselves.

32
00:01:34,295 --> 00:01:38,937
We could just try adding this
dismissViewController method right after

33
00:01:38,937 --> 00:01:40,720
presentViewController.

34
00:01:40,720 --> 00:01:42,740
Let's see what that does.

35
00:01:42,740 --> 00:01:47,423
Okay, show me an alert view oh,
well it showed me an alert view but

36
00:01:47,423 --> 00:01:50,244
then the alert view immediately left.

37
00:01:50,244 --> 00:01:53,877
Which is not that surprising since we
called dismissViewController immediately

38
00:01:53,877 --> 00:01:56,420
after we called presentViewController.

39
00:01:56,420 --> 00:02:00,842
What we really want is for the AlertView
to be dismissed after the user has taken

40
00:02:00,842 --> 00:02:03,124
some action like clicking an OK button.

41
00:02:03,124 --> 00:02:05,993
AlertView has an interesting
way to do this with closures.

42
00:02:05,993 --> 00:02:08,169
As you know, closures like this one,

43
00:02:08,169 --> 00:02:11,640
enable us to pass methods
around as arguments.

44
00:02:11,640 --> 00:02:13,335
So let's see how that looks.

45
00:02:13,335 --> 00:02:17,306
Okay, our AlertView appears,
I click OK, and it goes away.

46
00:02:17,306 --> 00:02:17,880
Perfect.
