1
00:00:00,800 --> 00:00:04,570
Lets take Mora's advice and move away from using histograms. Up

2
00:00:04,570 --> 00:00:07,990
to this point we've looked at distributions of single variables. For

3
00:00:07,990 --> 00:00:11,460
example, friend count, and at most we looked at different subsets

4
00:00:11,460 --> 00:00:14,270
of friend count by splitting it, using a factor, or in

5
00:00:14,270 --> 00:00:16,780
our case it was gender. Now we're going to look at

6
00:00:16,780 --> 00:00:20,600
two continuous variables at the same time. So, to get started,

7
00:00:20,600 --> 00:00:23,510
make sure you're in the right working directory, and then go

8
00:00:23,510 --> 00:00:27,010
ahead and load your data set and load the ggplot library.

9
00:00:27,010 --> 00:00:29,440
Usually it's best to use a scatter plot to examine

10
00:00:29,440 --> 00:00:33,150
the relationship between two continuous variables. Q plot chooses the

11
00:00:33,150 --> 00:00:36,350
scatter plot automatically when we pass two continuous variables to

12
00:00:36,350 --> 00:00:38,580
the x and y parameters, so let's go ahead and

13
00:00:38,580 --> 00:00:41,610
do that. I'll pass age to the x parameter, and

14
00:00:41,610 --> 00:00:44,750
I'll pass friend count to the y parameter, and finally

15
00:00:44,750 --> 00:00:47,220
I'll indicate that my data set is pf, my pseudo

16
00:00:47,220 --> 00:00:52,200
Facebook users. Now, there's over 99,000 observations in our data,

17
00:00:52,200 --> 00:00:54,230
so when we create this plot, it might take a

18
00:00:54,230 --> 00:00:59,120
few moments to render. And there it is. We could also

19
00:00:59,120 --> 00:01:02,190
write this code which will produce the same exact plot. This

20
00:01:02,190 --> 00:01:05,239
time, I'm not using the x and y parameters explicitly. And

21
00:01:05,239 --> 00:01:08,790
that's okay, because qplot knows which variables to use on which

22
00:01:08,790 --> 00:01:12,470
axis. X will come first, and y will come second. I'll

23
00:01:12,470 --> 00:01:14,030
run this code, just so that way you can see the

24
00:01:14,030 --> 00:01:17,220
same plot being produced. And there we go, we have a

25
00:01:17,220 --> 00:01:21,460
pretty ugly scatter plot, but what are some things that you noticed, right away?
