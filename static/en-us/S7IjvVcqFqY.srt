1
00:00:00,060 --> 00:00:04,775
Want to do what's called a dual stack deployment. In a dual stack deployment a

2
00:00:04,775 --> 00:00:07,955
host can speak both IPv4 and IPv6. It

3
00:00:07,955 --> 00:00:11,665
communicates with an IPv4 host using IPv4 and

4
00:00:11,665 --> 00:00:15,530
communicates with an IPv6 host using IPv6.

5
00:00:15,530 --> 00:00:17,550
What this means is that the dual stack

6
00:00:17,550 --> 00:00:22,610
host has to have an IPv4 compatible address.

7
00:00:22,610 --> 00:00:26,180
Either the host has both an IPv4 and

8
00:00:26,180 --> 00:00:32,330
an IPv6 address, thus allowing it to speak to an IPv4 host or it must rely

9
00:00:32,330 --> 00:00:38,390
on a translator, which knows how to take a v4 compatible IPv6 address,

10
00:00:38,390 --> 00:00:44,060
and translate it, to the v4 address. One possible way of ensuring compatibility,

11
00:00:44,060 --> 00:00:51,400
of a v6 address with IPv4, is simply to embed the IPv4 address, in 32 bits of

12
00:00:51,400 --> 00:00:57,290
the 128 that are allocated for the IPv6 address. Now, a dual stack post

13
00:00:57,290 --> 00:01:03,610
configuration or a v4 compatible IPv6 address solves the problem of post

14
00:01:03,610 --> 00:01:05,910
IP address assignment, but it doesn't

15
00:01:05,910 --> 00:01:09,790
solve the problem that IPv6 deployments might

16
00:01:09,790 --> 00:01:13,670
exist as islands. For example, multiple

17
00:01:13,670 --> 00:01:16,582
independent portions of the Internet might deploy

18
00:01:16,582 --> 00:01:21,990
IPv6, but what if the middle of the network only speaks in routes IPv4? The

19
00:01:21,990 --> 00:01:26,530
solution here is to use what's called 6 to 4 tunneling. In 6 to 4 tunneling,

20
00:01:26,530 --> 00:01:31,470
a v6 packet is encapsulated in a v4 packet. Now, that

21
00:01:31,470 --> 00:01:36,570
v4 packet Is routed to a particular v4 to v6 gateway

22
00:01:36,570 --> 00:01:41,580
corresponding to the v6 address that lies behind that gateway.

23
00:01:41,580 --> 00:01:44,190
And at this point the outer layer of

24
00:01:44,190 --> 00:01:47,760
encapsulation can be stripped, and the v6 packet

25
00:01:47,760 --> 00:01:49,990
can be sent to its destination. This of

26
00:01:49,990 --> 00:01:53,970
course, requires the gateways at the boundaries between

27
00:01:53,970 --> 00:01:58,080
the v4 and v6 networks to perform encapsulation

28
00:01:58,080 --> 00:02:00,060
of the packet as it enters the v4

29
00:02:00,060 --> 00:02:02,760
only part of the network, and decapsulation as

30
00:02:02,760 --> 00:02:06,880
the packet enters the v6 island, where the destination

31
00:02:06,880 --> 00:02:07,850
host resides.
