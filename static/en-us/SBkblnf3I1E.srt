1
00:00:00,210 --> 00:00:03,810
So far we've seen two
complex types in Python.

2
00:00:03,810 --> 00:00:06,780
We've seen the string type and
we've seen the list type.

3
00:00:07,830 --> 00:00:09,920
Now, we're going to introduce
the dictionary type.

4
00:00:09,920 --> 00:00:12,880
So there are many things that
are common between these three.

5
00:00:12,880 --> 00:00:14,410
There are other things
that are different.

6
00:00:14,410 --> 00:00:19,420
So to create a string we could have
a sequence of characters inside quotes.

7
00:00:19,420 --> 00:00:22,630
To create a list we use
the square bracket, and

8
00:00:22,630 --> 00:00:27,080
we can have a sequence of elements
inside the square bracket.

9
00:00:27,080 --> 00:00:28,680
And the elements could be any type,

10
00:00:28,680 --> 00:00:31,260
unlike a string where they
had to be characters.

11
00:00:31,260 --> 00:00:33,500
So our string was
a sequence of characters.

12
00:00:33,500 --> 00:00:36,406
Our list was a list of
any kind of value, so

13
00:00:36,406 --> 00:00:39,460
a list of elements of any value.

14
00:00:39,460 --> 00:00:41,050
The dictionary type.

15
00:00:41,050 --> 00:00:42,940
We're going to create
using the curly bracket.

16
00:00:44,290 --> 00:00:47,960
And the entries inside
a dictionary are key value pairs.

17
00:00:47,960 --> 00:00:50,992
So here, I've created a dictionary
with two elements, and

18
00:00:50,992 --> 00:00:53,060
each element, the key is a string.

19
00:00:53,060 --> 00:00:54,960
Here's the string hydrogen, and

20
00:00:54,960 --> 00:00:58,450
the value associated with that element,
is the number.

21
00:00:58,450 --> 00:01:02,170
The keys in a dictionary can be any
immutable value, so they don't need to

22
00:01:02,170 --> 00:01:05,379
be strings, they could be numbers,
they could be other things.

23
00:01:05,379 --> 00:01:06,840
The values can be any value.

24
00:01:06,840 --> 00:01:11,780
So what a dictionary is,
is that set of key, value pairs.

25
00:01:11,780 --> 00:01:14,540
And the property that a dictionary
will give us is like the hash table,

26
00:01:14,540 --> 00:01:18,510
that we can look up a key and
get the value associated with that key.

27
00:01:18,510 --> 00:01:23,190
So one important property of all types
is whether they're immutable or mutable.

28
00:01:23,190 --> 00:01:24,930
We saw that the string was immutable,

29
00:01:24,930 --> 00:01:30,260
that means once we create a string,
we can't modify that string.

30
00:01:30,260 --> 00:01:33,290
It has the same value, it always has.

31
00:01:33,290 --> 00:01:38,050
A list was mutable, we can change
the values of elements in a list.

32
00:01:38,050 --> 00:01:40,170
After we create the list,
we could append to the list,

33
00:01:40,170 --> 00:01:41,450
adding new elements to it.

34
00:01:41,450 --> 00:01:43,500
A dictionary is also mutable.

35
00:01:43,500 --> 00:01:47,490
So after we create a dictionary,
we could add new key value pairs to it.

36
00:01:47,490 --> 00:01:51,390
We could change the value of
values associated with keys.

37
00:01:51,390 --> 00:01:55,820
We saw with strings, if s is a string,
then we can do s index i.

38
00:01:56,890 --> 00:01:59,990
That will give us the ith letter and
string.

39
00:01:59,990 --> 00:02:02,900
With list,
we can do something very similar.

40
00:02:02,900 --> 00:02:08,449
If p is a list, we can do p index i,
to get the ith element of the list.

41
00:02:08,449 --> 00:02:10,935
With dictionaries it's
a little bit different.

42
00:02:10,935 --> 00:02:14,890
The syntax is the same,
we can do d index k.

43
00:02:14,890 --> 00:02:16,730
With both strings and lists.

44
00:02:16,730 --> 00:02:18,030
These were numbers.

45
00:02:18,030 --> 00:02:20,810
Here the k is whatever the key value is.

46
00:02:20,810 --> 00:02:22,960
So this is a key in the dictionary.

47
00:02:22,960 --> 00:02:27,520
What d index k will give us
the value associated with that key

48
00:02:27,520 --> 00:02:28,570
in the dictionary.

49
00:02:28,570 --> 00:02:30,110
We'll see some examples soon.

50
00:02:30,110 --> 00:02:32,000
We can also use our indexing and
assignments.

51
00:02:32,000 --> 00:02:34,800
We saw with the list we could do this.

52
00:02:34,800 --> 00:02:39,980
That would replace the value of the ith
element of p with whatever we have here.

53
00:02:39,980 --> 00:02:43,400
With the string, we can't do that.

54
00:02:43,400 --> 00:02:44,960
That produces an error.

55
00:02:44,960 --> 00:02:47,890
And the reason we can't do it,
is because strings are immutable, so

56
00:02:47,890 --> 00:02:50,900
there's no way to modify
characters in a string.

57
00:02:50,900 --> 00:02:54,230
With the dictionary, we can,
and what the meaning of this,

58
00:02:54,230 --> 00:02:57,700
is very similar to the meaning
of update in our hash table, so

59
00:02:57,700 --> 00:03:02,230
that's equivalent to update the value,
the value associated with k to be v.
