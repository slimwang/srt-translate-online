1
00:00:00,480 --> 00:00:03,870
Remember our previous lesson about
making sure elements appear in the DOM

2
00:00:03,870 --> 00:00:06,400
in a way that makes sense for
the tab order?

3
00:00:06,400 --> 00:00:09,880
Well, what do you do when you have
content which isn't on screen yet, but

4
00:00:09,880 --> 00:00:11,310
still needs to be in the DOM?

5
00:00:12,490 --> 00:00:16,270
A good example of this is
a responsive drawer panel.

6
00:00:16,270 --> 00:00:18,950
Now this is a really
common UI pattern and

7
00:00:18,950 --> 00:00:21,850
it can present an interesting
challenge for accessibility.

8
00:00:22,870 --> 00:00:26,600
To illustrate this, here is the desktop
version of that same site and

9
00:00:26,600 --> 00:00:29,010
I want you to notice what
happens as I press the tab key.

10
00:00:30,130 --> 00:00:32,020
Focus will start off
up here in the corner.

11
00:00:32,020 --> 00:00:35,240
It will then move to this input,
this button, and

12
00:00:35,240 --> 00:00:37,040
then it's just going to disappear.

13
00:00:37,040 --> 00:00:39,210
Now, I'm still pressing the tab key,

14
00:00:39,210 --> 00:00:43,390
in fact I pressed it a few times now,
but we're not seeing anything.

15
00:00:45,240 --> 00:00:47,830
Wait, our focus just
appeared right down here.

16
00:00:47,830 --> 00:00:49,960
So, what happened there?

17
00:00:49,960 --> 00:00:51,490
Why did it disappear?

18
00:00:51,490 --> 00:00:53,410
Well, you might see where
I'm going with this.

19
00:00:53,410 --> 00:00:55,830
That whole time that
focus was off screen.

20
00:00:55,830 --> 00:01:00,170
It was actually hiding inside of
this drawer panel going through and

21
00:01:00,170 --> 00:01:04,010
focusing all of these individual links.

22
00:01:04,010 --> 00:01:06,510
Well this isn't really
a great situation to be in,

23
00:01:06,510 --> 00:01:10,110
and when you're building an application
you might occasionally find that

24
00:01:10,110 --> 00:01:13,980
as you're tabbing around focus
seems to suddenly just disappear.

25
00:01:13,980 --> 00:01:17,530
To figure out what's going on, you may
need to do a bit of detective work.

26
00:01:18,550 --> 00:01:21,180
If you're tapping around and
you notice focus suddenly disappears,

27
00:01:21,180 --> 00:01:24,970
you can go into your console and
log the document active element.

28
00:01:24,970 --> 00:01:26,670
So I'll do that right now.

29
00:01:26,670 --> 00:01:29,370
I'll start by focusing
my hamburger menu again.

30
00:01:29,370 --> 00:01:31,670
I'll move through to the input button.

31
00:01:31,670 --> 00:01:34,610
And once focus disappears,
I'll go down in my console and

32
00:01:34,610 --> 00:01:35,860
log document active element.

33
00:01:37,050 --> 00:01:40,730
Active element gives you a reference
to the currently focused item,

34
00:01:40,730 --> 00:01:43,980
which in this case looks like
some kind of fancy button.

35
00:01:43,980 --> 00:01:47,850
So you can go and look for our fancy
button here in our source code and

36
00:01:47,850 --> 00:01:50,050
make sure that it's not focusable.

37
00:01:50,050 --> 00:01:53,600
But another option to
do our detective work

38
00:01:53,600 --> 00:01:56,430
is to use the chrome accessibility
Dev tools extension.

39
00:01:57,530 --> 00:02:00,410
The Dev tools extension adds
a number of useful features,

40
00:02:00,410 --> 00:02:03,690
including an inspector which will
show you the accessibility properties

41
00:02:03,690 --> 00:02:08,259
of an element, as well as
a set of accessibility audits.

42
00:02:08,259 --> 00:02:10,110
You can find these by
opening the Dev tools and

43
00:02:10,110 --> 00:02:13,500
going to the Audits section,
located right here.

44
00:02:13,500 --> 00:02:17,410
Here, I've unchecked everything except
for the Accessibility audit itself.

45
00:02:17,410 --> 00:02:19,880
And I'm going to run it against
the present state of my page.

46
00:02:21,800 --> 00:02:25,160
When I do this, you'll see that
it produces a number of errors.

47
00:02:25,160 --> 00:02:28,560
Including items that are focusable,
but either invisible or

48
00:02:28,560 --> 00:02:30,470
obscured by another element.

49
00:02:30,470 --> 00:02:33,030
And looking at that list,
we can see our fancy button and

50
00:02:33,030 --> 00:02:36,700
all of the other anchor tags
inside of that off screen menu.

51
00:02:36,700 --> 00:02:41,460
To fix the drawer menu, one option would
be to set it to either display none or

52
00:02:41,460 --> 00:02:45,340
visibility hidden using CSS
whenever it's off screen.

53
00:02:45,340 --> 00:02:48,330
This will prevent focus from being
able to move into that element and

54
00:02:48,330 --> 00:02:51,400
focusing any of the child
links inside of it.

55
00:02:51,400 --> 00:02:53,480
And then when the element
comes back on screen, or

56
00:02:53,480 --> 00:02:55,770
just before it's about
to animate on screen,

57
00:02:55,770 --> 00:02:59,470
we can set it back to display:block or
set the visibility back to visible.

58
00:03:00,610 --> 00:03:03,930
Now in the next section, we'll have
you do some sleuthing of your own

59
00:03:03,930 --> 00:03:07,730
using these tools to find some off
screen content and then to fix it.
