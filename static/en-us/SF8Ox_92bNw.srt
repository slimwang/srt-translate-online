1
00:00:00,000 --> 00:00:02,535
Welcome to our extra challenged problems. This is

2
00:00:02,535 --> 00:00:04,785
the first in will be a set of problems designed to

3
00:00:04,785 --> 00:00:08,172
test, refresh, and reinforce the various skills we’ve

4
00:00:08,172 --> 00:00:11,321
learned in the class. I recommend that if you’re still

5
00:00:11,321 --> 00:00:13,373
working through the class then you finish that first

6
00:00:13,373 --> 00:00:14,682
and then come back to this challenged problems

7
00:00:14,682 --> 00:00:17,240
later. Before we get to the first problem, I want to

8
00:00:17,240 --> 00:00:18,639
tell a quick story.

9
00:00:18,639 --> 00:00:20,822
I used to live in Chicago and I wanted to bike for

10
00:00:20,822 --> 00:00:24,058
my apartment in Lakeview down to work in the

11
00:00:24,058 --> 00:00:26,853
Loop, so I did what anybody would do and I looked

12
00:00:26,853 --> 00:00:30,001
for directions online and the suggested route took

13
00:00:30,001 --> 00:00:35,788
me along the Lake Shore bike path and basically

14
00:00:35,788 --> 00:00:38,981
cut across to work. This seems like a great route,

15
00:00:38,981 --> 00:00:41,899
it’s along the bike path, along the lake, which is a

16
00:00:41,899 --> 00:00:44,147
very pretty ride, unfortunately it’s also a very

17
00:00:44,147 --> 00:00:46,911
popular place for people to walk, for people to run,

18
00:00:46,911 --> 00:00:49,607
and for people to take the dogs for a walk and it’s

19
00:00:49,607 --> 00:00:51,567
actually a very hard place to bike.

20
00:00:51,567 --> 00:00:53,934
The suggested route along the Lake Shore might

21
00:00:53,934 --> 00:00:56,104
have been based on some factors such as

22
00:00:56,104 --> 00:00:58,883
distance or how hilly the route was and whether

23
00:00:58,883 --> 00:01:02,429
you want a bike path or a bike lane and there is

24
00:01:02,429 --> 00:01:05,541
probably some other ones but they don’t take dogs

25
00:01:05,541 --> 00:01:08,067
into account. One possible solution is to find two

26
00:01:08,067 --> 00:01:10,872
paths and then let the user choose between the

27
00:01:10,872 --> 00:01:14,278
two options. If you’re curious, I ended up taking a

28
00:01:14,278 --> 00:01:20,095
route down Clark Street and Wells Street to work.

29
00:01:20,095 --> 00:01:22,803
Now with that idea, in this assignment, we want

30
00:01:22,803 --> 00:01:25,381
you to take a graph and a starting node and

31
00:01:25,381 --> 00:01:27,567
calculate the top two paths every node – every

32
00:01:27,567 --> 00:01:30,121
other node in that graph. In addition to passing the

33
00:01:30,121 --> 00:01:31,860
greater you should try to write your algorithm as

34
00:01:31,860 --> 00:01:34,541
efficiently as possible. There is a link to the form

35
00:01:34,541 --> 00:01:36,469
where you can discuss your approach and your

36
00:01:36,469 --> 00:01:39,067
calculated run time. If you post code, please

37
00:01:39,067 --> 00:01:42,746
explain what you are doing at each step and why?
