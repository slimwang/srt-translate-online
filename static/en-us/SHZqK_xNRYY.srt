1
00:00:00,340 --> 00:00:03,058
In this task, you're going to
set up a database for Wittr, and

2
00:00:03,058 --> 00:00:04,580
add posts into it.

3
00:00:04,580 --> 00:00:06,740
Some of the methods have
been stubbed out for you, so

4
00:00:06,740 --> 00:00:08,640
you want to check out that code.

5
00:00:08,640 --> 00:00:13,900
To do that run, get reset hard to
remove any local changes you have.

6
00:00:13,900 --> 00:00:19,180
Then, get check out task-idb-store,
to get the stubbed methods.

7
00:00:19,180 --> 00:00:20,820
We're back to editing Wittr, so

8
00:00:20,820 --> 00:00:26,448
ahead over to
Public/js/main/indexcontroler.js.

9
00:00:26,448 --> 00:00:29,230
In the constructor we're
creating a promise for

10
00:00:29,230 --> 00:00:31,950
our database by calling openDatabase.

11
00:00:31,950 --> 00:00:36,470
This method is incomplete, your task
is to return a promise for a database

12
00:00:36,470 --> 00:00:42,250
called wittr that has a objectStore
called wittrs that uses id as its key,

13
00:00:42,250 --> 00:00:47,120
and has an index called by-date,
which is sorted by the time property.

14
00:00:47,120 --> 00:00:50,660
The idb polyfill has been imported
at the top of this script, so

15
00:00:50,660 --> 00:00:52,310
it's ready to use.

16
00:00:52,310 --> 00:00:55,710
Once you've done that, you need
to add messages to the database.

17
00:00:55,710 --> 00:00:59,950
Down in _onSocketMessage,
the database has been fetched.

18
00:00:59,950 --> 00:01:04,069
Your task, is to add each of
the messages to the Wittr store.

19
00:01:04,069 --> 00:01:06,840
Note that we're not using
the entries in the database yet,

20
00:01:06,840 --> 00:01:09,000
we'll do that in the next chapter.

21
00:01:09,000 --> 00:01:10,520
This is a lot to cover, but

22
00:01:10,520 --> 00:01:12,900
you've done most of this
already earlier in the course.

23
00:01:12,900 --> 00:01:19,410
The code in public/js/idbtest/index.js
should act as a good reference.

24
00:01:19,410 --> 00:01:23,180
Also, if your database gets into
a bad state, go into dev tools and

25
00:01:23,180 --> 00:01:28,650
run indexedDB.delte-database,
and pass it a parameter of Wittr.

26
00:01:28,650 --> 00:01:31,940
This will remove the database and
let you start afresh.

27
00:01:31,940 --> 00:01:33,430
Once you've created the database,

28
00:01:33,430 --> 00:01:36,110
refresh Wittr in the browser
to run your code.

29
00:01:36,110 --> 00:01:39,230
Developing gets a lot easier if
you have developer tools open and

30
00:01:39,230 --> 00:01:41,310
force update on reload checked.

31
00:01:41,310 --> 00:01:44,090
So you only need to refresh
once to see changes.

32
00:01:44,090 --> 00:01:47,700
If everything's working, you should
see the Wittr database and dev tools.

33
00:01:47,700 --> 00:01:52,480
A Wittr's object stored,
a by date index, and some messages.

34
00:01:52,480 --> 00:01:55,596
To double check everything is working,
head to the settings page, and

35
00:01:55,596 --> 00:01:59,720
type idb-store into the test field,
then press enter.
