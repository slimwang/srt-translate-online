1
00:00:00,440 --> 00:00:02,969
So we said that in a partial directory we

2
00:00:02,969 --> 00:00:05,976
can run out of directory entries. So if we

3
00:00:05,976 --> 00:00:09,072
need to allocate a new entry because a block

4
00:00:09,072 --> 00:00:11,910
is being sent to a level one and level two

5
00:00:11,910 --> 00:00:15,092
cache and we need to mark where it's present

6
00:00:15,092 --> 00:00:17,672
the question is, what do we do in our

7
00:00:17,672 --> 00:00:21,354
directory. And the answer is we pick an entry

8
00:00:21,354 --> 00:00:25,454
to replace, for example, using some sort of LRU algorithm

9
00:00:25,454 --> 00:00:29,460
in our directory. Let's call that entry E. So, that

10
00:00:29,460 --> 00:00:32,460
E is the entry we are replacing, not the new

11
00:00:32,460 --> 00:00:35,188
entry we are putting in. The new entry we put

12
00:00:35,188 --> 00:00:37,625
in, we know what to do with it. We are going to

13
00:00:37,625 --> 00:00:40,856
set that one presence bit to one. The question is

14
00:00:40,856 --> 00:00:43,376
what do we do about the entry E because that

15
00:00:43,376 --> 00:00:47,840
entry might have some presence bit set. For every presence

16
00:00:47,840 --> 00:00:50,915
bit that is set in that entry that we are replacing

17
00:00:50,915 --> 00:00:53,240
we need to send an invalidation to the

18
00:00:53,240 --> 00:00:58,390
corresponding cache. Pretty much this entry says that that

19
00:00:58,390 --> 00:01:02,220
block is in some caches. We're going to

20
00:01:02,220 --> 00:01:05,500
tell these caches to either invalidate or send us

21
00:01:05,500 --> 00:01:08,140
the data and invalidate, so that at the

22
00:01:08,140 --> 00:01:10,940
end of this process all of the presence bit

23
00:01:10,940 --> 00:01:16,140
can be set to zero at which point, entry E can be removed from the cache because

24
00:01:16,140 --> 00:01:20,940
all presence bits are zero and such an entry does not need to be kept in the

25
00:01:20,940 --> 00:01:24,360
cache. And now we can put a new entry

26
00:01:24,360 --> 00:01:27,979
there. So note that now we are not invalidating

27
00:01:27,979 --> 00:01:31,911
blocks because of coherence. We are invalidating them

28
00:01:31,911 --> 00:01:35,678
because of limited capacity in our directory. So this

29
00:01:35,678 --> 00:01:38,954
technically would be yet another type of miss that

30
00:01:38,954 --> 00:01:41,558
we can have. It's a miss that had nothing

31
00:01:41,558 --> 00:01:44,078
to do with either coherence or capacity or

32
00:01:44,078 --> 00:01:47,842
conflict or anything like that. It's a type of

33
00:01:47,842 --> 00:01:51,300
miss that usually we don't need to name, but

34
00:01:51,300 --> 00:01:54,239
just be aware that it exists. So we can

35
00:01:54,239 --> 00:01:56,588
have a cache miss in a level one or

36
00:01:56,588 --> 00:02:00,416
level two cache that was caused by an invalidation,

37
00:02:00,416 --> 00:02:04,244
and that invalidation was not due to coherence, was

38
00:02:04,244 --> 00:02:06,800
not due to a write. It was due to

39
00:02:06,800 --> 00:02:11,000
a replacement of that block's directory entry on the chip.
