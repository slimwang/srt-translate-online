1
00:00:00,080 --> 00:00:04,337
Welcome back to computer vision today we're going to continue talking about

2
00:00:04,337 --> 00:00:08,720
features, or interest points interest point operators key-points,

3
00:00:08,720 --> 00:00:12,341
in particular last time we talked in fact last couple of times we

4
00:00:12,341 --> 00:00:15,980
talked about how to find interest points, how to detect them.

5
00:00:15,980 --> 00:00:20,940
And we talked about the Harris operator and other kinds of ways of finding them.

6
00:00:20,940 --> 00:00:26,180
And here, for example, typical picture of finding interest points.

7
00:00:26,180 --> 00:00:30,250
In two images, and so this is like about a 500 points extracted with

8
00:00:30,250 --> 00:00:34,290
a Harris detector, and you can see that, well there are a bunch of points found.

9
00:00:34,290 --> 00:00:38,220
And what's good is that a lot of points, like here on this turret here,

10
00:00:38,220 --> 00:00:40,500
is also found on this one, there.

11
00:00:40,500 --> 00:00:42,240
So one of the things that we're looking for

12
00:00:42,240 --> 00:00:47,080
is remember we talked about reliability, that points that you find on one.

13
00:00:47,080 --> 00:00:48,880
Should be found on the other.

14
00:00:48,880 --> 00:00:50,070
But now the question is,

15
00:00:50,070 --> 00:00:52,790
given that we found points in two images, image one, image two.

16
00:00:52,790 --> 00:00:54,160
Image a, image b.

17
00:00:54,160 --> 00:00:55,910
Alpha bravo, take, pick your favorite.

18
00:00:55,910 --> 00:00:58,200
The question is, how do we match them?

19
00:00:58,200 --> 00:01:01,800
How do we determine which points in the left image are the same as points in

20
00:01:01,800 --> 00:01:03,620
the right or multiple images.

21
00:01:03,620 --> 00:01:07,540
So to do this, we need what's referred to as a descriptor.

22
00:01:07,540 --> 00:01:10,560
A descriptor is a description of the neighborhood.

23
00:01:10,560 --> 00:01:14,680
Where the interest point is, and then we're, that's going to allow us to match.

24
00:01:14,680 --> 00:01:18,200
Now, we need a couple of properties of the descriptors, and

25
00:01:18,200 --> 00:01:21,130
what's important is that these properties sort of trade off.

26
00:01:21,130 --> 00:01:24,740
The first is that we want these descriptors to be what we call invariant.

27
00:01:24,740 --> 00:01:26,370
That is, they should be.

28
00:01:26,370 --> 00:01:29,720
Almost the same from one image to the next.

29
00:01:29,720 --> 00:01:31,520
So why do I say almost?

30
00:01:31,520 --> 00:01:34,220
Wouldn't it be great if they were exactly the same?

31
00:01:34,220 --> 00:01:36,740
Well it would be great if they were exactly the same but

32
00:01:36,740 --> 00:01:38,420
also there were no duplicates.

33
00:01:38,420 --> 00:01:41,780
Remember that silly example I gave a couple of lessons back which maybe you

34
00:01:41,780 --> 00:01:43,680
just watched now or maybe you watch eight months ago.

35
00:01:43,680 --> 00:01:44,490
I have no idea.

36
00:01:44,490 --> 00:01:45,150
Where I said, you know,

37
00:01:45,150 --> 00:01:48,130
if we name everything George then it's easy to match them.

38
00:01:48,130 --> 00:01:48,960
Except not really.

39
00:01:48,960 --> 00:01:50,460
Because everybody matches perfectly.

40
00:01:50,460 --> 00:01:52,970
But you don't know which George is the right George.

41
00:01:52,970 --> 00:01:54,510
So the way we say that is,

42
00:01:54,510 --> 00:01:58,070
we also want our descriptors to be distinctive, all right?

43
00:01:58,070 --> 00:01:59,790
Distinctive means that.

44
00:01:59,790 --> 00:02:03,740
One point, you know, some particular point here has the same at the,

45
00:02:03,740 --> 00:02:06,920
corresponding location as the other image has one descriptor.

46
00:02:06,920 --> 00:02:09,630
But a different point would have a different descriptor.

47
00:02:09,630 --> 00:02:13,160
And the reason that's challenging is because these two

48
00:02:13,160 --> 00:02:14,760
images are a little bit different,

49
00:02:14,760 --> 00:02:19,380
it means even the same point like the top of that Diet Coke cap that you

50
00:02:19,380 --> 00:02:22,930
guys can't see that Megan's been drinking because she drinks a lot of Diet Coke.

51
00:02:22,930 --> 00:02:24,080
Anyway ,.

52
00:02:24,080 --> 00:02:28,260
When I move a little bit, the image changes a little.

53
00:02:28,260 --> 00:02:31,840
So, th, the neighborhood is not exactly the same anymore.

54
00:02:31,840 --> 00:02:34,550
So the descriptor is probably going to change a little bit, but

55
00:02:34,550 --> 00:02:37,850
we don't want to change so much that I can't tell that they're the same,

56
00:02:37,850 --> 00:02:40,910
but on the other hand, there's another cap nearby.

57
00:02:40,910 --> 00:02:43,320
That I'd like it not to have the same descriptors so

58
00:02:43,320 --> 00:02:47,070
that they can be, you know, unambiguously matched.

59
00:02:47,070 --> 00:02:51,280
So we have this tradeoff between being invariant, found each time, and

60
00:02:51,280 --> 00:02:53,410
being distinctive, one is different from the next.

61
00:02:54,600 --> 00:02:57,280
So you might say, look I've got a solution.

62
00:02:57,280 --> 00:02:59,330
>> I've got a simple solution.

63
00:02:59,330 --> 00:03:01,760
>> We know that the Harris detector.

64
00:03:01,760 --> 00:03:02,950
Gives pretty good detection and

65
00:03:02,950 --> 00:03:06,760
remember we did that whole thing to talk about how to find the right scale.

66
00:03:06,760 --> 00:03:08,760
Right so we even know sort of the scale of the window.

67
00:03:08,760 --> 00:03:11,280
So, why don't we just do this?

68
00:03:11,280 --> 00:03:15,120
Why don't we for every feature we have here, we pick a window whose scale has

69
00:03:15,120 --> 00:03:21,050
been determined and we'll just do correlation against all of the feature points.

70
00:03:21,050 --> 00:03:24,000
Over here, using their appropriate scale, and then we

71
00:03:24,000 --> 00:03:27,700
just pick the best matches, and we go through and through that all the way.

72
00:03:27,700 --> 00:03:29,560
That would be a great solution, right?

73
00:03:29,560 --> 00:03:30,180
Well, no.

74
00:03:30,180 --> 00:03:34,090
If it was, then I wouldn't be here telling you all this.

75
00:03:34,090 --> 00:03:35,980
So why isn't this so good?

76
00:03:35,980 --> 00:03:37,600
Well, first of all.

77
00:03:37,600 --> 00:03:39,660
Just remembering about correlation.

78
00:03:39,660 --> 00:03:42,790
We have these two pictures and we might have a different picture over here,

79
00:03:42,790 --> 00:03:45,860
a camera over here, and the, fe, features could have rotated.

80
00:03:45,860 --> 00:03:48,320
Right? And correlation is not rotation in variance at all.

81
00:03:48,320 --> 00:03:49,510
Remember we talked about how.

82
00:03:49,510 --> 00:03:52,140
Harris detectors are very robust with respect to the de,

83
00:03:52,140 --> 00:03:54,210
the rotation for detection, but

84
00:03:54,210 --> 00:03:58,010
to do the matching, we have to be robust with respect to rotation as well.

85
00:03:58,010 --> 00:04:01,500
Correlation also is pretty sensitive if I made things brighter or

86
00:04:01,500 --> 00:04:04,120
dimmer, et cetera, I would actually change the values.

87
00:04:04,120 --> 00:04:06,100
So remember we introduced this thing called normalize.

88
00:04:06,100 --> 00:04:08,670
Correlation, well that's not really your savior either,

89
00:04:08,670 --> 00:04:11,080
because it sensitive to non linear changes.

90
00:04:11,080 --> 00:04:14,190
And actually very slight geometric distortions,

91
00:04:14,190 --> 00:04:17,660
can cause your normalized correlation to get pretty bad.

92
00:04:17,660 --> 00:04:18,660
So as I move and

93
00:04:18,660 --> 00:04:22,100
that bottle cap changes, it's appearance to me just a little bit.

94
00:04:22,100 --> 00:04:25,340
The normalized correlation could become problematic.

95
00:04:25,340 --> 00:04:28,660
And also this idea that I'm going to take one and I'm going to compare it

96
00:04:28,660 --> 00:04:33,020
against all of the others, and then the next one, all of the others.

97
00:04:33,020 --> 00:04:34,410
That would be very expensive, so

98
00:04:34,410 --> 00:04:37,090
we'd like to do something that's a lot smarter than that.

99
00:04:37,090 --> 00:04:39,990
So, this lesson, and the one next,

100
00:04:39,990 --> 00:04:42,630
is about, sort of, essentially overcoming these problems.
