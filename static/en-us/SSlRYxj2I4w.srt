1
00:00:00,960 --> 00:00:05,710
Well this sounds like
it's a very complex

2
00:00:07,580 --> 00:00:11,090
collection of technologies
that you have.

3
00:00:11,090 --> 00:00:15,850
But I understand that you've developed
a novel approach to architecting

4
00:00:15,850 --> 00:00:18,280
these applications called layer blocks.

5
00:00:18,280 --> 00:00:20,739
Could you tell us a little bit about
what motivated you to do this?

6
00:00:21,900 --> 00:00:28,670
>> Sure, so thus far, we've talked
largely about kind of how the high-level

7
00:00:28,670 --> 00:00:31,990
deployment architecture of the system
works and what makes it interesting.

8
00:00:31,990 --> 00:00:35,270
But I've been pretty abstract
with respect to the code itself.

9
00:00:35,270 --> 00:00:37,360
And what gets loaded
into those databases.

10
00:00:37,360 --> 00:00:40,830
You may recall at the beginning I
was saying that one thing that makes

11
00:00:40,830 --> 00:00:43,340
our company a little different and our
technologies stacked a little different

12
00:00:43,340 --> 00:00:46,750
is that we actually install
code into the databases, and

13
00:00:46,750 --> 00:00:49,240
you can think of those databases as
being active rather than passive.

14
00:00:49,240 --> 00:00:51,130
Their actively calculating and

15
00:00:51,130 --> 00:00:55,140
coming up with results rather
than just being dumb date stores.

16
00:00:55,140 --> 00:00:58,630
So that code that we write and

17
00:00:58,630 --> 00:01:03,180
install on those databases itself has
some interesting software engineering

18
00:01:03,180 --> 00:01:08,730
challenges because we implement all of
the business rules in our applications,

19
00:01:08,730 --> 00:01:11,770
in that code, and then install it.

20
00:01:11,770 --> 00:01:15,650
And one of the things we've found is
that particularly with applications,

21
00:01:15,650 --> 00:01:18,970
like forecast managers and most of the
other predictive applications that we're

22
00:01:18,970 --> 00:01:23,899
developing, is that we are often are not
developing just a single product, but

23
00:01:23,899 --> 00:01:27,160
in fact, we are often developing
something more akin to a product line.

24
00:01:27,160 --> 00:01:31,360
That is we find that there are many
slightly different variances of

25
00:01:33,000 --> 00:01:37,220
use of the same algorithm
like forecasting.

26
00:01:37,220 --> 00:01:40,160
But they need to be deployed
in slightly different ways for

27
00:01:40,160 --> 00:01:42,290
slightly different contexts.

28
00:01:42,290 --> 00:01:44,920
And so, what motivated Layer Blocks was,

29
00:01:44,920 --> 00:01:49,620
after we had been doing some
development on the first

30
00:01:49,620 --> 00:01:54,498
Forecast Manager application, we noticed
that a lot of the work we were doing was

31
00:01:54,498 --> 00:01:58,820
kind of developing code that
really seemed redundant.

32
00:01:58,820 --> 00:02:02,710
That we're developing the same kinds
of algorithms multiple times for

33
00:02:02,710 --> 00:02:03,990
these different uses.

34
00:02:03,990 --> 00:02:05,660
And we wanted to find
a way to unify that, so

35
00:02:05,660 --> 00:02:09,740
we could do the development once,
very efficiently, and

36
00:02:09,740 --> 00:02:16,200
manage this growing list of variants
of the same component or functionality.

37
00:02:16,200 --> 00:02:19,430
>> So this is getting back to
the challenge you mentioned at the start

38
00:02:19,430 --> 00:02:24,490
about that each customer has
their own specific needs, okay.

39
00:02:24,490 --> 00:02:27,120
But that you'd like,
to the extent possible,

40
00:02:27,120 --> 00:02:32,510
to have a common solution to reduce your
costs of dealing with the customers.

41
00:02:32,510 --> 00:02:33,300
>> Exactly.

42
00:02:33,300 --> 00:02:37,120
Yeah, you don't want to have to develop
a system, a component from scratch for

43
00:02:37,120 --> 00:02:37,710
each customer.

44
00:02:37,710 --> 00:02:40,470
If you've got 100 customers, you don't
want to have to develop 100 components.

45
00:02:40,470 --> 00:02:44,540
And what you want to do is you want to
develop one component very nicely so

46
00:02:44,540 --> 00:02:47,660
that it can be configured and
packaged in different ways very easily.

47
00:02:47,660 --> 00:02:49,750
And that's what we
developed LayerWise for.
