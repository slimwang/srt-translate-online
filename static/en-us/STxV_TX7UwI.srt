1
00:00:00,000 --> 00:00:02,000
Alright, let's go ahead and take a look at this code.

2
00:00:02,000 --> 00:00:06,500
We start out by grabbing the length of the n by n matrix

3
00:00:06,500 --> 00:00:09,000
that we're interested in, and we store that in n.

4
00:00:09,000 --> 00:00:14,000
Then we said v equaled -1; this is the vertex that we're currently looking at.

5
00:00:14,000 --> 00:00:19,000
Now, for every element in the graph, every vertex in the graph,

6
00:00:19,000 --> 00:00:22,000
we check if the assignment is none.

7
00:00:22,000 --> 00:00:26,000
And if so, we set that to be the vertex that we are looking at right now.

8
00:00:26,000 --> 00:00:31,000
Then we check, for each of those vertices, whether there is an edge

9
00:00:31,000 --> 00:00:34,000
between that and any other vertices.

10
00:00:34,000 --> 00:00:41,000
If there is, then either the assignment for i or j, the vertex we're starting at

11
00:00:41,000 --> 00:00:43,500
and the vertex we're ending at, should be 1.

12
00:00:43,500 --> 00:00:49,500
If both are zero, then this isn't going to work, so we return float infinity.

13
00:00:49,500 --> 00:00:53,000
Now if we fall through checking every single element, and we don't get

14
00:00:53,000 --> 00:00:58,500
float infinity as a return value, then if v is still equal to -1,

15
00:00:58,500 --> 00:01:03,000
then we set the size equal to zero, and for every element in the assignment

16
00:01:03,000 --> 99:59:59,999
that is equal to 1, we increase the size of the vertex cover until we return the total size.
