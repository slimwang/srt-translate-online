1
00:00:00,350 --> 00:00:04,200
The third myth about microkernel based design is

2
00:00:04,200 --> 00:00:07,210
that the thread switches and inter process communication

3
00:00:07,210 --> 00:00:09,960
can be very expensive. And by thread switch

4
00:00:09,960 --> 00:00:13,060
we mean, if you are executing one thread

5
00:00:13,060 --> 00:00:15,980
in a particular protection domain and going to

6
00:00:15,980 --> 00:00:19,250
execute another thread in a different protection domain,

7
00:00:19,250 --> 00:00:22,270
how much time does it take for this

8
00:00:22,270 --> 00:00:25,130
thread switch to be effected by the microkernel,

9
00:00:25,130 --> 00:00:27,590
that's the question that we're asking here. Here

10
00:00:27,590 --> 00:00:31,600
again, we're only talking about the explicit cost of

11
00:00:31,600 --> 00:00:34,700
doing the thread switching. And the explicit cost that

12
00:00:34,700 --> 00:00:38,080
is involved in thread switching, is saving all the

13
00:00:38,080 --> 00:00:41,180
volatile state of the processor, the T1 thread

14
00:00:41,180 --> 00:00:44,110
that is running on the processor. It's modified the

15
00:00:44,110 --> 00:00:46,910
registers of the CPU. All of that has to

16
00:00:46,910 --> 00:00:50,840
be stashed away in the thread context block before

17
00:00:50,840 --> 00:00:54,440
we can schedule the second thread to run on the processor. The cost that we're

18
00:00:54,440 --> 00:00:57,060
talking about is saving all the volatile state

19
00:00:57,060 --> 00:01:00,390
of the processor. And what L3 does is

20
00:01:00,390 --> 00:01:05,940
once again, by construction, it shows that the thread switch time in L3

21
00:01:05,940 --> 00:01:11,230
microkernel is as competitive as SPIN and exokernel. So,

22
00:01:11,230 --> 00:01:16,590
once again by construction, L3 debunks that myth that microkernel

23
00:01:16,590 --> 00:01:21,930
based OL structure is going to be more expensive for thread switching

24
00:01:21,930 --> 00:01:26,930
compared to SPIN or exokernel or even a monolithic operating system.
