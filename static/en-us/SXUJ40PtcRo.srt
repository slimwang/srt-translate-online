1
00:00:00,190 --> 00:00:03,100
So if there was a new request that is forming,

2
00:00:03,100 --> 00:00:05,200
you know that the new request would have called the

3
00:00:05,200 --> 00:00:09,390
lock algorithm. And if you call this lock algorithm, and

4
00:00:09,390 --> 00:00:14,370
it actually executed this fetch and store operation, then you know

5
00:00:14,370 --> 00:00:16,820
that this link is no longer going to be pointing

6
00:00:16,820 --> 00:00:19,780
to me. But is going to be pointing to him,

7
00:00:19,780 --> 00:00:21,820
right? And that's what this fetch and store would have

8
00:00:21,820 --> 00:00:25,922
done. It is to give this new guy my coordinates, and

9
00:00:25,922 --> 00:00:29,304
it'll also set the linked list to point to him

10
00:00:29,304 --> 00:00:32,580
as the last requester. So that would have been accomplished

11
00:00:32,580 --> 00:00:35,340
through this fetch-and-store. So what I have to do, when

12
00:00:35,340 --> 00:00:38,020
I come in and try to unlock, that is, removing

13
00:00:38,020 --> 00:00:41,970
me from the queue. Even though my next pointer is

14
00:00:41,970 --> 00:00:45,240
nil, I cannot trust it entirely because it could be

15
00:00:45,240 --> 00:00:48,590
a successor that is forming, it's just that it's not

16
00:00:48,590 --> 00:00:51,600
that the formation of the list is not complete yet.

17
00:00:51,600 --> 00:00:54,350
So what should I do? Well, remember when I told

18
00:00:54,350 --> 00:00:56,670
you if I was the only guy, what I wanted to

19
00:00:56,670 --> 00:00:59,070
do was to set this guy to nil to indicate

20
00:00:59,070 --> 00:01:03,450
that there's no requesters after me. the, the list is empty.

21
00:01:03,450 --> 00:01:05,850
But before I do that, I have to double check

22
00:01:05,850 --> 00:01:09,890
if there is a request that is in the information. And,

23
00:01:09,890 --> 00:01:13,570
in other words, I want to have an atomic ray of setting

24
00:01:13,570 --> 00:01:17,740
this guy to nil, if in fact he's pointing to me.

25
00:01:17,740 --> 00:01:20,770
And the invariant in this case, is that. If he's

26
00:01:20,770 --> 00:01:23,050
pointing to me, I can set him to nil. If he's

27
00:01:23,050 --> 00:01:24,880
not pointing to me, I cannot set him to nil

28
00:01:24,880 --> 00:01:27,962
because he's pointing to somebody else. That's the invariant that I

29
00:01:27,962 --> 00:01:29,976
should be looking for, so I need an atomic way

30
00:01:29,976 --> 00:01:33,123
of checking for the that invariant. And the invariant is in

31
00:01:33,123 --> 00:01:39,520
the form of a conditional, store operation. The conditional store being.

32
00:01:39,520 --> 00:01:42,820
Do this store only if some condition is satisfied. Now in

33
00:01:42,820 --> 00:01:46,080
this particular case, I'm going to tell you a primitive

34
00:01:46,080 --> 00:01:49,250
that will be useful for this purpose. And that primitive

35
00:01:49,250 --> 00:01:51,810
is what is called compare and swap. It takes three

36
00:01:51,810 --> 00:01:57,310
arguements. The first two arguments is saying, here is L and

37
00:01:57,310 --> 00:02:00,000
this is me. Check if these two are the same.

38
00:02:00,000 --> 00:02:02,930
If these two are the same, then you set L

39
00:02:02,930 --> 00:02:05,410
to the third argument. The third argument is what L

40
00:02:05,410 --> 00:02:07,980
has to be set to if these two are the same.

41
00:02:07,980 --> 00:02:09,639
That's where it's called compare and swap. You are

42
00:02:09,639 --> 00:02:12,290
comparing the first two arguments, and if the first two

43
00:02:12,290 --> 00:02:16,360
arguments happen to be equal, then we are saying set

44
00:02:16,360 --> 00:02:19,420
the first argument to be equal to the third argument.

45
00:02:19,420 --> 00:02:21,950
So that's the idea behind compare and swap. So,

46
00:02:21,950 --> 00:02:25,960
essentially when I execute the compare and swap operation, on

47
00:02:25,960 --> 00:02:30,480
L, me, and nil. What I'm telling is to, to

48
00:02:30,480 --> 00:02:33,130
set this guy to nil if he's pointing to me.

49
00:02:33,130 --> 00:02:34,550
If he is not pointing to me, don't do

50
00:02:34,550 --> 00:02:37,100
that. So that's the idea behind compare and sway.
