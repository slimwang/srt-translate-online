1
00:00:00,240 --> 00:00:02,676
What if we wee painting all of the spaces in a checkerboard, and we were

2
00:00:02,676 --> 00:00:07,242
painting them blue and red? When we're drawing this rectangle we need to figure

3
00:00:07,242 --> 00:00:12,730
out whether it's going to blue or red based on the number of its indexes. We

4
00:00:12,730 --> 00:00:17,305
want to write a method that takes the row and the column of a space, and then

5
00:00:17,305 --> 00:00:23,346
gives us a one. If the space should be red and a zero if the space should be

6
00:00:23,346 --> 00:00:29,003
blue. The public interface of this method might look like this. So, we need

7
00:00:29,003 --> 00:00:32,594
some mathematical expression which takes a row and a column and gives back a

8
00:00:32,594 --> 00:00:39,280
one or a zero. If the row and the column are both even or both odd, you should

9
00:00:39,280 --> 00:00:44,504
get back a zero. If the row is odd but the column is even, then you should get

10
00:00:44,504 --> 00:00:49,572
back a one for red. And if the row is even but the column is odd, you should

11
00:00:49,572 --> 00:00:53,686
also give back a one. In the checkerboard project that we provided for you in

12
00:00:53,686 --> 00:00:57,158
blue jay, you'll want to implement checkerboard painter, and write a test

13
00:00:57,158 --> 00:01:02,260
method in checkerboard painter tester. Try running the main method of painted

14
00:01:02,260 --> 00:01:05,702
checkerboard. Once you've finished, if you need a hint, think about what

15
00:01:05,702 --> 00:01:10,210
happens if you add an even number to an odd number. Do you get an even number

16
00:01:10,210 --> 00:01:11,769
or an odd number?
