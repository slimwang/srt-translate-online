1
00:00:01,189 --> 00:00:04,189
Let's talk about the powerful
capabilities of the database, so

2
00:00:04,190 --> 00:00:06,089
you can see why we use it.

3
00:00:06,089 --> 00:00:10,530
Our database synchronizes data,
so that every time data changes,

4
00:00:10,529 --> 00:00:14,509
all connected devices receive
that change within milliseconds.

5
00:00:14,509 --> 00:00:17,320
A message sent by one
person in friendly chat.

6
00:00:17,320 --> 00:00:20,140
Quickly show up in their friends app and
this makes for

7
00:00:20,140 --> 00:00:23,260
a seamless user experience, and
simplifies the code for you.

8
00:00:24,274 --> 00:00:29,820
Firebase apps also remain responsive
even when the user is offline, because

9
00:00:29,820 --> 00:00:33,810
the database can cache your data in
the app using only a few line of code.

10
00:00:34,859 --> 00:00:40,057
That means if a client makes a change to
the data that change is stored locally,

11
00:00:40,057 --> 00:00:44,335
so the app continues to working
even when the device is offline.

12
00:00:44,335 --> 00:00:46,669
When the user reconnects to the network,

13
00:00:46,668 --> 00:00:50,542
the app will automatically synchronize
with the Firebase servers.

14
00:00:50,542 --> 00:00:55,709
So similarly, any data even shown
in the app will still be there.

15
00:00:55,709 --> 00:01:01,330
So, the user won't suddenly open to an
empty screen and none of us likes that.

16
00:01:01,329 --> 00:01:05,759
The database aligns perfectly to
apps that use chat functionality

17
00:01:05,760 --> 00:01:10,290
like friendly chat, but there are so
many other use cases for the database.

18
00:01:10,290 --> 00:01:14,280
The database could be, for example,
used for mapping applications.

19
00:01:14,280 --> 00:01:17,900
So the MapSwipe app uses
the database to store and

20
00:01:17,900 --> 00:01:22,070
update information about locations
that need to be mapped, so

21
00:01:22,069 --> 00:01:27,179
that humanitarian organizations could
find people in need during a crisis.

22
00:01:27,180 --> 00:01:30,085
The database also works
with travel data.

23
00:01:30,084 --> 00:01:32,819
Skyscanner is a travel search site

24
00:01:32,819 --> 00:01:38,169
that uses Firebase to store data about
flights, hotels and car rentals.

25
00:01:38,170 --> 00:01:41,715
And since this kind of info
is almost always changing,

26
00:01:41,715 --> 00:01:46,043
the real-time database provides
a way to keep all of it up to date.

27
00:01:46,043 --> 00:01:49,569
An Instacart is a shopping service
where you select groceries

28
00:01:49,569 --> 00:01:52,501
to be delivered to your door
in as little as an hour.

29
00:01:52,501 --> 00:01:56,526
It uses the database to show what food
is available to order right now and

30
00:01:56,525 --> 00:01:59,479
keep track of what's in your order.

31
00:01:59,480 --> 00:02:04,117
All of this is just to say, these apps
are multi-user, collaborative and

32
00:02:04,117 --> 00:02:05,075
real-time and

33
00:02:05,075 --> 00:02:10,000
the Firebase real-time database
meets these requirements nicely.

34
00:02:10,000 --> 00:02:12,750
In order to understand how
the database could serve so

35
00:02:12,750 --> 00:02:17,090
many different purposes, let's now talk
about the structure of the database.

