1
00:00:00,300 --> 00:00:02,668
Here you can see the effect of moving the near and far clipping planes through

2
00:00:02,668 --> 00:00:07,152
the scene. Seeing this kind of clipping is usually a bug, not a feature. An

3
00:00:07,152 --> 00:00:09,571
algorithm such as ray tracing doesn't have this sort of problem, as the

4
00:00:09,571 --> 00:00:13,536
mechanism there is to shoot rays from the eye. These two values, near and far,

5
00:00:13,536 --> 00:00:16,840
are necessary for rasterization to work sensibly, due to its use of the

6
00:00:16,840 --> 00:00:21,440
projection matrix. Well, at the minimum, you need to set the near distance.

7
00:00:21,440 --> 00:00:24,246
It's possible to form a projection matrix that gives a frustum with no far

8
00:00:24,246 --> 00:00:28,149
limit, the pyramid. The key thing about these two values is you want to set

9
00:00:28,149 --> 00:00:33,050
them to be as close together as you can, without causing any clipping to occur.

10
00:00:33,050 --> 00:00:35,930
The near plane is particularly important to move as far as possible away from

11
00:00:35,930 --> 00:00:39,948
the camera. The near and far values determine how the z buffer value is

12
00:00:39,948 --> 00:00:43,680
computed. Internally the z buffer value typically gets stored as an integer

13
00:00:43,680 --> 00:00:47,696
value with some number of bits. For example, 24 bits is common with 8 bits for

14
00:00:47,696 --> 00:00:52,172
what's called the stencil buffer. This is a separate buffer I'm not going to

15
00:00:52,172 --> 00:00:54,967
talk about in this course but that can be used for on-screen clipping and other

16
00:00:54,967 --> 00:00:59,371
effects. The z buffer has lots of bits, but not an infinite number of them. For

17
00:00:59,371 --> 00:01:02,144
example, if you're rendering a sheet of paper on top of your desk you can

18
00:01:02,144 --> 00:01:05,293
easily get z fighting even if you've modeled everything correctly and the sheet

19
00:01:05,293 --> 00:01:10,712
is slightly above the desk. At some pixels, the z value of the paper and the

20
00:01:10,712 --> 00:01:15,145
desktop will have the same value and the desktop can then bleed on through. The

21
00:01:15,145 --> 00:01:18,542
z depth range of values is spread between the near and far distances. It's

22
00:01:18,542 --> 00:01:21,470
clear that having these two distances close together directly benefits

23
00:01:21,470 --> 00:01:25,324
precision. However, with the perspective transform in particular, you want to

24
00:01:25,324 --> 00:01:30,100
move the near plane as far from the I as possible. Here's an example. Say we

25
00:01:30,100 --> 00:01:32,746
have our near plane at a distance of one unit away from the camera, and the far

26
00:01:32,746 --> 00:01:37,629
plane ten units away. The NDC z depth does not vary linearly, but instead forms

27
00:01:37,629 --> 00:01:42,600
a hyperbolic curve. For example, say we have an object that's seven units away.

28
00:01:42,600 --> 00:01:48,782
The NDC z value's about 9.0 when the near distance is one unit. In other words,

29
00:01:48,782 --> 00:01:52,770
the z depths of more distant objects are relatively higher. These objects that

30
00:01:52,770 --> 00:01:56,341
are farther away have to share a small range of z depth values. And so are more

31
00:01:56,341 --> 00:02:00,324
likely to exhibit z fighting. The reason the z depth values vary in this non

32
00:02:00,324 --> 00:02:04,105
linear way has to do with interpolation. We want straight lines to stay

33
00:02:04,105 --> 00:02:07,926
straight when using perspective projection. I won't prove it to you here. But

34
00:02:07,926 --> 00:02:11,084
think of train tracks disappearing into the distance. Near the camera, the

35
00:02:11,084 --> 00:02:14,978
railroad ties are visually far apart. As you move toward the horizon, the

36
00:02:14,978 --> 00:02:19,082
tracks get closer and closer together. The distance between the tracks is the

37
00:02:19,082 --> 00:02:22,966
same, of course. And the track stays straight. But the distance between them on

38
00:02:22,966 --> 00:02:26,952
the image changes. The w value for homogeneous coordinates is interpolated

39
00:02:26,952 --> 00:02:31,300
linearly. But when used for division, gives us this differing rate of change.

40
00:02:31,300 --> 00:02:34,318
To get back to setting the near and far planes. Say we're able to safely move

41
00:02:34,318 --> 00:02:38,240
the near plane to a distance of five units, and not cause clipping. We're

42
00:02:38,240 --> 00:02:40,840
effectively taking this piece of our original graph, and stretching it to our

43
00:02:40,840 --> 00:02:44,795
new range. First, we get the simple benefit of having a smaller range between

44
00:02:44,795 --> 00:02:49,627
the near and far. We also get a more linear graph. The more you increase the

45
00:02:49,627 --> 00:02:52,635
near plane relative to the far plane, the slower the NDC z depth actually goes

46
00:02:52,635 --> 00:02:56,741
to 1. The long and short is that moving the near plane away from the camera has

47
00:02:56,741 --> 00:02:59,534
a large benefit, much larger than moving the far plane in by a similar

48
00:02:59,534 --> 00:03:04,120
distance. Of course this all begs the question, how do we know where to set

49
00:03:04,120 --> 00:03:09,126
these planes. The far distance is usually relatively easy to compute. Either we

50
00:03:09,126 --> 00:03:11,898
know in advance or perform some rough computation to determine the distance to

51
00:03:11,898 --> 00:03:16,231
the farthest object in the scene. The near clipping plane is trickier. You

52
00:03:16,231 --> 00:03:19,192
usually have to have some rules such as not letting your camera get too close

53
00:03:19,192 --> 00:03:22,798
to the walls. Or some rule of thumb such as the, the near plane will be 1

54
00:03:22,798 --> 00:03:27,542
1,000th the distance of that of the far plane. Some more elaborate systems will

55
00:03:27,542 --> 00:03:31,102
do a prepass, setting the near plane very close to the camera. It'll do a quick

56
00:03:31,102 --> 00:03:33,786
render of nearby objects, to determine a good distance for setting of the

57
00:03:33,786 --> 00:03:38,340
scene, and then render the whole scene. There's no single perfect solution.
