1
00:00:00,000 --> 00:00:05,000
[Narrator] The question for the challenge is you're given 2 intercepted cipher texts, C1 and C2.

2
00:00:05,000 --> 00:00:09,000
You can see those both below, and you know that they were both encrypted using a one time pad

3
00:00:09,000 --> 00:00:11,000
using the same key.

4
00:00:11,000 --> 00:00:13,000
They're also both messages in standard English.

5
00:00:13,000 --> 00:00:16,000
Your goal is to figure out what the 2 plain text messages were.

6
00:00:16,000 --> 00:00:20,000
You can enter these in any order, and it should be clear to you that

7
00:00:20,000 --> 00:00:25,000
which one is which can't really be determined, but figure out what the 2 plain text messages

8
00:00:25,000 --> 00:00:30,000
corresponding to the 2 intercepted cipher texts are, and I should mention that

9
00:00:30,000 --> 00:00:33,000
you can assume that both messages are in English

10
00:00:33,000 --> 00:00:37,000
and were encoded using string.to.bits that maps English to sequences of bits.

11
00:00:37,000 --> 00:00:40,000
I'm not going to provide an answer to this one,

12
00:00:40,000 --> 00:00:43,000
but I'll give you a hint how to get started if you are stuck,

13
00:00:43,000 --> 00:00:49,000
and that would be to try common English sequences of letters t-h-e would be a good one to try,

14
00:00:49,000 --> 00:00:53,000
and assume that probably appears somewhere in at least 1 of the quotes,

15
00:00:53,000 --> 00:01:00,000
and you can try t-h-e at each of the starting positions, and then assume that's in say message 1.

16
00:01:00,000 --> 00:01:06,000
You're going to guess cipher text 1 is t-h-e encrypted with a key,

17
00:01:06,000 --> 00:01:11,000
then you can compute the key from this that gives you what the likely key is,

18
00:01:11,000 --> 00:01:17,000
XORing string.to.bits of t-h-e with the corresponding part of that cipher text,

19
00:01:17,000 --> 00:01:24,000
and then you can XORing out the guest key from the corresponding part of message 2.

20
00:01:24,000 --> 00:01:28,000
If that looks like something that might be part of an English message,

21
00:01:28,000 --> 00:01:31,000
well, then, that's a good guess, and you can work on from there

22
00:01:31,000 --> 00:01:38,000
and start expanding the letters that you've guessed to see ones that produce reasonable results for both cipher texts.

23
00:01:38,000 --> 00:01:42,000
This is a fairly manual process; if you wanted to do this more automated way,

24
00:01:42,000 --> 99:59:59,999
well, then, you'd use properties of English to automate this kind of guessing and expansion for you.
