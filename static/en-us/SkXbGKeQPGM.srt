1
00:00:00,158 --> 00:00:03,680
Okay, so adding Memcache to Ascii Chan gave us two

2
00:00:03,680 --> 00:00:07,140
new properties that are really nice. One is that our cache

3
00:00:07,140 --> 00:00:10,990
survives restarts. Before when we're using that dictionary cache, if we

4
00:00:10,990 --> 00:00:13,970
updated our code, either locally or in production, our cache gets

5
00:00:13,970 --> 00:00:18,240
cleared. That's not a good quality. Or if, you know, in

6
00:00:18,240 --> 00:00:21,230
production if Google for some reason. Moves us a different machine

7
00:00:21,230 --> 00:00:23,120
or something like that. What's going to happen, our cache would get

8
00:00:23,120 --> 00:00:25,447
cleared. Which is also you know, it's not a good property,

9
00:00:25,447 --> 00:00:27,377
especially if you have a lot of traffic. And

10
00:00:27,377 --> 00:00:31,472
our app is now stateless, which is the key

11
00:00:31,472 --> 00:00:35,187
to scaling. What stateless means is our app between

12
00:00:35,187 --> 00:00:38,648
any two requests, stores no state. And that means we

13
00:00:38,648 --> 00:00:40,871
ca, that, that a, a number of, a number

14
00:00:40,871 --> 00:00:43,690
of properties come from this. You know, there's no state

15
00:00:43,690 --> 00:00:47,020
between requests. Which means our apps are now interchangeable.

16
00:00:47,020 --> 00:00:50,440
Which means we can have multiple apps without any drama.

17
00:00:50,440 --> 00:00:53,100
You know, we have our load balancer, we have our Memcached.

18
00:00:53,100 --> 00:00:55,600
And in between those two pieces of technology are as many

19
00:00:55,600 --> 00:00:58,080
app servers as we need. You know, adding more app servers

20
00:00:58,080 --> 00:01:02,110
is easy. likewise, removing an app server is also easy and,

21
00:01:02,110 --> 00:01:04,519
and not painful. And it means our apps can be scaled

22
00:01:04,519 --> 00:01:08,930
independently of. Our cache and our database. So we've got our

23
00:01:08,930 --> 00:01:12,610
app servers. You know, we've got our, our database, and you

24
00:01:12,610 --> 00:01:15,560
know we've got our cache. And if we find ourselves needing more

25
00:01:15,560 --> 00:01:18,730
app servers, we can add one. Let's add our load balancer in here

26
00:01:18,730 --> 00:01:21,430
for good measure. So now I've got all these pieces. We need another

27
00:01:21,430 --> 00:01:25,580
app server we add one. If we need another Memcache, we add one.

28
00:01:25,580 --> 00:01:27,990
Having lots of caches means we won't have to scale our database quite

29
00:01:27,990 --> 00:01:30,510
so fast, but if we need more database, we talked about this in

30
00:01:30,510 --> 00:01:33,770
unit three. You know, we can go with replication or we can go

31
00:01:33,770 --> 00:01:37,120
with sharding. But now you're starting to see the the kind of the

32
00:01:37,120 --> 00:01:40,800
bigger picture of how a website might grow. If you're really data heavy.

33
00:01:40,800 --> 00:01:43,962
You have lots of databases and maybe lots of caches. You know, if

34
00:01:43,962 --> 00:01:46,482
your database is, is very read heavy but not [UNKNOWN] it's not actually

35
00:01:46,482 --> 00:01:49,070
not a lot of data you would have more caches. If your, if

36
00:01:49,070 --> 00:01:51,514
your application is very computationally intensive, maybe

37
00:01:51,514 --> 00:01:52,736
you have lots of app servers and

38
00:01:52,736 --> 00:01:55,626
you don't need so much database support or not so much cache support.

39
00:01:55,626 --> 00:01:58,458
But what we want to do, is we want to make sure that all of

40
00:01:58,458 --> 00:02:01,170
these different pieces can grow independently.

41
00:02:01,170 --> 00:02:02,210
And that's kind of what scaling is

42
00:02:02,210 --> 00:02:05,910
all about, is putting yourself in a position so that when your app is

43
00:02:05,910 --> 00:02:09,740
constrained in different ways, you can grow each part kind of independent of the

44
00:02:09,740 --> 00:02:14,230
others. And now that our app is stateless, it's really easy to do that. And

45
00:02:14,230 --> 00:02:18,790
Memcache helps a lot because all of the, all of the state is either stored in

46
00:02:18,790 --> 00:02:26,410
cookies, the DB or Memcache, but not the apps. And that's really handy.
