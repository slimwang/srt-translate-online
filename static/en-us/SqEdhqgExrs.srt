1
00:00:00,000 --> 00:00:02,000
Let's say we want to continue formalizing

2
00:00:02,000 --> 00:00:04,000
our HTML grammar in Python.

3
00:00:04,000 --> 00:00:07,000
One of the other types of elements in HTML,

4
00:00:07,000 --> 00:00:09,000
aside from bare words, is

5
00:00:09,000 --> 00:00:11,000
tag-decorated words.

6
00:00:11,000 --> 00:00:13,000
You might put <bold> or an <anchor>

7
00:00:13,000 --> 00:00:16,000
or even something more complicated, like this, that changes the color.

8
00:00:16,000 --> 00:00:19,000
So just to remind you of what these HTML tags look like,

9
00:00:19,000 --> 00:00:23,000
they start with this Left Angle, there's some name;

10
00:00:23,000 --> 00:00:26,000
they might have some arguments, there's a Right Angle;

11
00:00:26,000 --> 00:00:28,000
there can be any HTML in the middle;

12
00:00:28,000 --> 00:00:31,000
then there's this Left Angle Slash, another word, and a Right Angle.

13
00:00:31,000 --> 00:00:33,000
And here, I've just written out that grammar rule:

14
00:00:33,000 --> 00:00:36,000
this LANGLE corresponds to this part.

15
00:00:36,000 --> 00:00:38,000
this word goes here,

16
00:00:38,000 --> 00:00:42,000
tag arguments--color = "Red",

17
00:00:42,000 --> 00:00:45,000
Right Angle is that one, HTML is here,

18
00:00:45,000 --> 00:00:48,000
LANGLESLASH is these two, and so on.

19
00:00:48,000 --> 00:00:50,000
And, here, I'll build up my parse tree

20
00:00:50,000 --> 00:00:52,000
by using part[2]: zero, 1, 2,

21
00:00:52,000 --> 00:00:55,000
the word, like span or bold or underline;

22
00:00:55,000 --> 00:00:58,000
the tag arguments--if there are any,

23
00:00:58,000 --> 00:01:02,000
the body--the words that are being modified by bold or underline,

24
00:01:02,000 --> 00:01:04,000
and then, finally, the final word--

25
00:01:04,000 --> 00:01:06,000
just to make sure, later on, that you've opened <span>

26
00:01:06,000 --> 00:01:08,000
and closed </span> or opened <bold> and closed </bold>.

27
00:01:08,000 --> 00:01:11,000
Remember, we want those parentheses to match.

28
00:01:11,000 --> 00:01:14,000
And our input text is: hello <baba> yaga,

29
00:01:14,000 --> 00:01:16,000
and we've got <baba> bolded.

30
00:01:16,000 --> 00:01:20,000
I'm going to ask you to take apart this concept and do it backwards.

31
00:01:20,000 --> 00:01:22,000
I have written out the parse tree,

32
00:01:22,000 --> 00:01:24,000
down here at the bottom,

33
00:01:24,000 --> 00:01:26,000
but I've left 3 blanks.

34
00:01:26,000 --> 00:01:28,000
I would like you to fill in the blanks

35
00:01:28,000 --> 00:01:30,000
with a single word

36
00:01:30,000 --> 00:01:33,000
that will make this parse tree correspond to

37
00:01:33,000 --> 99:59:59,999
what our parser will produce on this input.
