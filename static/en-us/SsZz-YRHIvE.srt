1
00:00:00,000 --> 00:00:04,000
So, Kolmogorov Complexity gives us an interesting way to think about randomness.

2
00:00:04,000 --> 00:00:06,000
It's certainly a useful notion

3
00:00:06,000 --> 00:00:09,000
in many areas of computer science.

4
00:00:09,000 --> 00:00:11,000
But, it's not going to give us a practical way

5
00:00:11,000 --> 00:00:13,000
to tell if the sequence is random.

6
00:00:13,000 --> 00:00:16,000
It won't even give us a theoretical way to do that because it's uncomputable.

7
00:00:16,000 --> 00:00:19,000
The next thing we might think about trying is statistical tests.

8
00:00:19,000 --> 00:00:23,000
And, this in fact often used as part of an argument

9
00:00:23,000 --> 00:00:25,000
that something produces random numbers.

10
00:00:25,000 --> 00:00:28,000
It should be part of that argument, but it can never be the whole argument.

11
00:00:28,000 --> 00:00:31,000
The only thing we can do with a statistical test

12
00:00:31,000 --> 00:00:33,000
is show that something is non-random.

13
00:00:33,000 --> 00:00:35,000
We can't ever prove that it is random.

14
00:00:35,000 --> 00:00:38,000
We can always find some non-random sequence

15
00:00:38,000 --> 00:00:41,000
that satisfies all of our statistical tests.

16
00:00:41,000 --> 00:00:43,000
So, we're left with our best argument

17
00:00:43,000 --> 00:00:46,000
is how the sequence is actually generated.

18
00:00:46,000 --> 00:00:48,000
If we know how the sequence is produced,

19
00:00:48,000 --> 00:00:51,000
we can have some confidence that it satisfies

20
00:00:51,000 --> 00:00:54,000
the randomness requirements we have,

21
00:00:54,000 --> 00:00:56,000
at least for generating a good key.

22
00:00:56,000 --> 00:00:58,000
And, the real requirement there is unpredictability.

23
00:00:58,000 --> 00:01:03,000
We want to know if our sequence is a sequence of numbers like this;

24
00:01:03,000 --> 00:01:08,000
where each xi is under the reign of 0 to 2 to n-1

25
00:01:08,000 --> 00:01:12,000
That even an attacker who's seen the first m numbers in the sequence

26
00:01:12,000 --> 00:01:16,000
can only guess the next one with the same probability they would have

27
00:01:16,000 --> 00:01:18,000
if they were just guessing by chance,

28
00:01:18,000 --> 00:01:22,000
only 1 out of 2, 2 to the n, the size of the elements in the sequence.

29
00:01:22,000 --> 00:01:24,000
So, that's the property we want.

30
00:01:24,000 --> 00:01:27,000
If we're going to get that property--and we can't do it

31
00:01:27,000 --> 00:01:30,000
by using Kolmogorov complexity because that's uncomputable

32
00:01:30,000 --> 00:01:33,000
and we can't do it with statistical tests because they can only show non-randomness--

33
00:01:33,000 --> 00:01:35,000
the way we're going to try to achieve that

34
00:01:35,000 --> 00:01:38,000
is by generating the sequence in a way that produces values

35
00:01:38,000 --> 99:59:59,999
that are unpredictable to the attacker.
