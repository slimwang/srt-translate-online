1
00:00:00,000 --> 00:00:03,150
And I think you'll agree that you now know a lot.

2
00:00:03,150 --> 00:00:07,110
So you know all of these problems here to be NP complete, which you probably

3
00:00:07,110 --> 00:00:09,180
didn't know before taking this course.

4
00:00:09,180 --> 00:00:12,060
We've also investigated intelligent search trees for vertex cover

5
00:00:12,060 --> 00:00:14,980
and for clique and independent set.

6
00:00:14,980 --> 00:00:20,040
We, unfortunately, were not able to find one for shortest tour, but we know one for 3-SAT.

7
00:00:20,040 --> 00:00:24,850
We talked about pre-processing for vertex cover, and we talked about pre-processing for 3-SAT.

8
00:00:24,850 --> 00:00:30,170
And we showed that vertex cover is fixed parameter tractable using the size of the solution,

9
00:00:30,170 --> 00:00:35,630
and we showed that shortest tour could be fixed parameter tractable as well as 3-SAT

10
00:00:35,630 --> 00:00:38,830
using a measure known as distance from triviality.

11
00:00:38,830 --> 00:00:43,200
We also talked about the constant-factor approximation algorithm for vertex cover.

12
00:00:43,200 --> 00:00:46,960
We showed that there is no such algorithm for clique and independent set.

13
00:00:46,960 --> 00:00:49,620
We had a constant-factor approximation algorithm for shortest tour.

14
00:00:49,620 --> 00:00:52,290
We did not touch upon 3-SAT unfortunately here.

15
00:00:52,290 --> 00:00:56,170
Regarding a PTAS, we know there's non-available for vertex cover.

16
00:00:56,170 --> 00:01:00,280
We also know there is non-available for clique and independent set unless P equals NP.

17
00:01:00,280 --> 00:01:05,010
We mentioned briefly that there might be some available for special cases of shortest tour

18
00:01:05,010 --> 00:01:07,760
but not in the general case also not for 3-SAT.

19
00:01:07,760 --> 00:01:10,300
Then we have the Monte Carlo algorithm for 3-SAT.

20
00:01:10,300 --> 00:01:16,190
We did not go much into Las Vegas algorithms here, but what we then also did

21
00:01:16,190 --> 00:01:21,030
we mentioned that all of these problems here are usually much better solvable in practice

22
00:01:21,030 --> 00:01:25,370
than the worst-case analysis and their NP completeness suggests.

23
00:01:25,370 --> 00:01:28,300
Now compare this table of knowledge

24
00:01:28,300 --> 00:01:33,290
with what the four computer scientists and you knew before taking this course.

25
00:01:33,290 --> 00:01:39,850
And I think you now know a lot about challenging problems but also about the techniques

26
00:01:39,850 --> 00:01:41,300
that you can use to solve them.

27
00:01:41,300 --> 00:01:46,190
So it's of course not all good news, because in general, these problems are hard,

28
00:01:46,190 --> 00:01:48,770
but using this arsenal of techniques here,

29
00:01:48,770 --> 00:01:53,200
you'll usually be able to do something about them in practice as others halve before you,

30
00:01:53,200 --> 00:01:57,900
and I think that can really really really make you stand out among other computer scientists

31
00:01:57,900 --> 00:02:02,390
because not many computer scientists understand the concept of NP completeness alone,

32
00:02:02,390 --> 00:02:08,070
but even those that do once they encounter an NP complete problem, they will tend to just give up

33
00:02:08,070 --> 00:02:11,730
or use some random algorithm, not a randomized one, a random one

34
00:02:11,730 --> 00:02:14,809
where as you now know about these techniques here

35
00:02:14,809 --> 99:59:59,999
and can use them to try and tackle those problems.
