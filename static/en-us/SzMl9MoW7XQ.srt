1
00:00:00,000 --> 00:00:02,000
[How to implement optimizations] Okay, well that sounds great, so far.

2
00:00:02,000 --> 00:00:05,000
We have an idea of when we can possibly remove things

3
00:00:05,000 --> 00:00:07,000
based on mathematical truths.

4
00:00:07,000 --> 00:00:09,000
But how do we actually implement them

5
00:00:09,000 --> 00:00:12,000
in our JavaScript interpretor--in our web browser?

6
00:00:12,000 --> 00:00:16,000
Well, step 1 is to think of a big library of optimizations.

7
00:00:16,000 --> 00:00:19,000
For example, X times 1 is always equal to X,

8
00:00:19,000 --> 00:00:22,000
and X+0 is always equal to X.

9
00:00:22,000 --> 00:00:24,000
So if I see one of these expressions,

10
00:00:24,000 --> 00:00:27,000
I could just replace it with the simpler one on the right.

11
00:00:27,000 --> 00:00:30,000
And I'm going to do that by transforming the parse tree directly.

12
00:00:30,000 --> 00:00:32,000
But before we talk about transforming the parse tree,

13
00:00:32,000 --> 00:00:36,000
we're going to need to be certain about what sort of optimizations we want.

14
00:00:36,000 --> 00:00:41,000
Remember, we can only do optimizations that don't change the meaning of the program.

15
00:00:41,000 --> 00:00:43,000
We have to get the same answer, just in less time.

16
00:00:43,000 --> 00:00:46,000
So here I'm going to have you take a look and evaluate

17
00:00:46,000 --> 00:00:49,000
or tell me about some candidate optimizations.

18
00:00:49,000 --> 00:00:52,000
I want you to fill in each of these 4 blanks. [X<i>1==<u>_] [X</u>0==_</i>] [X*2==<u>_] [X/X==_</u>]

19
00:00:52,000 --> 00:00:55,000
Write the simplest expression you can to make the equality true.

20
00:00:55,000 --> 00:00:59,000
So can I replace X times 1 with something simple that fits in this box?

21
00:00:59,000 --> 00:01:01,000
Write the simplest expression you can

22
00:01:01,000 --> 00:01:04,000
that retains the meaning in all cases.

23
00:01:04,000 --> 99:59:59,999
This is a little trickier than it looks, so try it out.
