1
00:00:00,490 --> 00:00:04,412
For the solution, I added a line of thresholding code, using a turnary if

2
00:00:04,412 --> 00:00:08,039
statement. One problem you might notice with this algorithm is that the

3
00:00:08,039 --> 00:00:12,500
highlights are actually too sharp now. If you look closely at the result, it's

4
00:00:12,500 --> 00:00:16,910
quite aliased since values are either on or off. This sharpness is also true

5
00:00:16,910 --> 00:00:20,190
for our tune shader. But it's even more obvious here because the contrast

6
00:00:20,190 --> 00:00:24,280
between light and dark is so great. There are ways of modifying the function so

7
00:00:24,280 --> 00:00:27,900
that it is smoother at a transition point. Though because it's view dependent,

8
00:00:27,900 --> 00:00:32,384
it's hard to get this exactly right. Alternately, anti-aliasing schemes such as

9
00:00:32,384 --> 00:00:36,490
FXAA, can clean up problems like this. I leave it to you to experiment.
