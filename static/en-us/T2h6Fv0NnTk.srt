1
00:00:00,970 --> 00:00:04,960
Project four is very different from
the first three projects that you have

2
00:00:04,960 --> 00:00:08,830
worked on, in the sense you're not going
to be double-upping anything, right?

3
00:00:08,830 --> 00:00:12,765
You are only going to be optimizing the
webpage that is already given to you.

4
00:00:12,765 --> 00:00:13,483
>> Mm-hm.

5
00:00:13,483 --> 00:00:18,710
>> So, project four is where
you actually get to see

6
00:00:18,710 --> 00:00:22,960
how each of the events in your webpage,

7
00:00:22,960 --> 00:00:26,890
starting from your scripting
events to appending them and

8
00:00:26,890 --> 00:00:33,500
rendering them on your website and
how much time it takes to load them and

9
00:00:33,500 --> 00:00:38,610
how it's going to affect your whole
efficiency of your webpage as a whole.

10
00:00:38,610 --> 00:00:40,100
>> So the experience of your users.

11
00:00:40,100 --> 00:00:44,257
You know that feeling when
you scroll on a webpage and

12
00:00:44,257 --> 00:00:48,241
it's just dragging or
it's kind of slow and lags?

13
00:00:48,241 --> 00:00:50,985
It's a really unpleasant experience.

14
00:00:50,985 --> 00:00:51,485
>> That's true.

15
00:00:51,485 --> 00:00:57,045
>> And the best websites are those that
feel really smooth and are very usable.

16
00:00:57,045 --> 00:00:59,725
So this is part of that usability.

17
00:00:59,725 --> 00:01:02,535
And people's patience,
with high speed Internet, man,

18
00:01:02,535 --> 00:01:04,155
we just expect things really quickly.

19
00:01:04,155 --> 00:01:04,944
>> That's right.

20
00:01:04,944 --> 00:01:10,180
>> And so,
optimization helps you make it look like

21
00:01:10,180 --> 00:01:15,020
everything is much smoother and faster
just by being really efficient and

22
00:01:15,020 --> 00:01:19,990
organized and methodical with the way
that we load our page and contents and

23
00:01:19,990 --> 00:01:22,140
render everything in the proper order.

24
00:01:22,140 --> 00:01:23,580
Also learn about caching.

25
00:01:24,920 --> 00:01:28,900
>> For project four, it's important to
know there are kind of two major parts.

26
00:01:30,060 --> 00:01:38,044
The first major part of project four
is getting a good PageSpeed score.

27
00:01:38,044 --> 00:01:38,762
So, you have ngrok.

28
00:01:38,762 --> 00:01:42,503
So, if you run your server
on your own computer,

29
00:01:42,503 --> 00:01:45,437
you can then use ngrok to tunnel that.

30
00:01:45,437 --> 00:01:48,621
So that then you'll get an actual URL,

31
00:01:48,621 --> 00:01:52,590
which on the web you
can plug into sites.

32
00:01:52,590 --> 00:01:54,965
Or you can also use GitHub
to make a bio page.

33
00:01:54,965 --> 00:01:55,710
>> Mm-hmm.

34
00:01:55,710 --> 00:01:58,237
>> And plug that in if you don't want
to run a server on your own computer.

35
00:01:59,690 --> 00:02:04,280
And there's lots of instructions and
good suggestions on PageSpeed Insights

36
00:02:04,280 --> 00:02:09,940
to tell you how to optimize your page
and you can also apply a lot things

37
00:02:09,940 --> 00:02:14,960
you've learned about minimizing the
critical rendering path in the course.

38
00:02:14,960 --> 00:02:19,680
So through a combination of following
the suggestions on that page and

39
00:02:19,680 --> 00:02:24,595
what you learned in the course,
you can increase your page score,

40
00:02:24,595 --> 00:02:31,890
Insights score, to above 90 on both your
mobile and desktop version of your page.

41
00:02:31,890 --> 00:02:38,920
The second part of the project Involves
really getting into the JavaScript.

42
00:02:38,920 --> 00:02:42,740
I mean so once you've done all
the things that you learned about in

43
00:02:42,740 --> 00:02:45,780
the course in order to
make your page run faster.

44
00:02:45,780 --> 00:02:50,800
And sometimes it's actually your
JavaScript that slows you down and so

45
00:02:50,800 --> 00:02:55,510
we've created some Cam's Pizzeria,
is a sort of fictitious webpage.

46
00:02:55,510 --> 00:02:58,333
Somebody who wants to sell
these outlandish pizzas.

47
00:02:58,333 --> 00:03:02,110
They're actually pretty funny
if you read the descriptions.

48
00:03:02,110 --> 00:03:04,470
And you're supposed to
make that page faster.

49
00:03:04,470 --> 00:03:07,350
And in that case it's
actually the JavaScript.

50
00:03:07,350 --> 00:03:12,470
So take all your great JavaScripting
skills that you learned in OOJS and

51
00:03:12,470 --> 00:03:17,008
apply them to that pizza webpage and
see if you can optimize it.

52
00:03:17,008 --> 00:03:20,188
You're really looking at the Java code,
trying to speed it up.

53
00:03:20,188 --> 00:03:22,625
We've given you,
just try it first yourself and

54
00:03:22,625 --> 00:03:24,414
we've given you a lot of hints too.

55
00:03:24,414 --> 00:03:28,010
If you look at the office hours and you
find a lot of the extra documentation

56
00:03:28,010 --> 00:03:31,890
we've created, it should point
you in the right direction.

57
00:03:31,890 --> 00:03:34,210
It's a good exercise to just
try it yourself first and

58
00:03:34,210 --> 00:03:36,350
see what is inefficient about the code.

59
00:03:36,350 --> 00:03:39,502
And then if you get stuck,
maybe look at more of the documentation

60
00:03:39,502 --> 00:03:42,430
we've provided to sort
of get you all the way.

61
00:03:44,250 --> 00:03:49,320
>> I think the next two parts of
the rubric is just on commons and

62
00:03:49,320 --> 00:03:50,350
documentation.

63
00:03:50,350 --> 00:03:51,730
Which is also a very
big part [CROSSTALK].

64
00:03:51,730 --> 00:03:55,712
>> Very important,
not just within Udacity,

65
00:03:55,712 --> 00:04:00,631
not just for your projects, but-
>> [CROSSTALK] Through

66
00:04:00,631 --> 00:04:02,040
your career, yeah.

67
00:04:02,040 --> 00:04:04,968
>> You communicate with people and
it's so

68
00:04:04,968 --> 00:04:09,470
much easier when you add commons and
make your code readable.

69
00:04:09,470 --> 00:04:13,070
So I think the next three
sections are the code quality.

70
00:04:13,070 --> 00:04:17,248
So in this project, mostly you're just
editing code that's been given to you.

71
00:04:17,248 --> 00:04:24,060
So make sure that the parts that
where you do edit is readable.

72
00:04:24,060 --> 00:04:28,601
The indications are the same or
appropriate indications in the sense as

73
00:04:28,601 --> 00:04:32,440
you go through it and
comments where you made changes.

74
00:04:32,440 --> 00:04:33,890
And then they readme,

75
00:04:33,890 --> 00:04:37,930
we want to know exactly how you
want us to work with your project.

76
00:04:37,930 --> 00:04:38,680
>> That's right.

77
00:04:38,680 --> 00:04:42,491
>> If you are hosting it on GitHub.io,
we want to know the website and

78
00:04:42,491 --> 00:04:46,360
we want to know anything
else that you may have done.

79
00:04:46,360 --> 00:04:50,599
If you use Grunt and Gulp,
let us know that you have used it and

80
00:04:50,599 --> 00:04:53,943
just list out the optimizations
that you made.

81
00:04:53,943 --> 00:04:57,332
>> That's true, yeah,
on some of the students,

82
00:04:57,332 --> 00:05:01,911
actually it's not very necessary
to list out optimizations but

83
00:05:01,911 --> 00:05:06,090
why we stress on it is because
the main .jsfile is so long.

84
00:05:06,090 --> 00:05:13,120
It's huge and we are only going to check
specific areas that need optimization.

85
00:05:13,120 --> 00:05:18,480
Which are the two fixes that Cameron
has already asked you guys to work on.

86
00:05:18,480 --> 00:05:21,810
So, yes, definitely, we are going
to look through your main .js and

87
00:05:21,810 --> 00:05:23,810
see if you made changes to it.

88
00:05:23,810 --> 00:05:28,740
But it will help if we have a quick
bullet in the readme saying hey,

89
00:05:28,740 --> 00:05:33,280
this is the part in this file that
I've got I mean part and change on.

90
00:05:33,280 --> 00:05:36,469
So you can refer to it in main.js file,
but

91
00:05:36,469 --> 00:05:41,341
you can also add bullets in your readme,
that would make things so

92
00:05:41,341 --> 00:05:45,694
much easier for us and
make us grade your projects faster.

93
00:05:45,694 --> 00:05:50,897
>> And don't ignore that readme
part because, I don't think anybody

94
00:05:50,897 --> 00:05:55,590
over here likes to send submissions
bak for that one reason.

95
00:05:55,590 --> 00:05:59,760
>> It's very difficult to see that
you've performed optimization,

96
00:05:59,760 --> 00:06:00,450
it's great.

97
00:06:00,450 --> 00:06:03,820
You've used these built tools,
it looks perfect and

98
00:06:03,820 --> 00:06:08,790
we don't want to send back just
because you forget comments or readme.

99
00:06:08,790 --> 00:06:16,140
Because yeah, it's a very important
part of your work as a programmer.

100
00:06:16,140 --> 00:06:20,760
Any sort of field, any sort of
programming language that you use, yes,

101
00:06:20,760 --> 00:06:26,250
do not forget to comment or
add a documentation of your work.

102
00:06:26,250 --> 00:06:31,680
>> And you're not using GitHub.io
we do want to see instructions

103
00:06:31,680 --> 00:06:36,830
on how you want us to host your website
over the Internet and check it.

104
00:06:36,830 --> 00:06:40,857
So I guess-
>> I had students use LAN servers as

105
00:06:40,857 --> 00:06:45,327
well in their project,
so they have had several

106
00:06:45,327 --> 00:06:50,381
different methods to actually
host their webpages.

107
00:06:50,381 --> 00:06:52,250
But do let us know you use.

108
00:06:52,250 --> 00:06:53,340
>> What you're used to.
