1
00:00:00,690 --> 00:00:03,300
So let's assume we want to make a movies website.

2
00:00:03,300 --> 00:00:06,180
Much like this one. Now, if you were to make

3
00:00:06,180 --> 00:00:08,450
this based on what we have been doing this far.

4
00:00:08,450 --> 00:00:11,880
What we would do is start with an empty programming file,

5
00:00:11,880 --> 00:00:15,930
and we would like it something like movies.py. Now, since

6
00:00:15,930 --> 00:00:18,400
a movie has a lot of data associated with it,

7
00:00:18,400 --> 00:00:22,250
like the movies title, its storyline, we would add that

8
00:00:22,250 --> 00:00:25,720
to our program. Also, we would want to do things with

9
00:00:25,720 --> 00:00:29,500
our movies, like show the movies trailer or

10
00:00:29,500 --> 00:00:32,240
show or print all of the movies information. So

11
00:00:32,240 --> 00:00:34,230
we would add those function to our code as

12
00:00:34,230 --> 00:00:37,960
well. So far, so good. So, further imagine that

13
00:00:37,960 --> 00:00:40,260
we want to run this program. And we want

14
00:00:40,260 --> 00:00:44,860
to play a movie's trailer. Well, which movie's trailer?

15
00:00:44,860 --> 00:00:46,860
To make that work, we would have to provide

16
00:00:46,860 --> 00:00:51,480
the show_trailer function some information or arguments, like this.

17
00:00:51,480 --> 00:00:53,220
In this case we are saying hey,

18
00:00:53,220 --> 00:00:57,870
play Toy Story's, youtube_url. That seems manageable

19
00:00:57,870 --> 00:01:00,090
enough. Now let's try to print out

20
00:01:00,090 --> 00:01:04,370
a movies information. Well, which movies information?

21
00:01:04,370 --> 00:01:08,335
Again we would have to supply some sort of information or arguments, to the

22
00:01:08,335 --> 00:01:12,003
show_info function. Arguments like the movie's title,

23
00:01:12,003 --> 00:01:16,035
its storyline, the release_date, rating, youtube_url, director,

24
00:01:16,035 --> 00:01:19,950
box_office, et cetera. Now, I don't know about you,

25
00:01:19,950 --> 00:01:23,730
but this function show_info is already getting too convoluted

26
00:01:23,730 --> 00:01:26,140
for me. Imagine what happens if we have to

27
00:01:26,140 --> 00:01:29,890
supply more information to it. Like the movie's cast

28
00:01:29,890 --> 00:01:33,260
or the movie's reviews. What we really want to do

29
00:01:33,260 --> 00:01:35,850
is define a template for our movie and record

30
00:01:35,850 --> 00:01:37,420
all of the data that needs to go into

31
00:01:37,420 --> 00:01:41,828
that template. Data like the move's title, it's storyline and

32
00:01:41,828 --> 00:01:46,170
functions like show_trailer and show information and then simply say,

33
00:01:46,170 --> 00:01:50,820
hey, Toy Story is a movie and so is Avatar.

34
00:01:50,820 --> 00:01:53,882
And then have the ability to say, show me Toy

35
00:01:53,882 --> 00:01:59,780
Stories trailer or show me Avatar's information. No arguments necessary.

36
00:02:01,880 --> 00:02:06,390
Now, one way of doing this, just by using functions, is to take the template

37
00:02:06,390 --> 00:02:10,940
we have defined and make multiple copies of it. So, we could make a copy

38
00:02:10,940 --> 00:02:15,728
of this template and call it toy_story.py, and make another copy of this

39
00:02:15,728 --> 00:02:21,240
template, and call it avatar.py. Now we will be able to say things like

40
00:02:21,240 --> 00:02:26,760
toy_story.show_trailer and avatar.show_info. Now,

41
00:02:26,760 --> 00:02:29,810
this doesn't seem like a very smart solution to me.

42
00:02:29,810 --> 00:02:32,340
Imagine what happens, if we have to add more pieces of

43
00:02:32,340 --> 00:02:35,220
data to our template. Or if you have to rename one

44
00:02:35,220 --> 00:02:40,150
of our functions. Say, from, show_trailer to play_trailer. If that happens,

45
00:02:40,150 --> 00:02:42,500
we will have to make those changes in each and

46
00:02:42,500 --> 00:02:45,490
every copy that we make. This doesn't seem like a very

47
00:02:45,490 --> 00:02:48,750
smart thing to do. So what we really need is a

48
00:02:48,750 --> 00:02:52,690
way of making copies of a template, without having multiple files.

49
00:02:52,690 --> 00:02:55,170
We need the ability to define a template for

50
00:02:55,170 --> 00:02:57,660
something, like we did for movies, and then be

51
00:02:57,660 --> 00:03:00,480
able to say, hey, Toy Story is a type

52
00:03:00,480 --> 00:03:03,660
of that template, and so is Avatar. Avatar is also

53
00:03:03,660 --> 00:03:06,940
a type of that template. We need something new,

54
00:03:06,940 --> 00:03:09,670
and that new thing in programming is called a

55
00:03:09,670 --> 00:03:12,370
class. So what are classes and how do you

56
00:03:12,370 --> 00:03:14,850
use them? Let's find out in the next few lessons.
