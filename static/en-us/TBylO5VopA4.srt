1
00:00:00,420 --> 00:00:03,086
What we usually care about when we analyze programs

2
00:00:03,086 --> 00:00:06,770
is what's called the worst-case execution time. And that's the

3
00:00:06,770 --> 00:00:10,930
case where the input for a given size takes

4
00:00:10,930 --> 00:00:14,060
the longest possible time to run. So for our lookup,

5
00:00:14,060 --> 00:00:16,560
the worst case will be either the very last

6
00:00:16,560 --> 00:00:20,690
entry in the table, or a keyword that doesn't exist

7
00:00:20,690 --> 00:00:22,690
in the table at all. Let's look at the

8
00:00:22,690 --> 00:00:25,540
code for lookup to understand more why the time scales

9
00:00:25,540 --> 00:00:28,080
the way it does, and think about what the worst case

10
00:00:28,080 --> 00:00:31,430
execution time and what the average case will be. So, to get

11
00:00:31,430 --> 00:00:34,900
a better understanding of the results we've seen, let's look at the

12
00:00:34,900 --> 00:00:37,320
codes that we wrote for the index. This is the code that

13
00:00:37,320 --> 00:00:39,770
we finished in the last unit. And we have the code for

14
00:00:39,770 --> 00:00:44,250
lookup. So, what lookup is doing, it's going through a loop. Each

15
00:00:44,250 --> 00:00:46,737
of the entries in the index. And remember that index is a

16
00:00:46,737 --> 00:00:50,513
list, so it's going through that list for each element, it's checking,

17
00:00:50,513 --> 00:00:53,115
does it match the keyword. So this is our index structure,

18
00:00:53,115 --> 00:00:56,930
right? It's a list of elements. If we had 10 million

19
00:00:56,930 --> 00:01:00,540
of them, it's a very long list with lots of elements.

20
00:01:00,540 --> 00:01:03,924
But each element is a list itself, where we have keyword

21
00:01:03,924 --> 00:01:07,205
followed by the list of URLS where it appears. And what

22
00:01:07,205 --> 00:01:10,550
lookup is doing is going through those entries. The number of

23
00:01:10,550 --> 00:01:12,650
times we go through this loop depends on the size of

24
00:01:12,650 --> 00:01:15,800
the index. The size of the index is the maximum number

25
00:01:15,800 --> 00:01:18,474
of times through that loop. And it also depends on,

26
00:01:18,474 --> 00:01:21,875
well, if we find the keyword early, then we're done.

27
00:01:21,875 --> 00:01:24,620
The other code that you see here, that's relevant to

28
00:01:24,620 --> 00:01:29,490
this, is the code for add_to_index. And the reason that's relevant

29
00:01:29,490 --> 00:01:31,880
is, we want to know what the structure with index is

30
00:01:31,880 --> 00:01:35,220
after we make our big index. And what add_to_index does is

31
00:01:35,220 --> 00:01:37,770
also loop through all the entries to find if one

32
00:01:37,770 --> 00:01:41,060
already exists, then it adds that URL. If one doesn't exists,

33
00:01:41,060 --> 00:01:43,210
it adds the new entry at the end. So this means

34
00:01:43,210 --> 00:01:45,280
that the first entry we add will always be at the

35
00:01:45,280 --> 00:01:50,310
beginning. That's why the aaaa, with eight a's is first. And

36
00:01:50,310 --> 00:01:53,110
the last one that we add will be at the end.

37
00:01:53,110 --> 00:01:55,910
So now, we'll have a quiz to see if you understand

38
00:01:55,910 --> 00:01:58,120
what it means to be the worst case input and how

39
00:01:58,120 --> 00:02:02,040
the code for lookup works. The question is, which of these

40
00:02:02,040 --> 00:02:05,850
inputs will have the worst case running time? So the choices are,

41
00:02:05,850 --> 00:02:08,280
doing lookup, passing in the index and the first word that

42
00:02:08,280 --> 00:02:11,900
was added to the index. The second choice is doing lookup,

43
00:02:14,230 --> 00:02:19,470
passing in the index, and a word that is not in the index. And the third choice

44
00:02:19,470 --> 00:02:24,230
is calling lookup, passing in the index, and is the second

45
00:02:24,230 --> 00:02:29,300
input passing in the last word that was added to the index. So, for

46
00:02:29,300 --> 00:02:31,350
the quiz, you should check all the

47
00:02:31,350 --> 00:02:34,030
answers that have the worst case running time.
