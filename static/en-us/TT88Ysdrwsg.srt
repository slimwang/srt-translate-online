1
00:00:00,570 --> 00:00:05,420
So, let's revisit what we are shooting for in the structure of an operating

2
00:00:05,420 --> 00:00:11,420
system. We want the operating system strucure to be thin. That is, like a

3
00:00:11,420 --> 00:00:15,680
microkernel. That is only mechanisms should be

4
00:00:15,680 --> 00:00:18,250
in the kernel, and no policies should

5
00:00:18,250 --> 00:00:20,910
be ingrained in the kernel itself. The

6
00:00:20,910 --> 00:00:25,620
structure should allow fine-grained access to system

7
00:00:25,620 --> 00:00:31,786
resources without border crossing, as much as possible. That is, it should

8
00:00:31,786 --> 00:00:37,570
be like the DOS-like structure. That is, it should have a structure similar to

9
00:00:37,570 --> 00:00:44,950
what we saw in DOS. And it should be flexible, meaning resource management

10
00:00:44,950 --> 00:00:47,020
should be easily morphed to suit

11
00:00:47,020 --> 00:00:50,890
the needs of the application without sacrificing

12
00:00:50,890 --> 00:00:55,130
protection and performance. So, the flexibility part

13
00:00:55,130 --> 00:00:56,950
of it should be similar to what

14
00:00:56,950 --> 00:01:02,590
we can get from microkernel based approach, but at the same time we want the

15
00:01:02,590 --> 00:01:05,300
protection and the performance we can get

16
00:01:05,300 --> 00:01:08,746
with the monolithic approach. So in other words,

17
00:01:08,746 --> 00:01:10,609
in a nutshell what we want in

18
00:01:10,609 --> 00:01:15,890
the operating structure is performance, protection, and flexibility.
