1
00:00:00,000 --> 00:00:04,311
Remember, that a contract is
an agreement between our data model and

2
00:00:04,311 --> 00:00:07,445
our views describing how
information is stored.

3
00:00:07,445 --> 00:00:11,434
It contains constant strings to
represent all the fields that our user

4
00:00:11,434 --> 00:00:14,543
interface will display, and
in the case of Sunshine,

5
00:00:14,543 --> 00:00:16,312
that our database will store.

6
00:00:16,312 --> 00:00:19,234
We've just covered all
the columns that we'll need to

7
00:00:19,234 --> 00:00:23,650
use in our 2SQLI databases that
will store weather and information.

8
00:00:23,650 --> 00:00:27,293
Now let's learn how these column names
constraints are declared in our weather

9
00:00:27,293 --> 00:00:27,844
contract.

10
00:00:27,844 --> 00:00:31,461
Let's take a quick look at the weather
contract class file that we've

11
00:00:31,461 --> 00:00:32,081
given you.

12
00:00:32,081 --> 00:00:38,083
The contract class has two inner
classes, WeatherEntry and LocationEntry.

13
00:00:38,083 --> 00:00:42,622
Each of these inner classes contains
constant strings that define tables.

14
00:00:42,622 --> 00:00:45,977
Right now, we only have column
constants for WeatherEntry,

15
00:00:45,977 --> 00:00:49,082
the table that contains
weather forecast information.

16
00:00:49,082 --> 00:00:52,466
The first constant is the TABLE_NAME
which, for the WeatherEntry,

17
00:00:52,466 --> 00:00:54,081
is simply the word "weather".

18
00:00:54,081 --> 00:00:57,553
The constant values as defined in
the WeatherEntry class match the values

19
00:00:57,553 --> 00:00:59,352
we're storing in the weather table.

20
00:00:59,352 --> 00:01:01,924
For example,
we've got minimum temperature,

21
00:01:01,924 --> 00:01:04,379
which is defined here
as COLUMN_MIN_TEMP.

22
00:01:04,379 --> 00:01:06,846
Pressure column is defined
as COLUMN_PRESSURE.

23
00:01:06,846 --> 00:01:10,502
But we're missing a column
to define the unique ID.

24
00:01:10,502 --> 00:01:14,486
This is because we're implementing
the class, BaseColumns,

25
00:01:14,486 --> 00:01:17,004
which contains a constant called _id.

26
00:01:17,004 --> 00:01:22,444
By adding an _id column to our table as
a primary key, we can utilize various

27
00:01:22,444 --> 00:01:27,301
Android helper classes that rely
on the _id column being created.

28
00:01:27,301 --> 00:01:30,847
The LOC_KEY column is the foreign
key we talked about earlier,

29
00:01:30,847 --> 00:01:33,419
that points to records
in the location table.

30
00:01:33,419 --> 00:01:36,365
Since the column names don't
actually contain data types,

31
00:01:36,365 --> 00:01:39,540
it's usual to annotate these types
in the variable names, and or

32
00:01:39,540 --> 00:01:41,690
comments to make our
contract more explicit
