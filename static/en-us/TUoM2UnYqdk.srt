1
00:00:00,260 --> 00:00:05,070
So we just saved our computer program one pass over the entire array. Could we

2
00:00:05,070 --> 00:00:08,441
do this even faster? Could we do it without looking at every single item in the

3
00:00:08,441 --> 00:00:13,452
array? Take a moment to think. Imagine that there's one score that you don't

4
00:00:13,452 --> 00:00:18,336
read. What if that score was the min? If you don't read it, you can't find out

5
00:00:18,336 --> 00:00:22,050
whether it's the minimum or not. We can't find the minimum without looking at

6
00:00:22,050 --> 00:00:25,530
every score. In computer science we would say that we have to do a linear

7
00:00:25,530 --> 00:00:31,040
search. Now what if we knew something more about the elements in this array.

8
00:00:31,040 --> 00:00:33,875
For example what if I knew that all of the elements were sorted from lowest to

9
00:00:33,875 --> 00:00:38,720
highest. Then you wouldn't have to search the whole array to find the minimum.

10
00:00:38,720 --> 00:00:42,155
You would know that it was in the first position. As you continue programming,

11
00:00:42,155 --> 00:00:44,779
you'll learn how to organize your data so you can get the information you need

12
00:00:44,779 --> 00:00:48,723
as quickly as possible. But right now, let's talk more about discovering

13
00:00:48,723 --> 00:00:51,480
algorithms. Back to you, Kai.
