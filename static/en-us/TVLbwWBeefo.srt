1
00:00:00,290 --> 00:00:03,530
You may often come across situations
where there's part of your build script

2
00:00:03,530 --> 00:00:05,950
that you'll want to change
somewhat regularly.

3
00:00:05,950 --> 00:00:08,970
While you're well on your way to
becoming a Gradle build master,

4
00:00:08,970 --> 00:00:12,510
the other developers using your build,
may not be so familiar with Gradle.

5
00:00:12,510 --> 00:00:15,620
This means they're relying on
folks to modify your build script.

6
00:00:15,620 --> 00:00:18,860
In order just to change its behavior,
is less than ideal.

7
00:00:18,860 --> 00:00:19,950
This is especially true,

8
00:00:19,950 --> 00:00:22,890
if you expect an automated
system to be running your build.

9
00:00:22,890 --> 00:00:26,060
Solve this problem, Gradle allows you
to parametrize your build, by adding

10
00:00:26,060 --> 00:00:30,380
properties to the project object, from
locations outside your build script.

11
00:00:30,380 --> 00:00:33,660
Command line arguments,
gradle.properties files, and

12
00:00:33,660 --> 00:00:35,450
environment variables.

13
00:00:35,450 --> 00:00:36,960
Let's check out the syntax.

14
00:00:36,960 --> 00:00:38,900
>> To explore Gradle properties,

15
00:00:38,900 --> 00:00:41,220
let's create a task that
prints a simple greeting.

16
00:00:41,220 --> 00:00:47,510
If we just run this as is,
somewhat unsurprisingly, we got a crash.

17
00:00:47,510 --> 00:00:50,210
Gradle says that it could not
find property greeting on task

18
00:00:50,210 --> 00:00:51,540
print greeting.

19
00:00:51,540 --> 00:00:53,160
Yep, that's not defined anywhere.

20
00:00:53,160 --> 00:00:56,460
We'll need to pass in the value
of the greeting we want to use.

21
00:00:56,460 --> 00:00:57,520
The first way to do this,

22
00:00:57,520 --> 00:01:01,770
is using a gradle.properties file in
the same directory as your build script.

23
00:01:01,770 --> 00:01:05,379
If we just add the line, greeting
equals hello from properties file, and

24
00:01:05,379 --> 00:01:09,230
rerun the task,
now we get the behavior we expect.

25
00:01:09,230 --> 00:01:12,130
Another way to pass in a property
to a Gradle build script,

26
00:01:12,130 --> 00:01:13,900
is the command line.

27
00:01:13,900 --> 00:01:16,780
In this case it'd be the -P flag that

28
00:01:16,780 --> 00:01:18,740
lets Gradle know that we're going
to be passing in a property,

29
00:01:18,740 --> 00:01:23,390
then the name of the property equals,
and then the value we want.

30
00:01:23,390 --> 00:01:26,550
Note that the greetings property
is now defined in two places,

31
00:01:26,550 --> 00:01:29,260
in the properties file,
and from the command line.

32
00:01:29,260 --> 00:01:30,370
Let's see which one wins.

33
00:01:32,290 --> 00:01:34,270
Looks like the command line wins.

34
00:01:34,270 --> 00:01:37,440
I hope this makes sense, because the
command line is the last line of defense

35
00:01:37,440 --> 00:01:38,820
before the project is actually run.

36
00:01:38,820 --> 00:01:41,030
There is a third way we can
use gradle properties, and

37
00:01:41,030 --> 00:01:42,619
that's from inside
the build script itself.

38
00:01:43,680 --> 00:01:48,600
If we pass a closure to the ext property
of the project object, and then we

39
00:01:48,600 --> 00:01:52,180
define our property, then the property
is defined when we run our task.

40
00:01:52,180 --> 00:01:54,317
Note that defining a property
inside the build script,

41
00:01:54,317 --> 00:01:56,737
shadows all other definitions,
like from a properties file.
