1
00:00:00,000 --> 00:00:04,000
[Norvig] How does first order logic work? What does it do?

2
00:00:04,000 --> 00:00:08,000
Like propositional logic, we start with a model.

3
00:00:08,000 --> 00:00:13,000
In propositional logic a model was a value for each propositional symbol.

4
00:00:13,000 --> 00:00:18,000
So we might say that the symbol P was true

5
00:00:18,000 --> 00:00:22,000
and the symbol Q was false,

6
00:00:22,000 --> 00:00:30,000
and that would be a model that corresponds to what's going on in a possible world.

7
00:00:30,000 --> 00:00:32,000
In first order logic the models are more complex.

8
00:00:32,000 --> 00:00:35,000
We start off with a set of objects.

9
00:00:35,000 --> 00:00:39,000
Here I've shown 4 objects, these 4 tiles,

10
00:00:39,000 --> 00:00:42,000
but we could have more objects than that.

11
00:00:42,000 --> 00:00:46,000
We could say, for example, that the numbers 1, 2, and 3

12
00:00:46,000 --> 00:00:49,000
were also objects in our model.

13
00:00:49,000 --> 00:00:51,000
So we have a set of objects.

14
00:00:51,000 --> 00:00:58,000
We can also have a set of constants that refer to those objects.

15
00:00:58,000 --> 00:01:08,000
So I could use the constant names A, B, C, D, 1, 2, 3,

16
00:01:08,000 --> 00:01:10,000
but I don't have to have a one-to-one correspondence

17
00:01:10,000 --> 00:01:13,000
between constants and objects.

18
00:01:13,000 --> 00:01:18,000
I could have 2 different constant names that refer to the same object.

19
00:01:18,000 --> 00:01:24,000
I could also have, say, the name C that refers to this object,

20
00:01:24,000 --> 00:01:28,000
or I could have some of the objects that don't have any names at all.

21
00:01:28,000 --> 00:01:38,000
But I've got a set of constants, and I also have a set of functions.

22
00:01:38,000 --> 00:01:46,000
A function is defined as a mapping from objects to objects.

23
00:01:46,000 --> 00:01:52,000
And so, for example, I might have the Number Of function

24
00:01:52,000 --> 00:01:56,000
that maps from a tile to the number on that tile,

25
00:01:56,000 --> 00:02:04,000
and that function then would be defined by the mapping from A to 1

26
00:02:04,000 --> 00:02:13,000
and B to 3 and C to 3 and D to 2,

27
00:02:13,000 --> 00:02:17,000
and I could have other functions as well.

28
00:02:17,000 --> 00:02:23,000
In addition to functions, I can have relations.

29
00:02:23,000 --> 00:02:28,000
For example, I could have the Above relation,

30
00:02:28,000 --> 00:02:36,000
and I could say in this model of the world the Above relation is a set of tuples.

31
00:02:36,000 --> 00:02:41,000
Say A is above B and C is above D.

32
00:02:41,000 --> 00:02:46,000
So that was a binary relation holding between 2 objects.

33
00:02:46,000 --> 00:02:50,000
Say 1 block is above another block.

34
00:02:50,000 --> 00:02:52,000
We can have other types of relations.

35
00:02:52,000 --> 00:02:57,000
For example, here is a unary relation--vowel--

36
00:02:57,000 --> 00:03:04,000
and if we want to say the relation Vowel is true only of the object that we call A,

37
00:03:04,000 --> 00:03:11,000
then that's a set of tuples of length 1 that contains just A.

38
00:03:11,000 --> 00:03:16,000
We can even have relations over no objects.

39
00:03:16,000 --> 00:03:20,000
Say we wanted to have the relation Rainy, which doesn't refer to any objects at all

40
00:03:20,000 --> 00:03:24,000
but just refers to the current situation.

41
00:03:24,000 --> 00:03:30,000
Then since it's not rainy today, we would represent that as the empty set.

42
00:03:30,000 --> 00:03:34,000
There's no tuples corresponding to that relation.

43
00:03:34,000 --> 00:03:42,000
Or, if it was rainy, we could say that it's represented by a singleton set,

44
00:03:42,000 --> 00:03:50,000
and since the arity of Rainy is 0, there would be 0 elements in each one of those tuples.

45
00:03:50,000 --> 99:59:59,999
So that's what a model in first order logic looks like.
