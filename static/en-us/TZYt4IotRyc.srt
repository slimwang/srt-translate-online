1
00:00:00,000 --> 00:00:03,000
I think the best answers are the second and third.

2
00:00:03,000 --> 00:00:08,000
No is hardly ever a good answer to a question about is there any possible way to break something.

3
00:00:08,000 --> 00:00:11,000
The way the adversary would learn that Dave and Alice are communicating

4
00:00:11,000 --> 00:00:16,000
is if there's a way to match up the messages at the end points.

5
00:00:16,000 --> 00:00:20,000
This would be the case if there was no other traffic that looks similar on the network.

6
00:00:20,000 --> 00:00:24,000
These messages aren't the same. Remember that they're encrypted in different ways.

7
00:00:24,000 --> 00:00:29,000
This message will not look similar to message 1, but they'll both be encrypted messages.

8
00:00:29,000 --> 00:00:32,000
They might be similar because of the length.

9
00:00:32,000 --> 00:00:35,000
There might be things the adversary can do to adjust the timing.

10
00:00:35,000 --> 00:00:37,000
Remember this is not a direct link, so the adversary--

11
00:00:37,000 --> 00:00:41,000
if there are many messages going between Alice and Bob--

12
00:00:41,000 --> 00:00:44,000
could introduce delays in the messages,

13
00:00:44,000 --> 00:00:48,000
and see the same pattern of delays on the upcoming messages.

14
00:00:48,000 --> 00:00:53,000
That would work if there weren't any unpredictable latencies inside the network.

15
00:00:53,000 --> 00:00:56,000
If there is any way for the adversary to correlate those incoming and outgoing messages,

16
00:00:56,000 --> 00:01:00,000
then the adversary would know these two parties are communicating.

17
00:01:00,000 --> 00:01:05,000
If the adversary can see all the traffic on the network, this would be a very powerful adversary.

18
00:01:05,000 --> 00:01:08,000
That's not enough unless they can correlate it.

19
00:01:08,000 --> 00:01:11,000
Even if an adversary could see all the messages coming into R2,

20
00:01:11,000 --> 00:01:15,000
if there are many other messages coming into R2 at the same time,

21
00:01:15,000 --> 00:01:18,000
and many other messages going out of R2,

22
00:01:18,000 --> 00:01:21,000
if the adversary can't connect the ones coming in with the ones coming out,

23
00:01:21,000 --> 00:01:24,000
then they wouldnâ€™t be able to follow the chain.

24
00:01:24,000 --> 00:01:27,000
In order for this to be secure, we need to know that there's a lot of other traffic

25
00:01:27,000 --> 00:01:29,000
on the network that looks similar.

26
00:01:29,000 --> 00:01:32,000
You'd like to know that between all of these routing points,

27
00:01:32,000 --> 00:01:34,000
there is always messages going.

28
00:01:34,000 --> 00:01:37,000
They look similar lengths, similar timings.

29
00:01:37,000 --> 00:01:40,000
There is no way or correlate the messages that come in to one router

30
00:01:40,000 --> 00:01:43,000
with the messages that go out from another one.

31
00:01:43,000 --> 00:01:46,000
One of the things that you need to do to make a network like this secure,

32
00:01:46,000 --> 00:01:49,000
is to make sure that there is enough traffic.

33
00:01:49,000 --> 00:01:52,000
You can inject a lot of fake traffic. That's expensive.

34
00:01:52,000 --> 00:01:54,000
You're wasting bandwidth on things that don't go.

35
00:01:54,000 --> 00:01:58,000
You've also got to be careful to make the fake traffic look like real traffic.

36
00:01:58,000 --> 00:02:00,000
You can't just send random packets.

37
00:02:00,000 --> 00:02:04,000
If there aren't correlations between those packets and if you're not sending a full flow,

38
00:02:04,000 --> 00:02:07,000
then that could be detected by the adversary.

39
00:02:07,000 --> 00:02:10,000
So there are lots of hard problems to solve to make this secure.

40
00:02:10,000 --> 00:02:14,000
There's a very successful project that provides this as a service on the Internet.

41
00:02:14,000 --> 00:02:19,000
It's called Tor. You can download it as an extension to your web browser.

42
00:02:19,000 --> 00:02:22,000
It provides a way to connect to a website without revealing

43
00:02:22,000 --> 00:02:25,000
to the website where you're connecting from.

44
00:02:25,000 --> 00:02:28,000
You need to get a response as well, and so that means in addition

45
00:02:28,000 --> 00:02:32,000
to selecting the route for reaching the website,

46
00:02:32,000 --> 00:02:34,000
you need a route for returning.o

47
00:02:34,000 --> 00:02:36,000
You don't want to include your IP address.

48
00:02:36,000 --> 00:02:39,000
That would reveal your location in the response,

49
00:02:39,000 --> 00:02:41,000
but you want to get the responses.

50
00:02:41,000 --> 00:02:44,000
What this does is select routes in both directions.

51
00:02:44,000 --> 00:02:48,000
It selects a random set of routers to reach the website that you want to communicate with

52
00:02:48,000 --> 99:59:59,999
as well as a way for that to send a response along another random path.
