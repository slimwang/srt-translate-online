1
00:00:00,250 --> 00:00:03,050
Let's discuss the security of HMAC.

2
00:00:03,050 --> 00:00:07,880
First of all, the security of HMAC
depends on the cryptographic strength

3
00:00:07,880 --> 00:00:09,560
of the underlying hash function.

4
00:00:09,560 --> 00:00:14,081
That is, the underlying hash
function used in HMAC must satisfy

5
00:00:14,081 --> 00:00:18,950
the basic properties of one wayness and
collision resistant.

6
00:00:18,950 --> 00:00:22,250
Further, compared with
the cryptographic hash function,

7
00:00:22,250 --> 00:00:26,880
it is much harder to launch
a successful collision attack on HMAC.

8
00:00:26,880 --> 00:00:30,680
The main reason is that a secret
key is hashed together with

9
00:00:30,680 --> 00:00:32,299
the message content.

10
00:00:32,299 --> 00:00:35,110
As a result,
without knowing the secret key,

11
00:00:35,110 --> 00:00:37,910
an attacker cannot
compute the correct HMAC.

12
00:00:37,910 --> 00:00:43,320
For example, supposed the attacker is
able to obtain the HMAC of message M1,

13
00:00:43,320 --> 00:00:47,150
and he wants to find another message
that have a collision with M1.

14
00:00:47,150 --> 00:00:50,260
That is, a different message
M2 that's not the same as M1,

15
00:00:50,260 --> 00:00:53,670
but had the same HMAC value as M1.

16
00:00:53,670 --> 00:00:55,446
But without a secret key,

17
00:00:55,446 --> 00:00:59,578
the attacker cannot compute
the correct HMAC value for M2.

18
00:00:59,578 --> 00:01:03,496
That is, the attacker does
not even know whether M1 or

19
00:01:03,496 --> 00:01:06,570
M2 will have collision in HMAC.

20
00:01:06,570 --> 00:01:09,800
In summary,
because of the use of the secret key,

21
00:01:09,800 --> 00:01:13,420
HMAC is much more secure than
a cryptography hash function.
