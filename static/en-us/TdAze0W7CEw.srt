1
00:00:00,300 --> 00:00:04,000
In many cases, authorization
happens after authentication.

2
00:00:04,000 --> 00:00:06,870
But it's important to know that these
two concepts of security can happen

3
00:00:06,870 --> 00:00:07,720
disjointly as well.

4
00:00:07,720 --> 00:00:11,610
I will provide a few examples of
some ways authorization can happen

5
00:00:11,610 --> 00:00:13,630
without authentication.

6
00:00:13,630 --> 00:00:17,850
If you find a key to a club's back door,
you can get in without showing your ID

7
00:00:17,850 --> 00:00:21,310
because the lock doesn't care who
you are as long as you have a key.

8
00:00:21,310 --> 00:00:25,260
Coupons and discount codes are a great
way for shoppers to save money.

9
00:00:25,260 --> 00:00:28,370
The possessor of one of these
coupons is authorized a discount,

10
00:00:28,370 --> 00:00:31,530
many times without having to
identify themselves in any way.

11
00:00:31,530 --> 00:00:36,520
Dropbox and Google Drive support sharing
a file via long randomized URLs.

12
00:00:36,520 --> 00:00:39,070
Anyone who possesses a link
can access the file without

13
00:00:39,070 --> 00:00:41,030
authenticating an identity.

14
00:00:41,030 --> 00:00:44,700
But people who do not possess
the link cannot access the file.

15
00:00:44,700 --> 00:00:45,990
But the link can be shared over and

16
00:00:45,990 --> 00:00:48,170
over again without the consent
of the original creator.

17
00:00:49,420 --> 00:00:52,340
Logging in as root to a UNIX
system doesn't authenticate

18
00:00:52,340 --> 00:00:56,200
you as a particular user,
just that you know the root password.

19
00:00:56,200 --> 00:01:00,164
That's part of why it's considered more
secure to disallow direct root login and

20
00:01:00,164 --> 00:01:02,540
use sudo or su instead.

21
00:01:02,540 --> 00:01:04,260
So someone has to authenticate, and

22
00:01:04,260 --> 00:01:07,170
their login as a particular
user can be logged.

23
00:01:07,170 --> 00:01:10,370
Some web systems grant an authorization
cookie once a user has been

24
00:01:10,370 --> 00:01:11,495
authenticated.

25
00:01:11,495 --> 00:01:14,190
A cookie's just a code that
a browser can use as a pass to

26
00:01:14,190 --> 00:01:15,470
access private data.

27
00:01:15,470 --> 00:01:18,400
A browser with a cookie has
authorization to specific user

28
00:01:18,400 --> 00:01:21,800
information without having
to log in with each request.

29
00:01:21,800 --> 00:01:24,910
If you steal a cookie then you have
access to the user's files without

30
00:01:24,910 --> 00:01:27,080
knowing their
authentication credentials.

31
00:01:27,080 --> 00:01:29,542
This is called session hijacking.

32
00:01:29,542 --> 00:01:32,800
If you're curious about session
hijacking works and how to protect your

33
00:01:32,800 --> 00:01:36,190
sites from such an attack, some links
are provided in the instructor notes.
