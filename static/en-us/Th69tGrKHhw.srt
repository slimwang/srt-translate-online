1
00:00:00,000 --> 00:00:02,670
Now the halting problem isn't the undecidable problem.

2
00:00:02,670 --> 00:00:07,330
There's actually a very large number of undecidable problems as we'll soon see.

3
00:00:07,330 --> 00:00:11,460
And the technique here is almost the same that we use for showing np-completeness.

4
00:00:11,460 --> 00:00:15,200
So if you remember that once we had shown SAT to be np-complete.

5
00:00:15,200 --> 00:00:20,110
We could take a whole bunch of other problems such as vertex cover, clique, and independent set

6
00:00:20,110 --> 00:00:24,940
and of course many more and show these to be np-complete using a reduction

7
00:00:24,940 --> 00:00:29,630
because we were able to show that if you could solve vertex cover in polynomial time

8
00:00:29,630 --> 00:00:34,850
then you could also solve SAT in polynomial time and we'll now use a very similar technique.

9
00:00:34,850 --> 00:00:39,140
Now we know the halting problem is undecidable, we can look at other problems

10
00:00:39,140 --> 00:00:43,300
and show through a kind of reduction that if we could solve these problems here

11
00:00:43,300 --> 00:00:46,930
then we would be able to solve the halting problem, which of course is not possible.

12
00:00:46,930 --> 00:00:50,460
Now, the first problem we might be looking at is a generalized version of the halting problem.

13
00:00:50,460 --> 00:00:54,220
As you remember, the halting problem takes as input a program

14
00:00:54,220 --> 00:00:58,030
and an input on which to run that program and what we could now ask

15
00:00:58,030 --> 00:01:03,340
is of course a more general question and that is, does the program have any input

16
00:01:03,340 --> 00:01:06,760
on which it stops or does it always go into an infinite loop?

17
00:01:06,760 --> 00:01:09,470
And we'll call that the generalized halting problem.

18
00:01:09,470 --> 00:01:14,910
So we're given P and now the question is, is there any input I for which P halts?

19
00:01:14,910 --> 00:01:18,220
And I'll show you now that this problem here is also undecidable

20
00:01:18,220 --> 00:01:22,860
and then we'll look at other problems and you can show that they are undecidable.

21
00:01:22,860 --> 00:01:27,030
So the proof always work in a very similar fashion. You again start out with an assumption.

22
00:01:27,030 --> 00:01:29,370
And then lead that assumption into a contradiction.

23
00:01:29,370 --> 00:01:32,450
The initial assumption is that we had an algorithm or a program

24
00:01:32,450 --> 00:01:35,340
that can decide the generalized halting problem.

25
00:01:35,340 --> 00:01:39,970
So assume there's a program P' that solves this problem here.

26
00:01:39,970 --> 00:01:43,220
Now, how could we use this program here to solve the halting problem?

27
00:01:43,220 --> 00:01:46,940
Well, that's actually quite easy. So we have the program and the input.

28
00:01:46,940 --> 00:01:51,420
And now we construct a new program from that. That problem is actually quite easy.

29
00:01:51,420 --> 00:01:57,160
We just make the input here part of the program code so in kind of a pseudocode writing here

30
00:01:57,160 --> 00:02:02,830
the first line of that program P'' would be set the input variables to I

31
00:02:02,830 --> 00:02:05,780
and that is now part of the program code of this program here.

32
00:02:05,780 --> 00:02:09,000
Here it was a separate input and now it's part of the program code.

33
00:02:09,000 --> 00:02:14,250
So we set the input variables to the input and then run P as always.

34
00:02:14,250 --> 00:02:18,490
And now it's clear that if we have a problem that solves the generalized halting problem

35
00:02:18,490 --> 00:02:21,770
then we can just feed it to this program here because this program here

36
00:02:21,770 --> 00:02:25,010
actually ignores any input that we give to it.

37
00:02:25,010 --> 00:02:29,930
Finding out if that program over here will ever terminate is the same as asking

38
00:02:29,930 --> 00:02:33,780
if the original program P will terminate on the input I.

39
00:02:33,780 --> 00:02:37,960
This program here cannot exist because if the generalized halting problem were decidable

40
00:02:37,960 --> 00:02:40,690
this would also mean that the special halting problem here

41
00:02:40,690 --> 00:02:43,990
where we are given an explicit input would also be decidable.

42
00:02:43,990 --> 99:59:59,999
So we know that this problem is now undecidable as well.
