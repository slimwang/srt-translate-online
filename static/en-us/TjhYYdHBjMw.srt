1
00:00:00,360 --> 00:00:03,320
Here's my solution to the shuffle program. I begin by

2
00:00:03,320 --> 00:00:06,230
opening the file with read and write permissions, and then

3
00:00:06,230 --> 00:00:09,010
to figure out how long the file is, I call

4
00:00:09,010 --> 00:00:12,080
lseek, putting the cursor at the end. This then will

5
00:00:12,080 --> 00:00:14,830
return how much the cursor was moved, which I store

6
00:00:14,830 --> 00:00:17,640
in this variable len. Then I put the cursor back

7
00:00:17,640 --> 00:00:21,180
to the beginning. Knowing how long the array needs to

8
00:00:21,180 --> 00:00:24,480
be, I can now end that with these flags here.

9
00:00:25,580 --> 00:00:28,500
And then check to make sure that, that succeeded. If it failed, we'll just

10
00:00:28,500 --> 00:00:32,479
exit. So now that I have the contents of the file in memory, I can

11
00:00:32,479 --> 00:00:37,850
call memshuffle on it, that'll rearrange it as desired. And then I can unmap

12
00:00:37,850 --> 00:00:42,050
it, close it, it'll get written to the disk, and I can exit with success.
