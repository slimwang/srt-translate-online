1
00:00:00,440 --> 00:00:04,280
Now that we know that we need the reorder buffer to hold the results of

2
00:00:04,280 --> 00:00:09,100
instructions until they're, ready to finish in program order,

3
00:00:09,100 --> 00:00:14,070
let's see what it looks like. The Reorder Buffer is a table of entries.

4
00:00:14,070 --> 00:00:18,090
In each entry we keep at least three fields. One says,

5
00:00:18,090 --> 00:00:22,910
what the value produced by the instruction is. This is the value that we are.

6
00:00:22,910 --> 00:00:26,875
Not writing to the register. When the instruction finishes, it will now write

7
00:00:26,875 --> 00:00:31,480
it's value to the reorder buffer when it broadcasts. We need a bit here to

8
00:00:31,480 --> 00:00:35,270
tell us whether we actually have a valid value here or not. Because we will give

9
00:00:35,270 --> 00:00:41,430
a Reorder Buffer entry to the instruction before. It actually writes the result.

10
00:00:41,430 --> 00:00:46,740
And finally in the end we have to write this value to an actual register, and

11
00:00:46,740 --> 00:00:50,760
for that we need to know when we do such a write, when we move this value from

12
00:00:50,760 --> 00:00:55,050
the Reordered Buffer to our register, what register are we going to write to? .

13
00:00:56,830 --> 00:01:02,190
This is a Reordered Buffer that can hold up to eight instructions. And we keep

14
00:01:02,190 --> 00:01:07,480
instructions in the Reorder Buffer in program order. So we need two pointers,

15
00:01:08,610 --> 00:01:13,070
one pointer tells us when we issue the next instruction where does it go.

16
00:01:14,260 --> 00:01:19,220
Another one tells us when we finally complete in program order the next

17
00:01:19,220 --> 00:01:23,970
instructions. Which instruction is it going to be? So in this particular

18
00:01:23,970 --> 00:01:30,320
Reorder Buffer, the instructions that are actually valid are starting

19
00:01:30,320 --> 00:01:36,420
from the oldest one, to the newest one. This, the even newer instructions,

20
00:01:36,420 --> 00:01:40,980
are going to be added here. And the oldest one will complete from here.

21
00:01:40,980 --> 00:01:45,230
So, these five instructions are actually in program order in the Reorder Buffer.
