1
00:00:00,510 --> 00:00:03,740
Next we have to worry about updating the OCL.

2
00:00:03,740 --> 00:00:05,590
Recall that in our previous diagram,

3
00:00:05,590 --> 00:00:08,580
OCL was associated with components and associations.

4
00:00:08,580 --> 00:00:14,070
The component OCL was used for specifying event handlers, and the OCL that, and

5
00:00:14,070 --> 00:00:16,720
that OCL will remain unchanged in the architectural diagram.

6
00:00:18,100 --> 00:00:21,670
In particular here are the two constraints that we had for

7
00:00:21,670 --> 00:00:22,950
dealing with event handling.

8
00:00:24,070 --> 00:00:27,010
The first one has to do with moving the handle, and there we saw that

9
00:00:27,010 --> 00:00:30,190
the handle has a new position like we expect, and similarly for

10
00:00:30,190 --> 00:00:33,680
the resizing the window, where the height of the window is the, is the new size.

11
00:00:35,430 --> 00:00:39,145
There was, there was also OCL annotating the associations.

12
00:00:39,145 --> 00:00:41,520
[COUGH] As we move from analysis to design,

13
00:00:41,520 --> 00:00:45,200
we will replace these associations with dependencies and as part of

14
00:00:45,200 --> 00:00:49,340
this process, we must assign each association's OCL to appropriate layer.

15
00:00:50,520 --> 00:00:53,140
Here are the three constraints that specify the associations in

16
00:00:53,140 --> 00:00:53,850
the analysis model.

17
00:00:55,280 --> 00:00:58,360
There was one for scaling the handle, there was one for

18
00:00:58,360 --> 00:01:03,370
displaying the document, and there was one for making the lines visible.

19
00:01:03,370 --> 00:01:08,840
This is just a repeat of what we, what we saw before, and you'll notice that

20
00:01:08,840 --> 00:01:13,390
the, in all three cases we have a single variable on the left hand side.

21
00:01:13,390 --> 00:01:16,150
This doesn't necessarily always have to be the case.

22
00:01:16,150 --> 00:01:21,210
You could well imagine a constraint, in which we said a plus b equals c plus d.

23
00:01:21,210 --> 00:01:23,830
That doesn't have a single variable on the left-hand side and we'd have to

24
00:01:23,830 --> 00:01:27,970
subtract b from both sides, or a from both sides or whatever to get that, okay.

25
00:01:27,970 --> 00:01:31,900
It could also be the case that there are inequalities.

26
00:01:31,900 --> 00:01:37,110
That is the constraint might say that a must be greater than b, okay.

27
00:01:37,110 --> 00:01:38,350
That one is going to be

28
00:01:40,040 --> 00:01:42,410
we'll have to think a little bit about how we can implement that.

29
00:01:42,410 --> 00:01:46,610
In fact, if a is greater than b that's even easier than saying that

30
00:01:46,610 --> 00:01:51,360
a has to be equal to be because any value of a that's greater than b will,

31
00:01:51,360 --> 00:01:52,540
will satisfy the result.
