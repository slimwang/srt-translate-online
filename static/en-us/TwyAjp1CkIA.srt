1
00:00:00,090 --> 00:00:03,840
So now that we have seen an example of exception handling with ROB,

2
00:00:03,840 --> 00:00:07,450
let's do an exceptions with ROB, quiz. So

3
00:00:07,450 --> 00:00:11,150
let's say that we have these instructions in program order. So this is the order

4
00:00:11,150 --> 00:00:14,730
in which they are supposed to execute, according to the programmer. Let's say,

5
00:00:14,730 --> 00:00:18,260
that this is the current status of this instruction. The add,

6
00:00:18,260 --> 00:00:23,690
is committed. Meaning, it has exited the pipeline and

7
00:00:23,690 --> 00:00:28,110
its results have been committed from the ROB to the register file and so on.

8
00:00:28,110 --> 00:00:34,070
The load, is executing. Meaning, it has left the reservation station, it

9
00:00:34,070 --> 00:00:39,770
is now doing its thing and the result still hasn't been broadcast, on the bus,

10
00:00:39,770 --> 00:00:45,830
and the load has not committed yet. This add, is done, which means that,

11
00:00:45,830 --> 00:00:48,780
it got to the reservation station, it exited the reservation station,

12
00:00:48,780 --> 00:00:53,000
computed it's result, deposited the result somewhere. But the result is still

13
00:00:53,000 --> 00:00:58,600
not committed. Meaning, the add still hasn't left the processor. The divide,

14
00:00:58,600 --> 00:01:02,840
is also executing like the load here, meaning it has read these registers, and

15
00:01:02,840 --> 00:01:08,560
now, it's slowly computing its result. This add is done, meaning, it has

16
00:01:08,560 --> 00:01:13,440
computed its result, but it still hasn't committed. And this add is also done.

17
00:01:13,440 --> 00:01:19,200
Let's say, that this divide, when the status of these instructions is like this,

18
00:01:19,200 --> 00:01:22,090
has an exception. So while it is executing, we discover, for

19
00:01:22,090 --> 00:01:24,210
example that it has been trying to divide by 0.

20
00:01:24,210 --> 00:01:29,070
So, this add now has an exception, the question for you is what is the new

21
00:01:29,070 --> 00:01:33,270
status of these instructions after this exception has been handled. Meaning,

22
00:01:33,270 --> 00:01:37,430
what is the new status at the point to which we can go to the exception handler?
