1
00:00:00,530 --> 00:00:02,690
Sharing data is great for developers.

2
00:00:02,690 --> 00:00:06,790
And using a content provider, it's a piece of cake to have an app grab data from

3
00:00:06,790 --> 00:00:10,820
the user's contacts, documents, or calendar with only a few lines of code.

4
00:00:10,820 --> 00:00:14,940
For example, let's say you're making a new business card reader application.

5
00:00:14,940 --> 00:00:18,750
The goal is to have the user take a picture of their phone of the business card,

6
00:00:18,750 --> 00:00:22,540
and the app will automatically add their contact information to your phone.

7
00:00:22,540 --> 00:00:24,543
Then, they can lose the business card.

8
00:00:24,543 --> 00:00:28,147
[SOUND] But they'll still have all that hard wired networking information.

9
00:00:28,147 --> 00:00:29,640
Pretty great, huh?

10
00:00:29,640 --> 00:00:31,470
In order to make this app seamless for

11
00:00:31,470 --> 00:00:35,170
users, you need to store this new contact info into the same

12
00:00:35,170 --> 00:00:40,180
data source the user's already using to store their phone's contact data.

13
00:00:40,180 --> 00:00:44,030
Then if all the contact data is stored in the same place, your business card

14
00:00:44,030 --> 00:00:48,200
contact info should appear in your default contacts application.

15
00:00:48,200 --> 00:00:51,420
So how do you have two different applications easily read and

16
00:00:51,420 --> 00:00:53,290
write to the same data source?

17
00:00:53,290 --> 00:00:55,660
This is where content providers come in.

18
00:00:55,660 --> 00:01:01,040
In short, a content provider is a class that sits between an application and

19
00:01:01,040 --> 00:01:02,500
its data source.

20
00:01:02,500 --> 00:01:06,930
And its job is to provide easily managed access to the underlying data source.
