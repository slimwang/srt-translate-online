1
00:00:00,140 --> 00:00:03,360
Our mapper code creates variables that
we will use to create columns within

2
00:00:03,360 --> 00:00:04,150
our database.

3
00:00:04,150 --> 00:00:07,610
When we create a column, we must also
pass an attribute to that column.

4
00:00:07,610 --> 00:00:10,420
Here are some column attributes that
we will be using in the activities in

5
00:00:10,420 --> 00:00:11,470
lesson one.

6
00:00:11,470 --> 00:00:14,920
We can specify a string, with
a specified maximum string length and

7
00:00:14,920 --> 00:00:18,430
we can specify integers which are handy
for storing whole number values.

8
00:00:18,430 --> 00:00:21,340
Relationships tell SQLAlchemy
the type of relationship one

9
00:00:21,340 --> 00:00:22,870
table has to another.

10
00:00:22,870 --> 00:00:25,850
Nullable is an attribute that
if set to false indicates that

11
00:00:25,850 --> 00:00:29,400
a column entry must have a value in
order for the row to be created.

12
00:00:29,400 --> 00:00:32,409
Setting primary key to true
indicates a value that we can use to

13
00:00:32,409 --> 00:00:35,340
uniquely identify each row
of our database table.

14
00:00:35,340 --> 00:00:38,780
And foreign key we can use to reference
a row in a different table provided that

15
00:00:38,780 --> 00:00:40,810
a relation exists
between the two of them.

16
00:00:40,810 --> 00:00:44,390
Inside each restaurant class, for now
we're just going to specify a name and

17
00:00:44,390 --> 00:00:46,240
an ID number to reference
each restaurant.

18
00:00:46,240 --> 00:00:49,330
We create a variable and
name it name, specify it as a column,

19
00:00:49,330 --> 00:00:53,400
say that this column has a string with
a maximum length of 80 characters, and

20
00:00:53,400 --> 00:00:55,050
set nullable equal to false.

21
00:00:55,050 --> 00:00:57,770
Indicating that if name is not
filled out we can not create a new

22
00:00:57,770 --> 00:00:59,790
restaurant row in this database.

23
00:00:59,790 --> 00:01:02,360
Similarly, we'll create
a variable called id,

24
00:01:02,360 --> 00:01:04,080
which we'll also specify as a column.

25
00:01:04,080 --> 00:01:06,990
But this time we'll say it's
an integer instead of a string, and

26
00:01:06,990 --> 00:01:08,710
set primary key to true.

27
00:01:08,710 --> 00:01:11,040
Our menu items are going to have
a little bit more information.

28
00:01:11,040 --> 00:01:13,930
Just like each restaurant,
each menu item needs to have a name.

29
00:01:13,930 --> 00:01:15,830
We'll set nullable equal to false again,

30
00:01:15,830 --> 00:01:18,910
to make sure that no one can
create a menu item without a name.

31
00:01:18,910 --> 00:01:22,630
We'll create an id for each menu item
which is set to the primary key.

32
00:01:22,630 --> 00:01:24,470
We'll create course, description and

33
00:01:24,470 --> 00:01:27,480
price variables and
specify them all as strings.

34
00:01:27,480 --> 00:01:30,580
I'm now going to create a variable
called restaurant_ID and

35
00:01:30,580 --> 00:01:32,830
specify this as a foreign key integer.

36
00:01:32,830 --> 00:01:35,580
This will create the foreign key
relationship between my menu item

37
00:01:35,580 --> 00:01:37,410
class and my restaurant class.

38
00:01:37,410 --> 00:01:40,820
Inside the foreign key I
specify restaurant.id.

39
00:01:40,820 --> 00:01:43,280
This will say look inside
the restaurant table and

40
00:01:43,280 --> 00:01:47,300
retrieve the ID number whenever
I ask for restaurant_id.

41
00:01:47,300 --> 00:01:50,570
In this last line I'm creating
a variable called lowercase restaurant

42
00:01:50,570 --> 00:01:53,530
which I'm saying is the relationship
between my class restaurant.
