1
00:00:00,390 --> 00:00:03,822
The result is the additive increase multiplicative

2
00:00:03,822 --> 00:00:08,340
decrease congestion control algorithm. The algorithm is

3
00:00:08,340 --> 00:00:11,280
distributed, meaning that all the senders can

4
00:00:11,280 --> 00:00:14,340
act independently, and we've just shown using

5
00:00:14,340 --> 00:00:17,000
the phase plots that it's both fair

6
00:00:17,000 --> 00:00:20,310
and efficient. To visualize this sending rate

7
00:00:20,310 --> 00:00:25,641
over time, the sender's sending rate looks roughly as shown. We call this the

8
00:00:25,641 --> 00:00:28,251
TCP sawtooth behavior or simply the

9
00:00:28,251 --> 00:00:33,180
TCP sawtooth. TCP periodically probes for available

10
00:00:33,180 --> 00:00:36,280
bandwidth by increasing its rate using additive

11
00:00:36,280 --> 00:00:40,360
increase. When the sender reaches a saturation

12
00:00:40,360 --> 00:00:45,540
point by filling up a buffer in a router somewhere along the path, it will see

13
00:00:45,540 --> 00:00:50,720
a packet loss, at which point it will decrease its sending rate

14
00:00:50,720 --> 00:00:57,380
by half. You can thus see that a TCP sender sends, a sending rate shown by the

15
00:00:57,380 --> 00:01:00,410
dotted green line that is halfway between the

16
00:01:00,410 --> 00:01:03,270
maximum window size at which the sender sends, and

17
00:01:03,270 --> 00:01:09,158
half that rate, which it backs off to when it sees a loss. You can see that

18
00:01:09,158 --> 00:01:13,798
between the lowest sending rate and the highest

19
00:01:13,798 --> 00:01:17,450
is w m over 2 plus 1 round trips.

20
00:01:17,450 --> 00:01:20,120
Now given that rate we can compute the

21
00:01:20,120 --> 00:01:24,720
number of packets between periods of packet loss,

22
00:01:24,720 --> 00:01:27,100
and compute the loss rate from this. The

23
00:01:27,100 --> 00:01:30,270
number of packets sent for every packet lost is

24
00:01:30,270 --> 00:01:36,080
the area of this triangle. So the lost rate is on the order of the square

25
00:01:36,080 --> 00:01:38,920
of the maximum window divided by some constant.

26
00:01:38,920 --> 00:01:42,570
Now, the throughput is the average rate, 3 4ths

27
00:01:42,570 --> 00:01:49,120
w max divided by the RTT. Now if we want to relate the throughput to the

28
00:01:49,120 --> 00:01:51,430
loss rate, where we call the loss rate

29
00:01:51,430 --> 00:01:55,700
p, and the throughput lambda, we simply need to

30
00:01:55,700 --> 00:02:01,200
solve for w m. And I'm just going to get rid of the constant. So a loss

31
00:02:01,200 --> 00:02:05,700
occurs once for this number of packets, so

32
00:02:05,700 --> 00:02:08,580
the loss rate is simply 1 over that quantity.

33
00:02:08,580 --> 00:02:12,890
And then when we solve for w m and plug in for throughput, we see that the

34
00:02:12,890 --> 00:02:17,080
throughput is inversely proportional to both the round trip

35
00:02:17,080 --> 00:02:19,700
time and the square root of the loss rate.
