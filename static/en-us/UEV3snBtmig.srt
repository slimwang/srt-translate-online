1
00:00:00,550 --> 00:00:04,620
A property in Acme is nothing more than i, than an identifier that can be

2
00:00:04,620 --> 00:00:09,590
associated with a value. That is, you're giving name value pairs that are then

3
00:00:09,590 --> 00:00:14,660
become part of the syntax syntactic description of your architecture.

4
00:00:14,660 --> 00:00:21,250
Examples of uses of such name value-pairs include. Visualization properties,

5
00:00:21,250 --> 00:00:25,360
that is, if you are not satisfied with what Acme Studio gives you,

6
00:00:25,360 --> 00:00:29,870
but you have other tools available to visualize architectures,

7
00:00:29,870 --> 00:00:35,150
you might wish to communicate information about those additional properties

8
00:00:35,150 --> 00:00:40,690
within an Acme description. Temporal constraints. Archi, architectures describe

9
00:00:40,690 --> 00:00:44,300
systems that actually run and may have timing considerations with them, and

10
00:00:44,300 --> 00:00:47,730
you may wish to use tools that can take advantage of this,

11
00:00:47,730 --> 00:00:52,810
such as simulator tools. You might like to have more detailed checking,

12
00:00:52,810 --> 00:00:57,250
on the data being communicated via the ports and roles, and so you might have

13
00:00:57,250 --> 00:01:02,590
a type checking tool. The particular communications between the components

14
00:01:02,590 --> 00:01:07,670
across the connectors to other components, constitutes a protocol. And

15
00:01:07,670 --> 00:01:12,730
you might wish to enforce that protocol. Do checking on that protocol, and

16
00:01:12,730 --> 00:01:16,590
so on. And hence you could use the property language to describe the protocol.

17
00:01:16,590 --> 00:01:19,210
If there's scheduling constraints you could put those in.

18
00:01:19,210 --> 00:01:22,580
If there's resource consumptions constraints you can put those in, and so on.
