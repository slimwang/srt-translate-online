1
00:00:00,320 --> 00:00:01,660
What did you write, David?

2
00:00:01,660 --> 00:00:03,710
>> So I can tell that the first
thing the robot is going to have

3
00:00:03,710 --> 00:00:06,270
to do to paint this ceiling
is climb the ladder.

4
00:00:06,270 --> 00:00:08,500
So I'm first going to apply
the climb ladder operator,

5
00:00:08,500 --> 00:00:10,920
that's going to result in
the robot being on the ladder, but

6
00:00:10,920 --> 00:00:13,264
the state of the ladder and
the ceiling haven't changed.

7
00:00:13,264 --> 00:00:16,855
And then now that the robot is on the
ladder, it'll apply the paint ceiling

8
00:00:16,855 --> 00:00:20,047
operator, which results in painted
ceiling added to the state and

9
00:00:20,047 --> 00:00:21,910
the dry ceiling negated.

10
00:00:21,910 --> 00:00:22,660
>> That's good, David.

11
00:00:22,660 --> 00:00:25,340
So this is the structure
of the final plan.

12
00:00:25,340 --> 00:00:29,870
Another question to ask here is how
might a robot come up with such a plan?

13
00:00:29,870 --> 00:00:32,220
So let's do the same thing that
we have done here earlier.

14
00:00:32,220 --> 00:00:37,730
We're going to use goal as a control
knowledge to select an operator.

15
00:00:37,730 --> 00:00:41,120
So we know that we want to
have the ceiling painted.

16
00:00:41,120 --> 00:00:44,540
So the question then becomes
of the available operators,

17
00:00:44,540 --> 00:00:48,400
which operator has a post
condition painted ceiling.

18
00:00:48,400 --> 00:00:51,915
And the only operator who's
post-condition ceiling is the operator,

19
00:00:51,915 --> 00:00:52,920
paint-celiling.

20
00:00:52,920 --> 00:00:54,080
So we set up that operator.

21
00:00:54,080 --> 00:00:55,726
So we're working backwards here.

22
00:00:55,726 --> 00:01:00,148
Painted-ceiling was a good condition, we
selected paint-ceiling as the operator.

23
00:01:00,148 --> 00:01:03,500
But this paint-ceiling now
has some pre conditions.

24
00:01:03,500 --> 00:01:06,220
One of the pre conditions
is On Robot Ladder,

25
00:01:06,220 --> 00:01:10,790
which is different from
On Robot Floor in the initial state.

26
00:01:10,790 --> 00:01:12,190
So now the question becomes,

27
00:01:12,190 --> 00:01:16,330
how can we achieve this sub
goal of Robot on Ladder?

28
00:01:16,330 --> 00:01:20,640
If we use that sub goal as
the control knowledge, then we want

29
00:01:20,640 --> 00:01:25,180
to select an operator whose post
conditions will match this top goal and

30
00:01:25,180 --> 00:01:27,070
that operator is climb ladder.

31
00:01:27,070 --> 00:01:28,940
So now we have that
climb ladder here and

32
00:01:28,940 --> 00:01:32,830
the preconditions of climb ladder
match this initial state and

33
00:01:32,830 --> 00:01:36,180
that is how we get to this plan,
climb ladder and paint ceiling.

34
00:01:36,180 --> 00:01:38,740
So we were working backwards
using goal knowledge

35
00:01:38,740 --> 00:01:41,210
as control knowledge to
select between operators.

36
00:01:41,210 --> 00:01:43,000
>> So note that we just made
a connection back to problem

37
00:01:43,000 --> 00:01:45,680
reduction that we talked about
right after means and analysis.

38
00:01:45,680 --> 00:01:49,710
Ashok in his description talked about
the sub goal of getting up the ladder.

39
00:01:49,710 --> 00:01:51,420
When we talked about
problem reduction earlier,

40
00:01:51,420 --> 00:01:54,890
we talked about the need to break big
problems down into smaller problems.

41
00:01:54,890 --> 00:01:58,360
But we didn't exactly talk about how
an agent would go about doing that.

42
00:01:58,360 --> 00:02:01,510
Here we see one way in which an agent
would go about actually identifying

43
00:02:01,510 --> 00:02:04,690
those subgoals in order to
accomplish the final goal.
