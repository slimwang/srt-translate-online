1
00:00:00,340 --> 00:00:02,600
It's true that you could use a normal resolution

2
00:00:02,600 --> 00:00:05,320
image in the source and then replace it with javascript

3
00:00:05,320 --> 00:00:08,500
with a higher resolution image. when you programtically detect

4
00:00:08,500 --> 00:00:12,660
the device pixel ratios greater than one. However ,this means

5
00:00:12,660 --> 00:00:15,230
that you would be downloading the normal image and

6
00:00:15,230 --> 00:00:18,990
then a high density image ,on all high density devices.

7
00:00:18,990 --> 00:00:22,590
And unfortunately, most of the current high density devices, that

8
00:00:22,590 --> 00:00:25,580
is where device pixel ratio is set higher to one,

9
00:00:25,580 --> 00:00:28,065
our mobile devices, like my phone and my tablet

10
00:00:28,065 --> 00:00:31,460
,where bandwidth is probably at a premium. So ,this

11
00:00:31,460 --> 00:00:34,120
isn't really a good solution for any reason except

12
00:00:34,120 --> 00:00:37,160
simplicity. It is possible though, that this will be

13
00:00:37,160 --> 00:00:39,760
solved on a server side .For the device pixel

14
00:00:39,760 --> 00:00:45,260
ratio scenario particularly, by something called client-hints. Client-hints is

15
00:00:45,260 --> 00:00:47,430
a header sent to the sever to let it

16
00:00:47,430 --> 00:00:51,090
know what device pixel ratio you're rendering at and

17
00:00:51,090 --> 00:00:57,140
what size you're actually looking for. It uses the vary header to let it know

18
00:00:57,140 --> 00:00:59,550
that the version shouldn't be reused by caches

19
00:00:59,550 --> 00:01:04,150
improperly. However, client hiddence isn't broadly implemented and

20
00:01:04,150 --> 00:01:07,190
deployed yet. And, this approach won't necessarily

21
00:01:07,190 --> 00:01:11,120
solve everything about responsive images. However, once this

22
00:01:11,120 --> 00:01:13,800
approach is actually implemented broadly, it will definitely

23
00:01:13,800 --> 00:01:17,250
be a great tool for fixing density issues.

24
00:01:17,250 --> 00:01:19,300
For now though, you need to make the

25
00:01:19,300 --> 00:01:21,980
decisions on the client side and ask the server

26
00:01:21,980 --> 00:01:23,900
for the right image for your device pixel

27
00:01:23,900 --> 00:01:27,800
ratio. Except remember, its not just device pixel ratio.
