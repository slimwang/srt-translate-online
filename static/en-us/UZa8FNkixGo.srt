1
00:00:00,190 --> 00:00:02,600
Let's take the Inverse Warping example.

2
00:00:02,600 --> 00:00:04,730
We basically have pixels
going this way and

3
00:00:04,730 --> 00:00:07,272
now of course we have the inverse
of the transformation.

4
00:00:07,272 --> 00:00:12,550
We want to basically create or
get every pixel from g x prime y prime

5
00:00:12,550 --> 00:00:15,560
to its corresponding
location in this image.

6
00:00:15,560 --> 00:00:18,870
Transformation is again the inverse and
now the question is,

7
00:00:18,870 --> 00:00:23,380
what if a pixel comes from between
those two pixels, in this range?

8
00:00:23,380 --> 00:00:25,850
Looking at it again, without the images.

9
00:00:25,850 --> 00:00:28,720
Basically, see this pixel
now is falling in green, and

10
00:00:28,720 --> 00:00:31,910
basically in this instance, what we
want to do is interpolate the color

11
00:00:31,910 --> 00:00:34,320
value from the neighbors and
fill this in.

12
00:00:34,320 --> 00:00:38,890
This will not have any holes and stuff,
but it will have minification problems.

13
00:00:38,890 --> 00:00:41,020
Forward warp, that we talked about,

14
00:00:41,020 --> 00:00:45,240
the forward warp will have more
problems with holes and overlaps
