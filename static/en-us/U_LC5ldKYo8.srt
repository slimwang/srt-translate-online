1
00:00:00,000 --> 00:00:02,779
So as a programming exercise, I want you to take this code

2
00:00:02,779 --> 00:00:07,217
and tile both foo and bar using thread blocks that have 128 threads

3
00:00:07,217 --> 00:00:12,284
and tiling, a tile size of 128 elements. Okay?

4
00:00:12,284 --> 00:00:13,948
And as you'll see if you look at the code,

5
00:00:13,948 --> 00:00:16,926
we've structured it so that it'll be safe for you to ignore the boundary effects

6
00:00:16,926 --> 00:00:20,300
at the beginning and end of the arrays, the input and output arrays.

7
00:00:20,300 --> 00:00:23,899
We're only calling this on a portion of the code in the middle of the array.

8
00:00:23,899 --> 00:00:26,594
But of course you can't ignore the boundary effects

9
00:00:26,594 --> 00:00:28,772
that happen at the boundaries between thread blocks.

10
00:00:28,772 --> 00:00:32,575
So I'm looking for the percentage of time of the non-tiled version of the code

11
00:00:32,575 --> 00:00:34,778
that your tiled version takes.

12
00:00:34,778 --> 00:00:38,850
So for example, if your code ran exactly as fast as the non-tiled version,

13
00:00:38,850 --> 00:00:41,582
then it would be 100% of the time,

14
00:00:41,582 --> 00:00:46,578
and if your code ran twice as fast as the non-tiled version, then it would take 50% of the time.

15
00:00:46,578 --> 00:00:51,128
Give me the percentage of time for both foo and bar after you've done the tiling.
