1
00:00:00,000 --> 00:00:08,000
Let's now apply the resampling where the on-lane-marker particles are being resampled for probability 0.2963,

2
00:00:08,000 --> 00:00:11,000
and the ones in the middle with probability 0.037.

3
00:00:11,000 --> 00:00:14,000
Let's draw with replacement 6 new particles.

4
00:00:14,000 --> 00:00:18,000
A typical outcome will be we draw this one over here twice,

5
00:00:18,000 --> 00:00:20,000
this one down here twice, and this one over here once.

6
00:00:20,000 --> 00:00:22,000
Perhaps we draw once over here.

7
00:00:22,000 --> 00:00:26,000
Clearly we draw the particles that sit on the lane markings much more frequently

8
00:00:26,000 --> 00:00:31,000
than the ones that sit off the lane markings for a total of 6 new particles.

9
00:00:31,000 --> 00:00:37,000
We now apply our resampling method whereby we draw twice from this particle over here.

10
00:00:37,000 --> 00:00:43,000
That might give us something over there and over here, given that we add a small amount of noise.

11
00:00:43,000 --> 00:00:46,000
The guy over here will be resampled to something over there.

12
00:00:46,000 --> 00:00:49,000
Same with this guy over here, and this guy might find itself over here.

13
00:00:49,000 --> 00:00:53,000
The set over here of 6 particles in total, will now be the new posterior.

14
00:00:53,000 --> 00:00:58,000
As you can see, this posterior is more consistent with the lane marking observation

15
00:00:58,000 --> 00:01:01,000
than the one of not being on a lane marking by virtue of the fact that

16
00:01:01,000 --> 00:01:03,000
we saw a bright measurement before.

17
00:01:03,000 --> 00:01:08,000
Now we just repeat. We look at the next measurement. We weight particles accordingly.

18
00:01:08,000 --> 00:01:11,000
We resample. We do forward prediction.

19
00:01:11,000 --> 00:01:14,000
That's the basic particle filter algorithm.4

20
00:01:14,000 --> 00:01:17,000
Look at measurment, compute weights, sample, and predict

21
00:01:17,000 --> 00:01:20,000
where the prediction has a certain amount randomness.

22
00:01:20,000 --> 00:01:24,000
If you get that loop implemented, you've implemented an amazing algorithm

23
00:01:24,000 --> 00:01:29,000
that's exactly what has driven many of my robots in the ability to localize themselves.

24
00:01:29,000 --> 00:01:33,000
Obviously they have more than just 1 pixel sensor that measures bright and dark.

25
00:01:33,000 --> 00:01:38,000
They might take an entire road image and use the road image to complete the measurement probability,

26
00:01:38,000 --> 00:01:42,000
but the basic mechanics is exactly the same as shown over here.

27
00:01:42,000 --> 99:59:59,999
So let me ask you, did you actually understand this. Yes or no?
