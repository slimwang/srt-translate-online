1
00:00:00,008 --> 00:00:03,536
The answer: Roughly half of them are going to do useful work.

2
00:00:03,536 --> 00:00:07,777
The actual fraction ends up being 0.516, and I'll say how I got that.

3
00:00:07,777 --> 00:00:09,846
So we've got 32 threads here.

4
00:00:09,846 --> 00:00:14,735
I'm putting them on X-axis, and then on the Y-axis is the number of iterations.

5
00:00:14,735 --> 00:00:18,353
We know that 1 thread will find its answer on the first iteration,

6
00:00:18,353 --> 00:00:22,158
the next thread will find its answer on the second iteration and so on.

7
00:00:22,158 --> 00:00:25,730
So why don't we say the first thread finds it's answer on the first iteration.

8
00:00:25,730 --> 00:00:29,770
The second thread will find it's answer on the second iteration and so on.

9
00:00:29,770 --> 00:00:36,040
So eventually the last thread will take 32 iterations to find its answer,

10
00:00:36,040 --> 00:00:41,211
and what that means is that it has spent 32 iterations walking through this link list.

11
00:00:41,211 --> 00:00:46,047
We have 32 threads times 32 iterations, so the amount of work we could have that's useful

12
00:00:46,047 --> 00:00:49,619
is sort of the product of the number of threads and the number of iterations.

13
00:00:49,619 --> 00:00:54,969
So we see all of this area in that square is being useful.

14
00:00:54,969 --> 00:00:57,134
These threads are doing useful work;

15
00:00:57,134 --> 00:01:01,450
they're walking through the link list until they find their item right here and stop,

16
00:01:01,450 --> 00:01:05,612
but all the blue area here, on the other hand, is wasted work.

17
00:01:05,612 --> 00:01:09,523
We have threads that have gone to sleep, because they've already found their item,

18
00:01:09,523 --> 00:01:13,956
and now they're not doing anything useful; they're just waiting for the last thread to finish.

19
00:01:13,956 --> 00:01:16,071
So if you actually do the math in detail,

20
00:01:16,071 --> 00:01:20,627
what you'll find is the red area compared to the entire square area is slightly more than half,

21
00:01:20,627 --> 00:01:24,249
but basically what we're looking at here is that roughly half the time

22
00:01:24,249 --> 00:01:28,887
if we pick any random thread, it's going to be asleep and waiting for some other thread to finish

23
00:01:28,887 --> 00:01:35,403
so it can progress to the next computation.
