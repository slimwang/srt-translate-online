1
00:00:00,034 --> 00:00:03,340
Looking backup at the top
of helloworld_api.py,

2
00:00:03,340 --> 00:00:06,807
you'll see these imports
from the protorpc library.

3
00:00:06,807 --> 00:00:09,582
Now, protorpc is a tool kit for
building APIs and

4
00:00:09,582 --> 00:00:12,847
it uses Google's protocol
buffers as a message format.

5
00:00:12,847 --> 00:00:16,617
Protocol buffers or proto buff to its
friends is an efficient data format that

6
00:00:16,617 --> 00:00:19,575
can be used through lots and
lots of programming languages,

7
00:00:19,575 --> 00:00:21,322
including Python and JavaScript.

8
00:00:21,322 --> 00:00:25,159
Now, unlike Python itself,
protobuf is statically typed.

9
00:00:25,159 --> 00:00:28,562
Every message and
every field has a declared class.

10
00:00:28,562 --> 00:00:31,956
That means that you'll see a lot
of type information in APIs and

11
00:00:31,956 --> 00:00:33,567
messages that use protobuf.

12
00:00:33,567 --> 00:00:36,716
And a lot of the syntax that you'll
see in endpoints APIs has to do with

13
00:00:36,716 --> 00:00:37,271
protobuf.

14
00:00:37,271 --> 00:00:41,475
For instance, in protobuf,
every field in the message has a number.

15
00:00:41,475 --> 00:00:44,779
These messages has only one field,
so that field is number one.

16
00:00:44,779 --> 00:00:48,228
But messages with several fields
will have their numbered one, two,

17
00:00:48,228 --> 00:00:49,050
three and so on.

18
00:00:49,050 --> 00:00:52,686
The classes that fields can have
are listed in the ProtoRPC field classes

19
00:00:52,686 --> 00:00:55,856
documentation, which is linked
in the Instructor's Notes.

20
00:00:55,856 --> 00:00:58,259
Also, every field has a name.

21
00:00:58,259 --> 00:01:00,594
That's what we see here
in the Hello class.

22
00:01:00,594 --> 00:01:02,263
The name of the field is greeting.

23
00:01:02,263 --> 00:01:05,733
It's type is messages.Stringfield and
one is its number.

24
00:01:05,733 --> 00:01:08,402
Protobuf also has a concept
of nested messages.

25
00:01:08,402 --> 00:01:12,797
A field inside one type can be, instead
of a basic type like String or Boolean,

26
00:01:12,797 --> 00:01:14,608
it can be another message type.

27
00:01:14,608 --> 00:01:18,712
Since we're going to be seeing a lot of
these protobuf things, let's do a quiz.

28
00:01:18,712 --> 00:01:20,114
Here are some Python variables.

29
00:01:20,114 --> 00:01:23,818
And over here is the outline for
protobuf message class.

30
00:01:23,818 --> 00:01:27,762
Now take a look on the messages module
documentation in the instructor notes

31
00:01:27,762 --> 00:01:31,829
for a list of the field classes, then
fill in the appropriate class definition

32
00:01:31,829 --> 00:01:33,450
for each field in the message.
