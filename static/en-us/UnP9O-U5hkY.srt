1
00:00:00,430 --> 00:00:05,000
Say we now add a transparent green object to our scene. To avoid our original

2
00:00:05,000 --> 00:00:09,800
rendering problem, the rule is that all opaque objects are drawn first. So the

3
00:00:09,800 --> 00:00:14,660
blue object is rendered. If we now render the green object, and then, the red

4
00:00:14,660 --> 00:00:19,385
object in that order. The green object will block the red one. We want the blue

5
00:00:19,385 --> 00:00:25,045
object to be affected by both the green and red filters. But the red filter is

6
00:00:25,045 --> 00:00:30,170
rendered too late and has no effect. Just to make life exciting, say we add yet

7
00:00:30,170 --> 00:00:34,760
another filter, a yellow one behind the blue object. This filter is not visible

8
00:00:34,760 --> 00:00:39,032
for the pixel shown. But whatever solution we choose must make sure this object

9
00:00:39,032 --> 00:00:43,500
is taken into account properly. My question to you is, which is the best

10
00:00:43,500 --> 00:00:47,561
solution? The one that will give us the result of red blend to blue. And then

11
00:00:47,561 --> 00:00:51,945
green blended over that. Draw all the transparent objects, sorted by their alpha

12
00:00:51,945 --> 00:00:56,844
values, largest to smallest. Using the painter's algorithm, with the z-buffer

13
00:00:56,844 --> 00:01:01,928
off. Sorted in back to front order. Or based on intensity, with the brightest

14
00:01:01,928 --> 00:01:03,371
objects drawn first.
