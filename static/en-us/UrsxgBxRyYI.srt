1
00:00:00,130 --> 00:00:03,050
For this module we're still in
the Lesson1_Constants&Variables

2
00:00:03,050 --> 00:00:04,170
playground file.

3
00:00:04,170 --> 00:00:09,000
You've seen that the values of
constants remain well, constant, and

4
00:00:09,000 --> 00:00:11,310
the values of variables can vary.

5
00:00:11,310 --> 00:00:15,460
There are actually a couple of different
ways in which a constant is immutable

6
00:00:15,460 --> 00:00:17,860
and a variable is mutable.

7
00:00:17,860 --> 00:00:21,300
The first way has to do with
assignment and reassignment.

8
00:00:21,300 --> 00:00:25,250
Once a constant has been assigned
a value, it can't be reassigned,

9
00:00:25,250 --> 00:00:28,700
even when reassignment wouldn't
change the value, as in this case.

10
00:00:29,750 --> 00:00:34,460
Let's take a look at this error, cannot
assign to let value, yearsOfTheGoat.

11
00:00:35,460 --> 00:00:38,370
Notice that even though the values
of the yearsOfTheGoat and

12
00:00:38,370 --> 00:00:43,300
yearsOfTheSheep arrays are identical,
these constants can't be reassigned.

13
00:00:43,300 --> 00:00:47,190
The second way of being immutable
has to do with changing values.

14
00:00:47,190 --> 00:00:50,600
If we try to change the value of the
array by appending a value to the end of

15
00:00:50,600 --> 00:00:54,595
it, the compiler complains, but
for a different reason this time.

16
00:00:54,595 --> 00:00:55,785
Let's take a look at this error.

17
00:00:56,805 --> 00:01:01,245
Immutable value of type int only
has mutating members named append.

18
00:01:01,245 --> 00:01:04,565
The problem here does not lie
with the assignment per say, but

19
00:01:04,565 --> 00:01:06,485
with mutating the constant's
current value.
