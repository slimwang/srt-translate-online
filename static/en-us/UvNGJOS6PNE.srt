1
00:00:00,160 --> 00:00:03,740
Let's look at the solution to
our write-update coherence quiz.

2
00:00:03,740 --> 00:00:07,230
Where what we had is
four accesses like this

3
00:00:07,230 --> 00:00:12,610
happening in a write-update
coherent set of caches.

4
00:00:12,610 --> 00:00:17,410
After the first read completes here,
we have data 6,

5
00:00:17,410 --> 00:00:21,710
tag 700 hex, and the valid bit is one.

6
00:00:21,710 --> 00:00:23,400
So when this read completes,

7
00:00:23,400 --> 00:00:28,180
we have a valid with 1 here,
the data is 6 and the tag is 700.

8
00:00:28,180 --> 00:00:32,662
At that time, in these other caches,
the valid bit is simply zero,

9
00:00:32,662 --> 00:00:36,590
because they have not
accessed anything yet.

10
00:00:36,590 --> 00:00:41,760
When core 1 reads, it sets the valid
bit and fetches the same data.

11
00:00:41,760 --> 00:00:47,850
When core 2 writes, it broadcasts
the value in the address, so these

12
00:00:47,850 --> 00:00:53,010
caches that already have this block
will update what they have now to 17.

13
00:00:53,010 --> 00:00:57,480
And now, of course, on core 2,
this block starts being valid and

14
00:00:57,480 --> 00:00:59,000
has a value of 17.

15
00:00:59,000 --> 00:01:04,599
And finally, when core 3 reads,
it also gets the value of 17.

16
00:01:04,599 --> 00:01:08,350
So, this is the final
state of the caches.

17
00:01:08,350 --> 00:01:12,450
All caches have the block and all caches
have the same value of the block.

18
00:01:13,450 --> 00:01:16,980
Which means that really the caches
are coherent for this block.
