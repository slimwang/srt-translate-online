1
00:00:00,800 --> 00:00:04,210
So defining the postcondition for
permutation is a little tricky.

2
00:00:04,210 --> 00:00:07,440
Here's one answer that is worth
studying to ensure yourself that you

3
00:00:07,440 --> 00:00:10,350
truly understand how a formal
specification might look.

4
00:00:10,350 --> 00:00:13,460
We will break down the specification
of permutation into several different

5
00:00:13,460 --> 00:00:14,425
special cases.

6
00:00:14,425 --> 00:00:16,980
Okay?
And this is a typical approach for

7
00:00:16,980 --> 00:00:21,100
tricky specifications or even for tricky
programs, is to break them down into

8
00:00:21,100 --> 00:00:24,670
special cases and handle each one
of those special cases by itself.

9
00:00:24,670 --> 00:00:28,782
Okay, the first case to look at
is when both vectors are empty.

10
00:00:28,782 --> 00:00:33,800
We already know that the lengths are the
same, so if we say, we can check whether

11
00:00:33,800 --> 00:00:38,740
they're empty by just checking whether
the length of the vector x equals zero.

12
00:00:38,740 --> 00:00:42,110
And, in that case,
we already talked about this,

13
00:00:42,110 --> 00:00:45,550
we will say that they have the same,
well no we didn't talk about it.

14
00:00:45,550 --> 00:00:47,550
We talked about it with order.

15
00:00:47,550 --> 00:00:50,820
So, if we have an empty vector and
we know that the lengths are the same,

16
00:00:50,820 --> 00:00:53,390
that's saying we're going to
have an empty vector as output,

17
00:00:53,390 --> 00:00:56,130
is that output vector
a permutation on the input vector?

18
00:00:56,130 --> 00:00:56,980
It is.
Okay.

19
00:00:56,980 --> 00:01:00,480
So, special case number one,
the length of the input vector is zero.

20
00:01:00,480 --> 00:01:04,170
We will say, in fact, that the output
is a permutation of the input.
