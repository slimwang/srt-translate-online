1
00:00:00,000 --> 00:00:02,000
This is a fairly tricky question.

2
00:00:02,000 --> 00:00:04,000
The first one is actually not true.

3
00:00:04,000 --> 00:00:09,000
The reason it's not true is there's no guarantee that the same cipher text

4
00:00:09,000 --> 00:00:11,000
with different keys doesn't decrypt to the same message.

5
00:00:11,000 --> 00:00:15,000
We know that the size of M0 is no bigger than the size of K,

6
00:00:15,000 --> 00:00:18,000
because we constructed by unioning the decryption,

7
00:00:18,000 --> 00:00:21,000
which produces just one result over all possible keys.

8
00:00:21,000 --> 00:00:24,000
We know that it's no bigger than the number of possible keys.

9
00:00:24,000 --> 00:00:26,000
We don't know that it's actually equal to that.

10
00:00:26,000 --> 00:00:30,000
That would require another assumption about the decryption function.

11
00:00:30,000 --> 00:00:32,000
The other two properties we do know are correct.

12
00:00:32,000 --> 00:00:36,000
We know that M0 has fewer elements than M.

13
00:00:36,000 --> 00:00:38,000
This is the case because of this assumption.

14
00:00:38,000 --> 00:00:44,000
We said that the space of possible messages is greater than the space of possible keys.

15
00:00:44,000 --> 00:00:50,000
If that's the case, combined with the size of M0 being less than or equal to K,

16
00:00:50,000 --> 00:00:54,000
then we know that the size of M0 must be less than the size of M.

17
00:00:54,000 --> 00:00:57,000
The third property is also true.

18
00:00:57,000 --> 00:01:01,000
This is the key property that should give us insight why it can't be a perfect cipher.

19
00:01:01,000 --> 00:01:05,000
There exists some message in M that can't be in M0,

20
00:01:05,000 --> 00:01:08,000
and that follows directly from this property.

21
00:01:08,000 --> 00:01:11,000
If one set is bigger than another set, there must be some element

22
00:01:11,000 --> 00:01:14,000
in the bigger set that's not in the smaller one.

23
00:01:14,000 --> 00:01:17,000
How do we go from there to prove that it's not a perfect cipher?

24
00:01:17,000 --> 00:01:23,000
Let's remember our definition of a perfect cipher, and that was that the probability

25
00:01:23,000 --> 00:01:27,000
that the message is some particular message given the ciphertext

26
00:01:27,000 --> 00:01:30,000
without knowing anything other than that ciphertext

27
00:01:30,000 --> 00:01:36,000
is equal to the probability that M* was the message beforehand.

28
00:01:36,000 --> 00:01:38,000
That probably hasn't changed.

29
00:01:38,000 --> 00:01:46,000
In this case, if we have intercepted C0. This was our ciphertext for the example.

30
00:01:46,000 --> 00:01:52,000
Because of this property, we know that the probability that the message is M*

31
00:01:52,000 --> 00:01:58,000
is actually 0, because that's not in the set of possible decryptions of C0

32
00:01:58,000 --> 00:02:00,000
over all possible keys.

33
00:02:00,000 --> 00:02:03,000
But we said that M* was a message in M

34
00:02:03,000 --> 00:02:09,000
that initially had some non-zero probabilty, which is not the case that these two are equal,

35
00:02:09,000 --> 00:02:11,000
because this was greater than 0.

36
00:02:11,000 --> 00:02:14,000
We've contradicted the requirement for our perfect cipher.

37
00:02:14,000 --> 00:02:18,000
The only assumption that went into this was this one.

38
00:02:18,000 --> 00:02:22,000
We assumed that there existed a perfect cipher where the number of messages

39
00:02:22,000 --> 00:02:24,000
is greater than the number of keys.

40
00:02:24,000 --> 00:02:26,000
We've reached a contradiction.

41
00:02:26,000 --> 00:02:31,000
This proves that there exists no perfect ciphers where the number of messages

42
00:02:31,000 --> 00:02:34,000
is greater than the number of keys. This is bad news.

43
00:02:34,000 --> 00:02:37,000
Every cipher that's practical must be imperfect.

44
00:02:37,000 --> 00:02:42,000
This means that given some ciphertext that an attacker intercepts,

45
00:02:42,000 --> 00:02:44,000
even if the attacker knows nothing about the key,

46
00:02:44,000 --> 00:02:47,000
they can eliminate some of the possible messages.

47
00:02:47,000 --> 00:02:52,000
This means that when people attempt to use ciphers similar to a one-time pad in practice,

48
00:02:52,000 --> 00:02:54,000
they tend to actually not work very well.

49
00:02:54,000 --> 00:02:58,000
The reason for this is that they reuse keys, because the number of messages they

50
00:02:58,000 --> 00:03:02,000
want to encrypt is greater than the number of keys they have.

51
00:03:02,000 --> 99:59:59,999
Next we'll look at an interesting historical example of this.
