1
00:00:00,000 --> 00:00:03,000
The next kind of graph we're going to look at is called a hypercube,

2
00:00:03,000 --> 00:00:06,000
and the graph is almost but not quite as cool as the name.

3
00:00:06,000 --> 00:00:10,000
We're going to define a hypercube for any number of nodes as long as

4
00:00:10,000 --> 00:00:12,000
that number of nodes is a power of 2.

5
00:00:12,000 --> 00:00:16,000
Here we have four nodes. That's a power of 2--2Â˛.

6
00:00:16,000 --> 00:00:19,000
What we're going to do is we're going to connect edges up in a particular way.

7
00:00:19,000 --> 00:00:22,000
This is how we're going to do it. We're going to imagine that every node has a label.

8
00:00:22,000 --> 00:00:24,000
That label is a bit pattern.

9
00:00:24,000 --> 00:00:26,000
In particular, we're going to imagine that we're going to number each of the nodes,

10
00:00:26,000 --> 00:00:29,000
basically, from 0 up to n - 1.

11
00:00:29,000 --> 00:00:34,000
We're going to connect two nodes if their bit patters differ in exactly one place.

12
00:00:34,000 --> 00:00:36,000
We see this example here.

13
00:00:36,000 --> 00:00:40,000
If we label the nodes--these are now binary numbers 0, 1, 2, 3--

14
00:00:40,000 --> 00:00:46,000
we connect these two nodes because they differ just in the first bit--11, 01.

15
00:00:46,000 --> 00:00:50,000
We connect these two because they differ in the second bit--10, 11.

16
00:00:50,000 --> 00:00:54,000
We connect these two because they differ in the second place--00, 01.

17
00:00:54,000 --> 00:00:58,000
And we connect these two because they differ in the first place--00, 10.

18
00:00:58,000 --> 00:01:01,000
We can generalize this to larger graphs.

19
00:01:01,000 --> 00:01:03,000
Here's a hypercube on eight nodes.

20
00:01:03,000 --> 00:01:07,000
We number the nodes from 0 to 7 in their binary bit patterns.

21
00:01:07,000 --> 00:01:11,000
Then we connect two nodes if they differ in exactly one bit place.

22
00:01:11,000 --> 00:01:16,000
Now, perhaps you can see why these are called hypercubes. This is a cube.

23
00:01:16,000 --> 00:01:18,000
The previous one was a square. What's the next one going to be?

24
00:01:18,000 --> 00:01:24,000
To generate the hypercube for n = 16, we can do this with a very interesting little trick.

25
00:01:24,000 --> 00:01:28,000
What we're going to do is we're going to take two hypercubes of size 8 and 8.

26
00:01:28,000 --> 00:01:30,000
Now 8 and 8 is going to be 16. Let's look at what we can do.

27
00:01:30,000 --> 00:01:32,000
We can leave these bit patterns the way that they are,

28
00:01:32,000 --> 00:01:34,000
and then we can extend them.

29
00:01:34,000 --> 00:01:37,000
Everybody in this hypercube is going to get a 0 in front.

30
00:01:37,000 --> 00:01:40,000
Remember what that means in terms of the binary numbers is that they say the same.

31
00:01:40,000 --> 00:01:42,000
A leading 0 doesn't change anything,

32
00:01:42,000 --> 00:01:45,000
but this second hypercube everyone is going to get a one out in front.

33
00:01:45,000 --> 00:01:47,000
Again, thinking about your binary numbers, what is that doing?

34
00:01:47,000 --> 00:01:51,000
It's adding 8 to all of the number of these nodes,

35
00:01:51,000 --> 00:01:53,000
giving unique bit patterns that we haven't seen before.

36
00:01:53,000 --> 00:01:57,000
Now if we connect the corresponding corners of these two cubes,

37
00:01:57,000 --> 00:02:00,000
which is going to be a little bit messy, and I can draw them deeper,

38
00:02:00,000 --> 00:02:02,000
but it'll start to make the picture a little distracting.

39
00:02:02,000 --> 00:02:05,000
That is a 4-dimensional cube, also known as a hypercube.

40
00:02:05,000 --> 00:02:09,000
We can keep extending this over and over again--5-bit patterns, 6-bit patterns, 7-bit patterns.

41
00:02:09,000 --> 00:02:14,000
Each time what we're doing is connecting two hypercubes of the previous size,

42
00:02:14,000 --> 00:02:17,000
extending them and then connecting the corresponding vertices.
