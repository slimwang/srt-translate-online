1
00:00:00,190 --> 00:00:04,080
When you've written code before, you've
used data structures such as variables,

2
00:00:04,080 --> 00:00:06,830
lists, dictionaries, and objects.

3
00:00:06,830 --> 00:00:10,380
These all let you store information
while your program is running.

4
00:00:10,380 --> 00:00:14,830
You can build up a complex data
structure like a list of dictionaries of

5
00:00:14,830 --> 00:00:19,960
objects, and when your program exits,
that structure will be gone from memory.

6
00:00:19,960 --> 00:00:21,480
You've probably worked with files, for

7
00:00:21,480 --> 00:00:24,240
instance, the files
containing your own code.

8
00:00:24,240 --> 00:00:28,370
If you edit code in a text editor and
save it, then quit the editor,

9
00:00:28,370 --> 00:00:32,689
your code doesn't vanish the way
a variable does, when the program exits.

10
00:00:32,689 --> 00:00:34,100
The file is persistent, or

11
00:00:34,100 --> 00:00:38,430
durable, whereas in memory data
is ephemeral, or temporary.

12
00:00:38,430 --> 00:00:43,690
Programs can read and write files just
fine, so why bother with databases?

13
00:00:43,690 --> 00:00:47,020
Well, there are several different
kinds of databases, but

14
00:00:47,020 --> 00:00:49,870
what they all have in common is
that they give us both persistence,

15
00:00:49,870 --> 00:00:54,080
like a file, as well as data structures
for storing and searching our data,

16
00:00:54,080 --> 00:00:57,730
usually much faster and
easier than we could search a flat file.

17
00:00:57,730 --> 00:01:01,690
They also make it possible for multiple
programs or users to access, and

18
00:01:01,690 --> 00:01:05,060
modify data at the same time without
stepping on each other's toes, or

19
00:01:05,060 --> 00:01:07,930
accidentally undoing
each other's changes.

20
00:01:07,930 --> 00:01:11,150
That's generally not
possible with flat files.

21
00:01:11,150 --> 00:01:14,950
If two programs write a new version
of a file at the same time,

22
00:01:14,950 --> 00:01:17,300
then one will overwrite the other.

23
00:01:18,470 --> 00:01:21,170
So these other sorts of
databases do all that, but

24
00:01:21,170 --> 00:01:23,670
relational databases do even more.

25
00:01:23,670 --> 00:01:27,720
Aside from storing your data,
relational databases also offer very

26
00:01:27,720 --> 00:01:30,440
flexible tools for
querying and summarizing data.

27
00:01:30,440 --> 00:01:32,840
If we're doing comparisons, and

28
00:01:32,840 --> 00:01:35,550
if we're drawing connections between
related pieces of information.

29
00:01:36,700 --> 00:01:40,290
They also let us set up constraints
which are rules to ensure the changes to

30
00:01:40,290 --> 00:01:42,060
our data are consistent.

31
00:01:42,060 --> 00:01:44,920
We'll see more about those
later in the course.

32
00:01:44,920 --> 00:01:47,250
Now, let's see how relational
data bases store data.
