1
00:00:00,270 --> 00:00:03,990
So what actually goes into
getting images from the Internet

2
00:00:03,990 --> 00:00:05,980
onto the screen in your app?

3
00:00:05,980 --> 00:00:09,480
Well, there's a networking part
to actually download the images,

4
00:00:09,480 --> 00:00:13,130
can't do that on the main thread so
we'll have to use a background thread.

5
00:00:13,130 --> 00:00:15,990
You probably want to cache
the images locally to prevent

6
00:00:15,990 --> 00:00:17,769
unnecessary repeated downloading.

7
00:00:19,080 --> 00:00:21,520
Oh, and down sampling and decoding.

8
00:00:21,520 --> 00:00:25,360
It doesn't make sense to load giant
images, just to display tiny icons.

9
00:00:26,460 --> 00:00:30,474
Well and we have icons on our list, so
probably want some behavior to ensure

10
00:00:30,474 --> 00:00:33,291
that we can still scroll
our list nice and smoothly.

11
00:00:33,291 --> 00:00:37,322
A whole bunch of images are loaded or
cancel requests for images that are no

12
00:00:37,322 --> 00:00:42,180
longer visible due to life cycle changes
such as our activity being paused.

13
00:00:42,180 --> 00:00:45,740
Then it add the image to the screen
at least we have image view there.

14
00:00:46,980 --> 00:00:49,275
Oh, and
we have our notification as well.

15
00:00:49,275 --> 00:00:52,915
There we probably do need to get the
whole image as we build the notification

16
00:00:52,915 --> 00:00:56,085
so maybe a synchronous API for
this case.

17
00:00:56,085 --> 00:00:59,056
Anyone else thinking this
is a bit complicated?

18
00:00:59,056 --> 00:01:03,065
You can't just cut out any of these
steps if we want to go to experience.

19
00:01:03,065 --> 00:01:07,330
But none of the logic here is
unique to sunshine, right?

20
00:01:07,330 --> 00:01:10,245
Plenty of other ops have gone
through the same flow and

21
00:01:10,245 --> 00:01:12,220
tackle these same steps.

22
00:01:12,220 --> 00:01:15,540
When you see these types of
reusable pieces of code it's

23
00:01:15,540 --> 00:01:18,080
a great time to consider
using a library.
