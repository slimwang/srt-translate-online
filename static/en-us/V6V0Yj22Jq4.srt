1
00:00:00,000 --> 00:00:03,000
So far all of the procedures you've written have been quite simple,

2
00:00:03,000 --> 00:00:06,000
only needed a line or maybe two of code to finish them.

3
00:00:06,000 --> 00:00:09,400
Now we're going to try a quiz which is going to be much more challenging,

4
00:00:09,400 --> 00:00:15,000
and I'm going to give it a gold star to show that this is an especially challenging quiz.

5
00:00:15,000 --> 00:00:19,769
If you can get this one on your own, you're really understanding things very well.

6
00:00:19,769 --> 00:00:21,123
If you get stuck on this one, that's okay.

7
00:00:21,123 --> 00:00:25,000
They'll be some hints to make it a little easier, and then hopefully you'll understand

8
00:00:25,000 --> 00:00:29,000
the answer after you see it, and you'll have a lot more chances especially on the homework

9
00:00:29,000 --> 00:00:32,000
to try some harder questions on your own.

10
00:00:32,000 --> 00:00:33,000
So here's the question.

11
00:00:33,000 --> 00:00:39,000
Your goal is to define a procedure, and we'll call this one find_second.

12
00:00:39,000 --> 00:00:44,892
It takes 2 strings as its inputs, so the first input is the search string.

13
00:00:44,892 --> 00:00:46,708
The second input is the target string.

14
00:00:46,708 --> 00:00:51,000
And your goal is to print out the position of the second occurrence of the target string

15
00:00:51,000 --> 00:00:53,000
in the search string.

16
00:00:53,000 --> 00:00:57,538
It should output a number that is the position of the second occurrence of the target string

17
00:00:57,538 --> 00:00:59,000
in the search string.

18
00:00:59,000 --> 00:01:03,815
I'll show you an example in the Python interpreter of what find_second should do,

19
00:01:03,815 --> 00:01:06,000
then you should try and solve this on your own.

20
00:01:06,000 --> 00:01:12,000
For an example, here's the quote we had in unit 1 from George Danton,

21
00:01:12,000 --> 00:01:17,000
and if we evaluate find_second, passing in danton as the first input

22
00:01:17,000 --> 00:01:18,000
and 'audace' as the second,

23
00:01:18,000 --> 00:01:22,000
what we should get is the position of the second occurrence of 'audace'

24
00:01:22,000 --> 00:01:24,000
in the input string danton.

25
00:01:24,000 --> 00:01:28,000
When we run this, we see that we get 25, which is that position.
