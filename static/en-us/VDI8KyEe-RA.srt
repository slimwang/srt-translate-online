1
00:00:00,510 --> 00:00:03,710
So once we have determined the class to use and the type of constraint,

2
00:00:03,710 --> 00:00:07,210
we can actually express the constraint in OCL and here's what it slooks,

3
00:00:07,210 --> 00:00:12,380
looks like. What I've put in bold are key words that belong to the language and

4
00:00:12,380 --> 00:00:19,120
the parts in plain text, not bolded text correspond to the particular.

5
00:00:20,440 --> 00:00:24,580
Particulars of the UML diagram so we have the context is book.

6
00:00:24,580 --> 00:00:29,940
We have the keyword invariant and then we have a conditional expression.

7
00:00:29,940 --> 00:00:34,230
Recall from the statement of the requirement that there were two situations, one

8
00:00:34,230 --> 00:00:37,810
for books in general and the other is for bestsellers. So it makes sense that we

9
00:00:37,810 --> 00:00:43,130
have some kind of conditional going on there. This is a conditional expression.

10
00:00:43,130 --> 00:00:47,000
It's not a statement in the sense of a, a programming language.

11
00:00:47,000 --> 00:00:50,640
That is it produces a value rather than a change of state.

12
00:00:51,950 --> 00:00:56,700
Okay? And so if we read through it says, if bestseller and

13
00:00:56,700 --> 00:01:02,000
recall that bestseller was a bullion. Then it is the case that

14
00:01:02,000 --> 00:01:07,120
the check out period, which is an attribute of book, is two weeks. And

15
00:01:07,120 --> 00:01:12,320
otherwise, the check out period is three weeks. So, one of

16
00:01:12,320 --> 00:01:17,710
two possibilities exist, and it depends upon the value of that, that boolean.
