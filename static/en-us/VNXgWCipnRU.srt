1
00:00:00,570 --> 00:00:04,250
So, now what we're seeing
are what I call interfaces.

2
00:00:04,250 --> 00:00:08,300
Each of the components that I just
mentioned, exports some interface,

3
00:00:08,300 --> 00:00:11,530
which explains to the client
of that component, or

4
00:00:11,530 --> 00:00:15,720
the outside world, how to interact with
it, what capabilities it provides.

5
00:00:15,720 --> 00:00:18,940
In our case, those capabilities
are what we call predicates.

6
00:00:18,940 --> 00:00:22,200
You can think of them as
tables in a database.

7
00:00:22,200 --> 00:00:24,740
These are predicates, or
tables, that are accessible and

8
00:00:24,740 --> 00:00:28,410
visible to the outside world that
clients could query or update.

9
00:00:28,410 --> 00:00:31,760
And as you see here, even though we
have four different kinds of components,

10
00:00:31,760 --> 00:00:36,400
we only have two different kinds of
interfaces forecast and multipliers, and

11
00:00:36,400 --> 00:00:37,710
this is by design.

12
00:00:37,710 --> 00:00:41,540
What that means is that I can,
as you see in this example,

13
00:00:41,540 --> 00:00:45,320
I can have multiple components
that implement the same interface.

14
00:00:45,320 --> 00:00:48,140
Now what's nice about that
is components that implement

15
00:00:48,140 --> 00:00:51,770
the same interface are plug compatible,
and layered assemblies.

16
00:00:51,770 --> 00:00:55,640
So I can actually build different
assemblies that use each of these

17
00:00:55,640 --> 00:00:59,060
components, each of these three forecast
components that I've just declared.

18
00:00:59,060 --> 00:01:01,880
Put them together in different ways and
build a nice,

19
00:01:01,880 --> 00:01:06,270
rich library of variance,
just by putting those forecasts,

20
00:01:06,270 --> 00:01:08,660
just by putting those
together in different ways.

21
00:01:08,660 --> 00:01:11,610
>> And can you relate this
use of the term interface to

22
00:01:11,610 --> 00:01:13,170
its use in other languages like Java?

23
00:01:14,190 --> 00:01:16,780
>> Yes it's almost exactly the same use.

24
00:01:16,780 --> 00:01:20,750
So in Java interfaces you declare
signatures of methods that

25
00:01:20,750 --> 00:01:25,360
many different objects would, obviously
many different classes could implement.

26
00:01:25,360 --> 00:01:26,530
It's essentially the same thing here.
