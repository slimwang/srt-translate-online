1
00:00:00,230 --> 00:00:01,130
So far,

2
00:00:01,130 --> 00:00:05,510
we've used the loadContainerPreferFresh
method to load the container.

3
00:00:05,510 --> 00:00:08,260
And this takes the containerID,

4
00:00:08,260 --> 00:00:12,090
which you get from the TagManager UI,
and the defaultContainer.

5
00:00:13,380 --> 00:00:16,360
So this method checks if
the app has a container

6
00:00:16,360 --> 00:00:19,780
that's been refreshed in
the past 12 hours or so.

7
00:00:19,780 --> 00:00:22,540
And if it does,
then we load the container.

8
00:00:22,540 --> 00:00:26,950
And if there isn't a fresh container,
then load a new one over the network.

9
00:00:26,950 --> 00:00:31,860
And if there's a timeout or
a network error before the container

10
00:00:31,860 --> 00:00:37,880
finishes loading, then the container
holder status is set to unsuccessful.

11
00:00:37,880 --> 00:00:40,930
There are a couple of other methods for
loading the container,

12
00:00:40,930 --> 00:00:44,725
loadContainerDefaultOnly, which will
only get the default container,

13
00:00:44,725 --> 00:00:49,130
and then there's also
loadContainerPreferNonDefault.

14
00:00:50,150 --> 00:00:53,420
So this one prefers to not
use the default container but

15
00:00:53,420 --> 00:00:55,970
doesn't necessarily look for
a fresh container.

16
00:00:55,970 --> 00:01:00,530
To get the freshest value,
use loadContainerPreferFresh.

17
00:01:00,530 --> 00:01:03,040
But fresh is a relative term.

18
00:01:03,040 --> 00:01:07,920
If we look at the reference page for
TagManager, it says that the mobile app

19
00:01:07,920 --> 00:01:11,070
refreshes a container from
the network every 12 hours.

20
00:01:12,420 --> 00:01:15,480
So one of the benefits of
TagManager is that non-developers

21
00:01:15,480 --> 00:01:17,430
cannot put changes to an app.

22
00:01:17,430 --> 00:01:20,530
And these will often be bulk
uploads of many values.

23
00:01:20,530 --> 00:01:24,640
This mechanism is not really meant for
second-by-second changes, but

24
00:01:24,640 --> 00:01:27,490
it's nice to see the changes
when we're developing our app.

25
00:01:27,490 --> 00:01:31,250
And that's why we added the call
to manually refresh the container.

26
00:01:31,250 --> 00:01:34,870
Here's the reference,
the refresh method on the container.

27
00:01:34,870 --> 00:01:38,910
And it says, in order to limit
the frequency of network communication,

28
00:01:38,910 --> 00:01:43,430
refresh method is throttled, and
that you're supposed to wait at least 15

29
00:01:43,430 --> 00:01:45,900
minutes before calling
this method again.

30
00:01:45,900 --> 00:01:48,760
So even manual refreshes are not
guaranteed to take effect

31
00:01:48,760 --> 00:01:50,200
more than about every 15 minutes.

32
00:01:51,520 --> 00:01:54,810
I've had good luck with my changes
taking effect very quickly

33
00:01:54,810 --> 00:01:59,190
when I change variable values in
TagManager, but it's not guaranteed.

34
00:01:59,190 --> 00:02:02,010
If you don't see the changes
taking effect immediately,

35
00:02:02,010 --> 00:02:02,890
don't be too surprised.
