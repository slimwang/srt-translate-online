1
00:00:00,300 --> 00:00:04,400
Perhaps, you were surprised by the last problem that you worked with Sarah. In

2
00:00:04,400 --> 00:00:10,150
that problem, an object was shared with two variables. Let's have a closer look

3
00:00:10,150 --> 00:00:14,285
at what happens in that case. Here, we have an object that's stored in a

4
00:00:14,285 --> 00:00:19,180
variable. Now, it's important not to confuse the object which I've drawn here

5
00:00:19,180 --> 00:00:25,360
with the variable. In Java, an object variable does not actually contain the

6
00:00:25,360 --> 00:00:32,460
object. Instead, it contains information on how to find the object, it contains

7
00:00:32,460 --> 00:00:38,844
the location of the object. We draw that location with an arrow and we call it

8
00:00:38,844 --> 00:00:47,560
a reference. Now, suppose we make a second variable and copy the first one into

9
00:00:47,560 --> 00:00:54,240
the second. In that case, we simply copy this reference into this variable. As

10
00:00:54,240 --> 00:01:00,435
you can see now, both the variable box and the variable box2 refer to the same

11
00:01:00,435 --> 00:01:06,480
object. Now, suppose we call a mutator on one of the variables. As you can see,

12
00:01:06,480 --> 00:01:12,550
the object has changed. And that change is observable both through the variable

13
00:01:12,550 --> 00:01:18,190
box and through the variable box2. That's just how object variables work in

14
00:01:18,190 --> 00:01:24,346
Java. And it's good to know, because you can then explain how objects work when

15
00:01:24,346 --> 00:01:28,919
they're copied. Sarah will practice that with you with another problem.
