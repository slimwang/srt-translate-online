1
00:00:00,390 --> 00:00:02,160
We can take this a bit farther.

2
00:00:02,160 --> 00:00:06,511
Right now the location preference allows
us to enter a string of arbitrary size.

3
00:00:06,511 --> 00:00:07,426
We'd like to make it so

4
00:00:07,426 --> 00:00:11,150
that the preference is at least three
characters before accepting input.

5
00:00:11,150 --> 00:00:13,370
The default preference
doesn't allow us to do that.

6
00:00:14,395 --> 00:00:17,370
We're going to create
a custom preference view.

7
00:00:17,370 --> 00:00:20,300
A custom preference view is similar
in construction to any other

8
00:00:20,300 --> 00:00:21,970
custom view in Android.

9
00:00:21,970 --> 00:00:25,278
So, consider this an introduction
to creating custom views.

10
00:00:25,278 --> 00:00:28,712
A custom preference view can both
change the way the preference

11
00:00:28,712 --> 00:00:32,919
is presented in the list, what happens
when it is clicked, and in this case,

12
00:00:32,919 --> 00:00:37,800
the way the alert dialog behaves that is
used to back the edit text preference.

13
00:00:37,800 --> 00:00:40,560
We're going to give our custom
view a custom attribute for

14
00:00:40,560 --> 00:00:42,318
the minimum length of the location.

15
00:00:42,318 --> 00:00:45,383
Mostly because custom
attributes are cool.

16
00:00:45,383 --> 00:00:47,390
So let's start there.

17
00:00:47,390 --> 00:00:51,350
We'll create a new values
file called attrs.xml.

18
00:00:51,350 --> 00:00:54,920
We build custom attributes using
the declare-styleable tag.

19
00:00:54,920 --> 00:00:59,460
Each attribute in declare-styleable
has a name and a format.

20
00:00:59,460 --> 00:01:03,070
The next thing to do is to create our
custom edit text preference by creating

21
00:01:03,070 --> 00:01:06,280
a new class that extends
edit text preference.

22
00:01:06,280 --> 00:01:10,380
And that new class will create
a constructor that uses a context and

23
00:01:10,380 --> 00:01:11,830
an attribute set.

24
00:01:11,830 --> 00:01:16,510
That attribute set is what we use to
read the value of our custom attribute.

25
00:01:16,510 --> 00:01:20,634
We call
context.gettheme.obtainStyledAttributes

26
00:01:20,634 --> 00:01:22,390
passing in this value.
