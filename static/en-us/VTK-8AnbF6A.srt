1
00:00:00,000 --> 00:00:06,000
A good way to get started with such a problem is to write out what sorts of strings are matched.

2
00:00:06,000 --> 00:00:19,000
There are things like 1 space 1, 1 space 123, because of this plus, 2 space 456, and so on.

3
00:00:19,000 --> 00:00:22,000
One of the things that we notice quickly is that they all have a space,

4
00:00:22,000 --> 00:00:26,000
they all start with a single digit, and they don't have any letters in them.

5
00:00:26,000 --> 00:00:29,000
Is a1 space 2 part of the possible return value?

6
00:00:29,000 --> 00:00:33,000
Well, it would have to match this regular expression and be in the string.

7
00:00:33,000 --> 00:00:36,000
It's in the string but it doesn't match this regular expression,

8
00:00:36,000 --> 00:00:40,000
because it starts with an "a" and none of our things start with an "a."

9
00:00:40,000 --> 00:00:42,000
How about 1 space 2? That looks pretty good.

10
00:00:42,000 --> 00:00:47,000
We have 1 space 1, and we could pick a different digit, and it's in the string.

11
00:00:47,000 --> 00:00:50,000
It could be a part of our return value.

12
00:00:50,000 --> 00:00:55,000
1 space 2b--it is in the string, but we never have any letters in this regular expression.

13
00:00:55,000 --> 00:00:57,000
It doesn't match.

14
00:00:57,000 --> 00:01:01,000
2 space 3--this has the right format. It matches our regular expression.

15
00:01:01,000 --> 00:01:05,000
But it's not actually in the haystack string, so it can't be part of the return value.

16
00:01:05,000 --> 00:01:08,000
44--this has the wrong format. We need a space in the middle.

17
00:01:08,000 --> 00:01:13,000
3 space 44--this has the right format, it matches our regular expression,

18
00:01:13,000 --> 00:01:17,000
and it actually occurs in the string. Great.

19
00:01:17,000 --> 00:01:21,000
3 space 44d--this has the wrong format. Again, we're not matching any letters.

20
00:01:21,000 --> 00:01:23,092
So just these two.
