1
00:00:00,180 --> 00:00:04,019
The final advantage of fragments, 
doesn't involve user interfaces at all.

2
00:00:04,019 --> 00:00:07,685
As you know, as visual components, 
activities are destroyed and recreated,

3
00:00:07,685 --> 00:00:09,780
whenever the device
configuration changes.

4
00:00:09,780 --> 00:00:11,983
Most notably when the 
screen orientation switches.

5
00:00:11,983 --> 00:00:13,926
That makes sense, 
because there's a good chance

6
00:00:13,926 --> 00:00:17,080
we'll want to create a different layout, 
to better suit the new configuration.

7
00:00:17,080 --> 00:00:20,020
But, if we can use fragments 
to break up visual activity modules,

8
00:00:20,020 --> 00:00:22,193
why not logical ones as well?

9
00:00:22,193 --> 00:00:24,266
It turns out we can do exactly that.

10
00:00:24,266 --> 00:00:26,060
And because these
fragments are non-visual,

11
00:00:26,060 --> 00:00:29,660
there's no need to recreate them
every time the UI needs updating.

12
00:00:29,660 --> 00:00:32,400
Within the onCreatehandler
of your non-UI fragment,

13
00:00:32,400 --> 00:00:38,013
call setRetainInstance, 
passing in true, and return null,

14
00:00:38,013 --> 00:00:40,126
within your onCreate view handler.

15
00:00:40,126 --> 00:00:43,670
Then, once the parent activity is created, 
you can kick off any connections,

16
00:00:43,670 --> 00:00:46,900
threads or tasks that are bound
to the lifetime of the activity,

17
00:00:46,900 --> 00:00:49,970
which don't need to be interrupted 
every time the device rotates.
