1
00:00:00,240 --> 00:00:02,540
Or remembering, that I said that device motion, is,

2
00:00:02,540 --> 00:00:06,170
a strict super set of device orientation. Anything, you can

3
00:00:06,170 --> 00:00:08,570
do with device orientation, you could do, with device

4
00:00:08,570 --> 00:00:11,870
motion. However, it's going to be easier to implement things

5
00:00:11,870 --> 00:00:15,380
like a compass or a joystick, using device orientation

6
00:00:15,380 --> 00:00:18,660
rather than device motion. However, if you want to implement

7
00:00:18,660 --> 00:00:21,780
shake to send feedback, you really need the acceleration, sensing

8
00:00:21,780 --> 00:00:25,910
that device motion offers. And for a generic game controller,

9
00:00:25,910 --> 00:00:28,140
rather than just a joy stick, you might find

10
00:00:28,140 --> 00:00:32,130
device motion, is interesting. For example, the roll it game,

11
00:00:32,130 --> 00:00:35,890
that we demonstrated at IO used the acceleration rates, from

12
00:00:35,890 --> 00:00:38,870
device motion and that way you could tell what speed

13
00:00:38,870 --> 00:00:41,320
the device was moving and in which direction. So,

14
00:00:41,320 --> 00:00:43,360
it made it really easy to throw a ball, with

15
00:00:43,360 --> 00:00:47,230
pretty good precision. One major difference, between, these two APIs,

16
00:00:47,230 --> 00:00:50,900
is how often they're fired. Device orientation, is, only fired,

17
00:00:50,900 --> 00:00:53,530
when the device orientation changes. For

18
00:00:53,530 --> 00:00:56,730
device motion, it's fired whenever, the acceleration

19
00:00:56,730 --> 00:00:59,080
changes, on the device, which includes

20
00:00:59,080 --> 00:01:01,320
lateral movement. So, it fires pretty often.
