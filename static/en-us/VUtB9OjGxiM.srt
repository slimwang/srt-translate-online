1
00:00:00,230 --> 00:00:03,550
Now that you know about the different
states in the activity lifecycle,

2
00:00:03,550 --> 00:00:07,200
how do you tell the system that you
want to know about certain transitions?

3
00:00:07,200 --> 00:00:11,030
So for example, you probably only want
to show an animation on the screen,

4
00:00:11,030 --> 00:00:13,475
if the user's actively
looking at your activity.

5
00:00:13,475 --> 00:00:16,155
And you want to stop that
animation as soon as the screen is

6
00:00:16,155 --> 00:00:17,535
not visible anymore.

7
00:00:17,535 --> 00:00:20,665
Well, similar to click handling,
the system will signal to you

8
00:00:20,665 --> 00:00:24,255
that a lifecycle transition is
happening via a method callback, and

9
00:00:24,255 --> 00:00:26,795
each of the transitions
gets its own callback.

10
00:00:26,795 --> 00:00:29,185
So using these callbacks, it gives you,

11
00:00:29,185 --> 00:00:33,405
as a developer, an opportunity to
intervene and execute statements.

12
00:00:33,405 --> 00:00:37,600
So things like restoring, or saving any
data, or even cleaning up references

13
00:00:37,600 --> 00:00:40,660
that you no longer need at
the moments that you need them.

14
00:00:40,660 --> 00:00:44,360
So here I am in the numbers activity and
you may have noticed that we've been

15
00:00:44,360 --> 00:00:48,420
writing the majority of our code in
the activities on create method.

16
00:00:48,420 --> 00:00:51,790
So this is a callback that the system
executes once it has created your

17
00:00:51,790 --> 00:00:56,450
activity, and thus by overriding
the method in your class definition,

18
00:00:56,450 --> 00:01:00,360
you're able to specify what you
want to happen during that stage.

19
00:01:00,360 --> 00:01:04,110
Also this is where we inflate
our layout XML resources,

20
00:01:04,110 --> 00:01:07,390
obtain references to the view
that we want to manipulate and

21
00:01:07,390 --> 00:01:10,820
initialize any other crucial objects
that our app relies on to function.

22
00:01:12,210 --> 00:01:14,460
Now in the Android
developer documentation,

23
00:01:14,460 --> 00:01:18,080
if we look at the activity class,
it shows all the system callbacks for

24
00:01:18,080 --> 00:01:20,430
the various states of
activity lifecycle.

25
00:01:20,430 --> 00:01:24,040
So you can override any of these
methods within your actively class

26
00:01:24,040 --> 00:01:25,750
if you want to execute some code,

27
00:01:25,750 --> 00:01:28,020
when the activity transitions
into a particular state
