1
00:00:00,130 --> 00:00:03,577
Let's take a look at our previous code to load an image. Now remember, it was

2
00:00:03,577 --> 00:00:06,688
three lines of code to create an image, set a callback, and then define the

3
00:00:06,688 --> 00:00:10,774
source. The first steps in writing an asset manager would be to cache this

4
00:00:10,774 --> 00:00:14,140
image once it's loaded so that duplicate calls won't issue a reload, but rather

5
00:00:14,140 --> 00:00:19,520
would return the image we've already loaded in memory. To do this, you're going

6
00:00:19,520 --> 00:00:23,714
to implement the concept of a cache. What will happen is, the first request

7
00:00:23,714 --> 00:00:27,080
will go through, and the data will be loaded. When it's loaded, you add it to

8
00:00:27,080 --> 00:00:29,978
the cache using some key value, like its name, so that subsequent requests,

9
00:00:29,978 --> 00:00:32,830
rather than going out to disk, or to the web, will check the cache first, and

10
00:00:32,830 --> 00:00:38,043
return the already loaded asset. What I'd like you to do is to modify the

11
00:00:38,043 --> 00:00:41,488
following code so the asset loader checks the cache before attempting to load

12
00:00:41,488 --> 00:00:46,371
the image. Now there's a couple things to point out here, is that gCachedAssets

13
00:00:46,371 --> 00:00:49,816
is actually a dictionary object, which means that you need to specify a key and

14
00:00:49,816 --> 00:00:54,908
value when accessing and referencing to it. Also take note, that here in the

15
00:00:54,908 --> 00:00:57,884
img.onload callback is where you need to do your heavy lifting to push your

16
00:00:57,884 --> 00:01:00,730
data into this cache object. Good luck.
