1
00:00:00,350 --> 00:00:03,070
So now that we have seen what ILP is, and

2
00:00:03,070 --> 00:00:07,600
also how it relates to IPC, we can have a little discussion about the ILP and

3
00:00:07,600 --> 00:00:13,190
the IPC. We have defined our ILP as basically the IPC on an ideal [UNKNOWN] for

4
00:00:13,190 --> 00:00:16,239
the processor that has perfect branch branch fiction, enough resources for

5
00:00:16,239 --> 00:00:20,790
everything, et cetera. And we've saw that, ILP is larger than or

6
00:00:20,790 --> 00:00:24,430
equal to the IPC that can be achieved on any real processor. So

7
00:00:24,430 --> 00:00:28,280
if we consider a narrow issue in-order processor, narrow issue meaning that it

8
00:00:28,280 --> 00:00:33,020
can only issue about maybe one, two, maybe three instructions per cycle and

9
00:00:33,020 --> 00:00:38,200
it's in-order. Usually, the limitation for the IPC will be this.

10
00:00:38,200 --> 00:00:41,830
Basically the in-order property now is going to hurt us too much. So

11
00:00:41,830 --> 00:00:46,220
this processor is going to be limited mostly by the narrow issue. However,

12
00:00:46,220 --> 00:00:50,050
if we have a wide issue in-order processor, meaning it can do more instructions

13
00:00:50,050 --> 00:00:55,150
per cycle. It's going to be limited mostly by, the in-order property.

14
00:00:55,150 --> 00:00:59,200
Because this is going to allow you to do a lot of instructions per cycle, and

15
00:00:59,200 --> 00:01:03,760
if it can do closely to what the ILP already is for the application,

16
00:01:03,760 --> 00:01:08,600
then basically we're already kind of close to ideal as far as the IPC is

17
00:01:08,600 --> 00:01:13,370
concerned for, for the wide issue problem. But because of the in-order property,

18
00:01:13,370 --> 00:01:17,890
we just cannot find those instructions to keep our wide issue slots busy.

19
00:01:17,890 --> 00:01:22,750
So if we have a wide issue processor, we also need for it to be out of order, so

20
00:01:22,750 --> 00:01:26,990
that it can benefit from the wider issue by finding instructions anywhere where

21
00:01:26,990 --> 00:01:31,750
they are and not basically stopping on the first dependence. So such a processor

22
00:01:31,750 --> 00:01:36,620
will need to, fetch execute et cetera, more than one instruction per cycle,

23
00:01:36,620 --> 00:01:39,890
preferably a lot more than 1. So it cannot be just like 2,

24
00:01:39,890 --> 00:01:44,890
it should be 4 maybe or more, that's why we call it wide issue.

25
00:01:44,890 --> 00:01:48,000
It should be able to eliminate false dependencies betw, because if we

26
00:01:48,000 --> 00:01:53,490
have to obey all sorts of dependencies then that's going to limit our IPC too.

27
00:01:53,490 --> 00:01:58,520
And bring us far away from the ideal ILP. And finally, should be able to

28
00:01:58,520 --> 00:02:01,880
reorder instructions so that we can execute the instructions out of order.

29
00:02:01,880 --> 00:02:06,330
Meaning that, our execution order should be kind of similar to what we did for

30
00:02:06,330 --> 00:02:11,290
the ILP, and not for what we did for the in order processors.
