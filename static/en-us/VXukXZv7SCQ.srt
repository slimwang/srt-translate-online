1
00:00:00,000 --> 00:00:01,709
A lot of times you'll be working with

2
00:00:01,709 --> 00:00:03,810
projects that require different library

3
00:00:03,810 --> 00:00:06,690
versions or different versions of Python, even.

4
00:00:06,690 --> 00:00:09,450
In my experience, and many other

5
00:00:09,450 --> 00:00:11,519
people's, it's really difficult to get

6
00:00:11,519 --> 00:00:12,990
all these versions to play nicely

7
00:00:12,990 --> 00:00:15,809
together on one computer. To solve this

8
00:00:15,809 --> 00:00:17,670
problem we use virtual environments

9
00:00:17,670 --> 00:00:20,039
manage with libraries such as Virtualenv.

10
00:00:20,039 --> 00:00:22,769
Virtual environments let you separate

11
00:00:22,769 --> 00:00:24,869
libraries required by different projects

12
00:00:24,869 --> 00:00:28,199
so you can avoid conflicts. If you're

13
00:00:28,199 --> 00:00:30,359
working with data though, Anaconda is

14
00:00:30,359 --> 00:00:31,470
the way to go.

15
00:00:31,470 --> 00:00:33,899
Anaconda is a distribution of libraries

16
00:00:33,899 --> 00:00:36,180
and software specifically built for data

17
00:00:36,180 --> 00:00:40,140
science. It comes with Conda, a package

18
00:00:40,140 --> 00:00:41,820
and environment manager that will make

19
00:00:41,820 --> 00:00:44,430
your life a thousand times better. Now

20
00:00:44,430 --> 00:00:47,280
I'll show you a bit about using Conda. I

21
00:00:47,280 --> 00:00:49,140
didn't really create a new environment

22
00:00:49,140 --> 00:00:51,930
for each project I start. This way I can

23
00:00:51,930 --> 00:00:53,699
keep the necessary package versions

24
00:00:53,699 --> 00:00:56,190
separate. For example, I wanted to start a

25
00:00:56,190 --> 00:00:58,469
new project using Python 3, which you

26
00:00:58,469 --> 00:01:00,510
should be using for all new projects, I

27
00:01:00,510 --> 00:01:02,760
can create an environment for it.

28
00:01:02,760 --> 00:01:06,960
Type in "conda create" give it a name.

29
00:01:06,960 --> 00:01:13,860
"tea_facts" - it's a bot that tweets facts

30
00:01:13,860 --> 00:01:19,740
about tea - and the Python version 3. And

31
00:01:19,740 --> 00:01:23,520
enter.

32
00:01:23,520 --> 00:01:27,329
This will create the environment for me,

33
00:01:27,329 --> 00:01:29,880
now I can enter the environment like so

34
00:01:29,880 --> 00:01:34,860
"source activate tea_facts"

35
00:01:34,860 --> 00:01:39,689
This is the command on Mac and Linux. On

36
00:01:39,689 --> 00:01:42,929
Windows it's just "activate." Now i'm in the

37
00:01:42,929 --> 00:01:44,819
environment. You can see the name in the

38
00:01:44,819 --> 00:01:47,700
prompt and you can see here the packages

39
00:01:47,700 --> 00:01:49,860
that are installed. These are just the

40
00:01:49,860 --> 00:01:52,200
default packages. Now I can start

41
00:01:52,200 --> 00:01:54,420
installing what I want for this project.

42
00:01:54,420 --> 00:01:57,329
Let's install Numpy and Pandas for

43
00:01:57,329 --> 00:01:59,310
working with the tea data and matplotlib

44
00:01:59,310 --> 00:02:15,740
for making visualizations.

45
00:02:15,740 --> 00:02:18,290
Then install your notebooks, which I

46
00:02:18,290 --> 00:02:39,360
like to use to develop code.

47
00:02:39,360 --> 00:02:41,520
And again, looking at the installed

48
00:02:41,520 --> 00:02:44,310
packages, I have all these ready to use

49
00:02:44,310 --> 00:02:47,220
for my project. And, these are separated

50
00:02:47,220 --> 00:02:49,170
from other environments so I won't run

51
00:02:49,170 --> 00:02:51,870
into any conflicting version issues.

52
00:02:51,870 --> 00:02:53,880
Okay, now it's your turn to learn how to

53
00:02:53,880 --> 00:02:55,830
use Conda for your own projects.

54
00:02:55,830 --> 00:02:57,900
This lesson will take around 30 minutes,

55
00:02:57,900 --> 00:03:04,850
up to an hour. Have fun!

