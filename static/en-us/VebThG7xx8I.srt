1
00:00:00,330 --> 00:00:02,070
So now that we know a little bit about class

2
00:00:02,070 --> 00:00:05,050
variables, let's move on to another idea in object oriented

3
00:00:05,050 --> 00:00:08,870
programming, which is that in Python, all classes come with

4
00:00:08,870 --> 00:00:13,920
some pre-existing class variables. One of them is called doc. Now

5
00:00:13,920 --> 00:00:16,880
this variable has got underscores on both sides of its

6
00:00:16,880 --> 00:00:20,130
name. Let's see this variable in action. So here I

7
00:00:20,130 --> 00:00:23,450
am at the Python Shell window, with the Python prompt.

8
00:00:23,450 --> 00:00:26,250
And I can type a program in here like 2+2 and

9
00:00:26,250 --> 00:00:28,940
it gives me the correct answer. Now I want

10
00:00:28,940 --> 00:00:31,780
us to recall this class called turtle that we had

11
00:00:31,780 --> 00:00:34,480
used some time back while drawing shapes. So I

12
00:00:34,480 --> 00:00:38,740
can just import that class turtle here. There, then let

13
00:00:38,740 --> 00:00:40,500
me see what happens when I use the class

14
00:00:40,500 --> 00:00:46,130
name. turtle.Turtle. Remember this was the name of the module

15
00:00:46,130 --> 00:00:48,650
or the file and this was the class name.

16
00:00:48,650 --> 00:00:51,960
So if I use the class name with the prepackaged

17
00:00:51,960 --> 00:00:55,430
variable called doc. Let me see what it prints out.

18
00:00:56,680 --> 00:01:00,330
I get some kind of documentation on the class turtle.

19
00:01:00,330 --> 00:01:03,140
Now I wonder if I can use this variable doc

20
00:01:03,140 --> 00:01:06,010
with my class movie. So, I'm back to the code

21
00:01:06,010 --> 00:01:08,760
for the class movie and behind this file is my

22
00:01:08,760 --> 00:01:11,320
other Python file where, I'm defining a whole bunch of

23
00:01:11,320 --> 00:01:13,750
instances of class Movie. Let me go back to the

24
00:01:13,750 --> 00:01:17,150
code for class Movie here for a second. Now, here,

25
00:01:17,150 --> 00:01:20,090
I'm going to add some documentation. At the beginning of

26
00:01:20,090 --> 00:01:22,720
the class Movie. You may have noticed that I use

27
00:01:22,720 --> 00:01:26,290
triple codes, to define my documentation. Now what I can

28
00:01:26,290 --> 00:01:29,030
do with triple codes, is I can create documentation in

29
00:01:29,030 --> 00:01:31,940
multiple lines. For now I just have the one line.

30
00:01:31,940 --> 00:01:35,100
So I'm going to save this file, and then go

31
00:01:35,100 --> 00:01:38,410
to my other Python file. And here, I'm going to

32
00:01:38,410 --> 00:01:42,510
scroll all the way to the bottom, and comment out any

33
00:01:42,510 --> 00:01:48,880
sort of print statements. There. Now, I will try to print out my class Movie,

34
00:01:48,880 --> 00:01:52,080
which is accessed by saying, media.Movie. I

35
00:01:52,080 --> 00:01:55,112
will try to print out its documentation [SOUND].

36
00:01:57,410 --> 00:02:00,900
There. Let me save and run this file.

37
00:02:03,130 --> 00:02:05,240
And there it is. The documentation for my

38
00:02:05,240 --> 00:02:08,030
class Movie. Notice how I accessed it though. I

39
00:02:08,030 --> 00:02:10,949
accessed it using my class name, which is movie

40
00:02:10,949 --> 00:02:14,860
and a predefined class variable, called doc. So, now

41
00:02:14,860 --> 00:02:17,860
that we have successfully used this variable called doc.

42
00:02:17,860 --> 00:02:20,140
I have a question for you. You know much

43
00:02:20,140 --> 00:02:23,220
like the variable doc, Python has a few more

44
00:02:23,220 --> 00:02:28,280
predefined variables these include the variable name and module.

45
00:02:28,280 --> 00:02:30,470
By the way more information about these

46
00:02:30,470 --> 00:02:32,470
is also available through links in the instructor

47
00:02:32,470 --> 00:02:34,320
notes. What I want you to do is

48
00:02:34,320 --> 00:02:37,050
read through the documentation in the instructor notes

49
00:02:37,050 --> 00:02:40,840
and then I want you to use these variables name. And module, in a new

50
00:02:40,840 --> 00:02:43,170
program. Once you have done that, please come

51
00:02:43,170 --> 00:02:45,160
back to the screen and check this box.
