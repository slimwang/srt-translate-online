1
00:00:00,100 --> 00:00:04,310
We need to consider a few issues
when we use RSA in practice.

2
00:00:04,310 --> 00:00:07,755
First, for
given key the same plain text message

3
00:00:07,755 --> 00:00:11,580
will always be encrypted
into same ciphertext.

4
00:00:11,580 --> 00:00:15,764
A related issue is that for
some special-case plaintexts,

5
00:00:15,764 --> 00:00:20,357
such as zero, one or minus one,
the ciphertexts are always zero,

6
00:00:20,357 --> 00:00:24,050
one or minus one regardless of the keys.

7
00:00:24,050 --> 00:00:26,930
These shortcomings allow
the attacker to know

8
00:00:26,930 --> 00:00:29,760
the plaintext even though
he doesn't know the key.

9
00:00:29,760 --> 00:00:32,710
Another issue is that RSA is manageable.

10
00:00:32,710 --> 00:00:38,100
That is if the attacker transforms
a ciphertext into another, it would

11
00:00:38,100 --> 00:00:42,810
produce a predictable transformation
of the decrypted plaintext.

12
00:00:42,810 --> 00:00:47,620
Suppose Bob sends Alice a encrypted
message using Alice's public key.

13
00:00:47,620 --> 00:00:50,260
The attacker intercepts the ciphertext.

14
00:00:50,260 --> 00:00:52,740
Then the attacker
changes the ciphertext.

15
00:00:52,740 --> 00:00:56,150
Then when Bob receives
this modified ciphertext,

16
00:00:56,150 --> 00:01:00,790
he's going to decrypt it
as s times m instead of m.

17
00:01:00,790 --> 00:01:06,130
That is, the attacker has the ability to
change the ciphertext in such a way that

18
00:01:06,130 --> 00:01:10,710
it would produce predictable
effect on the decrypted plaintext.

19
00:01:10,710 --> 00:01:15,050
In this case, the plain text
is increased by a factor of S.

20
00:01:15,050 --> 00:01:18,510
In practice,
the standard uses some sort of padding.

21
00:01:18,510 --> 00:01:22,360
That is, add some random
bytes as prefix to m, and

22
00:01:22,360 --> 00:01:24,970
this addresses the issues
that we just discussed.
