1
00:00:00,250 --> 00:00:03,740
Next, let's go one step further and
slightly change the style for

2
00:00:03,740 --> 00:00:05,230
our inbox text.

3
00:00:05,230 --> 00:00:09,019
The inbox is the most important and
frequently used mail folder.

4
00:00:09,019 --> 00:00:12,830
And so I'm going to create a style for
the inbox text named inboxStyle,

5
00:00:12,830 --> 00:00:17,440
that will be similar to the folderStyle,
but bold so that it stands out.

6
00:00:17,440 --> 00:00:22,070
To create this new style, I could copy
and paste this folder textStyle and

7
00:00:22,070 --> 00:00:27,510
add another item to bold the text, or
I could utilize style inheritance.

8
00:00:27,510 --> 00:00:32,070
At the top of our styles.xml, you may
have noticed this parent attribute in

9
00:00:32,070 --> 00:00:37,619
our AppTheme called
Theme.AppCompat.Light.DarkActionBar,

10
00:00:37,619 --> 00:00:42,359
and this is a pre-defined theme
that our AppTheme inherits from.

11
00:00:42,359 --> 00:00:47,060
Styles and themes use inheritance
similar how classes use inheritance.

12
00:00:47,060 --> 00:00:51,210
If a style has a parent, it will inherit
all the parents that the parent style

13
00:00:51,210 --> 00:00:55,299
includes, whether that's color or
padding or more.

14
00:00:55,299 --> 00:00:58,129
And then it can define only
the properties that you want to

15
00:00:58,130 --> 00:01:01,700
add to that style or
override in the parent class.

16
00:01:01,700 --> 00:01:06,140
And Android comes with a couple of main
themes already, referred to as light and

17
00:01:06,140 --> 00:01:07,709
dark themes.

18
00:01:07,709 --> 00:01:11,137
Our AppTheme inherits
from the light theme,

19
00:01:11,137 --> 00:01:15,299
named
Theme.AppCompact.Light.DarkActionBar.

20
00:01:15,299 --> 00:01:19,379
This light theme basically means our
app has a default light background.

21
00:01:19,379 --> 00:01:23,890
But if we get rid of this light,
and leave this as Theme.AppCompact,

22
00:01:23,890 --> 00:01:26,500
this will default to
Android's dark theme, and

23
00:01:26,500 --> 00:01:29,780
that gives a very dark
background to an app.

24
00:01:29,780 --> 00:01:33,840
This theme is often used for settings
activities or media players, and

25
00:01:33,840 --> 00:01:36,969
could also be good if you just want
a different look for your app.

26
00:01:36,969 --> 00:01:40,670
To change the theme of your app or
even an individual activity,

27
00:01:40,670 --> 00:01:44,769
you just need to set its theme attribute
in your Android manifest file.

28
00:01:44,769 --> 00:01:49,140
Like here, where our main app
theme equals style/AppTheme.

29
00:01:49,140 --> 00:01:51,320
But back to our styles code and
inheritance.

30
00:01:51,319 --> 00:01:55,539
If you're defining completely
new styles like folderStyle,

31
00:01:55,540 --> 00:01:58,450
then you don't need
a parent attribute at all.

32
00:01:58,450 --> 00:02:01,150
But for our inbox style,
we'll just want to add

33
00:02:01,150 --> 00:02:04,900
one more bold style property
to this folder text style.

34
00:02:04,900 --> 00:02:08,379
So we can set the folderStyle
as a parent to this one.

35
00:02:08,379 --> 00:02:12,590
We'll just add the one additional bold
text style property that we want.

36
00:02:12,590 --> 00:02:15,439
Now let's go back to our
style activity layout and

37
00:02:15,439 --> 00:02:18,319
apply this style to our inbox TextView.

38
00:02:18,319 --> 00:02:21,449
Instead of folderStyle,
we'll say inboxStyle.

39
00:02:21,449 --> 00:02:23,989
And let's save this and
run our app again.

40
00:02:23,990 --> 00:02:26,740
Now, when we look at our styles and
themes activity,

41
00:02:26,740 --> 00:02:31,420
we can see that the text looks the same,
but with this additional bold property.

42
00:02:31,419 --> 00:02:34,179
And now we have styles
that add consistency, and

43
00:02:34,180 --> 00:02:36,730
help to highlight important
components in our app.

