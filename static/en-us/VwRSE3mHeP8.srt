1
00:00:00,180 --> 00:00:04,400
The next category of patterns, in the Gang of Four book, are the structural

2
00:00:04,400 --> 00:00:09,020
patterns of which the composite pattern is example we've already seen.

3
00:00:09,020 --> 00:00:12,422
Some other ones that are provided include the adapter pattern which you

4
00:00:12,422 --> 00:00:16,490
would use to convert an existing interface to look like another interface.

5
00:00:16,490 --> 00:00:21,500
The bridge pattern, in which you decouple an abstraction and implementation.

6
00:00:21,500 --> 00:00:26,230
The decorator pattern, in which you would add a single feature to an existing

7
00:00:26,230 --> 00:00:30,921
class. The facade pattern, which provides a higher-level interface for

8
00:00:30,921 --> 00:00:34,500
a subsystem. This might typically be used in a situation where you

9
00:00:34,500 --> 00:00:39,530
have some non-object oriented legacy code, which you'd want to access from

10
00:00:39,530 --> 00:00:43,480
within an object oriented application. And you need to make it look like

11
00:00:43,480 --> 00:00:48,510
an object oriented interface. The flyweight pattern allows you to use sharing to

12
00:00:48,510 --> 00:00:52,270
support large number of fine-grained objects. So imagine a situation, for

13
00:00:52,270 --> 00:00:56,580
example, when you're doing text processing, and each of the characters you'd

14
00:00:56,580 --> 00:00:59,869
like to treat as an object. Well, this can be quite expensive, because, because,

15
00:00:59,869 --> 00:01:03,770
there, because be tens of thousands of such objects. Instead flyweight,

16
00:01:03,770 --> 00:01:08,040
allows provides you a way of doing this without creating all those objects.

17
00:01:08,040 --> 00:01:11,320
Finally the proxy pattern allows you to control access to an object.
