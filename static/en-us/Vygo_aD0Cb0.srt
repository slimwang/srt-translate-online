1
00:00:00,071 --> 00:00:05,409
We would expect the assignment of local variables to be the very fastest.

2
00:00:05,409 --> 00:00:07,309
Shared memory is also very fast.

3
00:00:07,309 --> 00:00:11,515
A and b are both shared memory variables, so you would expect that to be fast.

4
00:00:11,515 --> 00:00:15,784
Global variables are all the way out in global memory, so they're going to be the slowest.

5
00:00:15,784 --> 00:00:20,992
We would expect that this assignment of the contents of y to the contents of z

6
00:00:20,992 --> 00:00:22,960
is probably the slowest operation.

7
00:00:22,960 --> 00:00:26,535
And this one, which is moving a piece of data from global memory into shared memory,

8
00:00:26,535 --> 00:00:29,999
is probably the second slowest.

9
00:00:29,999 --> 00:00:33,421
By the way, if you know anything about compilers, you realize that this is an oversimplification.

10
00:00:33,421 --> 00:00:37,222
Right? It's quite possible that many of these values will be promoted into registers.

11
00:00:37,222 --> 00:00:41,124
An optimizing compiler might rearrange accesses and so forth.

12
00:00:41,124 --> 00:00:44,929
But the point is simply to get across the relative speeds of memories.
