1
00:00:00,330 --> 00:00:05,130
The subset sum problem emits a fully
polynomial time approximation scheme, or

2
00:00:05,130 --> 00:00:06,070
FPTAS for short.

3
00:00:07,260 --> 00:00:10,530
Recall that the decision version for
subset sum was whether,

4
00:00:10,530 --> 00:00:14,640
given a set of numbers, there was any
subset summed up to a particular value.

5
00:00:15,860 --> 00:00:19,650
The optimization version
of this is to maximize

6
00:00:19,650 --> 00:00:24,240
the sum of sub subsetted numbers
without exceeding some threshold t.

7
00:00:24,240 --> 00:00:27,620
This problem emits a very
important class of approximations.

8
00:00:27,620 --> 00:00:32,110
For any epsilon greater than 0 there
is an order n squared log t by

9
00:00:32,110 --> 00:00:34,040
epsilon time.

10
00:00:34,040 --> 00:00:39,880
Factor 1 over epsilon approximation
algorithm for the subset sum problem.

11
00:00:39,880 --> 00:00:43,910
The smaller the epsilon,
the better the approximation, but

12
00:00:43,910 --> 00:00:45,640
the slower their running time.

13
00:00:45,640 --> 00:00:48,830
It may be intuitive, that one should be
able to trade-off spending more time for

14
00:00:48,830 --> 00:00:51,160
a better approximation guarantee, but

15
00:00:51,160 --> 00:00:55,430
it isn't always the case that we get to
do so arbitrarily as in this theorem.

16
00:00:55,430 --> 00:00:57,400
Because this isn't
a particular algorithm, but

17
00:00:57,400 --> 00:01:01,190
rather a kind of recipe for producing
an algorithm with the right properties,

18
00:01:01,190 --> 00:01:04,660
we call this
a Polynomial Time Approximation Scheme.

19
00:01:04,660 --> 00:01:05,860
Or PTAS, for short.

20
00:01:07,110 --> 00:01:08,780
For every epsilon you choose,

21
00:01:08,780 --> 00:01:12,010
there's an algorithm that
can approximate that well.

22
00:01:12,010 --> 00:01:16,220
This approximation scheme is extra
special, because the running time

23
00:01:16,220 --> 00:01:22,110
is polynomial n 1 over epsilon, as well
as polynomial in a size of the input.

24
00:01:22,110 --> 00:01:27,170
Therefore we say that this is a fully
polynomial time approximation scheme.

25
00:01:27,170 --> 00:01:30,610
The alternative would be for the epsilon
to appear in one of the exponents

26
00:01:30,610 --> 00:01:35,050
perhaps and then it would just be
a polynomial time approximation scheme.

27
00:01:35,050 --> 00:01:37,895
The scheme itself and it's analysis
are a little bit messy, but

28
00:01:37,895 --> 00:01:40,120
they're still well worth
looking up on your own.
