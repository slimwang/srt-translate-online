1
00:00:00,000 --> 00:00:03,420
A third model to device
virtualization is the so-called

2
00:00:03,420 --> 00:00:05,430
S0plit-Device Driver Model.

3
00:00:05,430 --> 00:00:07,494
This model is called split,

4
00:00:07,494 --> 00:00:12,655
because all of the device accesses
are controlled in a way that involves

5
00:00:12,655 --> 00:00:17,128
both a component that resides
in the Guest Virtual Machine and

6
00:00:17,128 --> 00:00:21,189
also a component that resides
in the hypervisor layer.

7
00:00:21,189 --> 00:00:25,917
Specifically, devices accesses
are controlled using a device

8
00:00:25,917 --> 00:00:30,431
driver that sits in the Guest VM
called the front-end device driver.

9
00:00:30,431 --> 00:00:35,906
And then the actual driver for
the physical device that is the regular

10
00:00:35,906 --> 00:00:41,408
device driver that's used by operating
systems when they run natively.

11
00:00:41,408 --> 00:00:47,570
In this back-end driver, referred to as
back-end resides in the service VM in

12
00:00:47,570 --> 00:00:52,995
the case where we have a virtualization
model that involves a service VM or

13
00:00:52,995 --> 00:00:57,625
the host operating system in
the case of type two virtualization.

14
00:00:57,625 --> 00:01:00,424
The point is that this
back-end should really be

15
00:01:00,424 --> 00:01:04,450
just the regular device driver
that the service, the Linux OS for

16
00:01:04,450 --> 00:01:08,476
instance and the Service VM would
just be able to install and use,

17
00:01:08,476 --> 00:01:12,610
even if it's not running in
a virtualized environment.

18
00:01:12,610 --> 00:01:17,543
Now although this back-end driver does
not necessarily have to be modified,

19
00:01:17,543 --> 00:01:22,476
the front-end driver has to be modified,
because it explicitly needs to take

20
00:01:22,476 --> 00:01:26,961
the device operations that are made
by the applications in the guest and

21
00:01:26,961 --> 00:01:31,819
then put them together in something that
looks like a, a special message that

22
00:01:31,819 --> 00:01:36,864
will directly be passed to this back-end
component that's in the service VM.

23
00:01:36,864 --> 00:01:41,826
So this approach, essentially applies
only to paravirtualized guests that

24
00:01:41,826 --> 00:01:46,900
will be able to explicitly install
these special front-end device drivers.

25
00:01:46,900 --> 00:01:51,745
What these really are, they look like
wrappers for the actual device API.

26
00:01:51,745 --> 00:01:55,449
So the applications potentially,
they don't have to be modified.

27
00:01:55,449 --> 00:02:00,690
They will continue making the same kinds
of requests for device operations.

28
00:02:00,690 --> 00:02:04,755
But this front-end device driver
will treat these operations,

29
00:02:04,755 --> 00:02:09,508
especially will not attempt to actually
shoot off access to the physical device,

30
00:02:09,508 --> 00:02:13,120
instead will create messages that
will get passed to the service VM.

31
00:02:13,120 --> 00:02:17,609
One benefit of the approach is that
it can eliminate the overheads that

32
00:02:17,609 --> 00:02:22,109
are associated with device simulation
that the previous model required.

33
00:02:22,109 --> 00:02:26,156
Now, we don't have to reverse
engineer exactly what the Guest OS is

34
00:02:26,156 --> 00:02:27,070
trying to do.

35
00:02:27,070 --> 00:02:30,658
The Guest OS via its front
end device driver explicitly

36
00:02:30,658 --> 00:02:35,189
tells the virtualization layer,
so overall these two components.

37
00:02:35,189 --> 00:02:38,870
What exactly is it that
the guest VM requires.

38
00:02:38,870 --> 00:02:44,215
Another more subtle benefit of the
approach is that now that we have this

39
00:02:44,215 --> 00:02:48,894
back-end component that's
centralized in that it will re,

40
00:02:48,894 --> 00:02:53,653
accept requests from all the Guest VM's
in the system and then try to

41
00:02:53,653 --> 00:02:58,940
decide which one of those gets to
execute the physical device access.

42
00:02:58,940 --> 00:03:01,240
There's some opportunities for

43
00:03:01,240 --> 00:03:05,520
some better management of
the shared devices accesses.

44
00:03:05,520 --> 00:03:09,650
So to enforce some finer grained
policies regarding fairness,

45
00:03:09,650 --> 00:03:12,650
regarding priorities and
those sorts of things.
