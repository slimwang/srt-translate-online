1
00:00:00,840 --> 00:00:02,050
And, that's it.

2
00:00:02,050 --> 00:00:04,640
We finished creating
our ContentProvider.

3
00:00:04,640 --> 00:00:09,140
Since this has been an involved section,
let's talk about what we created.

4
00:00:09,140 --> 00:00:13,550
We started off by defining the URI's
that our ContentProvider will support.

5
00:00:13,550 --> 00:00:16,930
We then updated our contract
to reflect these URIs.

6
00:00:19,150 --> 00:00:23,800
From there, we built a URIMatcher that
matches these URIs to constants we use

7
00:00:23,800 --> 00:00:28,620
in switch statements in all of the other
required content provider functions.

8
00:00:28,620 --> 00:00:31,580
Then we implemented the getType
function to return the type of

9
00:00:31,580 --> 00:00:34,060
cursor returned for each URI.

10
00:00:34,060 --> 00:00:37,030
We then implemented
the ContentProvider query functions,

11
00:00:37,030 --> 00:00:41,330
followed by the write operations insert,
update, and delete.

12
00:00:41,330 --> 00:00:44,260
Finally, we talked about
the optional BulkInsert

13
00:00:44,260 --> 00:00:48,220
function to make updates to our
database in a single transaction.

14
00:00:48,220 --> 00:00:52,760
This performs much faster, and causes
less wear and tear on the flash chip,

15
00:00:52,760 --> 00:00:56,310
compared to updating the database
in multiple transaction.

16
00:00:56,310 --> 00:00:59,210
There are lots of libraries out
there in the Android open source

17
00:00:59,210 --> 00:01:01,980
world to help you built
ContentProviders.

18
00:01:01,980 --> 00:01:04,935
If you want to use them,
you'll be able to use them now

19
00:01:04,935 --> 00:01:07,925
with the confidence that you know how
they work, and what they are doing.

20
00:01:09,005 --> 00:01:11,215
So all queries and

21
00:01:11,215 --> 00:01:15,265
updates to the database can now be done
through the ContentProvider interface.

22
00:01:15,265 --> 00:01:17,145
But, we're still not
using it in our code.

23
00:01:18,455 --> 00:01:19,075
Let's fix that.
