1
00:00:00,100 --> 00:00:02,410
In distance vector routing, each node sends

2
00:00:02,410 --> 00:00:05,730
multiple distance vectors to each of its neighbors,

3
00:00:05,730 --> 00:00:08,400
essentially amounting to copies of its own routing

4
00:00:08,400 --> 00:00:12,490
table. Routers then compute costs to each destination

5
00:00:12,490 --> 00:00:15,950
in the topology, based on shortest available path.

6
00:00:15,950 --> 00:00:18,704
Distance vector routing protocols are based on the

7
00:00:18,704 --> 00:00:22,060
Bellman-Ford algorithm. A node x's forwarding table is

8
00:00:22,060 --> 00:00:25,120
based on the solution to the following equation.

9
00:00:25,120 --> 00:00:30,440
Suppose that node x is trying to find a shortest cost route

10
00:00:30,440 --> 00:00:35,820
to node y. In this case note X is trying to find a path through

11
00:00:35,820 --> 00:00:40,550
some intermediate node, V, that minimizes the cost between X and

12
00:00:40,550 --> 00:00:45,430
V, and the already known shortest cost path

13
00:00:45,430 --> 00:00:50,440
between V and Y. Again the solution to this equation for all

14
00:00:50,440 --> 00:00:55,950
destinations, Y, in the topology is X's forwarding table. Let's now

15
00:00:55,950 --> 00:00:58,800
take a look at distance vector routing by way of example.
