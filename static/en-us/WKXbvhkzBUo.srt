1
00:00:00,640 --> 00:00:06,280
So there is a taxonomy called
Flynn's Taxonomy of Parallel Machines.

2
00:00:06,280 --> 00:00:09,790
It distinguishes parallel machines
according to how many instruction

3
00:00:09,790 --> 00:00:14,390
streams they have and how many data
streams these instructions operate on.

4
00:00:14,390 --> 00:00:19,970
The first type of machine is single
instruction, single data, or SISD,

5
00:00:19,970 --> 00:00:25,870
and logically this type of machine
executes one instruction stream,

6
00:00:25,870 --> 00:00:30,180
and each instruction
operates on one data stream.

7
00:00:30,180 --> 00:00:32,890
This is really your normal uniprocessor.

8
00:00:32,890 --> 00:00:37,655
So if we have for example, a single
core machine, that's what it is.

9
00:00:37,655 --> 00:00:41,445
The next type of machine is single
instruction, multiple data.

10
00:00:41,445 --> 00:00:43,845
So it executes one instruction stream,

11
00:00:43,845 --> 00:00:48,110
meaning there is one program with
a single program counter we go through,

12
00:00:48,110 --> 00:00:51,570
but there is more than one
data stream they operate on.

13
00:00:51,570 --> 00:00:57,050
The most common example of this used
to be so-called vector processors,

14
00:00:57,050 --> 00:00:59,450
which execute a program.

15
00:00:59,450 --> 00:01:03,510
But each instruction, instead of
operating on normal scalar values,

16
00:01:03,510 --> 00:01:04,720
operates on vectors.

17
00:01:04,720 --> 00:01:08,290
So, for example,
you can execute an ad instruction, but

18
00:01:08,290 --> 00:01:12,980
it operates on two source and
one destination vector of things.

19
00:01:12,980 --> 00:01:16,100
So it operates on many many
data items at the time.

20
00:01:16,100 --> 00:01:20,770
Modern processors also have this
multimedia extension instruction,

21
00:01:20,770 --> 00:01:27,570
such as MMX or SSE 1, 2, 3, and
they're also an example of limited SIMD.

22
00:01:27,570 --> 00:01:31,580
Where a single multimedia instruction
will operate on maybe four or

23
00:01:31,580 --> 00:01:33,110
eight data items.

24
00:01:33,110 --> 00:01:37,850
Then you can have a multiple
instruction single data stream.

25
00:01:37,850 --> 00:01:41,800
This is weird, because we have
multiple instruction streams.

26
00:01:41,800 --> 00:01:45,910
So there are several different
programs executing at the same time,

27
00:01:45,910 --> 00:01:48,240
all operating on
the same stream of data.

28
00:01:48,240 --> 00:01:50,040
So it's not used much and

29
00:01:50,040 --> 00:01:54,720
the closest we get to this is
something like a stream processor.

30
00:01:54,720 --> 00:01:58,350
Where you have the first processor
operating on, for example,

31
00:01:58,350 --> 00:02:02,880
the raw data from the camera,
and then that data moves on to

32
00:02:02,880 --> 00:02:06,360
the next processor which is
going to process it some further.

33
00:02:06,360 --> 00:02:10,419
Like find the edges, or sharpen it,
or something and so on.

34
00:02:10,419 --> 00:02:14,710
But even there, it's not truly that
we have a single data stream, because

35
00:02:14,710 --> 00:02:19,790
the output of the first processor is
not the same as the raw camera feed.

36
00:02:19,790 --> 00:02:22,590
So this is just kind of
the closest we get to it, but

37
00:02:22,590 --> 00:02:25,550
really, MISD is not really used much.

38
00:02:25,550 --> 00:02:30,000
And then we have MIMD, where there is
more than one instruction stream and

39
00:02:30,000 --> 00:02:31,940
more than one data stream.

40
00:02:31,940 --> 00:02:35,960
And this would be your normal
multiprocessor where each processor has

41
00:02:35,960 --> 00:02:40,060
its own program that it's running with
its own program counter and zone, and

42
00:02:40,060 --> 00:02:42,480
each of them operates on its own data.

43
00:02:42,480 --> 00:02:46,310
So they don't have to do things in
lock step to operate on the data, and

44
00:02:46,310 --> 00:02:48,710
they don't do something
like a stream processing.

45
00:02:48,710 --> 00:02:53,330
So this type of processor really
includes most of the processors you can

46
00:02:53,330 --> 00:02:56,640
buy today because most
processors today are multi-core,

47
00:02:56,640 --> 00:02:59,480
which means really they have
several processor cores.

48
00:02:59,480 --> 00:03:02,890
Each of which executes it's
own instruction stream and

49
00:03:02,890 --> 00:03:06,770
can access data independently,
so it has multiple data streams.

50
00:03:06,770 --> 00:03:11,430
And this lesson is mostly
about this type of machines.
