1
00:00:00,280 --> 00:00:02,450
If you've got an app that
controls your whole screen,

2
00:00:02,450 --> 00:00:05,040
typically we let the user
swipe the screen away.

3
00:00:05,040 --> 00:00:07,250
But some apps like
the emoji drawing tool,

4
00:00:07,250 --> 00:00:09,540
require the app to draw
all over the screen.

5
00:00:09,540 --> 00:00:12,640
And you don't want the app disappearing
when you're interacting with it.

6
00:00:12,640 --> 00:00:14,730
So you can disable the swiping action.

7
00:00:14,730 --> 00:00:17,440
But then the problem is,
if the app has got the screen locked and

8
00:00:17,440 --> 00:00:20,030
the swipe is disabled,
then how do you get rid of it?

9
00:00:20,030 --> 00:00:22,110
So for that,
we have a press to dismiss action.

10
00:00:23,270 --> 00:00:26,210
Let's start up a sample to
see how all of this works.

11
00:00:26,210 --> 00:00:30,320
Let's go to file, import sample, and
we're looking for watch view stub.

12
00:00:31,360 --> 00:00:33,570
So create that with the defaults.

13
00:00:33,570 --> 00:00:36,050
Now that it's ready,
let's run it on the wearable.

14
00:00:36,050 --> 00:00:38,490
You can press and
hold your finger on the screen.

15
00:00:38,490 --> 00:00:40,030
And this X pops up.

16
00:00:40,030 --> 00:00:42,080
And when you tap the X,
the app goes away.

17
00:00:42,080 --> 00:00:46,640
So that's a dismiss overlay view, and
it was included in the sample already.

18
00:00:46,640 --> 00:00:47,830
It's very easy to use.

19
00:00:47,830 --> 00:00:49,880
Let's look at the code for
it in the sample.

20
00:00:49,880 --> 00:00:54,320
If we go to the wearable,
res, layout, main activity.

21
00:00:54,320 --> 00:00:57,390
You'll see we have the dismiss
overlay view defined here.

22
00:00:57,390 --> 00:00:59,500
It's also invisible by default.

23
00:00:59,500 --> 00:01:02,570
You can see here, we grab a reference
to the dismiss overlay view.

24
00:01:02,570 --> 00:01:04,730
Here is where we create
a gesture detector.

25
00:01:04,730 --> 00:01:08,170
And here is where we dispatch that such
events to the gesture detector, so

26
00:01:08,170 --> 00:01:10,830
that the dismiss overlay
view can receive them.

27
00:01:10,830 --> 00:01:14,840
One limitation of this sample is that,
it does not prevent swipe actions.

28
00:01:14,840 --> 00:01:17,060
If you try it out,
the app will disappear.

29
00:01:17,060 --> 00:01:18,680
So how do we go about preventing that?

30
00:01:18,680 --> 00:01:21,400
The solution is to override
the default theme to do this.

31
00:01:21,400 --> 00:01:25,575
Just go back to the project view,
and go to source, res, values, and

32
00:01:25,575 --> 00:01:28,890
then right-click and
create a new themes.xml file.

33
00:01:28,890 --> 00:01:31,240
We creat our own custom theme like this.

34
00:01:31,240 --> 00:01:34,110
This says to inherit from
the device default theme, and

35
00:01:34,110 --> 00:01:38,220
to implement an attribute windows
swipe to dismiss, and set it to false.

36
00:01:38,220 --> 00:01:42,020
Now we need to activate the theme
in the AndroidManifest.xml.

37
00:01:42,020 --> 00:01:44,600
With the theme activated,
now we can run the sample again.

38
00:01:44,600 --> 00:01:48,760
You'll see that now,
you can not swipe the app away.

39
00:01:48,760 --> 00:01:51,510
But you can exit it using
a dismiss overlay view.
