1
00:00:00,110 --> 00:00:04,800
In a streaming video system, where the server

2
00:00:04,800 --> 00:00:08,210
streams stored audio and video, the server stores

3
00:00:08,210 --> 00:00:11,010
the audio or video files, the client requests

4
00:00:11,010 --> 00:00:14,170
the files and plays them as they download.

5
00:00:14,170 --> 00:00:16,329
It's important to play the data at the

6
00:00:16,329 --> 00:00:19,520
right time. The server can divide the data

7
00:00:19,520 --> 00:00:22,880
into segments and then label each segment with

8
00:00:22,880 --> 00:00:25,230
a time stamp. Indicating the time at which

9
00:00:25,230 --> 00:00:28,020
that particular segment should be played so the

10
00:00:28,020 --> 00:00:31,550
client knows when to play that data. The data

11
00:00:31,550 --> 00:00:34,390
must arrive at the client quickly enough, otherwise the

12
00:00:34,390 --> 00:00:37,630
client can't keep playing. The solution is to have

13
00:00:37,630 --> 00:00:40,250
a client use what's called a playout buffer,

14
00:00:40,250 --> 00:00:43,430
where the client stores data as it arrives from

15
00:00:43,430 --> 00:00:46,650
the server, and plays the data for the user

16
00:00:46,650 --> 00:00:50,420
in a continuous fashion. Thus, data might arrive more

17
00:00:50,420 --> 00:00:54,050
slowly or more quickly from the server, but

18
00:00:54,050 --> 00:00:56,870
as long as the client is playing data out

19
00:00:56,870 --> 00:00:59,580
of the buffer at a continuous rate, the

20
00:00:59,580 --> 00:01:04,160
user sees a smooth playout. A client may typically

21
00:01:04,160 --> 00:01:07,130
wait a few seconds before it starts playing

22
00:01:07,130 --> 00:01:09,790
the stream to allow data to be built up

23
00:01:09,790 --> 00:01:12,450
in this buffer. To account for cases when the

24
00:01:12,450 --> 00:01:15,610
server might have times where it is not sending

25
00:01:15,610 --> 00:01:19,760
at a rate that's sufficient to satisfy the client's playout rate.
