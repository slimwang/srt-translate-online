1
00:00:00,195 --> 00:00:03,800
Inter-process communication refers
to a set of mechanisms that

2
00:00:03,800 --> 00:00:06,290
the operating system must support

3
00:00:06,290 --> 00:00:10,930
in order to permit multiple processes
to interact amongst each other.

4
00:00:10,930 --> 00:00:12,800
That means to synchronize,
to coordinate,

5
00:00:12,800 --> 00:00:16,120
to communicate all of those
aspects of interaction.

6
00:00:16,120 --> 00:00:21,140
IPC mechanisms are broadly categorized
as message-based or memory-based.

7
00:00:21,140 --> 00:00:24,840
Examples of message passing based
IPC mechanisms include sockets,

8
00:00:24,840 --> 00:00:27,130
that most of you
are familiar with already,

9
00:00:27,130 --> 00:00:31,290
as well as other OS supported constructs
like pipes or message queues.

10
00:00:31,290 --> 00:00:35,620
The most common memory based mechanism
is for the operating system to provide

11
00:00:35,620 --> 00:00:39,160
processes with access
to some shared memory.

12
00:00:39,160 --> 00:00:41,910
This may be in the form of
completely unstructured set of

13
00:00:41,910 --> 00:00:46,880
pages of physical memory or also may
be in the form of memory mapped files.

14
00:00:46,880 --> 00:00:49,850
Speaking of files, these two could
be perceived as a method for

15
00:00:49,850 --> 00:00:54,110
IPC, multiple processes read and
write from the same file.

16
00:00:54,110 --> 00:00:57,750
We will talk about file
systems in a separate lecture.

17
00:00:57,750 --> 00:01:02,120
Also, another mechanism that provides
higher-level semantics when it comes to

18
00:01:02,120 --> 00:01:06,720
the IPC among processes is what's
referred to as remote procedure calls,

19
00:01:06,720 --> 00:01:07,240
or RPC.

20
00:01:08,428 --> 00:01:10,470
Here, by higher-level semantics,

21
00:01:10,470 --> 00:01:15,390
we mean that it's a mechanism that
supports more than simply a channel for

22
00:01:15,390 --> 00:01:18,970
two processes to coordinate or
communicate amongst each other.

23
00:01:18,970 --> 00:01:23,160
Instead these methods prescribe some
additional detail on the protocols that

24
00:01:23,160 --> 00:01:25,930
will be used,
how will the data be formatted,

25
00:01:25,930 --> 00:01:28,420
how will the data be exchanged,
et cetera.

26
00:01:28,420 --> 00:01:32,170
RPC too will be discussed in
a later lesson in this class.

27
00:01:32,170 --> 00:01:35,980
Finally, communication and coordination
also implies synchronization.

28
00:01:35,980 --> 00:01:37,270
When processes send and

29
00:01:37,270 --> 00:01:41,470
receive to each other messages,
they in a way synchronize as well.

30
00:01:41,470 --> 00:01:44,530
Similarly, when processes synchronize,
for instance,

31
00:01:44,530 --> 00:01:46,780
using some mutex like data structure,

32
00:01:46,780 --> 00:01:50,710
they also communicate something
about the point in their execution.

33
00:01:50,710 --> 00:01:51,930
So from that perspective,

34
00:01:51,930 --> 00:01:56,750
synchronization primitives also fall
under the category of IPC mechanisms.

35
00:01:56,750 --> 00:01:59,580
However, we will spend a separate lesson

36
00:01:59,580 --> 00:02:02,200
talking specifically
about synchronization.

37
00:02:02,200 --> 00:02:05,125
For that reason this lesson will
focus on the first two bullets, and

38
00:02:05,125 --> 00:02:07,296
we will talk about these
remaining topics later.
