1
00:00:01,150 --> 00:00:05,350
The first point is about
the interface design and

2
00:00:05,350 --> 00:00:09,780
the main specifications criterion for
basically creeds

3
00:00:09,780 --> 00:00:14,930
is all application components render
on screen in a responsive manner.

4
00:00:14,930 --> 00:00:15,700
Usable.

5
00:00:15,700 --> 00:00:19,640
Across a modern desktop tablet and
phone browsers.

6
00:00:19,640 --> 00:00:22,130
You want to make sure
the things look good.

7
00:00:22,130 --> 00:00:26,830
>> Especially because you have several
different continents inside of one

8
00:00:26,830 --> 00:00:30,580
application you're going
to be having a google maps.

9
00:00:30,580 --> 00:00:33,170
That's going to show your markers.

10
00:00:33,170 --> 00:00:38,380
And then you have a list view off the
same places that are shown in markers.

11
00:00:38,380 --> 00:00:43,820
As well as a search bar or whatever
that you integrate inside your map.

12
00:00:44,940 --> 00:00:48,760
Which is going to filter that
list view as well as the markers.

13
00:00:48,760 --> 00:00:53,850
So make sure that all these competence
together render in a very responsive

14
00:00:53,850 --> 00:00:58,350
manner, and usable manner, in the sense
that, we don't want your list view to

15
00:00:58,350 --> 00:01:03,780
completely populate your mobile browser
and not be able to view your map.

16
00:01:03,780 --> 00:01:07,509
It can be a toggle element that
you can sort of minimize and

17
00:01:07,509 --> 00:01:09,618
maximize the way you want it to.

18
00:01:09,618 --> 00:01:14,208
Or you can make it responsive and
very relative to the screen size.

19
00:01:14,208 --> 00:01:19,635
>> Since we're talking about
interface design one thing that

20
00:01:19,635 --> 00:01:25,080
I definitely want to say is start
with a mobile first design.

21
00:01:25,080 --> 00:01:30,800
And we say that because it's so
much easier to design.

22
00:01:30,800 --> 00:01:33,464
Take something and make it better,
instead of taking something bigger and

23
00:01:33,464 --> 00:01:34,710
make it small.

24
00:01:34,710 --> 00:01:40,010
And the next one is about
app architecture which says,

25
00:01:40,010 --> 00:01:45,690
code is properly separated based
upon Knockout's best practices.

26
00:01:45,690 --> 00:01:50,680
Following an MVVM pattern,
avoiding updating the dom manually.

27
00:01:50,680 --> 00:01:57,230
Using observables rather than
forcing the brushes manually etc.

28
00:01:57,230 --> 00:02:00,385
So this goes through Knockout and

29
00:02:00,385 --> 00:02:04,560
JavaScript design pattern of
course is going to help a lot.

30
00:02:04,560 --> 00:02:06,710
>> Yeah.
Over here.

31
00:02:06,710 --> 00:02:08,965
>> Now-
>> We can talk a little bit about

32
00:02:08,965 --> 00:02:13,620
the Model-View-ViewModel architecture in
general because that might be a little

33
00:02:13,620 --> 00:02:18,446
complicated to understand the beginning
and how to integrate it in your code.

34
00:02:18,446 --> 00:02:25,325
>> So the Model-View-ViewModel splits
your UI code into three parts.

35
00:02:25,325 --> 00:02:28,290
The model, the view and the view model.

36
00:02:28,290 --> 00:02:33,450
Now these names are self explanatory

37
00:02:33,450 --> 00:02:38,020
the model basically is going to
have all your data it can be

38
00:02:38,020 --> 00:02:42,540
data related your where it is located.

39
00:02:42,540 --> 00:02:44,886
What type of food I think about too.

40
00:02:44,886 --> 00:02:51,660
[LAUGH] Does it serve,
anything that has got any information.

41
00:02:51,660 --> 00:02:52,160
>> Yeah.

42
00:02:52,160 --> 00:02:54,160
>> Is going to go in your data.

43
00:02:54,160 --> 00:02:56,190
>> And this data can be rewritten and

44
00:02:56,190 --> 00:03:00,110
hard coded by yourself when you're
starting to build the application.

45
00:03:00,110 --> 00:03:04,456
So if you're overwhelmed by hey
how do I actually put in this

46
00:03:04,456 --> 00:03:09,910
JSON get a JSON array from
a third party API and

47
00:03:09,910 --> 00:03:14,110
send it to render it in map markers and
so on if you're overwhelmed.

48
00:03:15,200 --> 00:03:19,640
Take one place or two places
hard coded into a JSON object.

49
00:03:19,640 --> 00:03:23,030
You guys know how to create
JSON objects from project two,

50
00:03:23,030 --> 00:03:25,500
so I'm sure you'll know how to do it.

51
00:03:25,500 --> 00:03:31,450
Just put in two places and try to put in
these places inside your map markers.

52
00:03:31,450 --> 00:03:34,694
So your JSON object
is essentially what-.

53
00:03:34,694 --> 00:03:37,124
>> Your login will be.

54
00:03:37,124 --> 00:03:42,230
Now the view,
this usually is basically what you view.

55
00:03:42,230 --> 00:03:47,600
It's the visual representation
of what you see off your data.

56
00:03:47,600 --> 00:03:54,180
So in case of a place,
you're going to see a marker.

57
00:03:54,180 --> 00:03:57,510
So anything that can be
seen goes in your view.

58
00:03:57,510 --> 00:03:59,950
And then the model view or

59
00:03:59,950 --> 00:04:04,015
the view model is the messenger
between your data.

60
00:04:04,015 --> 00:04:05,230
>> Mm-hm.
>> Or the model.

61
00:04:05,230 --> 00:04:06,670
And your view, which is.

62
00:04:06,670 --> 00:04:08,900
>> Yeah.
>> Your visual information.

63
00:04:08,900 --> 00:04:13,930
So any data, or all the data
is taken by this model view,

64
00:04:13,930 --> 00:04:16,370
processed, and then given to the view.

65
00:04:16,370 --> 00:04:19,180
To display it and
render it on the screen.

66
00:04:20,959 --> 00:04:25,950
>> I know that a lot of people would
know it as the model view control,

67
00:04:25,950 --> 00:04:26,620
but yeah.

68
00:04:26,620 --> 00:04:29,338
We call it the model
view-view model pattern.

69
00:04:29,338 --> 00:04:32,528
For Knockout and
that's how Knockout it is built upon.

70
00:04:32,528 --> 00:04:37,587
A little more details on it with
respect to Knockout who would be

71
00:04:37,587 --> 00:04:42,940
that Knockout essentially handles
the view model part of things.

72
00:04:42,940 --> 00:04:46,945
In the sense that it has
a very nice property of data

73
00:04:46,945 --> 00:04:52,220
bindings where you can actually
observe your dom elements

74
00:04:52,220 --> 00:04:55,480
inside your view model
to make changes to it.

75
00:04:55,480 --> 00:05:01,450
Let's say that you have a list
element coded up in your HTML.

76
00:05:01,450 --> 00:05:04,420
So you have a dom element
that's in a full list and

77
00:05:04,420 --> 00:05:07,545
you don't know how many list
items go into that list.

78
00:05:07,545 --> 00:05:11,020
Everything's going to be based upon

79
00:05:11,020 --> 00:05:15,620
what you're going to retrieve from an
API and then send it to the front end.

80
00:05:15,620 --> 00:05:21,480
So how do I know if the list contains
ten elements or five or just one?

81
00:05:21,480 --> 00:05:27,625
So what you can do is, you can add a
data bind property to your list element,

82
00:05:27,625 --> 00:05:31,525
and this can be accessed
inside your JavaScript

83
00:05:31,525 --> 00:05:34,238
by calling the ko.observable function.

84
00:05:34,238 --> 00:05:35,085
>> Mm-hm.
>> So

85
00:05:35,085 --> 00:05:37,710
what that is going to do is Anytime.

86
00:05:37,710 --> 00:05:40,710
So you give an ID inside your data bank.

87
00:05:40,710 --> 00:05:45,940
So whenever you call that ko.observable
with the ID passed into it

88
00:05:45,940 --> 00:05:50,290
as whatever dom element
you're getting from the HTML.

89
00:05:50,290 --> 00:05:54,910
It's going to track that
element immediately.

90
00:05:54,910 --> 00:06:00,440
And it can make changes to that
element you can add more data into it.

91
00:06:00,440 --> 00:06:05,188
You can retrieve what the current
data is inside that list element.

92
00:06:05,188 --> 00:06:10,687
So it's basically to update the dom and
retrieve data from the dom.

93
00:06:10,687 --> 00:06:15,657
And so what you will be essentially
working on is the view model portion

94
00:06:15,657 --> 00:06:17,460
necessarily.

95
00:06:17,460 --> 00:06:23,130
And I know that model is going to
be just a simple data object.,

96
00:06:23,130 --> 00:06:24,340
Jason object that.

97
00:06:24,340 --> 00:06:25,600
>> At least to start out with.

98
00:06:25,600 --> 00:06:27,190
>> Yeah, to start out with.

99
00:06:27,190 --> 00:06:29,900
So it's always going to be
something that you code or

100
00:06:29,900 --> 00:06:35,020
you will be getting an array or
JSON object from your third party API.

101
00:06:35,020 --> 00:06:38,580
So yeah that's how Knockout works and

102
00:06:38,580 --> 00:06:41,910
that's what you should
basically keep in mind.

103
00:06:41,910 --> 00:06:44,010
>> The next part is that it's
asynchronous HTTP usage.

104
00:06:44,010 --> 00:06:46,670
And this is where we see
a lot of projects not meet

105
00:06:46,670 --> 00:06:48,620
specifications on their
first time around.

106
00:06:48,620 --> 00:06:52,100
And we can talk a little
bit in depth about it, but

107
00:06:52,100 --> 00:06:56,225
you want to make sure that
you're using Google Maps API.

108
00:06:56,225 --> 00:06:58,665
That's the basic requirement.

109
00:06:58,665 --> 00:06:59,265
>> Yeah.

110
00:06:59,265 --> 00:07:02,955
>> You want to make sure you're using
at least one third party data API.

111
00:07:02,955 --> 00:07:05,365
And make sure Places, Google Places and

112
00:07:05,365 --> 00:07:09,595
Google Street View do
not fall under this.

113
00:07:09,595 --> 00:07:12,555
Both of these APIs are actually
a part of Google Maps.

114
00:07:12,555 --> 00:07:16,165
>> Yeah, they're like a library
under Google Maps API.

115
00:07:16,165 --> 00:07:19,480
So it's great if you integrate it but

116
00:07:19,480 --> 00:07:24,150
we would want another third party
API apart from the Google ones.

117
00:07:24,150 --> 00:07:27,200
>> And there are some interesting
ones that we have seen.

118
00:07:27,200 --> 00:07:30,117
A lot of people use the usual and

119
00:07:30,117 --> 00:07:31,700
Instagram and
>> And

120
00:07:31,700 --> 00:07:34,880
Wikipedia the full square Flicker.

121
00:07:34,880 --> 00:07:38,858
>> So you can use any third party API
has long as it has documentation that we

122
00:07:38,858 --> 00:07:40,326
can read and understand.

123
00:07:40,326 --> 00:07:45,620
>> Yeah also that some of these
third party APIs might have

124
00:07:45,620 --> 00:07:51,850
a lot of odd stuff to do like
authentication and authorization.

125
00:07:51,850 --> 00:07:55,934
I know that a lot of people have
tried using YouTube API and

126
00:07:55,934 --> 00:07:58,413
YouTube API definitely needs it.

127
00:07:58,413 --> 00:08:02,735
A lot and you have tutorials for
it in the Google developers website, so

128
00:08:02,735 --> 00:08:03,606
if you asked.

129
00:08:03,606 --> 00:08:06,806
If you guys would ask me.

130
00:08:06,806 --> 00:08:09,286
How do I learned these third party APIs?

131
00:08:09,286 --> 00:08:14,056
Just go to their own documentation
Yelp has a developer's page

132
00:08:14,056 --> 00:08:17,206
where they talk about
their search API and

133
00:08:17,206 --> 00:08:21,976
other APIs that you can take and
sort of like the attributes that

134
00:08:21,976 --> 00:08:26,490
you need to query them using
to get places and restaurants.

135
00:08:26,490 --> 00:08:29,680
Or with a particular location or so on.

136
00:08:29,680 --> 00:08:34,490
So definitely if you want to get started
with an API that you have no experience

137
00:08:34,490 --> 00:08:39,460
with, what I would do is just go read
their developer documentation and

138
00:08:39,460 --> 00:08:44,250
then find tutorials good,
trustworthy tutorials around it.

139
00:08:44,250 --> 00:08:49,681
A very important point is,
whenever you're using a third party API,

140
00:08:49,681 --> 00:08:55,308
you need to enable cross origin resource
sharing for some of these APIs.

141
00:08:55,308 --> 00:09:00,585
So make sure that, so
that your app is actually able

142
00:09:00,585 --> 00:09:06,846
to access other APIs data from
other APIs so definitely go and

143
00:09:06,846 --> 00:09:11,880
look into enable pause.org
to make sure that you

144
00:09:11,880 --> 00:09:19,002
don't have to handle any additional
condition in using those APIs so

145
00:09:19,002 --> 00:09:23,088
do, do please do read documentation.

146
00:09:23,088 --> 00:09:27,967
>> I think in the next big part
of this is the whole asynchronous

147
00:09:27,967 --> 00:09:32,568
all data requests are retrieved
asynchronous manner.

148
00:09:32,568 --> 00:09:38,216
And I think this part is done
with the model view-view modify.

149
00:09:38,216 --> 00:09:43,014
But where a lot of students
stumble is in the event of

150
00:09:43,014 --> 00:09:48,045
a failed data retrieval
errors are handled.

151
00:09:49,380 --> 00:09:54,100
And we do explain what error
handling what we mean by that.

152
00:09:55,700 --> 00:10:00,430
When an API cannot load its data,
you either want to pop

153
00:10:00,430 --> 00:10:05,890
up an error message that says hey,
sorry I'm not working, come back later.

154
00:10:05,890 --> 00:10:08,872
Or you want to have a project, or

155
00:10:08,872 --> 00:10:13,628
your UI should not get
affected by data retrieval.

156
00:10:13,628 --> 00:10:17,885
So an easy way to check what
happens when you block,

157
00:10:17,885 --> 00:10:23,336
as a sort of an API, is to go and
play around with your hosts files.

158
00:10:23,336 --> 00:10:24,590
>> Yeah.

159
00:10:24,590 --> 00:10:27,270
There are two main methods
to check it using host

160
00:10:27,270 --> 00:10:29,350
files as Carrie was mentioning,

161
00:10:29,350 --> 00:10:33,910
and there's another one which is by
blocking your Internet connection.

162
00:10:35,440 --> 00:10:40,554
>> I'm going to go sudo nano/
>> [LAUGH]

163
00:10:40,554 --> 00:10:42,183
>> etc/hosts?

164
00:10:42,183 --> 00:10:42,840
>> Yeah.

165
00:10:42,840 --> 00:10:46,920
And this is what will open up and I had
just checked this like a minute back.

166
00:10:46,920 --> 00:10:49,270
So it's not asking me for my password.

167
00:10:49,270 --> 00:10:49,880
>> Yeah.

168
00:10:49,880 --> 00:10:51,160
>> Otherwise it would.

169
00:10:51,160 --> 00:10:54,980
What you want to do is
have just # custom.

170
00:10:54,980 --> 00:10:58,780
And then you're going
to add a local host ID.

171
00:10:58,780 --> 00:11:00,080
>> Yeah.

172
00:11:00,080 --> 00:11:02,694
>> And then
>> [CROSSTALK]

173
00:11:02,694 --> 00:11:06,701
Maps.googleapis.com
>> Or

174
00:11:06,701 --> 00:11:09,826
any other API that you
might want to block.

175
00:11:09,826 --> 00:11:10,543
>> Yeah.

176
00:11:10,543 --> 00:11:14,314
>> En.wikipedia.org
>> Mm-hm.

177
00:11:14,314 --> 00:11:18,880
>> And once you do this you want
to hit CTRL and ALT together and

178
00:11:18,880 --> 00:11:22,930
then hit Enter and what this is
going to do is basically block.

179
00:11:22,930 --> 00:11:25,480
My API is now-
>> And

180
00:11:25,480 --> 00:11:27,650
then you can open up your application.

181
00:11:27,650 --> 00:11:33,210
And what Google Maps usually does,
is it just gives a gray screen.

182
00:11:33,210 --> 00:11:36,750
So it doesn't give you any error,
it doesn't look very pretty

183
00:11:36,750 --> 00:11:39,970
in your application, just gives
you a bright gray screen saying.

184
00:11:39,970 --> 00:11:45,170
And what happens usually
is there is an error in

185
00:11:45,170 --> 00:11:50,560
the google developer, Chrome's console,
where it says Google is not defined.

186
00:11:50,560 --> 00:11:55,820
So all you need to do is
add a condition that would

187
00:11:55,820 --> 00:12:00,220
actually handle when
Google is undefined.

188
00:12:00,220 --> 00:12:05,030
So when Google is undefined show
an error, render an image that

189
00:12:05,030 --> 00:12:09,530
says something or something else that,
hey sorry our app is not

190
00:12:09,530 --> 00:12:13,240
functioning right now please come back
and check later or something like that.

191
00:12:13,240 --> 00:12:15,890
And you can check it with disabling your

192
00:12:15,890 --> 00:12:19,790
internet connection as well I believe
I think that should work as well.

193
00:12:20,810 --> 00:12:25,860
So those are the ways to sort of check
how your application is reacting

194
00:12:25,860 --> 00:12:28,590
when a failure occurs.

195
00:12:28,590 --> 00:12:32,114
>> And the first one we talked
about is map functionality and

196
00:12:32,114 --> 00:12:36,380
a map representation of
identified locations is provided.

197
00:12:36,380 --> 00:12:41,830
Runs error free and is presented
in a usable and responsive manner.

198
00:12:41,830 --> 00:12:43,920
We keep seeing this usable and
responsive manner,

199
00:12:43,920 --> 00:12:45,762
which takes you back to
the interface design.

200
00:12:45,762 --> 00:12:48,450
>> Mm-hm.
>> Start on a small screen device, and

201
00:12:48,450 --> 00:12:50,430
go up to a large screen device.

202
00:12:50,430 --> 00:12:53,410
You basically want to see those markers.

203
00:12:53,410 --> 00:12:54,150
>> Yeah.

204
00:12:54,150 --> 00:12:57,030
>> We need those markers
to be clickable.

205
00:12:57,030 --> 00:13:00,540
And change their styling
when they're clicked on.

206
00:13:00,540 --> 00:13:05,990
My favorite one was, or
I shouldn't say my favorite one.

207
00:13:05,990 --> 00:13:09,880
But the bobbing one is the most
common one that I've seen.

208
00:13:09,880 --> 00:13:11,470
>> Yeah, it depends.

209
00:13:11,470 --> 00:13:13,660
>> You can change
the color of the marker.

210
00:13:13,660 --> 00:13:18,301
It can be a subtle change,
it doesn't have to go from red to black.

211
00:13:18,301 --> 00:13:20,590
>> Yeah
>> Or

212
00:13:20,590 --> 00:13:23,150
anything at least need to
see something of the change.

213
00:13:23,150 --> 00:13:26,070
>> Make sure that you're
filtering your markers

214
00:13:26,070 --> 00:13:28,570
at the same time updating
your list view as well.

215
00:13:28,570 --> 00:13:34,080
So that should be responsive you don't
want all your markers to show up

216
00:13:34,080 --> 00:13:38,970
even when you're filtering the list or
searching a specific place in the list.

217
00:13:38,970 --> 00:13:42,970
That's not a very usable
design of your application,

218
00:13:42,970 --> 00:13:45,960
if you have to go through
each of your markers.

219
00:13:45,960 --> 00:13:48,230
To actually find the place
you were looking for.

220
00:13:48,230 --> 00:13:53,320
So just make sure that your
search functionality the keyword

221
00:13:53,320 --> 00:13:56,930
updates your list as
well as your markers.

222
00:13:56,930 --> 00:14:01,120
>> Vice versa would also be good in that
when you click on a marker it somehow

223
00:14:01,120 --> 00:14:04,530
highlights the place that you have
clicked on in your list view.

224
00:14:04,530 --> 00:14:06,470
>> That's right, yeah.

225
00:14:06,470 --> 00:14:06,970
So.

226
00:14:08,440 --> 00:14:09,330
All right.

227
00:14:09,330 --> 00:14:10,570
This is an easy one.

228
00:14:10,570 --> 00:14:14,440
No location details functionality,
functionality providing additional data,

229
00:14:14,440 --> 00:14:17,220
data location is provided
runs error free.

230
00:14:17,220 --> 00:14:22,170
And it's presented in the usable
responsive manner so we really want

231
00:14:22,170 --> 00:14:27,830
you to get responsive design
with this project obviously.

232
00:14:27,830 --> 00:14:32,820
And we want to see some additional
info provided about the location.

233
00:14:32,820 --> 00:14:34,420
You can choose how you
want to implement it.

234
00:14:34,420 --> 00:14:36,990
The most implementation is
when you click on a marker

235
00:14:37,990 --> 00:14:42,150
it opens an info window,
with something more about the place.

236
00:14:42,150 --> 00:14:42,976
Maybe their phone number.

237
00:14:45,788 --> 00:14:48,068
It's phone number, Yelp address.

238
00:14:48,068 --> 00:14:48,668
>> Address.

239
00:14:48,668 --> 00:14:49,480
>> Address.

240
00:14:49,480 --> 00:14:51,500
>> Location details, yeah anything.

241
00:14:51,500 --> 00:14:54,040
>> Even if you give the latitude and

242
00:14:54,040 --> 00:14:56,110
longitude it's
>> It's.

243
00:14:56,110 --> 00:14:56,790
>> Yeah.
>> Fine.

244
00:14:56,790 --> 00:15:01,400
I know some people attach like links to
YouTube videos or Instagram pictures and

245
00:15:01,400 --> 00:15:02,650
so on.

246
00:15:02,650 --> 00:15:04,020
That's going above and beyond.

247
00:15:04,020 --> 00:15:07,800
It's awesome, but
start out small all the time and

248
00:15:07,800 --> 00:15:11,210
then go start enhancing your project,
is what I would say.

249
00:15:11,210 --> 00:15:14,500
>> But even with a third party API,
implement Google Maps.

250
00:15:14,500 --> 00:15:17,213
The way you would want
it implemented first.

251
00:15:17,213 --> 00:15:19,035
Before you jump on it and

252
00:15:19,035 --> 00:15:23,420
get on mistake things of adding
another third party API.

253
00:15:23,420 --> 00:15:27,318
The search functionality has a search
function is provided runs error free and

254
00:15:27,318 --> 00:15:30,180
is presented in the usable
new response manner.

255
00:15:30,180 --> 00:15:34,340
That's again the search
function is more like

256
00:15:34,340 --> 00:15:37,420
a filtering operation from your lists.

257
00:15:37,420 --> 00:15:41,830
So if I have Anna and Annabel,

258
00:15:41,830 --> 00:15:46,610
when I type Anna, I want to be
able to see both Anna and Annabel.

259
00:15:46,610 --> 00:15:50,750
And the moment I type that b,
it's wonderful, Anna goes away and

260
00:15:50,750 --> 00:15:51,670
I can see just Annabel.

261
00:15:53,452 --> 00:15:58,360
Yeah, we actually don't give you
guidelines on how smart your

262
00:15:58,360 --> 00:16:02,723
search is but we want to see
some kind of search, right.

263
00:16:02,723 --> 00:16:06,416
Just if you want to put a full
keyword and search it you can do it.

264
00:16:06,416 --> 00:16:10,256
If you want just by a single
letter You can do it that way.

265
00:16:10,256 --> 00:16:14,560
But we want to see that
filtering is going on.

266
00:16:14,560 --> 00:16:18,790
And that is going to in turn,
trigger your markers and

267
00:16:18,790 --> 00:16:24,490
your list to be updated is what
we want to see get out of it.

268
00:16:24,490 --> 00:16:27,695
And we also want you to code
in more than one place.

269
00:16:27,695 --> 00:16:28,780
>> [LAUGH].

270
00:16:28,780 --> 00:16:30,960
>> Since we want you to
be able to search and

271
00:16:30,960 --> 00:16:32,450
show that hey I have-
>> Unless

272
00:16:32,450 --> 00:16:33,270
>> Ten places.

273
00:16:33,270 --> 00:16:34,800
>> List with more than one element.

274
00:16:34,800 --> 00:16:35,780
>> Exactly.

275
00:16:35,780 --> 00:16:39,980
I have ten places and
I type this letter and

276
00:16:39,980 --> 00:16:42,620
one of them show up or
five of them show up.

277
00:16:42,620 --> 00:16:46,790
So we definitely do want to test that
functionality at If you're going to be

278
00:16:46,790 --> 00:16:49,870
using only one phase that sort
of makes it difficult for

279
00:16:49,870 --> 00:16:52,890
us to even like check if your
functionality works fine.

280
00:16:52,890 --> 00:16:57,450
It's just make sure that
returns multiple places.

281
00:16:57,450 --> 00:17:00,150
>> Well, even if you have a few quiz and

282
00:17:00,150 --> 00:17:04,460
buy something that i may not
see in someone's list view.

283
00:17:04,460 --> 00:17:05,904
I usually just go with my name.

284
00:17:05,904 --> 00:17:08,609
>> [LAUGH]
>> If that doesn't show up I and

285
00:17:08,609 --> 00:17:10,730
can see that your list
is functioning ok.

286
00:17:11,890 --> 00:17:15,770
You can definitely, If you want
to go above and beyond implement.

287
00:17:15,770 --> 00:17:17,099
X completion.

288
00:17:17,099 --> 00:17:19,089
>> Yeah, autocomplete,
yeah, that's right.

289
00:17:19,089 --> 00:17:20,000
>> Autocomplete,

290
00:17:20,000 --> 00:17:24,839
we've seen some of those projects now
really Going to play around with.

291
00:17:24,839 --> 00:17:30,120
Keyboard shortcuts,
would be another one.

292
00:17:30,120 --> 00:17:34,070
The next part of rubric is basically
talking about the list view.

293
00:17:34,070 --> 00:17:40,440
A list view or some other variation of
browsing with the content, is provided,

294
00:17:40,440 --> 00:17:44,260
runs error free, and is presented in
a useable and responsible manner.

295
00:17:45,900 --> 00:17:50,410
You can choose to have
a difficult list view.

296
00:17:50,410 --> 00:17:51,460
>> Yeah.

297
00:17:51,460 --> 00:17:53,270
>> If you want.

298
00:17:53,270 --> 00:17:55,690
But it is in double quotes.

299
00:17:55,690 --> 00:18:00,980
So if you think of a creative way of
representing of all locations that you

300
00:18:00,980 --> 00:18:07,190
have beyond the markers, please go ahead
do that who'd love to see that project.

301
00:18:07,190 --> 00:18:08,700
>> Yeah
>> I think that's.

302
00:18:08,700 --> 00:18:11,560
It's pretty easy to understand point.

303
00:18:11,560 --> 00:18:16,890
The next few ones are, again you
are going to be best on good quality,

304
00:18:16,890 --> 00:18:21,760
you have been getting good reviews now.

305
00:18:21,760 --> 00:18:25,610
So, we have added that
detail to our evaluation.

306
00:18:25,610 --> 00:18:27,870
>> Yeah, mm-hm.
>> So make sure your code is clean.

307
00:18:27,870 --> 00:18:30,330
You have commented.

308
00:18:30,330 --> 00:18:34,810
You don't have commented
code left in your project.

309
00:18:34,810 --> 00:18:38,590
And I understand sometimes,
it's just nice to have.

310
00:18:38,590 --> 00:18:41,240
I had it working this way.

311
00:18:41,240 --> 00:18:43,045
But remember, you're using GitHub.

312
00:18:43,045 --> 00:18:43,750
>> Yeah.

313
00:18:43,750 --> 00:18:46,630
>> So,
you have version controlling in build.

314
00:18:46,630 --> 00:18:50,090
And you can go back and
you can go forward, but whatever.

315
00:18:50,090 --> 00:18:54,120
If you're doing you can host that thing
on a completely different branch,

316
00:18:54,120 --> 00:18:56,920
because what we are looking for
is on the master branch.

317
00:18:58,920 --> 00:19:01,270
And production quality code
tends to be on the master bench.

318
00:19:01,270 --> 00:19:02,030
>> Yeah.
>> And that is

319
00:19:02,030 --> 00:19:05,280
reason why we want to check
on the master branch.

320
00:19:05,280 --> 00:19:06,600
The last one is the readme.

321
00:19:06,600 --> 00:19:09,180
Something that you have been
doing since project one.

322
00:19:10,850 --> 00:19:12,810
This is, the second and

323
00:19:12,810 --> 00:19:16,600
last thing that you'll be doing
it in this nano degree program.

324
00:19:16,600 --> 00:19:19,630
Make sure you tell us how
to run your application.

325
00:19:20,980 --> 00:19:23,920
If you need us to unlock it,
have instructions for that.

326
00:19:23,920 --> 00:19:28,110
Most of you haven't been or most of the
projects that I've seen just in his unit

327
00:19:28,110 --> 00:19:32,020
somewhere on the public internet and
it's really nice to see these projects.

328
00:19:32,020 --> 00:19:34,590
>> Yeah yeah.
And don't forget build tools as well

329
00:19:34,590 --> 00:19:37,430
if you want to go above and beyond.

330
00:19:37,430 --> 00:19:40,883
You have learned a lot
of useful techniques and

331
00:19:40,883 --> 00:19:45,170
optimization efforts in project four.

332
00:19:45,170 --> 00:19:50,050
You do want it, you're going to
have a ton of JavaScript, CSS.

333
00:19:50,050 --> 00:19:52,300
Code, I bet, in this application.

334
00:19:52,300 --> 00:19:57,610
So, it's always important to
make them render blocking.

335
00:19:57,610 --> 00:19:59,850
Make sure that they are all minified,
and

336
00:19:59,850 --> 00:20:05,300
don't have extra spaces that could
potentially make your storage, as well.

337
00:20:05,300 --> 00:20:08,340
Do a higher value song.

338
00:20:08,340 --> 00:20:12,880
Just make sure that all your
code is optimized if you can.

339
00:20:12,880 --> 00:20:18,900
Of course this is optional, I'm not
like pressing it on you guys to do it,

340
00:20:18,900 --> 00:20:23,010
but it's definitely a good practice and
you can sort of like.

341
00:20:23,010 --> 00:20:27,500
Remember, you can, if you want to sort
of refresh your mind from Project Four

342
00:20:27,500 --> 00:20:31,650
and be like I want to try using grunt or
gulp again, you know, on this project.

343
00:20:31,650 --> 00:20:32,230
>> Yeah.

344
00:20:32,230 --> 00:20:36,020
>> And it seems like I have all this,
like, JavaScript file that can,

345
00:20:36,020 --> 00:20:41,310
that I can concatenate and minify,
and then Use them all to host my page,

346
00:20:41,310 --> 00:20:45,050
and it will be more efficient and
faster when I do that.

347
00:20:45,050 --> 00:20:46,190
Go ahead and do it.

348
00:20:46,190 --> 00:20:47,710
Add it in the readme,

349
00:20:47,710 --> 00:20:50,802
and just make sure that you send
us a readable copy as well,

350
00:20:50,802 --> 00:20:55,960
because we definitely want to be seeing
how you've written your JavaScript code

351
00:20:55,960 --> 00:21:01,530
and I know that a lot of people have
been asking me hey I'm so overwhelmed,

352
00:21:01,530 --> 00:21:06,810
I'm unstuck at this point where
I have my Google Maps filled in.

353
00:21:06,810 --> 00:21:08,800
I don't know how to go forward.

354
00:21:08,800 --> 00:21:11,380
I don't know how to make things work.

355
00:21:11,380 --> 00:21:15,390
So what I would say
is we are looking for

356
00:21:15,390 --> 00:21:21,020
knockout only when you make changes
to your list view, or only when

357
00:21:21,020 --> 00:21:26,720
you make changes to filtering your JSON
array that you get back from an API.

358
00:21:26,720 --> 00:21:31,560
So, Google Maps is a view
model by itself, so

359
00:21:31,560 --> 00:21:35,410
you don't need to put that
inside your view model class.

360
00:21:35,410 --> 00:21:38,590
I know that a lot of students
have this question of,

361
00:21:38,590 --> 00:21:44,240
hey, I don't know where Google Maps
goes exactly into the MVC pattern.

362
00:21:44,240 --> 00:21:47,210
>> Don't worry about
Google Maps basically.

363
00:21:47,210 --> 00:21:50,660
>> Yeah.
And you don't need to worry about

364
00:21:50,660 --> 00:21:55,680
using data bind on your marker
objects or anything of that sort.

365
00:21:55,680 --> 00:22:00,120
All you need to worry about is,
whatever ways that you

366
00:22:00,120 --> 00:22:05,470
manipulate this array of objects that
you are going to show in your list item

367
00:22:05,470 --> 00:22:10,770
should be using observables, and
should be in your view model.

368
00:22:10,770 --> 00:22:15,390
And the same filtering or
whatever mechanism you do and

369
00:22:15,390 --> 00:22:19,080
get the filtered list,
make sure that it's always written

370
00:22:19,080 --> 00:22:24,120
like reflected in your google maps API,
so make sure that your list view and

371
00:22:24,120 --> 00:22:29,550
your google maps API are in sync or
they are rendering all the places.

372
00:22:29,550 --> 00:22:33,880
But you don't need to worry about
integrating data bindings and

373
00:22:33,880 --> 00:22:35,730
do a google map object.

374
00:22:35,730 --> 00:22:39,610
That is going to get complicated
when you start out doing.

375
00:22:39,610 --> 00:22:43,510
I have not tried that, personally,
and I'm going to be open about it.

376
00:22:43,510 --> 00:22:48,160
So I don't go how well that
would work or if it would work.

377
00:22:48,160 --> 00:22:52,495
So you don't need to worry about
applying knockouts principles-

378
00:22:52,495 --> 00:22:53,050
>> Mm-hm.

379
00:22:53,050 --> 00:22:54,030
>> On your Google maps.

380
00:22:54,030 --> 00:22:56,660
Just make sure that outside of it,

381
00:22:56,660 --> 00:23:00,820
whatever DOM element that you
create outside of the Google maps

382
00:23:00,820 --> 00:23:04,440
need to be updated dynamically
during your run time.

383
00:23:04,440 --> 00:23:06,410
And need to use Knockout.

384
00:23:06,410 --> 00:23:09,410
So definitely go with
that approach in mind.

385
00:23:09,410 --> 00:23:14,540
And if you want, all you need to worry
about is to set Google maps aside and

386
00:23:14,540 --> 00:23:17,620
get data from third party API's and

387
00:23:17,620 --> 00:23:21,850
be able to render that data
unless you're using Knockout.

388
00:23:21,850 --> 00:23:24,150
That should be your first objective.

389
00:23:24,150 --> 00:23:28,360
And then integrate it all
together if it gets overwhelming.

390
00:23:28,360 --> 00:23:29,960
>> You can start out with a Google map,

391
00:23:29,960 --> 00:23:33,630
I would also recommend in a Google
map in their project too.

392
00:23:33,630 --> 00:23:34,980
>> Yes, [INAUDIBLE].
>> So, going back and

393
00:23:34,980 --> 00:23:38,510
seeing what was done over there,
might be a good place to start.

394
00:23:38,510 --> 00:23:41,180
>> Definitely.
You have to create documentation or.

395
00:23:41,180 --> 00:23:45,370
>> Yes, so go ahead and
just read up on that.

396
00:23:45,370 --> 00:23:50,400
It's a great place to start and then
you can start with a map that's tiny.

397
00:23:50,400 --> 00:23:52,534
And then work on making it bigger.

398
00:23:52,534 --> 00:23:53,350
>> Yeah, exactly.

399
00:23:53,350 --> 00:23:58,660
More functionality added into it and,
yeah we do have a lot of

400
00:23:58,660 --> 00:24:03,980
medium through which you can communicate
with your peers and with your coaches.

401
00:24:03,980 --> 00:24:07,390
So feel free to leverage that as well.

402
00:24:07,390 --> 00:24:10,010
>> I bet just the way
we are happy about it,

403
00:24:10,010 --> 00:24:13,020
the student who submits this
also is happy about it.

404
00:24:13,020 --> 00:24:15,530
>> And if you've come to Project Five,

405
00:24:15,530 --> 00:24:18,700
it means it's a great achievement for
you guys.

406
00:24:18,700 --> 00:24:19,390
>> Definitely.

407
00:24:19,390 --> 00:24:21,380
>> You've learned a lot,
and you're here, and

408
00:24:21,380 --> 00:24:25,910
that's why you're At that point so
do not get frustrated.

409
00:24:25,910 --> 00:24:28,490
It can be overwhelming but

410
00:24:28,490 --> 00:24:32,940
it's how you take it it's going to be
a lot of learning experience for you.

411
00:24:32,940 --> 00:24:35,690
It might be frustrating but
it's going to happen

412
00:24:35,690 --> 00:24:39,890
you're going to get a great satisfaction
and you actually see these up and

413
00:24:39,890 --> 00:24:43,050
running and I'm sure that you
guys can get there for sure.
