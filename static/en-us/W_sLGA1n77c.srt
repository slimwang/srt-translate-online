1
00:00:00,330 --> 00:00:01,880
Now that we've set up our array,

2
00:00:01,880 --> 00:00:05,840
let's jump back into our script to
pick a random song for it to play.

3
00:00:05,840 --> 00:00:09,960
Since we want this to happen as soon as
we hit play, let's put this in the start

4
00:00:09,960 --> 00:00:14,250
method, so that it's the first thing
that happens when our experience starts.

5
00:00:15,260 --> 00:00:20,380
To pick a random object, we first need
to pick a random number between zero and

6
00:00:20,380 --> 00:00:23,090
the total number of objects in our list.

7
00:00:23,090 --> 00:00:26,190
The reason we use zero is because,
with lists and

8
00:00:26,190 --> 00:00:29,250
arrays, we used zero-based numbering.

9
00:00:30,340 --> 00:00:35,520
So the first element is referenced with
a zero, the second referenced by one,

10
00:00:35,520 --> 00:00:36,070
and so on.

11
00:00:37,210 --> 00:00:41,090
Picking a truly random number is
actually a pretty hard thing to do.

12
00:00:41,090 --> 00:00:41,850
But luckily for

13
00:00:41,850 --> 00:00:47,270
us, there is a method we can use called
random.range that does just that.

14
00:00:47,270 --> 00:00:51,360
We'll be using the int version of range,
and as we see here,

15
00:00:51,360 --> 00:00:55,630
it accepts two parameters, min and max.

16
00:00:55,630 --> 00:00:58,090
Note here, that max is exclusive.

17
00:00:58,090 --> 00:01:01,040
So that means,
it's not included in our range.

18
00:01:01,040 --> 00:01:03,840
So, for example,
if we use Random.Range 0 10,

19
00:01:03,840 --> 00:01:07,995
where 0 is our min value and
10 is our max value,

20
00:01:07,995 --> 00:01:13,640
we'll only get numbers between 0 and
9 as possibilities.

21
00:01:13,640 --> 00:01:17,160
The reason that this is done is
specifically for arrays, and

22
00:01:17,160 --> 00:01:19,760
the fact that they are zero-based.

23
00:01:19,760 --> 00:01:23,410
For us, that means if our
array has four objects, and

24
00:01:23,410 --> 00:01:28,210
we want a random object, we want to get
a random value that's either 0, 1, 2 or

25
00:01:28,210 --> 00:01:33,910
3, to have a unique
reference to each object.

26
00:01:33,910 --> 00:01:38,910
As a result, to get a random number to
reference in our array, we need to pick

27
00:01:38,910 --> 00:01:43,230
a number between zero and
the length of our array, which is four.

28
00:01:44,360 --> 00:01:47,784
So, back in our script,

29
00:01:47,784 --> 00:01:53,003
let's type index = random.range,

30
00:01:53,003 --> 00:01:57,570
zero to soundfiles.length.

31
00:01:57,570 --> 00:02:01,460
Arrays are extremely nice, in that
they always maintain their length

32
00:02:01,460 --> 00:02:03,360
in a variable that happens
to be called length.

33
00:02:04,440 --> 00:02:07,490
The next thing we need to do,
now that we have a random index,

34
00:02:07,490 --> 00:02:10,120
is actually get the random
object out of our array.

35
00:02:11,320 --> 00:02:12,050
To do that,

36
00:02:12,050 --> 00:02:16,070
we need to access our array, using
a handy little tool called brackets.

37
00:02:17,130 --> 00:02:22,100
We can simply access the array
with soundfiles.bracket index.

38
00:02:23,270 --> 00:02:27,420
Next, we just have to assign our
sound clip to our audio component.

39
00:02:27,420 --> 00:02:30,906
Since we already have our
reference to our audio source,

40
00:02:30,906 --> 00:02:34,620
we can type soundsource.clip
equals soundfiles at index.

41
00:02:34,620 --> 00:02:38,100
And the last thing we
need to do is actually

42
00:02:38,100 --> 00:02:41,754
play our clip with soundsource.play.

43
00:02:41,754 --> 00:02:46,090
And since our script is already
hooked up, we can hit play, and

44
00:02:46,090 --> 00:02:48,410
each time we'll get a random song.
