1
00:00:00,000 --> 00:00:02,000
So now that we have 3 pieces of information,

2
00:00:02,000 --> 00:00:04,000
let's put these pieces together.

3
00:00:04,000 --> 00:00:07,000
So the first two that we will put together

4
00:00:07,000 --> 00:00:09,000
is the statement here on the second line

5
00:00:09,000 --> 00:00:11,000
and this one here on the third line.

6
00:00:11,000 --> 00:00:14,000
So we know that the length of the tour computed by the algorithm

7
00:00:14,000 --> 00:00:17,000
is exactly two times the weight of the minimum spanning tree.

8
00:00:17,000 --> 00:00:19,000
Now we will use the piece of information that we will have up here,

9
00:00:19,000 --> 00:00:22,000
so let's make a little bit more space down here.

10
00:00:22,000 --> 00:00:25,000
We know that the length of the shortest tour is larger than

11
00:00:25,000 --> 00:00:28,000
the weight of the minimum spanning tree,

12
00:00:28,000 --> 00:00:30,000
so we can put this part down here.

13
00:00:30,000 --> 00:00:35,000
Now isn't that beautiful.

14
00:00:35,000 --> 00:00:37,000
At least I think so.

15
00:00:37,000 --> 00:00:40,000
So the length of the shortest tour must lie somewhere

16
00:00:40,000 --> 00:00:43,000
in between the weight of the minimum spanning tree

17
00:00:43,000 --> 00:00:46,000
and the solution that you have just computed,

18
00:00:46,000 --> 00:00:48,000
which is twice the weight of the spanning tree.

19
00:00:48,000 --> 00:00:51,000
And this means that the algorithm I specified here is actually

20
00:00:51,000 --> 00:00:54,000
a constant factor approximation algorithm for shortest tour.

21
00:00:54,000 --> 00:00:57,000
Oh, I forgot to write the factor here.

22
00:00:57,000 --> 00:01:00,000
Well, of course I did that deliberately

23
00:01:00,000 --> 00:01:03,000
because this is going to be your final quiz

24
00:01:03,000 --> 00:01:05,000
for this algorithm.

25
00:01:05,000 --> 00:01:08,000
Please tell me what is the approximation factor,

26
00:01:08,000 --> 00:01:11,000
using this information we've just figured out,

27
00:01:11,000 --> 99:59:59,999
that this algorithm has for shortest tour?
