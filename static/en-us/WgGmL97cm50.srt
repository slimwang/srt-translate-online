1
00:00:00,170 --> 00:00:03,140
Now, we're almost done with implementing the car class, but if you have another

2
00:00:03,140 --> 00:00:05,840
look at the drive method, remember, that we didn't update the gas in tank

3
00:00:05,840 --> 00:00:10,796
theory variable. That computation is a little bit trickier. Let's first figure

4
00:00:10,796 --> 00:00:16,492
it out on a sheet of paper. So, let's say we drive 100 miles. How much gas does

5
00:00:16,492 --> 00:00:21,268
that take? Well, of course, that depends on the fuel efficiency. Let's assume

6
00:00:21,268 --> 00:00:26,290
we have a car with great mileage. 50 miles per gallon. Well, then the gas

7
00:00:26,290 --> 00:00:33,064
consumed is 100 miles divided by the fuel efficiency or 2 gallons. Right, 50

8
00:00:33,064 --> 00:00:37,017
miles for one gallon, 50 miles for another gallon, for a total of the 100

9
00:00:37,017 --> 00:00:42,045
miles. That's something that we can easily program in Java and here's the

10
00:00:42,045 --> 00:00:46,997
formula. Let's put that into our code. Of course, that just tells us how much

11
00:00:46,997 --> 00:00:51,120
gas was consumed during the drive. We still need to update the instance

12
00:00:51,120 --> 00:00:56,480
variable. Let's do that. Here is it. We reduced gas in tank by the amount of

13
00:00:56,480 --> 00:01:01,434
gas that was consumed. And we need to set this value here. For now, we'll just

14
00:01:01,434 --> 00:01:05,995
use the value of 50 miles per gallon. We'll later see how we can make every car

15
00:01:05,995 --> 00:01:10,308
have it's own fuel efficiency. Now, how do we know we did this right? This

16
00:01:10,308 --> 00:01:13,269
would be good opportunity for a tester program, and that's what I want you to

17
00:01:13,269 --> 00:01:17,776
do next. Write a tester that constructs a new car, fill the car with gas, drive

18
00:01:17,776 --> 00:01:23,751
the car. Show the gas level, after the drive. And most importantly, print the

19
00:01:23,751 --> 00:01:27,681
expected value. That's what makes a detestor. Go ahead and do that in the

20
00:01:27,681 --> 00:01:30,010
coding environment, and then we'll compare notes.
