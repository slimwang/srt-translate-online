1
00:00:00,150 --> 00:00:03,098
There are many variations of using textures to modify the surface's parameters

2
00:00:03,098 --> 00:00:06,700
in the lighting equation. Another way to vary the surface while calculating

3
00:00:06,700 --> 00:00:11,262
illumination is to apply textures as light sources. We've seen how a skybox can

4
00:00:11,262 --> 00:00:15,314
be made to surround a scene. An extremely clever technique is to have surfaces

5
00:00:15,314 --> 00:00:19,020
reflect the skybox. This technique is called reflection mapping, or sometimes

6
00:00:19,020 --> 00:00:23,198
environment mapping. The basic idea is to make one object surrounding the world

7
00:00:23,198 --> 00:00:28,060
something that other objects can reflect. This is called the environment map.

8
00:00:28,060 --> 00:00:31,021
The illumination process is a bit like ray tracing, where a ray is reflected

9
00:00:31,021 --> 00:00:34,993
off a shiny surface and picks up color of any reflected objects. This

10
00:00:34,993 --> 00:00:38,425
difference is that there is only one simple object to reflect, typically a cube

11
00:00:38,425 --> 00:00:42,166
map. Unlike a skybox, the environment map is only used when a shiny surface

12
00:00:42,166 --> 00:00:46,156
needs a reflected color. You can certainly also put a skybox in a scene using

13
00:00:46,156 --> 00:00:49,600
the same cube map. This is commonly done in order to produce a convincing

14
00:00:49,600 --> 00:00:53,491
effect. However, the environment map is a separate object that is part of the

15
00:00:53,491 --> 00:00:57,914
shiny object's material description. That said, skyboxes and reflection maps

16
00:00:57,914 --> 00:01:01,996
work using the same idea. You can think of a skybox as a physical object which

17
00:01:01,996 --> 00:01:06,670
is what we usually do, or you can think of it as a texture function. What is

18
00:01:06,670 --> 00:01:10,149
the color of the skybox in the direction the eye is looking? An environment map

19
00:01:10,149 --> 00:01:13,804
is exactly the same only for reflected rays. What is the color of the

20
00:01:13,804 --> 00:01:18,655
environment map in the reflected direction? How it works is this. We render a

21
00:01:18,655 --> 00:01:22,052
fragment on a reflective surface such as a sphere. We compute the usual

22
00:01:22,052 --> 00:01:26,657
elements as desired such as diffuse ambient and so on. For the environment map,

23
00:01:26,657 --> 00:01:30,520
we also need the direction to the eye and the shading normal at the fragment.

24
00:01:30,520 --> 00:01:33,592
These two vectors are used to compute the reflection direction which is then

25
00:01:33,592 --> 00:01:37,564
used to find the texel on our environment map. This texel color can then be

26
00:01:37,564 --> 00:01:41,100
blended in to the final color of the fragment. The color from the reflection

27
00:01:41,100 --> 00:01:45,125
map makes the surface appear mirror like. The very simplest cube map to reflect

28
00:01:45,125 --> 00:01:48,706
is one that's at infinity. Remember how a directional light came from a certain

29
00:01:48,706 --> 00:01:52,440
direction but was considered infinitely far away? Directional lights are

30
00:01:52,440 --> 00:01:55,002
inexpensive to use because their direction vector never changes for any

31
00:01:55,002 --> 00:01:58,745
surface. Similarly if you define an environment map as being at infinity,

32
00:01:58,745 --> 00:02:01,695
you're saying that no matter where I am in my virtual world, when I look a

33
00:02:01,695 --> 00:02:04,945
certain direction I want to always get the same color back from my environment

34
00:02:04,945 --> 00:02:10,704
map. To sum up, the reflection direction is computed for a reflective surface,

35
00:02:10,704 --> 00:02:14,891
and this direction is then used to access the environment map. This algorithm

36
00:02:14,891 --> 00:02:18,564
has limitations somewhat the reverse of the skybox. The reflected objects are

37
00:02:18,564 --> 00:02:22,544
always seen as being infinitely far away. For example, say you have a

38
00:02:22,544 --> 00:02:26,426
reflective sphere in a room represented by an environment map in a skybox. If

39
00:02:26,426 --> 00:02:28,820
you move the sphere from the center of the room to near a wall, the reflection

40
00:02:28,820 --> 00:02:32,970
of the wall will not look closer. That said, reflection mapping is an

41
00:02:32,970 --> 00:02:36,940
inexpensive way to add convincing visual detail to a model. Our eyes are

42
00:02:36,940 --> 00:02:40,586
usually not very good at reversing the process of reflection. We see something

43
00:02:40,586 --> 00:02:43,776
reflected and our brains interpret the object we're viewing as being shiny. We

44
00:02:43,776 --> 00:02:46,571
don't waste brainpower trying to figure out if the reflections are perfectly

45
00:02:46,571 --> 00:02:49,280
correct, since in the real world they always are.
