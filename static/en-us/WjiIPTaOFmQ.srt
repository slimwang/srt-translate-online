1
00:00:00,350 --> 00:00:03,770
Compuptational clusters are the work horses

2
00:00:03,770 --> 00:00:06,650
of giant scale services, any modern data

3
00:00:06,650 --> 00:00:09,600
centers employs on the order of

4
00:00:09,600 --> 00:00:13,340
thousands and thousands of computational nodes connected

5
00:00:13,340 --> 00:00:17,080
by high performance, high speed networks.

6
00:00:17,080 --> 00:00:19,460
It is such computational clusters, which are

7
00:00:19,460 --> 00:00:25,420
serving as the work horses for giant scale services today. And this figure

8
00:00:25,420 --> 00:00:29,820
reproduced from Eddie Gruer's paper circa 2,000 shows

9
00:00:29,820 --> 00:00:32,750
the number of nodes in a data center, maybe

10
00:00:32,750 --> 00:00:38,110
on the order of 1,000. But scale it up by ten or 100 in terms of today's

11
00:00:38,110 --> 00:00:40,740
computation capacity that you might find in a

12
00:00:40,740 --> 00:00:44,560
typical data center. And the kind of volume of

13
00:00:44,560 --> 00:00:47,390
queries that are going to be handled. By

14
00:00:47,390 --> 00:00:51,250
giant scale services today. Each node in the cluster

15
00:00:51,250 --> 00:00:57,650
may itself be an SMP. There are serveral virtues for structuring the

16
00:00:57,650 --> 00:01:03,760
computational resources inside a data center as a cluster of machines connected

17
00:01:03,760 --> 00:01:06,360
by high performance back planes. The

18
00:01:06,360 --> 00:01:10,090
advantages include absolute scalability. You can

19
00:01:10,090 --> 00:01:13,100
keep adding more resources. Without worrying

20
00:01:13,100 --> 00:01:16,330
about re-architecting the internals of the

21
00:01:16,330 --> 00:01:19,270
data center. Cost and performance is another

22
00:01:19,270 --> 00:01:22,185
important issue and that is by having

23
00:01:22,185 --> 00:01:26,280
computational clusters at every node is identical

24
00:01:26,280 --> 00:01:29,880
to others, is that as a system administrator

25
00:01:29,880 --> 00:01:35,560
we can control both the cost, And the performance of running a data center like

26
00:01:35,560 --> 00:01:38,170
that, and because of the independent components

27
00:01:38,170 --> 00:01:42,100
you can easily mix and match generational changes

28
00:01:42,100 --> 00:01:44,905
in the hardware, and the results are incremental

29
00:01:44,905 --> 00:01:48,220
scaleability you add more resources you get more.

30
00:01:48,220 --> 00:01:50,730
In terms of performance because, as I told

31
00:01:50,730 --> 00:01:53,620
you earlier, most of the queries that come

32
00:01:53,620 --> 00:01:58,270
into giant-scale services tend to be embarrassingly parallel.

33
00:01:58,270 --> 00:02:00,930
So the more resources you've got, the more

34
00:02:00,930 --> 00:02:04,420
queries you can handle. There is incremental scalability

35
00:02:04,420 --> 00:02:07,250
when you're using clusters because you can add more

36
00:02:07,250 --> 00:02:10,970
nodes to the cluster, increasing the performance. Or, if the

37
00:02:10,970 --> 00:02:15,320
volume, of request come down, you can scale back. That's

38
00:02:15,320 --> 00:02:19,770
the advantage of using computational clusters as the work horses

39
00:02:19,770 --> 00:02:22,770
for data centers that are serving giant scale services today.
