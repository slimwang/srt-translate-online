1
00:00:00,000 --> 00:00:02,000
The answer is that yes, we should test it with negative inputs.

2
00:00:02,000 --> 00:00:04,000
Negative inputs are part of the domain of a function,

3
00:00:04,000 --> 00:00:10,000
and one of the basic principles of testing is we should test computer programs

4
00:00:10,000 --> 00:00:12,000
with values sampled from their entire domain.

5
00:00:12,000 --> 00:00:16,000
Sometimes as a software tester, you'll test code with an input

6
00:00:16,000 --> 00:00:19,000
that looks like it should be part of the domain, and the code will malfunction,

7
00:00:19,000 --> 00:00:22,000
will crash with some sort of a bad error,

8
00:00:22,000 --> 00:00:27,000
perhaps maybe not throw an exception but rather actually exit abnormally.

9
00:00:27,000 --> 00:00:29,000
And what you'll do is you'll go to the developer of the function,

10
00:00:29,000 --> 00:00:31,000
you'll go to the developer of the software under test,

11
00:00:31,000 --> 00:00:33,000
and you'll say, "I think I found a bug,"

12
00:00:33,000 --> 00:00:35,000
and they'll tell you something like, "Well, the input that you tried

13
00:00:35,000 --> 00:00:38,000
"is not part of the domain for the software."

14
00:00:38,000 --> 00:00:41,000
That's usually perfectly legitimate.

15
00:00:41,000 --> 00:00:44,000
As long as that kind of fact is documented,

16
00:00:44,000 --> 00:00:46,000
as long as it's clear to the users of the function,

17
00:00:46,000 --> 00:00:52,000
then restrictions on the domain of functions are actually a very valuable tool in practice

18
00:00:52,000 --> 00:00:55,000
because otherwise, without restrictions on domain,

19
00:00:55,000 --> 00:00:58,000
every function that we implement, every piece of software that we implement,

20
00:00:58,000 --> 00:01:03,000
has to contain maximal defensive code against illegal inputs.

21
00:01:03,000 --> 00:01:08,000
And in practice, this kind of defensive coding is not generally possible for all internal interfaces.

22
00:01:08,000 --> 00:01:10,000
For one thing, it makes code extremely slow,

23
00:01:10,000 --> 00:01:13,000
and for another thing, it clutters up code with error checks

24
00:01:13,000 --> 00:01:15,000
that make it completely impossible to find the code

25
00:01:15,000 --> 00:01:17,000
that's actually supposed to be doing something.

26
00:01:17,000 --> 00:01:21,000
So to reiterate, domain researches are a perfectly valid technique

27
00:01:21,000 --> 00:01:25,000
for keeping code simple in the case where these kind of assumptions about input domain

28
00:01:25,000 --> 99:59:59,999
are actually reasonable.
