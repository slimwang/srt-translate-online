1
00:00:00,210 --> 00:00:03,836
So, now we're in a fancy little spot. We can create a physics engine, update

2
00:00:03,836 --> 00:00:06,908
it, delete objects from it, add bodies to it, entities in the environment can

3
00:00:06,908 --> 00:00:11,611
add their own physics bodies and of course update them over time. And now, we

4
00:00:11,611 --> 00:00:14,453
get to the final part of the equation, how we actually drive the entire

5
00:00:14,453 --> 00:00:18,674
simulation from our game engine object. This is a little bit easier than you

6
00:00:18,674 --> 00:00:21,700
think. Inside of our game engine class, we first define the number of physics

7
00:00:21,700 --> 00:00:25,450
updates that we want per frame. Now remember, before, we were talking about the

8
00:00:25,450 --> 00:00:28,474
number of physics loops steps we would like to occur inside of a frame to move

9
00:00:28,474 --> 00:00:32,789
our world forward. In the game engine's setup function, we actually need to

10
00:00:32,789 --> 00:00:37,112
call an initializer on our Global Physics Engine class. And also inside of the

11
00:00:37,112 --> 00:00:40,346
game engine's update function, we need to actually call the physics engine dot

12
00:00:40,346 --> 00:00:44,900
update method so that it'll do a step process on all of the world objects.
