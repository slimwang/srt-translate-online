1
00:00:00,380 --> 00:00:04,380
An operating system provides applications with access to

2
00:00:04,380 --> 00:00:06,130
the underlying hardware.

3
00:00:06,130 --> 00:00:09,570
It does so by exporting a number of services.

4
00:00:09,570 --> 00:00:10,850
At the most basic level,

5
00:00:10,850 --> 00:00:16,030
these services are directly linked to some of the components of the hardware.

6
00:00:16,030 --> 00:00:19,200
For instance, there is a scheduling component that's responsible for

7
00:00:19,200 --> 00:00:23,750
controlling the access to the CPU, or maybe there are even multiple CPUs.

8
00:00:23,750 --> 00:00:28,370
The memory manager is responsible for allocating the underlying physical memory

9
00:00:28,370 --> 00:00:31,460
to one or more co-running applications.

10
00:00:31,460 --> 00:00:35,850
And it also has to make sure that multiple applications don't overwrite each

11
00:00:35,850 --> 00:00:37,780
other's accesses to memory.

12
00:00:37,780 --> 00:00:42,730
A block device driver is responsible for access to a block device like disk.

13
00:00:42,730 --> 00:00:47,310
In addition, the operating system also exports higher-level services that

14
00:00:47,310 --> 00:00:50,220
are linked with higher-level abstractions, as opposed to

15
00:00:50,220 --> 00:00:54,300
those that are linked with abstractions that really map to the hardware.

16
00:00:54,300 --> 00:00:57,220
For instance, the file is a useful abstraction that's supported by

17
00:00:57,220 --> 00:00:59,610
virtually all operating systems.

18
00:00:59,610 --> 00:01:04,360
And in principle, operating systems integrate file system as a service.

19
00:01:04,360 --> 00:01:08,090
In summary, the operating system will have to incorporate a number of

20
00:01:08,090 --> 00:01:11,590
services in order to provide applications and

21
00:01:11,590 --> 00:01:16,430
application developers with a number of useful types of functionality.

22
00:01:16,430 --> 00:01:18,650
This includes process management,

23
00:01:18,650 --> 00:01:23,500
file management, device management, and so forth.

24
00:01:23,500 --> 00:01:27,870
Operating systems make all of these services available via system calls.

25
00:01:27,870 --> 00:01:32,031
For example, here are some system calls in two popular operating systems,

26
00:01:32,031 --> 00:01:33,730
Windows and Unix.

27
00:01:33,730 --> 00:01:37,820
I will not read through this list, but notice although these are two

28
00:01:37,820 --> 00:01:42,846
very different operating systems, the types of system calls and the abstractions

29
00:01:42,846 --> 00:01:47,510
around those systems calls these two OSes provide are very similar.

30
00:01:47,510 --> 00:01:52,447
But process control, creating a process, exiting a process,

31
00:01:52,447 --> 00:01:55,930
waiting for object, creating files, etc.
