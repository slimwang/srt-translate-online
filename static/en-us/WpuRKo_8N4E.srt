1
00:00:00,330 --> 00:00:00,970
All right.

2
00:00:00,970 --> 00:00:02,200
Let's try to do this in code.

3
00:00:03,290 --> 00:00:07,689
I want you to write a function, find_best_match, that takes two arguments,

4
00:00:07,689 --> 00:00:13,110
an image patch and a strip, which is basically the same height as the patch, but

5
00:00:13,110 --> 00:00:15,590
has a width equal to that of the image.

6
00:00:15,590 --> 00:00:18,660
Your function should return the x coordinate where the patch is

7
00:00:18,660 --> 00:00:20,170
found in the strip.

8
00:00:20,170 --> 00:00:21,760
Here is some test code.

9
00:00:21,760 --> 00:00:25,390
Let's load up two images from a stereo pair, left and right.

10
00:00:25,390 --> 00:00:29,450
This is a left image and here is the right one.

11
00:00:29,450 --> 00:00:34,950
If I switch between the two, you can see some key elements moving.

12
00:00:36,070 --> 00:00:39,550
All right, let's convert these to grayscale, double type, and

13
00:00:39,550 --> 00:00:41,299
scale them down to 0, 1 range.

14
00:00:43,090 --> 00:00:46,630
Here are the grayscale versions, left and right.

15
00:00:48,680 --> 00:00:52,990
Okay, let's define the location and size for the patch we want to match.

16
00:00:52,990 --> 00:00:54,949
Let us extract this from the left image.

17
00:00:56,145 --> 00:00:57,400
Here's what the patch looks like.

18
00:00:58,980 --> 00:01:03,040
Using the patch specifications, let's extract a strip from the right image.

19
00:01:04,180 --> 00:01:04,810
Note that here,

20
00:01:04,810 --> 00:01:09,430
since we want to go across the width of the image, we select all the columns.

21
00:01:11,410 --> 00:01:13,240
And here's the strip from the right image.

22
00:01:14,870 --> 00:01:17,040
Once you have implemented your function,

23
00:01:17,040 --> 00:01:22,310
call it by passing in patch_left and strip_right.

24
00:01:22,310 --> 00:01:26,900
You should be able to use the best x coordinate found to extract a patch from

25
00:01:26,900 --> 00:01:27,540
the right image.

26
00:01:29,140 --> 00:01:30,390
Go ahead and give it a shot.
