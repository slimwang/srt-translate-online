1
00:00:00,000 --> 00:00:02,000
So the way this is working,

2
00:00:02,000 --> 00:00:06,000
it does build heap, which we said was Î¸n

3
00:00:06,000 --> 00:00:09,000
or more simply Î¸n (logn).

4
00:00:09,000 --> 00:00:12,000
Then what we're doing is nx.

5
00:00:12,000 --> 00:00:16,000
We're doing remove.mn, which is a (logn) operation,

6
00:00:16,000 --> 00:00:19,000
so we get n (logn) for this loop

7
00:00:19,000 --> 00:00:21,000
plus (L) for the build heap.

8
00:00:21,000 --> 00:00:23,000
It's just n(logn).

9
00:00:23,000 --> 00:00:26,000
It's pretty cool.

10
00:00:26,000 --> 00:00:28,000
There's only a couple of well-known sorting algorithms that give us such a good

11
00:00:28,000 --> 00:00:30,000
running time bound.
