1
00:00:00,090 --> 00:00:02,740
What we just said,
with the web application and

2
00:00:02,740 --> 00:00:07,240
the reading input from a form and

3
00:00:07,240 --> 00:00:11,920
then generating a query,
let's do an example based on that.

4
00:00:11,920 --> 00:00:14,390
So let's say this web
application is running, and

5
00:00:14,390 --> 00:00:16,560
user is going to provide input.

6
00:00:16,560 --> 00:00:19,270
The input they provide is,
let's say the city Redmond.

7
00:00:19,270 --> 00:00:22,570
So if that's the case,
the script is going to generate

8
00:00:22,570 --> 00:00:27,210
the query that says select
star from OrdersTable.

9
00:00:27,210 --> 00:00:27,830
If you go back and

10
00:00:27,830 --> 00:00:32,530
look at the code where basically it's
going to replace the placeholder that we

11
00:00:32,530 --> 00:00:37,850
had for Shipcity by this input that
was just provided by the user.

12
00:00:37,850 --> 00:00:39,840
The script generating this.

13
00:00:39,840 --> 00:00:43,480
And this is what is going to
get submitted to the database.

14
00:00:43,480 --> 00:00:48,900
Now let's get to what kind of mischief
a user who's malicious may do.

15
00:00:48,900 --> 00:00:52,400
So, what if the user, instead of
providing Redmond, is going to provide

16
00:00:52,400 --> 00:00:57,420
something that says Redmond Code,
semi colon, drop table orders table,

17
00:00:57,420 --> 00:01:00,510
drop, this is the particular
table that we're talking about.

18
00:01:00,510 --> 00:01:02,990
What if they entered this whole thing?

19
00:01:02,990 --> 00:01:08,380
Okay, so before we look at this
maybe a little bit of SQL here.

20
00:01:08,380 --> 00:01:14,160
So semicolon separates the statement,
so this statement will end here.

21
00:01:14,160 --> 00:01:17,680
And the next statement is a drop table,
orders table and

22
00:01:17,680 --> 00:01:21,040
drop results in basically, assuming
that you have access to do that,

23
00:01:21,040 --> 00:01:23,230
deletion off this particular table.

24
00:01:23,230 --> 00:01:28,300
So what happened here is that the user
is actually entering a lot more

25
00:01:28,300 --> 00:01:32,660
input than what we expect,
which is just a city name.

26
00:01:32,660 --> 00:01:35,980
So what happens when the user
actually provides this as input?

27
00:01:35,980 --> 00:01:39,045
They're injecting this SQL
injection that we're talking about,

28
00:01:39,045 --> 00:01:41,200
you'll see where
the name now comes from.

29
00:01:41,200 --> 00:01:43,970
In this case the query that we're
going to generate is going to be

30
00:01:43,970 --> 00:01:45,040
this, actually.

31
00:01:45,040 --> 00:01:47,860
So, what this is what we got before.

32
00:01:47,860 --> 00:01:50,600
This is what we're going to get
now because here we're going to

33
00:01:50,600 --> 00:01:55,220
replace the Shipcity variable
value that we read is this one.

34
00:01:55,220 --> 00:01:59,610
So now, essentially we're
giving the database this query.

35
00:01:59,610 --> 00:02:01,880
And now you can see what
really has happened here.

36
00:02:01,880 --> 00:02:07,320
The malicious user that we have is able
to inject code to delete the table,

37
00:02:07,320 --> 00:02:11,510
and that is what we see here after the
semicolon, we see a DROP OrdersTable,

38
00:02:11,510 --> 00:02:16,360
and that's what we generate, and this
will result in deletion of this table.

39
00:02:16,360 --> 00:02:17,705
So, this is the injection.

40
00:02:17,705 --> 00:02:20,030
We're injecting code through input,

41
00:02:20,030 --> 00:02:23,105
that is normally expected
by the web application.

42
00:02:23,105 --> 00:02:25,925
The vulnerability we have in
the web application is that it's

43
00:02:25,925 --> 00:02:27,415
not checking input obviously.

44
00:02:27,415 --> 00:02:32,430
It is accepting this input for
cities where the item is shipped.

45
00:02:32,430 --> 00:02:33,870
Getting a name of course, but

46
00:02:33,870 --> 00:02:36,630
it also there's lot more
stuff that comes after that.

47
00:02:36,630 --> 00:02:38,120
It is accepting this input,

48
00:02:38,120 --> 00:02:42,380
and this input is not correct input
when we looking for just the city name.

49
00:02:42,380 --> 00:02:44,310
So, by providing this input,

50
00:02:44,310 --> 00:02:49,750
it's able to inject malicious code to
drop the table or to delete the table.

51
00:02:49,750 --> 00:02:51,610
This is going to impact its integrity.

52
00:02:51,610 --> 00:02:56,470
And that's actually a concrete
example of what SQL injections are
