1
00:00:00,250 --> 00:00:03,780
Earlier we had this formula for calculating the Euclidean distance in two

2
00:00:03,780 --> 00:00:08,380
dimensions. Now we can generalize it to many dimensions. So

3
00:00:08,380 --> 00:00:11,960
here is a generalization of the previous formula computing nearest neighbor.

4
00:00:11,960 --> 00:00:16,780
In this new formula, both the case and the problem are defined in K dimensions.

5
00:00:16,780 --> 00:00:21,100
And we'll find the Euclidean distance between them in this K space. So

6
00:00:21,100 --> 00:00:25,065
this table summarizes Euclidean distance between the cases and the new problem

7
00:00:25,065 --> 00:00:29,390
in this multidimensional space where we are dealing both with the origin and

8
00:00:29,390 --> 00:00:33,470
the destination, and where the origin as well as the destination are specified

9
00:00:33,470 --> 00:00:38,570
by the x and y coordinates. Looking at this table, we can very quickly see that

10
00:00:38,570 --> 00:00:44,670
D and not B or E, is the closest case, your most similar case, linear problem Q.

11
00:00:44,670 --> 00:00:49,290
This method is called the KNN method where NN stands here for nearest neighbor,

12
00:00:49,290 --> 00:00:54,720
K nearest neighbor method. This is a probably method as simple as it is.

13
00:00:54,720 --> 00:00:59,980
Of course, it also has limitations. One limitations is that, in the real world,

14
00:00:59,980 --> 00:01:03,620
the number of dimensions in which I might want to compute the distance between

15
00:01:03,620 --> 00:01:09,593
the new problem and old cases might be very large, a high dimensional low space.

16
00:01:09,593 --> 00:01:14,700
In such a situation, deciding which of the stored cases is closest to the new

17
00:01:14,700 --> 00:01:19,270
problem may not be as simple as it appears here. A second difficulty with this

18
00:01:19,270 --> 00:01:23,750
method is, that even if the new problem isn't very close to an existing case,

19
00:01:23,750 --> 00:01:27,250
that does not mean that the existing cases solution can or

20
00:01:27,250 --> 00:01:29,880
should be darkly applied to the new problem.

21
00:01:29,880 --> 00:01:35,140
So, we need both alternative methods of retrieving cases from memory, and

22
00:01:35,140 --> 00:01:40,036
methods for adapting passed cases to fit the requirements of the new problem.

23
00:01:40,036 --> 00:01:44,150
That is called [UNKNOWN] and we will discuss that in the next lesson.
