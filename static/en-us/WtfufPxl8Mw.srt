1
00:00:00,080 --> 00:00:02,660
So the answer is actually zero seconds that this will

2
00:00:02,660 --> 00:00:05,710
take very little time. It won't be exactly no time

3
00:00:05,710 --> 00:00:08,080
but very close to zero seconds. And the very reason

4
00:00:08,080 --> 00:00:11,460
for this is because of both the way make_big_index works.

5
00:00:11,460 --> 00:00:14,680
Which creates an index where the words start with four

6
00:00:14,680 --> 00:00:18,060
A's, and we keep increasing the letters as we go.

7
00:00:18,060 --> 00:00:21,940
So that means the index created by make_big_index passing in

8
00:00:21,940 --> 00:00:25,680
any number. The first entry in that index will always

9
00:00:25,680 --> 00:00:28,490
be aaaaaaaa, and so when we do the lookup, the way

10
00:00:28,490 --> 00:00:31,060
lookup works, it goes through the entries in order, and it's

11
00:00:31,060 --> 00:00:33,680
going to find the first entry right away. So the point

12
00:00:33,680 --> 00:00:37,590
I want to make with this quiz is that the execution time

13
00:00:37,590 --> 00:00:40,680
depends on both the size of the input, and sometimes it

14
00:00:40,680 --> 00:00:42,970
depends on the actual input. So here the size of the

15
00:00:42,970 --> 00:00:45,700
index is very big, because we looked up a word that's

16
00:00:45,700 --> 00:00:48,370
at the very beginning of the index, the lookup is very fast.
