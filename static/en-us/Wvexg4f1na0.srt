1
00:00:00,000 --> 00:00:02,390
So, by now, we know two types of RAM machine.

2
00:00:02,390 --> 00:00:06,399
The first one here on the left is the one that we introduced in the first unit

3
00:00:06,399 --> 00:00:09,449
and it does not allow to use the if-better function.

4
00:00:09,449 --> 00:00:12,950
So, this is something that is although as we discussed

5
00:00:12,950 --> 00:00:14,720
it has some differences to your standard computer.

6
00:00:14,720 --> 00:00:17,780
It is more or less close to your normal computer.

7
00:00:17,780 --> 00:00:21,820
And here on the right side, we have the RAM with the if-better function

8
00:00:21,820 --> 00:00:24,269
and this of course is a much more powerful machine

9
00:00:24,269 --> 00:00:26,420
so as you can see it is buzzing with computational power here

10
00:00:26,420 --> 00:00:33,520
and this is totally unlike your standard computer because it has this guessing function about n

11
00:00:33,520 --> 00:00:37,100
and of course, if somebody asked us to build this sort of RAM machine

12
00:00:37,100 --> 00:00:41,680
at least I would turn them down immediately because it's not clear at all

13
00:00:41,680 --> 00:00:43,740
how we should write such a function.

14
00:00:43,740 --> 00:00:49,210
It seems far too powerful and at least to me frankly also a bit mysterious.

15
00:00:49,210 --> 00:00:52,840
So, that's also basically the difference between the two machines

16
00:00:52,840 --> 00:00:59,620
because here on the standard RAM, it's very clear what each of the functions that it has does.

17
00:00:59,620 --> 00:01:04,330
Actually, if you know what the machine is currently doing then you can always predict

18
00:01:04,330 --> 00:01:08,569
what it will do next because for every instruction it's very clear what it does

19
00:01:08,569 --> 00:01:13,700
given certain variables or inputs and not so with the RAM that uses if-better function above.

20
00:01:13,700 --> 00:01:18,890
Actually, most of the time unless this function is use, it's still clear what happens next

21
00:01:18,890 --> 00:01:23,330
but every time this function here is called, we don't really know what's going to happen next.

22
00:01:23,330 --> 00:01:26,610
It seems as if only this function here kind of knows.

23
00:01:26,610 --> 00:01:31,920
Or if you put it in another way, if you go through an algorithm that is written on a standard RAM

24
00:01:31,920 --> 00:01:36,070
then you can basically go through it step by step by step by hand

25
00:01:36,070 --> 00:01:39,180
and say how its going to behave.

26
00:01:39,180 --> 00:01:42,830
For this RAM over here, you could also go through it step, by step, by step

27
00:01:42,830 --> 00:01:47,979
but once you encounter this if-better function here, you could not really say what its going to do next.

28
00:01:47,979 --> 00:01:52,330
You would have to try different cases and so in order to better distinguish those two models,

29
00:01:52,330 --> 00:01:55,630
there is a special terminology in theoretical computer science

30
00:01:55,630 --> 00:01:58,800
called determinism and non-determinism.

31
00:01:58,800 --> 00:02:03,280
And this standard RAM machine because we always know what's going to happen next

32
00:02:03,280 --> 00:02:09,448
is called deterministic and surprise this one over here is called non-deterministic.

33
00:02:09,448 --> 00:02:13,230
Now, it's very important that you familiarize yourself with those two terms

34
00:02:13,230 --> 00:02:16,980
because we're going to use them a lot in this course,

35
00:02:16,980 --> 00:02:20,770
and just to make you think about them a little bit more, I would like to do a little quiz with you.

36
00:02:20,770 --> 00:02:22,060
So, what I would like you to think about is,

37
00:02:22,060 --> 00:02:28,820
if you're using the if-better function in a program and we run the same program code multiple times,

38
00:02:28,820 --> 00:02:32,710
can we get different solutions if we're running it on the same input

39
00:02:32,710 --> 00:02:34,680
or will we always get the same solution?

40
00:02:34,680 --> 00:02:40,140
So if you think that non-determinism can produce different solutions on the same input

41
00:02:40,140 --> 99:59:59,999
using the same code then please check yes, otherwise, check no.
