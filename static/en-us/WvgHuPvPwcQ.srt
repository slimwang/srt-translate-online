1
00:00:00,150 --> 00:00:03,710
Let's look at the solution to our multiple predictions quiz.

2
00:00:03,710 --> 00:00:06,970
Branches are result in the third stage which means,

3
00:00:06,970 --> 00:00:12,750
that, we will fetch this branch, and then we will fetch this.

4
00:00:12,750 --> 00:00:19,870
And then we will fetch this. And at that point, this branch will be here and

5
00:00:19,870 --> 00:00:24,660
be resolved. So we will cancel this and this instruction, and

6
00:00:24,660 --> 00:00:30,905
start fetching from X and then Y. So overall, we have wasted two cycles.

7
00:00:30,905 --> 00:00:37,630
Note that this penalty here is the same as if the second instruction here was

8
00:00:37,630 --> 00:00:43,470
not a branch at all. So basically here we actually mis-predicted two branches.

9
00:00:43,470 --> 00:00:49,890
But the second one was mis-predicted in the shadow of the first mis-prediction.

10
00:00:49,890 --> 00:00:54,440
This branch would never have been fetched if we predicted this correctly.

11
00:00:55,750 --> 00:00:59,920
However, the penalty's unaffected. So when we mis-predict a branch,

12
00:00:59,920 --> 00:01:04,000
we just need to worry about getting on the correct path and we pay a penalty for

13
00:01:04,000 --> 00:01:09,380
that, but we don't pay additional penalties. For mis-predicted branches that

14
00:01:09,380 --> 00:01:14,190
themselves should never have been executed because of mis-predictions.

15
00:01:14,190 --> 00:01:20,300
Let's see why this is so. It is because the first branch here results

16
00:01:20,300 --> 00:01:25,200
in flushing the pipeline when it gets to the stage where branches are resolve.

17
00:01:25,200 --> 00:01:29,870
The branch that was fetched after it is at that time here. And

18
00:01:29,870 --> 00:01:33,740
the instruction A is here. And what now happens is,

19
00:01:33,740 --> 00:01:39,300
we flush the pipeline by converting these two into pipeline bubbles. And

20
00:01:39,300 --> 00:01:44,120
next cycle, we will be fetching X. So what happens is really

21
00:01:44,120 --> 00:01:50,230
if a branch has been fetched in error because of a previous mis-prediction,

22
00:01:50,230 --> 00:01:55,320
that branch never gets a chance to cause a pipeline flush, because it

23
00:01:55,320 --> 00:02:00,293
itself gets flushed before that. And that's why we had a two cycle penalty. And

24
00:02:00,293 --> 00:02:05,500
not four cycles of penalty because technically these two were miss predicted.

25
00:02:05,500 --> 00:02:10,680
But really this one should have never been executed in the first place. But

26
00:02:10,680 --> 00:02:15,910
this one was flushed before it could trigger a flush of it's own.
