1
00:00:00,390 --> 00:00:04,320
How is the operating system
able to meet the requirements

2
00:00:04,320 --> 00:00:06,460
that we have identified for it?

3
00:00:06,460 --> 00:00:12,400
And one of them is this requirement
that the trusted part be isolated and

4
00:00:12,400 --> 00:00:16,900
not be tampered with by the untrusted
application or the user code.

5
00:00:16,900 --> 00:00:18,280
For us to be able to do that,

6
00:00:18,280 --> 00:00:21,640
we're going to see that we going to
need help from the hardware.

7
00:00:21,640 --> 00:00:24,540
Okay so,
remember operating system layered on top

8
00:00:24,540 --> 00:00:26,020
of the hardware that we have.

9
00:00:26,020 --> 00:00:30,940
But, the hardware has to implement
certain functionality and that

10
00:00:30,940 --> 00:00:37,050
has to do with protecting memory where
the trusted system is going to reside.

11
00:00:37,050 --> 00:00:40,910
And so
the hardware is going to help us protect

12
00:00:40,910 --> 00:00:44,960
the trusted part of the system
from untrusted applications.

13
00:00:44,960 --> 00:00:47,760
And that is actually going to be

14
00:00:47,760 --> 00:00:52,410
the reason we're going to able to
isolate it or make it time for proof.

15
00:00:52,410 --> 00:00:57,370
When you talk about isolating then,
we also ever talk about, well something

16
00:00:57,370 --> 00:01:01,570
has to be different when you're
executing user or application code.

17
00:01:01,570 --> 00:01:05,390
Worse is when you actually go into the
operating system or when your executing

18
00:01:05,390 --> 00:01:10,390
their trusted software that
makes up the operating system.

19
00:01:10,390 --> 00:01:14,390
Well the hardware actually's going to
do something else for us that

20
00:01:14,390 --> 00:01:19,300
processor that is executing actually
is going to execute in different modes.

21
00:01:19,300 --> 00:01:23,330
Execution modes say either
I am executing user code

22
00:01:23,330 --> 00:01:27,670
that is in our trusted, or
I am executing system code.

23
00:01:27,670 --> 00:01:33,040
So the processor is actually aware of
what kind of code it is executing.

24
00:01:33,040 --> 00:01:35,840
So one obvious thing we can do
when it's executing user code for

25
00:01:35,840 --> 00:01:38,660
example the process I'm in user mode.

26
00:01:38,660 --> 00:01:42,380
I shouldn't be touching anything that
belongs to the operating system or

27
00:01:42,380 --> 00:01:44,170
the trusted base that we have.

28
00:01:44,170 --> 00:01:46,180
The trusted computing base that we have.

29
00:01:46,180 --> 00:01:48,520
When I'm executing in the system mode.

30
00:01:48,520 --> 00:01:51,360
Then I'm allowed to access the code and

31
00:01:51,360 --> 00:01:53,630
the data that makes up
the trusted system.

32
00:01:53,630 --> 00:01:58,240
So the hardware is sort of aware of
what is going on at a given time.

33
00:01:58,240 --> 00:02:01,920
In particular what execution
mode is it running in.

34
00:02:01,920 --> 00:02:03,060
The execution mode for

35
00:02:03,060 --> 00:02:06,900
this goes by a different name it
is also called execution rings.

36
00:02:06,900 --> 00:02:11,280
So ring is sort of think about
a privilege level in some sense.

37
00:02:11,280 --> 00:02:15,220
When you are in the system mode,
you have the highest privileges and

38
00:02:15,220 --> 00:02:19,280
there could be many of these in fact
several processor architectures support

39
00:02:19,280 --> 00:02:20,650
more than two.

40
00:02:20,650 --> 00:02:23,060
And I'm just talking with user and
system.

41
00:02:23,060 --> 00:02:27,640
But, the innermost ring, where
the trusted computing base resides,

42
00:02:27,640 --> 00:02:28,710
the most privileged.

43
00:02:28,710 --> 00:02:32,850
As you move out of that, you, for
example, could move into the user ring.

44
00:02:32,850 --> 00:02:36,040
And then your privileges are reduced,
because you can't access what

45
00:02:36,040 --> 00:02:39,250
can be accessed by being in
the trusted computing base.

46
00:02:39,250 --> 00:02:42,880
So this execution mode that we're
talking about, whether you're in system

47
00:02:42,880 --> 00:02:46,510
mode or user mode, you can also
say you are in the ring that

48
00:02:46,510 --> 00:02:51,580
you reside in when you are in system
mode versus the user ring, or mode.

49
00:02:51,580 --> 00:02:55,240
So it goes by different names,
either execution modes,

50
00:02:55,240 --> 00:02:58,180
system, supervisor,
a variety of these names.

51
00:02:58,180 --> 00:03:01,030
But the idea here is
that the processor for

52
00:03:01,030 --> 00:03:05,690
the hardware knows that it's,
you know, execution state is such

53
00:03:05,690 --> 00:03:08,580
the state indicates the mode
that we're talking about.

54
00:03:08,580 --> 00:03:13,040
So it's either running with higher level
of privileges, it can do certain things

55
00:03:13,040 --> 00:03:17,047
that it's only allowed to do when
it's running the trusted code, or

56
00:03:17,047 --> 00:03:24,530
it's executing the non-trusted or
untrusted code when it's in user mode.

57
00:03:24,530 --> 00:03:29,439
So again, memory protection but
then this processor being aware of

58
00:03:29,439 --> 00:03:33,770
what its execution mode is, that's
something else that we're going to need

59
00:03:33,770 --> 00:03:38,980
to meet the trusted computing base
that we had identified for ourselves.

60
00:03:38,980 --> 00:03:41,270
So, if you are in different modes,

61
00:03:41,270 --> 00:03:46,150
we said you should be able to do more
things when you are in the system or

62
00:03:46,150 --> 00:03:51,450
more privileged mode, compared to when
you are in user or less privileged mode.

63
00:03:51,450 --> 00:03:55,630
Well, certain hardware instructions,
they're called privileged instructions.

64
00:03:55,630 --> 00:04:01,060
They can only be executed when the
processor is in the inner most ring or

65
00:04:01,060 --> 00:04:04,050
the most privileged ring or
is in the system mode.

66
00:04:04,050 --> 00:04:06,310
Or ring zero it's called.

67
00:04:06,310 --> 00:04:10,400
Zero is the most privileged and
you go out, zero, one, two, three and

68
00:04:10,400 --> 00:04:11,330
become less privileged.

69
00:04:11,330 --> 00:04:14,220
So privileged instructions
are special instructions

70
00:04:14,220 --> 00:04:18,050
that you cannot execute when
you are in the user mode.

71
00:04:18,050 --> 00:04:21,200
Okay lot of times these
instructions sort of

72
00:04:21,200 --> 00:04:25,120
help you figure out what parts of
memory you access for example.

73
00:04:25,120 --> 00:04:29,220
Or these are hardware devices
that we have need to control.

74
00:04:29,220 --> 00:04:32,080
These kinds of instructions
direct access to the hardware

75
00:04:32,080 --> 00:04:34,562
we said is not available to user code.

76
00:04:34,562 --> 00:04:39,220
Similarly what parts of memory you
can access can not be manipulated

77
00:04:39,220 --> 00:04:40,050
at user level.

78
00:04:40,050 --> 00:04:43,580
If it could be then you can go
access somebody else's memory.

79
00:04:43,580 --> 00:04:47,070
So those kind of actions require

80
00:04:47,070 --> 00:04:51,690
user instructions that can only
be executed in the system mode.

81
00:04:51,690 --> 00:04:55,500
And these instructions are called
privileged instructions or instructions

82
00:04:55,500 --> 00:05:00,670
that can be executed in high privileged
level, a ring or more that you're in.

83
00:05:00,670 --> 00:05:04,200
So one of the ways in which
we're going to be able to meet

84
00:05:04,200 --> 00:05:09,220
the requirements that we identified for
a trusted computing base is by

85
00:05:09,220 --> 00:05:14,210
making use of a number of different
things the hardware does for us.

86
00:05:14,210 --> 00:05:16,140
It has memory protection,

87
00:05:16,140 --> 00:05:19,100
it gives us these execution
modes we're talking about.

88
00:05:19,100 --> 00:05:22,980
It also has special instructions
that cannot be executed

89
00:05:22,980 --> 00:05:24,770
when we are not in the right mode.

90
00:05:24,770 --> 00:05:30,070
So, with this support from the hardware,
we will see we will be able to do

91
00:05:30,070 --> 00:05:34,140
isolation or the tamper resistance
that is one of the requirements for

92
00:05:34,140 --> 00:05:35,280
a trusted computing base.
