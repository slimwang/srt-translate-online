1
00:00:00,710 --> 00:00:03,310
So here are the solutions
to these five questions.

2
00:00:03,310 --> 00:00:08,420
So first the two activities are named
CatalogActivity and the EditorActivity.

3
00:00:09,960 --> 00:00:13,810
Secondly, the type of button that we're
using to connect the two activities

4
00:00:13,810 --> 00:00:14,950
is a floating action button.

5
00:00:16,160 --> 00:00:17,890
So notice that the toggle button,

6
00:00:17,890 --> 00:00:20,490
if we looked it up in the documentation
is sort of like an on and

7
00:00:20,490 --> 00:00:25,580
off switch, whereas the spinner
is similar to a drop down menu.

8
00:00:25,580 --> 00:00:30,170
Third, which of these menu options
exists in either activity?

9
00:00:30,170 --> 00:00:31,920
Well, there's a delete
all pets menu option,

10
00:00:33,000 --> 00:00:34,950
as well as an insert
dummy data menu option.

11
00:00:34,950 --> 00:00:37,830
Now for the fourth question

12
00:00:37,830 --> 00:00:41,650
asking what view allows us to show
a dropdown menu for the spinner?

13
00:00:41,650 --> 00:00:43,840
In this case we used a spinner.

14
00:00:43,840 --> 00:00:47,580
You might have looked up what the picker
was in the Android documentation and

15
00:00:47,580 --> 00:00:50,490
if you did, you would have seen that
it's a dialogue that's commonly used to

16
00:00:50,490 --> 00:00:52,440
set dates and times.

17
00:00:52,440 --> 00:00:55,500
Whereas the checkbox is
just a simple checkbox,

18
00:00:55,500 --> 00:00:57,930
used to help the user select an option.

19
00:00:57,930 --> 00:01:02,650
And for the last question of what
activity method did we need to override

20
00:01:02,650 --> 00:01:04,840
in order to handle
the menu option clicks?

21
00:01:04,840 --> 00:01:08,708
Well, that would have been
the onOptionsItemSelected().

22
00:01:08,708 --> 00:01:13,200
So the onCreateOptionsMenu method
creates the options menu in the app bar

23
00:01:13,200 --> 00:01:17,390
while this one specifically
the onOptionsItemSelected method

24
00:01:17,390 --> 00:01:20,000
will help us set up what should
happen when the user selects one of

25
00:01:20,000 --> 00:01:21,630
the options from the menu.

26
00:01:21,630 --> 00:01:25,030
So we don't need to use
the onClick here because we have

27
00:01:25,030 --> 00:01:28,170
this method here specifically
handling menu clicks.

28
00:01:28,170 --> 00:01:30,940
Now let's take a more detailed
look into the starter code and

29
00:01:30,940 --> 00:01:32,840
see where we found all these answers.

30
00:01:33,940 --> 00:01:37,100
So once you've downloaded a starter
code run the app on your device, this is

31
00:01:37,100 --> 00:01:41,000
the first screen that should open up and
this is our catalog activity.

32
00:01:41,000 --> 00:01:44,160
So eventually we'll be building it out
so the catalog activity displays a list

33
00:01:44,160 --> 00:01:46,720
of all the pets that are in
our shelter database.

34
00:01:46,720 --> 00:01:50,380
Now down in this bottom right corner
here is our floating action button.

35
00:01:50,380 --> 00:01:54,770
So clicking on it takes us to our
second activity, our editor activity.

36
00:01:54,770 --> 00:01:58,470
So this screen allows the user to input
information about a specific pet for

37
00:01:58,470 --> 00:02:02,350
just the name, the breed,
the gender, and the weight.

38
00:02:02,350 --> 00:02:05,640
I also want to point out that the gender
here uses a spinner, which allows

39
00:02:05,640 --> 00:02:10,310
the user to select from a limited list
of three choices about the pet's gender.

40
00:02:10,310 --> 00:02:13,030
Now up here in the tool bar
there's a couple things going on.

41
00:02:13,030 --> 00:02:14,870
First, there's a save button.

42
00:02:14,870 --> 00:02:18,130
Notice currently clicking on
it doesn't do any action.

43
00:02:18,130 --> 00:02:21,060
Eventually we'll be building it up so
that clicking that button

44
00:02:21,060 --> 00:02:24,260
allows the user to save
information off into the database.

45
00:02:24,260 --> 00:02:26,550
To the right of it is
this overflow menu.

46
00:02:26,550 --> 00:02:29,470
Now clicking on that
pulls up a delete option.

47
00:02:29,470 --> 00:02:32,100
This right now also doesn't
do any specific action.

48
00:02:32,100 --> 00:02:33,780
But eventually we'll
be building it out so

49
00:02:33,780 --> 00:02:38,020
that the user can delete a pet that was
incorrectly entered into the table.

50
00:02:38,020 --> 00:02:40,190
Now back here is that up arrow,

51
00:02:40,190 --> 00:02:43,090
it allows us to navigate
back to the parent activity.

52
00:02:43,090 --> 00:02:47,000
And the parent activity here
is our catalog activity.

53
00:02:47,000 --> 00:02:50,540
So notice here in the catalog activity
it also has an overflow menu.

54
00:02:50,540 --> 00:02:53,330
Now clicking on that
displays two options.

55
00:02:53,330 --> 00:02:56,920
Either inserting dummy data,
or deleting all the pets.

56
00:02:56,920 --> 00:02:59,590
Neither of these doing action just yet
as well, and

57
00:02:59,590 --> 00:03:01,990
don't worry we'll make sure
that we build those out.

58
00:03:01,990 --> 00:03:04,070
All right so now that we know
what the app looks like,

59
00:03:04,070 --> 00:03:05,790
let's take a look at the code.

60
00:03:05,790 --> 00:03:08,480
So let's start with our
Android manifest file.

61
00:03:08,480 --> 00:03:11,120
So this file contains all
the important information

62
00:03:11,120 --> 00:03:13,800
about our app that the Android
system needs to know.

63
00:03:13,800 --> 00:03:18,200
Things such as the package name,
the app name and activity names.

64
00:03:18,200 --> 00:03:20,360
Now if we have an app that
has multiple activities,

65
00:03:20,360 --> 00:03:24,710
the AndroidManifest also indicates
which activity is the parent activity.

66
00:03:24,710 --> 00:03:26,840
In our case, it's the CatalogActivity.

67
00:03:27,890 --> 00:03:29,810
Next, expanding out the Java folder.

68
00:03:29,810 --> 00:03:32,570
We see this is where all
the logic of the app happens.

69
00:03:32,570 --> 00:03:35,150
Let's skip over that for now and
head over to the res folder.

70
00:03:35,150 --> 00:03:36,230
And remember,

71
00:03:36,230 --> 00:03:40,140
here is where we store everything that
is related to the appearance of the app.

72
00:03:40,140 --> 00:03:45,180
So things such as XML files,
images, and other media files.

73
00:03:45,180 --> 00:03:49,990
Now on the layout folder here,
we have our activity_layout.xml file and

74
00:03:49,990 --> 00:03:52,070
our activity_editor.xml file.

75
00:03:52,070 --> 00:03:55,700
So these two files define the layout for
the two screens of our app.

76
00:03:55,700 --> 00:03:58,790
And back under the res folder,
we have our mipmap folder.

77
00:03:58,790 --> 00:04:01,140
And remember these are specific for

78
00:04:01,140 --> 00:04:04,580
building out our app icons and
that is a big icon.

79
00:04:04,580 --> 00:04:10,335
All right, so back to our resources
folder we have our values folder.

80
00:04:10,335 --> 00:04:15,455
And inside here we can define files that
define the colors, the text strings and

81
00:04:15,455 --> 00:04:20,060
the style, as well as any string
arrays that we're using in this app.

82
00:04:20,060 --> 00:04:25,010
So specifically in this app we're using
an array to store the gender options.

83
00:04:25,010 --> 00:04:28,580
Remember here we saw that gender
is stored in a spinner and

84
00:04:28,580 --> 00:04:29,862
has three different options.

85
00:04:29,862 --> 00:04:32,990
All right,
let's head back to Java folder.

86
00:04:32,990 --> 00:04:37,310
So first off is the CatalogActivity and
this was the mainstream of the app

87
00:04:37,310 --> 00:04:40,630
where the pet information
will eventually be displayed.

88
00:04:40,630 --> 00:04:43,830
Now when this activity
is created in onCreate,

89
00:04:43,830 --> 00:04:47,680
a floating action button is
set up using a click listener.

90
00:04:47,680 --> 00:04:50,700
And this we'll use an intent to
open up our editor activity.

91
00:04:51,850 --> 00:04:57,490
Now following that, is this method
here onCreate options menu.

92
00:04:57,490 --> 00:05:01,010
And this creates the options
menu in the app bar.

93
00:05:01,010 --> 00:05:05,460
The following method here, the on
options item selecting method, allows us

94
00:05:05,460 --> 00:05:09,520
to set up what happens when the user
actually selects one of those options.

95
00:05:09,520 --> 00:05:14,075
So currently the two options that
exist are insert dummy data and

96
00:05:14,075 --> 00:05:16,025
then deleting all the entries.

97
00:05:16,025 --> 00:05:19,285
But right now they're not
setup to do anything just yet.

98
00:05:19,285 --> 00:05:21,915
So lastly let's check
out the editor activity.

99
00:05:21,915 --> 00:05:25,780
So this activity is where the user
can either create a new pet or

100
00:05:25,780 --> 00:05:28,270
edit information about an existing one.

101
00:05:28,270 --> 00:05:31,710
So up top, we have several
private edit text variables

102
00:05:31,710 --> 00:05:35,250
as well as a variable
down here called mGender.

103
00:05:35,250 --> 00:05:40,330
So this variable sorts an integer value
that corresponds the gender of the pet.

104
00:05:40,330 --> 00:05:42,550
So note that we can
only have three values.

105
00:05:42,550 --> 00:05:45,100
0 that corresponds with unknown.

106
00:05:45,100 --> 00:05:47,650
1 that corresponds with male.

107
00:05:47,650 --> 00:05:49,070
And 2 that corresponds with female.

108
00:05:50,200 --> 00:05:55,130
Now further down in this activity,
we have the onCreate method.

109
00:05:55,130 --> 00:05:59,680
And here's where we connect all those
edit text variables to their views.

110
00:05:59,680 --> 00:06:03,010
So all these added text
variables to their views.

111
00:06:03,010 --> 00:06:05,320
And we also setup our
drop down spinner here.

112
00:06:06,470 --> 00:06:09,440
Now in order to populate this
spinner with the list of options,

113
00:06:09,440 --> 00:06:11,810
we needed to create an ArrayAdapter.

114
00:06:11,810 --> 00:06:14,990
And that uses the string array that
we saw earlier that existed in

115
00:06:14,990 --> 00:06:16,350
the res file.

116
00:06:16,350 --> 00:06:18,370
So remember this one here, and so

117
00:06:18,370 --> 00:06:21,760
that corresponds with this name here,
this array gender options.

118
00:06:22,820 --> 00:06:26,080
So for this spinner we also
specify its layout and

119
00:06:26,080 --> 00:06:28,390
the drop down style of the spinner.

120
00:06:29,620 --> 00:06:34,010
So when the user selects an item from
that drop down spinner, this one here,

121
00:06:34,010 --> 00:06:38,220
we check that selection,
do they select male, female, or unknown?

122
00:06:38,220 --> 00:06:40,930
And depending on which
one they selected,

123
00:06:40,930 --> 00:06:43,430
we set the variable mgender
to the appropriate value.

124
00:06:44,580 --> 00:06:47,950
Now because we've created
an instants of the abstract adapter

125
00:06:47,950 --> 00:06:50,635
variable class here,
and we did that inline.

126
00:06:50,635 --> 00:06:55,436
We're required to define this
method onNothingSelected,

127
00:06:55,436 --> 00:06:57,275
and I called that out
in the comment here.

128
00:06:58,405 --> 00:07:02,335
So if nothing is selected, then by
default mgender is set to unknown.

129
00:07:02,335 --> 00:07:04,845
All right so
the last thing you'll want to call out

130
00:07:04,845 --> 00:07:09,785
in the editor activity here is
the onOptionsItemSelected method.

131
00:07:09,785 --> 00:07:14,225
So remember this method here allows
us to set up what action happens when

132
00:07:14,225 --> 00:07:16,750
a user selects something from the menu.

133
00:07:16,750 --> 00:07:20,845
So the last thing I want to call out
here is the onOptionsItemSelected method

134
00:07:20,845 --> 00:07:22,860
in the EditorActivity.

135
00:07:22,860 --> 00:07:27,430
So here we can set up what happens
when the user clicks on a menu option

136
00:07:27,430 --> 00:07:29,860
in the app bar overflow menu.

137
00:07:29,860 --> 00:07:32,090
So remember we had our three options.

138
00:07:32,090 --> 00:07:34,630
So one the saving check mark.

139
00:07:34,630 --> 00:07:37,100
Currently it's not set up
to do anything just yet.

140
00:07:37,100 --> 00:07:40,780
Next we have our delete menu option
also not plugged in to any action.

141
00:07:40,780 --> 00:07:45,690
And then lastly, this android.R.id.home
case which allows the user to

142
00:07:45,690 --> 00:07:49,550
navigate back up to the parent activity
which is our catalog activity.
