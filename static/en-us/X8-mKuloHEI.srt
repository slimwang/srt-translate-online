1
00:00:00,000 --> 00:00:05,890
Now, let's get a little bit more work done with some adjacency matrices,

2
00:00:05,890 --> 00:00:07,840
just so you can get a bit more comfortable.

3
00:00:07,840 --> 00:00:10,140
So let's talk about inverse graphs.

4
00:00:10,140 --> 00:00:15,030
In the unit, we discussed how to create the inverse graph as a graph

5
00:00:15,030 --> 00:00:17,100
that helps us solve the clique problem.

6
00:00:17,100 --> 00:00:22,110
So, for example, the inverse graph of the graph that I drew before would be the graph

7
00:00:22,110 --> 00:00:26,380
with the red edges here, so quite a different graph here.

8
00:00:26,380 --> 00:00:29,350
Now, how do you represent this as an adjacency matrix.

9
00:00:29,350 --> 00:00:35,170
Well, to diagnose is the because we're not allowing loops anywhere in here, so the diagnose to 0's,

10
00:00:35,170 --> 00:00:42,280
and you know when once we have in the adjacency matrix are from the D to A or from A to D

11
00:00:42,280 --> 00:00:47,060
so the matrices is symmetric and from B to D and everything else is 0--

12
00:00:47,060 --> 00:00:51,190
means that all of these edges disappear in the inverse graph.

13
00:00:51,190 --> 00:00:54,770
Now, how do you represent this in Python.

14
00:00:54,770 --> 00:00:59,190
Well, an easy way to represent a matrix in Python is as a list of list,

15
00:00:59,190 --> 00:01:02,400
so to look at some output of some code,

16
00:01:02,400 --> 00:01:06,870
we define a completely empty graph here. Now, we print the graph we see.

17
00:01:06,870 --> 00:01:15,050
But this is just a list of list with five 0's in our list, and if we invert this graph,

18
00:01:15,050 --> 00:01:19,460
when we see that we get the graph of all 1's except for the diagonal here

19
00:01:19,460 --> 00:01:21,870
of course since we don't have any loops.

20
00:01:21,870 --> 00:01:27,440
So what I want you to do is write an inverse graph function such that it takes a graph

21
00:01:27,440 --> 00:01:35,280
or a list of list and outputs a list of list, which is the inverse of the input graph.
