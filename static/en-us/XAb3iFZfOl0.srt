1
00:00:00,000 --> 00:00:08,883
For this question you're asked to record the number of clicks for a URL for a given keyword.

2
00:00:08,883 --> 00:00:14,992
So when the URL is chosen for that keyword and the user clicks on it.

3
00:00:14,992 --> 00:00:18,525
Now this is so that we have a measure of the popularity for the URL,

4
00:00:18,525 --> 00:00:22,252
and so the search results can be ordered on that.

5
00:00:22,252 --> 00:00:27,367
In order to do this we're going to have to change the stucture of our index

6
00:00:27,367 --> 00:00:30,983
so that we have the count associated with each URL

7
00:00:30,983 --> 00:00:38,993
and in order to do that we're going to replace the URL with a list which is url, count.

8
00:00:38,993 --> 00:00:45,623
That means that everytime we have the url we have to replace it with a list [url,0]

9
00:00:45,623 --> 00:00:49,487
because the count initally will be 0.

10
00:00:49,487 --> 00:00:51,506
That changes the structure.

11
00:00:51,506 --> 00:00:58,275
What we haven't yet done is taken into consideration the duplicate elements.

12
00:00:58,275 --> 00:01:04,687
We're going to do something similar to the previous question where you were asked to remove duplicates.

13
00:01:04,687 --> 00:01:11,829
from the index but this time it's going to be slightly different because of this structure of url, count.

14
00:01:11,829 --> 00:01:16,665
We're going to check we have the keyword as before

15
00:01:16,665 --> 00:01:18,094
then when we have the keyword,

16
00:01:18,094 --> 00:01:21,081
we're going to loop through this list here

17
00:01:21,081 --> 00:01:27,433
and we're going to check whether each element in the list here,

18
00:01:27,433 --> 00:01:31,119
whether the first position in that is our URL.

19
00:01:31,119 --> 00:01:34,972
If it is, then we're done - we don't want to add it again to the index.

20
00:01:34,972 --> 00:01:39,120
If it isn't there, after we've looped through all of the URLs

21
00:01:39,120 --> 00:01:43,319
then we'll add it to the index as before.

22
00:01:43,319 --> 00:01:45,795
That takes care of duplicates

23
00:01:45,795 --> 00:01:48,896
and the change in the structure of the index

24
00:01:48,896 --> 00:01:52,752
what we now need to do is to sort out the clicks.

25
00:01:52,752 --> 00:01:57,868
To do this, we're going to look up in the index to find our keyword

26
00:01:57,868 --> 00:02:01,309
and that's going to give us all the associated urls.

27
00:02:01,309 --> 00:02:03,150
If we've got some urls

28
00:02:03,150 --> 00:02:05,259
- well if we haven't got any urls, then there is nothing to do

29
00:02:05,259 --> 00:02:07,138
we're not going to be able to click on anything.

30
00:02:07,138 --> 00:02:14,942
If we have got some urls if the first position is our url that we're looking for -

31
00:02:14,942 --> 00:02:21,618
remember than lookup now return this whole list of url, count pairs

32
00:02:21,618 --> 00:02:26,694
so we're just going to have to look at the url, the first entry to see if it matches to see if it matches

33
00:02:26,694 --> 00:02:29,025
rather than the whole list

34
00:02:29,025 --> 00:02:30,687
and so if it does match

35
00:02:30,687 --> 00:02:35,981
then we're going to increment the count, which is the second position by one

36
00:02:35,981 --> 00:02:39,000
and that's it.
