1
00:00:00,350 --> 00:00:04,420
There are several consequences of using a singleton pattern.

2
00:00:04,420 --> 00:00:07,460
One of the benefits is, you provide controlled access.

3
00:00:07,460 --> 00:00:12,850
The only way to get access to the singleton instance is through that, that class

4
00:00:12,850 --> 00:00:18,180
operation. This has the potential of reducing problems with the names,

5
00:00:18,180 --> 00:00:22,260
the program name space. In particular, the alternative would be to have one or

6
00:00:22,260 --> 00:00:26,430
more global variables that refer to the instance.

7
00:00:26,430 --> 00:00:29,500
Once you've got global variables, they can be copied, and, and, and

8
00:00:29,500 --> 00:00:34,600
referenced. Thereby leading to potential problems. Because singleton is a class,

9
00:00:34,600 --> 00:00:39,350
it can be subclassed, which gives you additional flexibility. And if you were so

10
00:00:39,350 --> 00:00:43,720
inclined, you wanted to have a, a class in which there could be

11
00:00:43,720 --> 00:00:47,540
exactly two instances or three instances or four instances, whatever.

12
00:00:47,540 --> 00:00:51,990
Okay, you could take the basic idea of the singleton and adjust it accordingly.
