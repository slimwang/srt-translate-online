1
00:00:00,000 --> 00:00:03,081
So to compute the number of steps, what we're going to do is start at the top

2
00:00:03,081 --> 00:00:06,492
and count how many steps it gets from the top to the bottom.

3
00:00:06,492 --> 00:00:09,893
So here's the first step. It has 8 operations.

4
00:00:09,893 --> 00:00:14,464
Second step, third step, fourth step, fifth step, sixth step,

5
00:00:14,464 --> 00:00:16,354
and then we've computed the final results.

6
00:00:16,354 --> 00:00:18,557
So we'd say there are 6 steps here.

7
00:00:18,557 --> 00:00:20,198
What's the total amount of work?

8
00:00:20,198 --> 00:00:22,298
Well, to do that, we count the number of operations.

9
00:00:22,298 --> 00:00:27,877
That's 8 + 4 + 4 + 2 + 2 + 1.

10
00:00:27,877 --> 00:00:32,017
That gives us 21 operations to compute the final answer here.

11
00:00:32,017 --> 00:00:34,683
When we discuss algorithms, we'll often discuss these metrics

12
00:00:34,683 --> 00:00:38,718
not so much in terms of numbers--the number of steps or the total amount of work--

13
00:00:38,718 --> 00:00:41,353
but instead as functions of the size of the input.

14
00:00:41,353 --> 00:00:43,187
So we might have a totally different problem,

15
00:00:43,187 --> 00:00:45,218
and we might say that the amount of work in that problem

16
00:00:45,218 --> 00:00:47,692
is proportional to the size of the input squared

17
00:00:47,692 --> 00:00:51,808
or the number of steps in this particular problem is proportional to the size of the input.
