1
00:00:03,960 --> 00:00:04,616
And we're live, awesome!

2
00:00:04,616 --> 00:00:06,079
Hey, everybody, how's it going?

3
00:00:06,079 --> 00:00:08,470
I'm John and this is Ty.

4
00:00:08,470 --> 00:00:12,813
And today, we're going to spend
a little bit of time talking about

5
00:00:12,813 --> 00:00:14,832
the Chrome developer tools.

6
00:00:14,832 --> 00:00:19,382
Now, a lot has changed in the past,
especially if you've been going through

7
00:00:19,382 --> 00:00:22,882
our courses and have been
looking at the tools themselves,

8
00:00:22,882 --> 00:00:28,270
looking at these timelines and saying,
my gosh, this looks so different.

9
00:00:28,270 --> 00:00:30,750
How the heck do I begin using these?

10
00:00:30,750 --> 00:00:34,110
Well, we're hopefully going to clear up
a lot of those questions you have and

11
00:00:34,110 --> 00:00:37,770
maybe clear up questions you may
not have as we're going to try and

12
00:00:37,770 --> 00:00:40,580
go through all the tabs
in the developer tools.

13
00:00:40,580 --> 00:00:43,280
And so Ty,
you want to introduce yourself, and

14
00:00:43,280 --> 00:00:45,350
then kind of get us started here?

15
00:00:45,350 --> 00:00:46,360
>> Yeah, sure, thanks, John.

16
00:00:46,360 --> 00:00:47,690
So hey, everybody, I'm Ty.

17
00:00:47,690 --> 00:00:51,245
I'm a CM here at Udacity, or
a course manager, rather, and

18
00:00:51,245 --> 00:00:54,127
I'm also a front end and
back end web developer.

19
00:00:54,127 --> 00:00:58,590
And like John said, today we're going to
be talking about the dev tools.

20
00:00:58,590 --> 00:01:01,900
So let's get started.

21
00:01:01,900 --> 00:01:04,581
Just for reference,
we're going to be using Chrome 48,

22
00:01:04,581 --> 00:01:06,728
which is the latest stable
release of Chrome and

23
00:01:06,728 --> 00:01:09,700
that's kind of important since
things change really fast.

24
00:01:09,700 --> 00:01:12,820
So if you haven't updated your Chrome
and you're confused why what we're doing

25
00:01:12,820 --> 00:01:15,510
looks so different,
that could be the reason.

26
00:01:15,510 --> 00:01:19,990
But anyway, I'm going to share
my screen with all of you and

27
00:01:19,990 --> 00:01:22,605
take you to the world's
worst website ever.

28
00:01:22,605 --> 00:01:25,460
[BLANK_AUDIO]

29
00:01:25,460 --> 00:01:27,030
>> It's pretty bad.

30
00:01:27,030 --> 00:01:30,198
I was not sure what to
expect when you said this.

31
00:01:30,198 --> 00:01:35,740
And it's definitely [LAUGH] the worst
website I've seen in a long while.

32
00:01:35,740 --> 00:01:37,680
>> Yep.
>> It really reminds me sort of like

33
00:01:37,680 --> 00:01:38,760
Geosites.

34
00:01:40,080 --> 00:01:46,890
>> Yes, we've got all of the worst
parts of HTML and CSS present here.

35
00:01:46,890 --> 00:01:49,400
Once you guys make it through
the front end degree, you will

36
00:01:49,400 --> 00:01:52,390
never have to worry about making
something that looks this terrible.

37
00:01:52,390 --> 00:01:55,818
But anyway, I figured it would be
funny to use this one as an example.

38
00:01:55,818 --> 00:02:00,702
So I'm going to open up
the developer tools, and

39
00:02:00,702 --> 00:02:06,589
if you're on Windows,
I believe it's Ctrl+Shift+C

40
00:02:06,589 --> 00:02:11,614
to open them, and
on Mac, it's Cmd+Opt+I.

41
00:02:11,614 --> 00:02:13,580
So hopefully,
you can see the dev tools all right.

42
00:02:13,580 --> 00:02:15,360
John, does that look okay?

43
00:02:15,360 --> 00:02:17,940
>> Yeah, it looks pretty good on my end.

44
00:02:17,940 --> 00:02:19,840
You can also zoom in.

45
00:02:19,840 --> 00:02:22,360
If you guys do have trouble
seeing the dev tools,

46
00:02:22,360 --> 00:02:24,610
you can zoom in to it like
you would any other page.

47
00:02:24,610 --> 00:02:28,050
I believe Cmd+Plus makes
the font a little bigger-

48
00:02:28,050 --> 00:02:29,510
>> Yeah, see, I'm using plus and

49
00:02:29,510 --> 00:02:32,300
minus right here to make it
a little bigger and smaller.

50
00:02:32,300 --> 00:02:33,570
>> So sometimes that comes in handy,

51
00:02:33,570 --> 00:02:36,700
cause I know when I have my
big monitor up and running,

52
00:02:36,700 --> 00:02:39,949
sometimes it is a little hard to
see some of the text in those tabs.

53
00:02:41,020 --> 00:02:43,540
So even if you're not
screencasting like we are,

54
00:02:43,540 --> 00:02:46,000
it's still handy to be able to do that.

55
00:02:46,000 --> 00:02:47,410
>> Yeah, definitely.

56
00:02:47,410 --> 00:02:48,730
So let's jump right into it.

57
00:02:48,730 --> 00:02:52,300
So we're basically going to walk you
guys through each of the tabs in the dev

58
00:02:52,300 --> 00:02:54,790
tools that you can see
them right at the top, and

59
00:02:54,790 --> 00:02:57,950
we're going to go basically
left to right almost.

60
00:02:57,950 --> 00:03:00,730
But we're going to start at
the left with the Elements tab.

61
00:03:00,730 --> 00:03:03,210
And the Elements tab,
as the name suggests,

62
00:03:03,210 --> 00:03:06,380
lets you inspect all of
the HTML elements on the page.

63
00:03:06,380 --> 00:03:11,400
Kind of the most useful way to use it
is to take a look at your web page.

64
00:03:11,400 --> 00:03:13,520
I'll make this a little smaller, and

65
00:03:13,520 --> 00:03:16,490
let's say I wasn't too
happy with how this looked.

66
00:03:16,490 --> 00:03:17,490
I decided, you know what,

67
00:03:17,490 --> 00:03:20,150
I don't want to call this
the world's worst website ever.

68
00:03:20,150 --> 00:03:23,140
In fact, we're going to call it
the world's best website ever,

69
00:03:23,140 --> 00:03:25,305
which it's not, but we'll pretend it is.

70
00:03:25,305 --> 00:03:29,610
>> [LAUGH]
>> So what I did right there was this

71
00:03:29,610 --> 00:03:34,579
little button right here, or
optionally Cmd+Shift+C on Mac and

72
00:03:34,579 --> 00:03:39,800
Ctrl+Shift+C on Windows, lets me
open up the element inspector and

73
00:03:39,800 --> 00:03:43,360
you can see me kind of moving
around the page with my cursor and

74
00:03:43,360 --> 00:03:44,840
elements are highlighting everywhere.

75
00:03:46,630 --> 00:03:48,720
Those of you that have taken
some of the front end,

76
00:03:48,720 --> 00:03:52,290
done a degree might be
already familiar with this.

77
00:03:52,290 --> 00:03:54,390
But basically I can go around, and

78
00:03:54,390 --> 00:03:57,910
then when I find the element I
want to look at, I can click it and

79
00:03:57,910 --> 00:04:01,750
it will actually highlight right in the
dev tools, which is pretty convenient.

80
00:04:01,750 --> 00:04:04,390
And then once I'm there,
there's a bunch of things I can do.

81
00:04:04,390 --> 00:04:08,760
So I can change the actual content
by double-clicking right there,

82
00:04:08,760 --> 00:04:13,950
so we're going to go, best,
and then there you go.

83
00:04:13,950 --> 00:04:17,970
I can actually double-click some of
the attributes too, and change them.

84
00:04:17,970 --> 00:04:22,370
So I could make this, let's say,
60 point, then it gets really big.

85
00:04:24,490 --> 00:04:26,510
>> Just making it look worse and worse.

86
00:04:26,510 --> 00:04:29,760
>> Yeah, exactly, if we want to make
it look better, we can make it smaller.

87
00:04:31,090 --> 00:04:34,320
You can do this with all the attributes.

88
00:04:35,610 --> 00:04:37,933
And when you right-click
on the DOM node itself,

89
00:04:37,933 --> 00:04:40,159
it actually gives you
a lot more options, too.

90
00:04:41,190 --> 00:04:45,350
So we can edit the entire node as HTML,

91
00:04:45,350 --> 00:04:48,500
which opens up this little
kind of basic text editor.

92
00:04:48,500 --> 00:04:53,670
That could be helpful if you wanted
add in, let's say, other nodes.

93
00:04:53,670 --> 00:04:54,378
Blah, blah, blah.

94
00:04:54,378 --> 00:04:57,990
We're not going to do that right now,
but you get the idea.

95
00:04:57,990 --> 00:05:00,730
Could be useful if you
have an unordered list and

96
00:05:00,730 --> 00:05:04,010
you wanted to add another element in for
some reason.

97
00:05:04,010 --> 00:05:08,510
If we go over and
find a link on the website,

98
00:05:08,510 --> 00:05:13,830
let's say right here,
we can do something pretty useful.

99
00:05:13,830 --> 00:05:16,250
So if I right-click
on that link element,

100
00:05:16,250 --> 00:05:20,270
I can actually force the element
to have a particular state.

101
00:05:20,270 --> 00:05:23,870
So let's say you had a link that was
supposed to change color when you

102
00:05:23,870 --> 00:05:27,110
hovered over it, if you wanted
to see what that looked like, so

103
00:05:27,110 --> 00:05:30,440
you could actually force
the hover state on the element.

104
00:05:30,440 --> 00:05:34,940
And while this website being kind of
terrible doesn't do anything fancy

105
00:05:34,940 --> 00:05:39,180
with the CSS like that, you can
see how that would be very useful.

106
00:05:39,180 --> 00:05:43,580
What we can also do from
here is go to the right.

107
00:05:43,580 --> 00:05:46,330
I'll make this a little bigger and
inspect all of

108
00:05:46,330 --> 00:05:49,505
the CSS styles that have been
applied to the elements on the page.

109
00:05:49,505 --> 00:05:54,620
So if click a random
paragraph right here,

110
00:05:54,620 --> 00:05:58,900
I can see that the text align
is supposed to be in the center.

111
00:05:58,900 --> 00:06:02,470
It's in a table, which is kind
of an old school HTML element,

112
00:06:02,470 --> 00:06:03,970
if you're not familiar with it.

113
00:06:03,970 --> 00:06:08,550
It's still used today, but definitely
more of a 90s leftover at this point.

114
00:06:08,550 --> 00:06:13,092
And we can kind of see that a bunch of
styles have been applied to the fonts,

115
00:06:13,092 --> 00:06:16,450
some table-specific stuff,
and like I said,

116
00:06:16,450 --> 00:06:18,760
like the text in the center,
things like that.

117
00:06:20,410 --> 00:06:23,720
And what's cool is you
can actually enable and

118
00:06:23,720 --> 00:06:28,620
disable those styles with this checkbox,
just by hovering over them.

119
00:06:28,620 --> 00:06:31,650
Anything that's grey,
you can't change yourself.

120
00:06:31,650 --> 00:06:35,630
Anything that's white, you can edit.

121
00:06:35,630 --> 00:06:39,730
And if you wanted to actually add new
styles too, you can click right here

122
00:06:39,730 --> 00:06:43,890
on element.style, and that'll let
you just import custom styles.

123
00:06:43,890 --> 00:06:47,852
And Chrome is kind of smart, so
it'll actually autocomplete for you.

124
00:06:47,852 --> 00:06:48,970
Whoops, did I mess up?

125
00:06:50,440 --> 00:06:57,130
Good background color, and
then you can see it changed up here.

126
00:06:57,130 --> 00:07:01,440
So that's pretty much
all you need to know for

127
00:07:01,440 --> 00:07:03,970
the Element tab as far as the basics.

128
00:07:03,970 --> 00:07:11,510
It's pretty cool, I use it all the time
in web development, very helpful.

129
00:07:11,510 --> 00:07:16,390
>> I know one of the things that's

130
00:07:16,390 --> 00:07:22,080
planned to be added to the Elements
panel as well is a color picker.

131
00:07:22,080 --> 00:07:24,490
I think there's even plug-ins
that you can use for that.

132
00:07:24,490 --> 00:07:27,123
And I think even in Chrome Canary,
it's available now.

133
00:07:27,123 --> 00:07:30,936
So that will come in handy when you're
trying to just play around with those

134
00:07:30,936 --> 00:07:33,609
styles and
you're just trying to fine tune a color.

135
00:07:35,150 --> 00:07:37,265
I really do like that panel.

136
00:07:37,265 --> 00:07:40,610
>> Okay, yeah,
that sounds super helpful.

137
00:07:40,610 --> 00:07:44,114
I didn't hear about that, but
I do know that in Chrome 49,

138
00:07:44,114 --> 00:07:48,652
which is the next version, there are
bunch of huge improvements coming, like

139
00:07:48,652 --> 00:07:53,286
the developer side of things, including
even CSS variables from what I heard.

140
00:07:53,286 --> 00:07:55,469
Kind of unrelated but pretty cool.

141
00:07:55,469 --> 00:08:00,183
>> Yeah, I've heard of that too,
and I mean, a lot of this stuff.

142
00:08:00,183 --> 00:08:04,142
Was shown off at the previous
Chrome developers conference so

143
00:08:04,142 --> 00:08:06,042
you can feel free to go back and

144
00:08:06,042 --> 00:08:10,930
watch those videos to see some of the
stuff that's coming out in the future.

145
00:08:11,950 --> 00:08:14,650
So, I'm going to share
my worst web site here.

146
00:08:14,650 --> 00:08:17,290
And I'm going to share
one of my favorite towns,

147
00:08:17,290 --> 00:08:19,054
which is the console tab.

148
00:08:19,054 --> 00:08:23,040
l And actually the console tab is super
handy because it's going to show you

149
00:08:23,040 --> 00:08:25,140
a lot of things about your website.

150
00:08:25,140 --> 00:08:31,470
It's a great place to see where
JavaScripts break in and where just

151
00:08:31,470 --> 00:08:36,070
any sort of problems may be occurring
in the network and stuff like that.

152
00:08:36,070 --> 00:08:39,520
It's basically a fully interactive
JavaScript interpreter for

153
00:08:39,520 --> 00:08:42,419
you to sort of use on your website.

154
00:08:42,419 --> 00:08:44,280
So basically anything that gets logged.

155
00:08:44,280 --> 00:08:46,490
So basically anywhere in your code.

156
00:08:46,490 --> 00:08:50,980
You do, you know,
console.log is going to show up here.

157
00:08:50,980 --> 00:08:55,580
So that's pretty handy.

158
00:08:55,580 --> 00:08:57,850
Especially when you're
trying to debug some things.

159
00:08:57,850 --> 00:09:01,560
You maybe just want to throw in some log
reports in there to see, like, okay.

160
00:09:01,560 --> 00:09:02,250
What's happening?

161
00:09:02,250 --> 00:09:05,910
Let me log out this variable,
and see what's going on.

162
00:09:07,420 --> 00:09:11,406
You can also do all kinds of other
useful debugging things like

163
00:09:11,406 --> 00:09:16,230
console.warn, console.error,
console.group, a certain table.

164
00:09:16,230 --> 00:09:22,098
You can also use console.time,
you know, time-specific functions.

165
00:09:22,098 --> 00:09:27,727
But pretty much anything you would
write in your JavaScript file,

166
00:09:27,727 --> 00:09:30,010
you can do here.

167
00:09:30,010 --> 00:09:34,310
So I mean we can look at things
like the Window variable.

168
00:09:34,310 --> 00:09:37,010
You can manipulate things
in the Window variable.

169
00:09:37,010 --> 00:09:39,780
Anything that's accessible globally

170
00:09:39,780 --> 00:09:44,800
on the client side is going to be
accessible inside this console.

171
00:09:44,800 --> 00:09:48,420
So it's important to note, that's
kind of an important thing to note,

172
00:09:48,420 --> 00:09:52,340
is any code that isn't wrapped and

173
00:09:52,340 --> 00:09:56,400
immediately [INAUDIBLE] expression or
like in a document.ready for

174
00:09:56,400 --> 00:10:02,850
jQuery users, it's going to be
accessible from this console.

175
00:10:02,850 --> 00:10:03,620
So we can see that.

176
00:10:03,620 --> 00:10:06,170
You know I have access
to the window object.

177
00:10:06,170 --> 00:10:08,910
I have access to the document object.

178
00:10:08,910 --> 00:10:12,370
Those are pretty common global objects.

179
00:10:12,370 --> 00:10:16,220
And, you know, using the console I can
actually go in and manipulate these,

180
00:10:16,220 --> 00:10:20,200
as well as being able to see some errors
that could be occurring in my code.

181
00:10:22,910 --> 00:10:25,840
Now there's sort of two things
a lot of people have questions

182
00:10:25,840 --> 00:10:26,610
about with the console.

183
00:10:26,610 --> 00:10:30,440
It's like okay, my console's full
of crap, how do I get rid of it?

184
00:10:30,440 --> 00:10:33,610
You can simply just run the clear
command and it'll clean out your log.

185
00:10:33,610 --> 00:10:37,060
And then sort of the second
question that people often ask is,

186
00:10:37,060 --> 00:10:42,070
okay well I want to actually
see things stay in the log.

187
00:10:42,070 --> 00:10:45,570
So you can see when I
refresh the page here,

188
00:10:45,570 --> 00:10:49,800
everything in my log kind of goes away,
and then it sort of reloads everything.

189
00:10:49,800 --> 00:10:54,890
If I want to keep my log to stay
active between refreshings and

190
00:10:54,890 --> 00:10:58,860
stuff, I can check this
Preserve Log Refresh.

191
00:10:58,860 --> 00:11:03,920
It'll show me where I navigated to and
it'll re-log this information.

192
00:11:03,920 --> 00:11:07,990
And there's all kinds of little
filters you can apply for

193
00:11:07,990 --> 00:11:09,267
searching different things.

194
00:11:09,267 --> 00:11:11,940
So if you only want to see the errors or

195
00:11:11,940 --> 00:11:16,380
only the warnings, only sort of the
debug or things that have been handled.

196
00:11:16,380 --> 00:11:19,800
You can hide just network messages or
you can sort of filter through

197
00:11:19,800 --> 00:11:22,840
the messages you're getting
a lot of console errors.

198
00:11:22,840 --> 00:11:27,370
Which is super handy to kind of dig
through when things like this show up.

199
00:11:27,370 --> 00:11:29,331
You get a bunch of 404s and

200
00:11:29,331 --> 00:11:34,004
you're trying to figure out
specific 404 errors that you have.

201
00:11:34,004 --> 00:11:36,350
[BLANK_AUDIO]

202
00:11:36,350 --> 00:11:40,610
I think that's about it,
as far as the console's concerned.

203
00:11:40,610 --> 00:11:42,230
Did I miss anything here?

204
00:11:45,120 --> 00:11:47,931
One thing you might want to
mention is that little drop.

205
00:11:47,931 --> 00:11:51,530
Yeah, you know yes that little drop down
it's pretty useful if you have like some

206
00:11:51,530 --> 00:11:55,630
nested I frames in your code
because it lets you switch context.

207
00:11:57,350 --> 00:11:59,840
Because you know what's
accessible globally and

208
00:11:59,840 --> 00:12:04,180
the mainframe is not the same as what's
acceptable globally in the I Frame, so

209
00:12:04,180 --> 00:12:06,220
that can also be helpful for debugging.

210
00:12:06,220 --> 00:12:07,550
Good point, good point.

211
00:12:07,550 --> 00:12:12,880
Yeah so this, as Ty mentioned this
drop-down here will let you pick and

212
00:12:12,880 --> 00:12:14,880
choose sort of what I frame
you're looking in and

213
00:12:14,880 --> 00:12:15,438
what frame you're looking in.

214
00:12:15,438 --> 00:12:18,990
.
You can see I can access all of my

215
00:12:18,990 --> 00:12:23,670
Chrome plugins here, like my last
asked library mode, my reactive tools.

216
00:12:23,670 --> 00:12:26,690
So you can even go in and
kind of like access those and

217
00:12:26,690 --> 00:12:28,230
play around with their consoles.

218
00:12:29,850 --> 00:12:30,350
Sweet.

219
00:12:31,490 --> 00:12:33,330
All right.
So let's see Ty, what's next?

220
00:12:33,330 --> 00:12:35,661
I think we got the Network tab next.

221
00:12:35,661 --> 00:12:40,701
[CROSSTALK] One thing I want to note
too is if there's a specific order

222
00:12:40,701 --> 00:12:45,293
you like things in, so
I like having the console open first.

223
00:12:45,293 --> 00:12:48,689
You should actually be able to click and
drag the tabs around now,

224
00:12:48,689 --> 00:12:51,920
so you can order them however you like,
which is super handy.

225
00:12:53,360 --> 00:12:55,820
>> Yeah you can and
I think it will persist right?

226
00:12:55,820 --> 00:12:58,040
When you close Chrome and reopen it.

227
00:12:58,040 --> 00:13:01,030
>> Yeah, it's connected to
the Chrome user profile so

228
00:13:01,030 --> 00:13:04,040
it'll persist in between sessions.

229
00:13:04,040 --> 00:13:04,540
>> Yeah, cool.

230
00:13:05,690 --> 00:13:06,190
So yeah.

231
00:13:06,190 --> 00:13:10,020
Next up is the Network tab,
which is another very commonly used one.

232
00:13:10,020 --> 00:13:13,420
So I will share my screen
with you guys once again.

233
00:13:18,160 --> 00:13:21,519
So if we go to the Network
tab right here.

234
00:13:22,620 --> 00:13:26,970
Right now there's nothing, but
what you'll notice right up

235
00:13:26,970 --> 00:13:31,340
here in the top left is that this
little recording button is active and

236
00:13:31,340 --> 00:13:36,110
what that means is that it's listening
for kind of outgoing requests.

237
00:13:36,110 --> 00:13:39,710
So if I refresh the page right here
with the Network tab open you're

238
00:13:39,710 --> 00:13:41,700
going to see a bunch of stuff pop in.

239
00:13:41,700 --> 00:13:44,260
So I can just scroll up, we don't
need to look at the page for this.

240
00:13:46,430 --> 00:13:50,360
And this is kind of straightforward
it basically tells you all of

241
00:13:50,360 --> 00:13:52,580
the http requests that
your website's made.

242
00:13:53,720 --> 00:13:58,590
And as well it's like useful information
like what type of file was requested.

243
00:13:58,590 --> 00:14:02,870
Where the request was initiated
like was it from an HTML file,

244
00:14:02,870 --> 00:14:08,490
JavaScript Chrome itself, the size
of the request, how long it took.

245
00:14:08,490 --> 00:14:13,010
Which is very useful for
a kind of debugging performance and

246
00:14:13,010 --> 00:14:14,580
most importantly the status.

247
00:14:14,580 --> 00:14:16,040
Did you get it, was it a 404?

248
00:14:16,040 --> 00:14:20,915
Like, we can see right here
highlighted in red this updated .gif

249
00:14:20,915 --> 00:14:25,440
file did not Show up we're going to
error 404 which means page not found.

250
00:14:27,170 --> 00:14:30,590
And you can actually click these little
things at the top, the little tabs to

251
00:14:30,590 --> 00:14:34,500
sort, which is very helpful especially
if you have like a ton of requests.

252
00:14:34,500 --> 00:14:39,360
Sometimes websites will make dozens
if not hundreds of requests.

253
00:14:39,360 --> 00:14:44,330
So can be helpful to be able to sort as
well as use this filter search bar to

254
00:14:46,160 --> 00:14:48,990
find specific files that
you're looking for.

255
00:14:48,990 --> 00:14:53,640
So what's more useful than this
is that you can actually click on

256
00:14:53,640 --> 00:14:56,760
one of the resources
that was requested and

257
00:14:56,760 --> 00:14:59,190
you'll get information
about the http request.

258
00:14:59,190 --> 00:15:03,020
So you can see what the method
was right here is a get

259
00:15:03,020 --> 00:15:08,130
the status code we got the full
URL that we were requesting.

260
00:15:08,130 --> 00:15:11,900
So if I were to open up
that in a different tab,

261
00:15:11,900 --> 00:15:14,825
you can see that this is the JavaScript
file that was requested,

262
00:15:14,825 --> 00:15:18,090
it just happens to be from
the same domain name.

263
00:15:20,100 --> 00:15:23,970
And then you can get a lot more advanced
information, like cookies that were

264
00:15:23,970 --> 00:15:28,850
sent back and forth, session
information, all of the HTTP headers.

265
00:15:28,850 --> 00:15:32,650
So, really really useful stuff if
you're doing front end development.

266
00:15:32,650 --> 00:15:35,270
And Chrome will actually format
the response for you, or

267
00:15:35,270 --> 00:15:36,130
it'll try to, at least.

268
00:15:36,130 --> 00:15:36,849
It doesn't always work.

269
00:15:38,050 --> 00:15:40,690
It generally works pretty decent.

270
00:15:40,690 --> 00:15:43,220
>> Yeah, for
any kind of standard file type, it will.

271
00:15:43,220 --> 00:15:46,300
Like an image,
it should show you the response.

272
00:15:46,300 --> 00:15:47,740
So right there you can see the GIF.

273
00:15:48,950 --> 00:15:52,809
So Chrome is really good about this
kind of stuff, it formats everything for

274
00:15:52,809 --> 00:15:53,487
you nicely.

275
00:15:53,487 --> 00:15:57,822
[CROSSTALK] And you can actually
get timing information too,

276
00:15:57,822 --> 00:16:00,632
more details on the request timeline.

277
00:16:00,632 --> 00:16:03,186
[BLANK_AUDIO]

278
00:16:03,186 --> 00:16:07,390
I'm not sure if there's too
much else to the Network tab.

279
00:16:07,390 --> 00:16:10,970
It's pretty straight forward but
very, very, very useful.

280
00:16:10,970 --> 00:16:14,850
Other than the search bar right
here you can actually filter by

281
00:16:14,850 --> 00:16:18,920
the type of request as well or
the file type of the request.

282
00:16:18,920 --> 00:16:23,440
So there's all the images,
JavaScripts, style sheets,

283
00:16:23,440 --> 00:16:28,540
things like that It might be
worthwhile to just mention what XHR is.

284
00:16:30,720 --> 00:16:35,440
>> Those are AJAX requests for acts like

285
00:16:38,410 --> 00:16:41,290
they are transferring
JSON data generally?

286
00:16:42,940 --> 00:16:45,150
>> Yeah, so usually anything that

287
00:16:46,650 --> 00:16:50,500
more often than not you're
calling in through HTTP.

288
00:16:50,500 --> 00:16:56,180
So, other Web sites,
resources, as Tye mentioned.

289
00:16:56,180 --> 00:16:57,840
JSON files, things like that.

290
00:16:57,840 --> 00:16:58,480
>> Yeah generally,

291
00:16:58,480 --> 00:17:02,540
what you'll see there is JSON files
>> Actually not sure if it's

292
00:17:02,540 --> 00:17:06,650
I don't think it's only JSON files that
can be X.M.L. and things like that too.

293
00:17:06,650 --> 00:17:10,790
It's just just generally any
kind of like cross site request.

294
00:17:14,010 --> 00:17:15,200
>> Cool.

295
00:17:15,200 --> 00:17:19,470
So let's see what app do we have next
I think it's the exciting timeline

296
00:17:20,550 --> 00:17:25,490
Which I'm going to talk about some
the pub back open my screenshare.

297
00:17:25,490 --> 00:17:32,000
The best website I've ever seen and
let's talk about the timeline tap.

298
00:17:32,000 --> 00:17:36,900
So the time when you know is where
you can kind of take a snapshot of

299
00:17:36,900 --> 00:17:41,440
everything going on your
page at different times.

300
00:17:41,440 --> 00:17:44,300
From recording what happens when
the user clicks a button to

301
00:17:44,300 --> 00:17:48,740
recording what happens when
a user first comes to the page.

302
00:17:48,740 --> 00:17:53,460
A few things that we can talk
about is these check marks here

303
00:17:53,460 --> 00:17:55,950
is determined by what you capture.

304
00:17:55,950 --> 00:17:57,850
Typically, at the bare minimum,

305
00:17:57,850 --> 00:18:00,990
you kind of want to capture
just the JavaScript profile.

306
00:18:00,990 --> 00:18:05,740
But more recently,
you can get sort of screenshots and

307
00:18:05,740 --> 00:18:10,500
a sort of painting of the page, so
that basically gives you sort of

308
00:18:10,500 --> 00:18:15,549
screenshots in time of what the page
looks like per every 100 milliseconds.

309
00:18:17,390 --> 00:18:18,750
So let's take a look.

310
00:18:18,750 --> 00:18:23,250
Let's actually record the timeline
of me sort of reloading this page.

311
00:18:25,150 --> 00:18:26,150
It's fairly slow.

312
00:18:26,150 --> 00:18:30,440
All right,
let's finish that recording, and

313
00:18:30,440 --> 00:18:34,740
it takes a second, usually it's
processing a lot of stuff that happened.

314
00:18:36,480 --> 00:18:39,090
So we're going to just kind of
wait a second here while it

315
00:18:39,090 --> 00:18:41,380
finishes gathering all this information.

316
00:18:43,280 --> 00:18:45,720
Hopefully, it doesn't take too long.

317
00:18:45,720 --> 00:18:48,349
If I didn't just break it.

318
00:18:48,349 --> 00:18:53,220
[LAUGH] Sometimes the timeline can be
a little mad especially with really

319
00:18:53,220 --> 00:18:54,799
bad websites.

320
00:18:56,880 --> 00:18:58,060
No, what happened here?

321
00:19:01,490 --> 00:19:06,430
Did the whole console freeze up?

322
00:19:06,430 --> 00:19:09,670
>> I think it might have.

323
00:19:09,670 --> 00:19:10,180
>> All right.

324
00:19:10,180 --> 00:19:12,930
Let's try this again.

325
00:19:16,790 --> 00:19:17,820
Let's see.
All right.

326
00:19:17,820 --> 00:19:18,320
Ready?

327
00:19:19,410 --> 00:19:24,360
Let's capture a new timeline,
refresh the page, finish.

328
00:19:27,210 --> 00:19:30,930
Man, I'm really so mad if the timeline
doesn't work for me today.

329
00:19:30,930 --> 00:19:33,630
If it doesn't, we can always go
try another another website.

330
00:19:36,220 --> 00:19:41,110
Yeah, hopefully it's not
the website working earlier.

331
00:19:42,650 --> 00:19:46,090
Sometimes hangouts can slow
down Chrome quite a bit, so

332
00:19:46,090 --> 00:19:47,460
I'm wondering if that is related.

333
00:19:49,140 --> 00:19:50,040
>> Yeah, that's a good point.

334
00:19:50,040 --> 00:19:54,240
I also have pictures of some
timelines that I can pull up,

335
00:19:54,240 --> 00:19:56,260
but it's not as fun as doing it live.

336
00:19:58,700 --> 00:19:59,350
Around me.

337
00:20:03,170 --> 00:20:06,055
Let me try doing just
the timeline of Google.

338
00:20:06,055 --> 00:20:14,272
[BLANK_AUDIO]

339
00:20:14,272 --> 00:20:17,845
How any day that's going to be patient.

340
00:20:17,845 --> 00:20:19,945
I'm not patient enough of this thing.

341
00:20:19,945 --> 00:20:26,225
So I'm actually going to do a bit here,
you're going to hear some of this stuff.

342
00:20:26,225 --> 00:20:31,875
All right, so I actually am
actually going to even pop.

343
00:20:35,060 --> 00:20:43,400
Let me pop out my dev tools here and
share just that.

344
00:20:43,400 --> 00:20:47,480
So you don't really need to look
at this terrible website to

345
00:20:48,630 --> 00:20:49,920
see what's going on here.

346
00:20:51,830 --> 00:20:55,490
So here we have our timeline.

347
00:20:55,490 --> 00:20:58,490
So you can actually see
along the top here all

348
00:20:58,490 --> 00:21:01,420
of this sort of time frame
your guns are out and going.

349
00:21:01,420 --> 00:21:07,860
And we kind of see all these different
colors, green, red bars up here.

350
00:21:07,860 --> 00:21:13,530
This is sort of the paint,
the layout, some load events.

351
00:21:13,530 --> 00:21:16,780
You can hover over most things and
they will tell you what they are.

352
00:21:20,130 --> 00:21:25,200
This next red stripe here,
this indicates to us sort of where

353
00:21:25,200 --> 00:21:31,220
Google Chrome suspects there may be
performance or responsiveness issues.

354
00:21:31,220 --> 00:21:35,700
So basically anywhere on the page where,
you know, it might not look so

355
00:21:35,700 --> 00:21:41,120
well on a desktop or
a tablet, just anywhere where

356
00:21:41,120 --> 00:21:45,990
loading something might cause
some chug for the end user.

357
00:21:47,200 --> 00:21:50,700
The next thing we have
here is the FPS meter and

358
00:21:50,700 --> 00:21:54,180
this is actually a sort of mostly
what the old time line was.

359
00:21:54,180 --> 00:21:58,020
We used to sort of have a combination
of this timeline with the one below it.

360
00:21:58,020 --> 00:21:59,900
Where these were the color bars and

361
00:21:59,900 --> 00:22:03,650
you kind of saw like how
much yes they took up.

362
00:22:03,650 --> 00:22:06,300
But this one's strictly
frames per second and

363
00:22:06,300 --> 00:22:09,650
ideally you want these bars
to be as high as possible.

364
00:22:09,650 --> 00:22:14,570
So anywhere where these bars are almost
touching sort of a red stripe above it,

365
00:22:14,570 --> 00:22:17,800
is where we're performing
at about 60fps.

366
00:22:17,800 --> 00:22:21,154
Anywhere where it's really
low is pretty bad, and

367
00:22:21,154 --> 00:22:25,990
those are kind of like sections where
we might want to investigate what's

368
00:22:25,990 --> 00:22:28,731
causing FPS to just
take such a huge drop.

369
00:22:28,731 --> 00:22:30,933
[BLANK_AUDIO]

370
00:22:30,933 --> 00:22:37,540
The next chart we have here
is basically our CPU usage.

371
00:22:37,540 --> 00:22:40,430
This is kind of giving
us a real-time look at

372
00:22:40,430 --> 00:22:42,420
all the events that
are happening on the page and

373
00:22:42,420 --> 00:22:47,430
sort of all the computations our
computer and browser is doing.

374
00:22:47,430 --> 00:22:50,370
Typically I believe,
If remember correctly here.

375
00:22:50,370 --> 00:22:57,260
Yellow is Java script, blue is paints,
purple is network events,

376
00:22:57,260 --> 00:23:02,530
green is Gosh, layout events.

377
00:23:02,530 --> 00:23:04,390
And gray is everything else so

378
00:23:04,390 --> 00:23:09,730
just any sort of other event that
could be happening on the page.

379
00:23:09,730 --> 00:23:14,470
When they're kind of reaching
the top here that means the CPUs

380
00:23:14,470 --> 00:23:19,290
working at 100% capacity
trying to process that code.

381
00:23:19,290 --> 00:23:26,030
Ideally you would like to see Got
on not quite this giant mountain

382
00:23:27,130 --> 00:23:32,880
that we have going on here you have more
sections that are a little bit lower.

383
00:23:32,880 --> 00:23:36,840
So you're not using as much
CPU usage this next section

384
00:23:36,840 --> 00:23:41,231
where we see sort of these blue
stripes and yellow stripes and

385
00:23:41,231 --> 00:23:46,055
green stripes are more of an indicator
of these events occurring so

386
00:23:46,055 --> 00:23:49,523
any sort of network events
that are happening.

387
00:23:49,523 --> 00:23:53,891
So this is probably requesting
the content to do this paint and

388
00:23:53,891 --> 00:23:57,090
then it's actually
performing this paint.

389
00:23:57,090 --> 00:24:01,620
So again,
if I remember correctly I believe blue

390
00:24:01,620 --> 00:24:04,350
Yeah blue is network requests.

391
00:24:04,350 --> 00:24:05,598
>> Blue is network request?

392
00:24:05,598 --> 00:24:07,161
>> [INAUDIBLE] at the beginning.

393
00:24:07,161 --> 00:24:09,186
>> Here we go, okay, cool.

394
00:24:09,186 --> 00:24:12,986
So, blues networker banks,
yellows JavaScript events,

395
00:24:12,986 --> 00:24:14,665
green is paint in layout.

396
00:24:14,665 --> 00:24:17,109
>> [CROSSTALK] Yup.
>> And then purple is.

397
00:24:17,109 --> 00:24:21,253
>> Purple I believe is when styles
are recalculated, actually.

398
00:24:21,253 --> 00:24:24,140
So, if you edit CSS and the code itself.

399
00:24:25,500 --> 00:24:27,090
>> There we go, purple is styles.

400
00:24:27,090 --> 00:24:27,990
So, under your CSS.

401
00:24:27,990 --> 00:24:30,040
And then gray is everything else.

402
00:24:30,040 --> 00:24:32,790
The images loading, stuff like that.

403
00:24:32,790 --> 00:24:36,510
And we can see that it took
screenshots along the way here.

404
00:24:36,510 --> 00:24:40,040
So we can kind of go in and
inspect these little screenshots.

405
00:24:41,690 --> 00:24:45,160
Which is pretty handy to be able to
kind of go in and browse these and

406
00:24:45,160 --> 00:24:48,120
kind of see what has
loaded on the page and

407
00:24:48,120 --> 00:24:50,620
what the page looks like
at specific points in time.

408
00:24:51,870 --> 00:24:55,970
And then you know how to get
to see this next section.

409
00:24:55,970 --> 00:24:59,820
We have our actual
flame view of all this.

410
00:24:59,820 --> 00:25:03,960
Which we can, I believe toggle,
is two different modes so

411
00:25:03,960 --> 00:25:08,140
sort of, this view which kind of shows
you should be pretty familiar for

412
00:25:08,140 --> 00:25:10,770
those of you using the dev tools, but

413
00:25:10,770 --> 00:25:14,560
we can basically see like the events
in sort of the order they execute.

414
00:25:14,560 --> 00:25:17,120
And you can open up
some of them here that

415
00:25:17,120 --> 00:25:19,370
have sort of a tree of things happening.

416
00:25:19,370 --> 00:25:22,330
And you can kind of explore
the JavaScript files that

417
00:25:22,330 --> 00:25:23,410
are executing here.

418
00:25:24,990 --> 00:25:27,030
And then when we switch it to this view,

419
00:25:27,030 --> 00:25:30,230
we can actually get an even
more in-depth look at this.

420
00:25:30,230 --> 00:25:34,160
You can kind of zoom in and
out on certain events happening.

421
00:25:34,160 --> 00:25:37,730
And when you click on these events
you get like a nice little summary

422
00:25:37,730 --> 00:25:39,440
of what's going on.

423
00:25:39,440 --> 00:25:41,650
It tells you what script is running,

424
00:25:41,650 --> 00:25:46,780
how long it took to run,
what type of event it was.

425
00:25:46,780 --> 00:25:51,800
It also can show you the call-tree, so
if there is more events that it calls.

426
00:25:51,800 --> 00:25:53,270
You can sort of see those.

427
00:25:53,270 --> 00:25:57,140
So you can see that there's a loading
event that happens, parsing the HTML,

428
00:25:57,140 --> 00:26:01,210
evaluating a script, and then a few
other events going on below it.

429
00:26:01,210 --> 00:26:06,830
Then you can also do it from sort of
a bottom-up perspective, where you're

430
00:26:06,830 --> 00:26:10,030
basically just kind of going through
that tree the opposite direction.

431
00:26:11,580 --> 00:26:15,030
So that it is pretty handy,
especially when you want to evaluate

432
00:26:15,030 --> 00:26:20,660
the performance of your site and
figuring out where things are breaking,

433
00:26:20,660 --> 00:26:23,990
or performance is just
taking a huge hit.

434
00:26:23,990 --> 00:26:26,560
And as I mentioned, the great thing too,

435
00:26:26,560 --> 00:26:30,270
is you can kind of like go from here,
click on this, and

436
00:26:30,270 --> 00:26:34,880
it'll take you to the Sources tab and
directly see that chunk of code.

437
00:26:34,880 --> 00:26:38,210
That actually segues pretty
nicely into the next bit,

438
00:26:38,210 --> 00:26:40,500
which is the Sources tab, I believe.

439
00:26:40,500 --> 00:26:41,750
Right?

440
00:26:41,750 --> 00:26:42,590
>> Yeah.

441
00:26:42,590 --> 00:26:45,440
So I will share my screen
with you guys once more and

442
00:26:45,440 --> 00:26:48,080
we can take a look at the Sources tab.

443
00:26:48,080 --> 00:26:52,990
And the Sources tab is essentially
where you can read, edit and

444
00:26:52,990 --> 00:26:54,810
debug your JavaScript files.

445
00:26:55,890 --> 00:27:02,500
So, this one right here only has
one file and that is animate.js.

446
00:27:02,500 --> 00:27:05,366
So I can actually view
the JavaScript file itself and

447
00:27:05,366 --> 00:27:08,640
it kind of like basic IDE or
a text editor view.

448
00:27:08,640 --> 00:27:12,300
So I can actually go in and
add my own code right there,

449
00:27:12,300 --> 00:27:20,150
that is not valid code for sure, and
actually this is pretty useful too.

450
00:27:20,150 --> 00:27:23,680
If let's say, your site had minified
code, and what minified means,

451
00:27:23,680 --> 00:27:24,910
if you haven't heard
that that term before,

452
00:27:24,910 --> 00:27:29,620
is basically the file gets compressed
down to a usually one line and all

453
00:27:29,620 --> 00:27:34,000
of the variable names become obfuscated
so usually just one or two letters.

454
00:27:34,000 --> 00:27:36,480
It's basically to make the file
as small as possible so

455
00:27:36,480 --> 00:27:39,345
it can be requested over
the network as quickly as possible.

456
00:27:40,945 --> 00:27:41,995
So if you had minified or

457
00:27:41,995 --> 00:27:46,355
poorly formatted code that you wanted
to expect, this button right here,

458
00:27:46,355 --> 00:27:50,655
on the bottom left of the text editor,
two curly brackets.

459
00:27:50,655 --> 00:27:54,605
It's called the Pretty Printer and
it basically will take your code and

460
00:27:54,605 --> 00:27:56,935
format it in a nicer kind
of standardized way, so

461
00:27:56,935 --> 00:27:58,399
you can actually go through and view it.

462
00:28:01,860 --> 00:28:06,500
Another important aspect to the Sources
tab is using the debugger and

463
00:28:06,500 --> 00:28:09,820
there are a bunch of different
ways to use Chrome's debugger.

464
00:28:09,820 --> 00:28:13,150
So the first of all is actually
through your code itself.

465
00:28:13,150 --> 00:28:16,000
If you were working on a website and

466
00:28:16,000 --> 00:28:19,059
you wanted to test your JavaScript and
set break points in the code,

467
00:28:21,030 --> 00:28:25,100
let's pretend I wasn't in Chrome
right now just in my text editor.

468
00:28:25,100 --> 00:28:29,260
You could use the debugger keyword
there's a semi colon at the end of it.

469
00:28:29,260 --> 00:28:33,088
And that essentially tells Chrome
to put a break point right there,

470
00:28:33,088 --> 00:28:34,506
it will stop execution.

471
00:28:34,506 --> 00:28:38,333
And actually when Chrome gets to that
debugger line it'll actually go ahead

472
00:28:38,333 --> 00:28:42,090
and open up the Sources tab and
go to that file automatically for you.

473
00:28:42,090 --> 00:28:43,420
Which is really handy.

474
00:28:43,420 --> 00:28:46,740
So that's how you would do
it through your code itself.

475
00:28:46,740 --> 00:28:49,880
With the Sources tab there or some other
way so you have to use the debugger or

476
00:28:49,880 --> 00:28:53,640
you can set break points by clicking
on the line number to the left.

477
00:28:54,650 --> 00:28:56,021
But why is that not working?

478
00:28:56,021 --> 00:29:00,772
Maybe because I've edited the file,
okay let me try this again.

479
00:29:00,772 --> 00:29:02,900
>> [LAUGH]
>> Yeah, there we go, okay, cool.

480
00:29:02,900 --> 00:29:07,780
So I can set break points at you
know arbitrary locations and

481
00:29:07,780 --> 00:29:12,730
any line and you'll see on
the right little tab, right here.

482
00:29:12,730 --> 00:29:15,310
It will be on the right,where we are.

483
00:29:15,310 --> 00:29:18,520
Break points I put on and
I can enable and disable them from here.

484
00:29:18,520 --> 00:29:22,400
Or I can just completely get rid of them
by clicking on the line number again.

485
00:29:24,920 --> 00:29:27,920
That's like basic break points
just through the JavaScript.

486
00:29:27,920 --> 00:29:31,150
Another really useful on
type of break point or

487
00:29:31,150 --> 00:29:35,940
two actually is DOM break points
which I can't create from here.

488
00:29:35,940 --> 00:29:38,500
But if I want to go back
to the elements tab,

489
00:29:38,500 --> 00:29:41,410
what I could do is pick a DOM
elements I cared about,

490
00:29:41,410 --> 00:29:45,780
let's save this paragraph tag and
I could set a break point.

491
00:29:45,780 --> 00:29:49,250
So on kind of different events.

492
00:29:49,250 --> 00:29:53,890
So if the DOM style or
the domino style was modified by CSS or

493
00:29:53,890 --> 00:29:57,540
JavaScript I could set a break point to
like kind of alert me when that happens

494
00:29:57,540 --> 00:29:59,180
and stop execution.

495
00:29:59,180 --> 00:30:03,500
If the node gets deleted
through the code, like jQuery,

496
00:30:03,500 --> 00:30:07,180
I think it's like Dot Remove or
something like that or delete.

497
00:30:07,180 --> 00:30:09,240
I'm not sure,
I haven't used it in a while.

498
00:30:09,240 --> 00:30:12,640
You can set a break point there
through the Elements tab,

499
00:30:12,640 --> 00:30:14,210
if we go back to the Sources tab.

500
00:30:14,210 --> 00:30:18,020
You can also set break points on Events.

501
00:30:19,800 --> 00:30:25,450
So click advance on different
things like that HTML.

502
00:30:25,450 --> 00:30:31,950
being parsed scripts loading keyboard
you know mouse up and mouse down sir.

503
00:30:31,950 --> 00:30:34,769
Lots of different ways to set
break points, all very useful.

504
00:30:34,769 --> 00:30:38,057
[BLANK_AUDIO]

505
00:30:38,057 --> 00:30:41,100
I think that is it for the Sources tab.

506
00:30:41,100 --> 00:30:45,760
What I find myself using the most
is definitely the little code

507
00:30:45,760 --> 00:30:46,930
PrettyPrinter, and

508
00:30:46,930 --> 00:30:50,120
then just kind of stepping through it,
understanding the code.

509
00:30:50,120 --> 00:30:53,050
But break points are definitely
super useful too.

510
00:30:55,530 --> 00:30:57,960
John, is there anything
you think I missed?

511
00:30:57,960 --> 00:31:00,230
>> No, not that I can think of.

512
00:31:00,230 --> 00:31:04,848
Maybe, nah,
I think that about covers it.

513
00:31:04,848 --> 00:31:07,890
The Sources tab, I mean, it's really
handy for just kind of exploring

514
00:31:07,890 --> 00:31:14,810
the files in this sight just kind
of setting those break points.

515
00:31:14,810 --> 00:31:19,520
Other than that, I mean one of the
things that a lot of people ask is like,

516
00:31:19,520 --> 00:31:23,670
okay, what can I edit my JavaScript
from, from the Sources tab?

517
00:31:23,670 --> 00:31:29,230
And be able to go and lie,
basically lie about it my code and

518
00:31:29,230 --> 00:31:33,600
currently there isn't a way to
do that improve their tools but

519
00:31:33,600 --> 00:31:37,830
it is something that I've heard a lot
of talk about adding in the future.

520
00:31:40,030 --> 00:31:44,072
So hopefully that will be
something that like gets added, so

521
00:31:44,072 --> 00:31:48,447
you can kind of like mess with fewer
jobs for files in your source.

522
00:31:48,447 --> 00:31:53,224
Luckily, it's easy enough with a front
end web dev to just edit the files

523
00:31:53,224 --> 00:31:57,609
yourself and refresh the page, but
yeah I think that will be coming

524
00:31:57,609 --> 00:32:02,072
to Chrome soon like the ability to
edit the file in the sources tab and

525
00:32:02,072 --> 00:32:05,317
refresh the page and
have your edits processed.

526
00:32:05,317 --> 00:32:10,217
All right last one
here that I am going to

527
00:32:10,217 --> 00:32:15,440
screen share is the resources tab.

528
00:32:15,440 --> 00:32:22,070
The resources tab shows you basically
all the resources the page has cached or

529
00:32:22,070 --> 00:32:28,570
is storing, and really, just sort
of anything that this page has.

530
00:32:28,570 --> 00:32:30,940
So we can look at all the images,

531
00:32:32,170 --> 00:32:35,090
we can look at all
the scripts that have loaded.

532
00:32:35,090 --> 00:32:39,110
So a lot of this stuff is similar
to what we find in the Sources tab.

533
00:32:39,110 --> 00:32:41,395
But additionally, like I've mentioned,

534
00:32:41,395 --> 00:32:44,790
we actually are able to see
information about whats in the cache,

535
00:32:44,790 --> 00:32:48,391
if there's anything that's been
cashed by websites or IndexedDB.

536
00:32:48,391 --> 00:32:52,133
You can also look at anything that's
getting stored on Local Storage.

537
00:32:52,133 --> 00:32:56,904
So we can see that this person has,
let's make this a little bigger,

538
00:32:56,904 --> 00:33:02,432
this a little longer, you can see that
their using Google ads on their website.

539
00:33:02,432 --> 00:33:07,537
And they're kind of have
a few pieces of information

540
00:33:07,537 --> 00:33:12,069
cached in local storage for
whatever reason.

541
00:33:12,069 --> 00:33:18,210
>> Yeah, usually for advertising and
tracking things like that.

542
00:33:18,210 --> 00:33:23,353
>> So yeah, and then we can look at
sort of a session storage which is some

543
00:33:23,353 --> 00:33:28,765
local storage usually persists where
session storage is just cached for

544
00:33:28,765 --> 00:33:30,466
this unique session.

545
00:33:30,466 --> 00:33:35,439
Whereas, local storage persists for
a user account, typically,

546
00:33:35,439 --> 00:33:38,684
for a couple hours or a day or two, and-
>> Yeah,

547
00:33:38,684 --> 00:33:42,205
you can even close the browser and
reopen it and it'll still be there.

548
00:33:42,205 --> 00:33:45,711
Mm-hm, cookie used, yum.

549
00:33:45,711 --> 00:33:46,698
Same sort of thing,

550
00:33:46,698 --> 00:33:50,930
we can look at all the information
that's cached by these cookies.

551
00:33:50,930 --> 00:33:54,797
There's also, sort of, application
cache that you can set up and

552
00:33:54,797 --> 00:33:57,410
the usually cache storage
you want to set up.

553
00:33:57,410 --> 00:34:02,492
And for those who are interested in
service workers, this is actually

554
00:34:02,492 --> 00:34:07,590
where you can look at any sort of
worker objects operating on the site.

555
00:34:07,590 --> 00:34:09,150
A good, let's see,

556
00:34:09,150 --> 00:34:14,400
I think Google actually should
have a service worker on it.

557
00:34:14,400 --> 00:34:15,230
Let's take a look.

558
00:34:17,650 --> 00:34:19,909
Maybe not,
we'll find out in a second, I guess.

559
00:34:21,460 --> 00:34:25,190
Yeah, so we can see all the information
about our service worker here.

560
00:34:25,190 --> 00:34:26,980
For those of you who,

561
00:34:26,980 --> 00:34:31,870
this isn't something we cover in
the front end web developer nano degree.

562
00:34:31,870 --> 00:34:35,960
It's a little bit of a more advanced
feature that's really new to the web.

563
00:34:35,960 --> 00:34:38,560
But we do cover it in the senior
web developer nano degree.

564
00:34:38,560 --> 00:34:43,730
So if you're interested in what service
workers are, what they're used for,

565
00:34:43,730 --> 00:34:48,719
how you can use them, what the heck
this panel is in the Resources tab,

566
00:34:48,719 --> 00:34:52,297
be sure to check out at Nano Degree and
specifically,

567
00:34:52,297 --> 00:34:55,880
the offline first course where you
can learn a little bit about what

568
00:34:55,880 --> 00:34:59,170
the service worker is and
why you would want to use one.

569
00:34:59,170 --> 00:35:03,080
>> Yeah, at the most basic level,
if you just want a definition,

570
00:35:03,080 --> 00:35:06,170
it's basically a script that
runs in the background, and

571
00:35:06,170 --> 00:35:09,260
it's not necessarily attached
to the page that you're on.

572
00:35:10,728 --> 00:35:14,190
Just, you kind of view it as a
background process on a computer almost,

573
00:35:14,190 --> 00:35:15,030
but just for the browser.

574
00:35:16,250 --> 00:35:20,770
Yeah, and
then I have a few extra tabs here,

575
00:35:20,770 --> 00:35:23,130
like the security tab,
which is pretty new.

576
00:35:24,520 --> 00:35:29,340
It's more just something implemented
by Google to make sure that the page is

577
00:35:29,340 --> 00:35:34,290
secure based on what they
consider as secure pages,

578
00:35:34,290 --> 00:35:35,710
you know, does it use https?

579
00:35:35,710 --> 00:35:37,860
Does it have a valid certificate?

580
00:35:37,860 --> 00:35:40,110
Is it using a secure TLS connection?

581
00:35:40,110 --> 00:35:42,330
Is it using secure resources?

582
00:35:42,330 --> 00:35:49,070
This is handy if you are kind of in that
sort of whole stacky part of the world,

583
00:35:49,070 --> 00:35:51,860
where you're also kind of dealing with
this kind of stuff, but as a front-end

584
00:35:51,860 --> 00:35:55,650
developer, you probably don't have
to worry about this page so much.

585
00:35:55,650 --> 00:35:59,630
But it's still handy from time to time,
especially if you're doing some work

586
00:35:59,630 --> 00:36:03,630
that server setup kind of
stuff on your page as well.

587
00:36:05,240 --> 00:36:11,600
And then, the last couple tabs
I have here is an Audit tab.

588
00:36:11,600 --> 00:36:13,846
This one's actually, eventually,

589
00:36:13,846 --> 00:36:18,055
going to get officially supported by
Chrome, but this will let you sort of

590
00:36:18,055 --> 00:36:23,290
audit your pages for accessibility
network utilization and performance.

591
00:36:23,290 --> 00:36:28,247
So if you run it, it basically just
kind of does some test on your page and

592
00:36:28,247 --> 00:36:33,711
then gives you a bunch Information on
whether or not your page is accessible,

593
00:36:33,711 --> 00:36:38,922
are you using good colors so that color
blind people are able to understand

594
00:36:38,922 --> 00:36:44,471
the page well, are you utilizing the
network by leveraging browser caching,

595
00:36:44,471 --> 00:36:50,230
setting minimum cookie sizes, are you
doing the right things for performance.

596
00:36:50,230 --> 00:36:53,826
So a lot of this stuff would be sort
of what you used to do with Page Speed

597
00:36:53,826 --> 00:36:56,988
insights, and it's going to
be completely integrated into

598
00:36:56,988 --> 00:36:59,166
the Chrome developer tools pretty soon.

599
00:36:59,166 --> 00:37:04,012
But in the mean time, you can find
it on the Chrome store as a plugin

600
00:37:04,012 --> 00:37:08,890
that you can install and
it'll automatically set-up widgets.

601
00:37:08,890 --> 00:37:11,690
These last two,
I'm not going to dive too deep into but

602
00:37:11,690 --> 00:37:15,820
they're just debuggers for
specific frameworks.

603
00:37:15,820 --> 00:37:20,140
So there is a framework you're using,
say, Backbone, Amber, or Knock Out.

604
00:37:20,140 --> 00:37:24,670
More often than not, you can usually
find some kind of debugging tool that

605
00:37:24,670 --> 00:37:29,690
you just download, it installs, it sets
up its own Chrome tab, and it'll make it

606
00:37:29,690 --> 00:37:34,680
handy for sort of debugging applications
that are using that technology.

607
00:37:34,680 --> 00:37:38,140
Because sometimes it does
become difficult to debug those

608
00:37:38,140 --> 00:37:41,659
using just the elements or
resources or console tabs.

609
00:37:42,940 --> 00:37:45,470
>> Yeah, these JavaScript
frameworks are very complicated.

610
00:37:46,662 --> 00:37:52,280
I think you can find those just as
Chrome extensions from Chrome web store.

611
00:37:54,040 --> 00:37:56,620
>> Yeah, yeah, so most of those
are on the Chrome web store.

612
00:37:56,620 --> 00:38:01,830
Even some of the frameworks,
the sites have them listed there.

613
00:38:01,830 --> 00:38:06,915
But yeah, I mean, it's just as easy
as finding, Googling backbone,

614
00:38:06,915 --> 00:38:11,370
or amber, or
angular Chrome developer tools.

615
00:38:11,370 --> 00:38:16,938
And usually, the first link that pops
up in Google, Bing, Duck Duck Go,

616
00:38:16,938 --> 00:38:23,237
whatever you use ideally will
be that Chrome web store link.

617
00:38:23,237 --> 00:38:26,720
Yeah, so
that's pretty much the Chrome Dev tools.

618
00:38:26,720 --> 00:38:28,570
If do you have any more
questions about it or

619
00:38:28,570 --> 00:38:33,240
are if you're finding it
difficult to parse something or

620
00:38:33,240 --> 00:38:37,340
understand something in the Dev tools,
where things change dramatically again,

621
00:38:37,340 --> 00:38:41,970
which they always seem to do because the
Google team is constantly iterating on

622
00:38:41,970 --> 00:38:46,370
these, we'll be happy to clarify any
points you guys have in the forum.

623
00:38:46,370 --> 00:38:49,700
But let's take a look and
see if we got any questions.

624
00:38:49,700 --> 00:38:54,170
We had one a little earlier from Jonas
about what regex is and I went ahead and

625
00:38:54,170 --> 00:38:58,820
answered it in the chat, but
I'll say it out loud here as well.

626
00:38:58,820 --> 00:39:02,830
Regex is just short for regular
expressions, and it's just a pattern

627
00:39:02,830 --> 00:39:07,710
matching language that you can use to
sort of match patterns of strings.

628
00:39:07,710 --> 00:39:13,210
It's really handy for sort of parsing
over data, and parsing over files,

629
00:39:13,210 --> 00:39:18,030
and just picking out specific
pieces of content that you want.

630
00:39:18,030 --> 00:39:19,480
It's a pretty handy language.

631
00:39:19,480 --> 00:39:24,088
It's pretty common in most programming
languages to use some sort of

632
00:39:24,088 --> 00:39:29,060
regex functionality ,and there's
a lot of regex interpreters online

633
00:39:29,060 --> 00:39:32,519
that you can use to practice and play
around with your regular expressions.

634
00:39:35,030 --> 00:39:40,230
We get this one from Alex that says,
it would be nice, in fact,

635
00:39:40,230 --> 00:39:45,448
if you show an actual debugging process,
how to step around functions, etcetera.

636
00:39:45,448 --> 00:39:49,430
You know what?

637
00:39:49,430 --> 00:39:54,260
>> In the forum post, I can go into
a lot more detail with the debugger.

638
00:39:54,260 --> 00:39:58,320
In hindsight, the website we picked
probably doesn't have enough complicated

639
00:39:58,320 --> 00:40:01,256
JavaScript to do anything
worthwhile with the debugger.

640
00:40:01,256 --> 00:40:05,837
But look out for that forum post
which will be Coming out in under

641
00:40:05,837 --> 00:40:10,630
an hour most likely and I will go
super in depth into the debugger.

642
00:40:10,630 --> 00:40:15,607
>> Yeah and I mean the debugger
is a pretty handy tool.

643
00:40:15,607 --> 00:40:19,309
I would say I use it when I'm doing,

644
00:40:19,309 --> 00:40:24,494
most of my websites are super
JavaScript heavy but

645
00:40:24,494 --> 00:40:27,825
I think it comes in handy a lot for

646
00:40:27,825 --> 00:40:32,910
projects like the classic
arcade game project.

647
00:40:32,910 --> 00:40:37,001
Where there's sort of a lot of of
continuous JavaScript functions that

648
00:40:37,001 --> 00:40:39,589
are continually running,
and looping, and

649
00:40:39,589 --> 00:40:41,928
executing while the user is on the page.

650
00:40:41,928 --> 00:40:48,850
Yeah, and single-page JavaScript, apps
using those big frameworks we mentioned.

651
00:40:48,850 --> 00:40:50,406
Angular backbone, Ember.

652
00:40:50,406 --> 00:40:52,660
That's when the debugger comes in handy.

653
00:40:52,660 --> 00:40:57,430
Kind of static websites that
are mostly HTML and CSS-based.

654
00:40:57,430 --> 00:40:59,390
You don't really need it, but for

655
00:40:59,390 --> 00:41:02,850
those bigger JavaScripty websites,
definitely useful.

656
00:41:02,850 --> 00:41:06,740
So yeah, again, I'll go into a lot of
detail in that in the form post and

657
00:41:06,740 --> 00:41:08,420
with screenshots and
everything like that.

658
00:41:10,670 --> 00:41:11,670
>> Cool.

659
00:41:11,670 --> 00:41:16,040
It doesn't look like we have any other
questions unless they start coming in.

660
00:41:16,040 --> 00:41:21,060
But yeah, I mean the DevTools are,
you're going to be buried in them.

661
00:41:21,060 --> 00:41:24,700
It's a really good skill
to have as a web developer.

662
00:41:24,700 --> 00:41:28,390
It's going to give you a lot of
insights in to your website and

663
00:41:28,390 --> 00:41:30,359
websites other people build.

664
00:41:30,359 --> 00:41:35,204
In fact, it's honestly the,
it's easy to learn by just going to

665
00:41:35,204 --> 00:41:38,566
other websites that
you're familiar with.

666
00:41:38,566 --> 00:41:41,996
Cracking open adept tools or
just kind of playing around with the.

667
00:41:41,996 --> 00:41:45,057
The more experience you can just
kind of trying things out the easier it

668
00:41:45,057 --> 00:41:46,030
is to remember them.

669
00:41:46,030 --> 00:41:51,090
And the easier it is for you to remember
like hey, I can do this and go tools

670
00:41:51,090 --> 00:41:56,009
are great for looking at websites and
trying to mimic things as well.

671
00:41:57,050 --> 00:41:59,140
That's a big part of the learning
process as well I think.

672
00:41:59,140 --> 00:42:00,120
>> Yeah, definitely.

673
00:42:00,120 --> 00:42:03,790
It's great for if you get inspired by
something on a website you stumble upon

674
00:42:03,790 --> 00:42:06,080
and you want to kind of
learn how to do it.

675
00:42:06,080 --> 00:42:08,200
The dev tools make it just a click away.

676
00:42:09,790 --> 00:42:13,760
>> Yeah, I love doing that and

677
00:42:13,760 --> 00:42:17,250
I think there's there's a lot of
websites that I go to, a lot of blogs

678
00:42:17,250 --> 00:42:22,030
that I see where some developers done
some really nice like CSS animation

679
00:42:23,420 --> 00:42:27,040
or like a really cool fly out or
some really cool text.

680
00:42:27,040 --> 00:42:28,880
And I'm like man what box is that?

681
00:42:28,880 --> 00:42:33,490
And it's really easy to just highlight
it, crack open the depth tools, and

682
00:42:33,490 --> 00:42:36,480
see it right away like, okay,
they're using this font.

683
00:42:36,480 --> 00:42:39,290
This is how they're sort of
triggering this animation.

684
00:42:39,290 --> 00:42:40,900
Or this is the JavaScript they're using.

685
00:42:40,900 --> 00:42:46,420
It kind of

686
00:42:46,420 --> 00:42:49,480
feels like you're playing detective
sometimes and I think I like that.

687
00:42:49,480 --> 00:42:52,850
>> Yeah, definitely.

688
00:42:54,680 --> 00:42:59,390
>> All right, so it doesn't look
like we have any more questions.

689
00:42:59,390 --> 00:43:03,360
So any last thoughts from you, Tye?

690
00:43:03,360 --> 00:43:07,370
>> No, like John said, the best way to
learn the dev tools is definitely just

691
00:43:07,370 --> 00:43:09,880
jump in and start playing around.

692
00:43:09,880 --> 00:43:13,970
In the forum posts that I mentioned
that'll be posting out shortly soon or

693
00:43:13,970 --> 00:43:19,120
shortly after the call is that
Google has great documentation so

694
00:43:19,120 --> 00:43:21,860
I'll be sharing a link to
the dev tools documentation.

695
00:43:21,860 --> 00:43:25,160
That's really the only place you need
to go to learn about the dev tools.

696
00:43:25,160 --> 00:43:26,452
They did a really good job with that.

697
00:43:26,452 --> 00:43:31,502
>> Yeah and going here documentation,
there's still something

698
00:43:31,502 --> 00:43:36,467
to you that need to be updated
especially on the timeline too.

699
00:43:36,467 --> 00:43:37,775
>> Yeah the timeline.

700
00:43:37,775 --> 00:43:41,846
Like I noticed in the docs it was
slightly outdated it looked like it was

701
00:43:41,846 --> 00:43:43,580
from the last version of cry.

702
00:43:43,580 --> 00:43:46,189
As far as the like the screen
shots need to be updated but

703
00:43:46,189 --> 00:43:48,527
most of the information
there is very up to date.

704
00:43:48,527 --> 00:43:51,869
And the tutorial also really helpful,
they kind of show you,

705
00:43:51,869 --> 00:43:54,773
how to do all of kind of
the basic things we mentioned.

706
00:43:54,773 --> 00:43:58,613
And there's a lot more advanced stuff
you can do with the death tools as well,

707
00:43:58,613 --> 00:43:59,806
if you want to die then.

708
00:43:59,806 --> 00:44:03,489
>> Yeah and like we mentioned if
you guys are having trouble or

709
00:44:03,489 --> 00:44:06,133
forget about this webcast in the future.

710
00:44:06,133 --> 00:44:09,180
You're like, I can't figure out
how to do this in the dev tools.

711
00:44:09,180 --> 00:44:10,990
Always feel free to ask in the forum.

712
00:44:10,990 --> 00:44:15,912
You can ping us directly
using @ John Nave And for

713
00:44:15,912 --> 00:44:19,164
Tye, I think it's just @tye.

714
00:44:19,164 --> 00:44:22,162
>> Yeah, it's either @tye or
@tyelucaskelley.

715
00:44:22,162 --> 00:44:24,182
I think it's just @tye on the forums.

716
00:44:24,182 --> 00:44:24,785
>> Cool.

717
00:44:24,785 --> 00:44:29,306
Or slack that works as well
[CROSSTALK] from there.

718
00:44:29,306 --> 00:44:31,442
All right.

719
00:44:31,442 --> 00:44:32,290
Let's see.

720
00:44:32,290 --> 00:44:37,080
We got one last quick
question in from Jay,

721
00:44:37,080 --> 00:44:41,060
who says, are the devtools any
different with Chrome Canary?

722
00:44:41,060 --> 00:44:46,740
And the answer is yeah, typically,
you're going to find a lot of sort of

723
00:44:46,740 --> 00:44:52,772
beta features, and early features that
are introduced into the dev tools.

724
00:44:52,772 --> 00:44:55,984
Most of the general stuff is
that pretty much the same

725
00:44:55,984 --> 00:44:59,707
like they haven't completely
changed the constant tab, or

726
00:44:59,707 --> 00:45:02,925
they haven't completely
changed the network tab.

727
00:45:02,925 --> 00:45:05,741
But what you might find is you
might find that there is an extra

728
00:45:05,741 --> 00:45:06,470
button there.

729
00:45:06,470 --> 00:45:12,105
Or it might give you a little bit of
different information or maybe there's

730
00:45:12,105 --> 00:45:17,663
a new tab on there that includes some
new features that you are able to use.

731
00:45:17,663 --> 00:45:23,077
But generally, all the sort of previous
tabs and features that are accessible

732
00:45:23,077 --> 00:45:28,010
and sort of earlier versions of Chrome
are available in Chrome Canary.

733
00:45:28,010 --> 00:45:30,620
They haven't done any sort of real

734
00:45:30,620 --> 00:45:36,420
gigantic overhaul where it's vastly
changed the way the dept rules work.

735
00:45:36,420 --> 00:45:40,160
>> Yeah, you should still totally feel
at home and the canary adept tools.

736
00:45:42,720 --> 00:45:45,169
>> One last question from

737
00:45:45,169 --> 00:45:49,320
where do you find the page
that you were talking about.

738
00:45:49,320 --> 00:45:53,630
We'll be posting under the forms and

739
00:45:53,630 --> 00:45:58,102
will be sure to send out I'll

740
00:45:58,102 --> 00:46:04,320
update this video's description
with the link to that as well.

741
00:46:04,320 --> 00:46:08,730
And I'll see about getting
maybe the link emailed out for

742
00:46:08,730 --> 00:46:12,010
those of you wanting to go back and
look at that.

743
00:46:12,010 --> 00:46:17,410
But they'll be in the course
forums in the broadcasts and

744
00:46:17,410 --> 00:46:18,420
announcements section.

745
00:46:22,630 --> 00:46:23,130
Sweet.

746
00:46:25,950 --> 00:46:28,560
All right, thank you everybody for
joining us today.

747
00:46:28,560 --> 00:46:29,771
Thank you, Tye.

748
00:46:29,771 --> 00:46:31,815
>> Bye everybody.

749
00:46:31,815 --> 00:46:35,100
>> All right, cool, have a good rest of
your Monday and we'll see you next time.
