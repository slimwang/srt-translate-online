1
00:00:00,480 --> 00:00:02,630
So let's try something
a little more difficult.

2
00:00:02,630 --> 00:00:05,270
And we'll make it
the first coding exercise.

3
00:00:05,270 --> 00:00:07,598
Instead of drawing just a single star,

4
00:00:07,598 --> 00:00:10,219
let's fill the screen
with the star field.

5
00:00:10,219 --> 00:00:12,590
Let's go ahead and import the project.

6
00:00:12,590 --> 00:00:16,819
So it looks like in the course code,
we have Exercise-DrawStarField,

7
00:00:16,819 --> 00:00:19,090
and Solution-DrawStarField.

8
00:00:19,090 --> 00:00:21,600
You know what, let's open up
the solution first to see what

9
00:00:21,600 --> 00:00:22,310
we're aiming for.

10
00:00:24,170 --> 00:00:28,404
For a project that I don't think I'm
going to be running a whole ton of

11
00:00:28,404 --> 00:00:33,005
times, I'll sometimes skip setting
up the desktop run configuration and

12
00:00:33,005 --> 00:00:36,674
instead, just open up the terminal and
type ./gradlew.

13
00:00:36,674 --> 00:00:39,874
On Windows, we just leave off the ./ and

14
00:00:39,874 --> 00:00:44,276
then tell Gradle,
hey I want to run the desktop run task.

15
00:00:44,276 --> 00:00:47,010
All right, there we go.

16
00:00:47,010 --> 00:00:49,801
I cranked up the star density pretty
high in the hopes that you can

17
00:00:49,801 --> 00:00:50,599
actually see this.

18
00:00:50,599 --> 00:00:52,556
All right so this is what
we're going to try and make.

19
00:00:52,556 --> 00:00:55,682
Let's jump over to the starter project.

20
00:00:55,682 --> 00:00:58,830
All right here we go again, import
project, and this time we're going to

21
00:00:58,830 --> 00:01:02,430
open the exercise project
instead of the solution project.

22
00:01:02,430 --> 00:01:04,690
All right, we've got
the exercise project loaded up.

23
00:01:04,690 --> 00:01:08,765
Let's open up the TODOs to
see what we need to do.

24
00:01:08,765 --> 00:01:11,650
TODO, start here, sounds good.

25
00:01:11,650 --> 00:01:14,030
Looks like we got some
instructions in this exercise.

26
00:01:14,030 --> 00:01:16,420
We'll draw a star field of white
points on a black background.

27
00:01:16,420 --> 00:01:19,440
The number of points will be defined
by a density parameter that states what

28
00:01:19,440 --> 00:01:21,530
proportion of the pixels
should be white.

29
00:01:21,530 --> 00:01:22,565
All right.

30
00:01:22,565 --> 00:01:25,590
TODO: Run what you've got
before making any changes.

31
00:01:25,590 --> 00:01:28,630
Since I do anticipate to be running
this project a while bunch of times,

32
00:01:28,630 --> 00:01:31,630
I am going to go ahead and
create a run configuration for it.

33
00:01:31,630 --> 00:01:35,190
If we run it, we get red.

34
00:01:35,190 --> 00:01:37,560
The sky is not supposed to be red.

35
00:01:37,560 --> 00:01:40,120
I presume we're going to
have to fix that later.

36
00:01:40,120 --> 00:01:41,765
Oh well,
at least we've got a running project.

37
00:01:42,790 --> 00:01:44,630
Opening up the TODOs again.

38
00:01:44,630 --> 00:01:46,592
We've started here,
we've run what we've got.

39
00:01:46,592 --> 00:01:49,730
All right, next thing,
initialize a shape renderer.

40
00:01:49,730 --> 00:01:50,790
Okay, well that's easy enough.

41
00:01:52,530 --> 00:01:56,030
shapeRenderer = new ShapeRenderer,
done and dusted.

42
00:01:56,030 --> 00:01:58,570
All right, the next toTODO,
call initStars.

43
00:01:58,570 --> 00:02:02,500
All right,
initStars takes this density parameter.

44
00:02:02,500 --> 00:02:05,110
And looks like we have a constant
defined for that, okay?

45
00:02:06,120 --> 00:02:07,850
All right, easy, we're on a roll.

46
00:02:07,850 --> 00:02:10,000
Let's do one more.

47
00:02:10,000 --> 00:02:13,020
Let's say I'm confused,
instructions unclear,

48
00:02:13,020 --> 00:02:15,490
got charging cable stuck in ceiling fan.

49
00:02:15,490 --> 00:02:19,090
Well, not to worry, we've got
the solution to this exercise as well.

50
00:02:19,090 --> 00:02:23,333
Here we are back in the reference
solution, and if we open up the TODOs,

51
00:02:23,333 --> 00:02:26,968
we see the exact same TODO list
as we had over in the exercise.

52
00:02:26,968 --> 00:02:28,730
So here is the TODO we were stuck on.

53
00:02:29,810 --> 00:02:34,590
And let's see, we get the screen width
using Gdx.graphics.getWidth, okay.

54
00:02:34,590 --> 00:02:38,290
We get screen height using
Gdx.graphics.getHeight, all right.

55
00:02:38,290 --> 00:02:39,590
And then starCount.

56
00:02:39,590 --> 00:02:44,070
All right, so that's the height
times the width times the density.

57
00:02:44,070 --> 00:02:45,130
All right, that makes sense.

58
00:02:45,130 --> 00:02:48,010
So this is the total number
of pixels on the screen.

59
00:02:48,010 --> 00:02:51,120
And then this is the proportion
of them that should be stars.

60
00:02:51,120 --> 00:02:52,440
And then we just cast it to an int.

61
00:02:52,440 --> 00:02:55,000
All right, seems straightforward enough.

62
00:02:55,000 --> 00:02:58,950
Now we can hop back over to the exercise
code and replicate what we saw here.

63
00:02:58,950 --> 00:03:01,770
Or we can just copy and paste if
we're feeling particularly lazy.

64
00:03:02,982 --> 00:03:06,450
All right, time for you to tackle
the rest of the TODOs on your own,

65
00:03:06,450 --> 00:03:08,070
using the reference
solution whenever you need.

66
00:03:08,070 --> 00:03:11,850
When you're done check out the reference
solution anyway, as there will be

67
00:03:11,850 --> 00:03:15,450
useful tips, best practices, and
maybe some extra challenges to try.

68
00:03:16,640 --> 00:03:19,140
If your version doesn't look exactly
like the reference solution,

69
00:03:19,140 --> 00:03:20,260
that's totally fine.

70
00:03:20,260 --> 00:03:22,540
There are always a lot of ways
to accomplish the same goal.
