1
00:00:00,380 --> 00:00:02,240
Now let's look at the code for getting an entity

2
00:00:02,240 --> 00:00:05,130
out of the datastore. Since you know the key for a

3
00:00:05,130 --> 00:00:08,560
profile entity, as Mark has explained, you can use the

4
00:00:08,560 --> 00:00:11,140
key to easily yank the, the entity out of the datastore.

5
00:00:11,140 --> 00:00:14,760
You've already learned how to save entities and how to

6
00:00:14,760 --> 00:00:17,800
view them in the admin console. The obvious next step is

7
00:00:17,800 --> 00:00:21,170
to extend the conference center application to get the profile entities

8
00:00:21,170 --> 00:00:25,920
back out of the datastore. With objectify, you use the ofy.load

9
00:00:25,920 --> 00:00:28,960
function to load an entity. You can get an

10
00:00:28,960 --> 00:00:31,170
entity by key or you can query for entities

11
00:00:31,170 --> 00:00:33,810
that match search criteria. You'll be learning how to

12
00:00:33,810 --> 00:00:37,000
retrieve entities by key first. Then in the next lesson

13
00:00:37,000 --> 00:00:39,412
you'll learn how to query for entities that satisfy

14
00:00:39,412 --> 00:00:41,930
certain criteria. Let's take a look at the code

15
00:00:41,930 --> 00:00:44,540
to get an entity out of the data store.

16
00:00:44,540 --> 00:00:51,820
Ofy gets the objectify service. Load, loads the entity. Key,

17
00:00:51,820 --> 00:00:54,750
is the key of the entity to load. And

18
00:00:54,750 --> 00:00:58,460
now means, do it now, don't wait, in other words,

19
00:00:58,460 --> 00:01:01,500
do it synchronously. That's all well and good, but

20
00:01:01,500 --> 00:01:03,690
how do you get the key? You need to know

21
00:01:03,690 --> 00:01:05,870
the unique ID that was used to generate the

22
00:01:05,870 --> 00:01:10,580
key. Remember how you used the [UNKNOWN] annotation to identify

23
00:01:10,580 --> 00:01:14,240
user ID as the ID when creating a profile entity.

24
00:01:14,240 --> 00:01:17,200
The ID is used to generate the key. The ID

25
00:01:17,200 --> 00:01:19,490
isn't the key by itself but its essential to

26
00:01:19,490 --> 00:01:22,580
generating the key. So, for any user who's logged in,

27
00:01:22,580 --> 00:01:25,230
your app can retrieve the user ID, which means you

28
00:01:25,230 --> 00:01:28,400
can generate the key and consequently get the profile entity

29
00:01:28,400 --> 00:01:32,660
directly from the datastore. As you've already learned, the user

30
00:01:32,660 --> 00:01:34,640
is parsed in the call to the end points method

31
00:01:34,640 --> 00:01:38,110
and you can simply get the user ID like this,

32
00:01:38,110 --> 00:01:42,940
getUserId. To get a key, you call the create method

33
00:01:42,940 --> 00:01:46,310
on the key class and you need to specify the

34
00:01:46,310 --> 00:01:50,210
kind of entity that you want to retrieve. Here entity's actually

35
00:01:50,210 --> 00:01:52,420
a variable, so let's say we were creating a key

36
00:01:52,420 --> 00:01:56,120
for recipe, this would be recipe.class. Then you need to pass

37
00:01:56,120 --> 00:01:58,270
the ID that was used to generate the key, in

38
00:01:58,270 --> 00:02:01,250
this case we're using user ID. So now we know the

39
00:02:01,250 --> 00:02:04,120
ID and we know the key, we can get the entity

40
00:02:04,120 --> 00:02:08,120
from the data store using the key. Now it's your turn

41
00:02:08,120 --> 00:02:10,150
to work on your conference central app.

42
00:02:10,150 --> 00:02:13,200
You need to complete the getProfile method by

43
00:02:13,200 --> 00:02:15,820
filling in the TODO to load and return

44
00:02:15,820 --> 00:02:18,310
the profile entity. You'll need to get the

45
00:02:18,310 --> 00:02:23,680
userID, you'll need to create the key, and you get the profile, and then you

46
00:02:23,680 --> 00:02:27,010
return the profile. When you've implemented getProfile, you

47
00:02:27,010 --> 00:02:29,020
can try it out in the APIs Explorer
