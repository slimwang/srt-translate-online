1
00:00:00,000 --> 00:00:03,000
The answer is it corresponds to the center red,

2
00:00:03,000 --> 00:00:06,000
which is the guy over here.

3
00:00:06,000 --> 00:00:08,000
Finding this is not easy.

4
00:00:08,000 --> 00:00:11,000
This is the fifth pixel on the left camera image,

5
00:00:11,000 --> 00:00:14,000
and it's the fourth pixel on the right camera image.

6
00:00:14,000 --> 00:00:19,000
To make that correspondence, we have to understand that the best match matches

7
00:00:19,000 --> 00:00:24,000
these 2 black pixels over here, followed by an occlusion pixel

8
00:00:24,000 --> 00:00:27,000
that's only visible on the left but not on the right,

9
00:00:27,000 --> 00:00:30,000
followed by the 3 corresponding red pixels,

10
00:00:30,000 --> 00:00:32,000
followed by another occlusion pixel,

11
00:00:32,000 --> 00:00:36,000
followed by 2 black pixels that basically correspond.

12
00:00:36,000 --> 00:00:40,000
I now want to look into algorithms that can take entire scan lines of the left side

13
00:00:40,000 --> 99:59:59,999
and correspond them to entire scan lines on the right side.
