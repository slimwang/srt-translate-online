1
00:00:00,140 --> 00:00:02,330
So I decided to take a look at one of my favorite websites,

2
00:00:02,330 --> 00:00:04,000
Netflix. I'm going to open up dev

3
00:00:04,000 --> 00:00:07,180
tools by pressing Cmd+Option+I. Turn on emulation.

4
00:00:09,390 --> 00:00:11,790
And go into the timeline. I'll do a hard reload by

5
00:00:11,790 --> 00:00:15,270
doing Cmd+Shift+R. We can see the events that happen as the

6
00:00:15,270 --> 00:00:17,960
page is loading. Let's take a look at the first couple.

7
00:00:17,960 --> 00:00:20,960
We could see we send a request for the homepage here. This

8
00:00:20,960 --> 00:00:23,700
is the HTML file that we need to load the page.

9
00:00:23,700 --> 00:00:26,970
Let's scroll down. We can see that when the HTML file

10
00:00:26,970 --> 00:00:31,000
finishes loading, we then parse the HTML. Let's open this up.

11
00:00:31,000 --> 00:00:35,140
And we see a request for two different files, both called include.

12
00:00:35,140 --> 00:00:38,930
Clicking on the first one gives us this CSS file.

13
00:00:40,070 --> 00:00:44,000
Scrolling down, I think we can pick out two pretty obvious

14
00:00:44,000 --> 00:00:47,660
optimizations just looking at this file. The first optimization is

15
00:00:47,660 --> 00:00:49,850
to minify the CSS or get rid of all the white

16
00:00:49,850 --> 00:00:52,480
space. The white space in the file only helps us

17
00:00:52,480 --> 00:00:55,610
read it. It doesn't help the browser parse the file. So

18
00:00:55,610 --> 00:00:57,330
in fact, if we got rid of all the white space,

19
00:00:57,330 --> 00:01:00,810
we would remove a significant amount of bytes from our data.

20
00:01:00,810 --> 00:01:04,470
The second optimization is to inline critical CSS and we wouldn't have

21
00:01:04,470 --> 00:01:08,150
to send out another request for this CSS file to style this page
