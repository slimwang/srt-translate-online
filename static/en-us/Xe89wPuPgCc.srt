1
00:00:00,630 --> 00:00:03,670
Let us return to means-ends analysis for just another minute.

2
00:00:03,670 --> 00:00:07,670
Just to see how means-ends analysis, might try to work with this problem, and

3
00:00:07,670 --> 00:00:11,850
get into difficulties. So this is the goal state, painted ladder and

4
00:00:11,850 --> 00:00:16,329
painted ceiling. And this is the initial state. Now means-ends analysis may

5
00:00:16,329 --> 00:00:18,790
enumerate the operators that have to deal with the painted ladder and

6
00:00:18,790 --> 00:00:22,240
the painted ceiling. Here the operator might be paint ladder.

7
00:00:22,240 --> 00:00:26,405
Here the operator might be paint ceiling, but that requires some

8
00:00:26,405 --> 00:00:30,520
pre-condition climb up ladder which is not satisfy the initial state.

9
00:00:30,520 --> 00:00:35,330
So maintenance analysis picked the goal painted ladder. And select

10
00:00:35,330 --> 00:00:38,990
the operator paint ladder, which gets the maintenance owner to this state.

11
00:00:38,990 --> 00:00:44,360
This is the holistic method. Here is the paint-ladder specified at the right,

12
00:00:44,360 --> 00:00:47,640
and you can see the peak conditions of paint-ladder, match the initial state,

13
00:00:47,640 --> 00:00:51,840
and the post conditions match the successive state. Now that means since

14
00:00:51,840 --> 00:00:54,960
analysis has achieved the first goal of painted ladder it make turn to

15
00:00:54,960 --> 00:00:59,140
the second goal of painted ceiling. Recall that this is the current state. So,

16
00:00:59,140 --> 00:01:02,860
mean sense analysis may pick the operator climb-ladder, as a peak condition for

17
00:01:02,860 --> 00:01:06,530
the operator of painted ceiling. But note what happens,

18
00:01:06,530 --> 00:01:11,460
when precondition of climb ladder, constitutes a postcondition of paint ladder.

19
00:01:11,460 --> 00:01:15,320
So this is not dry ladder, this is quest dry ladder. There is a conflict here.

20
00:01:15,320 --> 00:01:20,190
In a situation like this now, the robot, would need to just wait for

21
00:01:20,190 --> 00:01:24,590
the ladder to become dry again, before climb ladder is a [UNKNOWN]. So

22
00:01:24,590 --> 00:01:28,850
it seems as, as if the people who are sometimes hired for working on a home or

23
00:01:28,850 --> 00:01:33,390
using main sense analysis. The first being the ladder, then the goal weight,

24
00:01:33,390 --> 00:01:36,690
until the ladder dries up, and then they of course expect me to pay them for

25
00:01:36,690 --> 00:01:40,092
their time. To summarize, we have a plan for achieving one of the goals,

26
00:01:40,092 --> 00:01:44,635
Painted Ladder. But this particular plan clobbers achieving the other goal,

27
00:01:44,635 --> 00:01:49,160
Painted(Ceiling), because it creates a condition, that makes it impossible to

28
00:01:49,160 --> 00:01:54,800
achieve the other goal. The question now becomes [UNKNOWN] reason about

29
00:01:54,800 --> 00:01:59,990
the conflict between these codes? How can planning systematically find out,

30
00:01:59,990 --> 00:02:05,216
how to organize these various operators, so that these conflicts do not occur?

31
00:02:05,216 --> 00:02:09,250
What we have described here, this goal clobbering, is true for

32
00:02:09,250 --> 00:02:13,890
all simple planners, sometimes called linear planners. Linear planner,

33
00:02:13,890 --> 00:02:18,560
does not try to reason about the conflict between these goals. Does not try to

34
00:02:18,560 --> 00:02:22,149
reason about how the plan for one goal may clobber another goal. Instead it

35
00:02:22,149 --> 00:02:25,660
just goes about making plans as if those goals can be achieved in any order.
