1
00:00:00,270 --> 00:00:02,969
Most people think of Chrome Cast
when they hear the word Cast.

2
00:00:02,969 --> 00:00:06,680
But Google Cast, as a technology,
is much more than that.

3
00:00:06,680 --> 00:00:10,150
Chrome Cast is a small USB powered
dongle that plugs into the back of

4
00:00:10,150 --> 00:00:12,510
the HDMI port on your TV.

5
00:00:12,510 --> 00:00:15,550
Google Cast itself is
a connecting technology.

6
00:00:15,550 --> 00:00:18,830
Using the SDK, you can integrate
a Cast device to become part of your

7
00:00:18,830 --> 00:00:20,580
application's output area.

8
00:00:20,580 --> 00:00:24,722
And if you'd like, you can control the
Cast by sharing it with multiple people.

9
00:00:24,722 --> 00:00:28,070
Chrome Cast is just one product
that supports the Cast protocol.

10
00:00:28,070 --> 00:00:31,630
There are many others as well, including
Android TV, which is Cast built in,

11
00:00:31,630 --> 00:00:34,390
as well as audio speakers from LG and
Sony.

12
00:00:34,390 --> 00:00:37,430
Now as a developer, you don't need to be
aware of these different device types.

13
00:00:37,430 --> 00:00:40,240
Once you cast enable your app,
it will work with all of them.

14
00:00:40,240 --> 00:00:43,443
When you start working with Cast, you
typically have an existing application

15
00:00:43,443 --> 00:00:45,444
you've already built and
would like to extend.

16
00:00:45,444 --> 00:00:49,183
You integrate Google Cast into
your app using the Cast SDK.

17
00:00:49,183 --> 00:00:54,620
And Wii of SDK is available for Android,
iOS, as well web apps running on Chrome.

18
00:00:54,620 --> 00:00:57,890
The first thing to understand about
Google Cast are the concepts of a sender

19
00:00:57,890 --> 00:00:59,090
and a receiver.

20
00:00:59,090 --> 00:01:01,980
When you integrate the Cast SDK
into your existing app,

21
00:01:01,980 --> 00:01:04,120
it becomes what we call the sender.

22
00:01:04,120 --> 00:01:05,910
Sender applications send, or

23
00:01:05,910 --> 00:01:09,940
cast, content to cast devices
either on the local network or

24
00:01:09,940 --> 00:01:14,350
to cast devices running in guest mode
that can be detected based on proximity.

25
00:01:14,350 --> 00:01:17,690
What you cast from your application
needs to be received by something, and

26
00:01:17,690 --> 00:01:19,780
that's what we call the receiver.

27
00:01:19,780 --> 00:01:22,520
Receiver's are small
HDML five applications

28
00:01:22,520 --> 00:01:25,570
that run on a cast enabled device,
like a Chrome Cast.

29
00:01:25,570 --> 00:01:28,190
Here's a quick overview of
how the cast process works.

30
00:01:28,190 --> 00:01:30,340
First, you begin with an existing app.

31
00:01:30,340 --> 00:01:33,911
Then you integrate the Cast SDK
to enable discovery of devices.

32
00:01:33,911 --> 00:01:36,683
The SDK detects Cast devices
in the background, and

33
00:01:36,683 --> 00:01:39,645
when one's discovered the Cast
icon becomes visible.

34
00:01:39,645 --> 00:01:43,690
Clicking that Cast icon shows a menu
of the available Cast devices.

35
00:01:43,690 --> 00:01:46,000
And selecting one will start the Cast.

36
00:01:46,000 --> 00:01:49,040
The Cast icon then changes colors
to show that it's connected.

37
00:01:49,040 --> 00:01:52,260
At this point,
the sender becomes the remote control.

38
00:01:52,260 --> 00:01:54,170
Note that here,
we've connected to the Cast device

39
00:01:54,170 --> 00:01:55,870
before we've started playback.

40
00:01:55,870 --> 00:01:59,420
But it's also possible to connect
after playback's already begun.

41
00:01:59,420 --> 00:02:04,200
When the Cast begins, the Cast device
loads the receiver app from a URL.

42
00:02:04,200 --> 00:02:07,320
Here we can see the receiver's
been loaded onto the Cast device.

43
00:02:07,320 --> 00:02:09,211
Now receiver apps run independently, so

44
00:02:09,211 --> 00:02:12,470
you can tell it to load things
like media streams from a URL.

45
00:02:12,470 --> 00:02:16,240
When you do that, the Cast device pulls
the content directly from the Cloud, and

46
00:02:16,240 --> 00:02:19,170
this is great because the user can use
their mobile phone for other things,

47
00:02:19,170 --> 00:02:22,590
like checking e-mail or sending texts,
while the Cast is in progress.

48
00:02:22,590 --> 00:02:26,270
To control the Cast, you can send
messages from the sender to the receiver

49
00:02:26,270 --> 00:02:30,210
to do things like adjust the volume,
start playing new media, or even send

50
00:02:30,210 --> 00:02:33,820
custom messages, for instance, to enable
a thumbs up or a thumbs down button.

51
00:02:33,820 --> 00:02:35,410
And we'll see how to do
that later in the course.

52
00:02:36,430 --> 00:02:39,900
Receiver applications running on Cast
devices are just web applications.

53
00:02:39,900 --> 00:02:44,108
They're written in HTML, CSS, and
JavaScript, just like any other webpage.

54
00:02:44,108 --> 00:02:46,940
The Cast device itself runs
a special version of Chrome, and

55
00:02:46,940 --> 00:02:48,930
you can think of that
as having a single tab.

56
00:02:48,930 --> 00:02:51,960
It's optimized for video playback, and
typically, you'll have a single video

57
00:02:51,960 --> 00:02:55,560
tag that represents the onscreen area
where the media is to be played.

58
00:02:55,560 --> 00:02:57,320
For developers who want to
get started quickly,

59
00:02:57,320 --> 00:03:00,080
you don't have to worry about writing
a receiver application at all.

60
00:03:00,080 --> 00:03:02,635
Google provides a couple of sample
receiver apps that you can load onto

61
00:03:02,635 --> 00:03:04,071
your Cast device during development.

62
00:03:04,071 --> 00:03:06,622
And you can even use these in
production if you'd like, for

63
00:03:06,622 --> 00:03:07,856
playing back simple media.

64
00:03:07,856 --> 00:03:10,399
The one we're looking at here is
called the Styled Media Receiver,

65
00:03:10,399 --> 00:03:12,660
and we'll get to that
later in the course.

66
00:03:12,660 --> 00:03:15,070
Google's also built a whole
bunch of sample sender apps for

67
00:03:15,070 --> 00:03:16,890
Android, iOS, and Chrome.

68
00:03:16,890 --> 00:03:17,430
You can build and

69
00:03:17,430 --> 00:03:21,170
run these on your devices to see how the
SDK hooks into an existing application,

70
00:03:21,170 --> 00:03:24,770
as well as how to handle different
Cast scenarios, like DRM playback.

71
00:03:24,770 --> 00:03:26,020
There are quite a few of these samples,
so

72
00:03:26,020 --> 00:03:28,870
I'll point you in the right direction
to the best ones later in the course.

73
00:03:28,870 --> 00:03:31,180
Finally, it's essential to keep
in mind that we're designing for

74
00:03:31,180 --> 00:03:32,260
the living room.

75
00:03:32,260 --> 00:03:35,260
We want the user experience
to be familiar and enjoyable.

76
00:03:35,260 --> 00:03:37,600
To help you build the best
possible Cast experience,

77
00:03:37,600 --> 00:03:41,110
Google provides a set of user experience
guidelines and a design checklist.

78
00:03:41,110 --> 00:03:43,470
We'll cover these later in the course,
and they're optional, but

79
00:03:43,470 --> 00:03:45,040
highly recommended.

80
00:03:45,040 --> 00:03:46,330
Let's recap with a quick quiz.
