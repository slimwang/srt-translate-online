1
00:00:00,600 --> 00:00:01,540
We start the search for

2
00:00:01,540 --> 00:00:04,740
a deeper understanding,
with the idea of the augmenting path.

3
00:00:05,820 --> 00:00:08,960
Recall that in our original
treatment of the max flow problem,

4
00:00:08,960 --> 00:00:13,990
we were given a flow over some graph,
and we defined the residual network,

5
00:00:13,990 --> 00:00:18,120
which captured the ways in which we
were allowed to modify this flow.

6
00:00:18,120 --> 00:00:22,320
This included adding backwards edges
that went in the opposite direction from

7
00:00:22,320 --> 00:00:24,370
edges in the original.

8
00:00:24,370 --> 00:00:28,180
Augmenting paths then were paths
over this residual network

9
00:00:28,180 --> 00:00:33,070
that went from the source to the sync,
and augmented the flow.

10
00:00:33,070 --> 00:00:36,160
In a network that arises from
a bipartite matching problem,

11
00:00:36,160 --> 00:00:39,270
there are few special phenomena
that are worth noting.

12
00:00:39,270 --> 00:00:43,240
First observe that all intermediate
flows found by Ford-Fulkerson

13
00:00:43,240 --> 00:00:45,580
correspond to matchings as well.

14
00:00:45,580 --> 00:00:50,030
If there is flow across an internal
edge, then it belongs in the matching.

15
00:00:50,030 --> 00:00:52,760
Also because flows along
edges are either zero or

16
00:00:52,760 --> 00:00:56,840
one there are no anti-parallel
edges in the residual network.

17
00:00:56,840 --> 00:01:00,140
That is to say either
the original edge is there or

18
00:01:00,140 --> 00:01:02,900
the reverse edge is there, never both.

19
00:01:02,900 --> 00:01:07,970
Moreover the matched edges are the ones
that have their edges reversed.

20
00:01:07,970 --> 00:01:14,100
Also, only unmatched vertices have
an edge from the source to them,

21
00:01:14,100 --> 00:01:16,880
or from them to the sync.

22
00:01:16,880 --> 00:01:19,030
Matched vertices have
their edges reversed.

23
00:01:20,130 --> 00:01:24,340
The result of all this is that
any augmenting path must start

24
00:01:24,340 --> 00:01:29,500
at an unmatched vertex, and
then follow an unmatched edge,

25
00:01:29,500 --> 00:01:34,410
followed by a matched edge,
followed by an unmatched edge,

26
00:01:34,410 --> 00:01:38,860
until eventually it reaches an unmatched
vertex on the right hand side, and

27
00:01:38,860 --> 00:01:41,390
then it can follow
that edge to the sync.

28
00:01:42,430 --> 00:01:47,320
This realization allows us to strip away
much of the complexity of flow networks

29
00:01:47,320 --> 00:01:48,980
and define an augmenting path for

30
00:01:48,980 --> 00:01:52,400
bipartite matching in
more natural terms.

31
00:01:52,400 --> 00:01:56,100
We start by defining the more general
concept of an alternating path.

32
00:01:57,330 --> 00:01:58,780
Given a matching M,

33
00:01:58,780 --> 00:02:04,610
an alternating path is a path where the
edges are alternately in M and not in M.

34
00:02:04,610 --> 00:02:08,538
And an augmenting path is
an alternating path where the first and

35
00:02:08,538 --> 00:02:11,340
the last vertex are unmatched.

36
00:02:11,340 --> 00:02:16,900
For example, in this graph here,
going from this unmatched vertex in L

37
00:02:16,900 --> 00:02:23,040
to this matched vertex in R back
to this matched one in L and

38
00:02:23,040 --> 00:02:27,020
then to this unmatched one in R
constitutes and augmenting path.

39
00:02:28,100 --> 00:02:33,070
We use it to augment the matching
by making the unmatched edges

40
00:02:33,070 --> 00:02:37,679
matched and the matched edges unmatched.

41
00:02:38,820 --> 00:02:39,320
Like so.

42
00:02:40,540 --> 00:02:44,480
This always increases the size of
the matching because before we flipped,

43
00:02:44,480 --> 00:02:48,980
there was one more unmatched edge
than matched edge in the path.

44
00:02:48,980 --> 00:02:50,480
So when we reversed the matched and

45
00:02:50,480 --> 00:02:54,360
unmatched edges, we increased
the size of the matching by one.

46
00:02:54,360 --> 00:02:55,170
In fact,

47
00:02:55,170 --> 00:02:59,370
we can restate the Ford-Fulkerson
method purely in these terms.

48
00:02:59,370 --> 00:03:03,030
We initialize the matching
to the empty set, and then

49
00:03:03,030 --> 00:03:07,380
while there's an augmenting path, we
update the matching to be the symmetric

50
00:03:07,380 --> 00:03:10,690
difference between the current
matching and the path that we found.

51
00:03:11,750 --> 00:03:14,350
The symmetric difference
includes an element

52
00:03:14,350 --> 00:03:18,460
if it's in exactly one of these sets,
or alternatively, you can think

53
00:03:18,460 --> 00:03:23,600
about it as the union of the two sets
minus the things that are in both.

54
00:03:23,600 --> 00:03:28,380
The things that are in both here
correspond to matched edges in the path.

55
00:03:28,380 --> 00:03:32,640
And remember that we flipped
them to being unmatched.

56
00:03:32,640 --> 00:03:33,170
And finally,

57
00:03:33,170 --> 00:03:36,730
once there are no more augmenting paths,
we simply return the matching.
