1
00:00:00,290 --> 00:00:02,930
So, one way of dealing with it, that we're going to just talk about today.

2
00:00:02,930 --> 00:00:04,800
We're going to do it differently next time,

3
00:00:04,800 --> 00:00:06,820
is what are called Robust estimators.

4
00:00:06,820 --> 00:00:13,040
And Robust estimators say, instead of minimizing the sum of squares, okay?

5
00:00:13,040 --> 00:00:17,780
Instead, we're going to try to minimize some, some function row.

6
00:00:17,780 --> 00:00:20,940
And row, is going to be a function of two things.

7
00:00:22,180 --> 00:00:23,870
R here is for the residual.

8
00:00:23,870 --> 00:00:25,400
It's the delta.

9
00:00:25,400 --> 00:00:28,650
It is how far off the point is from your models.

10
00:00:28,650 --> 00:00:32,570
So for fitting lines it's how far away the point is from the line.

11
00:00:32,570 --> 00:00:34,650
So that's our error that we were using before.

12
00:00:34,650 --> 00:00:36,750
And before we were just squaring that.

13
00:00:36,750 --> 00:00:40,830
We're going to do some other function and it's also going to have a.

14
00:00:40,830 --> 00:00:43,250
Scale parameter sigma, okay?

15
00:00:43,250 --> 00:00:45,570
Or robust measure parameter sigma.

16
00:00:46,860 --> 00:00:50,960
There are lots and lots and lots of Robust estimators.

17
00:00:50,960 --> 00:00:51,990
We're not going to talk a lot about them.

18
00:00:51,990 --> 00:00:56,320
I'm just going to show you one example because it works very simply.

19
00:00:56,320 --> 00:00:57,309
So here's one.

20
00:00:58,520 --> 00:01:01,430
This is rho as a function of u.

21
00:01:01,430 --> 00:01:05,090
U is just be, going to be that residual, that, that, that r.

22
00:01:05,090 --> 00:01:09,620
And here's my sigma parameter, and the function that I'm going to minimize,

23
00:01:09,620 --> 00:01:15,170
is just going to be u squared over sigma squared plus u squared.

24
00:01:15,170 --> 00:01:16,260
So.

25
00:01:16,260 --> 00:01:19,930
Let's think a little bit about how that function works.

26
00:01:19,930 --> 00:01:21,010
What it looks like.

27
00:01:21,010 --> 00:01:24,190
So this is just this function y equals x squared.

28
00:01:24,190 --> 00:01:25,090
Okay?

29
00:01:25,090 --> 00:01:27,650
So for y equals x squared, you know,

30
00:01:27,650 --> 00:01:30,640
you can see that it grows really quickly as x grows.

31
00:01:30,640 --> 00:01:33,240
And that was the problem that we were trying to fix.

32
00:01:33,240 --> 00:01:40,080
Let's think about what happens for small values of u versus large values of u.

33
00:01:40,080 --> 00:01:40,790
Okay?

34
00:01:40,790 --> 00:01:43,150
So if we pick some sigma squared.

35
00:01:43,150 --> 00:01:47,380
When u is small compared to sigma,

36
00:01:47,380 --> 00:01:51,250
sigma squared plus u squared is about sigma squared.

37
00:01:51,250 --> 00:01:55,110
So that means the entire function is approximately u squared over sigma squared,

38
00:01:55,110 --> 00:02:00,250
so that just grows by, u squared, the way our original function did,

39
00:02:00,250 --> 00:02:02,670
and so it looks kind of parabolic to start with.

40
00:02:02,670 --> 00:02:06,900
But, what happens when u becomes really large.

41
00:02:06,900 --> 00:02:09,130
Well, when u becomes really large,

42
00:02:09,130 --> 00:02:14,760
the Robust estimator here becomes almost u squared over u squared, or one.

43
00:02:14,760 --> 00:02:17,760
And that's what this u is here, out here.

44
00:02:17,760 --> 00:02:21,330
Okay, so the idea is as your error grows, it starts going up.

45
00:02:21,330 --> 00:02:24,720
As a quadratic, just like our regular mean squared error, our, or

46
00:02:24,720 --> 00:02:26,780
just like our regular sum of squared errors.

47
00:02:26,780 --> 00:02:29,990
It goes up quadratically, but then it starts to level out, and

48
00:02:29,990 --> 00:02:31,040
that's what you're seeing here.

49
00:02:31,040 --> 00:02:32,960
It comes up, and it levels out.

50
00:02:32,960 --> 00:02:38,420
Now, how, where it levels out, that's a function of what the sigma is, okay?

51
00:02:39,540 --> 00:02:44,950
So for a very small sigma, it levels out quickly.

52
00:02:44,950 --> 00:02:48,300
For large sigmas, it levels out much more slowly.

53
00:02:48,300 --> 00:02:50,850
So here's an example, remember, we're going to.

54
00:02:50,850 --> 00:02:52,490
Here's the same set of points.

55
00:02:52,490 --> 00:02:53,070
Aha.

56
00:02:53,070 --> 00:02:56,340
We have now foiled the even, the evil Megan point.

57
00:02:56,340 --> 00:02:58,440
Right. So we have this point here.

58
00:02:58,440 --> 00:03:02,340
And you'll notice that this line, goes right through those other points.

59
00:03:02,340 --> 00:03:05,530
It's as if it ignored this point.

60
00:03:05,530 --> 00:03:09,550
Now it didn't totally ignore the point, it gave it a constant weight, but it

61
00:03:09,550 --> 00:03:13,920
didn't matter whether that point was here, or here, or here, or really far away,

62
00:03:13,920 --> 00:03:18,990
because once that u, once that residual got too big, it got a constant weight.

63
00:03:18,990 --> 00:03:21,760
Points that are nearby, they have the,

64
00:03:21,760 --> 00:03:25,180
the, the square, error, weight that we had before.

65
00:03:25,180 --> 00:03:28,330
So this is what it looks like when you get the scale just right.

66
00:03:28,330 --> 00:03:31,980
This is like Goldilocks picking the first bowl, the first time.

67
00:03:31,980 --> 00:03:33,410
Never happens, okay?

68
00:03:33,410 --> 00:03:35,880
At least, not when I tell my kids, because then it would shorten the story and

69
00:03:35,880 --> 00:03:38,360
they wouldn't be asleep yet, so what good is that?

70
00:03:38,360 --> 00:03:42,250
If I set the scale too small, I get this weird line, right?

71
00:03:42,250 --> 00:03:45,690
Well, basically what's happened is every point is giving it a constant error and

72
00:03:45,690 --> 00:03:49,640
it's just kind of going, somewhere near all of the points.

73
00:03:49,640 --> 00:03:52,630
And also, if I set my scale too large,

74
00:03:52,630 --> 00:03:57,110
remember if sigma squared is too big then it's just like regularly squares.

75
00:03:57,110 --> 00:04:00,840
So I get the the wrong solution again.

76
00:04:00,840 --> 00:04:06,810
So, these Robust estimators are, powerful, but

77
00:04:06,810 --> 00:04:11,870
you do have to have an explicit, not only do you have to have an explicit

78
00:04:11,870 --> 00:04:17,000
choice of scale, it's pretty sensitive to your choice of scale.

79
00:04:17,000 --> 00:04:17,660
The method we're going to

80
00:04:17,660 --> 00:04:20,380
talk about next time also has some scale parameters for, for

81
00:04:20,380 --> 00:04:23,390
noise that we have to look at, but it's going to be much less sensitive to that.
