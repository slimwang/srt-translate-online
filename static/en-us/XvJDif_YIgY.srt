1
00:00:00,530 --> 00:00:04,340
So we have seen in the previous quiz that the 1-bit predictor can

2
00:00:04,340 --> 00:00:09,520
not really predict well the pattern N N T that repeats.

3
00:00:09,520 --> 00:00:14,260
We will see that a 2-bit history will be successfully predicting this pattern.

4
00:00:14,260 --> 00:00:19,600
How does a 2-bit history predictor work? Same as before. We take the PC and

5
00:00:19,600 --> 00:00:25,340
we index into the branch history table from which we get an entry. Now,

6
00:00:25,340 --> 00:00:31,600
however, the entry we get has five pieces. It has

7
00:00:31,600 --> 00:00:37,920
two bits of history. So these are the last two outcomes of this branch.

8
00:00:37,920 --> 00:00:44,718
And then we have 4 times a 2-bit counter. One for each possible history.

9
00:00:44,718 --> 00:00:49,720
So with two bits we will index into this array of counters and

10
00:00:49,720 --> 00:00:53,950
use the appropriate counter for the given history. So as you can see,

11
00:00:53,950 --> 00:00:59,530
the overall cost of this predictor now is 2 bits of history plus 4 times 2,

12
00:00:59,530 --> 00:01:04,519
so it ends up costing us ten bits per branch. Instead of going through a lengthy

13
00:01:04,519 --> 00:01:09,290
example of how this works, when we try to predict this pattern,

14
00:01:09,290 --> 00:01:15,610
let's try to figure it out. The sequence of outcomes is N, N, T.

15
00:01:15,610 --> 00:01:21,450
N, N, T etc. When we are seeing the outcome of T,

16
00:01:21,450 --> 00:01:25,200
and trying to predict it, that is we are trying to predict what will become T,

17
00:01:25,200 --> 00:01:28,310
our two bit history will be zero, zero.

18
00:01:28,310 --> 00:01:33,710
It's saying that the last two outcomes we have seen, have been both not taken.

19
00:01:33,710 --> 00:01:38,080
This history will make us use this counter here.

20
00:01:38,080 --> 00:01:43,630
So that counter, which we'll call counter number zero, will be counting up.

21
00:01:43,630 --> 00:01:47,866
When we are trying to predict this particular outcome our history will be zero,

22
00:01:47,866 --> 00:01:51,820
one. We will be using counter number one. And

23
00:01:51,820 --> 00:01:56,180
we will decrement it because we are seeing a non-taken decision.

24
00:01:56,180 --> 00:02:00,390
When we are trying to predict this the history will be one, zero. This is,

25
00:02:00,390 --> 00:02:05,010
corresponds to counter number two, which will also be decremented. For this,

26
00:02:05,010 --> 00:02:08,499
now we will again use the history of zero zero, because the last two

27
00:02:08,499 --> 00:02:12,626
outcomes have been not taken. This means that the counter number zero,

28
00:02:12,626 --> 00:02:18,151
because of this taken decision, will be incremented. And so on. As you can see,

29
00:02:18,151 --> 00:02:22,471
counter zero always counts up, so very soon it will start predicting taken.

30
00:02:22,471 --> 00:02:24,779
Which means every time we see a history of 00,

31
00:02:24,779 --> 00:02:29,700
we will start predicting strong taken. Counter one keeps counting down, so

32
00:02:29,700 --> 00:02:34,750
very soon after seeing this history of 01, we will predict strong not taken, and

33
00:02:34,750 --> 00:02:38,070
similarly counter two is always counting down. So

34
00:02:38,070 --> 00:02:42,100
very soon we will start predicting not taken when we see a history of one zero.

35
00:02:42,100 --> 00:02:47,960
As you can see what's now going to happen is pretty much this counter zero here,

36
00:02:47,960 --> 00:02:52,350
will start to predict strong taken. Counter one will start to

37
00:02:52,350 --> 00:02:57,708
predict strong not taken, and counter two is going to predict strong not taken.

38
00:02:57,708 --> 00:03:01,720
Counter number three, which is the last counter we have,

39
00:03:01,720 --> 00:03:05,140
actually never gets used. Because we never see a history of one, one.

40
00:03:05,140 --> 00:03:07,740
That would mean that we have seen a taken followed by a taken,

41
00:03:07,740 --> 00:03:10,570
which doesn't happen in this particular pattern. So,

42
00:03:10,570 --> 00:03:15,370
as you can see, this predictor starts being a perfect predictor after awhile,

43
00:03:15,370 --> 00:03:18,600
after these counters have been appropriately modified depending on

44
00:03:18,600 --> 00:03:22,880
their starting state. So, unlike a single bit history predictor,

45
00:03:22,880 --> 00:03:25,820
a 2-bit history can predict this pattern accurately.
