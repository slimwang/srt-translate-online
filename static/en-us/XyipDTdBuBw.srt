1
00:00:00,230 --> 00:00:04,129
Just like conditional statements,
you can nest loops inside of each other.

2
00:00:04,129 --> 00:00:07,049
This doesn't add anything
new to your loops per se,

3
00:00:07,049 --> 00:00:09,199
just an extra layer of complexity.

4
00:00:09,199 --> 00:00:11,849
Here I have an example of a nested loop.

5
00:00:11,849 --> 00:00:13,029
If you look at the first for

6
00:00:13,029 --> 00:00:16,039
loop, there's another
loop nested inside of it.

7
00:00:16,039 --> 00:00:19,820
Similar to what I did in the for loops
video, I want to take some time to walk

8
00:00:19,820 --> 00:00:23,769
through each step of this code so
you can see exactly what is happening.

9
00:00:23,769 --> 00:00:26,579
Because nested loops add
another layer of complexity,

10
00:00:26,579 --> 00:00:30,659
seeing this code step through this way
should help you in visualizing what is

11
00:00:30,660 --> 00:00:34,020
actually happening when this code
is being interpreted and ran.

12
00:00:34,020 --> 00:00:37,670
Again, I'm going to add the table here
so that you can see the values of x and

13
00:00:37,670 --> 00:00:39,820
y while we go through the loop.

14
00:00:39,820 --> 00:00:40,789
Okay, so here we go.

15
00:00:40,789 --> 00:00:45,939
When our first loop starts,
the value of x is set to zero.

16
00:00:45,939 --> 00:00:49,659
Next, we check the condition
to see if x is less than 3.

17
00:00:49,659 --> 00:00:53,069
And because that evaluates to true,
we jump in to the loop.

18
00:00:53,070 --> 00:00:55,119
But now, we've got another loop.

19
00:00:55,119 --> 00:00:56,789
So, just like we did with the first for

20
00:00:56,789 --> 00:01:00,488
loop, again we're going to
set the variable of y = 0.

21
00:01:00,488 --> 00:01:04,060
We're going to check our condition,
is zero less than 2?

22
00:01:04,060 --> 00:01:04,689
Yes, it is.

23
00:01:04,689 --> 00:01:06,459
So that's true.

24
00:01:06,459 --> 00:01:07,709
And then we jump into this loop.

25
00:01:07,709 --> 00:01:10,539
And we're going to print
out the value of x and y.

26
00:01:10,540 --> 00:01:12,440
So that's a zero, zero.

27
00:01:12,439 --> 00:01:17,640
So, once we get to the end of that step,
then we jump back up to the top of that

28
00:01:17,640 --> 00:01:22,980
nested for loop, and we see how it's
been defined to move to the next step.

29
00:01:22,980 --> 00:01:25,780
So in this one,
y's just getting incremented by one.

30
00:01:25,780 --> 00:01:27,789
So we'll set y now equal to 1.

31
00:01:27,789 --> 00:01:29,530
We'll check our condition.

32
00:01:29,530 --> 00:01:32,489
1 is less than 2,
that's true, and we'll print.

33
00:01:32,489 --> 00:01:37,199
And we'll keep doing this until that
condition is no longer satisfied.

34
00:01:37,200 --> 00:01:39,609
So here, we'll increment y again by 1.

35
00:01:39,609 --> 00:01:42,390
And now, 2 is less than 2.

36
00:01:42,390 --> 00:01:43,510
That doesn't evaluate to true.

37
00:01:43,510 --> 00:01:44,560
That's false.

38
00:01:44,560 --> 00:01:46,960
So now, that means we're
going to jump out of our loop.

39
00:01:46,959 --> 00:01:50,679
But we're still in that first
loop that we started with.

40
00:01:50,680 --> 00:01:54,110
So what happens is, we go and
we look at how it's been defined to

41
00:01:54,109 --> 00:01:56,640
increment to the next step for
that first loop.

42
00:01:56,640 --> 00:01:59,409
In this one,
x is supposed to be incremented by 1.

43
00:01:59,409 --> 00:02:01,689
So we increment x by 1.

44
00:02:01,689 --> 00:02:03,469
We check our condition, is 1<3?

45
00:02:03,469 --> 00:02:05,670
Yes it is, that's true.

46
00:02:05,670 --> 00:02:07,097
And now we jump into the loop.

47
00:02:07,097 --> 00:02:10,580
So again, there's nothing
new that is happening here.

48
00:02:10,580 --> 00:02:13,770
It's just sort of an added level
of complexity that you have to pay

49
00:02:13,770 --> 00:02:15,260
attention to.

50
00:02:15,259 --> 00:02:16,909
And there's not going to
be any surprises here.

51
00:02:16,909 --> 00:02:19,629
We're going to go through
the second loop twice,

52
00:02:19,629 --> 00:02:21,930
it'll always evaluate to
true those first two times.

53
00:02:21,930 --> 00:02:25,810
And then the third time 2 is
not going to be less than 2.

54
00:02:25,810 --> 00:02:27,430
That will evaluate to false.

55
00:02:27,430 --> 00:02:30,900
We'll jump out of that second for loop,
and then we'll look at our first for

56
00:02:30,900 --> 00:02:31,680
loop.

57
00:02:31,680 --> 00:02:36,010
So this will run a couple of more times,
and I'm just going to kind of step

58
00:02:36,009 --> 00:02:37,729
through it here so
you guys can see what's going on.

59
00:02:37,729 --> 00:02:41,239
And if this is a little too fast
feel free to kind of slow it down or

60
00:02:41,240 --> 00:02:42,640
go back and watch.

61
00:02:42,639 --> 00:02:47,679
But we're in the nested for loop,
and we're just incrementing y here.

62
00:02:47,680 --> 00:02:49,260
Y is now 1.

63
00:02:49,259 --> 00:02:50,149
That is less than 2.

64
00:02:50,150 --> 00:02:51,120
It evaluates to true.

65
00:02:51,120 --> 00:02:54,110
And we jump in, we print our statement.

66
00:02:54,110 --> 00:02:56,360
We're going to increment
y one more time.

67
00:02:56,360 --> 00:02:58,180
It's going to be 2 now.

68
00:02:58,180 --> 00:02:59,849
And 2 is not less than 2.

69
00:02:59,849 --> 00:03:00,930
That's going to be false.

70
00:03:00,930 --> 00:03:01,990
We're going to jump out of our loop.

71
00:03:01,990 --> 00:03:04,480
We're going to go to our first loop.

72
00:03:04,479 --> 00:03:08,159
And this time,
X is going to get incremented to 3.

73
00:03:08,159 --> 00:03:10,579
And 3 is not less than 3.

74
00:03:10,580 --> 00:03:14,340
That evaluates to false, and
we jump out of the entire thing.

75
00:03:14,340 --> 00:03:17,990
So again, nested loops don't add
anything new to our loops, but

76
00:03:17,990 --> 00:03:20,110
just another level of complexity.

