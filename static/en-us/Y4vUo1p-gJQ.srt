1
00:00:00,230 --> 00:00:03,260
Our last lesson covered
the basics of Turing machines.

2
00:00:03,260 --> 00:00:04,950
At the beginning of last lecture,

3
00:00:04,950 --> 00:00:08,830
I said that the Turing machine precisely
captures an ocean of computation.

4
00:00:08,830 --> 00:00:12,850
In this lecture we will give strong
evidence for this Church-Turing thesis,

5
00:00:12,850 --> 00:00:16,040
the statement that everything computable
is computable by a Turing machine.

6
00:00:17,190 --> 00:00:21,510
The Church-Turing thesis is named for
Alan Turing and Alonzo Church.

7
00:00:21,510 --> 00:00:24,380
Church had an alternative model of
computation known as the Lambda

8
00:00:24,380 --> 00:00:28,830
calculus, which turns out to be exactly
as powerful as a Turing machine.

9
00:00:28,830 --> 00:00:30,420
We call the Church-Turing Thesis,

10
00:00:30,420 --> 00:00:34,740
a thesis because it isn't a statement
we could prove or disprove.

11
00:00:34,740 --> 00:00:37,350
In this lecture,
we'll give a strong argument

12
00:00:37,350 --> 00:00:41,180
that our simple Turing machine can do
anything today's computers can do.

13
00:00:41,180 --> 00:00:43,480
Or anything a computer could
ever do in the future.

14
00:00:44,520 --> 00:00:47,640
>> To convince you of the Church-Turing
Thesis, I'll start from the basic Turing

15
00:00:47,640 --> 00:00:51,710
machine and then branch out, showing
that it is equivalent to machines as

16
00:00:51,710 --> 00:00:56,470
powerful as the most advanced machines
today, or in any conceivable future.

17
00:00:56,470 --> 00:00:59,534
We'll begin by looking at
multi-tape Turing machines,

18
00:00:59,534 --> 00:01:02,104
which in many cases are much
easier to work with.

19
00:01:02,104 --> 00:01:05,613
And we'll show that anything
a multi-tape Turing machine can do

20
00:01:05,613 --> 00:01:07,732
a regular Turing machine can do, too.

21
00:01:07,732 --> 00:01:10,170
Then we'll consider
the random access model.

22
00:01:10,170 --> 00:01:14,220
A model capturing all the important
capabilities of a modern computer.

23
00:01:14,220 --> 00:01:17,704
And we will show that it is equivalent
to a multi-tape Turing machine, and

24
00:01:17,704 --> 00:01:21,620
therefore must also be equivalent
to a regular Turing machine.

25
00:01:21,620 --> 00:01:26,670
This means a simple Turing machine can
compute anything your Intel i7 can or

26
00:01:26,670 --> 00:01:29,530
whatever chip you may happen
to have in your computer.

27
00:01:29,530 --> 00:01:32,260
Hopefully, by the end of the lesson
you'll have understood all these

28
00:01:32,260 --> 00:01:36,020
connections and you'll be convinced that
the Church-Turing Thesis really is true.

29
00:01:37,210 --> 00:01:41,460
Formally, we can state it like this,
a language or a function for

30
00:01:41,460 --> 00:01:45,780
that matter is computable, and
I've used quotes here to indicate

31
00:01:45,780 --> 00:01:50,710
that we mean this in the common meaning
of the word, not in the technical sense.

32
00:01:50,710 --> 00:01:54,820
If and only if it can be decided,
or in the case of a function,

33
00:01:54,820 --> 00:01:56,590
computed, by a Turing machine.
