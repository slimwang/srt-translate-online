1
00:00:00,560 --> 00:00:03,350
A widely used symmetric
encryption scheme

2
00:00:03,350 --> 00:00:07,710
is based on the data
encryption standard, or DES.

3
00:00:07,710 --> 00:00:12,180
It was published in 1977 and
standardized in 1979.

4
00:00:12,180 --> 00:00:15,850
In DES the key is 64 bit,

5
00:00:15,850 --> 00:00:20,870
which is 8 bites but for
each bite, there's one parity bit.

6
00:00:20,870 --> 00:00:25,100
Therefore, the actual value
in the key is only 56-bit.

7
00:00:25,100 --> 00:00:31,020
And the oppo cipher text
is again a 64-bit block.

8
00:00:31,020 --> 00:00:33,780
Here's a high level view of DES.

9
00:00:33,780 --> 00:00:36,520
There are 16 rounds of operations.

10
00:00:36,520 --> 00:00:41,350
From the origin of 56-bit key,
16 subkeys are generated.

11
00:00:41,350 --> 00:00:43,030
One for each round.

12
00:00:43,030 --> 00:00:45,460
The process of decryption with DES,

13
00:00:45,460 --> 00:00:48,890
is essentially the same as
the encryption process.

14
00:00:48,890 --> 00:00:50,880
It works as follows.

15
00:00:50,880 --> 00:00:54,170
Use the cipher text as input to this.

16
00:00:54,170 --> 00:00:58,040
But then, for sub keys,
they use in reverse order.

17
00:00:58,040 --> 00:01:03,230
That is use key 16 at
the first round of decryption.

18
00:01:03,230 --> 00:01:06,320
Use key 15in the second
round of decryption.

19
00:01:06,320 --> 00:01:08,110
And so and so forth.

20
00:01:08,110 --> 00:01:11,830
That is for decryption,
we run the same algorithm.

21
00:01:11,830 --> 00:01:14,320
But only the keys in reverse order.

22
00:01:15,320 --> 00:01:20,170
We call that diffusion is one of
the principles in encryption and

23
00:01:20,170 --> 00:01:23,690
it is typically achieved
through permutation.

24
00:01:23,690 --> 00:01:29,330
In DES, permutation works by
changing the positions of the bits.

25
00:01:29,330 --> 00:01:33,240
Recall that DES has 16
rounds of operations.

26
00:01:33,240 --> 00:01:40,320
Each DES round has the same operations
and uses a different per round key.

27
00:01:40,320 --> 00:01:45,718
Each DES round takes as input the server
text produced by the previous round.

28
00:01:45,718 --> 00:01:49,660
And outputs text for the next round.

29
00:01:49,660 --> 00:01:54,950
The input is divided into
the left half and the right half.

30
00:01:54,950 --> 00:01:58,520
The output left half is just
the right half of the input.

31
00:01:59,680 --> 00:02:05,650
The right half of the output is a result
of the left half of the input and

32
00:02:05,650 --> 00:02:08,340
the output of the function.

33
00:02:08,340 --> 00:02:13,970
The mangler function takes this input,
the 32 bit input right half,

34
00:02:13,970 --> 00:02:20,370
expands it to 48 bit,
then with the 48 bit program key.

35
00:02:20,370 --> 00:02:27,720
Then use the s-boxes to substitute
the 48 bit value into a 32 bit value.

36
00:02:27,720 --> 00:02:33,260
We can also use algebra to
represent your in a death round.

37
00:02:33,260 --> 00:02:38,840
That is, the left half of output
is the right half of the input.

38
00:02:38,840 --> 00:02:45,570
And the right half of the input is
the result of the left half of input.

39
00:02:45,570 --> 00:02:47,730
And the result of a mangler function,

40
00:02:47,730 --> 00:02:52,576
which takes as input the right half
of the input and the [INAUDIBLE] key.
