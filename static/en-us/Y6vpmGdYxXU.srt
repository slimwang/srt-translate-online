1
00:00:00,167 --> 00:00:07,266
So let's have a look. What about x1? So here we have x1, not x1, not x1 and x1.

2
00:00:07,267 --> 00:00:10,232
I have no idea what to do with that, so it's probably not easy.

3
00:00:10,233 --> 00:00:17,699
What about x2? So here we have x2, x2, not x2, still kind of difficult to see if we should set it to false,

4
00:00:17,700 --> 00:00:23,566
making this clause here satisfied or if we should set it to true, satisfying those two clauses up here.

5
00:00:23,567 --> 00:00:27,932
It's not easy, or at least it's not doable without playing around with other true or false assignment.

6
00:00:27,933 --> 00:00:36,932
What about x3, same case? So here we have x3, not x3, x3, again, x3, not x3, no idea what to do with that.

7
00:00:36,933 --> 00:00:43,899
So all that remains is x4. Now, where does x4 appear? X4 appears here and x4 appears here.

8
00:00:43,900 --> 00:00:51,066
And what you'll notice is that both time we have not x4. So x4 could appear in two forms, right?

9
00:00:51,067 --> 00:00:57,766
So x4 could appear as x4, or as not x4. But we have just this one form appearing.

10
00:00:57,767 --> 00:01:02,966
And this goes back to the answer of the previous quiz, where I gave you an intuition for what makes SAT hard.

11
00:01:02,967 --> 00:01:09,866
What makes SAT hard is that, if you choose a truth assignment of true or false, then some clauses obviously

12
00:01:09,867 --> 00:01:15,099
become satisfied, but in other clauses you get less variables to satisfy that clause.

13
00:01:15,100 --> 00:01:20,732
However, if you have a variable that just appears in one form, then you don't have that dilemma.

14
00:01:20,733 --> 00:01:29,166
It's always clear that we should set x4, which is the correct answer here, to false, because then we satisfy this clause here,

15
00:01:29,167 --> 00:01:35,632
we satisfy this clause here, but there are no secondary effects again. So all of the other clauses are unaffected by

16
00:01:35,633 --> 00:01:42,299
how we set x4. So we just choose it to our advantage. And of course, also, this is something that is easy to do algorithmically.

17
00:01:42,300 --> 00:01:46,366
So for each of the variables that appear in a Boolean formula, an algorithm could just go through

18
00:01:46,367 --> 00:01:51,932
and see if that variable appears in both forms--so as the variable itself and in the "not" form.

19
00:01:51,933 --> 00:01:58,099
And if it appears just in one form, then we already know how to set it. So we have now found a third pre-processing rule for SAT.

20
00:01:58,100 --> 00:02:02,233
Now, let's step back a little bit and look at the general requirements of pre-processing.
