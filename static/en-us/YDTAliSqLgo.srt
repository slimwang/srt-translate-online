1
00:00:00,120 --> 00:00:04,040
I would say that it depends on what you actually mean by square and rectangle.

2
00:00:04,040 --> 00:00:08,640
So, if you define a square as a rectangle with both sides equal, then square is,

3
00:00:08,640 --> 00:00:10,540
in fact, a specialization of rectangle.

4
00:00:10,540 --> 00:00:13,980
That is, rectangle is the parent class, and square is the child class.

5
00:00:13,980 --> 00:00:17,520
If you defined square as a class having one attribute,

6
00:00:17,520 --> 00:00:20,960
which is the length of a side, and one method, for example, to compute the area.

7
00:00:20,960 --> 00:00:23,930
And, if you define rectangle as having two sides,

8
00:00:23,930 --> 00:00:28,000
that is an additional attribute, one for the height and one for the width.

9
00:00:28,000 --> 00:00:32,340
Then every rectangle is, in fact, a square, in the sense that it has all of

10
00:00:32,340 --> 00:00:35,770
the attributes the square does, and has all the methods a square does.

11
00:00:35,770 --> 00:00:40,370
So, this case, we would say that the square is the general class, and

12
00:00:40,370 --> 00:00:43,240
the rectangle is the child class.

13
00:00:43,240 --> 00:00:46,840
The point being, you have to be a little careful what you mean by these classes,

14
00:00:46,840 --> 00:00:49,100
in order to decide who's the parent and who's the child.
