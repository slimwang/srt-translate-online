1
00:00:00,280 --> 00:00:03,180
I'm going to show you the process I
went through to solve this problem.

2
00:00:03,180 --> 00:00:06,510
You can also find the final version of
my code in the instructor notes in case

3
00:00:06,510 --> 00:00:07,760
you'd like to take a closer look.

4
00:00:08,790 --> 00:00:11,190
The code should look pretty similar for
each file.

5
00:00:11,190 --> 00:00:14,720
So first I'm going to copy
the codes that I used before.

6
00:00:14,720 --> 00:00:17,160
Then I'll paste the code twice, and

7
00:00:17,160 --> 00:00:19,529
I'll need to change the file
names into the variable names.

8
00:00:20,850 --> 00:00:28,032
So this should be doing engagement.csv,
this should be projectsubmissions.csv,

9
00:00:28,032 --> 00:00:33,675
I'll name this variable daily engagement
and this one one project submissions.

10
00:00:34,855 --> 00:00:36,835
Then I'll go ahead and
print out one row of each and

11
00:00:36,835 --> 00:00:41,325
since I want to print just one row in
the cell, I've used print statements.

12
00:00:41,325 --> 00:00:45,725
This worked, but anytime you find
yourself copying and pasting code or

13
00:00:45,725 --> 00:00:48,470
just writing two pieces of
code that are very similar,

14
00:00:48,470 --> 00:00:51,560
it might be a good idea to
write a function instead.

15
00:00:51,560 --> 00:00:54,730
That way, if you find a bug later,
you'll only have to fix it in one place.

16
00:00:55,850 --> 00:00:58,610
In this case, the only thing that
changed between these three blocks of

17
00:00:58,610 --> 00:01:01,720
code was the file name and
the variable name.

18
00:01:01,720 --> 00:01:04,879
So I'm going to write
a function named read_csv that

19
00:01:04,879 --> 00:01:09,390
takes the file name as an input and
then returns the list of rows.

20
00:01:09,390 --> 00:01:11,950
I'll use this code that I've already
written as my starting point.

21
00:01:13,100 --> 00:01:17,840
Then instead of the file name here,
I'll use the input that I took and

22
00:01:17,840 --> 00:01:23,070
instead of creating a variable,
I'll return the list.

23
00:01:23,070 --> 00:01:24,689
Now I can delete these two blocks.

24
00:01:25,760 --> 00:01:27,190
And call the function three times.

25
00:01:28,650 --> 00:01:32,290
Now I'll run the code again just
to check that it still works.

26
00:01:32,290 --> 00:01:33,450
Since this function is so

27
00:01:33,450 --> 00:01:36,270
short, it's debatable whether
writing it was helpful.

28
00:01:36,270 --> 00:01:38,090
But I'm happy I wrote it.

29
00:01:38,090 --> 00:01:41,160
For example, if I hadn't realized
I needed to open the file with

30
00:01:41,160 --> 00:01:44,550
the argument rb, and
then later I noticed that I needed it.

31
00:01:44,550 --> 00:01:46,230
I could have updated this function,

32
00:01:46,230 --> 00:01:48,410
rather than updating the code
in three separate places.
