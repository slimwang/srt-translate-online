1
00:00:00,410 --> 00:00:03,620
So we can see that out of the 25
e-mails with the word, cheap,

2
00:00:03,620 --> 00:00:07,209
20 of them are spam,
while 5 of them are not.

3
00:00:08,300 --> 00:00:14,412
This forms an 80, 20 split,
so the correct answer is 80%.

4
00:00:14,412 --> 00:00:17,359
If you said 80, you were correct.

5
00:00:17,359 --> 00:00:19,175
So from analyzing this data,
we can conclude a rule.

6
00:00:19,175 --> 00:00:23,289
The rule says,
if an e-mail contains the word, cheap,

7
00:00:23,289 --> 00:00:27,599
then the probability of that
e-mail being spam is 80%.

8
00:00:27,600 --> 00:00:30,820
We then associate this feature
with the probability, 80%,

9
00:00:30,820 --> 00:00:35,320
and we will use it to flag future
messages as spam or not spam.

10
00:00:36,399 --> 00:00:37,829
We can also look at other features and

11
00:00:37,829 --> 00:00:40,369
try to find their
associated probability.

12
00:00:40,369 --> 00:00:43,829
Let's say we look at e-mails containing
a spelling mistake and realize that

13
00:00:43,829 --> 00:00:47,719
the probability of an e-mail containing
a spelling mistake being spam is 70%.

14
00:00:47,719 --> 00:00:51,530
And let's say we look at e-mails
that are missing a title, and

15
00:00:51,530 --> 00:00:54,890
the probability of those
being spam is 95%.

16
00:00:54,890 --> 00:00:56,210
And we can keep going,

17
00:00:56,210 --> 00:00:59,558
finding different features that will
predict if an e-mail is spam or not.

18
00:01:00,859 --> 00:01:02,609
So, now, when future e-mails come,

19
00:01:02,609 --> 00:01:06,730
we can combine these features to
guess if they are spam or not.

20
00:01:06,730 --> 00:01:09,810
This algorithm is know as
the Naive Bayes Algorithm.


