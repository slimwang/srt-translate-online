1
00:00:00,520 --> 00:00:05,259
Welcome to the walkthrough for
assignment number one of the deep

2
00:00:05,259 --> 00:00:10,510
learning Udacity class. And I hope
you're enjoying the lectures so far. And

3
00:00:10,510 --> 00:00:16,240
the first assignments which you can go
and take a look at on the Tenserflow

4
00:00:16,239 --> 00:00:22,810
Github website will have you do
some data wrangling and preparing a data

5
00:00:22,810 --> 00:00:28,000
sets that we were going to be using
throughout the class. So, the setup

6
00:00:28,000 --> 00:00:33,160
depends a little bit on what your
machine looks like. For me, Iâ€™m going to

7
00:00:33,160 --> 00:00:39,690
use the Docker image and the command
line to get it started

8
00:00:39,700 --> 00:00:51,160
looks like this, and I can go to the URL
of the local Docker image like this. So,

9
00:00:51,160 --> 00:00:54,129
this is assignment number one.

10
00:00:54,130 --> 00:00:58,329
So, what we're going to do in this
assignment is look at some data, the data

11
00:00:58,329 --> 00:01:04,780
that we're going to use is called notMNIST.
Referring to the ubiquitous

12
00:01:04,780 --> 00:01:09,700
MNIST data sets, and this one will try
to look a little bit like MNIST but

13
00:01:09,700 --> 00:01:13,509
try to be a little bit more challenging
a lot more interesting than just a

14
00:01:13,509 --> 00:01:20,229
handwritten digits. This data set
consists of letters that are rendered in

15
00:01:20,229 --> 00:01:25,959
a variety of fonts. And the goal is given
the image of the rendered letter

16
00:01:25,959 --> 00:01:29,139
figuring out which letter

17
00:01:29,139 --> 00:01:34,598
it represents, so it goes from A to J
there are ten classes just like a MNIST.

18
00:01:34,599 --> 00:01:40,509
And, it's got a lot of data, and it's a
little bit more noisy than MNIST.

19
00:01:40,509 --> 00:01:45,789
And, we will see later on. The assignment
starts with just setting up your

20
00:01:45,789 --> 00:01:49,359
environment making sure that you have,
you can import all the things that we

21
00:01:49,359 --> 00:01:55,479
will be using down the road. We first
download the data sets.

22
00:01:55,479 --> 00:02:01,899
This is simply, you know, a few lines of
code, we verified that the data set is

23
00:02:01,899 --> 00:02:06,249
the expected size. If you don't have it,
you might have to delete the file and

24
00:02:06,249 --> 00:02:09,549
try again. It really depends on your
internet connectivity.

25
00:02:09,550 --> 00:02:12,160
You could also just download it by hand.

26
00:02:12,160 --> 00:02:13,120
It's completely fine.

