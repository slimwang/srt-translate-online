1
00:00:00,190 --> 00:00:01,920
As we saw with the OpenStreetMap data,

2
00:00:01,920 --> 00:00:05,400
XML tags often contain attribute name value pairs.

3
00:00:05,400 --> 00:00:07,950
One example of attributes in this data set

4
00:00:07,950 --> 00:00:11,580
is the iid attribute of this institutional relationship

5
00:00:11,580 --> 00:00:15,580
tag, or insr tag. The iid value here

6
00:00:15,580 --> 00:00:18,040
actually defines a relationship between an author and

7
00:00:18,040 --> 00:00:22,310
institutions with which they are affiliated. Institutions appear

8
00:00:22,310 --> 00:00:25,300
later in this institution group, here, as individual

9
00:00:25,300 --> 00:00:27,860
elements of their own. Now in the last

10
00:00:27,860 --> 00:00:32,080
exercise we ignored these insr tags. Let's address

11
00:00:32,080 --> 00:00:34,310
them here. We're going to update our solution

12
00:00:34,310 --> 00:00:36,620
to the last exercise to use the data

13
00:00:36,620 --> 00:00:39,330
in these insr tags. See the code I've

14
00:00:39,330 --> 00:00:43,790
provided. However, rather than an insr field in

15
00:00:43,790 --> 00:00:47,330
your author dictionaries, store an iid field for

16
00:00:47,330 --> 00:00:50,360
each author. Note that some authors will have

17
00:00:50,360 --> 00:00:55,510
multiple insr tags. The value for the iid field then for

18
00:00:55,510 --> 00:01:00,620
authors needs to be an array composed of all the iids for a given author. For

19
00:01:00,620 --> 00:01:03,290
each author, create an iid field. Note

20
00:01:03,290 --> 00:01:05,250
that some authors are actually affiliated with

21
00:01:05,250 --> 00:01:09,930
multiple institutions, so the value for your iid fields needs to be an array.
