1
00:00:00,000 --> 00:00:04,970
In the last unit, we have talked about what you can do when a problem is NP-complete,

2
00:00:04,970 --> 00:00:07,140
despite it being NP-complete.

3
00:00:07,140 --> 00:00:10,700
And we have found out that there are techniques such as optimized search trees,

4
00:00:10,700 --> 00:00:13,750
preprocessing, and fixed parameter tractability

5
00:00:13,750 --> 00:00:17,690
that you can often use to solve NP-complete problems and practice

6
00:00:17,690 --> 00:00:19,690
despite their hardness in general.

7
00:00:19,690 --> 00:00:21,830
So what can we do when these techiniques don't work,

8
00:00:21,830 --> 00:00:25,520
and we don't want to prove that P=NP?

9
00:00:25,520 --> 00:00:27,520
Well, in that case, we can try something else.

10
00:00:27,520 --> 00:00:29,910
We can try to give our algorithm a little leeway.

11
00:00:29,910 --> 00:00:34,340
So instead of demanding that the algorithm finds the best possible solution,

12
00:00:34,340 --> 00:00:39,800
we'll allow the algorithm to find a solution that is within a certain range of the best possible solution.

13
00:00:39,800 --> 99:59:59,999
In return, of course, we'll demand from our algorithm that it runs in polynomial time.
