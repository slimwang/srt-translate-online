1
00:00:00,360 --> 00:00:02,440
I think the lines that make the contents of this

2
00:00:02,440 --> 00:00:06,530
loop repeat exactly once for each digit are while n is

3
00:00:06,530 --> 00:00:10,200
greater than 0. And, n gets updated to n over 10.

4
00:00:10,200 --> 00:00:13,620
Every time the code in these curly braces runs, n gets

5
00:00:13,620 --> 00:00:16,750
integer divided by 10. So, whatever this last digit was, it

6
00:00:16,750 --> 00:00:19,940
loses it. If n was 365, it loses the 5. If

7
00:00:19,940 --> 00:00:22,730
it was 36, it loses the 6. Now, the code inside

8
00:00:22,730 --> 00:00:25,410
of these braces runs over and over again, as long as

9
00:00:25,410 --> 00:00:28,020
n is greater than zero. In other words, as long as n

10
00:00:28,020 --> 00:00:31,020
has more digits. You could say that this line where we set n

11
00:00:31,020 --> 00:00:34,030
is part of controlling the loop as well, since the size of

12
00:00:34,030 --> 00:00:37,320
n effects when the loop stops. I would probably not say that the

13
00:00:37,320 --> 00:00:40,920
line int digit equals n mod 10 is part of running the

14
00:00:40,920 --> 00:00:44,160
loop once for each digit. This line doesn't change how many times the

15
00:00:44,160 --> 00:00:47,650
loop runs, it is related though because this is how we actually

16
00:00:47,650 --> 00:00:49,910
get the digits one at a time so we can add them up.
