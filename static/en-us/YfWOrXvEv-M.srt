1
00:00:00,450 --> 00:00:04,780
As I said before, it's not feasible to check every possible line,

2
00:00:06,340 --> 00:00:07,900
even with a really, really fast computer.

3
00:00:07,900 --> 00:00:12,230
What we have to do instead is somehow allow the data to speak to us,

4
00:00:12,230 --> 00:00:15,390
allow the data to decide where the lines are.

5
00:00:15,390 --> 00:00:18,000
And because this is democracy, what are we going to do?

6
00:00:18,000 --> 00:00:20,290
Well, we're going to do something called voting.

7
00:00:20,290 --> 00:00:24,760
So, voting is a general technique where we let the features vote for

8
00:00:24,760 --> 00:00:27,120
all the models that are compatible with it.

9
00:00:27,120 --> 00:00:30,050
And the way it works is pretty straightforward.

10
00:00:30,050 --> 00:00:31,650
We cycle through all the features.

11
00:00:31,650 --> 00:00:32,810
Now, today for

12
00:00:32,810 --> 00:00:36,120
most of the features what I'm going to need is little edge points, all right.

13
00:00:36,120 --> 00:00:39,900
And each edge point is going to cast a vote for the model parameters or

14
00:00:39,900 --> 00:00:44,340
the different sets of model parameters that it's happy with or consistent with.

15
00:00:44,340 --> 00:00:47,970
And when we're all done, we look for the model parameters that receive a lot of

16
00:00:47,970 --> 00:00:51,720
votes and those are the parameter models that we are going to instantiate.

17
00:00:51,720 --> 00:00:53,390
Why does voting work?

18
00:00:53,390 --> 00:00:58,115
Well, voting works for the same reason that Mickey Mouse, Donald Duck, and

19
00:00:58,115 --> 00:01:01,850
Lara Croft are never elected governor of California.

20
00:01:01,850 --> 00:01:03,740
Angelina Jolie maybe, but not Lara Croft.

21
00:01:03,740 --> 00:01:05,069
You see what happens is,

22
00:01:05,069 --> 00:01:08,150
in every election there are people, there could be millions of people who,

23
00:01:08,150 --> 00:01:12,120
who are unhappy with the main candidates, the real candidates, if you will.

24
00:01:12,120 --> 00:01:16,410
And they'll write in some silly name, Mickey Mouse or Lara Croft.

25
00:01:16,410 --> 00:01:20,110
But, even if there are millions of silly votes, as long as they don't all put

26
00:01:20,110 --> 00:01:25,690
down the same, silly name, then in some sense a real candidate will get elected.

27
00:01:25,690 --> 00:01:27,920
And this will work unless, Stephen Colbert, or

28
00:01:27,920 --> 00:01:30,220
somebody like that tries to orchestrate an overthrow.

29
00:01:30,220 --> 00:01:34,510
But, in general, the idea is that these silly votes are all distributed across,

30
00:01:34,510 --> 00:01:37,280
sort of, the not important candidate.

31
00:01:38,300 --> 00:01:41,980
So this works the same way for our computer vision.

32
00:01:41,980 --> 00:01:45,970
Noise and clutter features will cast votes too, just like the real features.

33
00:01:45,970 --> 00:01:47,290
But typically their fo,

34
00:01:47,290 --> 00:01:51,860
their votes should be inconsistent with the majority of the good features.

35
00:01:51,860 --> 00:01:56,220
Also another nice thing is, even if part of the circle, say, is occluded and

36
00:01:56,220 --> 00:01:59,030
there are no features there to vote for it, because the rest of

37
00:01:59,030 --> 00:02:02,050
the circle has gotten a lot of votes, we're able to find the circle.

38
00:02:02,050 --> 00:02:05,920
So the example we're going to use today to start with is just on

39
00:02:05,920 --> 00:02:07,860
fitting lines, all right?

40
00:02:07,860 --> 00:02:10,979
And to fit lines, we're going to have to ask a couple of questions.

41
00:02:10,979 --> 00:02:14,850
First of all, given points that belong to a line, what is the line?

42
00:02:14,850 --> 00:02:17,970
That is, you know, which, which line are they picking.

43
00:02:17,970 --> 00:02:19,860
How many lines are there?

44
00:02:19,860 --> 00:02:22,330
And which points belong to which lines?

45
00:02:22,330 --> 00:02:25,370
Now we're mostly going to focus on the first question for this lecture and

46
00:02:25,370 --> 00:02:28,560
in fact most of what we'll do, but extensions to what we're talking about make

47
00:02:28,560 --> 00:02:30,640
it easy to do questions two, and three as well.

48
00:02:32,070 --> 00:02:34,830
So the, the method that we're going to talk about today is called the Hough

49
00:02:34,830 --> 00:02:36,050
transform, and

50
00:02:36,050 --> 00:02:39,070
it's a voting technique that can be used to answer all these questions.

51
00:02:39,070 --> 00:02:41,900
And the main idea is just that voting principle.

52
00:02:41,900 --> 00:02:45,239
Each edge point is going to vote for compatible lines, that is,

53
00:02:45,239 --> 00:02:48,579
it's going to vote for any old line that would go through it, and

54
00:02:48,579 --> 00:02:51,520
then you're look for the lines that get many votes.

55
00:02:51,520 --> 00:02:55,750
So there might be two, three, four lines, and, you can find all of them.

56
00:02:55,750 --> 00:03:00,090
And by the way, if you keep track of which points voted for which lines,

57
00:03:00,090 --> 00:03:03,140
you're also able to go back and say which points belong to that line.
