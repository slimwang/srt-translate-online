1
00:00:00,000 --> 00:00:08,699
Let's get to writing some code. Now, in the Python RE module, there are two functions: search and match.

2
00:00:08,700 --> 00:00:15,866
Search takes a pattern, a regular expression in the form of a string as we've defined, and a text,

3
00:00:15,867 --> 00:00:19,466
and it returns "true" if the pattern appears anywhere in the text.

4
00:00:19,467 --> 00:00:22,666
Rather, I should say I'm simplifying a little bit here.

5
00:00:22,667 --> 00:00:34,099
The Python RE module returns a more complicated result, a not literally true, but a result that is true and has some more data.

6
00:00:34,100 --> 00:00:37,166
But in our implementation we're just going to return "true" or "false."

7
00:00:37,167 --> 00:00:41,599
So if the pattern occurs anywhere in the text, return "true",

8
00:00:41,600 --> 00:00:48,299
and then "match" says "return true if the pattern appears at the very start of the text."

9
00:00:48,300 --> 00:00:53,232
To make sure we understand what these are supposed to be returning, let's add some tests.

10
00:00:53,233 --> 00:01:00,199
Here we had four tests, each testing this regular expression, "baa*!"

11
00:01:00,200 --> 00:01:06,232
If we search for that within the string, "Sheep said baaaa!" it should find it right here.

12
00:01:06,233 --> 00:01:10,632
If we search within this string, it shouldn't find it because the B and the As are there,

13
00:01:10,633 --> 00:01:13,766
but it's not followed by an exclamation point, so that should be false.

14
00:01:13,767 --> 00:01:19,199
If we try to match it against this string, it's false because it doesn't occur right at the start.

15
00:01:19,200 --> 00:01:25,399
And if we try to match it against this string, it's true because there is a match right at the start.

16
00:01:25,400 --> 00:01:29,499
Now, regular expressions are complicated, so I wanted to add some more tests.

17
00:01:29,500 --> 00:01:36,132
Just to go through, we'll check for the dollar sign, we'll check for the up arrow at the start.

18
00:01:36,133 --> 00:01:43,799
We'll check for stars, we'll check for the question mark, optional, and we'll go into more detail,

19
00:01:43,800 --> 00:01:54,566
testing a pattern against multiple possible words--at the end, at the start, in the middle, check for this dot character.

20
00:01:54,567 --> 00:02:00,399
And if we can do all that, then we have some confidence that our routines are working.

21
00:02:00,400 --> 00:02:02,766
So let's get back to the routines.

22
00:02:02,767 --> 00:02:07,599
Now, if you want, you could go ahead and try to write search and match.

23
00:02:07,600 --> 00:02:14,766
They're complicated, and you need to understand a little bit about the processing of regular expressions to get them right.

24
00:02:14,767 --> 00:02:17,399
If you feel you're up to it, go ahead and try it now.

25
00:02:17,400 --> 00:02:20,566
If not, I'm going to lead you through it step by step.

26
00:02:20,567 --> 00:02:24,432
The two seem similar, so it'd be nice to write one in terms of each other.

27
00:02:24,433 --> 00:02:30,232
Let's write "search" in terms of match, although it'd be possible to do it the other way around.

28
00:02:30,233 --> 00:02:35,666
Now, a real distinction is whether a pattern starts with a up arrow or not.

29
00:02:35,667 --> 00:02:40,566
So if we're searching, remember, a search tests against anywhere in the pattern.

30
00:02:40,567 --> 00:02:44,832
So what I'm going to do is I'm going to check, say, "Does the pattern start with the up arrow?"

31
00:02:44,833 --> 00:02:50,232
And the only place that the up arrow really makes sense is as the first character in the pattern.

32
00:02:50,233 --> 00:02:55,466
If it appears elsewhere, we're gonna just consider that an error and not try to deal with it.

33
00:02:55,467 --> 00:03:01,466
Your program can return whatever you want if the up arrow appears in the wrong place, not right at the start of the pattern.

34
00:03:01,467 --> 00:03:08,966
If it does return right at the start of the pattern, then we can reduce this to a match with some different pattern over the same text.

35
00:03:08,967 --> 00:03:15,099
And if it doesn't, then we can also return it to a match, reduce it to a match with some different pattern over the text.

36
00:03:15,100 --> 00:03:18,766
What I'd like you to do is fill in these two patterns to say,

37
00:03:18,767 --> 00:03:25,500
"What is a search expressed at in terms of a match with an up arrow and without an up arrow?"
