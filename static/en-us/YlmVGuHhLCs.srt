1
00:00:00,250 --> 00:00:03,290
If you are able to figure this out on your own, great. You really don't need to

2
00:00:03,290 --> 00:00:06,707
understand any more about how this works to start developing code and doing more

3
00:00:06,707 --> 00:00:09,933
interesting things when queries come in. But I do want to explain a bit more

4
00:00:09,933 --> 00:00:14,583
about what's going on here. So, the important thing the web application does is

5
00:00:14,583 --> 00:00:19,670
map requests. So, here's the URL that came from the browser, that means the

6
00:00:19,670 --> 00:00:24,935
browser is sending a request to the service running on port 8080 on localhost,

7
00:00:24,935 --> 00:00:28,909
containing this is the request. So, that message will come from the browser. And

8
00:00:28,909 --> 00:00:32,301
this could be a browser running on your own machine if it's a localhost, but it

9
00:00:32,301 --> 00:00:36,196
could be a browser running anywhere in the world. And the request that comes in

10
00:00:36,196 --> 00:00:40,316
will be to get the slash followed by Hummus. That request will come into the

11
00:00:40,316 --> 00:00:44,658
machine and look for the process that's running on port 8080. We don't have a

12
00:00:44,658 --> 00:00:47,941
physical port that corresponds to this, but the operating system keeps track of

13
00:00:47,941 --> 00:00:51,302
what process is running where. And that's the process that started when we

14
00:00:51,302 --> 00:00:55,294
started running that web application. And what happened when that code started

15
00:00:55,294 --> 00:00:59,381
running the web application, is it started listening in on that port so requests

16
00:00:59,381 --> 00:01:03,614
would be directed to this web application. And what the application server will

17
00:01:03,614 --> 00:01:07,454
do is call the GET method of LuckySearch passing in as the query the value

18
00:01:07,454 --> 00:01:11,650
Hummus that came as the query in the GET request. And the key line is this one.

19
00:01:11,650 --> 00:01:15,928
This creates an instance of the application class in the web module and the

20
00:01:15,928 --> 00:01:20,206
first input here, provides a way of mapping requests to the class with a GET

21
00:01:20,206 --> 00:01:24,626
method that will handle that and we'll talk more about that in a second. When

22
00:01:24,626 --> 00:01:29,603
the GET method gets called, it returns the string that goes back through the

23
00:01:29,603 --> 00:01:34,659
application class which adds some extra headers around it to make it work as a

24
00:01:34,659 --> 00:01:39,478
response and that gets sent back to the browser which renders it, as we see

25
00:01:39,478 --> 00:01:43,773
here. So, what is going on with this mysterious input that tells the

26
00:01:43,773 --> 00:01:48,213
web.application how to map request to class. That's what we'll talk about next.
