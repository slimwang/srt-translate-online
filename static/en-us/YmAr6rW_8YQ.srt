1
00:00:00,000 --> 00:00:04,000
I'm here at Mozilla with Dave Herman a researcher at Mozilla Research

2
00:00:04,000 --> 00:00:09,000
who also sits on the standards committee for the governing body for JavaScript.

3
00:00:09,000 --> 00:00:13,000
I was wondering if you might tell us a bit about changes to the language over time

4
00:00:13,000 --> 00:00:16,000
or what's coming down the pike. >>Sure.

5
00:00:16,000 --> 00:00:22,000
JavaScript was initially invented by Brendan Eich in a great rush.

6
00:00:22,000 --> 00:00:27,000
He famously invented the first version of JavaScript in 10 days.

7
00:00:27,000 --> 00:00:31,000
The original goal of JavaScript was to create a little scripting language

8
00:00:31,000 --> 00:00:34,000
where people could to little things with webpages,

9
00:00:34,000 --> 00:00:37,000
and I think there were people even back then who had some visions of where it could go,

10
00:00:37,000 --> 00:00:40,000
but it really did start from pretty humble beginnings.

11
00:00:40,000 --> 00:00:43,000
At this point, JavaScript really is the language of the web,

12
00:00:43,000 --> 00:00:47,000
and the web has become note just a place for documents but a place for serious programs,

13
00:00:47,000 --> 00:00:50,000
for serious applications.

14
00:00:50,000 --> 00:00:57,000
As a result, the platform grows, the language grows, and the needs of the programmer grow with it.

15
00:00:57,000 --> 00:00:59,000
While JavaScript started out as a simple language,

16
00:00:59,000 --> 00:01:03,000
the needs of programmers aren't as simple as they used to be.

17
00:01:03,000 --> 00:01:08,000
That means that there's a lot of features that other programming languages have

18
00:01:08,000 --> 00:01:13,000
and JavaScript does not have that we've had to consider standardizing on.

19
00:01:13,000 --> 00:01:20,000
A big one is that as your programs start to get bigger, you have needs around organization

20
00:01:20,000 --> 00:01:25,000
of your programs that don't actually arise when your programs are smaller.

21
00:01:25,000 --> 00:01:30,000
You may have seen as you're working with Python that Python has a module system.

22
00:01:30,000 --> 00:01:35,000
It has the ability to define separate pieces of code that you put into modules,

23
00:01:35,000 --> 00:01:39,000
and then you can mix and match those modules and put together larger programs

24
00:01:39,000 --> 00:01:41,000
from smaller components.

25
00:01:41,000 --> 00:01:43,000
JavaScript doesn't have a module system at all.

26
00:01:43,000 --> 00:01:48,000
It's actually not that easy to create a library, create a piece of reusable code

27
00:01:48,000 --> 00:01:51,000
that you can share with other people.

28
00:01:51,000 --> 00:01:55,000
There are various idioms that people use within the language

29
00:01:55,000 --> 00:02:00,000
to sort of simulate a module system, but they don't get any support from the language directly.

30
00:02:00,000 --> 00:02:04,000
One of the biggest features that we've been working on for the next version of JavaScript

31
00:02:04,000 --> 00:02:07,000
is a module system in some ways similar to Python's module system,

32
00:02:07,000 --> 00:02:09,000
although JavaScript has some particular needs of its own.

33
00:02:09,000 --> 00:02:12,000
The web has some particular needs of its own.

34
00:02:12,000 --> 00:02:17,000
But it'll make it much easier for people to create reusable individual chunks of code

35
00:02:17,000 --> 99:59:59,999
that they can share with each other.
