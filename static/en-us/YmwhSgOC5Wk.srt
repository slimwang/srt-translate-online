1
00:00:00,410 --> 00:00:03,220
I'll start from the first one, no.

2
00:00:03,220 --> 00:00:05,810
The browser is really really really

3
00:00:05,810 --> 00:00:08,230
really good of keeping
track of requests.

4
00:00:08,230 --> 00:00:10,480
You don't need to worry
about a collision.

5
00:00:10,480 --> 00:00:12,350
In fact, I just made that up.

6
00:00:12,350 --> 00:00:13,470
So, no.

7
00:00:13,470 --> 00:00:14,860
For this one, no.

8
00:00:16,030 --> 00:00:19,420
Making lots of parallel
requests is totally fine for

9
00:00:19,420 --> 00:00:22,070
the same reason as I just stated.

10
00:00:22,070 --> 00:00:24,570
Is it this one, that nothing is wrong?

11
00:00:24,570 --> 00:00:26,110
No.
I don't like trick questions.

12
00:00:26,110 --> 00:00:31,109
So that must mean that the thumbnails
will be created in a random order.

13
00:00:32,220 --> 00:00:36,610
Remember, you cannot predict the order
in which requests will return.

14
00:00:36,610 --> 00:00:40,540
So you don't know when any of these
getJSON promises will resolve,

15
00:00:40,540 --> 00:00:44,300
which means that they could resolve in a
different order than they were created.

16
00:00:44,300 --> 00:00:48,509
In that case, the planet thumbnails will
be created in a totally random order.

17
00:00:49,560 --> 00:00:54,740
Now, this isn't necessarily a problem or
a bug, but it does lead to the question.

18
00:00:54,740 --> 00:00:58,410
Just how do you make the thumbnails
appear in the right order?

19
00:00:58,410 --> 00:00:58,920
Keep watching.
