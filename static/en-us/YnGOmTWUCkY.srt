1
00:00:00,470 --> 00:00:01,780
Having defined the variables,

2
00:00:01,780 --> 00:00:04,000
we're now ready to move on to
building the boolean formula.

3
00:00:04,000 --> 00:00:06,830
We're going to start with
the clauses needed so

4
00:00:06,830 --> 00:00:11,210
that given a satisfying assignment,
it's clear how to fill out the table.

5
00:00:11,210 --> 00:00:11,730
Nevermind for

6
00:00:11,730 --> 00:00:15,730
now about whether the corresponding
sequence has valid transitions.

7
00:00:15,730 --> 00:00:19,900
For now, we just want the individual
configurations to be well-defined.

8
00:00:19,900 --> 00:00:24,500
First, we have to enforce that at each
step, the machine is in some state.

9
00:00:24,500 --> 00:00:28,440
Hence, for all steps i,
at least one of the state variables for

10
00:00:28,440 --> 00:00:29,910
that step has to be true.

11
00:00:31,170 --> 00:00:33,360
Note that r denotes
the number of states here.

12
00:00:33,360 --> 00:00:36,320
In this context, it's just a constant.

13
00:00:36,320 --> 00:00:39,930
The input to our reduction is just
the string that we need to transform

14
00:00:39,930 --> 00:00:40,880
into a boolean formula.

15
00:00:40,880 --> 00:00:44,180
The machine also can't be
in two states at once.

16
00:00:44,180 --> 00:00:48,450
So we need to enforce that constraint
as well by saying that for every pair

17
00:00:48,450 --> 00:00:53,240
of state variables for a given turn
step, one of the two has to be false.

18
00:00:53,240 --> 00:00:56,750
Together, these sets of clauses
enforce that the machine corresponding

19
00:00:56,750 --> 00:00:58,720
to a satisfying tooth assignment.

20
00:00:58,720 --> 00:01:01,410
Is in exactly one state after each step.

21
00:01:01,410 --> 00:01:05,129
For the position of the head,
we have a similar set of clauses.

22
00:01:05,129 --> 00:01:08,140
The head has to be over some
square on the tape, but

23
00:01:08,140 --> 00:01:10,360
it can't be in two places at once.

24
00:01:10,360 --> 00:01:14,480
And lastly, each square on the tape
has to have exactly one symbol.

25
00:01:14,480 --> 00:01:18,490
Thus, for all steps I and squares J,

26
00:01:18,490 --> 00:01:23,780
there has to be some symbol on
the square, but there can't be two.

27
00:01:23,780 --> 00:01:27,430
The other clauses related to individual
configurations come from the start and

28
00:01:27,430 --> 00:01:28,480
end states.

29
00:01:28,480 --> 00:01:32,240
The machine must be in the initial
configuration at step zero.

30
00:01:32,240 --> 00:01:36,852
This means that the initial state must
be q0, that the head be over the first

31
00:01:36,852 --> 00:01:41,486
position on the tape, and that the first
part of the tape contained input w.

32
00:01:41,486 --> 00:01:44,750
The rest of the tape must
be set to blank to start.

33
00:01:44,750 --> 00:01:48,930
And finally, the computation
must end in an accepting state.

34
00:01:48,930 --> 00:01:51,420
This we can enforce
with the single clause

35
00:01:51,420 --> 00:01:54,660
that the state after step
p(n) be the accepting state.
