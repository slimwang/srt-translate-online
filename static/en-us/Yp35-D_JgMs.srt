1
00:00:00,540 --> 00:00:02,855
Hey.
Nice work fixing up Mike's awful,

2
00:00:02,855 --> 00:00:03,653
awful code.

3
00:00:03,653 --> 00:00:07,939
[LAUGH] I still blame him even
though I may have told him to do it.

4
00:00:07,939 --> 00:00:10,370
By now, you should feel
pretty good about yourself.

5
00:00:10,370 --> 00:00:12,295
Let me give you some context.

6
00:00:12,295 --> 00:00:15,720
Oftentimes when people learn separation
of concerns, they learn it by using

7
00:00:15,720 --> 00:00:21,210
a framework or a library like Angular or
Ember or Meteor or Backbone or Knockout.

8
00:00:21,210 --> 00:00:22,440
There are a lot of them.

9
00:00:22,440 --> 00:00:25,520
And some of them start to think of
separation of concerns as something that

10
00:00:25,520 --> 00:00:29,440
you need a framework or
library to do, but not you.

11
00:00:29,440 --> 00:00:32,860
All the stuff we've been doing
has been vanilla JavaScript and

12
00:00:32,860 --> 00:00:36,610
jQuery, no organizational
frameworks at all.

13
00:00:36,610 --> 00:00:38,800
That's more than could be said for
a lot of novice developers,

14
00:00:38,800 --> 00:00:41,560
so awesome, awesome job.

15
00:00:41,560 --> 00:00:45,406
Now, from what we've seen, any project
that updates the DOM based on data with

16
00:00:45,406 --> 00:00:49,410
JavaScript can be refactored
to use separation of concerns.

17
00:00:49,410 --> 00:00:52,340
So now we're moving onto our
last project for this lesson.

18
00:00:53,590 --> 00:00:56,755
You may have built the resumé
project in a previous course.

19
00:00:56,755 --> 00:00:58,830
I've linked the course and
the instructor notes below.

20
00:00:59,850 --> 00:01:01,420
If you took that course,

21
00:01:01,420 --> 00:01:03,950
we'll be refactoring your
project to be more awesome.

22
00:01:05,060 --> 00:01:07,980
If you didn't take that course,
I'll give you the repo for

23
00:01:07,980 --> 00:01:09,460
the associated project.

24
00:01:09,460 --> 00:01:13,570
We've seen that any project that
updates the DOM based on data

25
00:01:13,570 --> 00:01:18,270
using JavaScript can be refactored
to use separation of concerns, so

26
00:01:18,270 --> 00:01:20,420
that's what we'll be doing for
the resumé.

27
00:01:20,420 --> 00:01:24,140
Now, you'll all have less guidance on
this project and more autonomy and

28
00:01:24,140 --> 00:01:27,750
flexibility, which is exactly how
things are in the development world.

29
00:01:27,750 --> 00:01:30,230
So, if you have code of your own,

30
00:01:30,230 --> 00:01:33,480
make a new branch in your
resumé project repository.

31
00:01:33,480 --> 00:01:36,950
We're making a new branch so
we still have the original version.

32
00:01:36,950 --> 00:01:39,650
Do all of your work in that new branch.

33
00:01:39,650 --> 00:01:43,160
If you don't have code of your own,
check out the repository down in

34
00:01:43,160 --> 00:01:46,400
the instructor notes below and
take a look at the readme file so you

35
00:01:46,400 --> 00:01:51,460
can figure out how to do the project,
keeping separation of concerns in mind.

36
00:01:51,460 --> 00:01:56,320
Then, refactor the project to properly
utilize separation of concerns.

37
00:01:56,320 --> 00:02:00,370
This might be as simple as providing a
view object with a render function on it

38
00:02:00,370 --> 00:02:02,750
and ensuring you don't
mutate the model from it.

39
00:02:02,750 --> 00:02:05,490
Remember all the different
ways we can refactor,

40
00:02:05,490 --> 00:02:08,419
either by modifying the current
files as they are or

41
00:02:08,419 --> 00:02:10,680
doing some version of burning it and
rewriting.
