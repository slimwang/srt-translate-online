1
00:00:00,360 --> 00:00:02,280
So what the partial or the planner has done so

2
00:00:02,280 --> 00:00:07,700
far is to view the two goals as if they were independent of each other.

3
00:00:07,700 --> 00:00:12,480
And come up with a partial plan for each of the two goals. It has not yet

4
00:00:12,480 --> 00:00:16,180
detected any conflicts between that will not resolve those conflicts.

5
00:00:16,180 --> 00:00:20,450
The next thing would be to examine the relationship between these two plans and

6
00:00:20,450 --> 00:00:26,030
see if there are any conflicts between. But how might a partial order plan

7
00:00:26,030 --> 00:00:29,800
go about detecting conflicts between two plans? So, here is plan one imagined,

8
00:00:29,800 --> 00:00:35,300
here is plan two. The partial order planner may go about detecting conflicts.

9
00:00:35,300 --> 00:00:39,300
We're look at each precondition of the current plan. Under the precondition of

10
00:00:39,300 --> 00:00:42,660
an operator any current plan is clobbered by some state in the,

11
00:00:42,660 --> 00:00:45,670
another plan, in the second plan, than the partial order planner would know that

12
00:00:45,670 --> 00:00:50,380
there's a conflict between them. [UNKNOWN] goal resolving these conflicts, but

13
00:00:50,380 --> 00:00:54,740
promoting or demoting one clients goal or another clients goal.

14
00:00:55,910 --> 00:01:01,870
There's if some stated plan B covers the application of some operator in plan A,

15
00:01:01,870 --> 00:01:05,990
then we now want to alter the goals in this plan and this plan in

16
00:01:05,990 --> 00:01:10,770
such a way that this operator's done before that state is achieved. Now,

17
00:01:10,770 --> 00:01:14,330
let us see how the partial order planner may go about detecting conflicts within

18
00:01:14,330 --> 00:01:18,430
these two plans. So the partial order planner may begin with this plan for

19
00:01:18,430 --> 00:01:22,645
painting the ladder. And see whether the precondition of this operator,

20
00:01:22,645 --> 00:01:27,990
paint-ladder, are clobbered by any state in the second plan. As it turns out,

21
00:01:27,990 --> 00:01:32,030
that doesn't happen in this example. Now, the partial order planner will look at

22
00:01:32,030 --> 00:01:35,720
the operands in the second plan. And see whether the preconditions of any of

23
00:01:35,720 --> 00:01:40,260
the operators are clobbered by some status in this first plan. So

24
00:01:40,260 --> 00:01:44,602
let's look at climb-ladder here. The precondition of climb-ladder is, on robot,

25
00:01:44,602 --> 00:01:49,080
floor, and dry ladder. And as this precondition is compared with the states.

26
00:01:49,080 --> 00:01:53,300
In the first plan, we can eventually see the conflict. Here is dry ladder, and

27
00:01:53,300 --> 00:01:57,660
here is not dry ladder. And this way the partial order planner has been able to

28
00:01:57,660 --> 00:02:04,080
find that the water-less states here in the first plan proverbs the precondition

29
00:02:04,080 --> 00:02:08,250
of one operator on this second plan. To resolve this conflict, the partial order

30
00:02:08,250 --> 00:02:13,010
planner may promote these goals or the goal of painting the ladder.

31
00:02:13,010 --> 00:02:16,940
Some of you also noticed that after the robot has painted the ceiling,

32
00:02:16,940 --> 00:02:22,470
the robot is on ladder. But in order to apply the paint ladder operator,

33
00:02:22,470 --> 00:02:27,170
the robot must be on the floor. So here there is an open condition problem.

34
00:02:27,170 --> 00:02:30,880
This particular condition where this operator is not being satisfied.

35
00:02:30,880 --> 00:02:34,590
When the robot is on the ladder. We'll come to this in a minute.
