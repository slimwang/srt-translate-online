1
00:00:00,470 --> 00:00:04,980
Spaghetti code is easily avoidable once you know how to avoid it.

2
00:00:04,980 --> 00:00:07,180
First though, let's talk about the problem.

3
00:00:07,180 --> 00:00:10,880
Things get really messy when you connect things together.

4
00:00:10,880 --> 00:00:14,010
And an application is ultimately all about connecting pieces of

5
00:00:14,010 --> 00:00:15,370
code to each other.

6
00:00:15,370 --> 00:00:18,360
But if you connect all the pieces to all the other pieces,

7
00:00:18,360 --> 00:00:20,450
suddenly you can't move anything around anymore.

8
00:00:21,700 --> 00:00:24,380
Now, you may have noticed that I'm not at my desk.

9
00:00:24,380 --> 00:00:25,650
I don't have my computer.

10
00:00:25,650 --> 00:00:26,290
Everything is white.

11
00:00:26,290 --> 00:00:28,760
It's actually a little weird.

12
00:00:28,760 --> 00:00:30,110
That's because we're in concept land,

13
00:00:30,110 --> 00:00:34,600
and the whole point of concept land is to not think about code.

14
00:00:34,600 --> 00:00:39,255
So, sit back, relax, and let's just talk in concepts and metaphors for a moment.

15
00:00:39,255 --> 00:00:43,377
[SOUND] Here's the metaphor.

16
00:00:43,377 --> 00:00:46,290
Let's go back in time to the invention of the telephone.

17
00:00:47,290 --> 00:00:50,710
See, when there were only two telephones, things were pretty simple.

18
00:00:50,710 --> 00:00:54,360
The phones could connect directly to each other, and then we're done.

19
00:00:54,360 --> 00:00:56,810
Two telephones means one connection.

20
00:00:56,810 --> 00:00:58,240
Now let's add another.

21
00:00:58,240 --> 00:00:59,700
Now we have three phones and

22
00:00:59,700 --> 00:01:02,870
each phone still needs to connect to every other phone.

23
00:01:02,870 --> 00:01:05,319
That means three connections.

24
00:01:05,319 --> 00:01:06,530
Let's add another one.

25
00:01:06,530 --> 00:01:08,200
Now we have four phones, and

26
00:01:08,200 --> 00:01:11,190
each phone still needs to connect to every other phone.

27
00:01:11,190 --> 00:01:14,200
That's four phones and six connections.

28
00:01:14,200 --> 00:01:15,780
Now, this is a pretty shape here,

29
00:01:15,780 --> 00:01:19,680
but it's not very good if you have a bunch of wires all over the place.

30
00:01:19,680 --> 00:01:21,940
Let's add several more.

31
00:01:21,940 --> 00:01:25,130
With ten phones, we have a lot more connections.

32
00:01:25,130 --> 00:01:27,888
45 connections, in fact.

33
00:01:27,888 --> 00:01:30,670
I'll tell you, this took me awhile to draw.

34
00:01:30,670 --> 00:01:34,635
So you can imagine what 11 phones, or 15 phones, or 20 phones, or

35
00:01:34,635 --> 00:01:37,430
2,000 phones would be like.

36
00:01:37,430 --> 00:01:40,060
So here's a table of what we've learned so far.

37
00:01:40,060 --> 00:01:43,320
As it turns out, the number of connections is ultimately defined by

38
00:01:43,320 --> 00:01:49,070
the equation n times n minus 1, all over 2, where n is the number of phones.

39
00:01:49,070 --> 00:01:53,910
Now, if you're a math geek, this is related to n times n plus 1 over 2.

40
00:01:53,910 --> 00:01:58,140
But in this case, n is one less than the number of phones.

41
00:01:58,140 --> 00:02:00,260
So I've simplified to this equation here.

42
00:02:00,260 --> 00:02:01,390
So now that we know that,

43
00:02:01,390 --> 00:02:05,424
how many connections would a small town with a population of 2,000 have?

44
00:02:05,424 --> 00:02:10,389
That would be 1,999,000 connections.

45
00:02:10,389 --> 00:02:12,580
I'm not going to draw this one for you.

46
00:02:12,580 --> 00:02:14,910
So, how do we build this in reality?

47
00:02:14,910 --> 00:02:18,050
I'm sure you probably have a better solution in your head already.

48
00:02:18,050 --> 00:02:20,780
Let's make every phone connect to a hub.

49
00:02:20,780 --> 00:02:22,750
Now, how many connections do we need?

50
00:02:22,750 --> 00:02:25,680
Well, if you think about it, for every phone you have,

51
00:02:25,680 --> 00:02:30,470
it connects to one thing rather than n number of things.

52
00:02:30,470 --> 00:02:32,200
Let's take a look at our chart again.

53
00:02:32,200 --> 00:02:36,330
If we have two phones, our number of connections will be two.

54
00:02:36,330 --> 00:02:39,760
If we have three phones, our number of connections will be three.

55
00:02:39,760 --> 00:02:41,440
Four phones will be four.

56
00:02:41,440 --> 00:02:43,210
Ten will be ten.

57
00:02:43,210 --> 00:02:46,234
And 2,000 will be 2,000.

58
00:02:46,234 --> 00:02:50,776
As you can see, with two and with three phones, we end up actually doing

59
00:02:50,776 --> 00:02:55,580
better off or the same with our original direct connection method.

60
00:02:55,580 --> 00:03:00,314
But generally speaking, this shows you that connections are complexity.

61
00:03:00,314 --> 00:03:05,060
If you saw these two things on a graph, this one would go kind of like that.

62
00:03:05,060 --> 00:03:08,010
This one would linearly increase.

63
00:03:08,010 --> 00:03:11,590
So now we know that we should minimize our connections.

64
00:03:11,590 --> 00:03:15,190
It turns out software development is very similar, so let's take a look at that.
