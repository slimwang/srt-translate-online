1
00:00:00,000 --> 00:00:02,000
The answer is that it is correct when it returns.

2
00:00:02,000 --> 00:00:07,000
All the values it builds up are correct, but unfortunately it doesn't always return.

3
00:00:07,000 --> 00:00:09,000
Let's try to figure out why.

4
00:00:09,000 --> 00:00:12,000
In think about this, we want to think about recursive patterns.

5
00:00:12,000 --> 00:00:14,000
Let's look at the pattern x+.

6
00:00:14,000 --> 00:00:21,000
We've definec x+ as being the sequence of x followed by x*.

7
00:00:21,000 --> 00:00:25,000
And now for most instances of x that's not a problem.

8
00:00:25,000 --> 00:00:30,000
If we had plus(lit('a')), it not going to be a problem.

9
00:00:30,000 --> 00:00:36,000
That's going to generate a, aa, aaa, and so on.

10
00:00:36,000 --> 00:00:46,000
But consider this--let's define a equals lit('a'), pat equals plus(opt('a')).

11
00:00:46,000 --> 00:00:53,000
Now, this should be the same. This should also generate a, aa, aaa.

12
00:00:53,000 --> 00:00:58,000
The way we can see that is we have a plus so that generates any number of these.

13
00:00:58,000 --> 00:01:04,000
If we pick a once, we get this. It we pick a twice we get this. If we pick a three times we get this.

14
00:01:04,000 --> 00:01:07,000
But the problem is there's all these other choices in between.

15
00:01:07,000 --> 00:01:12,000
Opt(a) means we we can either be picking a or the empty string.

16
00:01:12,000 --> 00:01:18,000
As we go through the loop for plus, we could pick empty string, empty string, empty string.

17
00:01:18,000 --> 00:01:21,000
We could pick empty string an infinite number of times.

18
00:01:21,000 --> 00:01:24,000
Even though our N is finite--

19
00:01:24,000 --> 00:01:29,000
at some point we're going to ask for pattern of some N--

20
00:01:29,000 --> 00:01:38,000
let's say the set {1, 2, 3}--we won't have a problem with having an infinite number of a's,

21
00:01:38,000 --> 00:01:42,000
but we will have a problem of choosing from the opt(a) the empty part.

22
00:01:42,000 --> 00:01:48,000
If an infinite number of times we choose the empty string rather than choosing a,

23
00:01:48,000 --> 00:01:52,000
then we're never going to get past three as the highest value.

24
00:01:52,000 --> 00:01:54,000
We're going to keep going forever.

25
00:01:54,000 --> 00:01:59,000
That's the problem. We've got to somehow say I don't want to keep choosing the empty string.

26
00:01:59,000 --> 00:02:02,000
I want to make progress and choose something each time through.

27
00:02:02,000 --> 99:59:59,999
So how can we make sure that happens?
