1
00:00:00,008 --> 00:00:04,230
The Android 5.0 introduced
a new tool bar widget.

2
00:00:04,230 --> 00:00:08,050
This generalization of the action bar
pattern, gives you much more control and

3
00:00:08,050 --> 00:00:09,520
flexibility.

4
00:00:09,520 --> 00:00:14,010
Tool bars of view and your hierarchy
just like any other, making it easier to

5
00:00:14,010 --> 00:00:18,850
interweave with the rest of your hues,
animate and react to scroll events.

6
00:00:18,850 --> 00:00:22,070
Many Androids apps now have two or
more tool bars.

7
00:00:22,070 --> 00:00:23,810
As in this example.

8
00:00:23,810 --> 00:00:26,950
Toolbars are made particularly
important, because of the design rule

9
00:00:26,950 --> 00:00:31,080
that we aren't supposed to split a
toolbar with another piece of material.

10
00:00:31,080 --> 00:00:34,360
This means we often
need multiple toolbars.

11
00:00:34,360 --> 00:00:37,090
Fortunately, we have a fully
functional version that has been

12
00:00:37,090 --> 00:00:39,150
built as part of the Android
support library.

13
00:00:40,380 --> 00:00:44,710
In order to make use of toolbar, we need
to first change our application to use

14
00:00:44,710 --> 00:00:47,980
a theme that doesn't add
an action bar on our behalf.

15
00:00:47,980 --> 00:00:52,810
I'm going to create a base toolbar
style, that gives it a background color.

16
00:00:52,810 --> 00:00:55,750
Toolbars have transparent
backgrounds by default.

17
00:00:55,750 --> 00:00:59,170
We'll also make sure that we're
using the light pop up theme.

18
00:00:59,170 --> 00:01:01,060
This will be important when
you set the toolbars to

19
00:01:01,060 --> 00:01:02,120
the dark theme in our layouts.

20
00:01:02,120 --> 00:01:04,760
That we can have a little more light
colored text that will pop against our

21
00:01:04,760 --> 00:01:06,330
dark background.

22
00:01:06,330 --> 00:01:09,250
I can make all of my
toolbars get this new style,

23
00:01:09,250 --> 00:01:12,970
by placing a toolbar
style in the app theme.

24
00:01:12,970 --> 00:01:15,930
Then you just add
the toolbar into our layout.

25
00:01:15,930 --> 00:01:19,080
Note that I'm setting the size to
be the standard action bar size

26
00:01:19,080 --> 00:01:22,900
from the current theme,
using the ?attr notation.

27
00:01:22,900 --> 00:01:26,640
And I'm setting the theme to
be the overlay theme for dark.

28
00:01:26,640 --> 00:01:29,650
This will nicely style
us with light text.

29
00:01:29,650 --> 00:01:33,100
Finally, I can make the toolbar
behave like an action bar.

30
00:01:33,100 --> 00:01:36,280
By setting into the activity
using setSupportActionBar.

31
00:01:37,530 --> 00:01:42,090
Once it's there, I can apply action bar
styling to it using getSupportActionBar.

32
00:01:43,200 --> 00:01:46,060
I could use these functions
to get the icon back, but

33
00:01:46,060 --> 00:01:49,310
I want to demonstrate one other
cool thing about toolbar.

34
00:01:49,310 --> 00:01:51,600
It contains a view group
that you can customize.

35
00:01:52,860 --> 00:01:55,470
This view group is like an even
more simple frame layout.

36
00:01:56,470 --> 00:02:00,310
So we could add our logo back
to the toolbar this way.

37
00:02:00,310 --> 00:02:01,570
This level of control,

38
00:02:01,570 --> 00:02:04,410
becomes useful as we continue
to work towards our new design.
