1
00:00:00,160 --> 00:00:03,820
So now let's talk about how
authentication can be implemented.

2
00:00:03,820 --> 00:00:06,520
It could be something
that the user knows.

3
00:00:06,520 --> 00:00:11,660
So this has to be a secret, a secret
that is shared between the user and

4
00:00:11,660 --> 00:00:12,510
the system.

5
00:00:12,510 --> 00:00:15,775
The fact that you are able to produce
that secret that's associated with

6
00:00:15,775 --> 00:00:18,265
the user,
that means you are that person.

7
00:00:18,265 --> 00:00:21,195
That is the evidence that
you are who you claim to be.

8
00:00:21,195 --> 00:00:23,665
A password for
example is a secret, isn't it?

9
00:00:23,665 --> 00:00:28,505
We say ask people to pick a password
that others can not guess or

10
00:00:28,505 --> 00:00:29,395
easily guess.

11
00:00:29,395 --> 00:00:30,645
Well, that's your secret.

12
00:00:30,645 --> 00:00:34,925
So one way to do
authentication is that users

13
00:00:34,925 --> 00:00:39,920
have a secret that they can produce
to the system and the system is able

14
00:00:39,920 --> 00:00:44,600
to check that the secret really is the
one that is associated with that user.

15
00:00:44,600 --> 00:00:48,640
The other possibility is
something the user has.

16
00:00:48,640 --> 00:00:53,740
So think of this some sort of a token or
a smart card or something

17
00:00:53,740 --> 00:00:59,090
that you use and the fact that you have
it means you have possession of it.

18
00:00:59,090 --> 00:01:02,910
So, possession of that token, we have to
talk about how this could be used for

19
00:01:02,910 --> 00:01:04,190
authentication.

20
00:01:04,190 --> 00:01:08,580
The fact that it's with you, smart
card or token is with you, a fob, for

21
00:01:08,580 --> 00:01:10,530
example, people use that.

22
00:01:10,530 --> 00:01:16,290
That's with you, that means it must be
the user who you're claiming to be or

23
00:01:16,290 --> 00:01:19,650
the user who should be possessing
this particular thing.

24
00:01:19,650 --> 00:01:21,770
The first thing is
something you would know.

25
00:01:21,770 --> 00:01:25,680
The second is something you have on you,
or with you.

26
00:01:25,680 --> 00:01:30,120
The third thing we can think
of is something the user is or

27
00:01:30,120 --> 00:01:31,550
something you are.

28
00:01:31,550 --> 00:01:34,620
So this could be for
example your finger print.

29
00:01:34,620 --> 00:01:39,350
This could be your voice, for example,
people talk about voice biometric,

30
00:01:39,350 --> 00:01:43,510
or their smartphone devices that
you can talk to, for example.

31
00:01:43,510 --> 00:01:48,190
So this would be a biometric,
something that is unique, hopefully,

32
00:01:48,190 --> 00:01:52,090
to the user, because we don't want
somebody else to become you, so

33
00:01:52,090 --> 00:01:55,470
this biometric has to be
something that's specific to you.

34
00:01:55,470 --> 00:01:59,070
And if you're able to produce that,
the system you're able to give that to

35
00:01:59,070 --> 00:02:02,920
the system and the system is able
to check that actually it is your

36
00:02:02,920 --> 00:02:08,520
fingerprint then the authentication
is based on something the user is.

37
00:02:08,520 --> 00:02:13,590
Something you know, something you have,
or something you are.

38
00:02:13,590 --> 00:02:17,990
These are sort of the three basic
methods that are used in almost all

39
00:02:17,990 --> 00:02:22,080
the authentication techniques
that we use in computer systems.

40
00:02:22,080 --> 00:02:27,220
So we are going to again look a little
bit more deeply into how authentication

41
00:02:27,220 --> 00:02:32,000
is implemented, using one of these
methods that we talked about.

42
00:02:32,000 --> 00:02:35,710
A secret you share with the system,
or something you have, or

43
00:02:35,710 --> 00:02:36,640
something you are.

44
00:02:36,640 --> 00:02:41,290
So the basic sort of sequence of
steps that we're going to have is

45
00:02:41,290 --> 00:02:46,100
that the user is actually going
to come to the system and

46
00:02:46,100 --> 00:02:49,290
is going to request access to it.

47
00:02:49,290 --> 00:02:52,630
And we know that is going to
start with request for

48
00:02:52,630 --> 00:02:55,990
authentication, you first have
to authenticate yourself.

49
00:02:55,990 --> 00:03:02,290
The system, the operating system here
is going to take whatever claim about

50
00:03:02,290 --> 00:03:06,990
identity you make, so for example you
may be saying this is my log in name.

51
00:03:06,990 --> 00:03:10,810
So it's going to read those
keystrokes and that's who you are.

52
00:03:10,810 --> 00:03:14,830
And if you're providing,
for example, a password,

53
00:03:14,830 --> 00:03:20,590
then the operating system at this point
is going to run this login program and

54
00:03:20,590 --> 00:03:23,960
the login program is going to check
that information that you provide.

55
00:03:23,960 --> 00:03:27,980
For example, the password you
provide Is really your password.

56
00:03:27,980 --> 00:03:31,708
Is the password we have
associated with this user?

57
00:03:31,708 --> 00:03:34,820
If there's a match with
what the system knows and

58
00:03:34,820 --> 00:03:38,930
what you provide,
that is a true positive.

59
00:03:38,930 --> 00:03:42,610
If it's the right user then that's a
true positive, the outcome is positive.

60
00:03:42,610 --> 00:03:47,270
Here, so the user is authenticated and
when the user is authenticated,

61
00:03:47,270 --> 00:03:53,650
this is how you can now initiate any
further actions you want to perform.

62
00:03:53,650 --> 00:03:56,700
So this is sort of the case
where the right user

63
00:03:56,700 --> 00:03:58,870
provides the right kind of evidence.

64
00:03:58,870 --> 00:04:02,080
The log in program is able to check and
successfully log in the user.

65
00:04:03,080 --> 00:04:07,760
Well, the check could fail and if it
fails then the system believes that

66
00:04:07,760 --> 00:04:11,140
the user has not provided
the correct information.

67
00:04:11,140 --> 00:04:13,680
And if the user has not provided
the correct information,

68
00:04:13,680 --> 00:04:16,970
it's probably not the user
who is being claimed.

69
00:04:16,970 --> 00:04:19,890
The identity that is being claimed

70
00:04:19,890 --> 00:04:23,800
probably doesn't belong to the user
who is asking for authentication.

71
00:04:23,800 --> 00:04:26,360
So this could be impersonation for
example.

72
00:04:26,360 --> 00:04:29,730
So in this case, the system
doesn't have the right evidence,

73
00:04:29,730 --> 00:04:33,710
doesn't have this match, so
it's not going to authenticate the user.

74
00:04:33,710 --> 00:04:36,890
So in this case, authentication fails.

75
00:04:36,890 --> 00:04:38,820
Maybe you retype your password.

76
00:04:38,820 --> 00:04:41,740
If you're not the right user,
then that's a good thing.

77
00:04:41,740 --> 00:04:46,610
So then, that if you are not the right
user, even you are trying to

78
00:04:48,010 --> 00:04:52,380
login as Alice and
the system says no, that's good.

79
00:04:52,380 --> 00:04:55,890
That is a true negative actually
because outcome is negative and

80
00:04:55,890 --> 00:04:57,230
it's the right thing.

81
00:04:57,230 --> 00:05:01,980
Okay so Eve tries to login as Alice and
we end up here.

82
00:05:01,980 --> 00:05:03,500
That's a true negative.

83
00:05:03,500 --> 00:05:06,830
When Alice tries to login as Alice.

84
00:05:06,830 --> 00:05:09,950
We come here, that is a true positive.

85
00:05:09,950 --> 00:05:13,940
So this is how the authentication
process is implemented.

86
00:05:13,940 --> 00:05:18,340
Couple of things to note here is
that we have to read the evidence or

87
00:05:18,340 --> 00:05:19,660
capture the evidence.

88
00:05:19,660 --> 00:05:22,970
We have to compare it and
then decide whether there's a match or

89
00:05:22,970 --> 00:05:25,860
not and go either this path or
the other path.
