1
00:00:00,400 --> 00:00:03,440
Let's step back from the quick report
app for a moment to learn about a new

2
00:00:03,440 --> 00:00:07,300
control flow structure that you'll need
in the next coding test for the app.

3
00:00:07,300 --> 00:00:11,410
In the first beginners course, we'll
learn about first control structure

4
00:00:11,410 --> 00:00:18,050
the if else statement, by using
special Java key words if and else.

5
00:00:18,050 --> 00:00:20,960
You can create different
execution paths.

6
00:00:20,960 --> 00:00:24,080
Now instead of executing
every line of code,

7
00:00:24,080 --> 00:00:28,240
one after the other,
you can execute one block of code and

8
00:00:28,240 --> 00:00:33,050
then skip another block if
a certain condition is true.

9
00:00:33,050 --> 00:00:36,800
Now we'll talk about something
called switch statements in Java.

10
00:00:36,800 --> 00:00:39,770
The switch statement provides
a way to execute unique logic for

11
00:00:39,770 --> 00:00:43,260
different discrete values
of a non-Boolean condition.

12
00:00:43,260 --> 00:00:46,680
Here's a code example where we
execute different code paths

13
00:00:46,680 --> 00:00:51,180
based on the value of a single
variable called numberOfStars

14
00:00:51,180 --> 00:00:53,680
which represents number of stars
that a restaurant received.

15
00:00:54,880 --> 00:00:58,860
Now, in each code path represented
in these case statements,

16
00:00:58,860 --> 00:01:01,710
we can perform any kind
of logic that we want.

17
00:01:01,710 --> 00:01:05,690
We just happen to be setting
a rating string to different values.

18
00:01:05,690 --> 00:01:09,650
Switch statements are useful to avoid
writing lots of if statements, or

19
00:01:09,650 --> 00:01:11,430
nested if statements.

20
00:01:11,430 --> 00:01:15,050
Now you can achieve the same logic we
just saw in the switch statement above

21
00:01:15,050 --> 00:01:16,740
with an if else statement.

22
00:01:16,740 --> 00:01:20,640
But the if else approach is more repose
and contains way more repetition.

23
00:01:20,640 --> 00:01:25,620
For example, we need to keep writing,
or checking numberOfStars equals, and

24
00:01:25,620 --> 00:01:27,910
change each value every time.

25
00:01:27,910 --> 00:01:31,720
For example, checking to see if
numbers of stars equals to one,

26
00:01:31,720 --> 00:01:36,080
checking to see if numbers of stars
equals two, three, and so on.

27
00:01:37,470 --> 00:01:40,300
A switch statement consists
of the switch keyword,

28
00:01:40,300 --> 00:01:44,280
followed by the value we wish
to evaluate within parenthesis.

29
00:01:44,280 --> 00:01:47,720
Now, between these curly braces,
we're going to go ahead and

30
00:01:47,720 --> 00:01:48,889
list out our cases.

31
00:01:50,190 --> 00:01:53,700
Each case consist of a case keyword.

32
00:01:53,700 --> 00:01:58,680
The expected value followed by a colon,
for example, when a numberOfStars

33
00:01:58,680 --> 00:02:04,420
variable is equal to 1 we execute the
lines of code within this case block.

34
00:02:04,420 --> 00:02:08,180
This happens as a set of rating
string equal to bad restaurant.

35
00:02:08,180 --> 00:02:10,570
We keep executing code, line by line,

36
00:02:10,570 --> 00:02:14,670
within the switch statement,
until we reach a break statement.

37
00:02:14,670 --> 00:02:17,460
Then it's time to execute the whole
switch statement itself and

38
00:02:17,460 --> 00:02:20,960
continue executing the code
that comes after it.

39
00:02:20,960 --> 00:02:21,750
Let's say, for example,

40
00:02:21,750 --> 00:02:25,230
that the numberOfStars
variable doesn't equal one.

41
00:02:25,230 --> 00:02:28,930
Then we skip over this entire first
case, and go to the next case,

42
00:02:28,930 --> 00:02:31,690
where we check if the numbers
of stars variables equals 2.

43
00:02:31,690 --> 00:02:33,210
If so,

44
00:02:33,210 --> 00:02:38,640
we execute the code in here, setting the
rating string equal to okay restaurant.

45
00:02:38,640 --> 00:02:41,450
And then we keep going until
we hit the "break" statement.

46
00:02:41,450 --> 00:02:43,990
And then we exit the entire
switch as a whole.

47
00:02:43,990 --> 00:02:47,070
We don't need to keep checking if
the other cases is math or not.

48
00:02:47,070 --> 00:02:49,440
Now, if the number of stars
variable doesn't equal one or

49
00:02:49,440 --> 00:02:54,050
two, then we go into the third case and
you know what happens here.

50
00:02:54,050 --> 00:02:57,330
Now, you can have as many cases as
you want as long as the case value

51
00:02:57,330 --> 00:02:58,700
is still an integer.

52
00:02:58,700 --> 00:03:02,330
Because the original variable in
a switch statement Is an integer.

53
00:03:02,330 --> 00:03:06,160
If your switch statement was testing
a value of a string variable,

54
00:03:06,160 --> 00:03:08,340
then the case values would
have to be strings too.

55
00:03:08,340 --> 00:03:13,470
In the lines of code within each
case can be as long as you want.

56
00:03:13,470 --> 00:03:17,720
You can have zero lines of code in
a case, 20 lines of code, or more.

57
00:03:17,720 --> 00:03:19,690
Here we have a special word default.

58
00:03:19,690 --> 00:03:23,670
If the number of stars variable
doesn't equal any of the case values.

59
00:03:23,670 --> 00:03:27,140
Then a switch may provide
an optional default case.

60
00:03:27,140 --> 00:03:30,280
This is where we use the key word
default, followed by a colon.

61
00:03:31,330 --> 00:03:34,450
Now if we fall into this case,
then the rating string becomes,

62
00:03:34,450 --> 00:03:35,390
no rating available.

63
00:03:35,390 --> 00:03:38,510
And then we break out of
this switch statement.

64
00:03:38,510 --> 00:03:41,560
Now generally,
it's a good idea to have a default case,

65
00:03:41,560 --> 00:03:45,280
in case the original value has a value
that you didn't write a case for.

66
00:03:45,280 --> 00:03:48,930
At least you'll have some reasonable
behavior as a back up in your code.

67
00:03:48,930 --> 00:03:52,100
As you may have noticed, the switch
statement has a very specific format and

68
00:03:52,100 --> 00:03:55,960
uses some words that have special
meaning like switch and case.

69
00:03:55,960 --> 00:03:59,250
If we check the Java key word list we
can verify that these words show up

70
00:03:59,250 --> 00:04:00,410
in the list.

71
00:04:00,410 --> 00:04:03,070
For example, switch is a Java keyword.

72
00:04:03,070 --> 00:04:06,820
We can also see case,
break, and default.

73
00:04:06,820 --> 00:04:08,940
So make sure you use
these words exactly, so

74
00:04:08,940 --> 00:04:11,360
that Java can interpret
your code properly.

75
00:04:11,360 --> 00:04:13,620
Here's another example
of a switch statement,

76
00:04:13,620 --> 00:04:16,230
where we check the value
of a variable called grade.

77
00:04:16,230 --> 00:04:21,399
Now, it's a char data type meaning
it holds a single character like a,

78
00:04:21,399 --> 00:04:22,100
b, and c.

79
00:04:22,100 --> 00:04:26,870
Now as you can see, the string message
changes based on the grade value.

80
00:04:26,870 --> 00:04:32,210
In the case of a for example, we have
the string message equal superb work.

81
00:04:32,210 --> 00:04:35,570
If you got a grade of b,
the message equals great job.

82
00:04:36,750 --> 00:04:39,260
Now one interesting thing
to know about this example

83
00:04:39,260 --> 00:04:41,710
is that you can fall
through other cases.

84
00:04:41,710 --> 00:04:45,000
That means that the execution path
won't exit the switch they met

85
00:04:45,000 --> 00:04:47,750
just because you finished a single case.

86
00:04:47,750 --> 00:04:51,040
You need to explicitly add
a break if you want to exit there

87
00:04:51,040 --> 00:04:54,330
Notice that there is no break
statement at the end of the D case.

88
00:04:54,330 --> 00:04:58,230
If the grade is D the code is going to
fall through into the conditional code

89
00:04:58,230 --> 00:05:02,810
for the F case where the message
string is set to needs improvement.

90
00:05:02,810 --> 00:05:05,620
Now as we know the execution flow
is going to continue through

91
00:05:05,620 --> 00:05:09,170
each line of code until we hit
our first break statement.

92
00:05:09,170 --> 00:05:10,530
And then we exit.

93
00:05:10,530 --> 00:05:14,000
So just to recap, in the cases
where there is no break statement

94
00:05:14,000 --> 00:05:17,080
such as the D case, the code is
actually going to fall through.

95
00:05:17,080 --> 00:05:21,100
Which means this logic is
actually common between the D and

96
00:05:21,100 --> 00:05:25,720
the F cases until we hit this break
statement of course and then we'll exit.

97
00:05:25,720 --> 00:05:29,410
Now let's test your ability to read
switch statements in the following code.

98
00:05:29,410 --> 00:05:30,470
When you go into a restaurant,

99
00:05:30,470 --> 00:05:34,450
sometimes they ask you how spicy you
want your food on a numerical scale.

100
00:05:34,450 --> 00:05:36,700
So, given a certain spiciness level,

101
00:05:36,700 --> 00:05:39,310
how would you use switch statement
to adjust the flavor accordingly?

102
00:05:39,310 --> 00:05:43,560
I want you to take this table and for
each row where you're given a certain

103
00:05:43,560 --> 00:05:47,060
spice level, I want you to apply that
value to the switch statement here and

104
00:05:47,060 --> 00:05:50,860
then tell me what value would
be set to the flavor string.

105
00:05:50,860 --> 00:05:54,950
For example, if we were given a spice
level of zero, we'd see in the switch

106
00:05:54,950 --> 00:05:58,200
statement here, none of the cases
would actually be evaluated to true.

107
00:05:58,200 --> 00:06:02,290
Therefore, our code would fall through
all the way down to the default case,

108
00:06:02,290 --> 00:06:05,550
and therefore the flavor string
would be set to not spicy.
