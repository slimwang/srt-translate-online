1
00:00:00,520 --> 00:00:03,980
So, how would we use a service 
to implement our application?

2
00:00:03,980 --> 00:00:07,800
Fortunately, we've already done 
most of the work.

3
00:00:07,800 --> 00:00:10,680
We have a content provider
with a content notifier

4
00:00:10,680 --> 00:00:13,360
that will notify our content observers.

5
00:00:13,360 --> 00:00:18,300
Our FetchWeatherTask already runs 
completely independently of our UI

6
00:00:18,300 --> 00:00:19,750
Good on us.

7
00:00:19,750 --> 00:00:22,790
Now we can make use 
of that Intent Service

8
00:00:22,790 --> 00:00:24,960
that Rato mentioned earlier.

9
00:00:24,960 --> 00:00:28,230
With just a few small changes, 
we can get our code working

10
00:00:28,230 --> 00:00:30,060
with an Intent Service,

11
00:00:30,060 --> 00:00:32,659
instead of with our
FetchWeatherTask.

12
00:00:32,659 --> 00:00:37,660
To start, let's create
a new package for our service.

13
00:00:37,660 --> 00:00:41,243
Then we'll add a new Java class
in that package

14
00:00:41,243 --> 00:00:44,066
that extends Intents Service.

15
00:00:44,066 --> 00:00:47,570
We hit Ctrl+I to once again, 
add the required abstract method.

16
00:00:48,600 --> 00:00:51,780
And Ctrl+O in order to add the constructor.

17
00:00:51,780 --> 00:00:54,690
Since the service is 
an Android component,

18
00:00:54,690 --> 00:00:58,583
you guessed it, it needs
to be in the manifest.

19
00:00:58,583 --> 00:01:01,125
Okay, let's do this.

20
00:01:01,125 --> 00:01:04,316
Let's finish implementing
the SunshineService

21
00:01:04,316 --> 00:01:07,061
and call it from ForecastFragment.

22
00:01:07,061 --> 00:01:09,304
You can start a service 
using an Intent

23
00:01:09,304 --> 00:01:11,697
with the StartService method.

24
00:01:11,697 --> 00:01:14,830
It will help to remember 
how to use explicit intents.
