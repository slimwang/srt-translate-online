1
00:00:00,320 --> 00:00:02,910
So to wrap things up from
the perspective of coco values,

2
00:00:02,910 --> 00:00:03,990
we learned a couple things.

3
00:00:03,990 --> 00:00:06,890
We learned that they're efficiently
computable because we can do it

4
00:00:06,890 --> 00:00:10,640
with a simple maximization and
a linear program added together.

5
00:00:10,640 --> 00:00:14,580
What we end up getting is a behavior
that's utility maximizing for

6
00:00:14,580 --> 00:00:17,990
the two players and
then they just split it up afterwards.

7
00:00:17,990 --> 00:00:21,021
You can think of it as actually
decomposing a game into a sum of

8
00:00:21,021 --> 00:00:23,517
two games,
one of which is purely cooperative and

9
00:00:23,517 --> 00:00:25,193
one is just purely competitive.

10
00:00:25,193 --> 00:00:27,440
We're just kind of shifting
around the utilities.

11
00:00:27,440 --> 00:00:33,190
But we do it in a way that leaves us
with two really nice games to work with.

12
00:00:33,190 --> 00:00:34,610
The result of that is unique.

13
00:00:34,610 --> 00:00:38,540
There is a unique coco value for
each of the players.

14
00:00:38,540 --> 00:00:41,860
Unlike a Nash where there can be
multiple different possible values

15
00:00:41,860 --> 00:00:44,530
depending on which Nash you pick,
there's just the one coco value.

16
00:00:44,530 --> 00:00:45,870
It's very convenient.

17
00:00:45,870 --> 00:00:48,140
>> That is convenient,
because that means there's an answer.

18
00:00:48,140 --> 00:00:49,600
>> There is an answer, yeah.

19
00:00:49,600 --> 00:00:52,880
We've discovered that, in fact, you can
generalize this notion, not just to

20
00:00:52,880 --> 00:00:56,770
matrix games like we talked about, but
actually to stochastic games in general.

21
00:00:56,770 --> 00:00:59,106
And we get an algorithm
that we called coco-Q.

22
00:00:59,106 --> 00:01:03,340
Coco-Q is a Q learning like
algorithm that uses coco values

23
00:01:03,340 --> 00:01:06,890
to learn a strategy in
a stochastic game where

24
00:01:06,890 --> 00:01:09,430
they actually can make little
side payments after each move.

25
00:01:09,430 --> 00:01:11,990
So the two players move, and
then they divvy some stuff up.

26
00:01:11,990 --> 00:01:14,280
And then they move again, and
they divvy some stuff up.

27
00:01:14,280 --> 00:01:18,720
And those side payments actually end
up being sensitive to issues like,

28
00:01:19,800 --> 00:01:21,120
we just got really unlucky.

29
00:01:21,120 --> 00:01:23,830
Or I'm about to take an action
which is very risky.

30
00:01:23,830 --> 00:01:26,750
And so, you're going to have to
pay me to take that action and

31
00:01:26,750 --> 00:01:30,690
the payments have this nice
interpretations in terms of kind of

32
00:01:30,690 --> 00:01:34,490
paying people for taking risky actions
and giving them the benefits of things.

33
00:01:34,490 --> 00:01:37,550
It's neat because this actually
converges, this Q learning algorithm

34
00:01:37,550 --> 00:01:41,930
converges inspite of the fact that the
coco operator is not a non expansion.

35
00:01:41,930 --> 00:01:45,710
We've talked about non expansions in
the context of generalized Q learning.

36
00:01:45,710 --> 00:01:48,670
This is a case where that
analysis actually fails.

37
00:01:48,670 --> 00:01:52,106
But there's a different analysis that
you can use to show that the algorithm

38
00:01:52,106 --> 00:01:54,693
actually converges so
that was surprising to me anyway.

39
00:01:54,693 --> 00:01:56,705
I spent a lot of time worrying about
non expansions thinking that they were

40
00:01:56,705 --> 00:01:58,434
the answer to everything and
they're going to do everything.

41
00:01:58,434 --> 00:02:00,124
>> They are the answers to
everything except things that are-

42
00:02:00,124 --> 00:02:01,389
>> Just not this thing.

43
00:02:01,389 --> 00:02:02,362
>> Cuckoo for Cocoa Puffs.

44
00:02:02,362 --> 00:02:05,247
>> [LAUGH] One thing that's worth
pointing out is that what you get at

45
00:02:05,247 --> 00:02:08,723
the end of this is not necessarily in
equilibrium, which is to say once we've

46
00:02:08,723 --> 00:02:11,950
computed what the cocoa values,
are I might not want to play that game.

47
00:02:11,950 --> 00:02:13,460
I might not want to do the side payment.

48
00:02:13,460 --> 00:02:16,371
I would rather get my value in a
national liberal or something like that.

49
00:02:16,371 --> 00:02:18,440
And so that means that to
really make this work,

50
00:02:18,440 --> 00:02:20,530
this side payment mechanism
has to be binding.

51
00:02:20,530 --> 00:02:23,180
They have to agree in advance that,
whatever happens,

52
00:02:23,180 --> 00:02:26,450
we're going to do what the coco
value says we should do.

53
00:02:26,450 --> 00:02:27,740
And it's somewhat beneficial,

54
00:02:27,740 --> 00:02:31,060
but making this binding agreement
in general is not beneficial.

55
00:02:31,060 --> 00:02:34,380
It could be for some players,
they'd rather just not do it, so

56
00:02:34,380 --> 00:02:38,440
it's not equilibrium in the same
sense as like Nash and correlated.

57
00:02:38,440 --> 00:02:39,830
>> So we're going to have
to hire police officers?

58
00:02:39,830 --> 00:02:44,000
>> We're going to have to hire police
officers to divvy up our bananas.

59
00:02:44,000 --> 00:02:45,330
>> Okay, so just like the real life.

60
00:02:45,330 --> 00:02:48,150
>> So thank you for
letting me have a chance to come in and

61
00:02:48,150 --> 00:02:51,520
discuss cocoa values which otherwise,
we would not and got into.

62
00:02:51,520 --> 00:02:55,194
>> Well, I guess also should I learn
from this the basically we should always

63
00:02:55,194 --> 00:02:56,448
be doing cocoa or cocoa?

64
00:02:56,448 --> 00:03:00,151
Yeah, we should always be doing cocoa
and hiring police officers things,

65
00:03:00,151 --> 00:03:01,480
make things binding.

66
00:03:01,480 --> 00:03:02,750
>> Well, I don't know.

67
00:03:02,750 --> 00:03:07,530
I mean in general, you tend to
get a higher sum of values from

68
00:03:07,530 --> 00:03:10,650
the coco value so paying the police
officers probably makes sense.

69
00:03:10,650 --> 00:03:12,553
So it might be worth hiring them.

70
00:03:12,553 --> 00:03:14,797
For specific games,
it's not necessarily true and

71
00:03:14,797 --> 00:03:17,040
it doesn't necessarily kind of fit.

72
00:03:17,040 --> 00:03:20,760
Another problem with the notion
of coco values is that

73
00:03:20,760 --> 00:03:23,810
it doesn't really generalize if
you've got more than two players.

74
00:03:23,810 --> 00:03:26,157
So this is specific to
the two player setting.

75
00:03:26,157 --> 00:03:29,654
If you have three players, you can't
split it into, I don't know, three

76
00:03:29,654 --> 00:03:32,986
matrices one of which is cooperative,
another which is competitive,

77
00:03:32,986 --> 00:03:35,446
and the other which is I don't know,
combustible.

78
00:03:35,446 --> 00:03:40,320
>> [LAUGH] Well,
what if you did all pair-wise games?

79
00:03:40,320 --> 00:03:41,552
You'd have to get extremely lucky.

80
00:03:41,552 --> 00:03:44,940
>> It doesn't seem like there's a
natural extension of this that works for

81
00:03:44,940 --> 00:03:46,060
more than two players.

82
00:03:46,060 --> 00:03:49,930
I mean it's an open problem and so
no one's shown that you can't do it.

83
00:03:49,930 --> 00:03:52,090
So that could be a homework problem.

84
00:03:52,090 --> 00:03:54,358
>> Yeah, that's cool and
then anyone who get, PhDs for everyone.

85
00:03:54,358 --> 00:03:58,889
>> [LAUGH] PhDs for everyone.

86
00:03:58,889 --> 00:03:59,597
Wouldn't that be nice?

87
00:03:59,597 --> 00:04:00,550
>> That would be nice.

88
00:04:00,550 --> 00:04:02,509
Okay so
we've gotten through coco values.

89
00:04:02,509 --> 00:04:04,939
It's good, so we work together and

90
00:04:04,939 --> 00:04:09,160
now we've done two solution
concepts in some detail.

91
00:04:09,160 --> 00:04:10,240
>> Yeah.
>> Everybody wins.

92
00:04:10,240 --> 00:04:11,109
>> That's the thing and

93
00:04:11,109 --> 00:04:14,260
now we can actually do side payments
to kind of deviate afterwords.

94
00:04:14,260 --> 00:04:15,690
>> So what are you going to give me?

95
00:04:15,690 --> 00:04:18,813
>> I'm going to give you
back the pen [SOUND] so

96
00:04:18,813 --> 00:04:23,554
that you can wrap up the section
three one [LAUGH] of game theory.

97
00:04:23,554 --> 00:04:24,360
>> Sounds good.
