1
00:00:00,500 --> 00:00:01,440
So at this point,

2
00:00:01,440 --> 00:00:04,560
you've seen information about sessions
on the movie database website, and

3
00:00:04,560 --> 00:00:08,250
heard about the movie database
authorization flow from Travis himself.

4
00:00:08,250 --> 00:00:11,930
But once we start writing code for this,
things can get a little complicated.

5
00:00:11,930 --> 00:00:14,250
So to get a good idea of
the organization of all of this and

6
00:00:14,250 --> 00:00:15,690
how it will work in the app,

7
00:00:15,690 --> 00:00:18,970
let's look at a flow chart that
describes how a user will log in.

8
00:00:18,970 --> 00:00:21,410
The first thing we'll need to
do is get a request token.

9
00:00:21,410 --> 00:00:24,210
Once we have that we're
going to login with the API and

10
00:00:24,210 --> 00:00:26,140
then we can create a session ID.

11
00:00:26,140 --> 00:00:27,630
Remember for the movie database,

12
00:00:27,630 --> 00:00:31,200
we need a session to make any
requests that write or update data.

13
00:00:31,200 --> 00:00:35,090
Finally, we'll grab the user ID and
we can then move on to the next view.

14
00:00:35,090 --> 00:00:38,160
Now we can see from the arrows that
these steps need to happen in a specific

15
00:00:38,160 --> 00:00:40,880
order and we wouldn't want to move
onto the new step before our current

16
00:00:40,880 --> 00:00:42,140
step is finished.

17
00:00:42,140 --> 00:00:43,730
It's for that reason that, in our code,

18
00:00:43,730 --> 00:00:46,130
we're going to keep these
steps chained together,

19
00:00:46,130 --> 00:00:49,970
meaning we'll move onto the next one
only after our current step completes.

20
00:00:49,970 --> 00:00:52,860
This means checking each time that
we have the value we're expecting

21
00:00:52,860 --> 00:00:55,950
when a step completes, and printing or
displaying an error if we don't.
