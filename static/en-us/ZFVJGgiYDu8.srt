1
00:00:00,000 --> 00:00:05,000
Now we can look at this as a decision problem

2
00:00:05,000 --> 00:00:09,000
and we'll call it the long and simple path decision problem and it goes like this.

3
00:00:09,000 --> 00:00:14,000
Given a graph G and a link L and two nodes U and V,

4
00:00:14,000 --> 00:00:19,000
is there a simple path from U to V consisting of L or more nodes?

5
00:00:19,000 --> 00:00:23,000
We're not looking for a short path, we're actually looking for a long and simple path,

6
00:00:23,000 --> 00:00:28,000
and we're going to imagine and I'm saying imagine because I actually don't know

7
00:00:28,000 --> 00:00:31,000
whether this is true or not, but we're going to imagine that there is an algorithm

8
00:00:31,000 --> 00:00:35,000
that solves this decision problem, yes or no correctly,

9
00:00:35,000 --> 00:00:40,000
and its running time is n to the k for some constant k like two.

10
00:00:40,000 --> 00:00:52,000
Θ(n²) or 10 like Θ(n¹⁰) or a thousand Θ(n¹⁰⁰⁰) but k is not a function of n.

11
00:00:52,000 --> 00:00:56,000
It can't be an exponential or it's going to be bounded by some polynomial.

12
00:00:56,000 --> 00:01:01,000
It could be a nasty polynomial, but let's just imagine that it's bounded by a polynomial.

13
00:01:01,000 --> 00:01:07,000
Here's a different problem. Find a simple path from U to V in G consisting of L or more nodes.

14
00:01:07,000 --> 00:01:11,000
This one is just asking me yes no question. This one is actually asking for the path.

15
00:01:11,000 --> 00:01:18,000
And we'd like to know is there a polynomial time solution to this problem, we'll call it problem B.

16
00:01:18,000 --> 00:01:21,000
Assuming that there is a polynomial time solution for problem A.

17
00:01:21,000 --> 00:01:27,000
We can use the solution of problem A as subroutine in solving problem B. All right.

18
00:01:27,000 --> 00:01:29,000
Here's how we like you to do it.

19
00:01:29,000 --> 00:01:37,000
I want you to write a Python command called long and simple path that takes a graph G

20
00:01:37,000 --> 00:01:41,000
and node U, node V, and the link L

21
00:01:41,000 --> 00:01:48,000
and it's allowed to call long and simple decision with whatever it wants.

22
00:01:48,000 --> 00:01:52,000
As many time as it wants as long as it's a polynomial in the number of

23
00:01:52,000 --> 00:01:58,000
nodes and edges in the graph, and ultimately return the path that there is one.

24
00:01:58,000 --> 00:02:01,000
Here's a little skeleton to get you started.

25
00:02:01,000 --> 00:02:09,000
We call long and simple decision G, U, V, L and if it's the case that the decision problems says

26
00:02:09,000 --> 00:02:15,000
or the solution to this decision problem says there is no path of link L or greater from U, V, and G

27
00:02:15,000 --> 00:02:18,000
then you don't have to do anything, just return false.

28
00:02:18,000 --> 00:02:25,000
But otherwise, you actually need to build and return the path as a list of nodes

29
00:02:25,000 --> 00:02:28,000
and the first element, at least should be U and the last element should be V

30
00:02:28,000 --> 00:02:32,000
and all the steps in between should be actual edges

31
00:02:32,000 --> 00:02:38,000
and the total number of nodes on that path needs to be at least L.
