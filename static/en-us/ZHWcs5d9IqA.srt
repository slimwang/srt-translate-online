1
00:00:00,330 --> 00:00:03,100
Let's look at how we can use
HTML headings effectively

2
00:00:03,100 --> 00:00:05,820
to recreate the experience
we saw in Victor's video.

3
00:00:06,950 --> 00:00:10,350
First I'd like to reiterate Rob's
point that DOM order matters,

4
00:00:10,350 --> 00:00:13,340
which is also item 1.3.2
on the webbing checklist.

5
00:00:14,680 --> 00:00:17,850
Rob showed how it matters for
focus order, but it also matters for

6
00:00:17,850 --> 00:00:20,300
the order read by the screen reader.

7
00:00:20,300 --> 00:00:23,360
In Victor's demo, you might have
noticed how the heading list

8
00:00:23,360 --> 00:00:26,210
followed the DOM order and
not the visual order of the page.

9
00:00:27,270 --> 00:00:29,470
That is actually true for
screen readers in general.

10
00:00:30,820 --> 00:00:33,360
Since the screen reader,
like any assistive technology,

11
00:00:33,360 --> 00:00:35,650
is interacting with
the accessibility tree,

12
00:00:35,650 --> 00:00:39,230
which is based directly on the DOM tree,
the order a screen reader is going to

13
00:00:39,230 --> 00:00:43,180
perceive will be directly
based on the DOM order.

14
00:00:43,180 --> 00:00:46,080
Think of the page as perceived
by desktop screen reader uses at

15
00:00:46,080 --> 00:00:48,520
almost losing its second dimension.

16
00:00:48,520 --> 00:00:52,020
It's all serialized into
a single stream of content.

17
00:00:53,370 --> 00:00:56,200
I can use a little snippet of
JavaScript which you can copy from

18
00:00:56,200 --> 00:00:59,980
the instructor notes to list out
the headings in the console.

19
00:00:59,980 --> 00:01:02,900
I can use a little snippet of
JavaScript, which you can copy from

20
00:01:02,900 --> 00:01:07,160
the instructor notes,
to list out the headings in the console.

21
00:01:07,160 --> 00:01:11,300
We have one H1 in this list,
telling us the page's main topic.

22
00:01:11,300 --> 00:01:13,960
This is also echoed in
the page's title in the header.

23
00:01:13,960 --> 00:01:18,360
So when switching tabs or windows,
users know what page they're on.

24
00:01:18,360 --> 00:01:20,810
Then we have a series of H2s.

25
00:01:20,810 --> 00:01:23,570
Which include both page
structure things like contents,

26
00:01:23,570 --> 00:01:25,930
as well as article sections.

27
00:01:25,930 --> 00:01:30,407
Between some of those H2's, we also
have H3's indicating subsections.

28
00:01:30,407 --> 00:01:33,780
Some of these are in
the article contents, but

29
00:01:33,780 --> 00:01:36,720
some are also in
the surrounding page contents.

30
00:01:36,720 --> 00:01:42,080
Within navigation menu there are things
like personal tools and languages.

31
00:01:42,080 --> 00:01:46,090
This page only goes down to H3, but we
do have built in heading tags going all

32
00:01:46,090 --> 00:01:49,490
the way down to H6 for
very complex or long documents.

33
00:01:50,580 --> 00:01:53,546
Using headings to lay out page structure
like this is mentioned in several

34
00:01:53,546 --> 00:01:55,948
web aim checklist items.

35
00:01:55,948 --> 00:02:00,800
2.4.10 states individual sections of
content are designated using headings

36
00:02:00,800 --> 00:02:01,710
where appropriate.

37
00:02:01,710 --> 00:02:07,025
1.3.1 mentions semantic markup is
used to designate headings age one.

38
00:02:07,025 --> 00:02:11,400
2.4.1 mentions heading structure
as a sufficient technique for

39
00:02:11,400 --> 00:02:13,430
bypassing blocks of content.

40
00:02:13,430 --> 00:02:17,960
And 2.4.6 discusses some details for
writing useful headings.

41
00:02:17,960 --> 00:02:21,210
If you are really watching closely,
Ella, you might have noticed

42
00:02:21,210 --> 00:02:23,460
that not all of these headings
are visible on the screen.

43
00:02:24,870 --> 00:02:28,650
Wikipedia is using a technique where
they place some headings off screen to

44
00:02:28,650 --> 00:02:32,030
make them visible only to screen reader
uses and other assistive technology.

45
00:02:33,290 --> 00:02:36,470
For complex applications, this can be
a good way to accommodate headings when

46
00:02:36,470 --> 00:02:41,250
the visual design doesn't require or
even have room for a visible heading.

47
00:02:41,250 --> 00:02:44,570
However, it's important not to go
overboard with this technique.

48
00:02:44,570 --> 00:02:48,530
Remember that assistive technology users
may well be able to see the screen.

49
00:02:48,530 --> 00:02:52,250
So going too far down the path of
creating screen reader only content,

50
00:02:52,250 --> 00:02:55,850
can actually create a worse
user experience for some users.

51
00:02:55,850 --> 00:02:58,670
Besides which, it can create
a maintenance headache when it comes to

52
00:02:58,670 --> 00:03:00,020
things like internationalization.
