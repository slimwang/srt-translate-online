1
00:00:00,360 --> 00:00:05,580
Another thing we can actually now look
at is a four dimensional light field.

2
00:00:05,580 --> 00:00:09,096
Same equation as before there
are five parameters in there.

3
00:00:09,096 --> 00:00:12,964
But we want to actually use that to
reduce the dimensionality by one,

4
00:00:12,964 --> 00:00:15,699
so we can actually now pay
specific attention and

5
00:00:15,699 --> 00:00:18,840
create controllable
types of light fields.

6
00:00:18,840 --> 00:00:21,260
In this case,
it's a four dimensional light field.

7
00:00:21,260 --> 00:00:24,978
What we really want to do is
create a bounding box and

8
00:00:24,978 --> 00:00:29,565
suggest that basically a space
of all lines in 2D space is 4D.

9
00:00:29,565 --> 00:00:31,260
Let me show you what
that means in a bit.

10
00:00:31,260 --> 00:00:35,575
But in this one, the basic assumption
is, we will not be able to represent

11
00:00:35,575 --> 00:00:39,940
occluding objects with different
viewpoints and directions.

12
00:00:39,940 --> 00:00:43,800
The kind of concept that exists here
is basically something similar to

13
00:00:43,800 --> 00:00:45,184
a globe that you may have seen.

14
00:00:45,184 --> 00:00:49,241
Usually the plenoptic function, or
light field, is five dimensional.

15
00:00:49,241 --> 00:00:52,710
But in this case, we can basically
kind of start seeing is that,

16
00:00:52,710 --> 00:00:57,740
if this was my world here, anything
outside of the scene, outside the sphere

17
00:00:57,740 --> 00:01:02,630
of the snow globe here, light does
not actually get occluded by objects.

18
00:01:02,630 --> 00:01:06,050
And therefore, it could be
represented as a 4D light field.

19
00:01:06,050 --> 00:01:10,945
The best way to represent this is by
creating these two different regions,

20
00:01:10,945 --> 00:01:14,466
two different parameterizations,
u and v, and s and t.

21
00:01:14,466 --> 00:01:18,150
And that will allow me to create a four
dimensional light field like this.

22
00:01:18,150 --> 00:01:22,700
To achieve this, basically, what we talk
about is having two different planes.

23
00:01:22,700 --> 00:01:26,440
Each plane has coordinate axes u and
v, and s and t.

24
00:01:26,440 --> 00:01:29,610
Those are my four parameters that
give me this whole parameterization

25
00:01:29,610 --> 00:01:30,910
in four dimensions.

26
00:01:30,910 --> 00:01:35,780
In essence, you can imagine this to be
basically a beam or a slab of light and

27
00:01:35,780 --> 00:01:38,020
everything is basically
contained within it.

28
00:01:38,020 --> 00:01:42,080
So light really flows from
the uv plane to the st plane.

29
00:01:42,080 --> 00:01:44,240
I'll show you examples of that in a bit.

30
00:01:44,240 --> 00:01:46,646
Just to help us with
our parameterization,

31
00:01:46,646 --> 00:01:49,376
we can always kind of say
is that parameters both for

32
00:01:49,376 --> 00:01:52,580
uv space and the st space
are just simply between 0 and 1.

33
00:01:52,580 --> 00:01:55,430
This will allow us to
create an array of images

34
00:01:55,430 --> 00:01:59,960
that we can actually now use to
generate a light field from.

35
00:01:59,960 --> 00:02:03,760
To help us understand this, let's kind
of create this parameterization uv at

36
00:02:03,760 --> 00:02:07,145
the camera plane and
st at the focal plane.

37
00:02:07,145 --> 00:02:08,769
Two different parameterization,

38
00:02:08,769 --> 00:02:12,030
different discretizations would
exist for each one of them.

39
00:02:12,030 --> 00:02:12,840
Now at any point,

40
00:02:12,840 --> 00:02:16,790
I can actually now have a ray of
light come out from this point here.

41
00:02:16,790 --> 00:02:20,100
So now I can put a pin hole here, and

42
00:02:20,100 --> 00:02:22,090
that would capture this
whole scene from this point.

43
00:02:23,100 --> 00:02:24,890
I can, of course,
have a pin hole at this point,

44
00:02:24,890 --> 00:02:26,540
which also captures this whole thing.

45
00:02:26,540 --> 00:02:28,589
There could be different
types of information here.

46
00:02:28,589 --> 00:02:32,934
And, of course, using this we
could generate a variety of

47
00:02:32,934 --> 00:02:36,228
different arrays of
images at the uv plane.

48
00:02:36,228 --> 00:02:38,982
And, of course,
based on which viewpoint I look at,

49
00:02:38,982 --> 00:02:41,630
I would have a different
field of view of the scene.
