1
00:00:00,170 --> 00:00:04,724
So far all of the types of used are built into Python. If we wanted to find new

2
00:00:04,724 --> 00:00:08,420
ways of working with data and they'll find new operations, we need to define our

3
00:00:08,420 --> 00:00:12,416
own types. That's what we'll learn next and the way to define your own type in

4
00:00:12,416 --> 00:00:16,120
Python is to make a class. Lets recap what we were doing with our web search

5
00:00:16,120 --> 00:00:19,172
engine. We have the crawler module and the crawl.web procedures that would

6
00:00:19,172 --> 00:00:22,227
output two objects, that record that everything that we've learned from a web

7
00:00:22,227 --> 00:00:26,640
crawl. The first is the index, that's the mapping between keywords and the list

8
00:00:26,640 --> 00:00:30,950
of URLs that appear and we use dict, object to record that. And the second was

9
00:00:30,950 --> 00:00:34,962
the dictionary object that maps URLs to ranks. This is what we used to record

10
00:00:34,962 --> 00:00:38,732
the pageranks and then we need to keep track of both of those objects, pass them

11
00:00:38,732 --> 00:00:42,606
into lucky-search in the right way to get the right output. What we'd like to do

12
00:00:42,606 --> 00:00:46,282
by defining our own type is to encapsulate all this into one object. So, one of

13
00:00:46,282 --> 00:00:50,522
the key things that defining our own types gives us it's called encapsulation.

14
00:00:50,523 --> 00:00:55,416
And encapsulation means we can group many things into one object, provide a nice

15
00:00:55,416 --> 00:00:59,942
clean interface, so the only thing the crawler needs to produce is this one

16
00:00:59,942 --> 00:01:03,565
object. And that's the only thing search needs to work on. And so, our goal is

17
00:01:03,565 --> 00:01:08,290
to create a new module, and by using encapsulation instead of having to deal

18
00:01:08,290 --> 00:01:13,381
with all that complexity. We'll have one output which is a WebCorpus output and

19
00:01:13,381 --> 00:01:17,762
that's what's used in search. And, by using Abstraction, we'll hide all the

20
00:01:17,762 --> 00:01:22,128
details of how the internals of the WebCorpus are represented. All search needs

21
00:01:22,128 --> 00:01:25,023
to understand is how to use it to respond to queries.
