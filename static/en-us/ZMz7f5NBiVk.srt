1
00:00:00,280 --> 00:00:05,268
Let's look at the solution for what
happens in our directory MOESI quiz.

2
00:00:05,268 --> 00:00:09,640
When Core 0 issues a read it
sends a request to the directory.

3
00:00:09,640 --> 00:00:14,790
The directory doesn't forward or get any
responses, it just sends a response.

4
00:00:14,790 --> 00:00:17,420
When there is a write, the Core 0

5
00:00:17,420 --> 00:00:22,790
gets this block A in exclusive state
because MOESI has such a state.

6
00:00:22,790 --> 00:00:25,850
Core 0 can do the right
without telling anybody.

7
00:00:25,850 --> 00:00:29,040
So there is no request
sent to the directory, and

8
00:00:29,040 --> 00:00:31,950
then there is no direct
activity as a result of that.

9
00:00:31,950 --> 00:00:36,400
When Core 1 reads A,
it sends a request to the directory.

10
00:00:36,400 --> 00:00:40,820
The directory will now
send a request to the only

11
00:00:40,820 --> 00:00:44,350
core that is involved in sharing
this block, which is Core 0.

12
00:00:44,350 --> 00:00:46,270
So it sends one message.

13
00:00:46,270 --> 00:00:48,340
Core 0 responds with the data and

14
00:00:48,340 --> 00:00:51,750
acknowledges that now it's
okay to read this block.

15
00:00:51,750 --> 00:00:57,330
And when the directory gets this
message, it sends to Core 1 a response.

16
00:00:57,330 --> 00:00:59,410
Now, Core 1 can read the block.

17
00:00:59,410 --> 00:01:02,650
So now we have Core 1 has
the block in the shared state.

18
00:01:02,650 --> 00:01:05,850
Core 0 is now in the own state,

19
00:01:05,850 --> 00:01:09,570
because it downgraded itself
from modified to owned.

20
00:01:09,570 --> 00:01:12,500
Core 2 now tries to read.

21
00:01:12,500 --> 00:01:14,520
Sends the request to the directory.

22
00:01:14,520 --> 00:01:15,660
The directory,

23
00:01:15,660 --> 00:01:19,350
if it has only the state that we
have seen on the previous segments.

24
00:01:19,350 --> 00:01:22,480
Does not know who is
the owner of this block, but

25
00:01:22,480 --> 00:01:25,660
it doesn't need to send anything,
so it gets to memory.

26
00:01:27,240 --> 00:01:31,370
The directory here doesn't
send any messages forwarded,

27
00:01:31,370 --> 00:01:34,970
because it no longer sees
the block in the directory state.

28
00:01:34,970 --> 00:01:38,730
So it doesn't forward anything,
it doesn't get responses,

29
00:01:38,730 --> 00:01:42,460
it just sends a response back to Core 2.

30
00:01:42,460 --> 00:01:46,470
Note that here we're unable to
benefit from the own state.

31
00:01:46,470 --> 00:01:51,980
Simply because the directory doesn't
know to ask Core 0 to provide the data.

32
00:01:51,980 --> 00:01:54,450
With a fancier directory,
we would be able do that.

33
00:01:54,450 --> 00:01:58,630
But not with a directory that only
tracks presence and dirtiness.

34
00:01:58,630 --> 00:02:01,840
So now C2 also has the block
in the shared state.

35
00:02:01,840 --> 00:02:06,080
The same thing happens for
C3's request, there is a request,

36
00:02:06,080 --> 00:02:09,180
the directory doesn't forward anything,
it just sends a response,

37
00:02:09,180 --> 00:02:14,900
because it has to read the data from
memory, and now, Core 0 writes.

38
00:02:14,900 --> 00:02:17,430
Because it's in the own state, it is not

39
00:02:17,430 --> 00:02:22,230
able to write without notifying the
directory, so it notifies the directory.

40
00:02:22,230 --> 00:02:27,010
This write is an invalidation
request because we have the data.

41
00:02:27,010 --> 00:02:30,250
But we need to send invalidations
to these three processors, so

42
00:02:30,250 --> 00:02:36,390
that the directory knows that Cores 1,
2, and 3, their caches have the block.

43
00:02:36,390 --> 00:02:42,480
So it sends three messages
to these three destinations.

44
00:02:42,480 --> 00:02:44,670
It gets three responses
from each of them.

45
00:02:44,670 --> 00:02:48,440
Once they have all acknowledged
that they have invalidated,

46
00:02:48,440 --> 00:02:53,210
it sends a response back to Core 0,
and now it's able to write.

47
00:02:53,210 --> 00:02:57,950
So over all we had five requests
sent to the directory and

48
00:02:57,950 --> 00:03:02,170
that also means that there are five
responses from the directory.

49
00:03:02,170 --> 00:03:05,170
Because every request
will have a response.

50
00:03:05,170 --> 00:03:08,650
The directory has
forwarded four messages.

51
00:03:08,650 --> 00:03:13,670
Note that this is not like four out
of five, got messages forwarding.

52
00:03:13,670 --> 00:03:17,800
In fact, one of these was for
one message and the other three were for

53
00:03:17,800 --> 00:03:19,270
the second message.

54
00:03:19,270 --> 00:03:21,520
And then we got four
responses to these messages.

55
00:03:21,520 --> 00:03:26,010
Again, every message needs to get
a response because the directory cannot

56
00:03:26,010 --> 00:03:30,320
acknowledge and allow a core to
write until all of the sharers have

57
00:03:30,320 --> 00:03:33,230
indicated that they have invalidated
their state in the cache.
