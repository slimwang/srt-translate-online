1
00:00:00,370 --> 00:00:02,090
You think it's perfect.

2
00:00:02,090 --> 00:00:02,910
Of course, not.

3
00:00:02,910 --> 00:00:04,720
There are some problems.

4
00:00:04,720 --> 00:00:08,700
One problem is, remember I told you
that the way you do the dot product,

5
00:00:08,700 --> 00:00:12,710
since these are images, vectors, you can
just line them up and multiply them.

6
00:00:12,710 --> 00:00:13,670
That was the dot product.

7
00:00:13,670 --> 00:00:17,210
That's how you take the dot product of
these two 10,000-dimensional vectors.

8
00:00:17,210 --> 00:00:21,250
That should have made you wonder,
well what happens if it's misaligned?

9
00:00:21,250 --> 00:00:22,800
Right?
The eyes aren't exactly in

10
00:00:22,800 --> 00:00:24,220
the right place.

11
00:00:24,220 --> 00:00:26,530
Okay.
The scale is a little bit different.

12
00:00:26,530 --> 00:00:28,365
The answer is,
it doesn't work very well.

13
00:00:28,365 --> 00:00:32,000
All right.
It really requires good alignment

14
00:00:32,000 --> 00:00:32,780
scaling.

15
00:00:32,780 --> 00:00:35,820
Also the background has to be not too,
too terrible.

16
00:00:35,820 --> 00:00:39,220
That can be done but it is a,
a sensitivity of method.

17
00:00:39,220 --> 00:00:40,580
Another cute little story.

18
00:00:40,580 --> 00:00:42,650
At the time they had
these 8,000 faces and

19
00:00:42,650 --> 00:00:46,560
they wanted to put them in a scale,
in a, in a scaled lined up way.

20
00:00:46,560 --> 00:00:49,340
And so, you could imagine trying to
write a computer program that would

21
00:00:49,340 --> 00:00:52,040
sort of find where eyes were,
and then line them up, or

22
00:00:52,040 --> 00:00:53,710
you could pay an undergraduate.

23
00:00:53,710 --> 00:00:58,050
So, they paid an undergraduate
to click on the pupils of

24
00:00:58,050 --> 00:01:01,950
the eyes of each picture
of the 8,000 pictures.

25
00:01:01,950 --> 00:01:03,786
I think his first name was Wasi,
I cant remember.

26
00:01:03,786 --> 00:01:05,550
If you're out there, my apologies.

27
00:01:05,550 --> 00:01:09,015
And what was great as Sandy will tell
you is as a student who's working

28
00:01:09,015 --> 00:01:12,419
on these 8,000 pictures,
he came back and said, I have a new,

29
00:01:12,419 --> 00:01:15,146
new appreciation for
what order of magnitude means.

30
00:01:15,146 --> 00:01:17,811
Because the difference
between doing 80 pictures and

31
00:01:17,811 --> 00:01:20,960
8,000 pictures as you can
imagine took a long time.

32
00:01:20,960 --> 00:01:22,590
But you basically you
have to line this up.

33
00:01:22,590 --> 00:01:27,322
Now, You can use methods to
automatically align the eyes its scale,

34
00:01:27,322 --> 00:01:29,690
et cetera, and
then that kind of thing will work.

35
00:01:29,690 --> 00:01:33,920
Another limitation that is sort of
of a more theoretical basis for

36
00:01:33,920 --> 00:01:36,420
PCA in general,
Principle Component Analysis.

37
00:01:36,420 --> 00:01:40,810
Typically the way you do it is you take
your entire population, you find the,

38
00:01:40,810 --> 00:01:44,010
the direction of variants
over the whole population.

39
00:01:44,010 --> 00:01:47,830
You project down along
those dimensions and

40
00:01:47,830 --> 00:01:51,490
then you try to discriminate
between the different classes.

41
00:01:51,490 --> 00:01:56,660
In this data here, we have blue
points and we have red points.

42
00:01:56,660 --> 00:02:02,180
But, if the first thing you did
was find the axis of elongation.

43
00:02:02,180 --> 00:02:02,760
Okay.

44
00:02:02,760 --> 00:02:06,560
The axis along which there
is the most variation.

45
00:02:06,560 --> 00:02:09,960
All right.
And you projected these points down,

46
00:02:09,960 --> 00:02:14,980
well clearly, you will confuse
the blue points and the red points.

47
00:02:14,980 --> 00:02:15,950
All right.

48
00:02:15,950 --> 00:02:20,180
So as it happens to be that
the way of separating the classes.

49
00:02:20,180 --> 00:02:22,100
Right?
So the direction along which you want to

50
00:02:22,100 --> 00:02:27,500
separate the classes is not
the direction along which the,

51
00:02:27,500 --> 00:02:29,860
all the points are distributed.

52
00:02:29,860 --> 00:02:33,980
There is methods in comp,
in pattern recognition Fisher Analysis,

53
00:02:33,980 --> 00:02:37,320
Linear Discriminant Analysis, for
using not just the structure of

54
00:02:37,320 --> 00:02:39,880
the population, but
the structure of the classes.

55
00:02:39,880 --> 00:02:42,830
To determine which way to separate.

56
00:02:42,830 --> 00:02:44,910
We won't talk about them here
because it's kind of an old method.

57
00:02:44,910 --> 00:02:47,950
But it actually talks more about the
discriminative methods that we'll talk

58
00:02:47,950 --> 00:02:50,330
about not next time, but the time after.

59
00:02:50,330 --> 00:02:53,815
The idea is saying that,
well I don't need so much to model the,

60
00:02:53,815 --> 00:02:57,050
the points themselves, because
the points are elongated this way

61
00:02:57,050 --> 00:02:59,970
I need to model the separation
between the points.

62
00:02:59,970 --> 00:03:05,670
So a limitation of PCA is that sometimes
the direction of maximum variance

63
00:03:05,670 --> 00:03:09,680
is not always the best direction to
project on for doing classification.
