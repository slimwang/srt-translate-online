1
00:00:01,010 --> 00:00:04,390
Recall that congestion collapse occurs when packets

2
00:00:04,390 --> 00:00:07,900
consume valuable network resources only to get dropped

3
00:00:07,900 --> 00:00:10,810
later at a downstream link. And although the

4
00:00:10,810 --> 00:00:13,250
network is forwarding packets, none of them actually

5
00:00:13,250 --> 00:00:16,800
reach the destination and no useful communication

6
00:00:16,800 --> 00:00:20,690
occurs, resulting in what we called congestion collapse.

7
00:00:20,690 --> 00:00:23,400
We talked about congestion collapse in an earlier

8
00:00:23,400 --> 00:00:26,050
lesson in this course. Recall that the goal

9
00:00:26,050 --> 00:00:32,890
of TCP is to prevent congestion collapse. In this assignment, you will

10
00:00:32,890 --> 00:00:36,250
become familiar with the Mininet environment,

11
00:00:36,250 --> 00:00:39,640
creating custom network topologies, running programs in

12
00:00:39,640 --> 00:00:42,680
virtual hosts that generate TCP traffic,

13
00:00:42,680 --> 00:00:46,300
and learn about TCP congestion control, an

14
00:00:46,300 --> 00:00:52,000
the TCP sawtooth. You'll also see how bandwidth is shared across multiple flows.

15
00:00:52,000 --> 00:00:56,650
We are going to explore these concepts in a

16
00:00:56,650 --> 00:01:01,460
particular topology that we'll just call a parking lot. So

17
00:01:01,460 --> 00:01:06,090
in the assignment, you'll create the topology below with the following

18
00:01:06,090 --> 00:01:11,470
parameters. N will be the number of receivers connected via

19
00:01:11,470 --> 00:01:17,030
this switch like topology. The data rate of each link will be 100 megabits

20
00:01:17,030 --> 00:01:19,680
per second and the delay of each link

21
00:01:19,680 --> 00:01:22,210
will be one millisecond. Now your going to used

22
00:01:22,210 --> 00:01:27,640
iperf to generate simultaneous TCP flows from each

23
00:01:27,640 --> 00:01:31,500
of the senders. To the lone receiver. Then you

24
00:01:31,500 --> 00:01:34,605
going to plot the time series of throughput versus

25
00:01:34,605 --> 00:01:37,210
time for each of these senders. For each

26
00:01:37,210 --> 00:01:39,740
of your experiments as you vary the value

27
00:01:39,740 --> 00:01:42,680
of N. Your plot should run for 60 seconds.

28
00:01:42,680 --> 00:01:47,520
We have given an initial file called parkinglot.py.

29
00:01:47,520 --> 00:01:50,090
Your goal is to fill in the gaps.

30
00:01:50,090 --> 00:01:53,240
You'll need to both fill in the part

31
00:01:53,240 --> 00:01:56,780
that sets up the topology using a parameter of

32
00:01:56,780 --> 00:01:58,970
N, and then you'll need to fill in

33
00:01:58,970 --> 00:02:01,790
the part that actually generates the TCP flows

34
00:02:01,790 --> 00:02:04,890
between the senders, and the receiver using Iperf,

35
00:02:04,890 --> 00:02:07,620
and monitors the throughput of each of these flows.
