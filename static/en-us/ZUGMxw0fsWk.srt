1
00:00:00,470 --> 00:00:03,054
So lets at the solution to our mesh versus

2
00:00:03,054 --> 00:00:06,170
bus throughput quiz where we had four cores with a

3
00:00:06,170 --> 00:00:10,546
totally random and even distribution of traffic among the cores.

4
00:00:10,546 --> 00:00:13,700
We are given what each core is sending, we are

5
00:00:13,700 --> 00:00:18,763
getting what the bus can do and what the link in a mesh can do, and now we are

6
00:00:18,763 --> 00:00:21,751
asked how much faster is it on the bus versus

7
00:00:21,751 --> 00:00:25,886
on the mesh. Our bus cannot sustain the 40 million

8
00:00:25,886 --> 00:00:29,166
messages per second, that the cores are trying

9
00:00:29,166 --> 00:00:31,663
to give it. So the cores are really

10
00:00:31,663 --> 00:00:34,501
going to slow down to half of their speed,

11
00:00:34,501 --> 00:00:37,769
so that the bus bandwidth demand matches what

12
00:00:37,769 --> 00:00:43,195
it can provide. So on the bus, we get 2x the execution time that each core

13
00:00:43,195 --> 00:00:46,940
is capable of providing. On the mesh, we

14
00:00:46,940 --> 00:00:50,750
can support 20 million messages per second per link.

15
00:00:50,750 --> 00:00:53,120
So now the question is, do our links get

16
00:00:53,120 --> 00:00:57,390
saturated? So let's see what we get on a

17
00:00:57,390 --> 00:01:00,120
mesh like this in terms of traffic. Each core

18
00:01:00,120 --> 00:01:03,960
is generating 10 million messages, 3.3 million are going

19
00:01:03,960 --> 00:01:06,732
to each other core. So of the 10 million

20
00:01:06,732 --> 00:01:09,692
messages sent here, one third are going to this

21
00:01:09,692 --> 00:01:12,800
core, one third are going through this link, and

22
00:01:12,800 --> 00:01:16,000
then one third are going here. Let's say that one

23
00:01:16,000 --> 00:01:18,990
sixth go this way, one sixth go this way. So

24
00:01:18,990 --> 00:01:21,610
this link will be used for one sixth of the messages

25
00:01:21,610 --> 00:01:24,890
sent by this core. And this one for another one sixth.

26
00:01:24,890 --> 00:01:27,460
And then we add one sixth to each of these, which

27
00:01:27,460 --> 00:01:30,690
brings us to one half of 10 million messages. So now

28
00:01:30,690 --> 00:01:34,070
we are done with this core. What happens from this core?

29
00:01:34,070 --> 00:01:37,860
Same thing. This link gets one half of the messages. One

30
00:01:37,860 --> 00:01:41,304
third are going here. One sixth are going here. So this

31
00:01:41,304 --> 00:01:45,063
link suffers one half of this traffic again. Now

32
00:01:45,063 --> 00:01:48,248
this link gets one half of the traffic from

33
00:01:48,248 --> 00:01:51,433
this core and these two links get one sixth

34
00:01:51,433 --> 00:01:54,663
each. And now we're done with this core. Now what

35
00:01:54,663 --> 00:01:57,354
happens when this core is sending, one half of

36
00:01:57,354 --> 00:02:00,600
the message go this way, one half go this way.

37
00:02:00,600 --> 00:02:03,156
One sixth of them go through this link, and

38
00:02:03,156 --> 00:02:06,362
one sixth go through this link, done with this core.

39
00:02:06,362 --> 00:02:13,320
And finally, this core sends messages, half here, half here, and then one sixtth

40
00:02:13,320 --> 00:02:17,610
here and one sixth here. Now we are done with this core. So as you can see, our

41
00:02:17,610 --> 00:02:21,200
links are actually evenly used. Each of them

42
00:02:21,200 --> 00:02:24,840
gets two times one half plus two sixths.

43
00:02:24,840 --> 00:02:31,481
So we get one and one third times the traffic generated by one core. That was

44
00:02:31,481 --> 00:02:36,130
what the one half was off. The traffic from one core is 10 million messages a

45
00:02:36,130 --> 00:02:40,947
second. So we're really getting 10 plus 3.3.

46
00:02:40,947 --> 00:02:45,000
So this is 13.3 million of messages per second.

47
00:02:45,000 --> 00:02:48,140
Which is available on, on our mesh. So

48
00:02:48,140 --> 00:02:51,804
the mesh doesn't slow down the processors. So really

49
00:02:51,804 --> 00:02:54,144
the speed up of using the mesh versus

50
00:02:54,144 --> 00:02:56,562
the bus is two because the bus requires the

51
00:02:56,562 --> 00:02:58,590
cores to slow down so that it can

52
00:02:58,590 --> 00:03:03,030
support the traffic that they are generating. While the

53
00:03:03,030 --> 00:03:05,690
mesh allows the cores to proceed at full speed

54
00:03:05,690 --> 00:03:09,610
at 10 million max messages per second. And still

55
00:03:09,610 --> 00:03:12,740
have some traffic left over. If we went to

56
00:03:12,740 --> 00:03:15,364
a larger net and then four cores the bus

57
00:03:15,364 --> 00:03:19,054
will have to proportionately slow down while the mesh

58
00:03:19,054 --> 00:03:21,596
would get more links, and it will be a

59
00:03:21,596 --> 00:03:24,302
while until any of the mesh links become

60
00:03:24,302 --> 00:03:27,887
saturated. So clearly, the mesh is far superior

61
00:03:27,887 --> 00:03:32,570
to the bus in terms of the traffic it can support when we go to more cores.
