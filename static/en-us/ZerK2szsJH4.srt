1
00:00:00,930 --> 00:00:03,740
Okay, the solution is actually a one-liner.

2
00:00:03,740 --> 00:00:06,480
Firstly, we know that we want pixels that have at

3
00:00:06,480 --> 00:00:09,070
least the minimum magnitude specified.

4
00:00:09,070 --> 00:00:14,710
We can use relational operators to directly compare matrices with scalar values.

5
00:00:14,710 --> 00:00:17,730
This is essentially a thresholding operation.

6
00:00:17,730 --> 00:00:22,320
Next, we use a pair of comparisons to say that gdir should be

7
00:00:22,320 --> 00:00:25,250
between angle_low and angle_high.

8
00:00:25,250 --> 00:00:28,820
Notice that the results of the three comparisons are combined using

9
00:00:28,820 --> 00:00:32,420
the element-wise and operator.

10
00:00:32,420 --> 00:00:33,790
And that's it.

11
00:00:33,790 --> 00:00:37,470
Let's see which pixels have a 45 degree gradient.

12
00:00:37,470 --> 00:00:38,920
Seems to work as expected.

13
00:00:40,340 --> 00:00:43,370
Notice that the line is thinner than expected.

14
00:00:43,370 --> 00:00:46,780
Not all the pixels with a gradient direction of 45 degrees have

15
00:00:46,780 --> 00:00:51,940
been included because the ones with low magnitude have been filtered out.

16
00:00:51,940 --> 00:00:54,240
Similarly, we can look at 0 degrees.

17
00:00:55,440 --> 00:01:00,450
Here we specify the range as minus 15 to plus 15, 90.

18
00:01:00,450 --> 00:01:04,629
Here's a negative angle, minus 135.

19
00:01:04,629 --> 00:01:06,420
Note the low and high values.

20
00:01:06,420 --> 00:01:09,340
180 degrees can be tricky.

21
00:01:09,340 --> 00:01:10,640
Something for you to think about.
