1
00:00:00,000 --> 00:00:06,700
We've already done a lot of the steps required to solve the 3-SAT problem in this course.

2
00:00:06,700 --> 00:00:10,930
We've seen how to represent 3-SAT, the input that is.

3
00:00:10,930 --> 00:00:18,720
We've also seen how to apply preprocessing rules so that it's a bit easier to solve after that,

4
00:00:18,720 --> 00:00:20,730
and these are mainly in problem sets 2 and 4.

5
00:00:20,730 --> 00:00:24,720
Now, what we're going to do is construct a search tree

6
00:00:24,720 --> 00:00:27,780
to find if the given instance has a satisfying assignment.

7
00:00:27,780 --> 00:00:31,720
So, you're going to code up a function solve_3SAT

8
00:00:31,720 --> 00:00:37,120
that should return none if the given instance of 3-SAT has no satisfying assignment,

9
00:00:37,120 --> 00:00:40,630
and otherwise it should return that satisfying assignment.

10
00:00:40,630 --> 00:00:43,970
Now, the search tree technique that we're going to use is as follows.

11
00:00:43,970 --> 00:00:46,710
When you take any clause that is not satisfied,

12
00:00:46,710 --> 00:00:49,860
and if all of the variables have already been set,

13
00:00:49,860 --> 00:00:53,940
then there is no possible solution anymore, so simply return none.

14
00:00:53,940 --> 00:01:00,510
Otherwise, we branch into at most 3 cases where in each case a different variable is set

15
00:01:00,510 --> 00:01:02,890
so that the clause can hopefully become satisfied.

16
00:01:02,890 --> 00:01:07,090
The first variable is set so that the clause becomes satisfied

17
00:01:07,090 --> 00:01:09,240
and we don't do anything with the other variables.

18
00:01:09,240 --> 00:01:12,650
The first variable is set so that the clause does not become satisfied,

19
00:01:12,650 --> 00:01:15,760
and the second one is set so that it becomes satisfied,

20
00:01:15,760 --> 00:01:17,650
and then we don't do anything with the third variable.

21
00:01:17,650 --> 00:01:23,240
Finally, the first and second variables are set so that the clause does not become satisfied,

22
00:01:23,240 --> 00:01:25,610
and the third one is set so that it does become satisfied.

23
00:01:25,610 --> 00:01:28,070
These are the 3 possible cases with 3 sets

24
00:01:28,070 --> 00:01:31,330
since there are at most 3 variables in any clause.

25
00:01:31,330 --> 00:01:35,190
Now, you can write any additional functions required to solve this problem

26
00:01:35,190 --> 00:01:38,960
or break this up into sub-parts, and I'd recommend doing that;

27
00:01:38,960 --> 00:01:43,740
it should make this much simpler because it can get to be quite a bit of code here.

28
00:01:43,740 --> 00:01:45,930
So, have fun solving 3-SAT.

29
00:01:45,930 --> 99:59:59,999
I know we've already done a lot of the steps.
