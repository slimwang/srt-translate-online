1
00:00:00,260 --> 00:00:02,580
When we first defined our tables,

2
00:00:02,580 --> 00:00:06,320
we defined the relationship between
them in terms of constraints.

3
00:00:06,320 --> 00:00:08,880
I'm going to show how we implemented
that relationship into our

4
00:00:08,880 --> 00:00:10,140
query using a JOIN.

5
00:00:11,420 --> 00:00:13,900
This JOIN allows us to
query the Weather table for

6
00:00:13,900 --> 00:00:17,450
values from a specific location setting.

7
00:00:17,450 --> 00:00:21,170
In Sunshine's case,
the user sets this in Preferences.

8
00:00:21,170 --> 00:00:24,710
You'll notice that there's
an SQLiteQueryBuilder class variable at

9
00:00:24,710 --> 00:00:26,240
the top of WeatherProvider.

10
00:00:26,240 --> 00:00:29,940
As you might guess,
this class helps construct queries and

11
00:00:29,940 --> 00:00:31,700
is actually used as the basis for

12
00:00:31,700 --> 00:00:35,730
the query functions you've already
used in the SQLite database class.

13
00:00:35,730 --> 00:00:40,350
We initialize the SQLiteQueryBuilder
in the static constructor of the class,

14
00:00:40,350 --> 00:00:43,305
describing the join between both tables.

15
00:00:43,305 --> 00:00:47,720
SetTables fills out the content in
the from part of the SQL query.

16
00:00:47,720 --> 00:00:52,890
Note, since both tables have
a field with an underscore ID,

17
00:00:52,890 --> 00:00:56,840
we must explicitly use the table
name in order to disambiguate

18
00:00:56,840 --> 00:00:59,940
which ID we are talking
about in the join.

19
00:00:59,940 --> 00:01:02,050
Then we define the selection.

20
00:01:02,050 --> 00:01:06,090
The selection is defined using
the question mark replacement syntax.

21
00:01:06,090 --> 00:01:09,830
The selection parameters
will replace these values.

22
00:01:09,830 --> 00:01:13,015
As you can see,
our selection has two parameters,

23
00:01:13,015 --> 00:01:16,150
a location setting and a date.

24
00:01:16,150 --> 00:01:19,170
Then we have a function to get
the weather by location setting using

25
00:01:19,170 --> 00:01:21,010
the same query builder.

26
00:01:21,010 --> 00:01:25,870
Note that we fetch the parameters from
the URI and built a string array so

27
00:01:25,870 --> 00:01:28,310
that they can be
substituted into our query.

28
00:01:28,310 --> 00:01:32,340
We do that for both of the queries
that we're creating this way.

29
00:01:32,340 --> 00:01:36,411
Finally, we added the functions into the
query routine of the content provider,

30
00:01:36,411 --> 00:01:40,370
for both WEATHER_WITH_LOCATION_AND_DATE
and WEATHER_WITH_LOCATION
