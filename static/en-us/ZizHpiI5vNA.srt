1
00:00:00,012 --> 00:00:05,086
Now, back in the early 90's, specialty hardware was used to get smooth graphics

2
00:00:05,098 --> 00:00:11,837
on early machines. Things like the NES, Genesis, and Gameboy had custom hardware

3
00:00:11,837 --> 00:00:15,279
that was built into the form factor that was allowed you to draw tons and tons

4
00:00:15,279 --> 00:00:20,021
of tiles very quickly on modern screens. Now desktop computers at the time didn't

5
00:00:20,033 --> 00:00:22,775
have that much power, in fact, they didn't have any of that specialty hardware

6
00:00:22,775 --> 00:00:27,582
at all. Modern desktops around that time running at 33 hertz were considered top

7
00:00:27,582 --> 00:00:33,366
of the line. Now, one day a young John Carmack made a demo called Dangerous Dave

8
00:00:33,378 --> 00:00:38,655
in copyright infringement, which actually showed off a Super Mario Brothers 3

9
00:00:38,667 --> 00:00:43,215
level running at full 30 frames a second, on desktop hardware. He showed that

10
00:00:43,227 --> 00:00:48,335
demo to a young John Romero and that very day ID Software was born. The same

11
00:00:48,335 --> 00:00:52,140
studio that went on to actually create the first person shooter genre with

12
00:00:52,152 --> 00:00:54,920
titles such as Wolfenstein, Doom and Quake.

13
00:00:54,925 --> 00:00:59,289
Now, the trick that Carmack realized to get the same performance from the

14
00:00:59,289 --> 00:01:04,157
specialty hardware on the desktop, was actually an optimization. See, these

15
00:01:04,157 --> 00:01:07,656
early machines weren't too good at actually copying pixels over here to over

16
00:01:07,656 --> 00:01:10,285
here in memory. It was actually a pretty difficult concept, especially with the

17
00:01:10,285 --> 00:01:13,561
bitmap colors and everything. But what they were good at was actually just

18
00:01:13,573 --> 00:01:17,847
copying rows of memory from different registers. So what Carmack realized was

19
00:01:17,859 --> 00:01:21,639
that he could use the previous frame and somehow just use meme copies to sort

20
00:01:21,651 --> 00:01:25,534
of shift it, so that it looks like the scene is actually scrolling. They need to

21
00:01:25,546 --> 00:01:29,273
be able to only have to update the small portion of the screen that changed as

22
00:01:29,285 --> 00:01:33,972
your character was moving. Thus was born the concept of "Dirty Rect". Now, this

23
00:01:33,972 --> 00:01:37,421
is the same concept that's been used today in tons and tons of games. See,

24
00:01:37,421 --> 00:01:40,803
that's the trick with game industry techniques like this: they never really

25
00:01:40,815 --> 00:01:44,366
die, they just kind of get rebranded as technology evolves over time.
