1
00:00:00,240 --> 00:00:03,620
Say you have a very simple texture pattern, a checkerboard consisting of just

2
00:00:03,620 --> 00:00:08,541
four texels. What happens if you put this texture on a square? There are now

3
00:00:08,541 --> 00:00:12,680
many pixels all sampling the same texel. The obvious answer is that you want

4
00:00:12,680 --> 00:00:15,980
this texture to continue to look like a checkerboard, with a sharp edge between

5
00:00:15,980 --> 00:00:20,590
the squares. In other words, you want something like this, nice and crisp.

6
00:00:20,590 --> 00:00:22,995
However, if you viewed this texture from a different angle, it doesn't look so

7
00:00:22,995 --> 00:00:27,277
great. This is a zoomed-in view, just to drive home the point. You get this

8
00:00:27,277 --> 00:00:32,183
stair-stepping effect instead of nice smooth edges. This is called the jaggies.

9
00:00:32,183 --> 00:00:35,477
The problem is that the texture will return either black or white at every

10
00:00:35,477 --> 00:00:40,545
pixel. You'd like 50 shades of gray or so, but there's only these two levels.

11
00:00:40,545 --> 00:00:45,657
Sampling the texture in this way is called Nearest Neighbor. Whatever texel

12
00:00:45,657 --> 00:00:49,588
center is closest to the pixel center, is the color the pixel gets. The other

13
00:00:49,588 --> 00:00:54,337
option is bilinear interpolation, or linear for short. What this mode does, is

14
00:00:54,337 --> 00:00:58,564
takes the four closest texel centers and interpolates among them. The closer

15
00:00:58,564 --> 00:01:02,796
the pixel is to the texel center, the more of that color you get. If you turn

16
00:01:02,796 --> 00:01:06,786
on bilinear interpolation this is what you get. That's definitely too much of a

17
00:01:06,786 --> 00:01:09,890
good thing. You'd like blurring along the edges of the squares, but not across

18
00:01:09,890 --> 00:01:14,015
the whole texture. The problem here is that one texel covers a huge number of

19
00:01:14,015 --> 00:01:19,910
pixels. Let's say we aim to change this ratio to be about one texel per pixel.

20
00:01:19,910 --> 00:01:23,060
In other words, say our original two by two checker pattern covers 100 by 100

21
00:01:23,060 --> 00:01:27,677
pixels. To bring the ratio of texels to pixels to be closer, let's make the two

22
00:01:27,677 --> 00:01:31,520
by two checker pattern be represented by an image texture of 64 by 64 texels,

23
00:01:31,520 --> 00:01:38,067
so that each checker square itself covers 32 by 32 texels. In other words,

24
00:01:38,067 --> 00:01:41,640
we'll just make the same pattern, but with a larger texture. Each texel in this

25
00:01:41,640 --> 00:01:46,236
larger texture will now cover around one pixel. This turns out to look pretty

26
00:01:46,236 --> 00:01:49,522
good. The stair steps are gone. You'll try the demo in a minute and see for

27
00:01:49,522 --> 00:01:53,086
yourself. In Three.js, setting the filtering to be nearest or linear is

28
00:01:53,086 --> 00:01:57,548
straightforward, there's not a lot to it. Using bilinear interpolation causes

29
00:01:57,548 --> 00:02:01,452
more taps to occur, that is more texture samples to be retrieved, but it's

30
00:02:01,452 --> 00:02:06,890
usually what you want. Generally, you should use Linear, which is the default.

31
00:02:06,890 --> 00:02:09,574
At the same time, you want to avoid situations where a texel covers a lot of

32
00:02:09,574 --> 00:02:14,950
pixels. Here's our original two by two texture. When we have a situation where

33
00:02:14,950 --> 00:02:19,544
a texel covers more than a pixel, this is called magnification. When

34
00:02:19,544 --> 00:02:23,684
magnification is occurring, the texture's mag filter is used. Another way to

35
00:02:23,684 --> 00:02:26,908
say it is if a number of texels divided by the number of pixels is less than 1,

36
00:02:26,908 --> 00:02:33,154
magnification is happening. You're magnifying the texture. Say we zoom out on

37
00:02:33,154 --> 00:02:36,980
our two by two texture and it all falls within one pixel. If a texel covers

38
00:02:36,980 --> 00:02:40,945
less than one pixel, that is, one pixel contains more than one texel, this

39
00:02:40,945 --> 00:02:46,426
situation is called minification. In this situation the mag filter is not used.

40
00:02:46,426 --> 00:02:49,462
Weâll deal with minification and how to set the corresponding Min Filter in the

41
00:02:49,462 --> 00:02:53,550
next lesson. At this point I want you to study a demo as Iâll be asking you

42
00:02:53,550 --> 00:02:57,120
about it. Try out various resolution textures and see how they work with

43
00:02:57,120 --> 00:03:01,223
nearest neighbor and linear filtering. Try the higher resolution texture

44
00:03:01,223 --> 00:03:05,190
patterns and try tilting the view to see what happens, then play with the zoom.
