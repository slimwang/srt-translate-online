1
00:00:00,370 --> 00:00:03,310
After obtaining your Twitter OAuth credentials you're now ready to

2
00:00:03,310 --> 00:00:07,890
connect to the Twitter sample stream to begin analyzing real time tweets.

3
00:00:07,890 --> 00:00:08,530
In step one,

4
00:00:08,530 --> 00:00:13,260
navigate in your command line to the text editor to lesson two, stage five.

5
00:00:13,260 --> 00:00:18,305
Also in your text editor, go to lesson two > stage five > source > jvm >

6
00:00:18,305 --> 00:00:22,710
Udacity > Storm and we're in our TweetTopology.

7
00:00:22,710 --> 00:00:25,830
In step two, scroll down to the topology section, and

8
00:00:25,830 --> 00:00:28,580
you see the TweetSpout credentials, here.

9
00:00:28,580 --> 00:00:32,080
Remember to enter your OAuth Credentials in order that they appear,

10
00:00:32,080 --> 00:00:36,020
your customer key, secret key, access token, access secret.

11
00:00:36,020 --> 00:00:40,710
I've created a few fake credentials here that approximately match the same size.

12
00:00:40,710 --> 00:00:41,760
And that's it.

13
00:00:41,760 --> 00:00:44,070
Next, scroll down to your Topology,.

14
00:00:44,070 --> 00:00:46,470
In step three, review the tweet topology.

15
00:00:46,470 --> 00:00:48,390
What do you expect the output to be?

16
00:00:48,390 --> 00:00:50,260
Where will it be displayed?

17
00:00:50,260 --> 00:00:54,230
How about you post your predictions to the forum and comment on two other posts.

18
00:00:54,230 --> 00:00:59,660
Next, run your topology using Maven package and submit your Storm topology.

19
00:00:59,660 --> 00:01:00,650
Once you have built success,

20
00:01:00,650 --> 00:01:04,290
remember to submit your topology by looking at the tree structure.

21
00:01:04,290 --> 00:01:06,800
I notice that we have the tweet topology class.

22
00:01:06,800 --> 00:01:16,430
Storm jar target udacity with dependencies, udacity.storm.TweetTopology.

23
00:01:16,430 --> 00:01:19,880
Finally, following the written directions in step four, I'm asking you

24
00:01:19,880 --> 00:01:25,130
to complete the topology by attaching a ParseTweetBolt with a parallelism of 10.

25
00:01:25,130 --> 00:01:28,600
Followed by a CountBolt with a parallelism of 15, and

26
00:01:28,600 --> 00:01:31,690
finally a ReportBolt with a parallelism of one.

27
00:01:31,690 --> 00:01:35,040
What are the needed groupings to connect each topology?

28
00:01:35,040 --> 00:01:37,880
Package your topology using Maven and rerun.

29
00:01:39,210 --> 00:01:43,590
Remember to refer to lesson three, stage one if the tweet topology for

30
00:01:43,590 --> 00:01:45,750
the solution if this is needed.

31
00:01:45,750 --> 00:01:50,030
Finally, in part five, take a screenshot or video and upload this to the forum.

32
00:01:50,030 --> 00:01:51,580
Explain the apology you created and

33
00:01:51,580 --> 00:01:55,140
why you chose each grouping to connect your spout and bolts.

34
00:01:55,140 --> 00:01:59,400
Comment on two other posts, and optional now that you have a Twitter account,

35
00:01:59,400 --> 00:02:02,340
you can tweet your screen shot with your thoughts on the class.

36
00:02:03,600 --> 00:02:04,100
Good luck.
