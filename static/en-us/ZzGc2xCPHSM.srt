1
00:00:00,000 --> 00:00:03,010
And again, that is probably very familiar to you by now.

2
00:00:03,010 --> 00:00:05,350
NP is is the complexity class of all problems that can

3
00:00:05,350 --> 00:00:07,180
that can be solved in polynomial time

4
00:00:07,180 --> 00:00:09,370
or in non-deterministic RAM.

5
00:00:09,370 --> 00:00:12,370
That's what the N here stands for; now you might have found this

6
00:00:12,370 --> 00:00:16,460
quiz rather easy, but actually that you're so familiar with P and NP

7
00:00:16,460 --> 00:00:18,100
I think it's something special,

8
00:00:18,100 --> 00:00:20,760
because I find that not many people actually understand what

9
00:00:20,760 --> 00:00:23,870
P and NP stand for, and what the difference is between the two.

10
00:00:23,870 --> 00:00:26,840
Now if you really want to impress a theoretical computer scientist,

11
00:00:26,840 --> 00:00:29,050
of course you have to be a little bit nit picky.

12
00:00:29,050 --> 00:00:32,119
First of all, P and NP formally are

13
00:00:32,119 --> 00:00:35,070
defined for decision problems,

14
00:00:35,070 --> 00:00:37,800
so here we said all problems, but actually,

15
00:00:37,800 --> 00:00:40,700
if you're very formal, it's only for decision problems,

16
00:00:40,700 --> 00:00:42,460
and the other thing is that

17
00:00:42,460 --> 00:00:45,030
originally, those classes were not defined on the

18
00:00:45,030 --> 00:00:48,540
RAM but rather on a computer model

19
00:00:48,540 --> 00:00:50,320
known as a Turing machine,

20
00:00:50,320 --> 00:00:53,510
named after the computer pioneer, Alan Turing.

21
00:00:53,510 --> 00:00:56,940
Now having a precise definition doesn't really change anything about P and NP

22
00:00:56,940 --> 00:00:58,990
the way that we were talking about it,

23
00:00:58,990 --> 00:01:01,730
but when you get down into the details of these classes,

24
00:01:01,730 --> 00:01:04,220
it might actually matter that you have a Turing machine here

25
00:01:04,220 --> 00:01:06,770
instead of a RAM and that you're talking about decision problems

26
00:01:06,770 --> 00:01:08,750
instead of optimization problems.

27
00:01:08,750 --> 00:01:10,900
But for here, I think it's just fine to think of it as the

28
00:01:10,900 --> 00:01:12,820
complexity class of all problems

29
00:01:12,820 --> 00:01:14,540
that can be solved in polynomial time

30
00:01:14,540 --> 99:59:59,999
on a deterministic or non deterministic RAM.
