1
00:00:00,180 --> 00:00:03,815
Say you want to have some pixel have half the intensity of some given pixel.

2
00:00:03,815 --> 00:00:06,947
Logically, you'd set the pixel's channel values to be half that of the

3
00:00:06,947 --> 00:00:10,589
original's. This is certainly a reasonable idea, and in fact, I recommend it

4
00:00:10,589 --> 00:00:14,520
once you have your system set up properly. The only problem is that displays do

5
00:00:14,520 --> 00:00:18,120
not actually respond to channel settings in this way. A monitor has a power law

6
00:00:18,120 --> 00:00:22,184
response to an input signal. If you send a signal of say, 0.5, you get a result

7
00:00:22,184 --> 00:00:26,504
down here. You send a signal of 1, double it, you get way more than double the

8
00:00:26,504 --> 00:00:30,748
result. This non-linear response of monitors sounds like something that should

9
00:00:30,748 --> 00:00:34,656
just get fixed, but it's in fact a feature. It turns out that our eyes have a

10
00:00:34,656 --> 00:00:38,118
similar response curve. A monitor has a limited number of levels of color it

11
00:00:38,118 --> 00:00:41,910
can display. To get good coverage of levels that the eye can detect, it's a

12
00:00:41,910 --> 00:00:45,690
fine thing to space these levels out in this non-linear way. However, we

13
00:00:45,690 --> 00:00:49,650
usually think we're calculating colors in a linear space. If I compute a color

14
00:00:49,650 --> 00:00:53,914
that's half as intense, I expect to see that result. Many applications ignore

15
00:00:53,914 --> 00:00:57,567
this mismatch between how to calculate color and how to display it. And it's

16
00:00:57,567 --> 00:01:00,596
less noticeable than you might think. If everything you do is in this space,

17
00:01:00,596 --> 00:01:04,122
then you often don't feel anything's wrong. It's what you're used to seeing. In

18
00:01:04,122 --> 00:01:07,182
fact, I'll warn you that many of the shader program examples in this unit

19
00:01:07,182 --> 00:01:12,600
blithely ignore this problem, since the focus is on keeping the program simple.

20
00:01:12,600 --> 00:01:15,636
However, there are a few important places where computing in the monitor space

21
00:01:15,636 --> 00:01:19,430
can cause problems. First, lights don't add up correctly. If you have 2

22
00:01:19,430 --> 00:01:23,048
spotlights overlapping, this area of overlap will not be twice the intensity as

23
00:01:23,048 --> 00:01:27,436
the individual spotlit areas. If you want to be more physically based and be

24
00:01:27,436 --> 00:01:30,019
able to trust that your virtual world has some connection to the real world,

25
00:01:30,019 --> 00:01:35,222
you need to add the lights together sensibly. The hues of colors can shift. As

26
00:01:35,222 --> 00:01:38,537
you vary the intensity, the channels shift in a nonlinear fashion and so shift

27
00:01:38,537 --> 00:01:43,408
the perceived hue. Anti-aliasing won't look as good. Say you have a white

28
00:01:43,408 --> 00:01:47,075
polygon on a black background. If a pixel is half covered by a polygon, it

29
00:01:47,075 --> 00:01:51,270
should be half the intensity as one fully covered by the polygon. If no

30
00:01:51,270 --> 00:01:54,670
correction's made for the monitor's nonlinear response, the half covered pixel

31
00:01:54,670 --> 00:01:58,836
will be dimmer. This error will cause even highly sampled pixels to be wrong,

32
00:01:58,836 --> 00:02:02,659
and give what's called braiding or roping along the edges. I say this a lot,

33
00:02:02,659 --> 00:02:05,411
but you really owe it to yourself to see the additional course materials for a

34
00:02:05,411 --> 00:02:10,743
comparison. Mipmapped textures will appear dimmer in the distance. The simplest

35
00:02:10,743 --> 00:02:14,548
case is the mipmap for a two by two checkerboard pattern. The one by one

36
00:02:14,548 --> 00:02:18,887
average mipmap is a gray level of 0.5. But as I've said maybe five times now,

37
00:02:18,887 --> 00:02:22,832
this gray will appear darker on the screen. This can cause textures with high

38
00:02:22,832 --> 00:02:27,062
contrast to look dimmer, as these lower resolution mipmaps are accessed.
