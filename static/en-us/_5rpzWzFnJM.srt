1
00:00:00,000 --> 00:00:04,500
For this quiz, your goal is to define the procedure add page to index

2
00:00:04,500 --> 00:00:07,689
that takes 3 inputs. The 1st is the index,

3
00:00:07,689 --> 00:00:10,510
and I've drawn a picture of index to remind you of its structure--

4
00:00:10,510 --> 00:00:14,980
and it's a list where each entry in the list is a list containing a key,

5
00:00:14,980 --> 00:00:17,890
and the list of the URLs where that keyword is found.

6
00:00:17,890 --> 00:00:20,750
The 2nd input is the URL--

7
00:00:20,750 --> 00:00:24,320
so that's the location of the page, where the content came from--

8
00:00:24,320 --> 00:00:26,330
And the 3rd input is the content.

9
00:00:26,330 --> 00:00:31,230
That's the entire text of the page at that location where URL is.

10
00:00:31,230 --> 00:00:34,270
The results should be updating the index to include all word occurrences

11
00:00:34,270 --> 00:00:40,810
found in the page content by adding the URL to the words associated URL list.

12
00:00:40,810 --> 00:00:44,580
I'll show you a few examples so it is clear what add to index should do,

13
00:00:44,580 --> 00:00:47,150
and then you'll have a chance to define it yourself.

14
00:00:47,150 --> 00:00:49,550
We're going to start with an empty index--

15
00:00:49,550 --> 00:00:52,320
and we'll call add page to index--

16
00:00:52,320 --> 00:00:55,360
and let's print out what index looks like after this--

17
00:00:55,360 --> 00:01:00,190
it's a little hard to see like that, so let's see what index position zero is.

18
00:01:00,190 --> 00:01:05,099
We can see that the keyword this appears at the URL "fake test"

19
00:01:05,099 --> 00:01:07,940
if we print index at position 1

20
00:01:07,940 --> 00:01:12,040
we'll see the same thing, but this time for the keyword is.

21
00:01:12,040 --> 00:01:13,640
We have an entry,

22
00:01:13,640 --> 00:01:14,710
we have an index,

23
00:01:14,710 --> 00:01:16,640
we have 4 words in our index

24
00:01:16,640 --> 00:01:19,450
this is a and test

25
00:01:19,450 --> 00:01:23,820
and for each word, the list of URLs where each word appears is fake.test

26
00:01:23,820 --> 00:01:26,090
which is what we passed in as the URL here.

27
00:01:26,090 --> 00:01:29,390
Let's try adding some other things to our index.

28
00:01:29,390 --> 00:01:32,860
This time, we'll add a page called real.test.

29
00:01:32,860 --> 00:01:35,860
and have the content of the page be this is not a test.

30
00:01:35,860 --> 00:01:39,430
Now, when we run this, we see this index

31
00:01:39,430 --> 00:01:44,070
if we look at a particular element--let's look at the element at position 2--

32
00:01:44,070 --> 00:01:46,210
it has 2 entries in its URL list--

33
00:01:46,210 --> 00:01:49,640
since both of the pages we passed in contain is--

34
00:01:49,640 --> 00:01:52,010
and if you look at index position 4--

35
00:01:52,010 --> 00:01:57,990
we see that for the word not--that only appears on the real.test page--

36
00:01:57,990 --> 00:02:00,720
so there's only 1 entry in it's URL list.

37
00:02:00,720 --> 00:02:04,160
We already defined the procedure for respond to new query.

38
00:02:04,160 --> 00:02:06,490
So, that should work on this index. Let's try.

39
00:02:06,490 --> 00:02:14,030
Look up takes the index and the keyword and returns the list of URLs at that keyword.

40
00:02:14,030 --> 00:02:18,670
Delete the previous tests, and see what happens when we look up is,

41
00:02:18,670 --> 00:02:21,340
we see that it occurs on both pages--

42
00:02:21,340 --> 00:02:25,450
if we look up udacity--it doesn't occur anywhere so far.

43
00:02:25,450 --> 00:02:29,020
I hope it's clear now what add to index page should do--

44
00:02:29,020 --> 00:02:32,020
see if you can write the code to define add page to index.
