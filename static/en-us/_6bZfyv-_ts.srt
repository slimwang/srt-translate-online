1
00:00:00,000 --> 00:00:04,000
Now, is this decision problem in the set NP?

2
00:00:04,000 --> 00:00:08,000
Well, remember that we need to show two things for it to be an NP--

3
00:00:08,000 --> 00:00:14,000
it needs to have a short accepting certificate and it needs to have a fast verification algorithm.

4
00:00:14,000 --> 00:00:19,000
In particular, what we don't need to do actually have a solution to this problem that's fast.

5
00:00:19,000 --> 00:00:23,000
We just need to show that a certificate verification algorithm is fast.

6
00:00:23,000 --> 00:00:27,000
So you should by now have a sense that the certificate in this case

7
00:00:27,000 --> 00:00:29,000
is actually pretty straightforward.

8
00:00:29,000 --> 00:00:34,000
If I tell you that there's a four clique in the graph, the way I can convince you that there's one there

9
00:00:34,000 --> 00:00:37,000
is I give you the four nodes that make up the clique.

10
00:00:37,000 --> 00:00:43,000
The verification algorithm then that you run is you go all the pairs of nodes in the certificate

11
00:00:43,000 --> 00:00:47,000
and make sure that in the original graph G, they're actually connected.

12
00:00:47,000 --> 00:00:51,000
So for each one, you should have to ask the question--okay, is this pair in edge in the graph,

13
00:00:51,000 --> 00:00:57,000
is this pair in edge in the graph and that each of those tests takes unit time--constant time

14
00:00:57,000 --> 00:01:05,000
and there's order Î of kÂ˛ pairs to check, so this verification algorithm runs in polynomial time.

15
00:01:05,000 --> 00:01:10,000
So just to drive this point home now, for every graph G that has a k clique,

16
00:01:10,000 --> 00:01:14,000
there is a certificate that would cause the verification algorithm to say yes,

17
00:01:14,000 --> 00:01:19,000
but for any graph G that doesn't have a k clique, there's no certificate

18
00:01:19,000 --> 00:01:23,000
you can give it that would cause this verification algorithm to say yes.

19
00:01:23,000 --> 00:01:27,000
And just to make certain here, the verification algorithm could also check

20
00:01:27,000 --> 00:01:31,000
to see that the certificate that you gave it actually consist of k nodes.

21
00:01:31,000 --> 00:01:34,000
Just to be careful.
