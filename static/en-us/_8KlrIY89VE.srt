1
00:00:00,000 --> 00:00:05,000
When I'm starting from exp, I can use any of these 3 rules,

2
00:00:05,000 --> 00:00:09,000
so in particular I could use the third one and just replace exp with number,

3
00:00:09,000 --> 00:00:12,000
so number is definitely in the language of the grammar.

4
00:00:12,000 --> 00:00:14,000
It's one of the strings that I can derive.

5
00:00:14,000 --> 00:00:17,000
Unfortunately, - number is not.

6
00:00:17,000 --> 00:00:22,000
There's no way to get a minus sign without an exp before it.

7
00:00:22,000 --> 00:00:25,000
If we take a look at all 3 of our rules, the minus sign only appears once,

8
00:00:25,000 --> 00:00:28,000
and there's something before it, so this isn't going to happen.

9
00:00:28,000 --> 00:00:31,000
Over here, number + number + number,

10
00:00:31,000 --> 00:00:37,000
it looks pretty big, but I could get it by applying this first rewrite rule twice

11
00:00:37,000 --> 00:00:39,000
and then turning each one of these expressions into numbers.

12
00:00:39,000 --> 00:00:42,000
I've drawn it in kind of this tree format.

13
00:00:42,000 --> 00:00:44,000
We will see more on that in a minute, but for now, just imagine I did this

14
00:00:44,000 --> 00:00:46,000
because I ran out of space in the corner.

15
00:00:46,000 --> 00:00:48,000
Poor planning on my part.

16
00:00:48,000 --> 00:00:52,000
Similarly, we could get number - number + number

17
00:00:52,000 --> 00:00:58,000
just by getting a minus sign here instead, using rule 2 and rule 1 in combination.

18
00:00:58,000 --> 00:01:03,000
Over here, there's no way to get number next to number.

19
00:01:03,000 --> 00:01:05,000
Whenever we get multiple expressions on the right-hand side,

20
00:01:05,000 --> 00:01:08,000
they're always separated by a terminal.

21
00:01:08,000 --> 00:01:10,000
This can't happen, so just to review,

22
00:01:10,000 --> 00:01:16,000
this uses rule 1, rule 2, and rule 3 three times.

23
00:01:16,000 --> 00:01:18,000
This is rule 1. That's rule 2.

24
00:01:18,000 --> 99:59:59,999
That's rule 3 three times in order to derive this string.
