1
00:00:00,390 --> 00:00:03,420
This idea that we should prefer
heavier flows brings us to

2
00:00:03,420 --> 00:00:04,740
the scaling algorithm.

3
00:00:04,740 --> 00:00:08,240
One idea is to find
the heaviest possible flow.

4
00:00:08,240 --> 00:00:11,930
We could do this by starting with
an empty graph and then adding an edge

5
00:00:11,930 --> 00:00:16,300
with the largest remaining residual
capacity until there was an ST path.

6
00:00:16,300 --> 00:00:17,960
But this would be unnecessarily slow.

7
00:00:19,150 --> 00:00:22,780
Instead, we fix a schedule of thresholds
for the residual capacity, and

8
00:00:22,780 --> 00:00:25,400
lower the threshold when there
are no more augmenting paths

9
00:00:25,400 --> 00:00:27,010
in the residual network.

10
00:00:27,010 --> 00:00:30,610
We'll start by defining the residual
network with threshold delta

11
00:00:30,610 --> 00:00:34,730
to include only those edges whose
capacities is at least delta.

12
00:00:35,760 --> 00:00:37,610
Note that when delta is equal to 1,

13
00:00:37,610 --> 00:00:41,720
this is the same as our traditional
definition for a residual network.

14
00:00:41,720 --> 00:00:43,940
We can state the algorithm as follows.

15
00:00:43,940 --> 00:00:46,400
We initialize the flow to 0 and

16
00:00:46,400 --> 00:00:51,530
the parameter delta to be the largest
capacity coming out of the source.

17
00:00:51,530 --> 00:00:56,480
This is a trivial upper bound on
the value of a single path flow.

18
00:00:56,480 --> 00:00:59,260
Then while delta's at
least 1 we look for

19
00:00:59,260 --> 00:01:03,830
an augmenting path in the residual
graph with threshold delta.

20
00:01:03,830 --> 00:01:06,730
And we use this path
to augment the flow.

21
00:01:06,730 --> 00:01:10,950
Once all such paths are exhausted,
we then, cut Delta in half.

22
00:01:10,950 --> 00:01:12,260
And repeat.

23
00:01:12,260 --> 00:01:15,640
Some of the analysis,
we can do just by inspection.

24
00:01:15,640 --> 00:01:20,300
Letting C be the initial value for
Delta, it's clear that we only use, log

25
00:01:20,300 --> 00:01:25,380
C iterations, of the outer loop, since
we're cutting Delta in half, each time.

26
00:01:25,380 --> 00:01:30,390
And the steps of the innermost
loop here, finding a path and

27
00:01:30,390 --> 00:01:34,000
using P to augment the path or
certainly order E.

28
00:01:34,000 --> 00:01:37,690
The big question then is how many
iterations of the inner loop are there?
