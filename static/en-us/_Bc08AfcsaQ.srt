1
00:00:00,380 --> 00:00:02,715
In the Forecast Fragment, we want to modify the

2
00:00:02,715 --> 00:00:05,070
FetchWeatherTask, so that we can pass in the

3
00:00:05,070 --> 00:00:08,730
postal code parameter when we execute that task.

4
00:00:08,730 --> 00:00:11,370
You can click on this class, to jump

5
00:00:11,370 --> 00:00:16,780
to where it's defined or you can use this shortcut. And here you see that we

6
00:00:16,780 --> 00:00:19,640
modified the generic input type, to be a

7
00:00:19,640 --> 00:00:25,080
string so that the doInBackground method receives string params.

8
00:00:25,080 --> 00:00:27,783
Now, we only passed in one string param,

9
00:00:27,783 --> 00:00:30,923
94043. So when you see down here later, we

10
00:00:30,923 --> 00:00:33,816
can read out the zeroth position in the params

11
00:00:33,816 --> 00:00:37,520
array, to get that postal code. Notice that we're

12
00:00:37,520 --> 00:00:40,590
using the UI builder here, and we're appending query

13
00:00:40,590 --> 00:00:43,830
parameters, one by one. We define constants for these

14
00:00:43,830 --> 00:00:47,100
query params, as seen here. And for the values,

15
00:00:47,100 --> 00:00:50,300
we also define them up here. You can imagine

16
00:00:50,300 --> 00:00:52,590
that in the future these might be configured outside

17
00:00:52,590 --> 00:00:54,580
of this class, but for now we're just going

18
00:00:54,580 --> 00:00:57,820
to define them here. To verify that this URI

19
00:00:57,820 --> 00:01:01,010
was defined properly, we add a verbose log command

20
00:01:01,010 --> 00:01:04,629
to print out the built URI. Let's verify that

21
00:01:04,629 --> 00:01:07,460
the log we added actually shows up. In overflow

22
00:01:07,460 --> 00:01:10,350
menu we tap Refresh. Then we see the log

23
00:01:10,350 --> 00:01:15,300
tag FetchWeatherTask with our UI printed out. It says

24
00:01:15,300 --> 00:01:19,610
94043, jSON format metric units, seven days. So this looks correct.
