1
00:00:00,270 --> 00:00:03,390
Now let's talk about measuring performance. We have seen

2
00:00:03,390 --> 00:00:06,770
that we can express performance as 1 over execution time.

3
00:00:06,770 --> 00:00:11,022
But the execution time is on what workload? So if

4
00:00:11,022 --> 00:00:14,154
we want to measure performance on two machines and compare them,

5
00:00:14,154 --> 00:00:16,126
the question is, what do we run on them to

6
00:00:16,126 --> 00:00:18,330
tell which on is faster than the other, and by

7
00:00:18,330 --> 00:00:21,582
how much. The best assessment of how do they compare,

8
00:00:21,582 --> 00:00:25,400
is if we run actual workloads from a particular user.

9
00:00:25,400 --> 00:00:28,562
But, this requires us to run many different programs, what

10
00:00:28,562 --> 00:00:31,290
we get is not representative of other users who might

11
00:00:31,290 --> 00:00:34,638
be using this machine completely differently, and there is the

12
00:00:34,638 --> 00:00:37,834
question of how do we get the workload data? Even if

13
00:00:37,834 --> 00:00:41,162
we found the user who's usage patterns are representative of

14
00:00:41,162 --> 00:00:44,042
many others, how do we persuade that person to give us

15
00:00:44,042 --> 00:00:46,794
exactly what they were doing with the machine over a

16
00:00:46,794 --> 00:00:51,120
course of, let's say, a day? So when we compare performance

17
00:00:51,120 --> 00:00:53,970
of different machines, we usually don't do

18
00:00:53,970 --> 00:00:57,810
this, instead, we use so-called benchmark workloads.
