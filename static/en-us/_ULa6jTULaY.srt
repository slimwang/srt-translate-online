1
00:00:00,014 --> 00:00:02,727
So we're going to start with the mathematical definition of reduce.

2
00:00:02,727 --> 00:00:05,090
Reduce has 2 inputs.

3
00:00:05,090 --> 00:00:09,312
The 1st input is a set of elements, and we're going to assume they're in an array.

4
00:00:09,312 --> 00:00:13,789
The 2nd input is a reduction operator that will operate on the elements in this array.

5
00:00:13,789 --> 00:00:16,595
For example, we have a list of numbers here,

6
00:00:16,595 --> 00:00:19,296
and we have a reduction operator of plus,

7
00:00:19,296 --> 00:00:22,534
and the reduction operator will sum them all up.

8
00:00:22,534 --> 00:00:26,053
Let's be a little more precise in terms of what operators we're going to support

9
00:00:26,053 --> 00:00:28,274
with our parallel implementation.

10
00:00:28,274 --> 00:00:31,110
Our operators need to have the following 2 characteristics.

11
00:00:31,110 --> 00:00:33,611
The 1st is that the operators are binary.

12
00:00:33,611 --> 00:00:37,514
The operator must operate on 2 inputs and create 1 output.

13
00:00:37,514 --> 00:00:39,821
Plus is a binary operator, for instance.

14
00:00:39,821 --> 00:00:42,154
Two, associative.

15
00:00:42,154 --> 00:00:45,465
Associativity means that if we have 2 or more operations in a row,

16
00:00:45,465 --> 00:00:48,988
a op b op c, the order of operations doesn't matter

17
00:00:48,988 --> 00:00:51,433
as long as the order of the operands aren't changed.

18
00:00:51,433 --> 00:00:55,432
To put it simply, a op b, take the result and op it with c,

19
00:00:55,432 --> 00:00:58,735
needs to give you the same answer as b op c,

20
00:00:58,735 --> 00:01:01,307
and then you op the result with a.

21
00:01:01,307 --> 00:01:05,945
You should convince yourself that plus is an associative operator but minus is not.

22
00:01:05,945 --> 00:01:08,149
Now, it's not immediately clear why we need this property

23
00:01:08,149 --> 00:01:10,191
but we're going to see why in a few minutes.
