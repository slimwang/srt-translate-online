1
00:00:00,290 --> 00:00:02,122
How about shape from a single image.

2
00:00:02,122 --> 00:00:06,740
So given R(p,q), so that means that we

3
00:00:06,740 --> 00:00:11,170
know where the light source direction is and we know the surface reflectance, so

4
00:00:11,170 --> 00:00:13,720
we can eliminate that or assume it equals to one.

5
00:00:13,720 --> 00:00:19,060
Can we determine p, q everywhere, the surface orientation, uniquely for

6
00:00:19,060 --> 00:00:21,020
every image point.

7
00:00:21,020 --> 00:00:26,270
So here we have, you know, some random point and maybe its intensity

8
00:00:26,270 --> 00:00:31,100
compared to the brightest point is 0.7, so it's somewhere on that curve.

9
00:00:32,189 --> 00:00:34,360
But it's somewhere on that curve.

10
00:00:34,360 --> 00:00:39,160
I don't know exactly where it is on that, in that p, q space.

11
00:00:39,160 --> 00:00:44,420
So no, I can't sort of just simply from this analysis be

12
00:00:44,420 --> 00:00:48,850
able to determine the total shape or the orientation at every location.

13
00:00:50,130 --> 00:00:56,340
So if I want to do this, if I want to compute shape from a single image.

14
00:00:56,340 --> 00:00:57,370
How might we do that?

15
00:00:57,370 --> 00:01:02,250
Well, basically this is a, this is an example of an ill-posed problem and

16
00:01:02,250 --> 00:01:05,060
we need some additional constraints.

17
00:01:05,060 --> 00:01:07,000
We need some additional information.

18
00:01:07,000 --> 00:01:08,210
Like the lighting is known or

19
00:01:08,210 --> 00:01:11,780
boundary condition, or maybe even other information.

20
00:01:11,780 --> 00:01:16,010
And in fact there are sort of two standards moves to make.

21
00:01:16,010 --> 00:01:19,500
Basically one that doesn't really work and what that does.

22
00:01:19,500 --> 00:01:21,400
The one that doesn't really work which we'll talk about in

23
00:01:21,400 --> 00:01:23,880
just a minute is the traditional shape from shading and

24
00:01:23,880 --> 00:01:27,130
that is we're going to add some addition constraints.

25
00:01:27,130 --> 00:01:32,360
And the one that does work is you actually take more images with different light

26
00:01:32,360 --> 00:01:35,170
sources illuminated, and that's called photometric stereo.

27
00:01:35,170 --> 00:01:37,780
That, that has some real applicability.

28
00:01:37,780 --> 00:01:40,710
So let's first talk about traditional shape from shading,

29
00:01:40,710 --> 00:01:42,720
where you add more constraints.

30
00:01:42,720 --> 00:01:43,690
Remember here was our,

31
00:01:43,690 --> 00:01:47,610
our question given a single image of known surface reflectance, so

32
00:01:47,610 --> 00:01:52,320
we know the albedo with a known light source, can we recover its shape.

33
00:01:52,320 --> 00:01:58,370
As we said, that means given that R(p,q) can we determine p,q everywhere.

34
00:01:58,370 --> 00:02:02,090
And the answer is well, I have to cheat a little.

35
00:02:02,090 --> 00:02:04,470
No not cheat, I have to make some assumptions.

36
00:02:04,470 --> 00:02:06,530
Assumption number one, is that for

37
00:02:06,530 --> 00:02:11,620
example, at this boundary, which is already drawn in red, I'll do it again.

38
00:02:11,620 --> 00:02:13,710
We're going to assume the shape is known, and

39
00:02:13,710 --> 00:02:17,950
in fact, what you can imagine is that everywhere at this boundary, because it's

40
00:02:17,950 --> 00:02:21,880
falling off, I know that the surface normal is 90 degrees from the camera.

41
00:02:21,880 --> 00:02:24,280
So I know something about the surface orientation.

42
00:02:25,290 --> 00:02:29,850
Then the other thing that I'm going to assume is that the surface is integrable.

43
00:02:29,850 --> 00:02:33,570
What that means is, remember I'm recovering orientation,

44
00:02:33,570 --> 00:02:36,510
orientation you're going to give us the surface derivative.

45
00:02:36,510 --> 00:02:40,370
Well, the whole thing has to integrate to a depth of value, okay?

46
00:02:40,370 --> 00:02:43,710
And then finally, I'm going to assume some sort of smoothness, and

47
00:02:43,710 --> 00:02:48,000
I'm going to put this whole thing in some form of an optimization method.

48
00:02:48,000 --> 00:02:52,260
Back a 100 years ago, I did a paper Yvonne Leclaire called direct height from

49
00:02:52,260 --> 00:02:53,800
shading, I think it was called.

50
00:02:53,800 --> 00:02:58,390
Which attempted to not do it quite so much in a, orientation based way, but

51
00:02:58,390 --> 00:02:59,570
directly in a height way and

52
00:02:59,570 --> 00:03:02,910
take the derivatives, it was a, running out of connection machine.

53
00:03:02,910 --> 00:03:09,060
But basically the idea was, to recover the full height from this image, under

54
00:03:09,060 --> 00:03:13,160
these relatively restrictive assumptions that you know the albedo everywhere.

55
00:03:13,160 --> 00:03:16,920
That you know a the, the, the, either the depth or

56
00:03:16,920 --> 00:03:19,430
the orientation at some particular contour.

57
00:03:19,430 --> 00:03:22,930
We actually use stereo at the contour to get that initialization,

58
00:03:22,930 --> 00:03:24,864
then we did shape from shading in-between.
