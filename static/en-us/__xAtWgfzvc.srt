1
00:00:00,190 --> 00:00:03,290
Because a Service Worker runs in
the background, they have a different

2
00:00:03,290 --> 00:00:06,810
life cycle, which is completely
separate from your Web page.

3
00:00:06,810 --> 00:00:08,577
And In order to use a Service Worker,

4
00:00:08,577 --> 00:00:12,130
it needs to be registered
by your app's JavaScript.

5
00:00:12,130 --> 00:00:16,500
If the page has never had a Service
Worker before, or the Service Worker has

6
00:00:16,500 --> 00:00:20,990
been updated, the browser gets the new
service worker and installs it.

7
00:00:20,990 --> 00:00:23,490
Once it's been installed,
it's then activated.

8
00:00:24,510 --> 00:00:28,880
The Service Worker will then control
all the pages under the scope,

9
00:00:28,880 --> 00:00:30,320
with one exception.

10
00:00:30,320 --> 00:00:32,960
The page that is registered for
the Service Worker for

11
00:00:32,960 --> 00:00:36,160
the first time, won't be controlled
until it's loaded again.

12
00:00:37,440 --> 00:00:42,210
Once the Service Worker is in control,
it will handle fetch,

13
00:00:42,210 --> 00:00:46,540
message, and push events that occur
whenever a network request or

14
00:00:46,540 --> 00:00:48,990
message is sent from your page.

15
00:00:48,990 --> 00:00:53,320
Note that a browser can terminate
a Service Worker to save memory.

16
00:00:53,320 --> 00:00:55,460
But it will be restarted as needed.

17
00:00:56,780 --> 00:01:00,840
If you want to dive deeper into Service
Workers, check out Jake's course.
