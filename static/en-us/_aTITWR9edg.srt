1
00:00:00,630 --> 00:00:05,730
So, the different kinds of Transparency, which you might consider versus Access

2
00:00:05,730 --> 00:00:10,280
transparency. That is, it's a particular computational or

3
00:00:10,280 --> 00:00:16,200
data resource which the application requires available locally or remotely and

4
00:00:16,200 --> 00:00:20,450
in particular does the application need to know whether it's local or

5
00:00:20,450 --> 00:00:26,020
remote. If it's Access transparent the application doesn't need to know.

6
00:00:27,490 --> 00:00:31,830
Extending this is the idea of Location transparency. Is it necessary to know

7
00:00:31,830 --> 00:00:37,330
the physical location of a resource. Third, is Migration transparency, that is,

8
00:00:37,330 --> 00:00:42,970
can we move a resource from one. Physical machine to another, in such

9
00:00:42,970 --> 00:00:47,340
a way that the rest of the system doesn't have to know that it's moved. This can

10
00:00:47,340 --> 00:00:51,290
be tricky of course, if you're in the middle of using a resource when it moves,

11
00:00:51,290 --> 00:00:56,340
there's the possibility that, your interaction is going to be inconsistent, or

12
00:00:56,340 --> 00:01:00,910
even break. And finally, Replication transparency. One way for

13
00:01:00,910 --> 00:01:06,570
dealing with reliability issues is Replication. At one extreme would

14
00:01:06,570 --> 00:01:10,740
be Database Replication, where all of your data is in more than one place, and

15
00:01:10,740 --> 00:01:15,760
if your, one of your databases go down, at least you have the other one there.

16
00:01:15,760 --> 00:01:18,610
Okay, and then as far as Transparency is concerned, is your

17
00:01:18,610 --> 00:01:22,800
application aware that there are multiple database servers in that situation.
