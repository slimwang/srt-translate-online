1
00:00:00,460 --> 00:00:04,140
As you might have guessed,
graph partitioning is n p complete.

2
00:00:04,140 --> 00:00:07,280
So your first intuition about
graphs is that you need to look for

3
00:00:07,280 --> 00:00:11,200
good heuristics and try to exploit
special structure wherever possible.

4
00:00:11,200 --> 00:00:13,590
Here's a first simple heuristic.

5
00:00:13,590 --> 00:00:15,150
It's called graph by section and

6
00:00:15,150 --> 00:00:17,490
it's based on the principle
of divide and conquer.

7
00:00:17,490 --> 00:00:18,930
The idea is simple.

8
00:00:18,930 --> 00:00:21,240
Suppose you want P partitions.

9
00:00:21,240 --> 00:00:25,830
Start by first using an algorithm to
divide the graph into two partitions.

10
00:00:25,830 --> 00:00:29,200
Then divide each half into 2.

11
00:00:29,200 --> 00:00:32,420
You would repeat this process until
you obtained the desired number of

12
00:00:32,420 --> 00:00:33,590
partitions.

13
00:00:33,590 --> 00:00:36,190
That's nice, but not very satisfying.

14
00:00:36,190 --> 00:00:39,140
After all,
how do you get two way partitions?

15
00:00:39,140 --> 00:00:41,550
We'll get there but
first let's build some more intuition.

16
00:00:42,680 --> 00:00:44,150
Now some graphs are special.

17
00:00:45,150 --> 00:00:47,060
For instance this graph is Planar.

18
00:00:47,060 --> 00:00:52,120
A Planar graph is one that can be drawn
in the plane with no edge crossings.

19
00:00:52,120 --> 00:00:54,530
So for
instance here's another Planar graph.

20
00:00:54,530 --> 00:00:57,520
By the way this thing is
supposed to be a tapir.

21
00:00:57,520 --> 00:01:00,870
For Planar graphs there's
a really neat theorem.

22
00:01:00,870 --> 00:01:05,330
If theorem is in fact due in part to
Georgia Tech's very own Dick Lipton.

23
00:01:05,330 --> 00:01:07,820
Anyway, the theorem goes like this.

24
00:01:07,820 --> 00:01:11,240
Given a graph with n vertices,
the theorem says that there's a way to

25
00:01:11,240 --> 00:01:14,540
partition the vertices
into 3 disjoint sets, A,

26
00:01:14,540 --> 00:01:19,160
B, and S, such that the following
super cool properties hold.

27
00:01:19,160 --> 00:01:22,910
The first one is that S
is a separator for V.

28
00:01:22,910 --> 00:01:26,860
That is, there are no edges that
directly connect A and B put

29
00:01:26,860 --> 00:01:31,440
differently, the subset of vertices S
acts as A kind of wall between A and B.

30
00:01:32,720 --> 00:01:35,740
In other words, if you take
the separator out of a connected graph,

31
00:01:35,740 --> 00:01:38,730
you get two or more connected subgraphs.

32
00:01:38,730 --> 00:01:41,390
That's the first property,
here is the second.

33
00:01:41,390 --> 00:01:46,360
Each of the subsets A and B have no
more than two-thirds n vertices each.

34
00:01:46,360 --> 00:01:48,250
That's really neat too.

35
00:01:48,250 --> 00:01:51,180
Because if one of the partitions
has at most 2/3 n vertices,

36
00:01:51,180 --> 00:01:54,020
then the other has at least 1/3.

37
00:01:54,020 --> 00:01:57,780
That in turn means that the larger of
the two partitions is no more than

38
00:01:57,780 --> 00:01:59,820
twice the size of the other.

39
00:01:59,820 --> 00:02:02,610
If the two partitions are within a
factor of two of each other then that's

40
00:02:02,610 --> 00:02:03,940
pretty balanced.

41
00:02:03,940 --> 00:02:08,639
Well, sort of, maybe if you crane your
neck a lot and look at a funny angle.

42
00:02:08,639 --> 00:02:12,360
Well a factor of two was good enough for
government work dag nab it.

43
00:02:12,360 --> 00:02:14,720
The third property is the neatest.

44
00:02:14,720 --> 00:02:19,180
It says that the size of the vertex
separator is about square root of N.

45
00:02:19,180 --> 00:02:23,120
For the grid or lattice graph,
this result should make intuitive sense.

46
00:02:23,120 --> 00:02:26,380
A natural separator for this grid
graph would be say, some row or

47
00:02:26,380 --> 00:02:28,350
some column of vertices.

48
00:02:28,350 --> 00:02:31,820
Such a row or column would
of course be root n in size.

49
00:02:31,820 --> 00:02:33,090
Now the existence of a plane or

50
00:02:33,090 --> 00:02:37,250
separator does not guarantee you can
minimize the edge cut efficiently.

51
00:02:37,250 --> 00:02:40,370
But keeping this lattice graph
in mind an algorithm that can

52
00:02:40,370 --> 00:02:44,340
find the separator should
heuristically find a decent partition.

53
00:02:44,340 --> 00:02:47,040
In fact Lipton and
Tarjan in their original paper described

54
00:02:47,040 --> 00:02:50,340
a polynomial time algorithm
to find such a separator.

55
00:02:50,340 --> 00:02:53,200
Anyway there's a ton of cool work
related to more general separator

56
00:02:53,200 --> 00:02:54,300
theorems.

57
00:02:54,300 --> 00:02:56,130
Head to the instructors notes for
some pointers.
