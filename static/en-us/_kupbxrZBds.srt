1
00:00:00,130 --> 00:00:01,280
Okay so now I want to pick this up

2
00:00:01,280 --> 00:00:04,390
and talk about the project operator. So a couple of

3
00:00:04,390 --> 00:00:07,720
things to note about project, we can use project to

4
00:00:07,720 --> 00:00:11,250
include fields from the original document. Remember that project works

5
00:00:11,250 --> 00:00:14,890
with data in a single document at a time. And

6
00:00:14,890 --> 00:00:18,980
we're essentially doing a shaping task with project. So the

7
00:00:18,980 --> 00:00:22,770
simplest form of shaping, is simply specifying which fields from

8
00:00:22,770 --> 00:00:25,280
each of the documents we're receiving in the stage using

9
00:00:25,280 --> 00:00:28,430
project, we would like to include and pass along

10
00:00:28,430 --> 00:00:30,650
to the next stage. One really cool thing we can

11
00:00:30,650 --> 00:00:33,860
do with project, is insert computed fields. So, for

12
00:00:33,860 --> 00:00:36,680
example, a ratio, which is what we're going to do

13
00:00:36,680 --> 00:00:39,270
for this particular example we're working through. We might

14
00:00:39,270 --> 00:00:42,860
also rename fields. And finally, we can do some pretty

15
00:00:42,860 --> 00:00:46,610
substantial reshaping of the data, by doing something like

16
00:00:46,610 --> 00:00:50,540
creating fields that hold subdocuments that are composed of what

17
00:00:50,540 --> 00:00:54,120
were originally top level fields in the documents,

18
00:00:54,120 --> 00:00:56,400
as they came into the stage using the project

19
00:00:56,400 --> 00:00:59,990
operator. So let's go back to our code,

20
00:00:59,990 --> 00:01:01,930
and look at how we're using project here. Remember,

21
00:01:01,930 --> 00:01:04,510
the problem we're trying to solve here is,

22
00:01:04,510 --> 00:01:07,540
addressing the question who has the highest followers to

23
00:01:07,540 --> 00:01:12,030
friends ratio? So here, it's pretty straight forward, we're

24
00:01:12,030 --> 00:01:15,430
simply pulling out the screen name field of the

25
00:01:15,430 --> 00:01:18,312
user sub-document. Okay? And again, we use this

26
00:01:18,312 --> 00:01:22,430
$ here, because rather than this being interpreted

27
00:01:22,430 --> 00:01:26,090
as just a string literal, we're telling mongoDB

28
00:01:26,090 --> 00:01:29,640
that we want the value. For each document

29
00:01:29,640 --> 00:01:32,510
that's found in the user sub-document and in

30
00:01:32,510 --> 00:01:36,300
the screen name field. Okay? So, in documents

31
00:01:36,300 --> 00:01:38,790
that get passed along from this particular stage,

32
00:01:38,790 --> 00:01:40,500
they will have a screen name field composed of

33
00:01:40,500 --> 00:01:43,180
that value for each document that we received

34
00:01:43,180 --> 00:01:46,530
as input here. Okay, now let's look at this

35
00:01:46,530 --> 00:01:49,690
portion of the projected stage here. So we're going

36
00:01:49,690 --> 00:01:51,640
to create a ratio field and documents that come

37
00:01:51,640 --> 00:01:55,170
out of this particular stage. And that ratio

38
00:01:55,170 --> 00:01:57,690
field is going to have the value of having

39
00:01:57,690 --> 00:02:00,660
divided the followers count by the friends count, so

40
00:02:00,660 --> 00:02:05,530
quite literally, calculating this ratio here. Again, remember friends,

41
00:02:05,530 --> 00:02:08,400
in the documents we're looking at here, are the

42
00:02:08,400 --> 00:02:11,670
number of people that I follow as opposed to

43
00:02:11,670 --> 00:02:14,570
people who follow me. Okay, so again, diving into

44
00:02:14,570 --> 00:02:17,390
the user sub-document, we're going to pull out the

45
00:02:17,390 --> 00:02:22,210
followers account, and the friends account. Again making use

46
00:02:22,210 --> 00:02:24,330
of the dollar operator here to indicate we actually

47
00:02:24,330 --> 00:02:26,990
want the values of each of these. And then

48
00:02:26,990 --> 00:02:30,620
we're going to use the divide operator to calculate the

49
00:02:30,620 --> 00:02:34,210
ratio of these two values. It's that value

50
00:02:34,210 --> 00:02:36,660
then, that will make up the value of the

51
00:02:36,660 --> 00:02:40,610
ratio field in each document that gets passed

52
00:02:40,610 --> 00:02:44,790
along from this stage using the project operator. Okay,

53
00:02:44,790 --> 00:02:46,670
so when we get to this stage all

54
00:02:46,670 --> 00:02:49,970
documents will have exactly two fields: ratio and screen

55
00:02:49,970 --> 00:02:52,350
name. And then we're simply going to sort in

56
00:02:52,350 --> 00:02:55,450
descending order based on ratio, and then of course,

57
00:02:55,450 --> 00:02:58,350
limit to just the very first document that

58
00:02:58,350 --> 00:03:02,880
we see. So let's run this. Okay, and again.

59
00:03:02,880 --> 00:03:04,440
Our output from an aggregation inquiry is always

60
00:03:04,440 --> 00:03:07,210
a single document. The results we're really interested in

61
00:03:07,210 --> 00:03:12,740
are always in the result field, which is an array value field. Okay? So,

62
00:03:12,740 --> 00:03:17,650
in this case, user in our tweets collection that has the highest

63
00:03:17,650 --> 00:03:22,360
followers to friends ratio, is a user called Twitterific.

64
00:03:22,360 --> 00:03:25,670
' Kay, turns out this is actually a Twitter application,

65
00:03:25,670 --> 00:03:28,590
and even today if you look at Twitterific's page on Twitter,

66
00:03:28,590 --> 00:03:31,120
you'll see that they have something on the order of nearly

67
00:03:31,120 --> 00:03:34,020
half a million followers. But they only follow about 14 people,

68
00:03:34,020 --> 00:03:38,120
so their followers to friends count ratio is still extremely high.

69
00:03:38,120 --> 00:03:40,800
So again, in this example, we focused on the $ match

70
00:03:40,800 --> 00:03:44,740
operator, which is just a filter, the $project operator, which is

71
00:03:44,740 --> 00:03:47,410
a shaping operator, we actually have lots of things that we

72
00:03:47,410 --> 00:03:51,210
can do here. And the sort and limit operators. So

73
00:03:51,210 --> 00:03:54,600
in this case we've got four stages of our pipeline.

74
00:03:54,600 --> 00:03:56,380
Now one thing before I wrap this up, is I

75
00:03:56,380 --> 00:03:58,380
just want to quickly point out that we can build a

76
00:03:58,380 --> 00:04:02,800
variety of expressions using the Project operator. If we take

77
00:04:02,800 --> 00:04:05,180
a look at the MongoDB documentation, there are a number

78
00:04:05,180 --> 00:04:08,120
of arithmetic operators that we can apply, as well as

79
00:04:08,120 --> 00:04:12,370
a number of string operators, date operators and so on.

80
00:04:12,370 --> 00:04:17,529
So this is the aggregation expression operators page in the docs. I encourage

81
00:04:17,529 --> 00:04:20,649
you to look here for more information on the different types of operators

82
00:04:20,649 --> 00:04:23,590
that are available to you when working with Project, as well as the

83
00:04:23,590 --> 00:04:26,430
other aggregation framework operators. See the instructor

84
00:04:26,430 --> 00:04:27,740
notes for a link to this page.
