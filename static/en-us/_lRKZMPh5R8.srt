1
00:00:00,000 --> 00:00:03,000
Okay. So we have our Escape HTML function.

2
00:00:03,000 --> 00:00:05,000
Let's go ahead and use it in practice.

3
00:00:05,000 --> 00:00:08,000
So what we're going to do is--we're in our write_form function--

4
00:00:08,000 --> 00:00:10,000
when we print out values that came from the user,

5
00:00:10,000 --> 00:00:12,000
we want to make sure they're Escaped

6
00:00:12,000 --> 00:00:14,000
so we want to call it on everything that came from the user.

7
00:00:14,000 --> 00:00:17,000
So we've called our escape_html function

8
00:00:17,000 --> 00:00:20,000
on each of these variables that came from the user

9
00:00:20,000 --> 00:00:24,000
and so now, when we render the form back to the user,

10
00:00:24,000 --> 00:00:28,000
we'll have these new Escaped versions of their .

11
00:00:28,000 --> 00:00:30,000
Okay. So here we are in our browser.

12
00:00:30,000 --> 00:00:33,000
Let's go ahead and enter some broken text.

13
00:00:33,000 --> 00:00:36,000
We'll enter the same broken text we entered before,

14
00:00:36,000 --> 00:00:40,000
starting with a quote and the other ones are just normal stuff for here.

15
00:00:40,000 --> 00:00:43,000
And now when we submit our form,

16
00:00:43,000 --> 00:00:46,000
we get our error message and our HTML isn't totally broken.

17
00:00:46,000 --> 00:00:48,000
Remember, the Escaped versions of strings

18
00:00:48,000 --> 00:00:53,000
render as the unescaped versions in the form.

19
00:00:53,000 --> 00:00:55,000
So, in reality, our HTML said:

20
00:00:55,000 --> 00:01:01,000
&" &>&

21
00:01:01,000 --> 00:01:03,000
You get the picture.

22
00:01:03,000 --> 00:01:05,000
But when the browser renders it, it looks totally normal.

23
00:01:05,000 --> 00:01:07,000
Now we've got our error handling pretty solid.

24
00:01:07,000 --> 00:01:09,000
You can type in all sorts of garbage into these fields,

25
00:01:09,000 --> 00:01:11,000
and we get an error message.

26
00:01:11,000 --> 00:01:15,000
And when you type in the correct answer, it says it works.

27
00:01:15,000 --> 00:01:17,000
So let's type in the correct answer--

28
00:01:17,000 --> 00:01:19,000
and now that we've got the error case handled pretty good,

29
00:01:19,000 --> 00:01:22,000
let's handle the success case a little bit better.

30
00:01:22,000 --> 00:01:24,000
So we type in a valid date

31
00:01:24,000 --> 00:01:26,000
and we click Submit--

32
00:01:26,000 --> 00:01:28,000
and we get our Success message.

33
00:01:28,000 --> 00:01:33,000
But this page has a major limitation.

34
00:01:33,000 --> 00:01:35,000
The first is that we can't link to it.

35
00:01:35,000 --> 00:01:37,000
If we try to link to this page--

36
00:01:37,000 --> 00:01:40,000
if I want to say hey--to my friend--

37
00:01:40,000 --> 00:01:42,000
look at how good I am at entering dates

38
00:01:42,000 --> 00:01:44,000
and here's a URL to prove it,

39
00:01:44,000 --> 00:01:46,000
I can't share this URL because if I share it

40
00:01:46,000 --> 00:01:51,000
he just gets an empty form and he doesn't get to see how good a job I did.

41
00:01:51,000 --> 00:01:55,000
So let's submit this again.

42
00:01:55,000 --> 00:01:59,000
The other problem this page has--if I want to Reload it

43
00:01:59,000 --> 00:02:02,000
my browser says hey, do you want to resubmit this form?

44
00:02:02,000 --> 00:02:06,000
That's because we're Reloading a page that was drawn with a POST.

45
00:02:06,000 --> 00:02:08,000
And if you Reload a page that's drawn with a POST,

46
00:02:08,000 --> 00:02:11,000
the browser says hey, should I do that POST again?

47
00:02:11,000 --> 00:02:13,000
That's what this dialogue box is

48
00:02:13,000 --> 00:02:16,000
and just about all of your browsers will have some message

49
00:02:16,000 --> 00:02:18,000
that basically says that same thing--

50
00:02:18,000 --> 00:02:20,000
do you want to resubmit this form?

51
00:02:20,000 --> 00:02:22,000
And if you click Continue, it runs our application again,

52
00:02:22,000 --> 00:02:24,000
and it draws this messages again.

53
00:02:24,000 --> 00:02:26,000
That's not quite the behavior we want.

54
00:02:26,000 --> 00:02:30,000
This is annoying, for a couple of reasons.
