1
00:00:00,280 --> 00:00:02,950
Here's how I implemented
the Reward Method.

2
00:00:02,950 --> 00:00:07,939
According to the RewardFunction
documentation, the method takes a state,

3
00:00:07,939 --> 00:00:12,880
a grounded action, and another state,
representing the state before

4
00:00:12,880 --> 00:00:18,310
the action, the action taken, and
the state entered after the action.

5
00:00:18,310 --> 00:00:22,950
And the method need to return a double
In our state diagram, notice that

6
00:00:22,950 --> 00:00:28,360
we only have one action leaving each
state, except for the initial state.

7
00:00:28,360 --> 00:00:30,860
Also, each action is deterministic.

8
00:00:30,860 --> 00:00:33,250
Each will lead to exactly
one possible state.

9
00:00:34,280 --> 00:00:37,120
Finally, all the actions coming
out of the initial state

10
00:00:37,120 --> 00:00:39,680
have the same reward, zero.

11
00:00:39,680 --> 00:00:42,650
So the reward function
in this particular MDP

12
00:00:42,650 --> 00:00:46,980
will only depend on the state
the agent is in before its action.

13
00:00:46,980 --> 00:00:50,650
Therefore, it's fine to just perform
a check on the argument s and

14
00:00:50,650 --> 00:00:53,670
to disregard the arguments a and sprime.

15
00:00:53,670 --> 00:00:58,290
Here I use the static getNodeId
method of the GraphDefinedDomain

16
00:00:58,290 --> 00:01:03,090
class to retrieve the ID of the state
the agent is in before acting,

17
00:01:03,090 --> 00:01:07,170
then based on the state ID,
I return the appropriate reward.

18
00:01:07,170 --> 00:01:09,460
In States 0 and 3, the reward is 0.

19
00:01:09,460 --> 00:01:12,050
In State 1, the reward is p1.

20
00:01:12,050 --> 00:01:14,350
In State 2, the reward is p2.

21
00:01:14,350 --> 00:01:19,740
In State 4, the reward is p3,
and in State 5, the reward is p4.

22
00:01:21,270 --> 00:01:25,000
Finally, I include a run time
exception after my check

23
00:01:25,000 --> 00:01:29,410
in the case that a state ID outside
of the range zero to five occurs.

24
00:01:29,410 --> 00:01:30,830
This isn't a requirement for

25
00:01:30,830 --> 00:01:34,750
the method to work correctly, though it
can be useful for debugging purposes.
