1
00:00:00,250 --> 00:00:05,376
So adding attributes to instances like we did here works okay. But it doesn't

2
00:00:05,376 --> 00:00:09,090
really give us what we wanted with types. We want types to be generally useful.

3
00:00:09,090 --> 00:00:12,240
We don't want to have to manually add all the attributes every time we create a

4
00:00:12,240 --> 00:00:15,756
new instance. We want them to be really part of the type. So the way to do this

5
00:00:15,756 --> 00:00:20,251
is to add code to the class definition itself. Remember, we define the class?

6
00:00:20,251 --> 00:00:24,747
And, defining a method is just like defining a procedure. The difference is it's

7
00:00:24,747 --> 00:00:29,080
done inside a class. The syntax is the same, so let's try moving our display

8
00:00:29,080 --> 00:00:33,659
restaurant procedure in to the restaurant class. So here's what we had before.

9
00:00:33,659 --> 00:00:37,883
We just moved this inside the class, so now, its indented as a block inside the

10
00:00:37,883 --> 00:00:40,988
class. I'm going to make one change to it, since now, it's inside the restaurant

11
00:00:40,988 --> 00:00:45,784
class. We don't really need to have the name restaurant as part of it, so I'm

12
00:00:45,784 --> 00:00:49,762
going to remove the restaurant there. And I'm going to also add a doc string,

13
00:00:49,762 --> 00:00:54,806
that's just good programming practice. That, all display does is print out some

14
00:00:54,806 --> 00:00:59,324
information about the restaurant. So now, let's try that, and we're going to

15
00:00:59,324 --> 00:01:03,540
actually be in for surprise. Turns out, it's actually quite a pleasant surprise.

16
00:01:03,540 --> 00:01:09,499
But, let's see if you can follow along what happens. So let's try that. And we

17
00:01:09,499 --> 00:01:15,645
can see that there is a display attribute. That was defined as part of the

18
00:01:15,645 --> 00:01:20,475
restaurant object, because this definition inside the class. And we can see what

19
00:01:20,475 --> 00:01:23,507
it is, is a method. Doesn't tell us too much about the method, but it is a

20
00:01:23,507 --> 00:01:29,081
method. And let's try and call it. And it takes one input will pass the

21
00:01:29,081 --> 00:01:32,730
mcdowells. We're going to see that we didn't actually want to do that. So,

22
00:01:32,730 --> 00:01:37,532
here's what happens, that we actually get an error. And the error we get is that

23
00:01:37,532 --> 00:01:43,158
it says it takes exactly one argument, but there were two given. Hm, I don't see

24
00:01:43,158 --> 00:01:49,201
two arguments, I only see one. Well, this is a shortcut that we get with

25
00:01:49,201 --> 00:01:54,713
methods. And, the shortcut we get is the first argument is actually this one,

26
00:01:54,713 --> 00:01:59,162
it's the one before the name of the method. So here's what's going on here. If

27
00:01:59,162 --> 00:02:03,188
we have an object followed by a dot, followed by an attribute, which is the

28
00:02:03,188 --> 00:02:07,486
method, and we pass in parameters. What that really means is that we're calling

29
00:02:07,486 --> 00:02:12,210
this method with the first parameter already bound to this object. So there's a

30
00:02:12,210 --> 00:02:16,104
little bit of magic, which is that the parameter's already bound to the object,

31
00:02:16,104 --> 00:02:19,815
but otherwise, it's just like a normal procedure call. So let's look more

32
00:02:19,815 --> 00:02:24,000
closely at what the value of the mcdowells.display attribute is. It's a bound

33
00:02:24,000 --> 00:02:29,148
method, and that means it's already got its first input bound, and it's bound to

34
00:02:29,148 --> 00:02:33,950
the object that was created so this is the restaurant object. If we look at

35
00:02:33,950 --> 00:02:38,670
McDowell's, that's exactly the object that it's bound to. These values here

36
00:02:38,670 --> 00:02:42,208
don't really mean anything other than they allow us to uniquely identify

37
00:02:42,208 --> 00:02:47,295
objects. So we can see that it's bound to the same object as McDowell's. And

38
00:02:47,295 --> 00:02:52,310
now, if we call it, we only need to pass in no parameters, since the first

39
00:02:52,310 --> 00:02:57,218
parameters is the one that's already bound. And now, we still get an error, we

40
00:02:57,218 --> 00:03:02,206
get an attribute error, because our object has no name attribute. We need to

41
00:03:02,206 --> 00:03:07,544
give it one. And now, when we call the display method, we add an attribute to

42
00:03:07,544 --> 00:03:11,966
this object. We didn't change the object. So, display is still bound to the same

43
00:03:11,966 --> 00:03:16,394
object we created, which now has a name attribute. And now display, prints out

44
00:03:16,394 --> 00:03:18,409
McDowell's Mansion of Meatiness.
