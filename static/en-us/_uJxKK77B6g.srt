1
00:00:00,008 --> 00:00:05,838
In your pseudocode, you may want to write a computation. Such as the total cost

2
00:00:05,838 --> 00:00:10,625
equals purchase price, plus the cost of gas. You might want to have a decision.

3
00:00:10,625 --> 00:00:15,895
If the total cost 1 is less than the total cost 2 to one thing, else to another

4
00:00:15,895 --> 00:00:22,285
thing. You might want to repeat certain steps. While the bank balance is less

5
00:00:22,285 --> 00:00:28,272
than your target, or repeat some actions say, ten times. Those are the three

6
00:00:28,272 --> 00:00:32,040
essential elements of pseudocode. Computations or other actions without any

7
00:00:32,040 --> 00:00:37,860
regard of the syntax of a particular programming language. When you're doing

8
00:00:37,860 --> 00:00:41,188
programming there are two things that you need to learn, that's syntax of the

9
00:00:41,188 --> 00:00:47,222
programming language and how to solve problems. And we'll do this in parallel

10
00:00:47,222 --> 00:00:51,680
on two tracks. In the next lesson, you'll learn quite a bit more about how to

11
00:00:51,680 --> 00:00:55,408
work with the programming language. But right now lets learn a little bit more

12
00:00:55,408 --> 00:00:59,220
about algorithms, pseudocode, and problem solving. You've just seen an

13
00:00:59,220 --> 00:01:02,814
algorithms that manipulated numbers to give you a useful answer. But I thought

14
00:01:02,814 --> 00:01:05,424
it would be more fun to show here a few example that don't have to do with

15
00:01:05,424 --> 00:01:11,170
numbers. So here is Robbie our home robot. A robot is a computer too, it

16
00:01:11,170 --> 00:01:16,132
carries out tasks and one has to program it to do the right thing. Right now

17
00:01:16,132 --> 00:01:21,080
Robbie's task is. To clean up a bunch of legos, Robbie needs to put all the

18
00:01:21,080 --> 00:01:25,795
blue legos before all the yellow legos. Here's our first attempt at an

19
00:01:25,795 --> 00:01:30,426
algorithm. It's a sequence of steps. Robbie will wave his magic wand and he

20
00:01:30,426 --> 00:01:36,246
will say, make it so. Well, that's not really going to work. An algorithm has

21
00:01:36,246 --> 00:01:41,440
to be executable. And not involve magic steps. Our pseudocode, here, asks

22
00:01:41,440 --> 00:01:47,750
Robbie to repeatedly execute these statements. Namely, why all the blocks are

23
00:01:47,750 --> 00:01:53,010
not yet in order. Each time, Robbie is supposed to scan the sequence of blocks.

24
00:01:53,010 --> 00:01:58,055
Find the first one that's yellow before blue one, and swap. So Robbie would go

25
00:01:58,055 --> 00:02:02,558
along starting at the left, until it finds the yellow one before blue one. Swap

26
00:02:02,558 --> 00:02:06,513
the two. And then it would do it again. In the next step, it would scan from

27
00:02:06,513 --> 00:02:09,876
the left until it finds the yellow one before blue one and swap them, and

28
00:02:09,876 --> 00:02:15,240
again. Now I'd like you to try this. If I write a b for blue and a y for

29
00:02:15,240 --> 00:02:19,580
yellow, tell me the sequence of the blocks after the next slot, and the next

30
00:02:19,580 --> 00:02:22,499
one after that.
