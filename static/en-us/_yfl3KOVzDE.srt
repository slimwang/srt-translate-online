1
00:00:00,000 --> 00:00:02,000
This is the structure of the machine.

2
00:00:02,000 --> 00:00:09,000
Each letter of the message would be divided into 5 bits, and those would be XOR'd

3
00:00:09,000 --> 00:00:13,000
with the value coming from the corresponding K wheel.

4
00:00:13,000 --> 00:00:18,000
These wheels would rotate with each letter,

5
00:00:18,000 --> 00:00:21,000
and at each position they either had a 0 or a 1,

6
00:00:21,000 --> 00:00:25,000
depending on whether there was a pin in that position or not.

7
00:00:25,000 --> 00:00:29,000
Each wheel had a different size.

8
00:00:29,000 --> 00:00:34,000
The last one had 23. The first one had 41. They were different-sized wheels.

9
00:00:34,000 --> 00:00:40,000
This would also be XOR'd with the result from the S wheels,

10
00:00:40,000 --> 00:00:42,000
which worked similarly.

11
00:00:42,000 --> 00:00:46,000
They also had positions that were either 0s or 1s around the wheels.

12
00:00:46,000 --> 00:00:49,000
The different was the K wheels turned every character.

13
00:00:49,000 --> 00:00:54,000
The S wheels only turned conditionally on the result of 2 other wheels,

14
00:00:54,000 --> 00:00:59,000
which were the M wheels. The M1 wheel would turn every time.

15
00:00:59,000 --> 00:01:03,000
The M2 wheel would rotate depending on the value of the M1 wheel

16
00:01:03,000 --> 00:01:06,000
and depending on the XOR of those, either all the S wheels

17
00:01:06,000 --> 00:01:09,000
would rotate by 1 or none of them would.

18
00:01:09,000 --> 00:01:14,000
Then the result of all these XORs is the cipher text.

19
00:01:14,000 --> 00:01:17,000
The is similar to the idea behind a one-time pat.

20
00:01:17,000 --> 00:01:21,000
We're XORing message with key.

21
00:01:21,000 --> 00:01:25,000
But the key is not a perfectly random sequence. It's the key generated by this machine.

22
00:01:25,000 --> 00:01:29,000
To break the cipher, once you knew the structure of the machine, that's not enough.

23
00:01:29,000 --> 00:01:31,000
You need to know the initial configuration.

24
00:01:31,000 --> 00:01:35,000
Here's the intercepted message that was intercepted over the radio.

25
00:01:35,000 --> 00:01:39,000
We can think of all the characters in the message.

26
00:01:39,000 --> 00:01:42,000
The important thing to remember about the Lorenz cipher

27
00:01:42,000 --> 00:01:48,000
is that the message encoding each character--each character is encoded into 5 bits,

28
00:01:48,000 --> 00:01:50,000
using the Baudot code.

29
00:01:50,000 --> 00:01:54,000
The cipher text is in these same sequences where each cipher text bit

30
00:01:54,000 --> 00:01:57,000
corresponds to one bit of that letter.

31
00:01:57,000 --> 00:02:00,000
The next one corresponds to the next bit of that letter.

32
00:02:00,000 --> 00:02:04,000
We can think of the cipher text being broken into channels

33
00:02:04,000 --> 00:02:08,000
corresponding to each part of the letter.

34
00:02:08,000 --> 00:02:14,000
That means each channel would be the sequences that repeat every 5.

35
00:02:14,000 --> 00:02:18,000
This would be part of the first letter, part of the first letter.

36
00:02:18,000 --> 00:02:20,000
This would be the second part of the first letter.

37
00:02:20,000 --> 00:02:22,000
This would be the second part of the second letter.

38
00:02:22,000 --> 00:02:24,000
And this would be the third part of the first letter.

39
00:02:24,000 --> 00:02:29,000
This would be the third part of the second letter and so on.

40
00:02:29,000 --> 00:02:32,000
We can think of each of these as a separate channel.

41
00:02:32,000 --> 00:02:34,000
What we're going to do is use a new notation.

42
00:02:34,000 --> 00:02:40,000
We're going to subscript Z by channel and the letter for that channel.

43
00:02:40,000 --> 00:02:45,000
Zc sub i is the ith letter for channel c.

44
00:02:45,000 --> 00:02:55,000
In terms of this mapping, if we look at channel 0, that's going to be Z0, Z5, Z10.

45
00:02:55,000 --> 00:02:58,000
We can just break the cipher text up into channels.

46
00:02:58,000 --> 00:03:05,000
The key reason for doing this is because of this weakness that was noticed in the cipher.

47
00:03:05,000 --> 00:03:10,000
The key weakness is that all these S wheels move in turn.

48
00:03:10,000 --> 00:03:14,000
Either when we advance one position

49
00:03:14,000 --> 00:03:18,000
they're the same for all the channels or they advance by one for all the channels.

50
00:03:18,000 --> 00:03:23,000
The value of each of these depends on the message.

51
00:03:23,000 --> 00:03:27,000
It also depends on the outputs of the K wheels,

52
00:03:27,000 --> 00:03:32,000
and it is also XOR'd without outputs of the S wheels.

53
00:03:32,000 --> 00:03:36,000
By separating it into those three pieces, we're going to be able to take advantage

54
00:03:36,000 --> 00:03:39,000
of the properties that they have.

55
00:03:39,000 --> 00:03:42,000
The key insight is that the S wheels don't always turn.

56
00:03:42,000 --> 00:03:45,000
If we look at subsequent characters,

57
00:03:45,000 --> 00:03:49,000
there's a good chance that the S wheels have not changed.

58
00:03:49,000 --> 00:03:53,000
We're going to define ΔZ sub c, i

59
00:03:53,000 --> 00:03:58,000
as the difference between 2 subsequent characters in the cipher text for that channel.

60
00:03:58,000 --> 00:04:03,000
That's XOR'd with Zc of i plus 1.

61
00:04:03,000 --> 00:04:08,000
Now because this is for that channel, these are five-characters apart

62
00:04:08,000 --> 00:04:13,000
in the intercepted cipher text, but they're adjacent for that channel.

63
00:04:13,000 --> 00:04:17,000
What happens when we look at these values for two different channels?

64
00:04:17,000 --> 00:04:20,000
We're going to look at channel 0,

65
00:04:20,000 --> 00:04:24,000
and we're going to XOR that with the delta value for channel 1.

66
00:04:24,000 --> 00:04:31,000
Plugging in the definitions, that's just the result of Z XORing all of these values.

67
00:04:31,000 --> 00:04:36,000
Where this becomes valuable is because we can break these down into the three parts.

68
00:04:36,000 --> 00:04:42,000
Let's break them own into parts, separating the M, the K, and the S parts

69
00:04:42,000 --> 00:04:45,000
that combined into this cipher text.

70
00:04:45,000 --> 00:04:48,000
What we get is these three things.

71
00:04:48,000 --> 00:04:56,000
For the message bits we have the XORs of all the message bits for the two channels adjacent

72
00:04:56,000 --> 00:04:59,000
and the key bits XOR'd with the message bits.

73
00:04:59,000 --> 00:05:01,000
Then we have this for the S bits as well.

74
00:05:01,000 --> 00:05:03,000
I want to ask a brief quiz here.

75
00:05:03,000 --> 00:05:13,000
For each of these combinations--this is Δm, ΔK, and ΔS.

76
00:05:13,000 --> 00:05:16,000
Supposing we could separate each of those, the question is which of these

77
00:05:16,000 --> 00:05:18,000
inequalities are likely to be true.

78
00:05:18,000 --> 00:05:25,000
Each one we're asking whether the probability of that part being 0 is greater than 1/2.

79
00:05:25,000 --> 00:05:29,000
If it was a uniform distribution, the probability would be equal to 1/2.

80
00:05:29,000 --> 00:05:35,000
If it's not uniformly distributed, then the probability could be less than or greater than 1/2.

81
00:05:35,000 --> 00:05:39,000
I'm asking here are there any of these that we can be confident--

82
00:05:39,000 --> 00:05:44,000
or at least have a good likelihood --that the probability of the delta for the component

83
00:05:44,000 --> 00:05:46,000
is equal to zero.

84
00:05:46,000 --> 00:05:48,000
Let me remind you what the components are.

85
00:05:48,000 --> 00:05:54,000
The message is text in a language, and in this case it's in the language German.

86
00:05:54,000 --> 00:05:58,000
These are the K wheels. Each wheel rotates with every character.

87
00:05:58,000 --> 00:06:02,000
They have pins around the wheels deciding if it's a 0 or a 1.

88
00:06:02,000 --> 00:06:04,000
These are the S wheels.

89
00:06:04,000 --> 00:06:09,000
The S wheels rotate only when the output of the M wheels is a 1.

90
00:06:09,000 --> 99:59:59,999
Sometimes they don't rotate at all. Sometimes they all rotate at the same time.
