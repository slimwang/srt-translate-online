1
00:00:00,000 --> 00:00:02,980
What this means is not for any given number of variables,

2
00:00:02,980 --> 00:00:05,030
we can write a Boolean formula

3
00:00:05,030 --> 00:00:08,430
that can be satisfied

4
00:00:08,430 --> 00:00:12,530
if and only if exactly what one of these variables is set to true,

5
00:00:12,530 --> 00:00:16,110
and we figure out that we can do this for any number of variables that we want.

6
00:00:16,110 --> 00:00:19,640
So now let's go back to snapshots

7
00:00:19,640 --> 00:00:22,230
and see what the Boolean formula

8
00:00:22,230 --> 00:00:25,090
that I just showed you has to do with these snapshots.

9
00:00:25,090 --> 00:00:28,130
Each snapshot, as we've said, basically consists of

10
00:00:28,130 --> 00:00:30,840
3 components, so we have the read only number here,

11
00:00:30,840 --> 00:00:32,119
which is basically the input.

12
00:00:32,119 --> 00:00:35,390
We have program, and we have the read-write memory

13
00:00:35,390 --> 00:00:38,200
for immediate results and output.

14
00:00:38,200 --> 00:00:43,330
So now let's think back a moment of how we defined the RAM.

15
00:00:43,330 --> 00:00:45,740
When we defined the RAM in the last unit,

16
00:00:45,740 --> 00:00:47,370
what we said was the following.

17
00:00:47,370 --> 00:00:50,230
We said that whenever we're talking about memory,

18
00:00:50,230 --> 00:00:52,480
so this part here or this part here,

19
00:00:52,480 --> 00:00:55,450
then every single cell in the memory can not hold

20
00:00:55,450 --> 00:00:57,920
arbitrarily large variables,

21
00:00:57,920 --> 00:00:59,720
which means, for example, that

22
00:00:59,720 --> 00:01:02,100
this cell here could either be 0;

23
00:01:02,100 --> 00:01:05,040
it could be 1, it could be 2, and so on,

24
00:01:05,040 --> 00:01:08,490
but there's a certain limit of how large those values here can be,

25
00:01:08,490 --> 00:01:11,330
just as with your novel computer programs, too.

26
00:01:11,330 --> 00:01:13,630
They can carry very, very large numbers

27
00:01:13,630 --> 00:01:15,090
but there's a limit

28
00:01:15,090 --> 00:01:17,230
and that limit is some constant,

29
00:01:17,230 --> 00:01:20,310
so I'll just write c here, so if you have an 8-bit computer,

30
00:01:20,310 --> 00:01:23,270
that constant will be smaller, of course, than if you have a 16-bit computer

31
00:01:23,270 --> 00:01:25,360
and so on, but in any case,

32
00:01:25,360 --> 00:01:28,010
it will be some constant determined by the machine,

33
00:01:28,010 --> 00:01:30,800
and the same thing is going to be true all along the memory.

34
00:01:30,800 --> 00:01:33,850
So for each single memory cell

35
00:01:33,850 --> 00:01:35,600
that you have here,

36
00:01:35,600 --> 00:01:37,650
you have a constant number of possibilities

37
00:01:37,650 --> 00:01:40,050
for the values that this memory cell can take,

38
00:01:40,050 --> 00:01:43,250
so the size here is constant,

39
00:01:43,250 --> 00:01:45,170
and here, it's polynomial in n,

40
00:01:45,170 --> 00:01:46,850
as we figured out before.

41
00:01:46,850 --> 00:01:48,320
Now what about the program?

42
00:01:48,320 --> 00:01:50,470
So for the program, we said that,

43
00:01:50,470 --> 00:01:53,150
of course the size of the program of the algorithm

44
00:01:53,150 --> 00:01:56,110
does not change with the size of the input,

45
00:01:56,110 --> 00:01:59,250
so if you look at the program and your write it

46
00:01:59,250 --> 00:02:02,790
as we said, we've written the code from left to right,

47
00:02:02,790 --> 00:02:04,810
but normally, you'll write it from top to bottom,

48
00:02:04,810 --> 00:02:07,270
so if you took this code and wrote it like this,

49
00:02:07,270 --> 00:02:11,490
then you would have a constant number of lines in your program

50
00:02:11,490 --> 00:02:14,240
and that would be a certain position on where you are,

51
00:02:14,240 --> 00:02:16,290
so again here,

52
00:02:16,290 --> 00:02:19,810
there's a constant number of potential positions where you can be in the code,

53
00:02:19,810 --> 00:02:21,800
and of course, you just have one code,

54
00:02:21,800 --> 00:02:24,350
so there's no polynomial size here.

55
00:02:24,350 --> 00:02:27,120
It's just a constant number of code lines.

56
00:02:27,120 --> 00:02:29,590
And finally, over here fr the input;

57
00:02:29,590 --> 00:02:32,440
of course this is read only, but what I'm interested in

58
00:02:32,440 --> 00:02:35,680
is again the possible number of states

59
00:02:35,680 --> 00:02:37,720
that you can have in each of these memory cells,

60
00:02:37,720 --> 00:02:40,710
and that again is the same constant as over here,

61
00:02:40,710 --> 00:02:44,000
and here we have again a polynomial in n,

62
00:02:44,000 --> 00:02:48,890
so what does this have to do with the Boolean formula that I just showed you?

63
00:02:48,890 --> 00:02:52,610
Well, what we could do is turn this into a Boolean formula

64
00:02:52,610 --> 00:02:54,400
with a huge number of variables,

65
00:02:54,400 --> 00:02:57,760
but you will see that the number of variables is still polynomial.

66
00:02:57,760 --> 00:03:00,080
So what are my variables going to be?

67
00:03:00,080 --> 00:03:02,920
I'm going to have one variable

68
00:03:02,920 --> 00:03:06,860
for each of those black boxes here

69
00:03:06,860 --> 00:03:09,110
and also one variable for each of these here,

70
00:03:09,110 --> 00:03:11,850
and so on, and so on, and so on.

71
00:03:11,850 --> 00:03:13,230
I'm going to have

72
00:03:13,230 --> 00:03:17,930
one variable for all of the possibilities

73
00:03:17,930 --> 00:03:20,150
where I could be in my program code,

74
00:03:20,150 --> 00:03:23,920
and again here I'm going to do the same thing as I did here on the left side.

75
00:03:23,920 --> 00:03:26,950
I will have one Boolean variable

76
00:03:26,950 --> 00:03:29,220
for each of those possibilities,

77
00:03:29,220 --> 00:03:32,180
and what one of those Boolean variables means is

78
00:03:32,180 --> 00:03:34,750
basically--or what I want it to mean is

79
00:03:34,750 --> 00:03:36,710
if it's set to true,

80
00:03:36,710 --> 00:03:39,450
it tells me that

81
00:03:39,450 --> 00:03:41,440
a memory cell contains that value,

82
00:03:41,440 --> 00:03:44,780
so if this variable here is set to true,

83
00:03:44,780 --> 00:03:49,480
I want that memory cell up here to contain the value 0.

84
00:03:49,480 --> 00:03:52,990
If it's set to 1, I want this one here to contain the value 1.

85
00:03:52,990 --> 00:03:58,140
If it's set to 2, I want this one here to have the value 2, and so on.

86
00:03:58,140 --> 00:04:02,120
And now you see why the Boolean formula that I just showed you

87
00:04:02,120 --> 00:04:06,700
where you can force just exactly one single variable to be true

88
00:04:06,700 --> 00:04:08,530
is useful in this case,

89
00:04:08,530 --> 00:04:11,640
because if I put all of these variables here

90
00:04:11,640 --> 00:04:13,970
into such a Boolean formula,

91
00:04:13,970 --> 00:04:16,620
I would have a Boolean formula that can be satisfied

92
00:04:16,620 --> 00:04:18,329
if and only if

93
00:04:18,329 --> 00:04:21,040
exactly one of those variables here is true,

94
00:04:21,040 --> 00:04:23,700
so it tells me

95
00:04:23,700 --> 00:04:26,300
uniquely what goes into this memory cell here

96
00:04:26,300 --> 00:04:28,400
as long as it's satisfied,

97
00:04:28,400 --> 00:04:31,400
and the same thing over here, and over here, and over here.

98
00:04:31,400 --> 00:04:33,310
And now

99
00:04:33,310 --> 00:04:37,270
if I write this Boolean formula for this memory cell here,

100
00:04:37,270 --> 00:04:41,090
I write it for this memory cell here, here of course also,

101
00:04:41,090 --> 00:04:43,290
and so on,

102
00:04:43,290 --> 00:04:46,040
and if I combine all of those Boolean formulas,

103
00:04:46,040 --> 00:04:47,860
so I have a Boolean formula here,

104
00:04:47,860 --> 00:04:50,490
I have a Boolean formula here,

105
00:04:50,490 --> 00:04:52,980
I have one here,

106
00:04:52,980 --> 00:04:55,270
from this column,

107
00:04:55,270 --> 00:04:57,400
from this column,

108
00:04:57,400 --> 00:04:59,530
from this column, and so on.

109
00:04:59,530 --> 00:05:01,620
So I have Boolean formula,

110
00:05:01,620 --> 00:05:03,240
and then I do an and,

111
00:05:03,240 --> 00:05:05,670
and I have the next Boolean formula, and I have an and,

112
00:05:05,670 --> 00:05:08,960
and I have the next Boolean formula,

113
00:05:08,960 --> 00:05:12,820
and I continue doing this, and I will also do this here for the program.

114
00:05:12,820 --> 99:59:59,999
And of course, I will get a very, very, very large Boolean formula.
