1
00:00:00,180 --> 00:00:02,430
Okay awesome, you've handled Load and

2
00:00:02,430 --> 00:00:05,510
considered what you might do
during periods of idle time.

3
00:00:05,510 --> 00:00:06,670
But what next?

4
00:00:06,670 --> 00:00:09,250
Well, the user's going to
interact with the app, and

5
00:00:09,250 --> 00:00:11,000
you need to be responsive to that.

6
00:00:11,000 --> 00:00:14,250
This isn't responsive in the sense that
it responds to screens of different

7
00:00:14,250 --> 00:00:15,240
sizes.

8
00:00:15,240 --> 00:00:20,020
This is responsive in the sense that it
reacts to the user input without delay.

9
00:00:20,020 --> 00:00:22,270
Well how responsive does
it need to be then?

10
00:00:22,270 --> 00:00:26,840
Well, studies show that there
is a limit of 100 milliseconds.

11
00:00:26,840 --> 00:00:30,720
So a tenth of a second after
someone presses something on screen

12
00:00:30,720 --> 00:00:32,520
before they notice any lag.

13
00:00:32,520 --> 00:00:37,050
So if you can respond to all user
input in that time, you're good to go.

14
00:00:37,050 --> 00:00:40,810
That's great if the thing they did
was to say, toggle a check box or

15
00:00:40,810 --> 00:00:41,970
tap a button.

16
00:00:41,970 --> 00:00:44,240
And you show a single change,
like a selected state.

17
00:00:44,240 --> 00:00:48,090
But there's another version of
this which is more challenging,

18
00:00:48,090 --> 00:00:51,180
which is that the user does
something that requires animation.

19
00:00:51,180 --> 00:00:54,940
The most challenging performance
issues always come out of the need

20
00:00:54,940 --> 00:00:56,500
to hit 60 frames a second.

21
00:00:56,500 --> 00:01:00,570
Which is either interactions that stick
to the user's finger or transitions and

22
00:01:00,570 --> 00:01:01,690
animations.

23
00:01:01,690 --> 00:01:05,400
For those we have a limit
of 16 milliseconds.

24
00:01:05,400 --> 00:01:09,220
Which is one second or
a thousand milliseconds divided by 60.

25
00:01:09,220 --> 00:01:13,140
In reality, we actually have
less than 16 milliseconds,

26
00:01:13,140 --> 00:01:15,320
because the browser has overhead.

27
00:01:15,320 --> 00:01:18,730
So really we get around
10 to 12 milliseconds.

28
00:01:19,750 --> 00:01:20,700
That's not a lot of time.
