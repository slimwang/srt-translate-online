1
00:00:00,000 --> 00:00:05,000
The answer is 01011010.

2
00:00:05,000 --> 00:00:07,000
Let me explain why.

3
00:00:07,000 --> 00:00:10,000
Remember that we're using CBC mode encryption.

4
00:00:10,000 --> 00:00:14,000
The value of ciphertext block i is the result of encrypting, using the key.

5
00:00:14,000 --> 00:00:20,000
The value of ciphertext block i -1 XORed with message block i.

6
00:00:20,000 --> 00:00:25,000
For the first block of the second message, that's going to be c0'.

7
00:00:25,000 --> 00:00:29,000
It's the result of encrypting the value of the previous block,

8
00:00:29,000 --> 00:00:32,000
and this was the initialization vector for the first block.

9
00:00:32,000 --> 00:00:35,000
For this one, it's the last block in the previous message.

10
00:00:35,000 --> 00:00:38,000
That was the block we call c(n-1).

11
00:00:38,000 --> 00:00:41,000
That's XORed with message block 0.

12
00:00:41,000 --> 00:00:45,000
Here is the danger. The adversary actually knows this value.

13
00:00:45,000 --> 00:00:51,000
That means the adversary can pick a message value so the value of c0' reveals something.

14
00:00:51,000 --> 00:00:53,000
That means it has to be an input to the encryption.

15
00:00:53,000 --> 00:00:56,000
We're assuming the adversary can't break the encryption.

16
00:00:56,000 --> 00:00:59,000
But it has to be an input to the encryption the adversary already knows what

17
00:00:59,000 --> 00:01:01,000
the expected result is.

18
00:01:01,000 --> 00:01:05,000
The adversary knows the encryptions of all the blocks in the previous message,

19
00:01:05,000 --> 00:01:10,000
and we know from the way CBC worked, if we want to learn the value of m4--

20
00:01:10,000 --> 00:01:15,000
m4 was encrypted in the original message using the value here.

21
00:01:15,000 --> 00:01:18,000
This was ciphertext 3--the previous ciphertext block--

22
00:01:18,000 --> 00:01:23,000
and that was encrypted and it produces output--ciphertext block 4.

23
00:01:23,000 --> 00:01:29,000
That means if we can feed into this result, that means if we can make the value of this

24
00:01:29,000 --> 00:01:36,000
equal to the result of c3 XORed with m4--we don't know m4,

25
00:01:36,000 --> 00:01:38,000
but we can make it our guess for m4.

26
00:01:38,000 --> 00:01:43,000
We're going to XOR it with our guess for m*--m4.

27
00:01:43,000 --> 00:01:47,000
If that's the input to the encryption function, then we'll be able to look at the output

28
00:01:47,000 --> 00:01:49,000
and see if it matches c4.

29
00:01:49,000 --> 00:01:55,000
To make that the input, we have this IV, which is really the last block in the previous message.

30
00:01:55,000 --> 00:01:58,000
We can just XOR that out.

31
00:01:58,000 --> 00:02:04,000
What we're going to pass in is the guess XORed with the known value of c3

32
00:02:04,000 --> 00:02:06,000
XORed with this value.

33
00:02:06,000 --> 00:02:13,000
With the values I've chosen, c3 is this, m* is all zeros, so we don't need to worry about that

34
00:02:13,000 --> 00:02:18,000
in the XOR, and c(n-1)--the last ciphertext block--is all the 1s.

35
00:02:18,000 --> 00:02:21,000
That's going to flip the first 5 bits. That's why we get this value.

36
00:02:21,000 --> 00:02:25,000
Let's see what happens when that value is used for m0.

37
00:02:25,000 --> 00:02:30,000
What we're going to get for ciphertext block 0 is the result of encrypting

38
00:02:30,000 --> 00:02:37,000
the known value of ciphertext block n -1 with this result, which is c3.

39
00:02:37,000 --> 00:02:43,000
Now this is XORed so that same values cancel out.

40
00:02:43,000 --> 00:02:46,000
That means the result is the result of encrypting c3

41
00:02:46,000 --> 00:02:49,000
XORed with m*.

42
00:02:49,000 --> 00:02:51,000
That's the same as we were doing here.

43
00:02:51,000 --> 00:02:55,000
That's encrypting m4 XORed with c3.

44
00:02:55,000 --> 00:02:59,000
We know what c3 is. We could construct this message to pass in.

45
00:02:59,000 --> 00:03:02,000
We don't know what m4 is, but we know if this result is the same,

46
00:03:02,000 --> 00:03:07,000
then this should be the same as ciphertext block 4.

47
00:03:07,000 --> 00:03:12,000
That would give us the answer to the question was m4 equal to m*.

48
00:03:12,000 --> 00:03:14,000
Of course, we can generalize this.

49
00:03:14,000 --> 00:03:20,000
If we can pick the value of m0' to be the XOR of the last ciphertext block

50
00:03:20,000 --> 00:03:23,000
and the one before the one we want to guess and our guess,

51
00:03:23,000 --> 00:03:28,000
that means what we learn if the ciphertext block that results from the new message

52
00:03:28,000 --> 00:03:34,000
is equal to ciphertext block i, then we know that block mi is equal to m*.
