1
00:00:00,170 --> 00:00:03,446
So once this scripting data has been loaded, we can now move forward with our

2
00:00:03,446 --> 00:00:08,031
assets, images, maps, etc. Now typically you can load assets and scripts at the

3
00:00:08,031 --> 00:00:12,566
same time, but I've been burned by that in HTML once or twice. Injected

4
00:00:12,566 --> 00:00:15,433
JavaScript code can easily suggest more assets to be loaded, which would

5
00:00:15,433 --> 00:00:19,332
require more kickoffs of async calls and tracks that follow. As such for

6
00:00:19,332 --> 00:00:22,548
sanity, well, mainly my receding hairline, we let Grids' scripting code come in

7
00:00:22,548 --> 00:00:25,284
first, define their systems and asset needs and then kick off all the

8
00:00:25,284 --> 00:00:30,100
subsequent asset loads afterwards. In Grids instead of calling Windows Alert

9
00:00:30,100 --> 00:00:32,980
this is where we actually kick off phase three where we parse our texture

10
00:00:32,980 --> 00:00:37,672
packer outlet's definition and load the map objects. Once that was done, we can

11
00:00:37,672 --> 00:00:40,740
actually let the user play the game by turning off the UI and showing the

12
00:00:40,740 --> 00:00:45,116
canvas elements. Once we've gone through our three phases of loading the menu,

13
00:00:45,116 --> 00:00:48,014
descripting data and then the assets, finally we can allow the user to get to

14
00:00:48,014 --> 00:00:52,834
the screen and play the game. It's only through the combination of all of these

15
00:00:52,834 --> 00:00:56,398
together do we ensure a nice easy transition for the user that constantly shows

16
00:00:56,398 --> 00:00:58,823
them a refreshing UI.
