1
00:00:00,590 --> 00:00:03,830
Welcome back. We started the discussion of the distributive

2
00:00:03,830 --> 00:00:08,390
systems with definitions and principles. We then saw how

3
00:00:08,390 --> 00:00:12,860
object technology, with its innate concepts of inheritance and

4
00:00:12,860 --> 00:00:17,200
reuse, helps in structuring distributive services at different levels.

5
00:00:19,460 --> 00:00:25,510
In this next lesson module, we will discuss the design and implementation of

6
00:00:25,510 --> 00:00:33,290
some select distributed system services. Technological innovation come when one

7
00:00:33,290 --> 00:00:39,810
looks beyond the obvious and immediate horizon. Often this happens in academia,

8
00:00:39,810 --> 00:00:44,950
because academicians are not bound by market pressures or compliance to existing

9
00:00:44,950 --> 00:00:50,950
product lines. You'll see this out of the box thinking in the three subsystems

10
00:00:50,950 --> 00:00:52,400
that we're going to discuss as part

11
00:00:52,400 --> 00:00:56,470
of this lesson module. Another important point,

12
00:00:56,470 --> 00:00:59,880
often the byproducts of a thought experiment

13
00:00:59,880 --> 00:01:02,840
may have more lasting impact than the

14
00:01:02,840 --> 00:01:06,920
original vision behind the thought experiment. History

15
00:01:06,920 --> 00:01:10,050
is ripe with many examples. We will

16
00:01:10,050 --> 00:01:13,860
not have the ubiquitous yellow sticky note,

17
00:01:13,860 --> 00:01:16,640
but for space exploration. Now close to

18
00:01:16,640 --> 00:01:19,420
home, for this course, Java would not

19
00:01:19,420 --> 00:01:23,710
have happened but for the failed video-on-demand trials

20
00:01:23,710 --> 00:01:29,660
of the 90s. In this sense the services we are going to discuss as part of this

21
00:01:29,660 --> 00:01:35,140
lesson module, while interesting in their own right, may themselves be not as

22
00:01:35,140 --> 00:01:40,998
important as the technololgical insights they offer on how to construct complex

23
00:01:40,998 --> 00:01:45,638
distributed services. Such technological insights are

24
00:01:45,638 --> 00:01:48,070
the reusable products of most thought

25
00:01:48,070 --> 00:01:51,150
experiments. There's a common theme in

26
00:01:51,150 --> 00:01:53,810
the three distributed subsystems we're going

27
00:01:53,810 --> 00:01:56,680
to discuss. Memory is a critical,

28
00:01:56,680 --> 00:02:01,310
precious resource. With advances in network technology

29
00:02:01,310 --> 00:02:08,288
leveraging the idle memory of a peer in a Local Area Network may help overcome

30
00:02:08,288 --> 00:02:11,270
shortage of memory, locally available in a particular

31
00:02:11,270 --> 00:02:14,410
note. The question is how best to use

32
00:02:14,410 --> 00:02:20,730
the cluster memory, that is the physical memory of peers, tend to be idle at any

33
00:02:20,730 --> 00:02:22,600
particular point of time in a local area

34
00:02:22,600 --> 00:02:26,890
network. Global memory system, GMS, asks the question,

35
00:02:26,890 --> 00:02:28,980
how can we use the peer memory for

36
00:02:28,980 --> 00:02:32,580
paging across the Local Area Network. And later

37
00:02:32,580 --> 00:02:34,968
on we will see DSM, which stands for

38
00:02:34,968 --> 00:02:38,800
distributed shared memory. Asks a question, if shared memory

39
00:02:38,800 --> 00:02:42,900
makes the life of application programmers simple in

40
00:02:42,900 --> 00:02:46,190
a multiprocessor, can we try to provide the same

41
00:02:46,190 --> 00:02:49,120
abstraction in a cluster and make that cluster

42
00:02:49,120 --> 00:02:52,150
appear like a shared memory machine. And a third

43
00:02:52,150 --> 00:02:55,240
work that we will see is this distributed file system,

44
00:02:55,240 --> 00:02:57,890
in which we ask the question, can we use the cluster

45
00:02:57,890 --> 00:03:03,300
memory for cooperative caching of files. Anyhow, back to our first

46
00:03:03,300 --> 00:03:07,870
part of this three-part lesson module, namely the Global Memory System.
