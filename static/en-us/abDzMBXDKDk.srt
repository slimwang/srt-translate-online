1
00:00:00,410 --> 00:00:03,560
The current problem with our list is
that it only shows English words.

2
00:00:03,560 --> 00:00:06,440
But we want Miwok translations
to appear as well.

3
00:00:06,440 --> 00:00:08,409
So here I am in the numbers activity,
and so

4
00:00:08,409 --> 00:00:11,821
far we've been using a layout that is
provided by the Android framework.

5
00:00:11,821 --> 00:00:20,280
And it's defined in
the simple_list_item_1.xml file.

6
00:00:20,280 --> 00:00:25,280
So remember that simple_list_item_1 is

7
00:00:25,280 --> 00:00:29,100
one of many types of layouts that's
been created by the Android team.

8
00:00:29,100 --> 00:00:30,890
And is part of the Android framework, so

9
00:00:30,890 --> 00:00:33,410
to see a list of all the layouts
in the Android framework,

10
00:00:33,410 --> 00:00:37,660
check out the R.layout page in
the Android developer's guide.

11
00:00:37,660 --> 00:00:38,600
So if we scroll down a bit,

12
00:00:38,600 --> 00:00:41,310
we'll see the item layout
that we're interested in.

13
00:00:41,310 --> 00:00:43,660
So to learn more about this layout,

14
00:00:43,660 --> 00:00:45,900
I'm actually going to do
a Google search on it.

15
00:00:45,900 --> 00:00:48,670
So this is the code developed
by the Android team

16
00:00:48,670 --> 00:00:50,720
to develop this specific layout.

17
00:00:50,720 --> 00:00:54,840
And as you can see here,
it only contains one TextView.

18
00:00:54,840 --> 00:00:57,920
Now we really need a list item
that has more than one TextView.

19
00:00:57,920 --> 00:01:00,660
So let's build our own
layout with two TextViews.

20
00:01:00,660 --> 00:01:04,310
Then we need to assign view ids to
the TextViews as well because we'll

21
00:01:04,310 --> 00:01:07,110
need to refer to these views
later in the Java code.

22
00:01:07,110 --> 00:01:07,850
So at this point,

23
00:01:07,850 --> 00:01:11,210
we're not too worried about the details
of the list item layout looks like.

24
00:01:11,210 --> 00:01:14,448
We're just trying to get the right data
on the screen to make sure the logic in

25
00:01:14,448 --> 00:01:15,827
our code is working correctly.

26
00:01:15,827 --> 00:01:20,170
Then later on, we can make the list
items visually look nicer.

27
00:01:20,170 --> 00:01:23,570
Now remember that the adapter knows
how to populate this list item for

28
00:01:23,570 --> 00:01:25,800
a single word in the list.

29
00:01:25,800 --> 00:01:27,570
And that's why we only
need the layout for

30
00:01:27,570 --> 00:01:31,870
a single item because that same
pattern will be used repeatedly.

31
00:01:31,870 --> 00:01:35,770
So for this exercise, I'd like you
to create a new layout file for

32
00:01:35,770 --> 00:01:37,960
how a single list item should look.

33
00:01:37,960 --> 00:01:39,150
And here's an example of that.

34
00:01:40,240 --> 00:01:44,810
Note the 16dp pattern on both
the top and left hand side.

35
00:01:44,810 --> 00:01:48,680
Also notice that the Miwok word
is on top of the English word

36
00:01:48,680 --> 00:01:51,390
because we want users to pay more
attention to the Miwok word.

37
00:01:52,440 --> 00:01:54,815
Later in the visual polish
section of Lesson Three,

38
00:01:54,815 --> 00:01:58,780
we'll make the Miwok word even more
prominent by bolding the word.

39
00:01:58,780 --> 00:02:01,710
Next, assign view IDs
to the TextViews so

40
00:02:01,710 --> 00:02:04,510
that we can refer to them
later in the Java code.

41
00:02:04,510 --> 00:02:08,300
And after you're done with this,
I'd like you to answer this question.

42
00:02:08,300 --> 00:02:11,440
Which ViewGroup did you use as
the root view in this layout?
