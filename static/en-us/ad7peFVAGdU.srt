1
00:00:00,460 --> 00:00:03,510
Okay, here's my answer. All we had is, is a simple

2
00:00:03,510 --> 00:00:06,920
change. We just changed that function, instead of using hashlib md5,

3
00:00:06,920 --> 00:00:10,070
to now use hmac, and pass in our secret, plus our

4
00:00:10,070 --> 00:00:13,030
string s, and return the hexdigest of that. Now, this is

5
00:00:13,030 --> 00:00:15,370
actually quite a bit more secure. So, as long as we

6
00:00:15,370 --> 00:00:18,190
have a secret that nobody knows, and normally this would be

7
00:00:18,190 --> 00:00:21,000
a long string of random characters that you generate and probably

8
00:00:21,000 --> 00:00:25,740
store somewhere else in some other module, even if the attacker knows

9
00:00:25,740 --> 00:00:29,110
our algorithm or, you know, watched this, this lesson

10
00:00:29,110 --> 00:00:30,450
as long as he doesn't know what the value

11
00:00:30,450 --> 00:00:33,380
of secret is, he can't produce fake values. Let's

12
00:00:33,380 --> 00:00:35,980
go ahead and give this a test. We're going to say,

13
00:00:35,980 --> 00:00:40,242
print make_secure_val test. We'll give this a run. And

14
00:00:40,242 --> 00:00:44,580
we see output, our value plus our hash. And let's,

15
00:00:44,580 --> 00:00:47,322
let's make sure this works properly, so we'll send

16
00:00:47,322 --> 00:00:52,620
it to a variable and we'll say, print check_secure_val x.

17
00:00:52,620 --> 00:00:54,490
So we take what we outputted here and run it

18
00:00:54,490 --> 00:00:56,330
back into our function, and we see that we get

19
00:00:56,330 --> 00:00:58,650
our result. And if we're to modify x somehow, add

20
00:00:58,650 --> 00:01:00,280
some junk to the end of that string, we get

21
00:01:00,280 --> 00:01:02,660
back nothing. So, with just a quick a quick simple

22
00:01:02,660 --> 00:01:05,489
change, we add, introduce this notion of a secret. Now

23
00:01:05,489 --> 00:01:09,270
somebody who knows our algorithm still can't make fake values.

24
00:01:09,270 --> 00:01:10,810
So let's go ahead and try this out in practice.
