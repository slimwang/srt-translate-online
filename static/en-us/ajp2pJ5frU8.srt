1
00:00:00,012 --> 00:00:03,618
The Blinn-Phong reflection model has been around for more than 30 years. It

2
00:00:03,618 --> 00:00:07,970
used to be hard-coded into older GPUs from the early 2000s. It's easy to

3
00:00:07,970 --> 00:00:11,648
evaluate and somewhat intuitive to control. One technique worth mentioning with

4
00:00:11,648 --> 00:00:14,080
this reflection model is that you can get the specular highlight a different

5
00:00:14,080 --> 00:00:17,930
color than the diffuse components. For example, if the specular component is

6
00:00:17,930 --> 00:00:21,936
given a white color, the object looks more like a shiny plastic. If both the

7
00:00:21,936 --> 00:00:24,884
specular and diffused components are multiplied by the same color the material

8
00:00:24,884 --> 00:00:29,014
looks more metallic. However this classic reflection model is not energy

9
00:00:29,014 --> 00:00:32,142
balanced, you'll notice as I change the shininess, the material looks smoother,

10
00:00:32,142 --> 00:00:36,650
but overall the amount of light reflected becomes greater. If you think about

11
00:00:36,650 --> 00:00:41,408
it, this makes a lot of sense. Here's the Blinn-Phong equation again. You take

12
00:00:41,408 --> 00:00:44,946
N dot H, and take the maximum between that and 0, and raise that to the power

13
00:00:44,946 --> 00:00:49,416
of shininess. The graph of the angle between N and H, versus the specular

14
00:00:49,416 --> 00:00:53,940
intensity, is like this. Clearly the area under the graph for cosine squared is

15
00:00:53,940 --> 00:00:56,884
smaller than for cosine, so the amount of energy coming from the surface will

16
00:00:56,884 --> 00:01:01,380
be less as you increase the shininess. Cosine cubed has even less overall

17
00:01:01,380 --> 00:01:05,980
energy. As the shininess goes up, the area under the curve goes down. Two

18
00:01:05,980 --> 00:01:09,080
changes give a better result, one that's both more plausible and easier to

19
00:01:09,080 --> 00:01:14,180
control. One idea is to attenuate the specular term by the lumbersian fall off.

20
00:01:14,180 --> 00:01:17,560
In other words, just like diffuse, make the specular term drop off as the angle

21
00:01:17,560 --> 00:01:22,046
of the light to the surface becomes less straight. N dot L. The other idea is

22
00:01:22,046 --> 00:01:25,280
to make these narrower curves be higher, giving them roughly the same volume at

23
00:01:25,280 --> 00:01:29,618
3D. This idea is captured in the last term. As shininess increases this last

24
00:01:29,618 --> 00:01:32,852
term also increases, when combined with the Lambertian term this new equation

25
00:01:32,852 --> 00:01:37,463
gives a reasonably-balance result. Here is the original BlinnâPhong equation.

26
00:01:37,463 --> 00:01:40,403
You can see with the shininess of three it's overall much brighter than a

27
00:01:40,403 --> 00:01:44,382
shininess of 100. By energy-balanced I mean that changing the shininess does

28
00:01:44,382 --> 00:01:47,550
not noticeable change the amount of energy reflected from the surface, You can

29
00:01:47,550 --> 00:01:51,976
see the effect by running the demo that follows. By the way, this demo puts all

30
00:01:51,976 --> 00:01:54,704
its shaders inside the JavaScript program itself, if you want to look at an

31
00:01:54,704 --> 00:01:59,312
example of how that's done. Using the Lambertian N dot L term also eliminates a

32
00:01:59,312 --> 00:02:03,339
serious problem with specular falloff. You may have noticed it yourself with

33
00:02:03,339 --> 00:02:06,700
the basic Blinn-Phong model. Here's a view of the model with the low shininess

34
00:02:06,700 --> 00:02:10,638
and the light coming up from behind it. The diffuse term drops off smoothly,

35
00:02:10,638 --> 00:02:14,937
but the specular suddenly drops to zero, giving a pretty bad result. By using

36
00:02:14,937 --> 00:02:18,199
the Lambertian dropoff, the specular term now fades properly.
