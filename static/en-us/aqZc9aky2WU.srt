1
00:00:00,350 --> 00:00:03,840
So now that you've sent requests to
a local host server, let's try seeing if

2
00:00:03,840 --> 00:00:06,560
we can get information from other
servers out on the Internet.

3
00:00:06,560 --> 00:00:09,700
Let's say I want to try to
access the API for SoundCloud,

4
00:00:09,700 --> 00:00:13,480
an online audio distribution platform
that enables its users to upload,

5
00:00:13,480 --> 00:00:16,700
record, promote and
share their originally created sounds.

6
00:00:17,810 --> 00:00:21,540
In order to figure out what requests
I can send to the SoundCloud server I

7
00:00:21,540 --> 00:00:24,980
will go to their developer website and
search through the documentation.

8
00:00:24,980 --> 00:00:25,620
To control and

9
00:00:25,620 --> 00:00:29,150
protect their resources, SoundCloud
requires developers to register

10
00:00:29,150 --> 00:00:32,960
each application they want to create
that will communicate with their API.

11
00:00:32,960 --> 00:00:36,560
Once my account is created, I'm
provided a Client ID and Client Secret.

12
00:00:37,690 --> 00:00:41,310
I can embed these credentials into my
request in order to successfully access

13
00:00:41,310 --> 00:00:42,290
the SoundCloud API.

14
00:00:43,480 --> 00:00:45,390
Now, searching through
the documentation,

15
00:00:45,390 --> 00:00:48,210
I see the resources that are available
for me to access, along with some

16
00:00:48,210 --> 00:00:51,810
examples on how to create requests
to access this information.

17
00:00:51,810 --> 00:00:55,770
Many of the post, put and delete methods
are protected with access tokens.

18
00:00:55,770 --> 00:00:58,850
Since my app would need permission from
end users in order to post information

19
00:00:58,850 --> 00:01:00,570
to SoundCloud on their behalf.

20
00:01:00,570 --> 00:01:03,770
So for now I'm just going to build
a get request to view the contents of

21
00:01:03,770 --> 00:01:06,190
a playlist with
the following playlist ID.

22
00:01:06,190 --> 00:01:08,910
I must also add my client ID so
SoundCloud could

23
00:01:08,910 --> 00:01:12,550
recognize that it's my application
trying to communicate with the server.

24
00:01:12,550 --> 00:01:16,950
I can build the request using Curl or
Postman, send if off, and

25
00:01:16,950 --> 00:01:19,200
see that I received
a successful response.

26
00:01:19,200 --> 00:01:23,540
If I open the permalink URL provided in
the response, I can also see the HTML

27
00:01:23,540 --> 00:01:27,020
page that contains this playlist
information in my browser.

28
00:01:27,020 --> 00:01:30,130
In this next video, you'll be able
to delve into some APIs on your own.
