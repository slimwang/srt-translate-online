1
00:00:00,250 --> 00:00:03,400
Information that we have available is that on

2
00:00:03,400 --> 00:00:06,770
some processor pu, the queue contains a task

3
00:00:06,770 --> 00:00:10,590
tx. On another processor, pv, the queue contains

4
00:00:10,590 --> 00:00:14,350
four threads. Tm, tq, tr, and tn, so

5
00:00:14,350 --> 00:00:16,350
these are these are the threads on pv's

6
00:00:16,350 --> 00:00:19,490
queue. And there's a particular thread, Ty, the

7
00:00:19,490 --> 00:00:23,060
affinity of Ty with respect to Pu, is

8
00:00:23,060 --> 00:00:26,340
2. This is the intervening thread index, and

9
00:00:26,340 --> 00:00:28,100
I mentioned to you that the smaller the

10
00:00:28,100 --> 00:00:31,920
index, the higher the affinity. So PuI for Ty

11
00:00:31,920 --> 00:00:36,960
is two, and similarly Pu, PvI For T

12
00:00:36,960 --> 00:00:40,690
y is one. There's a number of intervening tasks

13
00:00:40,690 --> 00:00:46,100
that have run on the process of P u and P v respectively since the last time

14
00:00:46,100 --> 00:00:48,560
T y had a chance to run on these

15
00:00:48,560 --> 00:00:51,850
processes. And the scheduling policy we're going to pick

16
00:00:51,850 --> 00:00:56,550
is the minimum intervening plus q. Minimum intervening plus

17
00:00:56,550 --> 00:00:59,050
q, that's a scheduling policy that we're going to pick.

18
00:00:59,050 --> 00:01:01,620
So, given that this is a scheduling policy, when

19
00:01:01,620 --> 00:01:04,790
we decide at the point that Qi gets to run

20
00:01:04,790 --> 00:01:11,070
again, when it is ready to be put on a Q, which Q will I put Ty on, if

21
00:01:11,070 --> 00:01:14,330
the scheduling policy is minimum intervening plus Q? Is

22
00:01:14,330 --> 00:01:16,870
it Pu's Q or is Pv's Q those are the

23
00:01:16,870 --> 00:01:18,280
two choices available to you.
