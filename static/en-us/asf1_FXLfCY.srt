1
00:00:00,190 --> 00:00:03,340
Okay, let's look at what the data
would like in these different options.

2
00:00:03,340 --> 00:00:06,830
Here's a diagram that I made of what our
data structure currently looks like.

3
00:00:06,830 --> 00:00:10,380
We have activeLists,
shoppingListItems, and Users.

4
00:00:10,380 --> 00:00:12,360
This is all the data for
one shopping list.

5
00:00:12,360 --> 00:00:14,030
This is the data for
another shopping list.

6
00:00:15,060 --> 00:00:17,580
Here we have the associated
items on the shopping lists, and

7
00:00:17,580 --> 00:00:18,840
here's each item here.

8
00:00:18,840 --> 00:00:21,290
And each of these little
clusters is a different user.

9
00:00:21,290 --> 00:00:24,500
So three users and
we have two shopping lists, and

10
00:00:24,500 --> 00:00:26,890
this first shopping
list here has one item.

11
00:00:26,890 --> 00:00:29,000
The second shopping
list has three items.

12
00:00:29,000 --> 00:00:30,390
Okay, so here's our current data.

13
00:00:30,390 --> 00:00:32,390
So option A was a little crazy,

14
00:00:32,390 --> 00:00:37,585
it basically was to take each of
these items and add a boolean.

15
00:00:37,585 --> 00:00:40,225
And when the associated shopping
list is being shopped on

16
00:00:40,225 --> 00:00:41,335
that boolean would be true.

17
00:00:41,335 --> 00:00:43,295
For this list it would
look something like this.

18
00:00:43,295 --> 00:00:45,305
You'd have an extra piece of data for
each item.

19
00:00:45,305 --> 00:00:49,265
And if this list started being
shopped on the value for

20
00:00:49,265 --> 00:00:50,485
each of these items would be true.

21
00:00:50,485 --> 00:00:52,480
Now this isn't the best solution.

22
00:00:52,480 --> 00:00:55,820
Because when somebody's shopping on a
shopping list it affects the whole list,

23
00:00:55,820 --> 00:00:57,090
not just specific items.

24
00:00:57,090 --> 00:00:59,370
I'm essentially copying
the data three times here.

25
00:00:59,370 --> 00:01:02,860
Now option C is essentially
what option A was but

26
00:01:02,860 --> 00:01:05,500
instead of having the Boolean
on the list items which

27
00:01:05,500 --> 00:01:08,350
was a little bit strange,
we could put the Boolean on the list.

28
00:01:08,350 --> 00:01:09,950
Basically we just have a Boolean here,

29
00:01:09,950 --> 00:01:13,220
which says whether the list is
being shopped on or is not.

30
00:01:13,220 --> 00:01:17,270
And this is pretty good, except it's
not storing any information about

31
00:01:17,270 --> 00:01:18,830
who is actually doing the shopping.

32
00:01:18,830 --> 00:01:22,510
So I could see that somebody was
shopping on a shopping list, but

33
00:01:22,510 --> 00:01:25,670
I wouldn't be able to know,
in specific, that it was J.P.

34
00:01:25,670 --> 00:01:28,380
So Option C is kind of
outta the running as well.

35
00:01:28,380 --> 00:01:33,160
Now Option B, would be to similarly
add some data to the shopping list,

36
00:01:33,160 --> 00:01:36,430
specifically a list of users
that are currently shopping

37
00:01:36,430 --> 00:01:37,780
on that shopping list.

38
00:01:37,780 --> 00:01:39,960
And B looks pretty good.

39
00:01:39,960 --> 00:01:41,776
You know if a list is
being shopped on and

40
00:01:41,776 --> 00:01:44,680
it's easy to see what users
are shopping on that list.

41
00:01:44,680 --> 00:01:45,900
On the shopping list page,

42
00:01:45,900 --> 00:01:48,990
they make it really easy to print
out who's shopping on the list.

43
00:01:48,990 --> 00:01:50,700
Now D is a somewhat similar solution.

44
00:01:50,700 --> 00:01:54,720
But instead of having a list of shopping
users in the shopping list data,

45
00:01:54,720 --> 00:01:56,820
we can have a list of shopping
lists in the user data.

46
00:01:56,820 --> 00:02:01,070
It makes it pretty easy to see
whether a user is shopping on a list.

47
00:02:01,070 --> 00:02:03,550
The issue with this solution
is that when you want to know

48
00:02:03,550 --> 00:02:06,420
who's shopping on a specific list,
it's inefficient.

49
00:02:06,420 --> 00:02:07,230
In this scenario,

50
00:02:07,230 --> 00:02:10,090
you'd have to iterate through all
of the users in your database.

51
00:02:10,090 --> 00:02:13,240
And see which ones in this
list of shopping lists

52
00:02:13,240 --> 00:02:14,910
had the list that you were
currently looking at.

53
00:02:14,910 --> 00:02:17,030
When you get hundreds
of thousands of users,

54
00:02:17,030 --> 00:02:19,580
that means you're doing a query
that's looking through hundreds and

55
00:02:19,580 --> 00:02:22,680
thousands of user objects and
that's a pretty lengthy search.

56
00:02:22,680 --> 00:02:26,230
So in this case,
option b is the superior option.

57
00:02:26,230 --> 00:02:27,500
Attached to each list,

58
00:02:27,500 --> 00:02:30,580
you'll add a list of users who
happen to be shopping on that list.

59
00:02:30,580 --> 00:02:32,400
If this list of users empty and

60
00:02:32,400 --> 00:02:35,530
doesn't exist than you know that
there's nobody shopping on the list.

61
00:02:35,530 --> 00:02:37,920
Okay, so that clarifies what
you should be doing for

62
00:02:37,920 --> 00:02:40,472
the data and
I'll send you the spec right now.
