1
00:00:00,025 --> 00:00:02,809
Now, note that once an object is being created in the environment, the

2
00:00:02,809 --> 00:00:06,025
PhysicsEngine will simulate each frame, updating the position and velocity of

3
00:00:06,025 --> 00:00:10,684
any physics bodies that it has in its world. In order for GRITS objects to

4
00:00:10,684 --> 00:00:14,268
properly receive the data and update positions for the rendering, we need to

5
00:00:14,268 --> 00:00:19,770
query the PhysicsEngine results by the physics bodies created for an entity.

6
00:00:19,770 --> 00:00:23,034
Note that the position values for an object already exists as it's inherited

7
00:00:23,034 --> 00:00:27,000
from our entity base class. Inside of our update loop, given that the entity

8
00:00:27,000 --> 00:00:30,055
has a physical body, we can query it's position and update the entity position

9
00:00:30,055 --> 00:00:34,368
accordingly. This way the visual representation of an object will match the

10
00:00:34,368 --> 00:00:38,284
physical representation as is. To do this, you need to call the physics body's

11
00:00:38,284 --> 00:00:42,099
GetPosition method and then assign it to our local positional values.
