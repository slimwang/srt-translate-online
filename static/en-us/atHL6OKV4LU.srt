1
00:00:00,000 --> 00:00:08,500
Okay, so tell me when we saw that Alice's algorithm for finding a valid vertex cover

2
00:00:08,500 --> 00:00:14,790
is very inefficient but fairly easy to program too, so I'd like to go ahead and try and implement this

3
00:00:14,790 --> 00:00:17,110
and we'll do this in two separate parts.

4
00:00:17,110 --> 00:00:23,670
First, I want you to find a procedure validity check that returns true if and only if the given cover

5
00:00:23,670 --> 00:00:31,490
is a valid vertex cover for the graph that is input, and the graph is going to be a list of lists,

6
00:00:31,490 --> 00:00:36,460
an adjacency matrix like we have seen before, and the cover is simply going to be a list

7
00:00:36,460 --> 00:00:40,950
of the same length as the number of vertices in the graph.

8
00:00:40,950 --> 00:00:47,840
So for example for the given graph, if we attempted to cover of say A and C,

9
00:00:47,840 --> 00:00:56,710
then the cover that we would input to validity check would be 1, 0, 1, 0, and the graph

10
00:00:56,710 --> 00:01:08,100
that we would have be 0, 1, 1, 0 inside the list 1, 0, 1, 0; 1, 1, 0, 1; 1, 0, 0, 1, 0, again in a list.

11
00:01:08,100 --> 00:01:11,230
So these would be our inputs to validity check here.

12
00:01:11,230 --> 00:01:14,820
So I want you to do is fill in the rest of this function here.

13
00:01:14,820 --> 00:01:24,020
The next thing that I want you to do is fill in vertex cover naive where it simply takes the input graph

14
00:01:24,020 --> 00:01:32,860
as a list of list as an adjacent to matrix and finds the minimum vertex cover of that input graph,

15
00:01:32,860 --> 00:01:35,520
and you can use the validity check to do this.

16
00:01:35,520 --> 00:01:41,630
So your code should check if the assignment is valid for a given assignment, should calculate

17
00:01:41,630 --> 00:01:48,700
the size of the assignment, and then it should update the minimum vertex cover variable if appropriate.

18
00:01:48,700 --> 00:01:51,850
So okay. Great. I hope you have fun with this problem.
