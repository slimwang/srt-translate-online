1
00:00:00,050 --> 00:00:04,090
Url_for accepts the name of the function
as the first argument, and a number of

2
00:00:04,090 --> 00:00:08,450
keyword arguments each corresponding
to the variable part of the URL rule.

3
00:00:08,450 --> 00:00:11,290
So if my URL needs a variable for
a restaurant ID and

4
00:00:11,290 --> 00:00:15,190
a menu item ID, my url_for statement
needs to look something like this,

5
00:00:15,190 --> 00:00:16,590
taking in three arguments for

6
00:00:16,590 --> 00:00:20,200
the function it will call and the
variables to pass into that function.

7
00:00:20,200 --> 00:00:23,490
So back in my template I can add this
code inside my anchor tags right

8
00:00:23,490 --> 00:00:25,030
after the href equals.

9
00:00:25,030 --> 00:00:28,100
Since this is a method in Python and
I want the output printed on to

10
00:00:28,100 --> 00:00:31,730
my HTML document, I will enclose
it with a double brackets.

11
00:00:31,730 --> 00:00:34,060
When I save my code now,
I see that there are edit and

12
00:00:34,060 --> 00:00:36,220
delete links for each menu item below.

13
00:00:36,220 --> 00:00:39,450
So you may be wondering why you would
ever want to build URLs instead of

14
00:00:39,450 --> 00:00:41,210
hard coding them into your templates.

15
00:00:41,210 --> 00:00:44,820
Well, now if you ever need to change
a URL path, with URL building,

16
00:00:44,820 --> 00:00:47,740
you can change your URLs all
in one place without having to

17
00:00:47,740 --> 00:00:50,660
remember to change URLs all over
the place from within your application.
