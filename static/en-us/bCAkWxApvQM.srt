1
00:00:00,090 --> 00:00:03,810
Inconsistency occurs when two different entries contradict one

2
00:00:03,810 --> 00:00:06,590
another. So for example, if a customer is

3
00:00:06,590 --> 00:00:10,480
recorded in two different current addresses, we've got

4
00:00:10,480 --> 00:00:15,060
a consistency problem. Fixing consistency problems really boils down

5
00:00:15,060 --> 00:00:16,570
to the problem of who do I trust

6
00:00:16,570 --> 00:00:19,880
the most, or more specifically, which data source do

7
00:00:19,880 --> 00:00:21,910
I trust the most? So with our address

8
00:00:21,910 --> 00:00:25,030
example, we might ask ourselves which entry was collected

9
00:00:25,030 --> 00:00:27,860
most recently. or if our problem is one that's

10
00:00:27,860 --> 00:00:31,250
a little more general say just location information. Another type

11
00:00:31,250 --> 00:00:34,600
of question we can ask is which collection method

12
00:00:34,600 --> 00:00:37,500
is likely to be most reliable? Because one data source

13
00:00:37,500 --> 00:00:40,920
might be populated based on GPS while another is

14
00:00:40,920 --> 00:00:43,450
based on user enter data. We might actually have a

15
00:00:43,450 --> 00:00:46,710
third that's using IP based location detection and all

16
00:00:46,710 --> 00:00:50,410
three of these are contributing location information to our system.

17
00:00:50,410 --> 00:00:55,110
So again, addressing consistency problems is about determining which

18
00:00:55,110 --> 00:00:57,950
of our data sources is most likely to be correct.

19
00:00:57,950 --> 00:01:02,460
And possibly introducing agreement among our inconsistent records by

20
00:01:02,460 --> 00:01:05,120
copying the data from the record we trust the most.
