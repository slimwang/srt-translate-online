1
00:00:00,310 --> 00:00:01,300
So in cycle 13,

2
00:00:01,300 --> 00:00:07,050
what happens is this ROB2 instruction
finally writes its result.

3
00:00:07,050 --> 00:00:08,616
This result is 12.

4
00:00:08,616 --> 00:00:11,059
We mark now this instruction as done and

5
00:00:11,059 --> 00:00:15,310
the value of 12 will be broadcast
under the name of ROB2.

6
00:00:15,310 --> 00:00:19,641
So now these instructions
here are waiting for

7
00:00:19,641 --> 00:00:25,193
their inputs and this one here
matches that I'm waiting for

8
00:00:25,193 --> 00:00:28,760
ROB2 value, so it captures it here.

9
00:00:28,760 --> 00:00:32,009
This is the first operand
that we're waiting for.

10
00:00:32,009 --> 00:00:35,040
The second operand was already
there since awhile ago.

11
00:00:35,040 --> 00:00:39,771
So this instruction, which is the ROB4
instruction is no longer waiting for

12
00:00:39,771 --> 00:00:40,509
anything.

13
00:00:40,509 --> 00:00:44,574
It can actually dispatch in
this cycle 13 and in cycle 14,

14
00:00:44,574 --> 00:00:48,070
the fourth instruction begins executing.

15
00:00:48,070 --> 00:00:52,642
None of the other instructions are
waiting for ROB2, so this concludes what

16
00:00:52,642 --> 00:00:57,229
happens when we broadcast the value
in cycle 13 for the ROB2 instruction.

17
00:00:57,229 --> 00:01:04,810
What now happens is again, in cycle 14,
we begin executing this multiplication.

18
00:01:04,810 --> 00:01:07,357
And because it has begun
executing in this cycle,

19
00:01:07,357 --> 00:01:09,611
this reservation station
is already free.

20
00:01:09,611 --> 00:01:11,970
It was freed when we dispatched
in the previous cycle.

21
00:01:11,970 --> 00:01:15,606
So I'm going to note that
this multiplication of 12 and

22
00:01:15,606 --> 00:01:20,505
13, which gives us 36 is going to
end up in ROB4, eventually here, but

23
00:01:20,505 --> 00:01:24,398
it's not going to be done
until 10 cycles from cycle 14.

24
00:01:24,398 --> 00:01:28,380
So, it's going to be in cycle 24
that we try to write the result.

25
00:01:28,380 --> 00:01:31,330
These two instructions
still are waiting for

26
00:01:31,330 --> 00:01:35,682
ROB4 and ROB5 instructions and
this happens beyond cycle 14.

27
00:01:35,682 --> 00:01:38,518
So in cycles 15, 16, etc.

28
00:01:38,518 --> 00:01:39,897
Nothing really happens.

29
00:01:39,897 --> 00:01:44,650
In fact, nothing will happen until we
have another broadcasted for result and

30
00:01:44,650 --> 00:01:48,766
the results we will broadcast
eventually going to be in 42 and 24.

31
00:01:48,766 --> 00:01:52,116
24 comes first, so
let's see what happens in cycle 24.

32
00:01:52,116 --> 00:01:56,640
In cycle 24, the fourth structure
will broadcast the result.

33
00:01:56,640 --> 00:01:58,615
This is the multiplication here.

34
00:01:58,615 --> 00:02:03,472
So what's going to happen is the value
of 36 is going to be broadcast under

35
00:02:03,472 --> 00:02:05,760
the name of ROB4.

36
00:02:05,760 --> 00:02:09,446
This instruction is waiting for ROB4,
so it's going to capture the value

37
00:02:09,446 --> 00:02:12,658
of 36 and mark that we are no
longer waiting for this operand.

38
00:02:12,658 --> 00:02:17,573
This instruction actually, now it
doesn't wait for anything anymore.

39
00:02:17,573 --> 00:02:22,710
So in cycle 25, the subtract
is going to start executing.

40
00:02:22,710 --> 00:02:25,600
Meanwhile, our ROB4 instruction
gets marked as done.

41
00:02:25,600 --> 00:02:30,115
Basically, this value or 36 that was
broadcast gets kind of deposited here

42
00:02:30,115 --> 00:02:34,560
and marked as done in the ROB and this
kind of concludes what happens with this

43
00:02:34,560 --> 00:02:38,710
multiplication instruction as far
as precommit stuff is concerned.

44
00:02:38,710 --> 00:02:39,582
It cannot commit,

45
00:02:39,582 --> 00:02:42,860
yet again, because we need all of
these to commit before it can commit.

46
00:02:42,860 --> 00:02:46,210
So, it's still going to be at least
cycle 43 before we consider committing

47
00:02:46,210 --> 00:02:47,050
anything.

48
00:02:47,050 --> 00:02:51,380
In the cycle 24, however, the ROB5
instruction will be dispatched and

49
00:02:51,380 --> 00:02:54,004
it will begin again
executing in cycle 25.

50
00:02:54,004 --> 00:02:56,149
So let's just move to cycle 25.
