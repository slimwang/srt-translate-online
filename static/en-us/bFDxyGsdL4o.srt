1
00:00:00,310 --> 00:00:04,280
We've got two out of our three asynchronous requests working.

2
00:00:04,280 --> 00:00:08,060
Let's get some Wikipedia articles about the page to show up.

3
00:00:08,060 --> 00:00:13,230
We're on the MediaWiki API page, because Wikipedia is run by MediaWiki, and

4
00:00:13,230 --> 00:00:16,710
looking through this page, you'll actually find you don't need an API key.

5
00:00:16,710 --> 00:00:22,040
However, making normal JSON requests to Wikipedia would result in a cross origin

6
00:00:22,040 --> 00:00:27,190
or a cross-site error, because Wikipedia servers forbid cross origin requests.

7
00:00:27,190 --> 00:00:31,080
There are several ways we can make this request to Wikipedia.

8
00:00:31,080 --> 00:00:33,490
One would be to set the origin and

9
00:00:33,490 --> 00:00:37,850
content type headers on the request and then Wikipedia would allow it.

10
00:00:37,850 --> 00:00:40,190
Or, we can just use JSONP.

11
00:00:40,190 --> 00:00:41,970
In our example, we'll be using JSONP.

12
00:00:41,970 --> 00:00:46,660
A JSONP request is a somewhat convoluted trick

13
00:00:46,660 --> 00:00:51,250
that involves a server wrapping the response inside a function to get

14
00:00:51,250 --> 00:00:54,250
injected when it actually gets back to the client.

15
00:00:54,250 --> 00:00:56,820
But luckily, if this sounds confusing, don't worry.

16
00:00:56,820 --> 00:00:59,220
jQuery actually makes it pretty easy.

17
00:00:59,220 --> 00:01:04,200
To make a JSONP request, we'll use the more robust .ajax method.

18
00:01:04,200 --> 00:01:07,380
In fact, the .get JSON method we

19
00:01:07,380 --> 00:01:12,530
were using before was actually just an abstraction of the .ajax method.

20
00:01:12,530 --> 00:01:13,560
Which is, incidentally,

21
00:01:13,560 --> 00:01:17,440
also an abstraction of an asynchronous JavaScript request.

22
00:01:17,440 --> 00:01:23,280
For this quiz, use the .ajax method to collect data from a Wikipedia endpoint.

23
00:01:23,280 --> 00:01:25,820
Let's take a look at the structure of the finished page.

24
00:01:25,820 --> 00:01:29,480
We start off with a Wikipedia container that has all the links and

25
00:01:29,480 --> 00:01:34,230
then inside of it we have this on sign list with an ID of Wikipedia links.

26
00:01:34,230 --> 00:01:37,880
Going through the on sign list, we see just a couple list elements, and

27
00:01:37,880 --> 00:01:42,980
then within each list element, we simply have an a tag with a link to Wikipedia.

28
00:01:42,980 --> 00:01:47,360
Each A-tag of course contains the title of the Wikipedia article within it.

29
00:01:47,360 --> 00:01:48,850
And like, you did before, for

30
00:01:48,850 --> 00:01:53,000
this quiz you'll need to properly append the Wikipedia article to the page.

31
00:01:53,000 --> 00:01:56,430
You'll need to include a few parameters within your Ajax request.

32
00:01:56,430 --> 00:01:58,670
There will of course be a URL.

33
00:01:58,670 --> 00:02:00,410
You'll need to include a dataType.

34
00:02:00,410 --> 00:02:01,210
Notice, too,

35
00:02:01,210 --> 00:02:05,070
in the signature we don't have an optional success function parameter.

36
00:02:05,070 --> 00:02:07,260
Instead, you'll have to set it as a property.

37
00:02:07,260 --> 00:02:10,370
Make sure your success parameter is set to a function that you want to

38
00:02:10,370 --> 00:02:13,120
run when the request is returned successfully.

39
00:02:13,120 --> 00:02:18,650
To start off, you'll fire off a JSON-P request using $.ajax, and

40
00:02:18,650 --> 00:02:19,990
then into $.ajax.

41
00:02:19,990 --> 00:02:23,370
You'll pass a settings object that will include a parameter for

42
00:02:23,370 --> 00:02:26,000
data type and a parameter for success.

43
00:02:26,000 --> 00:02:28,490
Once you get the response, iterate through it,

44
00:02:28,490 --> 00:02:30,320
and then present articles on the page.

45
00:02:30,320 --> 00:02:34,720
And, they should end up inside the unsigned list with the id of wikipedia-links.

46
00:02:34,720 --> 00:02:36,120
When you're done, check this box.
