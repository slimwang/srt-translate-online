1
00:00:00,480 --> 00:00:05,770
The SSL record protocol provides
two services for SSL connections.

2
00:00:05,770 --> 00:00:10,430
For confidentiality, the handshake
protocol defines a share seeker key

3
00:00:10,430 --> 00:00:15,120
that is used for
symmetric encryption of SSL payloads.

4
00:00:15,120 --> 00:00:20,370
For message integrity, the handshake
protocol also defines a share seeker key

5
00:00:20,370 --> 00:00:24,520
that is used to form a message
authentication code or MAC.

6
00:00:24,520 --> 00:00:29,540
This figure shows the overall
operation of the SSL record protocol.

7
00:00:29,540 --> 00:00:31,680
The first step is fragmentation.

8
00:00:31,680 --> 00:00:35,340
Each upper layer message
is fermented into blocks.

9
00:00:35,340 --> 00:00:38,180
Next, conversion is applied.

10
00:00:38,180 --> 00:00:42,540
Then the next step is to compute
the message authentication code

11
00:00:42,540 --> 00:00:44,200
over the compressed data.

12
00:00:44,200 --> 00:00:46,270
Next, the compressed message,

13
00:00:46,270 --> 00:00:50,190
plus the MAC are encrypted
using symmetric encryption.

14
00:00:50,190 --> 00:00:55,200
The final step is to prepend a header,
which includes the version and

15
00:00:55,200 --> 00:00:56,460
length fields.

16
00:00:56,460 --> 00:01:00,910
Know that there's no distinction that's
made among the various applications

17
00:01:00,910 --> 00:01:03,320
that might use the SSL record protocol.

18
00:01:03,320 --> 00:01:07,550
The counting of the data created
by these applications is opaque

19
00:01:07,550 --> 00:01:09,350
to the SSL record protocol.

20
00:01:09,350 --> 00:01:13,530
The record protocol transmits
the data in a TCP segment.

21
00:01:13,530 --> 00:01:18,152
The receiving end decrypts the data,
verifies it, decompress it,

22
00:01:18,152 --> 00:01:22,866
and reassemble the data and deliver
it to the higher layer protocols.
