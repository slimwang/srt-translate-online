1
00:00:00,570 --> 00:00:04,019
All right, my next question
is a classification task.

2
00:00:04,019 --> 00:00:08,800
So your job is to categorize
fish as salmon, trout or

3
00:00:08,800 --> 00:00:14,655
cod and the input features that you have
include the fish length, body length.

4
00:00:14,654 --> 00:00:19,149
Its weight, and
say the type of scales that it has.

5
00:00:19,149 --> 00:00:23,820
Like round scales, long scales,
or the scales are absent.

6
00:00:23,820 --> 00:00:28,670
How would you take this input data and
prepare it to feed it into

7
00:00:28,670 --> 00:00:32,890
a machine learning algorithm and
go forward and actually categorize it?

8
00:00:32,890 --> 00:00:34,609
Can you walk me through that process?

9
00:00:34,609 --> 00:00:36,469
>> Sure thing, all right so

10
00:00:36,469 --> 00:00:41,179
let me just write down all of
the information you gave me.

11
00:00:42,829 --> 00:00:47,179
First thing that I remember is
the labels, the different types of fish.

12
00:00:49,320 --> 00:00:55,210
And so I heard salmon, trout.

13
00:00:55,210 --> 00:00:59,090
>> Trout and cod, but you could
pick another a fish if you want.

14
00:00:59,090 --> 00:01:02,960
>> Okay, we can even add tuna.

15
00:01:02,960 --> 00:01:04,433
[LAUGH]
>> [LAUGH]

16
00:01:04,433 --> 00:01:05,689
>> Why not?

17
00:01:05,689 --> 00:01:10,299
Okay so this is the labels
I want all of my data to

18
00:01:10,299 --> 00:01:13,856
fall into one of these categories.

19
00:01:13,856 --> 00:01:19,956
And the information that I have
on these fish is their weight.

20
00:01:19,956 --> 00:01:26,474
[BLANK_AUDIO]

21
00:01:26,474 --> 00:01:28,079
>> The length of the fish.

22
00:01:28,079 --> 00:01:29,561
>> The length of the fish.

23
00:01:29,561 --> 00:01:30,444
>> Mm-hm.

24
00:01:30,444 --> 00:01:32,114
[BLANK_AUDIO]

25
00:01:32,114 --> 00:01:33,826
And the type of scales it has.

26
00:01:33,826 --> 00:01:35,060
>> And the type of scales.

27
00:01:35,060 --> 00:01:41,832
[BLANK_AUDIO]

28
00:01:41,831 --> 00:01:46,389
>> So the weight, you could
consider it's measured in pounds.

29
00:01:46,390 --> 00:01:47,260
>> Okay.

30
00:01:47,260 --> 00:01:50,960
>> Most of these fish weigh
around five to ten pounds.

31
00:01:50,960 --> 00:01:54,084
[BLANK_AUDIO]

32
00:01:54,084 --> 00:01:56,960
The length is measured in inches.

33
00:01:56,959 --> 00:01:57,879
>> Okay.

34
00:01:57,879 --> 00:02:02,079
>> And again, the range is roughly,
say, 50 to 100 inches.

35
00:02:02,079 --> 00:02:02,349
>> Okay.

36
00:02:03,390 --> 00:02:07,719
>> Not strictly within those bounds but
most of the fish fall in that range.

37
00:02:07,719 --> 00:02:14,004
And the type of scales I mentioned were
they could be round, long, or absent.

38
00:02:14,004 --> 00:02:15,762
>> Okay.

39
00:02:15,762 --> 00:02:19,527
Round, long,

40
00:02:19,527 --> 00:02:23,859
absent, okay.

41
00:02:23,860 --> 00:02:28,660
So provided this data, I need to make
some transforms to the data such

42
00:02:28,659 --> 00:02:33,740
that I can easily fit it, feed it
into a machine learning algorithm and

43
00:02:34,979 --> 00:02:36,560
predict some of these labels.

44
00:02:36,560 --> 00:02:41,199
So looking at the data I have,
weight is a numeric value,

45
00:02:41,199 --> 00:02:45,530
length is a numeric value, but
type of scales is a categorical value.

46
00:02:45,530 --> 00:02:49,723
So what I'm going to do is transform
these into dummy variables.

47
00:02:49,723 --> 00:02:50,373
>> Okay.

48
00:02:50,372 --> 00:02:56,417
[BLANK_AUDIO]

49
00:02:56,417 --> 00:03:01,199
And what would your transformed
feature vector look like?

50
00:03:02,280 --> 00:03:07,129
>> Okay,
I think it would look something like

51
00:03:07,129 --> 00:03:11,990
this where I have the weight,
the length.

52
00:03:11,990 --> 00:03:15,094
[BLANK_AUDIO]

53
00:03:15,094 --> 00:03:18,127
And then, I can say,
are the scales round?

54
00:03:18,127 --> 00:03:18,177
[BLANK_AUDIO]

55
00:03:18,176 --> 00:03:22,484
Are the scales long?

56
00:03:22,485 --> 00:03:23,634
[BLANK_AUDIO]

57
00:03:23,633 --> 00:03:27,050
And since I have just three
different options for the scales,

58
00:03:27,050 --> 00:03:28,897
I only need two dummy variables.

59
00:03:28,897 --> 00:03:32,855
So if the scales are round,

60
00:03:32,855 --> 00:03:37,855
I can put a one here and a zero here.

61
00:03:37,855 --> 00:03:40,247
If they're long,
I can put a zero here and a one here.

62
00:03:40,247 --> 00:03:43,847
And if there's no scales at all,
I can put a zero here and a zero here.

63
00:03:43,848 --> 00:03:44,712
>> That's a good observation.

64
00:03:44,711 --> 00:03:46,464
All right.

65
00:03:46,465 --> 00:03:50,150
I think that this looks like
a step in the right direction.

66
00:03:50,150 --> 00:03:55,560
Is there anything else you might need to
do to the data to make it suitable for

67
00:03:55,560 --> 00:03:57,370
a machine learning algorithm to consume?

68
00:03:58,512 --> 00:04:03,680
>> One thing I want to be concerned
about is to make sure that

69
00:04:04,860 --> 00:04:09,400
the dimensions of my data,
are sort of in the same range.

70
00:04:09,400 --> 00:04:13,990
because if we get into a situation
where maybe something like length which

71
00:04:13,990 --> 00:04:18,264
are much higher numbers than weight,
I might be leading my machine learning

72
00:04:18,264 --> 00:04:23,379
algorithm to think that this is a much
heavier contributor than the weight.

73
00:04:23,379 --> 00:04:28,543
So, some sort of regularization
of these variables or

74
00:04:28,543 --> 00:04:31,920
standardization needs to happen.

75
00:04:31,920 --> 00:04:33,100
>> Okay.

76
00:04:34,449 --> 00:04:39,346
>> For this situation, I see that
weight sort of ranges between 5 and

77
00:04:39,346 --> 00:04:42,587
10, and length between 50 and 100.

78
00:04:42,588 --> 00:04:45,817
So a simple solution that
might work just fine,

79
00:04:45,817 --> 00:04:51,480
is instead of defining length in inches,
is defining length in inches times 10.

80
00:04:51,480 --> 00:04:55,584
[BLANK_AUDIO]

81
00:04:55,584 --> 00:04:58,699
And then these two should
be of about the same value.

82
00:04:58,699 --> 00:05:02,659
>> Okay,
that's a reasonable transformation.

83
00:05:02,660 --> 00:05:06,578
But this is based on sort of prior
knowledge that these values are within

84
00:05:06,577 --> 00:05:07,435
these ranges.

85
00:05:07,435 --> 00:05:10,293
Sometimes on a real world data set,

86
00:05:10,293 --> 00:05:14,973
it's hard to know beforehand
what those ranges might be.

87
00:05:14,973 --> 00:05:16,619
So how would you deal
with that situation?

88
00:05:16,619 --> 00:05:17,365
[BLANK_AUDIO]

89
00:05:17,365 --> 00:05:22,930
>> Hm, so assuming that I
didn't know what the length and

90
00:05:22,930 --> 00:05:27,891
weight ranged in,
I could figure out another new

91
00:05:27,891 --> 00:05:31,774
way of normalizing these variables.

92
00:05:31,774 --> 00:05:38,027
By sort of defining a scale and
dividing that by the standard

93
00:05:38,028 --> 00:05:43,028
deviation such that each
of these has a range but

94
00:05:43,028 --> 00:05:47,531
it's also based on
the standard deviation

95
00:05:47,531 --> 00:05:51,552
of the data that we've already seen.

96
00:05:51,552 --> 00:05:52,877
>> That's a good point.

97
00:05:52,877 --> 00:05:56,813
So, usually for a normalization step,

98
00:05:56,814 --> 00:06:03,080
what are some of the other statistics
you might need to compute?

99
00:06:03,079 --> 00:06:05,609
You mentioned standard deviation.

100
00:06:05,610 --> 00:06:08,139
Is there anything else that
you might need to look at?

101
00:06:08,139 --> 00:06:11,709
>> The variance also might
be very useful in this case.

102
00:06:13,079 --> 00:06:17,370
So, either one of those might work.

103
00:06:17,370 --> 00:06:23,509
I might try with both of them and
see which one gives me the predictions

104
00:06:23,509 --> 00:06:26,949
that I expect after I feed it into
my machine learning algorithm.

105
00:06:26,949 --> 00:06:28,939
>> Okay, cool.

106
00:06:28,939 --> 00:06:33,519
I think this is an effective
way to transform the data and

107
00:06:33,519 --> 00:06:36,479
make it available for
a machine learning algorithm.

108
00:06:36,480 --> 00:06:41,700
My follow-up question would be what is
a possible machine learning algorithm or

109
00:06:41,699 --> 00:06:44,709
model that you might
use to model this data?

110
00:06:44,709 --> 00:06:49,295
>> Okay, So
since this is a classification problem,

111
00:06:49,295 --> 00:06:53,038
my default go to would
be a random forest.

112
00:06:53,038 --> 00:06:57,812
That's sort of a personal preference,
but I usually like to start by just

113
00:06:57,812 --> 00:07:02,510
feeding everything into a random
forest and checking the accuracy using

114
00:07:02,511 --> 00:07:06,300
cross validation to see how
my model is actually working.

115
00:07:06,300 --> 00:07:09,694
And then after that going back and
seeing if I should try and

116
00:07:09,694 --> 00:07:13,016
tune my machine learning algorithm,
or maybe go back and

117
00:07:13,016 --> 00:07:16,189
try a different
classification algorithm.

118
00:07:16,189 --> 00:07:18,709
>> Okay, that makes perfect sense to me.

119
00:07:18,709 --> 00:07:19,359
Thank you.

120
00:07:19,360 --> 00:07:19,710
>> Thank you.

