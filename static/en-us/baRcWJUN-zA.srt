1
00:00:00,670 --> 00:00:05,000
Let's illustrate how Panda's describe function works,

2
00:00:05,000 --> 00:00:08,060
using our Laman baseball data set. Say

3
00:00:08,060 --> 00:00:10,090
that our baseball data was loaded into

4
00:00:10,090 --> 00:00:13,378
a Panda's data frame called baseball, using Panda's

5
00:00:13,378 --> 00:00:17,510
read.csb function. Like so. If we call

6
00:00:17,510 --> 00:00:20,850
baseball that describe, what do we get back?

7
00:00:20,850 --> 00:00:25,580
You can see that baseball that describe returns a data frame in it of itself.

8
00:00:25,580 --> 00:00:31,432
For every numerical column, we see the count, mean, standard deviation, mean,

9
00:00:31,432 --> 00:00:36,739
25%, 50%, 75% and maximum

10
00:00:36,739 --> 00:00:41,300
values. We can do some quick checking to make sure there are data generally

11
00:00:41,300 --> 00:00:45,650
make sense. Here. LahmanID has actually been read in as a number, which is a bit

12
00:00:45,650 --> 00:00:47,790
misleading. We won't be doing any arithmetic on

13
00:00:47,790 --> 00:00:50,770
it. But we see that the minimum birth

14
00:00:50,770 --> 00:00:53,300
month is one, and the maximum birth month is 12,

15
00:00:53,300 --> 00:00:57,330
as we would expect. We see that the minimum birth date

16
00:00:57,330 --> 00:01:00,140
is one, and the maximum birth date is 31. That

17
00:01:00,140 --> 00:01:04,129
makes sense. And we see that the mean birth year is

18
00:01:04,129 --> 00:01:07,410
actually 1928, which to me is surprising. I'd think that

19
00:01:07,410 --> 00:01:10,420
it would be a little bit later. Investigating values like this,

20
00:01:10,420 --> 00:01:12,620
we can tell pretty quickly what our data looks like,

21
00:01:12,620 --> 00:01:15,990
and whether there might be any significant outliers in our data.

22
00:01:15,990 --> 00:01:18,140
In other words, are the min or max way

23
00:01:18,140 --> 00:01:21,420
larger than the values corresponding with the 25th or 75th

24
00:01:21,420 --> 00:01:25,200
percentile. Although we won't discuss exploratory analysis of data

25
00:01:25,200 --> 00:01:27,900
in depth, there's one thing that you might notice when

26
00:01:27,900 --> 00:01:30,120
looking at a summary of your data. It may

27
00:01:30,120 --> 00:01:33,740
have a bunch of missing values. This is evidenced here

28
00:01:33,740 --> 00:01:37,200
by the differences in count for our various columns. Since

29
00:01:37,200 --> 00:01:41,140
this is a particularly common problem. Let's discuss why values

30
00:01:41,140 --> 00:01:43,940
may be missing. And different methods we can use to

31
00:01:43,940 --> 00:01:47,510
mitigate the effect of those missing values on our analysis.
