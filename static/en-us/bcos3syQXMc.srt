1
00:00:00,000 --> 00:00:04,666
Given a plaintext input, the encryption
algorithm performs transformation to

2
00:00:04,666 --> 00:00:07,073
produce the corresponding ciphertext.

3
00:00:07,073 --> 00:00:10,137
The decryption algorithm
reverses the encryption process.

4
00:00:10,137 --> 00:00:13,109
That is,
it takes as input the ciphertext and

5
00:00:13,109 --> 00:00:15,464
produces the original plaintext.

6
00:00:15,464 --> 00:00:19,916
Instead of using a single key,
as in the symmetric encryption here,

7
00:00:19,916 --> 00:00:22,694
asymmetric encryption
use a pair of keys.

8
00:00:22,694 --> 00:00:26,874
One is used for encryption and
the other is used for decryption.

9
00:00:26,874 --> 00:00:29,854
The two keys are paired
mathematically together.

10
00:00:29,854 --> 00:00:33,160
That is, if you use a key for
encryption,

11
00:00:33,160 --> 00:00:37,804
only the corresponding paired
key can decrypt a message.

12
00:00:37,804 --> 00:00:41,437
Let's look at the essential
steps in asymmetric encryption.

13
00:00:41,437 --> 00:00:45,085
First, each user generates
a pair of keys that are paired

14
00:00:45,085 --> 00:00:47,260
together mathematically.

15
00:00:47,260 --> 00:00:49,869
One is the private key,
the other is the public key.

16
00:00:49,869 --> 00:00:54,736
The public key can be published,
for example, on a user's website or

17
00:00:54,736 --> 00:00:56,480
on a public repository.

18
00:00:56,480 --> 00:01:00,356
The purpose is for
everybody to know your public key, but

19
00:01:00,356 --> 00:01:03,767
a companion private key has
to be kept as a secret.

20
00:01:03,767 --> 00:01:08,387
That is, only the user should
know his or her own private key.

21
00:01:08,387 --> 00:01:11,501
Since public keys are meant
to be known by others,

22
00:01:11,501 --> 00:01:16,249
we can imagine that in practice, a user
such as Bob would have a collection of

23
00:01:16,249 --> 00:01:18,047
public keys of his friends.

24
00:01:18,047 --> 00:01:24,153
For example, in this case, Bob has the
public keys of Alice, Ted, Mike and Joy.

25
00:01:24,153 --> 00:01:27,822
Now suppose Bob wants to send
a private message to Alice.

26
00:01:27,822 --> 00:01:32,838
Bob will use Alice's public key,
which is in his collection to encrypt

27
00:01:32,838 --> 00:01:37,603
a plaintext using a asymmetric
encryption algorithm such as RSA and

28
00:01:37,603 --> 00:01:40,459
then transmit the ciphertext to Alice.

29
00:01:40,459 --> 00:01:45,251
It is mathematically guaranteed
that only Alice can decrypt this

30
00:01:45,251 --> 00:01:48,127
ciphertext properly into plaintext,

31
00:01:48,127 --> 00:01:53,020
because only Alice has the corresponding
companion private key.

32
00:01:53,020 --> 00:01:57,922
That is, if a public key is used to
encrypt a plaintext into the ciphertext,

33
00:01:57,922 --> 00:02:01,065
only the companion
corresponding public key can

34
00:02:01,065 --> 00:02:04,607
decrypt the ciphertext
properly into the plaintext.

35
00:02:04,607 --> 00:02:09,080
Therefore, in this case,
only Alice can see the plaintext.
