1
00:00:00,490 --> 00:00:02,560
The mini net tool we have been using

2
00:00:02,560 --> 00:00:06,040
in the course, is actually a example of, network

3
00:00:06,040 --> 00:00:10,080
visualization, we are in fact running a, an

4
00:00:10,080 --> 00:00:13,940
entire virtual network, on your laptop. When you start

5
00:00:13,940 --> 00:00:16,950
mini net using the MN script, each host

6
00:00:16,950 --> 00:00:20,695
in the virtual network, is a bash process. With

7
00:00:20,695 --> 00:00:23,270
it's own network name space. A network name

8
00:00:23,270 --> 00:00:26,490
space is kind of like a virtual machine except

9
00:00:26,490 --> 00:00:28,664
it's a lot more lightweight. It's infact

10
00:00:28,664 --> 00:00:31,350
called OS Level Virtualization. So, each one of

11
00:00:31,350 --> 00:00:34,000
these virtual nodes, has its own view of

12
00:00:34,000 --> 00:00:36,580
the network stack as shown here with these

13
00:00:36,580 --> 00:00:40,280
interfaces. But it has a shared filesystem and

14
00:00:40,280 --> 00:00:43,470
it's not, in fact, running it's own independent

15
00:00:43,470 --> 00:00:48,180
virtual machine. The root namespace manages the communication

16
00:00:48,180 --> 00:00:51,650
between these distinct virtual nodes, as well as

17
00:00:51,650 --> 00:00:56,140
the switch that connects these nodes in the topology that you set up. Virtual

18
00:00:56,140 --> 00:01:00,220
ethernet pairs are assigned two name spaces.

19
00:01:00,220 --> 00:01:03,610
For example, S1 eth1 is assigned to an

20
00:01:03,610 --> 00:01:09,870
interface in H2's network name space. And S1 eth2 is assigned to a network

21
00:01:09,870 --> 00:01:12,910
name space in H3's virtual network name

22
00:01:12,910 --> 00:01:17,090
space. The open flow switch effectively performs forwarding

23
00:01:17,090 --> 00:01:19,760
between the interfaces in the root name

24
00:01:19,760 --> 00:01:22,650
space. But because the interfaces are paired, we

25
00:01:22,650 --> 00:01:26,680
get the illusion, of sending traffic, between h2

26
00:01:26,680 --> 00:01:30,320
and h3. When we make modifications, to the

27
00:01:30,320 --> 00:01:33,230
open flow switch, via the controller we're infact

28
00:01:33,230 --> 00:01:35,830
doing that in the root name space. In

29
00:01:35,830 --> 00:01:40,020
summary, virtual networks facilitate flexible, agile deployment, by

30
00:01:40,020 --> 00:01:42,840
enabling rapid innovation at the pace of software.

31
00:01:42,840 --> 00:01:46,140
Vender independence, and scale. We talked about the distinction

32
00:01:46,140 --> 00:01:49,670
between SDN's and virtual networks, as well as various

33
00:01:49,670 --> 00:01:54,130
technologies that enable virtual networks, such as virtual machines

34
00:01:54,130 --> 00:01:57,750
for creating virtual nodes, and tunneling for creating virtual links.
