1
00:00:00,640 --> 00:00:03,410
So we've got a notification appearing,
but our goal is to give the user

2
00:00:03,410 --> 00:00:06,040
a button they can press to
get the latest version.

3
00:00:06,040 --> 00:00:08,760
Clicking this button needs to
tell the waiting service worker

4
00:00:08,760 --> 00:00:12,710
that it should take over straightaway,
bypassing the usual life cycle.

5
00:00:12,710 --> 00:00:14,340
Then we want to refresh the page so

6
00:00:14,340 --> 00:00:17,630
it reloads with the latest
assets from the newest cache.

7
00:00:17,630 --> 00:00:20,030
There are three new components
that help us achieve this.

8
00:00:21,430 --> 00:00:25,120
A service worker can call skipWaiting
while it's waiting or installing.

9
00:00:25,120 --> 00:00:27,880
This signals that it shouldn't queue
behind another service worker.

10
00:00:27,880 --> 00:00:29,460
It should take over straight away.

11
00:00:30,570 --> 00:00:33,120
We want to call this when
the user hits the refresh button

12
00:00:33,120 --> 00:00:35,140
in our update notification.

13
00:00:35,140 --> 00:00:38,550
But how do we send the signal from
the page to the waiting service worker?

14
00:00:40,010 --> 00:00:43,610
Your page can send messages to any
service worker using postMessage.

15
00:00:43,610 --> 00:00:46,670
And you can listen for messages in the
service worker using the message event.

16
00:00:46,670 --> 00:00:49,410
So, when the user clicks
the refresh button it

17
00:00:49,410 --> 00:00:52,595
will send a message to our service
worker telling it to call skip waiting.

18
00:00:52,595 --> 00:00:58,270
And the final part, we've already seen
navigator.serviceworker.controller but

19
00:00:58,270 --> 00:01:00,550
the page gets an event
when its value changes,

20
00:01:00,550 --> 00:01:03,052
meaning a new service
worker has taken over.

21
00:01:03,052 --> 00:01:05,840
We're going to use this as a signal
that we should reload the page.
