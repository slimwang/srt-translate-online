1
00:00:00,180 --> 00:00:01,620
The next thing I'm doing here then is I'm

2
00:00:01,620 --> 00:00:03,400
using a function that I wrote here in this

3
00:00:03,400 --> 00:00:06,710
code called is_street_name, okay. And the way

4
00:00:06,710 --> 00:00:11,420
is_street_name works is it simply looks at the element

5
00:00:11,420 --> 00:00:13,870
that was passed in so in this case, I'm

6
00:00:13,870 --> 00:00:17,560
taking that nested tag that I got back from my

7
00:00:17,560 --> 00:00:23,100
way element, alright? And I'm checking the k attribute

8
00:00:23,100 --> 00:00:25,970
for that element okay, and if you remember how attributes

9
00:00:25,970 --> 00:00:31,870
are part of a tag, okay. So for example, here is an example of

10
00:00:31,870 --> 00:00:37,560
a k attribute and in fact, what I'm doing next then is, I'm saying all right, I

11
00:00:37,560 --> 00:00:40,260
want that k attribute to actually have this

12
00:00:40,260 --> 00:00:43,820
value. Okay. So I'm looking for tags that

13
00:00:43,820 --> 00:00:46,940
actually specify a street name. Again we're talking

14
00:00:46,940 --> 00:00:51,140
about a way here. Okay. So items with

15
00:00:51,140 --> 00:00:54,390
this particular key should have as their value,

16
00:00:54,390 --> 00:00:58,680
the name for that way, whether it's 3rd Street

17
00:00:58,680 --> 00:01:01,650
or 14th Avenue or say, 7th Avenue here

18
00:01:01,650 --> 00:01:04,852
in New York City, near where the MongoDB offices

19
00:01:04,852 --> 00:01:10,560
are located, okay. So the next thing I'm doing here then is if I've got a tag

20
00:01:10,560 --> 00:01:13,365
that's actually specifying the name for that particular way,

21
00:01:13,365 --> 00:01:16,950
then I'm going to call audit_street_type, okay.

22
00:01:16,950 --> 00:01:19,080
So let's take a look at that. All right. Now,

23
00:01:19,080 --> 00:01:21,230
the way I've set up audit_street_type is it's actually

24
00:01:21,230 --> 00:01:23,510
going to use a regular expression. This regular expression is

25
00:01:23,510 --> 00:01:27,500
one that we've seen before. What it does is it pulls

26
00:01:27,500 --> 00:01:31,630
out or matches the very last word in a street

27
00:01:31,630 --> 00:01:35,050
name, because most street names end with the street type that

28
00:01:35,050 --> 00:01:38,250
we're interested in. So avenue or boulevard street, something along those

29
00:01:38,250 --> 00:01:42,210
lines, okay? So, in order to get the value that actually

30
00:01:42,210 --> 00:01:45,180
matched, so if this condition is true, then there was a

31
00:01:45,180 --> 00:01:48,120
match of some kind, and the way I get the specific match

32
00:01:48,120 --> 00:01:52,660
is by calling the group method of the matched object, okay?

33
00:01:52,660 --> 00:01:55,770
So the next step here then is what I'm doing is, I

34
00:01:55,770 --> 00:01:59,550
don't actually want to see these come out in my audit.

35
00:01:59,550 --> 00:02:02,620
These are what I expect as names. These are normal, there's nothing

36
00:02:02,620 --> 00:02:04,880
wrong with these. I don't care about these, I don't care about

37
00:02:04,880 --> 00:02:08,820
trying to fix these. I'm just trying to find weirdos here, okay.

38
00:02:08,820 --> 00:02:14,670
So what I want to do here is, if the street type that I matched okay, as the

39
00:02:14,670 --> 00:02:21,010
last word in the street name, okay, is not in my expected list. Then what I

40
00:02:21,010 --> 00:02:24,560
want to do is to my street types

41
00:02:24,560 --> 00:02:28,540
dictionary, which I initialized right here, what I want

42
00:02:28,540 --> 00:02:30,820
to do is add that street name. So

43
00:02:30,820 --> 00:02:33,930
basically what this says is, if the street type

44
00:02:33,930 --> 00:02:36,500
that I found here for this particular tag is a

45
00:02:36,500 --> 00:02:41,200
weirdo, then I want to add it to the street types

46
00:02:41,200 --> 00:02:44,300
dictionary where I'm keeping track of all the unusual street

47
00:02:44,300 --> 00:02:47,790
types. Okay now the way I've done this is I've set

48
00:02:47,790 --> 00:02:51,240
this up as a default dictionary, okay, and this allows

49
00:02:51,240 --> 00:02:53,510
me to not have to check to see whether the key

50
00:02:53,510 --> 00:02:57,530
is already in the dictionary it's a convenience. Okay, read the

51
00:02:57,530 --> 00:02:59,180
docs if you want to know a little bit more about

52
00:02:59,180 --> 00:03:01,860
default dictionaries. The value for each one of these

53
00:03:01,860 --> 00:03:05,870
keys, so, if I find something unusual like "ave." okay

54
00:03:05,870 --> 00:03:07,160
for example, which isn't going to be in this

55
00:03:07,160 --> 00:03:12,200
expected set, that key might appear in street_types. The value

56
00:03:12,200 --> 00:03:14,780
then, will be a set. So what I'm going

57
00:03:14,780 --> 00:03:17,950
to do then is for my street type, I'm going

58
00:03:17,950 --> 00:03:21,700
to add the specific street name that I found,

59
00:03:21,700 --> 00:03:24,330
because I'd like to see all of the examples, alright,

60
00:03:24,330 --> 00:03:28,730
where a particular unusual street type was used to give

61
00:03:28,730 --> 00:03:30,270
me a better sense for the data as a whole.
