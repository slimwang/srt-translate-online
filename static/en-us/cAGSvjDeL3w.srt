1
00:00:00,380 --> 00:00:04,019
The concept of Feature Detection that
we'd looked at, in case of images,

2
00:00:04,019 --> 00:00:05,430
still applies here.

3
00:00:05,430 --> 00:00:08,330
Here I'm showing a video, and
you can see all of the green dots.

4
00:00:08,330 --> 00:00:10,160
And these are features
that are being tracked.

5
00:00:10,160 --> 00:00:10,820
And, of course,

6
00:00:10,820 --> 00:00:13,960
there is a red box in the middle that
actually is trying to remain stable.

7
00:00:13,960 --> 00:00:16,690
We'll cover this a little bit more in
detail when we actually talk about video

8
00:00:16,690 --> 00:00:17,840
stabilization.

9
00:00:17,840 --> 00:00:20,940
But you can notice that,
in essence, feature detection

10
00:00:20,940 --> 00:00:25,360
is going on here as it was for images,
except that we're doing this over time.

11
00:00:25,360 --> 00:00:29,140
So, the whole concept remains
the same apply to images.

12
00:00:29,140 --> 00:00:31,790
But we're interest in here
is in leveraging the fact

13
00:00:31,790 --> 00:00:36,230
that features found in one frame
may also be visible in the next.

14
00:00:36,230 --> 00:00:38,280
So as long as there's
not a drastic change,

15
00:00:38,280 --> 00:00:41,640
that is each and every pixel has not
changed from one picture to the other,

16
00:00:41,640 --> 00:00:45,570
If there is some sort of commonality
in frames between one to the other,

17
00:00:45,570 --> 00:00:50,150
we can use that fact to
help us track features and

18
00:00:50,150 --> 00:00:52,888
observe similar types of things
from one frame to the other.

19
00:00:52,888 --> 00:00:56,330
So I could learn for example that in
this frame there was a building here

20
00:00:56,330 --> 00:00:57,720
with these types of colors.

21
00:00:57,720 --> 00:01:00,900
As it moves around there might be
a bunch of pixels coming up in the next

22
00:01:00,900 --> 00:01:04,510
few frames that may have the same
kind of color and appearance.
