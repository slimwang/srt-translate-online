1
00:00:00,360 --> 00:00:02,860
If you're collaborating or
working on another computer,

2
00:00:02,860 --> 00:00:05,660
the other party might not
have the linter configured.

3
00:00:05,660 --> 00:00:08,363
Since your colleague needs to run
the build to work with the site anyway,

4
00:00:08,363 --> 00:00:11,351
why not have the build run the linter,
and complain when something goes wrong?

5
00:00:11,351 --> 00:00:13,921
Install the gulp-eslint package and

6
00:00:13,921 --> 00:00:16,658
require it in the head
of your gulp file.

7
00:00:16,658 --> 00:00:20,970
Turns out the basic example on the
gulp-eslint readme works well for us.

8
00:00:20,970 --> 00:00:23,765
So I'm just going to copy it and
paste it into my gulp file.

9
00:00:23,765 --> 00:00:27,168
[BLANK_AUIDO].

10
00:00:27,168 --> 00:00:29,449
As you'll notice,
this task looks very familiar.

11
00:00:29,449 --> 00:00:32,903
It has the gulp source code,
but this time fetches js files,

12
00:00:32,903 --> 00:00:36,500
then uses pipes to do
a few things with eslint.

13
00:00:36,500 --> 00:00:39,730
The first pipe executes eslint and
all files matched.

14
00:00:39,730 --> 00:00:41,840
The second line outputs
the errors to the console, so

15
00:00:41,840 --> 00:00:43,580
we actually see what happened.

16
00:00:43,580 --> 00:00:46,990
And the third pipe ensures that gulp
exits with an error code and fails.

17
00:00:48,440 --> 00:00:50,650
Without that line,
gulp would show the errors but

18
00:00:50,650 --> 00:00:52,460
would proceed with everything else.

19
00:00:52,460 --> 00:00:54,610
Now we could execute the task manually.

20
00:00:54,610 --> 00:00:56,480
But let's integrate it
into our default task.

21
00:00:57,480 --> 00:01:00,190
First, add it to the second
argument area after styles.

22
00:01:00,190 --> 00:01:03,170
So it runs right after
running Gulp in the terminal.

23
00:01:03,170 --> 00:01:06,890
Then add a new line after
gulp.watch to add a new Gulp watch.

24
00:01:06,890 --> 00:01:10,200
This time watching the js files and
calling lint, instead of styles.

25
00:01:11,270 --> 00:01:14,590
The best thing is that we can later
reuse this new watcher to do even more

26
00:01:14,590 --> 00:01:15,750
great things to our js.

27
00:01:16,870 --> 00:01:17,950
And there we go.

28
00:01:17,950 --> 00:01:21,140
Try resetting Gulp in the terminal and
makes some changes through your js

29
00:01:21,140 --> 00:01:24,430
to see linting appear on your
terminal after every save.

30
00:01:24,430 --> 00:01:28,140
To wrap things up, there's a third
almost desperate way of forcing eslint

31
00:01:28,140 --> 00:01:29,548
up on your project collaborators.

32
00:01:29,548 --> 00:01:31,900
With a pre-commit hook,

33
00:01:31,900 --> 00:01:34,210
you can let everyone go crazy
on your own file systems.

34
00:01:34,210 --> 00:01:37,175
But as soon as they want to commit
a change to the shared git repository,

35
00:01:37,175 --> 00:01:41,120
eslint will run error out and
not let a commit through.

36
00:01:41,120 --> 00:01:43,070
In order to learn more
about pre-commit hooks,

37
00:01:43,070 --> 00:01:45,270
you should check out our
source control Udacity course.
