1
00:00:00,000 --> 00:00:02,990
And the answer here is in some way surprising.

2
00:00:02,990 --> 00:00:09,000
Although we have a 10 times improvement, we actually cannot handle an input that is much larger.

3
00:00:09,000 --> 00:00:12,600
We can only handle an input where n is 33 or smaller,

4
00:00:12,600 --> 00:00:14,730
and the way you can figure this out is as follows--

5
00:00:14,730 --> 00:00:19,710
If the maximum input size we can handle is 30, then the number of time steps

6
00:00:19,710 --> 00:00:35,320
this algorithm over here takes is 2³⁰ * 30², which is 966,367,641,600 time steps.

7
00:00:35,320 --> 00:00:38,410
So already a rather powerful computer at work here I would presume.

8
00:00:38,410 --> 00:00:40,920
What if we have an algorithm that is 10 times faster.

9
00:00:40,920 --> 00:00:52,480
Now, 2³¹*31²/10 is about 206 billion, 2³²*32²/10=440 billions--that is still smaller than this

10
00:00:52,480 --> 00:01:02,700
and 2³³*33² is about 93 billion, so slightly smaller still than this one here.

11
00:01:02,700 --> 99:59:59,999
If you increase it to 34, then this number here will become larger than this one over here.
