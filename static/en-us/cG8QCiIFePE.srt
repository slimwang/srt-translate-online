1
00:00:00,260 --> 00:00:05,270
Now, so far we have only looked at a specific index

2
00:00:05,270 --> 00:00:09,650
within an image matrix and done all kinds of mathematical operations,

3
00:00:09,650 --> 00:00:13,930
point processes of doing, for example, additions of this one to another one.

4
00:00:13,930 --> 00:00:20,970
So in essence in this one by looking at the index 0 1 2 and 0 1 2.

5
00:00:20,970 --> 00:00:26,140
I'm just looking at this specific pixel and looking at the intensity of that.

6
00:00:26,140 --> 00:00:28,090
What I want to now introduce in this lecture is that we

7
00:00:28,090 --> 00:00:29,150
can actually expand this.

8
00:00:29,150 --> 00:00:32,840
Not just looking at the one pixel but it's neighborhood.

9
00:00:32,840 --> 00:00:37,220
So here, for example now, is a three by three neighborhood around this pixel.

10
00:00:37,220 --> 00:00:43,490
We can look one, in all directions around this central pixel.

11
00:00:43,490 --> 00:00:46,290
And basically, now we have a small sub-matrix which is

12
00:00:46,290 --> 00:00:48,140
a three by three sub-matrix.

13
00:00:48,140 --> 00:00:52,250
So how do we actually now start using information, not just at that point but

14
00:00:52,250 --> 00:00:54,180
around that specific point.

15
00:00:54,180 --> 00:00:57,930
So the question now we're interested in is, how do we smooth the signal?

16
00:00:57,930 --> 00:01:00,970
Again, an image is represented as a matrix with

17
00:01:00,970 --> 00:01:04,410
basically the intensity signals now inputted into each and

18
00:01:04,410 --> 00:01:09,440
every, element, which now I can transverse by looking at the indices i and j.

19
00:01:09,440 --> 00:01:11,010
Now we're interested in saying okay,

20
00:01:11,010 --> 00:01:13,240
I'm going to take this three by three neighborhood and

21
00:01:13,240 --> 00:01:17,480
smooth out the value here with respect to what's happening around it.

22
00:01:17,480 --> 00:01:21,650
To help explain this, let's take this simple example of a 1D Signal.

23
00:01:21,650 --> 00:01:24,680
This is the original 1D Signal and as we traverse through it,

24
00:01:24,680 --> 00:01:30,010
you basically see simplify this, to be one of the rows off a image.

25
00:01:30,010 --> 00:01:31,410
And these are my intensities.

26
00:01:31,410 --> 00:01:36,360
And that's just for simplification just we'll take this as a 1D signal for now.

27
00:01:36,360 --> 00:01:39,760
Our interest in is that I want to be now able to get rid of some of

28
00:01:39,760 --> 00:01:41,540
the noise in this signal.

29
00:01:41,540 --> 00:01:44,340
Here I'm showing you a smooth version of the signal.

30
00:01:44,340 --> 00:01:47,410
Basically what I've done is now in essence run a process which

31
00:01:47,410 --> 00:01:50,250
basically looks at different aspects of this image or

32
00:01:50,250 --> 00:01:53,310
this signal here and says well this is too low.

33
00:01:53,310 --> 00:01:58,240
I need to move this up a little bit based on how I can smooth this curve or

34
00:01:58,240 --> 00:02:02,050
this whole image that would actually be represented here.

35
00:02:02,050 --> 00:02:05,460
Making assumptions like sometimes I want to do this smoothing because this

36
00:02:05,460 --> 00:02:08,560
might be an error or actually just want to smooth the signal out.

37
00:02:08,560 --> 00:02:12,900
One of the best ways of doing a simple smoothing of a signal could be that

38
00:02:12,900 --> 00:02:16,670
we can actually just take the average of the neighboring values.

39
00:02:16,670 --> 00:02:20,150
So I could for example look at these four si, four image values and

40
00:02:20,150 --> 00:02:22,200
intensity values and figure out the average of four or

41
00:02:22,200 --> 00:02:24,990
five of them and replace it in the middle.

42
00:02:24,990 --> 00:02:27,700
So here I'm showing a simple example how would I, I,

43
00:02:27,700 --> 00:02:29,240
I would go about doing an average.

44
00:02:29,240 --> 00:02:33,950
So this would be a moving average, what I'd take is I would take five values and

45
00:02:33,950 --> 00:02:39,570
basically, sum them and then divide them by five to get the average of the five,

46
00:02:39,570 --> 00:02:42,300
and replace, this element to have that value.

47
00:02:42,300 --> 00:02:47,920
And I would do this by moving one by one, as I would go down these indices.

48
00:02:47,920 --> 00:02:52,740
Another option would be is not just to do a one by one but actually, or

49
00:02:52,740 --> 00:02:56,620
just not doing a summation of equal things but change the weights around.

50
00:02:56,620 --> 00:03:01,140
Here is an example of that instance where now I give more weight to the one,

51
00:03:01,140 --> 00:03:03,100
the value that I'm actually changing.

52
00:03:03,100 --> 00:03:05,670
And less weight to the ones in the neighborhood.

53
00:03:05,670 --> 00:03:11,680
So in this instance, I have a flat signal that I'm actually also averaging,

54
00:03:11,680 --> 00:03:14,960
equally giving all neighborhood values equal weight.

55
00:03:14,960 --> 00:03:17,880
And this one, I'm actually giving it a little bit of a ram.

56
00:03:17,880 --> 00:03:20,640
And of course to sum this back and normalize it.

57
00:03:20,640 --> 00:03:21,770
And this one, I had five of them.

58
00:03:21,770 --> 00:03:23,170
I divided by five.

59
00:03:23,170 --> 00:03:26,020
And here the sum is 16, so I divide by 16 to

60
00:03:26,020 --> 00:03:30,800
be able to normalize the instance back to, the neighborhood that it's in.

61
00:03:30,800 --> 00:03:34,880
And this allows me to do smoothing in different ways and again, these are moving

62
00:03:34,880 --> 00:03:38,480
averages, and move from one pixel to the other, and start doing this.

63
00:03:38,480 --> 00:03:41,240
And again, I'm showing this in a simple 1D example.
