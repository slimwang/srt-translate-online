1
00:00:00,360 --> 00:00:02,350
Now, we're going to display the notes.

2
00:00:02,350 --> 00:00:05,370
We have a storyboard, and

3
00:00:05,370 --> 00:00:12,060
our storyboard has been updated with
a table VC, a table view controller.

4
00:00:12,060 --> 00:00:18,390
Also, we have a nodes view
controller class that inherits from

5
00:00:18,390 --> 00:00:24,960
core data table view controller, and has
a pretty standard cell forRowIndexPath.

6
00:00:24,960 --> 00:00:31,870
We get the note, we get the cell and we
sync note and sell and return the sell.

7
00:00:31,870 --> 00:00:37,100
The interesting part really isn't
that prepare for say on notebooks VC.

8
00:00:37,100 --> 00:00:40,590
Let's take a look at it
the first thing we need

9
00:00:40,590 --> 00:00:43,970
is a fetch request for the notes.

10
00:00:43,970 --> 00:00:48,520
Next, we need to specify how
we'd like them to be sorted, so

11
00:00:48,520 --> 00:00:52,660
we going to do that by creationDate and
also by the text.

12
00:00:53,830 --> 00:00:59,900
The next step would be to create
the NSFetchedResultsController and

13
00:00:59,900 --> 00:01:05,530
we inject it into the notes view
controller and we can display it.

14
00:01:05,530 --> 00:01:08,680
Let's take a look at how this displays.

15
00:01:10,160 --> 00:01:13,840
So have the notebooks and
I'll select these notes,

16
00:01:13,840 --> 00:01:17,960
the ones in Coding Notes,
and we get them all.

17
00:01:18,970 --> 00:01:22,390
Instead of two, we get three.

18
00:01:22,390 --> 00:01:24,340
So what is missing here?

19
00:01:24,340 --> 00:01:29,830
What's missing is a way to
filter only those notes that we

20
00:01:29,830 --> 00:01:35,760
are interested in in this case those
that belong to the specific notebook.

21
00:01:35,760 --> 00:01:41,070
And the way to filter the circuit result
by adding an instance of an NS predicate

22
00:01:41,070 --> 00:01:47,160
to our fetch request NS predicate is
a class that filters the search results.

23
00:01:47,160 --> 00:01:50,420
It can be configured with
a special micro language

24
00:01:50,420 --> 00:01:52,400
called predicate query language.

25
00:01:52,400 --> 00:01:53,630
Don't worry about that.

26
00:01:53,630 --> 00:01:55,410
It's extremely simple.

27
00:01:55,410 --> 00:01:58,000
So let's add one to a fetched request.

28
00:01:58,000 --> 00:02:01,470
The easiest way to create an NS
predicate is with the format string.

29
00:02:02,750 --> 00:02:06,990
So in order to create the predicate
first of all we need to find

30
00:02:06,990 --> 00:02:10,710
what's the exact notebook
that we're selecting

31
00:02:10,710 --> 00:02:14,250
at this point because we will need
that information in order to filter.

32
00:02:14,250 --> 00:02:18,820
So first thing we get
the indexPathForSelectedRow and

33
00:02:18,820 --> 00:02:23,080
then with objectAtIndexPath
we obtain the Notebook.

34
00:02:23,080 --> 00:02:26,760
Always remember to cast it to Notebook.

35
00:02:26,760 --> 00:02:30,470
Once we have this you can go ahead and
create the predicate.

36
00:02:30,470 --> 00:02:34,200
The easiest way is using this
initialize and this predicate.

37
00:02:34,200 --> 00:02:40,060
And then, a format which is simply
a string, a kind of a template string,

38
00:02:40,060 --> 00:02:45,940
and an array of arguments of
objects that will be substituted or

39
00:02:45,940 --> 00:02:48,530
inserted into the template.

40
00:02:48,530 --> 00:02:50,700
So the template simply states notebook,

41
00:02:50,700 --> 00:02:55,660
that means the property notebook,
of the note must be equal to.

42
00:02:55,660 --> 00:03:00,530
And this is a marker that says that
we're going to substitute here

43
00:03:00,530 --> 00:03:01,430
an object.

44
00:03:01,430 --> 00:03:02,390
What object?

45
00:03:02,390 --> 00:03:03,470
The notebook.

46
00:03:03,470 --> 00:03:05,380
So it's that easy.

47
00:03:05,380 --> 00:03:06,650
We're just saying the notebook.

48
00:03:06,650 --> 00:03:09,630
Must be equal to this one and

49
00:03:09,630 --> 00:03:15,880
you're done add it to the fetch
request and if you run.

50
00:03:15,880 --> 00:03:18,350
You have two notes and
once we click here.

51
00:03:18,350 --> 00:03:19,870
We only get it.

52
00:03:19,870 --> 00:03:23,800
So yeah it's that simple,
check it out for yourself.

53
00:03:23,800 --> 00:03:28,100
And I also recommend you take a look
at the NSPredicate documentation

54
00:03:28,100 --> 00:03:30,890
as you can create very
complex filters with it.

55
00:03:30,890 --> 00:03:35,840
We barely scratched the surface and
it's an extremely powerful class.

56
00:03:35,840 --> 00:03:38,200
Definitely a tool worth
having under your belt.
