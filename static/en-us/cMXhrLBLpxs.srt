1
00:00:00,820 --> 00:00:04,840
In the previous lesson, we were given a
function, the sum function, and we later

2
00:00:04,840 --> 00:00:09,090
added our tests, identified some bugs
and started refactoring our code.

3
00:00:09,090 --> 00:00:10,340
This approach works, but

4
00:00:10,340 --> 00:00:14,760
the real power behind testing shows
itself when you write your test first.

5
00:00:14,760 --> 00:00:18,120
This is called the red,
green refactor cycle.

6
00:00:18,120 --> 00:00:20,400
It's called this because you
write your test first and

7
00:00:20,400 --> 00:00:23,770
they all fail since there's
no code to make them pass.

8
00:00:23,770 --> 00:00:27,020
You then write the code required
to make your test pass.

9
00:00:27,020 --> 00:00:30,840
Once that's complete you can safely
refactor your code as continue to add

10
00:00:30,840 --> 00:00:32,340
new features.

11
00:00:32,340 --> 00:00:36,350
Let's put the red, green refactor cycle
into practice by writing our very own

12
00:00:36,350 --> 00:00:37,610
address book application.
