1
00:00:00,500 --> 00:00:01,670
In designing your code,

2
00:00:01,670 --> 00:00:04,400
it's important to understand
the problem that you're solving.

3
00:00:04,400 --> 00:00:07,040
So, let's think a bit about
the math of tournaments.

4
00:00:07,040 --> 00:00:10,040
If you'd like to skip straight
ahead to the code, feel free, but

5
00:00:10,040 --> 00:00:12,250
working through this may be helpful.

6
00:00:12,250 --> 00:00:14,405
In an elimination style tournament,

7
00:00:14,405 --> 00:00:17,715
each round eliminates half of
the players from contention.

8
00:00:17,715 --> 00:00:20,305
That means if you start
out with n players,

9
00:00:20,305 --> 00:00:23,485
it takes log to the base 2 n
rounds to find a champion.

10
00:00:23,485 --> 00:00:27,155
And the total number of
matches played is n minus 1.

11
00:00:27,155 --> 00:00:33,035
Like in this tournament here, there are
eight entrants, A, B, C, D, E, F, G, H.

12
00:00:33,035 --> 00:00:35,325
And finding a champion
takes three rounds.

13
00:00:35,325 --> 00:00:38,160
And sure enough,
the binary log of 8 is 3.

14
00:00:38,160 --> 00:00:41,510
There are four matches in the first
round, two in the second, and

15
00:00:41,510 --> 00:00:44,910
only one match in the third for
a total of seven matches.

16
00:00:44,910 --> 00:00:48,240
But how about in
the non-elimination Swiss system?

17
00:00:48,240 --> 00:00:51,220
For a given number of entrants,
how many rounds does it

18
00:00:51,220 --> 00:00:55,830
take to find a champion and
how many total matches are played?

19
00:00:55,830 --> 00:00:58,430
Let's take a specific example for
a quiz.

20
00:00:58,430 --> 00:01:00,500
Suppose there are 16 players.

21
00:01:00,500 --> 00:01:02,740
How many rounds and
how many matches will have to be played?
