1
00:00:00,012 --> 00:00:03,790
>> Now the output from texture packers is actually going to be a JSON file. We

2
00:00:03,790 --> 00:00:07,755
will need to load and parse the data in this file, in order to render all our

3
00:00:07,755 --> 00:00:11,995
sprites on the screen properly. Now, for each chart in the atlas, the JSON file

4
00:00:11,995 --> 00:00:16,085
lists a nice set of data, that allows us to understand more about this chart.

5
00:00:16,085 --> 00:00:20,023
For our purposes, we're really only concerned with two things. The first, being

6
00:00:20,023 --> 00:00:23,642
the name of this chart. Now, this was the name of the original loose asset

7
00:00:23,642 --> 00:00:27,497
before it was packed inside of our atlas. And secondly, is the data here in the

8
00:00:27,497 --> 00:00:31,568
frame parameter. Now, frame has 4 items that we actually care about. The first

9
00:00:31,568 --> 00:00:35,741
two, x and y, represent the top left corner of the chart inside of the atlas.

10
00:00:35,741 --> 00:00:39,842
The next two are width and height, which represent the size of this chart in the

11
00:00:39,842 --> 00:00:43,782
atlas itself. Now, we're going to use all 4 of these values to actually draw

12
00:00:43,782 --> 00:00:47,727
this chart to our canvas. Now, we've given you a sample data file to parse

13
00:00:47,727 --> 00:00:51,782
that's actually part of the grid scheme. What we'd like you to do is use this

14
00:00:51,782 --> 00:00:56,137
data to load the assets into our sample by filling out the parseAtlasDefinition

15
00:00:56,137 --> 00:00:58,175
function in the sprite sheet class.
