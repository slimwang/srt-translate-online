1
00:00:00,000 --> 00:00:02,000
Unit testing is something we're going to spend a lot of time

2
00:00:02,000 --> 00:00:04,000
in this course looking at, and unit testing means

3
00:00:04,000 --> 00:00:08,000
looking at some small software module at a time

4
00:00:08,000 --> 00:00:11,000
and testing it in an isolated fashion, and so this is what we were doing

5
00:00:11,000 --> 00:00:14,000
with the bounded buffer example from the last unit

6
00:00:14,000 --> 00:00:17,000
and with the square root function that we were talking about earlier in this unit.

7
00:00:17,000 --> 00:00:21,000
The main thing that distinguishes unit testing from other kinds of testing

8
00:00:21,000 --> 00:00:25,000
is that we're testing a smaller amount of software.

9
00:00:25,000 --> 00:00:27,000
Often the person performing the unit testing

10
00:00:27,000 --> 00:00:29,000
is the same person who implemented the module,

11
00:00:29,000 --> 00:00:32,000
and in that case we may well be doing white box testing.

12
00:00:32,000 --> 00:00:35,000
But unit testing can also be black box testing.

13
00:00:35,000 --> 00:00:38,000
The goal of unit testing is to find defects in the internal logic

14
00:00:38,000 --> 00:00:41,000
of the software under test as early as possible

15
00:00:41,000 --> 00:00:43,000
in order to create more robust software modules

16
00:00:43,000 --> 00:00:45,000
that we can compose later with other modules

17
00:00:45,000 --> 00:00:48,000
and end up with a system that actually works.

18
00:00:48,000 --> 00:00:51,000
Besides the size of the software under test the other thing that

19
00:00:51,000 --> 00:00:54,000
distinguishes unit testing from other kinds of testing is that

20
00:00:54,000 --> 00:00:57,000
generally at this level we have no hypothesis

21
00:00:57,000 --> 00:01:00,000
about the patterns of usage of the software under test.

22
00:01:00,000 --> 00:01:03,000
In other words, we're going to try to test the unit with inputs

23
00:01:03,000 --> 00:01:05,000
from all different parts of its domain.

24
00:01:05,000 --> 00:01:10,000
Remember, the domain is the set of possible inputs for this piece of software.

25
00:01:10,000 --> 00:01:12,000
Unit testing is also a kind of testing

26
00:01:12,000 --> 00:01:14,000
that enjoys a great deal of good tool support,

27
00:01:14,000 --> 00:01:18,000
and so Python, in fact, has a number of frameworks for unit testing.

28
00:01:18,000 --> 00:01:21,000
It also has a number of frameworks for what are called mock objects,

29
00:01:21,000 --> 00:01:25,000
and what mock objects are are fake objects

30
00:01:25,000 --> 00:01:28,000
that we can bolt under the software under test that mock up the behavior

31
00:01:28,000 --> 00:01:31,000
of the larger software system in which this unit lives.

32
00:01:31,000 --> 00:01:34,000
And what we'll do is we'll include links to some of these tools

33
00:01:34,000 --> 99:59:59,999
in the supplemental material for this course.
