1
00:00:00,180 --> 00:00:03,260
We just took an initial look at
how we can use Aria rolls and

2
00:00:03,260 --> 00:00:06,770
properties to specify the semantics for
a particular element.

3
00:00:07,850 --> 00:00:13,020
However, we should remember that native
HTML elements have implicit semantics.

4
00:00:13,020 --> 00:00:17,450
For example, input type= checkbox
implicitly has a role of checkbox.

5
00:00:18,540 --> 00:00:20,080
This means two things.

6
00:00:20,080 --> 00:00:24,730
Firstly, there is usually no need
to redefine default semantics and

7
00:00:24,730 --> 00:00:28,260
input type equals checkbox does not
need an extra role equals checkbox

8
00:00:28,260 --> 00:00:29,790
attribute to be announced as a checkbox.

9
00:00:30,910 --> 00:00:33,410
We'll come to an exception
to this rule later on.

10
00:00:33,410 --> 00:00:37,610
Secondly, sudden HTML elements have
restrictions on what ARIA role and

11
00:00:37,610 --> 00:00:40,770
attribute values may be
used effectively on them.

12
00:00:40,770 --> 00:00:43,535
Most of the time unless you're
doing something pretty weird,

13
00:00:43,535 --> 00:00:44,950
you won't run into any issues.

14
00:00:44,950 --> 00:00:49,787
But the ARIA in HTML spec has a table
explaining what ARIA may and may not be

15
00:00:49,787 --> 00:00:54,326
used with each type of HTML element
in case you want to get creative.

16
00:00:54,326 --> 00:00:59,308
For example a text field input type =
"text" may not have a role attribute

17
00:00:59,308 --> 00:01:00,030
applied.

18
00:01:01,180 --> 00:01:02,770
Speaking of implicit semantics,

19
00:01:02,770 --> 00:01:05,750
we mentioned earlier that
HTML landmark elements

20
00:01:05,750 --> 00:01:10,300
may be used to help assistive technology
users to find their way around the page.

21
00:01:10,300 --> 00:01:14,500
ARIA also offers a set of landmark and
document structure roles.

22
00:01:14,500 --> 00:01:17,590
Many of these are redundant
with HTML5 semantic elements.

23
00:01:17,590 --> 00:01:19,830
But depending on what browser
versions you need to support,

24
00:01:19,830 --> 00:01:24,380
it may be necessary in some cases to
use both an HTML5 semantic element and

25
00:01:24,380 --> 00:01:25,548
a redundant ARIA role.

26
00:01:25,548 --> 00:01:28,475
For example,,

27
00:01:28,475 --> 00:01:33,180
breaking the general rule of not
redefining default semantics.

28
00:01:33,180 --> 00:01:36,430
Because the default semantics may
not be fully supported in this case.
