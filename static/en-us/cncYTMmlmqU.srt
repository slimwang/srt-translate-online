1
00:00:00,337 --> 00:00:03,035
>> So the project that you're best known for

2
00:00:03,035 --> 00:00:05,540
when you were a graduate student is this Brooke Project.

3
00:00:05,540 --> 00:00:07,580
So can you tell us a little bit about that?

4
00:00:07,580 --> 00:00:11,374
And this was a very important step in sort of the progression of GPU computing

5
00:00:11,374 --> 00:00:13,658
to something that we can do commercially today.

6
00:00:13,658 --> 00:00:17,953
>> Yeah, back in the Direct X 9 days of computer graphics,

7
00:00:17,953 --> 00:00:21,348
GPUs started becoming truly programmable.

8
00:00:21,348 --> 00:00:26,208
People could express real programs, fairly short ones, maybe only 4 to 8 instructions long,

9
00:00:26,208 --> 00:00:29,752
that can actually solve a shading problem

10
00:00:29,752 --> 00:00:33,706
like face, skin, shade, fairly complicated stuff.

11
00:00:33,706 --> 00:00:35,521
A bunch of us in academia

12
00:00:35,521 --> 00:00:38,457
noticed that the performance of these GPUs was huge

13
00:00:38,457 --> 00:00:40,707
compared to CPUs of the day.

14
00:00:40,707 --> 00:00:44,040
The number of floating point operations you could do was an order of magnitude larger.

15
00:00:44,040 --> 00:00:47,088
So we studied and looked at how you could use GPUs

16
00:00:47,088 --> 00:00:49,494
for more general purpose things

17
00:00:49,494 --> 00:00:52,931
by hacking graphics APIs like Direct X.

18
00:00:52,931 --> 00:00:56,359
The research--a lot of people showed that was doable.

19
00:00:56,359 --> 00:00:59,957
>> But it was really hard. >> It was really hard to program.

20
00:00:59,957 --> 00:01:02,541
In fact, you needed a PhD in computer graphics

21
00:01:02,541 --> 00:01:05,081
to do even basic mathematical kind of stuff.

22
00:01:05,081 --> 00:01:07,705
In fact, there were folks in finance that were hiring

23
00:01:07,705 --> 00:01:12,200
game programmers to try to hack GPUs to solve financial problems.

24
00:01:12,200 --> 00:01:17,209
The research I did was basically study the more fundamental programming model around GPUs.

25
00:01:17,209 --> 00:01:22,043
What was it about GPUs that made them programmable and parallel

26
00:01:22,043 --> 00:01:25,539
but also present a more cohesive program model

27
00:01:25,539 --> 00:01:28,037
to general programmer

28
00:01:28,037 --> 00:01:30,834
to let them think about GPUs in a more general way.

29
00:01:30,834 --> 00:01:32,541
In the end, the project was called Brook.

30
00:01:32,541 --> 00:01:35,122
It was an actual software programming language

31
00:01:35,122 --> 00:01:37,288
for how to program in a general way GPUs

32
00:01:37,288 --> 00:01:40,370
on top of its existing graphic APIs

33
00:01:40,370 --> 00:01:43,852
so that users could think about more general data concepts

34
00:01:43,852 --> 00:01:46,370
instead of triangles and pixels and textures.

35
00:01:46,370 --> 00:01:48,587
>> What sort of things did people write in Brook?

36
00:01:48,587 --> 00:01:51,588
>> We wrote Raytracer to sort of study

37
00:01:51,588 --> 00:01:54,526
could a GPU actually implement a Raytracer,

38
00:01:54,526 --> 00:01:57,539
which is a fun thing, because lot of people said it couldn't be done.

39
00:01:57,539 --> 00:02:00,080
We did triangle meshing.

40
00:02:00,080 --> 00:02:04,119
We did a lot of simulation and grid kinds of stuff,

41
00:02:04,119 --> 00:02:09,369
thermodynamic problems, heat transfer problems, fluid flow kinds of problems.

42
00:02:09,369 --> 00:02:11,372
For the most part, it worked.

43
00:02:11,372 --> 00:02:14,370
It demonstrated the performance benefit.

44
00:02:14,370 --> 00:02:16,107
It was still early.

45
00:02:16,107 --> 00:02:17,943
They weren't fully general,

46
00:02:17,943 --> 00:02:19,870
so you did have to work around some of the hiccups,

47
00:02:19,870 --> 00:02:21,702
but from a research perspective,

48
00:02:21,702 --> 00:02:25,000
it achieved its goal of showing the potential of GPU computing.
