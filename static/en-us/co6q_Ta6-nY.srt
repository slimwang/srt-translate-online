1
00:00:00,560 --> 00:00:03,510
Accessibility of web content
requires semantic information about

2
00:00:03,510 --> 00:00:07,680
user input widgets, structures, and
behavior, to allow specific technologies

3
00:00:07,680 --> 00:00:11,250
to convey appropriate information
to people with disabilities.

4
00:00:11,250 --> 00:00:15,299
So far we've looked at how to make a web
app accessible using a sensible DOM

5
00:00:15,299 --> 00:00:18,500
order, which helps you create
a logical focus strategy,

6
00:00:18,500 --> 00:00:21,780
which lays the groundwork for
a rich keyboard experience.

7
00:00:21,780 --> 00:00:24,353
Both through the use of built-in
keyboard interactions and

8
00:00:24,353 --> 00:00:27,470
sophisticated custom
keyboard event handling.

9
00:00:27,470 --> 00:00:28,620
Using native elements for

10
00:00:28,620 --> 00:00:31,520
optimal keyboard usability
also gives us the built-in

11
00:00:31,520 --> 00:00:36,040
semantics used by assistive technology
to present a customized interface.

12
00:00:36,040 --> 00:00:39,560
But we also need to think about
labeling controls and images and

13
00:00:39,560 --> 00:00:43,380
being sure to add page structure using
headings and other semantic HTML

14
00:00:43,380 --> 00:00:47,400
elements to provide landmark
information for assistive technology.

15
00:00:47,400 --> 00:00:51,535
And finally the importance of links in
creating a rich interactive experience

16
00:00:51,535 --> 00:00:52,544
in a complex site.

17
00:00:52,544 --> 00:00:56,460
HTML comes with support for
all of those things built in.

18
00:00:56,460 --> 00:00:58,490
And that gets us a really long way, but

19
00:00:58,490 --> 00:01:01,480
sometimes it just doesn't
quite go far enough.

20
00:01:01,480 --> 00:01:05,297
For example, so far there's no
standardized HTML element for

21
00:01:05,297 --> 00:01:08,979
a drop down menu which is a pretty
commonly used UI metaphor.

22
00:01:08,979 --> 00:01:11,300
And there are some more
subtle semantics like,

23
00:01:11,300 --> 00:01:13,920
the user needs to know about
this as soon as possible.

24
00:01:14,920 --> 00:01:18,030
So in this lesson, we're going to
learn how we can express semantics,

25
00:01:18,030 --> 00:01:19,880
which HTML can't express on its own.
