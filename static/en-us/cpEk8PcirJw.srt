1
00:00:00,480 --> 00:00:04,000
If you take a class in probability theory you will likely hear the story of the

2
00:00:04,000 --> 00:00:09,264
Chevalier de Mere. He played two dice games. In game one, he would throw a die

3
00:00:09,264 --> 00:00:15,178
four time and bet on at least one six. In game two, he would throw two dice, 24

4
00:00:15,178 --> 00:00:20,498
times and bet on at least one pair of sixes. He thought that the odds of

5
00:00:20,498 --> 00:00:24,664
winning both games were 2 3rds. But from experience, he knew or at least his

6
00:00:24,664 --> 00:00:28,921
wallet knew that he was wrong. Pascal would later come along to figure out the

7
00:00:28,921 --> 00:00:32,676
actual odds and invent probability theory. But we don't care about that right

8
00:00:32,676 --> 00:00:36,960
now. We just want to help the poor Chevalier with the drudgery of throwing two

9
00:00:36,960 --> 00:00:41,625
dice 24 times. Let's complete this program that simulates game one and game

10
00:00:41,625 --> 00:00:47,770
two. These methods should return true if the Chevalier would win. Now there's

11
00:00:47,770 --> 00:00:51,468
one subtlety to this problem. In this case, the moment you see a six, you

12
00:00:51,468 --> 00:00:54,432
already know that he's won, but our generator is hooked up and doing a

13
00:00:54,432 --> 00:00:59,590
particular sequence. So that we can help you check your answer. Make sure to

14
00:00:59,590 --> 00:01:05,562
simulate rolling the die four times, even if you already know that he won.
