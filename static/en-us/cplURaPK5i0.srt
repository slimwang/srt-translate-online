1
00:00:00,000 --> 00:00:03,460
So Alice is now super, super happy, but what about the others?

2
00:00:03,460 --> 00:00:06,090
So I suggest that we take a look at Dave here,

3
00:00:06,090 --> 00:00:09,720
and Dave, as you remember, was working on a logistics problem,

4
00:00:09,720 --> 00:00:13,270
so what he was trying to solve was shortest tour.

5
00:00:13,270 --> 00:00:15,240
And actually, last time we left off,

6
00:00:15,240 --> 00:00:17,350
Dave wasn't too happy,

7
00:00:17,350 --> 00:00:19,420
because we found out it is not very easy to find

8
00:00:19,420 --> 00:00:23,350
a good search tree or a pre processing strategy

9
00:00:23,350 --> 00:00:25,080
for his problem.

10
00:00:25,080 --> 00:00:27,020
On the other hand, of course, we mentioned that in practice

11
00:00:27,020 --> 00:00:29,220
shortest tour is usually very easy to solve,

12
00:00:29,220 --> 00:00:31,400
but from a theoretical perspective,

13
00:00:31,400 --> 00:00:33,530
maybe we were a bit lucky for Dave;

14
00:00:33,530 --> 00:00:35,830
if we're not looking for the best possible solution,

15
00:00:35,830 --> 00:00:37,810
but except an approximation,

16
00:00:37,810 --> 00:00:39,650
and then if we should find an approximation,

17
00:00:39,650 --> 00:00:41,690
Dave can get a little happier here

18
00:00:41,690 --> 00:00:44,060
and of course he doesn't have to be as jealous that

19
00:00:44,060 --> 00:00:46,520
Alice has such an NP complete problem

20
00:00:46,520 --> 00:00:49,120
and he seems to have a harder one.

21
00:00:49,120 --> 00:00:51,420
Now lucky for Dave,

22
00:00:51,420 --> 00:00:53,900
there is a constant factor approximation algorithm

23
00:00:53,900 --> 00:00:55,380
for shortest tour,

24
00:00:55,380 --> 00:00:59,790
but since Dave is not that proficient in theoretical computer science,

25
00:00:59,790 --> 00:01:02,530
I think he doesn't really stand a chance

26
00:01:02,530 --> 00:01:04,410
of coming up with this algorithm himself,

27
00:01:04,410 --> 00:01:07,580
so you will have to pay close attention now

28
00:01:07,580 --> 00:01:09,560
to be able to explain it to Dave.

29
00:01:09,560 --> 00:01:11,210
The concept that we will use is that of a

30
00:01:11,210 --> 00:01:14,150
spanning tree, and if you've had an algorithm course before,

31
00:01:14,150 --> 00:01:16,110
you will know what a spanning tree is,

32
00:01:16,110 --> 00:01:19,740
but I'm quickly going to explain it to you just to make sure.

33
00:01:19,740 --> 00:01:22,620
A spanning tree is a part of a graph

34
00:01:22,620 --> 00:01:25,260
or actually it's a selection of edges

35
00:01:25,260 --> 00:01:28,500
in a graph so that the result looks

36
00:01:28,500 --> 00:01:30,390
like a tree.

37
00:01:30,390 --> 00:01:32,800
Well, what that means is that you select edges

38
00:01:32,800 --> 00:01:36,160
so that you still keep the whole graph connected,

39
00:01:36,160 --> 00:01:38,000
but you don't have any cycles,

40
00:01:38,000 --> 00:01:40,110
so a cycle would be something like this

41
00:01:40,110 --> 00:01:42,690
where you can leave a vertex and then come back to it

42
00:01:42,690 --> 00:01:44,830
another way, so you select edges

43
00:01:44,830 --> 00:01:47,380
so that the whole graph is still connected,

44
00:01:47,380 --> 00:01:49,530
but there can be no cycles, so

45
00:01:49,530 --> 00:01:52,150
to have you figure it out, let's do a quick quiz here.

46
00:01:52,150 --> 00:01:54,750
This is the thing that worked 3 times.

47
00:01:54,750 --> 00:01:57,130
I'm going to give you 3 choices of what a spanning tree could be,

48
00:01:57,130 --> 00:01:59,370
and the red edges are always those that

49
00:01:59,370 --> 00:02:01,610
I'm selecting here.

50
00:02:01,610 --> 00:02:04,230
I would like you to tell me in which of these cases

51
00:02:04,230 --> 99:59:59,999
the red edges from a spanning tree for the graph.
