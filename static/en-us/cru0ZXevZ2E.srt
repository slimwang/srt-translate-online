1
00:00:00,310 --> 00:00:02,936
Hi, welcome back to the show. Let's walk through the solution for this one

2
00:00:02,936 --> 00:00:06,214
because it's just a little bit tricky. First, we need to keep some sort of

3
00:00:06,214 --> 00:00:09,553
count on how many of the assets have been loaded and how many we're waiting to

4
00:00:09,553 --> 00:00:13,722
load. To do this, we create a nifty little object here, that has a count that

5
00:00:13,722 --> 00:00:16,758
represents how many objects have been loaded, a total which is how many objects

6
00:00:16,758 --> 00:00:21,545
we're waiting to load, and then the given call back function. Now we want to

7
00:00:21,545 --> 00:00:24,425
take our code, which previously only loaded one asset and issued a call back,

8
00:00:24,425 --> 00:00:29,030
and add loop around it so that we can do this for the entire asset list. Now,

9
00:00:29,030 --> 00:00:32,229
there's one tricky thing here, is that once we actually load an object and get

10
00:00:32,229 --> 00:00:35,330
a call back function for it, we want to do some logic before we issue the call

11
00:00:35,330 --> 00:00:39,362
back. So for instance once the first image is loaded, we don't want to issue

12
00:00:39,362 --> 00:00:42,991
the call back then, we want to wait until the entire set has been loaded. For

13
00:00:42,991 --> 00:00:46,550
this, we added the new function called onLoadedCallback. This function, given

14
00:00:46,550 --> 00:00:49,520
an asset that's been loaded, will actually go through and increase the count on

15
00:00:49,520 --> 00:00:53,479
the batch. Once our count equals that total number of assets we're waiting for,

16
00:00:53,479 --> 00:00:57,282
we actually issue the callback at that time. With this setup, you have the

17
00:00:57,282 --> 00:01:00,114
ability to issue a batch of assets, load them, and when they've all been

18
00:01:00,114 --> 00:01:02,961
loaded, you finally get your callback.
