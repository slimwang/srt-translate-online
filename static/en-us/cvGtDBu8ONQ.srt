1
00:00:00,290 --> 00:00:04,750
So, far you've been manipulating and
transforming color values.

2
00:00:04,750 --> 00:00:08,780
But they only capture one aspect
of an object's appearance.

3
00:00:08,779 --> 00:00:13,189
When you have a class of objects that
can vary in color, structural ques

4
00:00:13,189 --> 00:00:17,679
like gradients or edges might give
you a more robust presentation.

5
00:00:17,679 --> 00:00:22,009
In fact, the presence of gradients in
specific directions around the center

6
00:00:22,010 --> 00:00:24,870
may actually capture
some notion of shape.

7
00:00:24,870 --> 00:00:29,109
Let's take a look at some simple
shapes to better understand this idea.

8
00:00:29,109 --> 00:00:33,000
Here's a triangle, and
its corresponding gradient image.

9
00:00:33,000 --> 00:00:36,439
If you chop up the gradients
into different grid cells, and

10
00:00:36,439 --> 00:00:39,519
treat the cells as a flat, one d array.

11
00:00:39,520 --> 00:00:42,550
You obtain a signature for the triangle.

12
00:00:42,549 --> 00:00:47,099
Similarly, if you have a circle,
you obtain a different signature.

13
00:00:47,100 --> 00:00:50,710
Ideally, the signature for
a shape should have enough flexibility

14
00:00:50,710 --> 00:00:54,920
to accommodate small variations
in orientation, size, etc.

15
00:00:54,920 --> 00:00:57,010
But it should also be distinct, so

16
00:00:57,009 --> 00:01:00,049
that you can use it to
distinguish between shapes.

17
00:01:00,049 --> 00:01:03,119
One problem with using
gradient values directly,

18
00:01:03,119 --> 00:01:06,140
is that it makes
the signature too sensitive.

19
00:01:06,140 --> 00:01:08,799
Can you think of a way to allow for
some variability?

