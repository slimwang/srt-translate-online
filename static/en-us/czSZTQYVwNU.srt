1
00:00:00,400 --> 00:00:04,850
Building an app that uses Google
Services generally follows this pattern.

2
00:00:04,850 --> 00:00:08,070
First, you'll create a Google API
client, and on that client

3
00:00:08,070 --> 00:00:12,130
you'll specify the services that
you want to use the desired API.

4
00:00:12,130 --> 00:00:14,590
In this case, it's location services.

5
00:00:14,590 --> 00:00:18,040
Now, the activity that hosts this
client will need to be extended for

6
00:00:18,040 --> 00:00:20,680
the appropriate callbacks and listeners.

7
00:00:20,680 --> 00:00:25,800
The first of these is
GoogleApiClientConnectionCallbacks.

8
00:00:25,800 --> 00:00:30,010
These allow you to code against
events in the Api Client itself,

9
00:00:30,010 --> 00:00:33,350
such as connecting, or
disconnecting from the services.

10
00:00:33,350 --> 00:00:34,575
The next is the

11
00:00:34,575 --> 00:00:38,650
GoogleApiClient.OnConnectionFailedListe-
ner.

12
00:00:38,650 --> 00:00:40,860
This can alert you when
the connection drops,

13
00:00:40,860 --> 00:00:45,740
so that you can handle failures to
connect to Google Apis Gracefully.

14
00:00:45,740 --> 00:00:51,680
Specifically for location services,
you'll also need the location listener.

15
00:00:51,680 --> 00:00:55,360
And as its name suggests,
it listens to location updates so

16
00:00:55,360 --> 00:00:58,080
that you can respond to
them in your application.

17
00:00:58,080 --> 00:01:03,790
You then connect your clients and
wait for the on connected call back.

18
00:01:03,790 --> 00:01:06,620
Now for this app, you're going to
have code that makes a request for

19
00:01:06,620 --> 00:01:08,290
your current location.

20
00:01:08,290 --> 00:01:10,730
You put that in
the OnConnected Callback, and

21
00:01:10,730 --> 00:01:15,620
this sets up another Callback
called OnLocationChanged.

22
00:01:15,620 --> 00:01:20,210
And when the OnLocationChange Callback
fires, it will contain your location

23
00:01:20,210 --> 00:01:24,350
information so that you can capture
details such as the latitude, and

24
00:01:24,350 --> 00:01:25,730
update your UI accordingly.
