1
00:00:00,530 --> 00:00:01,839
All right.
So hopefully you have a better

2
00:00:01,839 --> 00:00:05,220
understanding of why
OnClickListener is an interface

3
00:00:05,220 --> 00:00:07,820
with an abstract method called OnClick.

4
00:00:07,820 --> 00:00:11,460
Your role as the developer is to
set up the event listeners for

5
00:00:11,460 --> 00:00:14,230
the input events you want
to handle in your app.

6
00:00:14,230 --> 00:00:19,080
More specifically, for each listener
you will need to follow three steps.

7
00:00:19,080 --> 00:00:21,430
Number 1, define the event listener and

8
00:00:21,430 --> 00:00:24,500
the custom behavior or
when the event happens.

9
00:00:24,500 --> 00:00:27,290
Number 2, create a new object instance

10
00:00:27,290 --> 00:00:29,278
of the event listener by
calling the constructor.

11
00:00:29,278 --> 00:00:33,440
And number 3, attach the listener to the
view you want to listen for events on.

12
00:00:33,440 --> 00:00:36,170
And then I'll show you the code
you need at each step.

13
00:00:36,170 --> 00:00:39,070
First we need to define an event
listener class that implements

14
00:00:39,070 --> 00:00:39,990
the interface.

15
00:00:39,990 --> 00:00:43,310
You can call it anything you want as
long as it follows the Java conventions

16
00:00:43,310 --> 00:00:44,840
for naming classes.

17
00:00:44,840 --> 00:00:48,255
In this case,
we named the class NumbersClickListener.

18
00:00:48,255 --> 00:00:52,580
And this code is located in a new filed
called, NumbersClickListener.java.

19
00:00:52,580 --> 00:00:56,210
When we define the NumbersClickListener
class, the declaration should say,

20
00:00:56,210 --> 00:00:59,530
public class, followed by the name
of the class, followed by the word

21
00:00:59,530 --> 00:01:03,930
implements, and then the interface name,
which is OnClickListener in this case.

22
00:01:03,930 --> 00:01:07,240
So note that implements is a Java
key word that has a special meaning.

23
00:01:07,240 --> 00:01:09,870
And you can find a list of
these special key words

24
00:01:09,870 --> 00:01:12,060
in the Java Oracle documentation here.

25
00:01:12,060 --> 00:01:16,270
We use implements to express that the
NumbersClickListener class will support

26
00:01:16,270 --> 00:01:20,450
the specified interface and provide
code for all it's abstract methods.

27
00:01:20,450 --> 00:01:23,150
By implementing
the OnClickListener interface, for

28
00:01:23,150 --> 00:01:27,460
every piece in the Android code that
expects an OnClickListener object type,

29
00:01:27,460 --> 00:01:29,570
we can use the NumbersClickListener.

30
00:01:29,570 --> 00:01:33,810
And right before the method we
have this @Override annotation.

31
00:01:33,810 --> 00:01:37,550
This means that we are overriding
the blank method in the interface and

32
00:01:37,550 --> 00:01:39,280
providing our own implementation.

33
00:01:39,280 --> 00:01:42,969
Our implementation of the OnClick method
is that we want a toast message to pop

34
00:01:42,969 --> 00:01:45,390
up that says, open the list of numbers.

35
00:01:45,390 --> 00:01:47,900
We could've provided any
other customer behavior here.

36
00:01:47,900 --> 00:01:49,010
This is just an example.

37
00:01:49,010 --> 00:01:51,480
Once we define our numbers,
clickListener class.

38
00:01:51,480 --> 00:01:53,630
We need to create
an object instance of it.

39
00:01:53,630 --> 00:01:57,050
If you remember from the last course,
we have the class template, but

40
00:01:57,050 --> 00:01:59,360
we need to create
object instances of it.

41
00:01:59,360 --> 00:02:02,990
We just created a floor plan,
but we need an actual house.

42
00:02:02,990 --> 00:02:06,230
Remember back to the syntax for
creating an object using a constructor.

43
00:02:06,230 --> 00:02:09,229
To create a NumbersClickListener
object instance,

44
00:02:09,229 --> 00:02:12,660
we can call the constructor for
the class with the new keyword.

45
00:02:12,660 --> 00:02:16,100
This creates a new object that
we can store in this variable

46
00:02:16,100 --> 00:02:19,218
on the left-hand side,
where the variable is of this data type.

47
00:02:19,218 --> 00:02:20,320
Within the Miwok app,

48
00:02:20,320 --> 00:02:23,080
this is what the code looks
like in the main activity file.

49
00:02:23,080 --> 00:02:26,900
We modify the main activity so that we
can immediately start listening for

50
00:02:26,900 --> 00:02:29,600
click events as soon as
the activity is created.

51
00:02:29,600 --> 00:02:32,870
We're creating a new
NumbersClickListener object and

52
00:02:32,870 --> 00:02:35,470
storing it in a variable
called ClickListener,

53
00:02:35,470 --> 00:02:38,980
which is of the variable data
type NumbersClickListener.

54
00:02:38,980 --> 00:02:42,040
So once we have an object instance
of a NumbersClickListener,

55
00:02:42,040 --> 00:02:45,790
we need to attach it to the view that
we want to listen for clicks on.

56
00:02:45,790 --> 00:02:47,140
And this is the code for that.

57
00:02:47,140 --> 00:02:50,560
Assuming we have the view stored
as a variable, called buttonView,

58
00:02:50,560 --> 00:02:54,150
we just need to call the set
OnClickListener method on that view and

59
00:02:54,150 --> 00:02:58,240
pass in one parameter argument,
the ClickListener variable.

60
00:02:58,240 --> 00:03:01,620
Well how do we know to call this method
with this particular input argument?

61
00:03:01,620 --> 00:03:03,860
Back to our handy dandy documentation.

62
00:03:03,860 --> 00:03:07,370
Here we'll take a look at the View
class, and it has a method

63
00:03:07,370 --> 00:03:11,508
called setOnClickListener,
where you pass in an OnClickListener.

64
00:03:11,508 --> 00:03:14,270
Since the NumbersClickListener
implements this interface

65
00:03:14,270 --> 00:03:17,070
It is also considered
an OnClickListener data type, and

66
00:03:17,070 --> 00:03:20,180
we can pass that in as
an input to the method.

67
00:03:20,180 --> 00:03:23,640
Now let's see what the code looks
like within the context of the app.

68
00:03:23,640 --> 00:03:26,730
However, you won't need to
make these changes just yet.

69
00:03:26,730 --> 00:03:29,680
The quiz in the next video will
give you more specific instructions

70
00:03:29,680 --> 00:03:31,160
on what we need to do.

71
00:03:31,160 --> 00:03:34,420
So just follow along and
try to understand the logic.

72
00:03:34,420 --> 00:03:37,010
So here I've created
a NumbersClickListener class, and

73
00:03:37,010 --> 00:03:39,450
defined it in it's own Java file.

74
00:03:39,450 --> 00:03:42,810
Remember that we specify
the package name in the code so

75
00:03:42,810 --> 00:03:46,380
that our code is bundled under
this unique package name.

76
00:03:46,380 --> 00:03:49,330
Then we have the import statements,
because we're using the View and

77
00:03:49,330 --> 00:03:50,340
Toast classes.

78
00:03:50,340 --> 00:03:52,560
And we can use them even though
we didn't create them ourselves,

79
00:03:52,560 --> 00:03:53,900
because we're importing them.

80
00:03:53,900 --> 00:03:59,630
Then in the class declaration,
we have implements View.OnClickListener.

81
00:03:59,630 --> 00:04:03,310
And I'd like to point out that
we add View.OnClickListener

82
00:04:03,310 --> 00:04:06,990
to be very explicit that we're
referring to the OnClickListener

83
00:04:06,990 --> 00:04:10,070
that is part of the view.java
file in this package.

84
00:04:10,070 --> 00:04:14,460
And recall that we use the .operator
to access Java class members.

85
00:04:14,460 --> 00:04:18,031
So here in the NumbersClickListener,
I have created an onClick method.

86
00:04:18,031 --> 00:04:21,320
And in it I've said when
the numbers category is clicked on,

87
00:04:21,320 --> 00:04:26,030
we choose to display a Toast message
that says, open the list of numbers.

88
00:04:26,030 --> 00:04:26,980
And there you have it.

89
00:04:26,980 --> 00:04:28,810
This is the NumbersClickListener.

90
00:04:28,810 --> 00:04:30,893
Now I'm going to switch
over to main activity.

91
00:04:30,893 --> 00:04:32,740
And at the end of the OnCreate method,

92
00:04:32,740 --> 00:04:35,420
we need to create a new
ClickListener object.

93
00:04:35,420 --> 00:04:38,420
Now we need to attach the ClickListener
to the numbers category view.

94
00:04:38,420 --> 00:04:42,040
However, first we need to find that
view object in the viewer hierarchy.

95
00:04:42,040 --> 00:04:46,190
And this process should be familiar from
the Just Java app in the last course.

96
00:04:46,190 --> 00:04:48,600
So here's how we're
going to write that code.

97
00:04:48,600 --> 00:04:52,890
So to find the view that
shows the number category.

98
00:04:53,980 --> 00:04:57,030
So here I call
the findViewById method and

99
00:04:57,030 --> 00:04:59,860
request the view with the ID numbers.

100
00:04:59,860 --> 00:05:01,380
So once we find the text view,

101
00:05:01,380 --> 00:05:03,870
we can store in a variable that
I'm going to call numbers.

102
00:05:03,870 --> 00:05:07,910
Then we can call the set OnClickListener
method on this text view and

103
00:05:07,910 --> 00:05:10,370
pass the ClickListener object as input.

104
00:05:10,370 --> 00:05:12,110
So here's how that would look.

105
00:05:12,110 --> 00:05:15,565
So here we set the OnClickListener
method on the text view in passing

106
00:05:15,565 --> 00:05:17,757
the ClickListener object as it's input.

107
00:05:17,757 --> 00:05:21,487
So the TextView numbers in our case
will store the clickListener object.

108
00:05:21,487 --> 00:05:25,830
And later, if this TextView is pressed,
the ClickListener jumps into action.

109
00:05:25,830 --> 00:05:29,116
In order to test that this Java
code I wrote actually works,

110
00:05:29,116 --> 00:05:32,741
I have to delete some old code that
we wrote from the button click.

111
00:05:32,741 --> 00:05:34,783
So in the activity_main XML file,

112
00:05:34,783 --> 00:05:39,910
I'll need to delete the Android onClick
attribute on the numbers TextView.

113
00:05:39,910 --> 00:05:46,510
So in the main activity I'll also need
to remove the open numbers list method.

114
00:05:46,510 --> 00:05:52,155
And this leaves the main activity
with one method, the onCreate method.

115
00:05:52,155 --> 00:05:53,547
Now when I run the app on my device,

116
00:05:53,547 --> 00:05:55,809
clicking the numbers category
pops up a toast message.

117
00:05:55,809 --> 00:05:56,309
Great.
Now my ClickListener code is working.
