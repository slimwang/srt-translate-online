1
00:00:00,548 --> 00:00:03,781
Solution we'll look back in the iPython Notebook.

2
00:00:03,781 --> 00:00:06,145
Your code should look something like this.

3
00:00:06,145 --> 00:00:08,925
You could also use the original data set by

4
00:00:08,925 --> 00:00:12,420
un-commenting the commented lines here.

5
00:00:12,420 --> 00:00:14,430
Now we're on this piece of code,

6
00:00:14,430 --> 00:00:20,140
we can again use the describe function to look at a summary of the data.

7
00:00:20,140 --> 00:00:22,117
Once that finishes running,

8
00:00:22,117 --> 00:00:27,030
you will get a table that looks very similar to the one we got for Illinois.

9
00:00:27,030 --> 00:00:31,026
We can then look at the first ten lines of the f

10
00:00:31,026 --> 00:00:34,382
underscore California data frame.

11
00:00:34,382 --> 00:00:38,353
Running that code, then gives you this table.

12
00:00:38,353 --> 00:00:43,175
When you scroll down, you will see the ten rolls we wanted printed and

13
00:00:43,175 --> 00:00:44,852
twenty eight columns.

14
00:00:44,852 --> 00:00:49,355
So now, we have a new data frame for California.

15
00:00:49,355 --> 00:00:55,125
Throughout this lesson, we'll show examples with the state of Illinois dataset.

16
00:00:55,125 --> 00:01:01,166
At some point in quizzes, we'll ask you to use the California dataset and

17
00:01:01,166 --> 00:01:03,804
repeat what we have just shown.

18
00:01:03,804 --> 00:01:08,020
We're going to explore the Medicare dataset somewhat further.

19
00:01:08,020 --> 00:01:13,190
Remember, we wanted to see how we can find anomalies in the data.

20
00:01:13,190 --> 00:01:16,030
Although we wanted to find outliers,

21
00:01:16,030 --> 00:01:21,840
the x size here is not necessarily to find farther outliers.

22
00:01:21,840 --> 00:01:27,373
Note the exercise here is not necessarily to find outliers or

23
00:01:27,373 --> 00:01:30,301
fraud in the Medicare data, but

24
00:01:30,301 --> 00:01:37,369
to walk through the ways we can go about finding anomalies in data in general.

25
00:01:37,369 --> 00:01:41,136
So the next important question we are going to ask is

26
00:01:41,136 --> 00:01:44,910
what are the variables of interest in the dataset?

27
00:01:46,370 --> 00:01:52,693
Let's switch back to the iPython Notebook to investigate this.

28
00:01:52,693 --> 00:01:56,426
We had seen from the summary of the dataset that we

29
00:01:56,426 --> 00:01:59,259
had 28 different columns of data.

30
00:01:59,259 --> 00:02:02,059
We had seen from the summary of the dataset that we

31
00:02:02,059 --> 00:02:04,050
had 28 different columns in it.

32
00:02:05,260 --> 00:02:08,669
Let's try to print the names of the columns.

33
00:02:08,669 --> 00:02:13,010
To do so, simply execute this line of code.

34
00:02:13,010 --> 00:02:15,310
The list of columns is long.

35
00:02:15,310 --> 00:02:17,440
If you scroll to the bottom of it,

36
00:02:17,440 --> 00:02:22,410
you would see six variables that may be of interest to us.

37
00:02:22,410 --> 00:02:27,180
One of them is called average Medicare allowed amount.

38
00:02:27,180 --> 00:02:31,100
The other is average submitted charge amount and

39
00:02:31,100 --> 00:02:34,220
another is average Medicare payment amount.

40
00:02:34,220 --> 00:02:38,590
The six variables that may be interesting are the average and

41
00:02:38,590 --> 00:02:42,600
standard deviation of the Medicare allowed amount.

42
00:02:42,600 --> 00:02:46,750
The submitted charge amount and the Medicare payment amount.

43
00:02:46,750 --> 00:02:52,600
These are the variables that have directly some indication of charges.

44
00:02:52,600 --> 00:02:56,330
We're going to investigate these variables further.

45
00:02:56,330 --> 00:03:01,020
Some of the other columns are very specific to Medicare and

46
00:03:01,020 --> 00:03:06,810
could be useful if we did some more research on Medicare and the data.

47
00:03:06,810 --> 00:03:11,550
However, without doing some domain specific research, we can still see

48
00:03:11,550 --> 00:03:18,080
that these variables could be of interest in detecting unusual charges.

49
00:03:18,080 --> 00:03:23,839
To keep things simple, we are only going to use the average Medicare amount.

50
00:03:23,839 --> 00:03:28,586
We can use the standard deviation of the Medicare allowed amount and

51
00:03:28,586 --> 00:03:30,836
the submitted charge amount and

52
00:03:30,836 --> 00:03:36,510
the payments amount as inherent and reducible variants in the average charges.

53
00:03:38,090 --> 00:03:42,020
After looking at the variables of interest in the dataset,

54
00:03:42,020 --> 00:03:46,740
we came to the conclusions that the allowed amount, the charged amount and

55
00:03:46,740 --> 00:03:51,280
the payment amount might be of interest for our investigation.
