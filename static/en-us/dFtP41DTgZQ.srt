1
00:00:00,000 --> 00:00:02,767
So now we're going to turn to the parallel reduce.

2
00:00:02,767 --> 00:00:08,863
So how do we formulate an algorithm, a procedure to be able to speed this up by running in parallel?

3
00:00:08,863 --> 00:00:11,789
Let's take a look at this reduce picture here.

4
00:00:11,789 --> 00:00:15,127
At first glance this seems very difficult to parallelize.

5
00:00:15,127 --> 00:00:20,819
Note that every operation is dependent on the result of the previous operation.

6
00:00:20,819 --> 00:00:23,772
So let's write these operations explicitly.

7
00:00:23,772 --> 00:00:28,313
When we formulate the reduction in this way, we have no parallelism.

8
00:00:28,313 --> 00:00:32,202
So can you figure out how to rewrite this to expose more parallelism

9
00:00:32,202 --> 00:00:35,202
so that we can do more than 1 thing at the same time?

10
00:00:35,202 --> 00:00:38,652
And the hint is, use the associative property of the operator.

11
00:00:38,652 --> 00:00:44,086
How do you rewrite a + b, take the result, add it to c, take the result. add it to d,

12
00:00:44,086 --> 00:00:46,234
to allow parallel execution?

13
00:00:46,234 --> 00:00:49,009
In your answer please use parentheses to show grouping.
