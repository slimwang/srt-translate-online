1
00:00:00,190 --> 00:00:03,956
We'll start with a pattern of a counter. That pattern teaches us to make an

2
00:00:03,956 --> 00:00:11,052
integer variable that counts whatever it is that we want to count. You want to

3
00:00:11,052 --> 00:00:14,778
have another method that increments the counter when whatever interesting event

4
00:00:14,778 --> 00:00:21,194
happens that you're counting. And you'll usually want a method that returns the

5
00:00:21,194 --> 00:00:26,578
current counter value so that the user of the class can get at it. Okay, that's

6
00:00:26,578 --> 00:00:30,663
all really abstract, so let's look at a concrete example. Here, I have the

7
00:00:30,663 --> 00:00:35,064
beginning of a Car class. A car has a given number of seats. That of course is

8
00:00:35,064 --> 00:00:38,812
not my integer counter, because that number doesn't change. And then I have a

9
00:00:38,812 --> 00:00:44,772
method here called addPassenger. Whenever that method gets called, another

10
00:00:44,772 --> 00:00:50,789
passenger enters the car. And then I have a method for counting the number of

11
00:00:50,789 --> 00:00:57,635
passengers in this car, not counting the driver. What I'd like you to do is,

12
00:00:57,635 --> 00:01:02,360
use this pattern and add an instance variable for the counter, which you can

13
00:01:02,360 --> 00:01:10,354
call anything that you think is appropriate. And to implement the methods that

14
00:01:10,354 --> 00:01:16,722
increment the counter and that returns current value.
