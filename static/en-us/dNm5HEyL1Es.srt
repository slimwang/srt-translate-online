1
00:00:00,440 --> 00:00:01,200
So the intention for

2
00:00:01,200 --> 00:00:05,050
this task was to give you practice
with reading a tutorial on the web and

3
00:00:05,050 --> 00:00:08,920
seeing another example of JSON
parsing in action for Android.

4
00:00:08,920 --> 00:00:13,000
This example starts assuming a specific
JSON response is stored in a string

5
00:00:13,000 --> 00:00:17,630
called STR JSON or STR JSON for short.

6
00:00:17,630 --> 00:00:21,050
You may notice that the string also
has the back slash characters included

7
00:00:21,050 --> 00:00:22,860
wherever there's a quotation mark.

8
00:00:22,860 --> 00:00:26,100
But normally it would look
like the JSON we've seen.

9
00:00:26,100 --> 00:00:29,290
Okay, so let's go and
examine the code here in this example.

10
00:00:29,290 --> 00:00:32,049
The first thing I'm going to do is
actually copy and paste this block of

11
00:00:32,049 --> 00:00:35,540
code out of this small middle window so
it's easier to read.

12
00:00:35,540 --> 00:00:37,690
And then we can examine it from there.

13
00:00:37,690 --> 00:00:41,710
So all I've done here is copy the code
example into a simple text editor.

14
00:00:41,710 --> 00:00:45,890
In this case I'm using Sublime text
edit, but any text editor would work.

15
00:00:45,890 --> 00:00:50,290
So let's go ahead and talk about
the code that's here in onCreate.

16
00:00:50,290 --> 00:00:52,320
So you already know about
the string STRJSON,

17
00:00:52,320 --> 00:00:56,240
which contains a raw JSON,
and the main code

18
00:00:56,240 --> 00:01:00,330
that we're trying to look at here is
actually in our try block right here.

19
00:01:00,330 --> 00:01:03,290
So let's examine
the lines one at a time.

20
00:01:03,290 --> 00:01:06,400
The first thing we do is
we create a new JSON object

21
00:01:06,400 --> 00:01:09,020
from the JSON string
that we created earlier.

22
00:01:09,020 --> 00:01:12,650
Then the next thing that happens is
we find the employee's jsonArray

23
00:01:12,650 --> 00:01:15,590
by looking for the key called employee.

24
00:01:15,590 --> 00:01:18,240
Now, instead of using a getter
method such as getjsonArray,

25
00:01:18,240 --> 00:01:22,180
you see a method called
optjsonArray used.

26
00:01:22,180 --> 00:01:25,820
This is simply an alternative
way to get the JSONArray back.

27
00:01:25,820 --> 00:01:28,210
If you were to check the official
android documentation At

28
00:01:28,210 --> 00:01:33,580
developer.android.com, you'd see
that the method optJSONArray

29
00:01:33,580 --> 00:01:38,250
needs to return a JSONArray if
it exist for a given key name.

30
00:01:38,250 --> 00:01:42,510
Now if the array doesn't exist, then
the method will return no otherwise.

31
00:01:42,510 --> 00:01:46,200
All right, so the next major thing
that we do is we create a loop

32
00:01:46,200 --> 00:01:48,720
to iterate thought each
element in the array.

33
00:01:48,720 --> 00:01:52,640
Now, in this first line here, we're
extracting the individual element of

34
00:01:52,640 --> 00:01:56,392
the array happens to be
a JSON object in this case.

35
00:01:56,392 --> 00:02:00,510
By calling the method get
JSON object with the index i.

36
00:02:00,510 --> 00:02:06,140
Then we extract out the integer ID,
the string name, and the float salary.

37
00:02:06,140 --> 00:02:08,710
Which in this case is a decimal value,

38
00:02:08,710 --> 00:02:12,420
then we can calculate all these
values into one long string.

39
00:02:12,420 --> 00:02:15,040
And then later display all
the texts in a text screen.

40
00:02:16,810 --> 00:02:19,460
You probably noticed that there's
a tri catch blocks surrounding

41
00:02:19,460 --> 00:02:21,340
the JSONEparseInt code.

42
00:02:21,340 --> 00:02:24,120
Which actually prevents the app
from crashing if there's a problem

43
00:02:24,120 --> 00:02:25,160
with parsing.

44
00:02:25,160 --> 00:02:27,330
But don't worry, we'll talk
about this more in detail later.
