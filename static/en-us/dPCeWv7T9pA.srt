1
00:00:00,070 --> 00:00:02,710
Let's talk about ASCII Chan and how we might

2
00:00:02,710 --> 00:00:04,980
improve it. I know you are thinking ASCII Chan

3
00:00:04,980 --> 00:00:08,360
is probably perfect already. But, that's not true. We

4
00:00:08,360 --> 00:00:10,920
can make it better. When an user makes a request

5
00:00:10,920 --> 00:00:13,130
to ASCII Chan, we have to do a number

6
00:00:13,130 --> 00:00:15,882
of things. First thing we have to do is, we

7
00:00:15,882 --> 00:00:20,617
have to process the request. This basically means parsing

8
00:00:20,617 --> 00:00:24,960
the HTTP. And parsing the URL. You know, doing that,

9
00:00:24,960 --> 00:00:27,960
the URL mapping to the, to the right handler. You know, just

10
00:00:27,960 --> 00:00:32,000
kind of all of that overhead before our program actually starts to run.

11
00:00:32,000 --> 00:00:34,800
You know, figuring out what we're, what we're going to do with this

12
00:00:34,800 --> 00:00:37,892
request. That takes some amount of time, you know. It, it doesn't feel

13
00:00:37,892 --> 00:00:40,210
like a lot of time because it's actually not right now. But,

14
00:00:40,210 --> 00:00:42,190
if you're processing millions and millions

15
00:00:42,190 --> 00:00:44,130
of requests, yeah, all that little, all

16
00:00:44,130 --> 00:00:46,560
that time would add up. The next thing we do, which is much

17
00:00:46,560 --> 00:00:50,160
more substantial, is we clear the database. You know, we have ASCII Chan

18
00:00:50,160 --> 00:00:55,198
on our program and then we have our, our database that is full of,

19
00:00:55,198 --> 00:01:00,280
ASCII art of little animals and stuff. You know, our program makes a

20
00:01:00,280 --> 00:01:05,660
request to the database which runs and gives us our response. Depending

21
00:01:05,660 --> 00:01:07,650
on the complexity of this query, this can take

22
00:01:07,650 --> 00:01:10,430
a lot of time. Not to mention, it may not

23
00:01:10,430 --> 00:01:12,956
be free. If, if we're doing so many queries that

24
00:01:12,956 --> 00:01:16,010
operation starts charging us that can be a big factor.

25
00:01:16,010 --> 00:01:18,780
The next thing we do in a request, is we collate

26
00:01:18,780 --> 00:01:21,820
the results. You know, we may have to do some sorting, we

27
00:01:21,820 --> 00:01:24,780
may have to prune some of the results out because they're

28
00:01:24,780 --> 00:01:27,625
spam. You know there's all sorts of things we have to do

29
00:01:27,625 --> 00:01:30,360
to manipulate the results. We have to convert them into these

30
00:01:30,360 --> 00:01:34,070
Python mode, Python objects from the, from our database results. All that

31
00:01:34,070 --> 00:01:37,020
little maintenance stuff to get ready to actually render our HTML and

32
00:01:37,020 --> 00:01:41,150
then finally we render our HTML. Now if there's lots of HTML,

33
00:01:41,150 --> 00:01:43,180
this can actually take a lot of time. You know, on, on

34
00:01:43,180 --> 00:01:47,045
Reddit, the actual time rendering all of that content, all that HTML. Was

35
00:01:47,045 --> 00:01:50,277
non-trivial and that required some optimization. Now in ASCII Chan things are

36
00:01:50,277 --> 00:01:52,578
pretty simple, but you know, like I said every website's is a little

37
00:01:52,578 --> 00:01:55,363
bit different. So, what I would like you to do now just

38
00:01:55,363 --> 00:01:59,182
a quick quiz to interrupt things, is which of these four tasks given

39
00:01:59,182 --> 00:02:03,377
you know, you understand the nature of ASCII Chan, you've. You know your

40
00:02:03,377 --> 00:02:06,056
blog has almost the exact same structure as the ASCII Chan you know,

41
00:02:06,056 --> 00:02:09,598
use to submit things some ways to display a list of these things. Which of these

42
00:02:09,598 --> 00:02:11,744
items do you think is the best place

43
00:02:11,744 --> 00:02:15,410
to start when we're looking to improve our website?
