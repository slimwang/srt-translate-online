1
00:00:00,240 --> 00:00:02,769
We label these terminal node
in our game tree with the +1

2
00:00:02,770 --> 00:00:06,540
if our computer player wins,
and a -1 if it loses.

3
00:00:07,682 --> 00:00:10,580
We've used squares to indicate
the terminal nodes, and

4
00:00:10,580 --> 00:00:13,599
put their scores inside them.

5
00:00:13,599 --> 00:00:16,504
We are going to assume that our
opponent X is really smart,

6
00:00:16,504 --> 00:00:18,640
who will always play to win.

7
00:00:18,640 --> 00:00:22,213
In other words, we will assume that
X will always minimize O scores,

8
00:00:22,213 --> 00:00:26,579
while our computer player will
always try to maximize its scores.

9
00:00:26,579 --> 00:00:30,599
To show that idea, we're going to mark
the game tree with a triangle pointing

10
00:00:30,600 --> 00:00:34,640
up, to indicate turns when our computer
player is trying to maximize the score,

11
00:00:34,640 --> 00:00:38,090
and the triangle pointing down when
the opponent is trying to minimize

12
00:00:38,090 --> 00:00:38,850
the score.

13
00:00:38,850 --> 00:00:40,890
Since our computer
player is going first,

14
00:00:40,890 --> 00:00:42,469
we start with a maximization level.

15
00:00:43,520 --> 00:00:47,270
In general, since we are only searching
from our computer player's perspective,

16
00:00:47,270 --> 00:00:50,040
they can only affect the game
when it is its turn.

17
00:00:50,039 --> 00:00:53,089
The top of a minimax tree is
always going to be a max level.

