1
00:00:00,820 --> 00:00:04,670
So far we've explored the idea that we
should prefer heavier augmenting paths.

2
00:00:05,720 --> 00:00:08,680
It turns out that the idea
of using shorter paths

3
00:00:08,680 --> 00:00:11,340
also gives rise to
an efficient algorithm.

4
00:00:11,340 --> 00:00:13,100
This is the Edmonds-Karp algorithm,

5
00:00:13,100 --> 00:00:15,980
also discovered independently
by Dinitz in the Soviet Union.

6
00:00:17,130 --> 00:00:19,700
Again, this is exactly
the Ford-Fulkerson algorithm,

7
00:00:19,700 --> 00:00:23,260
only we are sure to choose
a minimum length path.

8
00:00:23,260 --> 00:00:25,280
The cost of an iteration is order E,

9
00:00:25,280 --> 00:00:29,130
as always, as we just use breadth-first
search to find the shortest s-t path.

10
00:00:30,150 --> 00:00:33,020
If we can bound the number
of iterations, most likely

11
00:00:33,020 --> 00:00:36,980
we'll have a better bound than we did
for the naive version of Ford-Fulkerson.

12
00:00:36,980 --> 00:00:39,960
Indeed, we will be able to bound
the number of iterations here

13
00:00:39,960 --> 00:00:42,290
as order E times V.

14
00:00:42,290 --> 00:00:46,910
And this, then, will enable us to argue
that Edmonds-Karp returns a maximum flow

15
00:00:46,910 --> 00:00:48,440
in time E squared V.
