1
00:00:00,000 --> 00:00:04,000
We saw generator expressions and functions in Unit 2,

2
00:00:04,000 --> 00:00:07,000
but some people in the forums still seemed a bit confused.

3
00:00:07,000 --> 00:00:09,000
Don't worry. This is understandable.

4
00:00:09,000 --> 00:00:12,000
The generator is an entirely new object, and it can be confusing.

5
00:00:12,000 --> 00:00:14,000
In the next few videos, we're going to answer three questions.

6
00:00:14,000 --> 00:00:20,000
How do we use generators? I think this is actually an easier question to answer than the second.

7
00:00:20,000 --> 00:00:25,000
What is a generator expression/function/object?

8
00:00:25,000 --> 00:00:29,000
We'll also talk about when and why do we use generators?

9
00:00:29,000 --> 00:00:32,000
Let's start with a problem.

10
00:00:32,000 --> 00:00:37,000
We want to compute the sum of the squares of the integers from 1 to 1 million.

11
00:00:37,000 --> 00:00:44,000
That would be 1 + 4 + 9--and I probably shouldn't write all of these out.

12
00:00:44,000 --> 00:00:47,000
The question is how would you do this?

13
00:00:47,000 --> 00:00:53,000
If you came from CS101, your answer is probably to start with a function.

14
00:00:53,000 --> 00:00:56,000
Maybe your function would have looked something like this

15
00:00:56,000 --> 00:01:00,000
where we make an empty list, append all of the squares to that list,

16
00:01:00,000 --> 00:01:02,000
and then return the sum of that list.

17
00:01:02,000 --> 00:01:06,000
Then you would have called your function with an argument of 1 million,

18
00:01:06,000 --> 00:01:09,000
and you would've gotten your answer.

19
00:01:09,000 --> 00:01:15,000
First let me say this is a find solution. It gets the job done, but it has some problems.

20
00:01:15,000 --> 00:01:20,000
Keeping in mind that we just want to make this calculation once,

21
00:01:20,000 --> 00:01:23,000
what do you think is the biggest problem with this solution.

22
00:01:23,000 --> 00:01:26,000
Do you think it's messy, and it unnecessary clutters up the program?

23
00:01:26,000 --> 00:01:29,000
Do you think it uses memory when it doesn't really have to?

24
00:01:29,000 --> 00:01:33,000
Do you think it runs to slowly? Or do you think the code doesn't work?

25
00:01:33,000 --> 00:01:36,000
You may have several problems with this, so it's somewhat subjective.

26
00:01:36,000 --> 00:01:39,000
Just choose whatever you think is the biggest problem.
