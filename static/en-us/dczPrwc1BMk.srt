1
00:00:00,130 --> 00:00:04,350
I did say that I'm oversimplifying,
and there are a few other things.

2
00:00:04,350 --> 00:00:07,110
So there are a few other bits
that can go with this other

3
00:00:07,110 --> 00:00:08,798
information that we are talking about.

4
00:00:08,798 --> 00:00:12,650
In particular, there's an interesting
thing called setuid, and

5
00:00:12,650 --> 00:00:15,180
maybe we want to talk
about this a little bit.

6
00:00:15,180 --> 00:00:19,870
Think about a game program that
needs to update a file that

7
00:00:19,870 --> 00:00:23,670
stores the scores of different
people who have played this game.

8
00:00:23,670 --> 00:00:26,420
So when these people are playing
the game, of course,

9
00:00:26,420 --> 00:00:28,690
we want to be able to update that file.

10
00:00:28,690 --> 00:00:32,800
When your score increases you want to
update your score that's in there.

11
00:00:32,800 --> 00:00:35,700
So, these users while playing the game,
and they play the game,

12
00:00:35,700 --> 00:00:38,100
need to have write access to that file.

13
00:00:38,100 --> 00:00:41,770
When they're not playing the game,
we don't want them to have write access

14
00:00:41,770 --> 00:00:44,640
because then they can go change
the score without playing the game, so

15
00:00:44,640 --> 00:00:45,640
we don't want that.

16
00:00:45,640 --> 00:00:47,650
So how can we solve this problem?

17
00:00:47,650 --> 00:00:49,290
These systems I'm talking about,

18
00:00:49,290 --> 00:00:53,660
this problem is solved by having
something called a setuid bit.

19
00:00:53,660 --> 00:00:59,210
So the way to understand this
is that we have Alice and

20
00:00:59,210 --> 00:01:04,786
Bob, and Bob owns the game file,
and Alice wants to play the game.

21
00:01:04,786 --> 00:01:09,340
So the game file is actually owned by
Bob, and Bob is going to give permission

22
00:01:09,340 --> 00:01:13,200
to Alice to execute,
being able to execute this file.

23
00:01:13,200 --> 00:01:17,270
By the way, the score file is also,
Bob is going to own the score, and

24
00:01:17,270 --> 00:01:20,570
is not going to grant write
access to Alice because

25
00:01:20,570 --> 00:01:24,060
Alice should not be able to update that
file unless she's playing the game.

26
00:01:24,060 --> 00:01:27,940
So you can think about the score file,
Alice can read it, her score and

27
00:01:27,940 --> 00:01:30,720
somebody else's score, how people
are doing, but she can't write it.

28
00:01:30,720 --> 00:01:35,630
Bob can rewrite it because Bob owns
the game file that we have here.

29
00:01:35,630 --> 00:01:40,610
He's some special user, or someone who
is running this program that we have.

30
00:01:40,610 --> 00:01:42,548
People who want to play the game.

31
00:01:42,548 --> 00:01:47,890
So, setuid bit is set on the game file,
the executable file that we have.

32
00:01:47,890 --> 00:01:51,670
And we said Alice executes this file
when she wants to play the game.

33
00:01:51,670 --> 00:01:52,920
So setuid bit,

34
00:01:52,920 --> 00:01:56,710
when it's set on executable file,
actually does an interesting thing.

35
00:01:56,710 --> 00:01:58,760
When Alice executes this file,

36
00:01:58,760 --> 00:02:02,620
the User ID temporarily
changes it from Alice to Bob.

37
00:02:02,620 --> 00:02:07,060
So it says when a setuid file
is executed, the User ID,

38
00:02:07,060 --> 00:02:12,500
effective User ID, at that point is not
the user who actually executed the file,

39
00:02:12,500 --> 00:02:14,890
but is owner of this file.

40
00:02:14,890 --> 00:02:17,320
In this case,
the owner of the file is Bob.

41
00:02:17,320 --> 00:02:21,400
So during the execution of the game,
although Alice is playing the game,

42
00:02:21,400 --> 00:02:26,310
during the execution of the game, the
temporary or effective UID is Bob, and

43
00:02:26,310 --> 00:02:29,070
because of that,
even though Alice is playing the game,

44
00:02:29,070 --> 00:02:30,930
she is able to update the file.

45
00:02:30,930 --> 00:02:34,250
File is updated back that
is in this game file.

46
00:02:34,250 --> 00:02:36,170
And while we're executing the game file,

47
00:02:36,170 --> 00:02:39,330
as we said,
the effective User ID becomes Bob.

48
00:02:39,330 --> 00:02:43,550
Alice launched this program, but
the program is owned by somebody else.

49
00:02:43,550 --> 00:02:48,770
This change in UID is possible when
the executable file that Alice executes,

50
00:02:48,770 --> 00:02:51,920
the game file here,
has a setuid bit set.

51
00:02:51,920 --> 00:02:56,770
So a setuid bit is used to change the
UID temporarily during the execution of

52
00:02:56,770 --> 00:03:01,170
the program on which this bit is set,
and I hope I motivated why you may want

53
00:03:01,170 --> 00:03:04,740
to do that, in this case, for example,
the game file that we are talking about.
