1
00:00:00,360 --> 00:00:04,870
I'll start off by enabling the
JavaScript profiler, I'll hit record and

2
00:00:04,870 --> 00:00:06,240
then I'll hit both buttons.

3
00:00:06,240 --> 00:00:09,140
There's 1, and there's the second.

4
00:00:09,140 --> 00:00:12,340
To give myself more space I'll
pop this into a second window.

5
00:00:12,340 --> 00:00:16,320
WIth the flame view enables it's pretty
obvious to see what's going on here.

6
00:00:16,320 --> 00:00:18,540
Here's the first click and
here's the second 1.

7
00:00:18,540 --> 00:00:22,600
As a child of the first
click event on sort 1 run.

8
00:00:22,600 --> 00:00:27,320
And, as a child of the second
click event on sort 2 run.

9
00:00:27,320 --> 00:00:29,930
And just looking here it's
pretty obvious that answer 1

10
00:00:29,930 --> 00:00:31,290
took longer to run.

11
00:00:31,290 --> 00:00:32,140
Before I move on,

12
00:00:32,140 --> 00:00:35,130
I want to point out some interesting
bits in this little sample.

13
00:00:35,130 --> 00:00:36,270
If you're in the flame view and

14
00:00:36,270 --> 00:00:39,990
you click on the top-level click
record like this one here,

15
00:00:39,990 --> 00:00:43,240
you can pull up the details pane for
some useful information.

16
00:00:43,240 --> 00:00:45,780
This pie chart gives you an idea
of how much time it took

17
00:00:45,780 --> 00:00:48,310
different events caused
by this function to run.

18
00:00:48,310 --> 00:00:51,510
You can get the scripting time for
this function itself,

19
00:00:51,510 --> 00:00:54,260
which tells you how long it
took just this function to run.

20
00:00:54,260 --> 00:00:55,810
And if this function called any others,

21
00:00:55,810 --> 00:00:59,960
which this one did, then you can see
how long it took it's children to run.

22
00:00:59,960 --> 00:01:02,620
In this case the function
that ran on the click called

23
00:01:02,620 --> 00:01:04,900
other functions including
the bubble sort one,

24
00:01:04,900 --> 00:01:08,080
which is included in this
children scripting time.

25
00:01:08,080 --> 00:01:10,580
I've changed over to
the second click event for

26
00:01:10,580 --> 00:01:14,580
the second event and you can see that
the scripting time for its children,

27
00:01:14,580 --> 00:01:19,570
is only 260 milliseconds,
which is about half of answer 1.

28
00:01:19,570 --> 00:01:21,200
I want you to notice one other thing.

29
00:01:21,200 --> 00:01:24,260
After the first click there
is a recalculate style and

30
00:01:24,260 --> 00:01:28,400
then a layout event, and
after the second click there is another

31
00:01:28,400 --> 00:01:31,300
recalculate style and
another layout event.

32
00:01:31,300 --> 00:01:35,970
These two pairs of recalculate style and
layout are essentially the same length.

33
00:01:35,970 --> 00:01:38,800
This is a clear indication that no
matter how you sort the data in this

34
00:01:38,800 --> 00:01:42,250
example, you still have to write
out the whole table of results,

35
00:01:42,250 --> 00:01:46,400
which is going to require recalculating
styles, relaying out the page, and

36
00:01:46,400 --> 00:01:47,690
repainting everything.

37
00:01:47,690 --> 00:01:50,640
So with all that in mind,answer
1 took longer to run.
