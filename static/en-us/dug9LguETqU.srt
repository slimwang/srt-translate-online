1
00:00:00,330 --> 00:00:03,870
Billions of machines connected to form
the World Wide Web, all run using

2
00:00:03,870 --> 00:00:07,350
different operating systems,
specifications, and data structures.

3
00:00:08,410 --> 00:00:11,250
So, how do we make sure these devices
can all communicate with each other?

4
00:00:12,260 --> 00:00:16,600
A set of rules must be in place in order
for machines to speak the same language.

5
00:00:16,600 --> 00:00:18,509
We call these sets of rules, protocols.

6
00:00:19,630 --> 00:00:20,800
A common abstraction for

7
00:00:20,800 --> 00:00:26,020
conceptualizing this is with the open
systems interconnection or OSI model.

8
00:00:26,020 --> 00:00:28,970
This model characterizes the
communication functions of the computing

9
00:00:28,970 --> 00:00:31,570
system, without getting too
caught up with the specifics of

10
00:00:31,570 --> 00:00:33,430
each different type of computer.

11
00:00:33,430 --> 00:00:36,070
This allows the model to focus
on the interoperability of

12
00:00:36,070 --> 00:00:38,740
diverse communication systems
with standard protocols.

13
00:00:40,010 --> 00:00:44,320
The model partitions a communications
system into abstraction layers.

14
00:00:44,320 --> 00:00:47,910
The original version of the model
defines seven layers, as shown here.

15
00:00:47,910 --> 00:00:52,660
A layer serves the layer above it,
and is served by the layer below it.

16
00:00:52,660 --> 00:00:56,180
A variety of protocols can exist within
in each layer, but they all have to be

17
00:00:56,180 --> 00:01:00,440
able to receive and hand off data to
the protocols in the adjacent layers.

18
00:01:00,440 --> 00:01:02,510
A good analogy to conceptualize this,

19
00:01:02,510 --> 00:01:05,560
is like sending a message
inside of multiple envelopes.

20
00:01:05,560 --> 00:01:08,310
The application layer is the code
that makes the original message.

21
00:01:09,470 --> 00:01:11,510
It is then passed on
to the layer beneath,

22
00:01:11,510 --> 00:01:13,460
which wraps this message
inside an envelope.

23
00:01:14,740 --> 00:01:17,430
Each layer adds another envelope
with more information about

24
00:01:17,430 --> 00:01:21,570
preparing the message, breaking it up
into small packets, routing the message

25
00:01:21,570 --> 00:01:25,349
to its intended final destination, and
rebuilding the message once it arrives.

26
00:01:27,160 --> 00:01:29,450
Once the message reaches
the physical layer,

27
00:01:29,450 --> 00:01:33,200
it is transmitted as a stream
of bits over a physical medium.

28
00:01:33,200 --> 00:01:36,090
Physical media are the wires,
fiber optic cables or

29
00:01:36,090 --> 00:01:38,190
wireless signals that you use
to connect to the Internet.

30
00:01:39,250 --> 00:01:41,750
Once the message reaches
it's intended machine.

31
00:01:41,750 --> 00:01:45,340
It is now processed in reverse order
such that the application sitting on

32
00:01:45,340 --> 00:01:48,000
the receiving computer gets
the message the same way it was

33
00:01:48,000 --> 00:01:49,350
created by the sender.

34
00:01:49,350 --> 00:01:52,820
When it comes to developing web
applications in API design,

35
00:01:52,820 --> 00:01:56,620
developers mainly focus on
the application layer in the OSI model.

36
00:01:56,620 --> 00:01:59,600
Operating systems can handle
the complexities of the lower levels for

37
00:01:59,600 --> 00:02:01,090
us in most cases.

38
00:02:01,090 --> 00:02:02,010
But, if you're interested in

39
00:02:02,010 --> 00:02:04,280
learning more about the lower
layers of networking,

40
00:02:04,280 --> 00:02:06,660
please check out some of the links
I've provided in the instructor notes.
