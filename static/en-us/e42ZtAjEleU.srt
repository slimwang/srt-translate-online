1
00:00:00,280 --> 00:00:03,030
Looking back at our code, here is how we would expect that to play out.

2
00:00:03,030 --> 00:00:08,620
We might build amy and ben such that they delegated to Car.methods rather than

3
00:00:08,620 --> 00:00:12,490
copying all of the Car.methods properties onto amy and

4
00:00:12,490 --> 00:00:14,860
ben here when they're stored in the obj variable.

5
00:00:14,860 --> 00:00:16,465
That way when we go looking for

6
00:00:16,465 --> 00:00:21,760
amy.move, even though the amy object doesn't have its own .move property, we'll

7
00:00:21,760 --> 00:00:25,910
delegate that lookup to the Car.methods object which does have a move property.

8
00:00:25,910 --> 00:00:27,650
Let's see how that looks in practice.

9
00:00:27,650 --> 00:00:31,210
The problem here is we're using an object literal, these two curly braces, in

10
00:00:31,210 --> 00:00:34,770
order to build the brand new object, that's going to be an instance of car and

11
00:00:34,770 --> 00:00:37,240
whatever you use in object literal to create an object,

12
00:00:37,240 --> 00:00:40,900
you don't get to define what the prototype of that new object is going to be.

13
00:00:40,900 --> 00:00:43,980
So we're going to have to switch it up and use our other technique for

14
00:00:43,980 --> 00:00:48,200
creating objects, which is object.create that technique does allow us to

15
00:00:48,200 --> 00:00:50,480
set the prototype of the new object.

16
00:00:50,480 --> 00:00:53,210
Now whatever we put in here, in between these parenthesis,

17
00:00:53,210 --> 00:00:56,880
is going to be the thing that our new object delegates to.

18
00:00:56,880 --> 00:01:00,120
So what object do you expect we're going to need to pass to object.create in

19
00:01:00,120 --> 00:01:04,470
order to set up the right delegation relationship for every new instance of car.

20
00:01:04,470 --> 00:01:07,500
Note we aren't done refactoring the rest of the code yet, but

21
00:01:07,500 --> 00:01:09,740
before I move on I do want to get this line right.
