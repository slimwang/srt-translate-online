1
00:00:00,006 --> 00:00:02,144
Okay, now let's look at some code.

2
00:00:02,144 --> 00:00:04,709
It's going to take us 2 kernels to be able to run this.

3
00:00:04,709 --> 00:00:07,501
The first one is going to be an initialization kernel that we run once,

4
00:00:07,501 --> 00:00:11,780
and then we're going to show our iteration kernel that we're going to run on every iteration of the loop.

5
00:00:11,780 --> 00:00:14,722
Now the initialization kernel is extremely simple.

6
00:00:14,722 --> 00:00:17,330
It's just a map over all the vertices,

7
00:00:17,330 --> 00:00:20,230
and it's simply going to initialize the vertex array.

8
00:00:20,230 --> 00:00:23,712
So we get the vertex array as an argument, we know how long it is,

9
00:00:23,712 --> 00:00:26,695
and we know which vertex is the starting vertex.

10
00:00:26,695 --> 00:00:31,202
All we're going to do is calculate a global index for our particular thread,

11
00:00:31,202 --> 00:00:36,319
and then if our thread is the starting vertex, then we're going to set its depth to 0.

12
00:00:36,319 --> 00:00:38,759
Otherwise, we're going to set it to negative 1,

13
00:00:38,759 --> 00:00:42,612
and here we're going to designate negative 1 as our not visited value.

14
00:00:42,612 --> 00:00:45,785
Okay. This is very simple. Easy map operation.

15
00:00:45,785 --> 00:00:48,209
The more interesting one is the one we'll show next,

16
00:00:48,209 --> 00:00:52,155
which is the kernel that we're going to run on every iteration.
