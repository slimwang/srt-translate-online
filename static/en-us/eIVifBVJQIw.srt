1
00:00:00,080 --> 00:00:02,890
Great. Let's dive into XML. Over the course of my

2
00:00:02,890 --> 00:00:05,600
career, I've used XML in a number of different data

3
00:00:05,600 --> 00:00:08,340
science projects. One of these was working with a large

4
00:00:08,340 --> 00:00:12,500
collection of research articles. So, just as an example, here's the

5
00:00:12,500 --> 00:00:14,880
original Google paper from Brin and Page when they were

6
00:00:14,880 --> 00:00:17,510
still grad students at Stanford. Now, what I was doing in

7
00:00:17,510 --> 00:00:21,710
this project is what's known as citation analysis. In citation

8
00:00:21,710 --> 00:00:25,730
analysis, What we're doing is comparing the relative importance of papers

9
00:00:25,730 --> 00:00:29,030
based on how many other research articles cite them. So

10
00:00:29,030 --> 00:00:31,370
for example you could compare the Google paper with some of

11
00:00:31,370 --> 00:00:33,750
my work. Which receives a much more modest number of

12
00:00:33,750 --> 00:00:37,000
citations compared to the 11,000 that Brin and Page's paper got.

13
00:00:38,040 --> 00:00:39,680
Now when I was doing my work most of the

14
00:00:39,680 --> 00:00:43,290
data that I used was not publicly available. But nowadays the

15
00:00:43,290 --> 00:00:46,920
same type of data is available and it's encoded as XML.

16
00:00:47,940 --> 00:00:50,820
There are quite a few open access publishers, like BioMed Central.

17
00:00:51,910 --> 00:00:54,800
These publishers produce every article they publish both in a

18
00:00:54,800 --> 00:00:58,460
print form like this, and in .xml. Now, in order to

19
00:00:58,460 --> 00:01:01,560
do something like citation analysis, what we need to do

20
00:01:01,560 --> 00:01:04,670
is access the bibliography for each article. So what I want

21
00:01:04,670 --> 00:01:07,240
to look at as an example, is how easy it

22
00:01:07,240 --> 00:01:10,950
is when you have your data encoded as .xml, to pull

23
00:01:10,950 --> 00:01:15,110
out that type of data, and use it programmatically.

24
00:01:15,110 --> 00:01:17,780
So let's take a look at the references for this paper.

25
00:01:17,780 --> 00:01:20,220
Here are all of the other papers that this particular

26
00:01:20,220 --> 00:01:23,260
research article cites, now let's take a look at the XML

27
00:01:23,260 --> 00:01:27,130
version of this paper. Here is that exact same paper

28
00:01:27,130 --> 00:01:30,570
only here, instead of being designed for reading, it is instead

29
00:01:30,570 --> 00:01:34,360
encoded as data, let's jump down to the bibliography for

30
00:01:34,360 --> 00:01:37,620
this paper. And here it is, the very beginning of the

31
00:01:37,620 --> 00:01:40,350
bibliography. If we take a look at the print version of

32
00:01:40,350 --> 00:01:42,930
the article again, we can see that it does, in fact,

33
00:01:42,930 --> 00:01:47,260
align with what we're seeing here. So, this type

34
00:01:47,260 --> 00:01:50,320
of use of XML is very much what the designers

35
00:01:50,320 --> 00:01:52,940
of XML had in mind, where you have documents that

36
00:01:52,940 --> 00:01:56,150
have lots of text, but text. That you want to

37
00:01:56,150 --> 00:01:58,680
encode so that portions of it, at least, can

38
00:01:58,680 --> 00:02:01,190
be used programatically, like we might want to do with

39
00:02:01,190 --> 00:02:04,960
a bibliography of a research article. Or the author list

40
00:02:04,960 --> 00:02:08,169
and other data that occurs throughout a document like this.
