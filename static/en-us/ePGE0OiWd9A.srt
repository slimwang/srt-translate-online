1
00:00:00,210 --> 00:00:03,410
So the answer is all of the code fragments

2
00:00:03,410 --> 00:00:06,110
except for the third one, except for this one,

3
00:00:06,110 --> 00:00:09,820
leave the value P unchanged. So let's work through

4
00:00:09,820 --> 00:00:12,480
why that is. We're not going to assume anything about P.

5
00:00:12,480 --> 00:00:15,600
It's, list with atleast two elements. So I'll draw

6
00:00:15,600 --> 00:00:18,520
P. We can't make any assumptions about what the

7
00:00:18,520 --> 00:00:22,480
elements are. We'll call them Alpha, Beta and Gamma.

8
00:00:22,480 --> 00:00:25,110
Actually, it looks like alpha, beta, and alpha. That's okay.

9
00:00:25,110 --> 00:00:26,790
So let's look at the first option. Here's what

10
00:00:26,790 --> 00:00:30,630
happens. We append a 3 to P. That adds a

11
00:00:30,630 --> 00:00:33,330
new element at the end of P. And then we

12
00:00:33,330 --> 00:00:38,050
pop. That removes it. We don't do anything with the

13
00:00:38,050 --> 00:00:40,530
result returned by pop, but that's okay. The value of

14
00:00:40,530 --> 00:00:43,640
p is unchanged. For this choice, we start by popping.

15
00:00:43,640 --> 00:00:47,070
That will remove an element from p, so now x

16
00:00:47,070 --> 00:00:50,210
will refer to whatever this element was. So x refers

17
00:00:50,210 --> 00:00:53,960
to alpha in this case, and p is mutated by

18
00:00:53,960 --> 00:00:56,870
mod, removing that element. So at this stage, the value

19
00:00:56,870 --> 00:00:59,720
of p has changed, but we're not done. We still

20
00:00:59,720 --> 00:01:03,140
have the append to do. The append appends to p,

21
00:01:03,140 --> 00:01:06,260
adding onto the end of p the value that x

22
00:01:06,260 --> 00:01:09,810
refers to, which is the alpha value that was in

23
00:01:09,810 --> 00:01:12,140
that position to begin with. So at the end of

24
00:01:12,140 --> 00:01:15,390
these two steps, the value of p is also unchanged.

25
00:01:16,640 --> 00:01:22,200
Let's look at the third option and see why that does affect the value of p.

26
00:01:22,200 --> 00:01:25,080
So the first statement, we assign to x

27
00:01:25,080 --> 00:01:28,300
the result of p.pop(). That will remove the last

28
00:01:28,300 --> 00:01:33,810
element from p and make x refer to it's value. So now whatever value was at ten

29
00:01:33,810 --> 00:01:41,210
of p the name x refers to. Then we do another pop. So now after this pop,

30
00:01:42,550 --> 00:01:49,810
y will refer to the value here, which is beta. We remove that value from p. So

31
00:01:49,810 --> 00:01:52,920
at this state p has lost two elements, but

32
00:01:52,920 --> 00:01:55,240
we've stored them in the variable x and y.

33
00:01:56,570 --> 00:02:01,390
Then we do the append, and we're doing the appends in the same order we did the

34
00:02:01,390 --> 00:02:04,350
pops. So we're appending x first. The value of

35
00:02:04,350 --> 00:02:07,790
x is alpha, so this will Add the alpha

36
00:02:07,790 --> 00:02:10,250
to p. Note that that's not what we started with.

37
00:02:10,250 --> 00:02:13,490
We started with the beta there. Then we do the next

38
00:02:13,490 --> 00:02:16,910
append. That will add the value of y, which is

39
00:02:16,910 --> 00:02:21,150
beta to p. If we pop elements of p, and we

40
00:02:21,150 --> 00:02:23,210
add them in the same order that we pop them,

41
00:02:23,210 --> 00:02:25,900
this will actually reverse the order of the elements, since each

42
00:02:25,900 --> 00:02:27,560
time we append, we add to the end of the

43
00:02:27,560 --> 00:02:33,730
list. So for the final choice, we're again popping two elements.

44
00:02:33,730 --> 00:02:36,560
This time we're appending in the opposite order, that

45
00:02:36,560 --> 00:02:38,810
means when we do their appends so the value

46
00:02:38,810 --> 00:02:42,320
when we popped x, that got the value alpha.

47
00:02:42,320 --> 00:02:45,630
When we popped y, y was the value beta.

48
00:02:45,630 --> 00:02:48,260
P lost these two elements as the result of

49
00:02:48,260 --> 00:02:51,890
the two pops. Now we're here. We do the

50
00:02:51,890 --> 00:02:55,150
appends. And this time, we're appending y first. Well,

51
00:02:55,150 --> 00:02:59,240
that's the beta, that's the last one we popped,

52
00:02:59,240 --> 00:03:01,480
the first one we append. This gets the

53
00:03:01,480 --> 00:03:05,205
elements in the order they were before. And finally,

54
00:03:05,205 --> 00:03:10,470
we append x, which is the alpha. This restores

55
00:03:10,470 --> 00:03:12,540
the value of p to what we started with.
