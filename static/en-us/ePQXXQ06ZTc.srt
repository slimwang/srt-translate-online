1
00:00:00,570 --> 00:00:04,410
In this and our previous lessons,
we developed a set of ideas and

2
00:00:04,410 --> 00:00:05,310
definitions.

3
00:00:05,310 --> 00:00:09,610
To set the stage for understanding what
we can, and cannot solve on a computer.

4
00:00:09,610 --> 00:00:13,340
We've seen the Turing machine,
an amazingly simple model that can only

5
00:00:13,340 --> 00:00:17,320
move a tape back and forth,
while reading and writing on that tape.

6
00:00:17,320 --> 00:00:22,350
Yet we see that this model capture the
full power of computers now and forever.

7
00:00:22,350 --> 00:00:26,710
You see now how to consider Turing
machine programs as data themselves.

8
00:00:26,710 --> 00:00:30,600
And create a universal Turing machine
that can simulate those programs.

9
00:00:30,600 --> 00:00:35,090
At the end of this lesson, we saw some
languages defined using program as data,

10
00:00:35,090 --> 00:00:36,780
that don't seem to be easily decidable.

11
00:00:38,000 --> 00:00:38,790
In the next lecture,

12
00:00:38,790 --> 00:00:42,940
we will show how to prove many languages
cannot be solved by a Turing machine.

13
00:00:42,940 --> 00:00:45,370
Including the most famous one,
the halting problem.
