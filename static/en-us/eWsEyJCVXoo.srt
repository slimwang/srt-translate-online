1
00:00:00,000 --> 00:00:03,000
[Thrun] Particle filters are really easy to implement.

2
00:00:03,000 --> 00:00:05,000
They have some deficiencies.

3
00:00:05,000 --> 00:00:08,000
They don't really scale to high-dimensional spaces.

4
00:00:08,000 --> 00:00:11,000
That's been recognized because the number of particles you need

5
00:00:11,000 --> 00:00:14,000
to fill a high-dimensional space tends to grow exponentially

6
00:00:14,000 --> 00:00:17,000
with the dimensionality of the space.

7
00:00:17,000 --> 00:00:20,000
So for 100 dimensions it's hard to make work.

8
00:00:20,000 --> 00:00:22,000
But there are extensions.

9
00:00:22,000 --> 00:00:27,000
They go under really fancy names like Rao-Blackwellized particle filters

10
00:00:27,000 --> 00:00:31,000
that can actually do this, but I won't talk about them in any detail here.

11
00:00:31,000 --> 00:00:36,000
They also have problems with degenerate conditions.

12
00:00:36,000 --> 00:00:40,000
For example, they don't work well if you only have 1 particle or 2 particles.

13
00:00:40,000 --> 00:00:45,000
They tend not to work well if you have no noise in your measurement model

14
00:00:45,000 --> 00:00:47,000
or no noise in your controls.

15
00:00:47,000 --> 00:00:50,000
You need this kind of to remix things a little bit.

16
00:00:50,000 --> 00:00:55,000
If there is very little noise, you have to deviate from the basic paradigm.

17
00:00:55,000 --> 00:01:00,000
But the good news is they work really well in many, many applications.

18
00:01:00,000 --> 00:01:05,000
For example, our self-driving cars use particle filters for localization and for mapping

19
00:01:05,000 --> 00:01:07,000
and for a number of other things.

20
00:01:07,000 --> 00:01:11,000
And the reason why they work so well is they're really easy to implement,

21
00:01:11,000 --> 00:01:16,000
they're computationally efficient in the sense that they really put the computational resources

22
00:01:16,000 --> 00:01:22,000
where they are needed the most, and they can deal with highly non-monotonic

23
00:01:22,000 --> 00:01:25,000
and very complex posterior distribution that have many peaks.

24
00:01:25,000 --> 00:01:28,000
And that's important. Many other filters can't.

25
00:01:28,000 --> 00:01:33,000
So particle filters are often the method of choice when it comes to building quickly

26
00:01:33,000 --> 99:59:59,999
an estimation method for problems where the posterior is complex.
