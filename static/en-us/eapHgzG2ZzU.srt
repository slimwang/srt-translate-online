1
00:00:00,110 --> 00:00:03,141
So now we've got the full spectrum here. We can create objects, move them, and

2
00:00:03,141 --> 00:00:05,601
see them sliding around in the world, which is great, because now, we can

3
00:00:05,601 --> 00:00:09,726
actually throw missiles from one robot at another. The final missing piece,

4
00:00:09,726 --> 00:00:13,030
however, to our grand scheme of world domination, is what to do once the

5
00:00:13,030 --> 00:00:17,103
missile hits the other robot. Now, in our current set up, we receive no

6
00:00:17,103 --> 00:00:20,396
information that a collision has occurred. But we only get back the positions

7
00:00:20,396 --> 00:00:24,430
of the objects that the physics engine has adjusted. But fret not my children,

8
00:00:24,430 --> 00:00:28,138
there is a solution. We're going to need to jump around between a few different

9
00:00:28,138 --> 00:00:31,082
files and concepts, but once we're done you'll be able to allow each entity to

10
00:00:31,082 --> 00:00:36,186
respond to a collision independent of other entities. Now the start of this

11
00:00:36,186 --> 00:00:39,956
nice aside is a Box 2D function that allows us to define an onCollison callback

12
00:00:39,956 --> 00:00:44,880
that when called is given two physics bodies that are touching.
