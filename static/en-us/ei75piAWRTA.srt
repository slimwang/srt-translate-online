1
00:00:00,290 --> 00:00:01,490
For the first option,

2
00:00:01,490 --> 00:00:05,610
distributing memory between processes, that's an arbitration.

3
00:00:05,610 --> 00:00:09,330
This is something an operating system does as a result of its effort to

4
00:00:09,330 --> 00:00:14,810
manage the memory and determine how multiple processes will share.

5
00:00:14,810 --> 00:00:15,730
The second option,

6
00:00:15,730 --> 00:00:19,540
supporting different types of speakers, that's an abstraction.

7
00:00:19,540 --> 00:00:22,940
It is because the operating system provides abstractions such as

8
00:00:22,940 --> 00:00:26,120
this one that you can plug in one set of speakers, and

9
00:00:26,120 --> 00:00:28,910
if they don't work, exchange them with something else.

10
00:00:28,910 --> 00:00:32,600
In some cases, drivers are required, which enables an operating system to

11
00:00:32,600 --> 00:00:36,510
control the hardware device without knowing details about that

12
00:00:36,510 --> 00:00:40,060
specific hardware, so the device driver will have the knowledge of

13
00:00:40,060 --> 00:00:44,220
the specific actual hardware element, like the specific speaker.

14
00:00:44,220 --> 00:00:49,080
And along similar lines, the ability to interchangeably access different

15
00:00:49,080 --> 00:00:52,870
types of storage devices like hard disks or

16
00:00:52,870 --> 00:00:57,780
SSDs is again an example of an abstraction just like the example above.

17
00:00:57,780 --> 00:01:02,780
Again, because of the use of the storage abstraction that operating systems

18
00:01:02,780 --> 00:01:07,960
support, they can underneath feel the different types of devices and

19
00:01:07,960 --> 00:01:09,600
hide that from the applications.
