1
00:00:00,640 --> 00:00:05,750
Now we can continue to apply this method of generate and test iteratively. So we

2
00:00:05,750 --> 00:00:10,810
can apply it on this state and that state and see what successor states we get.

3
00:00:10,810 --> 00:00:15,580
If we do so, then we get a very large number of successor states. This is

4
00:00:15,580 --> 00:00:20,480
a problem of call many total explosion. While one was tasked with a small number

5
00:00:20,480 --> 00:00:24,219
of states, but the number of successor states keeps on increasing very rapidly.

6
00:00:25,410 --> 00:00:29,419
Now, the reason it is occurring here and it did not occur when we are talk,

7
00:00:29,419 --> 00:00:33,496
dealing with semantic networks is because here we have states like this one

8
00:00:33,496 --> 00:00:37,441
which have three guards and three prisoners on the same side of the bank,

9
00:00:37,441 --> 00:00:42,450
exactly the same state that was the initial state to begin with. This is because

10
00:00:42,450 --> 00:00:48,100
we have a dumb generator and a dumb tester. So this state never got pruned away,

11
00:00:48,100 --> 00:00:51,390
although this particular state is identical to the initial state that we

12
00:00:51,390 --> 00:00:56,880
started from. This method of generating test, even with a dumb generator and

13
00:00:56,880 --> 00:01:03,560
a dumb tester, if applied iteratively could finally lead to the goal state.

14
00:01:03,560 --> 00:01:06,920
In which case, we will have a path from the initial state all the way to

15
00:01:06,920 --> 00:01:11,560
the goal state, but this will be computationally very inefficient.

16
00:01:11,560 --> 00:01:14,700
This is because we have a dumb generator and a dumb tester. So

17
00:01:14,700 --> 00:01:18,300
the question now becomes, can we make a smarter generator and

18
00:01:18,300 --> 00:01:23,430
a smarter tester? Before we make a smarter generator and a smarter tester,

19
00:01:23,430 --> 00:01:28,700
we should note that generate and test is a very powerful problem solving method.
