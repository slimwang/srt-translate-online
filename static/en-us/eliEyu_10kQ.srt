1
00:00:00,200 --> 00:00:05,350
So, we can imagine problem solving as occurring in a state space.

2
00:00:05,350 --> 00:00:08,210
Here is the initial state, here is the goal state. And

3
00:00:08,210 --> 00:00:12,400
the state space consists of all of the states that could be potentially produced

4
00:00:12,400 --> 00:00:17,170
from the initial state by iterative application of the various operators in

5
00:00:17,170 --> 00:00:22,000
this micro world. I want to come up with a path in the state space,

6
00:00:22,000 --> 00:00:25,745
takes me from initial state to the goal state. There is one path,

7
00:00:25,745 --> 00:00:29,820
this is not the only path, but this is one path to go from the initial state to

8
00:00:29,820 --> 00:00:34,356
the goal state. The question then becomes, how might an AI agent

9
00:00:34,356 --> 00:00:38,340
derive this path that may take it from the initial state to the goal state.

10
00:00:39,570 --> 00:00:44,200
Let us see how this notion of path finding applies to our blocks world problem.

11
00:00:44,200 --> 00:00:48,970
From the initial state, here it is one path of going to the goal state. First,

12
00:00:48,970 --> 00:00:54,760
we put C on the table. Then we put B on top C. And then we put A on top of B.

13
00:00:54,760 --> 00:00:59,280
Which is exactly the answer that David had given. This is one sequence,

14
00:00:59,280 --> 00:01:04,209
one path from the initial state to the goal state. The question then becomes,

15
00:01:04,209 --> 00:01:09,100
how does AI method know what operation to select in a given state?

16
00:01:09,100 --> 00:01:14,220
Consider this state, for example. There are several operations possible here.

17
00:01:14,220 --> 00:01:18,350
One could put C on top of B or B on top of A.

18
00:01:18,350 --> 00:01:22,600
How does the AI agent know which operation to select at this particular state?
