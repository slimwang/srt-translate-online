1
00:00:00,110 --> 00:00:05,160
The one way property of hash function
is extremely useful for security.

2
00:00:05,160 --> 00:00:10,040
Recall that the one way property means
that it is easy to compute a hash

3
00:00:10,040 --> 00:00:15,090
from the message, but it is impossible
to find a message from the hash.

4
00:00:15,090 --> 00:00:16,550
You can think of it this way.

5
00:00:16,550 --> 00:00:19,103
You can make hashbrown from potatoes.

6
00:00:19,103 --> 00:00:22,900
But you can't make potatoes
out of hashbrowns.

7
00:00:22,900 --> 00:00:27,460
Let's look at this example of
using hash to verify password.

8
00:00:27,460 --> 00:00:31,540
Hash is particularly useful for
password verification.

9
00:00:31,540 --> 00:00:34,910
We all know that when we
authenticate ourself to a system,

10
00:00:34,910 --> 00:00:36,660
we need to supply a password.

11
00:00:36,660 --> 00:00:38,500
Now let's look under the hood.

12
00:00:38,500 --> 00:00:39,670
What happens?

13
00:00:39,670 --> 00:00:43,330
For example, when a user
supplies the password "candy,"

14
00:00:43,330 --> 00:00:47,680
the system would take the input
"candy" and hash it, and

15
00:00:47,680 --> 00:00:53,450
then compare the hash value with the
stored hash of a password on the system.

16
00:00:53,450 --> 00:00:55,940
If they match,
then the access is allowed.

17
00:00:55,940 --> 00:00:58,530
Otherwise, access is denied.

18
00:00:58,530 --> 00:01:03,490
That is, the clear text password
candy is never stored on the system.

19
00:01:03,490 --> 00:01:07,190
Only the hash of the password
is stored on the system.

20
00:01:07,190 --> 00:01:11,350
And then whenever the user types in
a password to authenticate him or

21
00:01:11,350 --> 00:01:14,830
herself to the system,
the input will be hashed.

22
00:01:14,830 --> 00:01:18,850
And then the hash of the input
password will be compared

23
00:01:18,850 --> 00:01:20,950
with the stored hash of the password.

24
00:01:20,950 --> 00:01:25,880
You may ask, why not just store
the clear text password on the system?

25
00:01:25,880 --> 00:01:30,960
Think about it, if you do that then
anyone who gains access to the system

26
00:01:30,960 --> 00:01:34,940
can look at the clear text password and
then impersonate the user.

27
00:01:34,940 --> 00:01:39,950
This can include attackers or
even other users on a system.

28
00:01:39,950 --> 00:01:44,630
Therefore, we never store the plain
text of the passwords on system,

29
00:01:44,630 --> 00:01:46,590
only the has values.

30
00:01:46,590 --> 00:01:47,420
Of course,

31
00:01:47,420 --> 00:01:52,558
if an attacker gains access to system,
he can steal the hash of the password.

32
00:01:52,558 --> 00:01:57,730
Then what the attacker can do is guess
possible passwords one by one and

33
00:01:57,730 --> 00:02:00,020
hash each guess password and

34
00:02:00,020 --> 00:02:04,620
compare the hash value with
the stolen hash of the password.

35
00:02:04,620 --> 00:02:05,660
If they match,

36
00:02:05,660 --> 00:02:09,449
then the attacker knows that he had
correctly guessed the password.

37
00:02:09,449 --> 00:02:14,730
Therefore, it is important for us to use
a password that's very hard to guess.

38
00:02:14,730 --> 00:02:17,780
For example, we should not use
any word in the dictionary.
