1
00:00:00,000 --> 00:00:03,708
Okay. For homework two, we asked you to modify

2
00:00:03,708 --> 00:00:08,513
the interpret function so that JavaScript elements are

3
00:00:08,513 --> 00:00:13,147
– the output of the JavaScript reinterpreted and run

4
00:00:13,147 --> 00:00:17,022
through the HTML interpreter. So instead of just

5
00:00:17,022 --> 00:00:19,848
basic JavaScript output, we can actually output

6
00:00:19,848 --> 00:00:24,231
further HTML making our JavaScript quite a bit more powerful.

7
00:00:24,231 --> 00:00:27,983
So how do we change this, so that we can do that?

8
00:00:27,983 --> 00:00:30,506
Well, first off we can see that we’re not really

9
00:00:30,506 --> 00:00:34,830
concerned with these two branches of this if statement.

10
00:00:34,830 --> 00:00:36,445
We’re not concerned with word elements or tag

11
00:00:36,445 --> 00:00:39,457
elements, we care about JavaScript elements. So we

12
00:00:39,457 --> 00:00:42,514
already know that we don’t really need to

13
00:00:42,514 --> 00:00:43,980
do anything right in here. We need to do

14
00:00:43,980 --> 00:00:47,173
something to modify how we interpret JavaScript.

15
00:00:47,173 --> 00:00:50,075
So we go down here and the two lines I added are

16
00:00:50,075 --> 00:00:53,739
right here. Now instead of just outputting the results

17
00:00:53,739 --> 00:00:58,002
of the JavaScript interpreter’s abstract syntax tree

18
00:00:58,002 --> 00:01:01,915
output. What I’m doing is I’m running the result of

19
00:01:01,915 --> 00:01:04,468
the JavaScript interpreter back through the HTML

20
00:01:04,468 --> 00:01:08,197
parser, the parse function. And outputting that

21
00:01:08,197 --> 00:01:10,852
abstract syntax for you, which this is HTML now and

22
00:01:10,852 --> 00:01:15,316
then we run that back through this function itself so

23
00:01:15,316 --> 00:01:17,970
that we can further interpret the syntax tree. Now

24
00:01:17,970 --> 00:01:21,400
after we’ve done that, we don’t really need this last

25
00:01:21,400 --> 00:01:23,888
graphics doubt word resolved. We don’t need to

26
00:01:23,888 --> 00:01:27,428
further interpret result. We’ve already done that. So

27
00:01:27,428 --> 00:01:30,390
we can just get rid of this and to check whether this

28
00:01:30,390 --> 00:01:34,618
works, we click run and we see below that we do

29
00:01:34,618 --> 00:01:41,735
indeed get our page output, but okay. So we’ve got

30
00:01:41,735 --> 00:01:45,226
this JavaScript output, but you can see that the odd

31
00:01:45,226 --> 00:01:49,465
numbers are bold and the even numbers are italicized

32
00:01:49,465 --> 00:01:55,298
which if you check, the web page that we gave you as

33
00:01:55,298 --> 00:01:57,669
an example, is exactly what we’ve done. We’ve

34
00:01:57,669 --> 00:02:01,730
wrapped the even and odd numbers or the odd and

35
00:02:01,730 --> 00:02:05,848
even numbers respectively in bold and italic text,

36
00:02:05,848 --> 00:02:09,066
which is what you see down here. So this gives us a

37
00:02:09,066 --> 00:02:11,384
lot more power in our JavaScript interpreter because

38
00:02:11,384 --> 00:02:14,214
we can use our JavaScript to now output

39
00:02:14,214 --> 00:02:17,712
further HTML that we can run on the fly.

40
00:02:17,712 --> 00:02:21,435
And that is going to be very, very important.
