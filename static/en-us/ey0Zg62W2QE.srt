1
00:00:00,390 --> 00:00:03,530
So we said, and we talked about this two times ago

2
00:00:03,530 --> 00:00:08,050
that Gaussian averaging was a reasonable thing to do.

3
00:00:08,050 --> 00:00:12,730
If the noise was independent in each pixel and was centered about 0.

4
00:00:12,730 --> 00:00:15,610
So that it like, the noise is created by a Gaussian process.

5
00:00:15,610 --> 00:00:18,130
So some were positive, some were negative, etc.

6
00:00:18,130 --> 00:00:21,010
And now we've talked a little bit about how they're doing the filtering.

7
00:00:21,010 --> 00:00:23,470
But there are other kinds of noise as well, and

8
00:00:23,470 --> 00:00:25,370
we need different kinds of filtering.

9
00:00:25,370 --> 00:00:27,060
Maybe not a linear filter.

10
00:00:27,060 --> 00:00:28,480
That's why it's at the end of this lesson.

11
00:00:28,480 --> 00:00:32,229
Just to show you something that's not linear, but an effective filter.

12
00:00:32,229 --> 00:00:34,160
Okay. So on the left here,

13
00:00:34,160 --> 00:00:37,980
we have that pepper image with a little bit of Gaussian noise added.

14
00:00:37,980 --> 00:00:42,410
And on the right, we have the pepper image with the salt and pepper noise.

15
00:00:42,410 --> 00:00:43,300
Different peppers.

16
00:00:43,300 --> 00:00:45,680
Peppers as in good peppers to eat with salt and

17
00:00:45,680 --> 00:00:47,860
pepper noise, which spicy pepper black.

18
00:00:47,860 --> 00:00:52,330
The question is what kind of filtering might you need to use on

19
00:00:52,330 --> 00:00:54,750
the right hand side, okay?

20
00:00:54,750 --> 00:00:58,000
So the way to approach this is to remember that our other

21
00:00:58,000 --> 00:01:00,030
assumption about images, right?

22
00:01:00,030 --> 00:01:05,019
Is that the underlying image change slowly around the pixel.

23
00:01:05,019 --> 00:01:08,236
So the idea is that if there's some sort of arbitrary value.

24
00:01:08,236 --> 00:01:14,300
That was put in some location as what happens in salt and pepper noise.

25
00:01:14,300 --> 00:01:17,750
How could we go about finding the value that we

26
00:01:17,750 --> 00:01:20,980
should replace that value with to make a better picture?

27
00:01:20,980 --> 00:01:23,630
Now remember, when we were doing the filtering, this blurring.

28
00:01:23,630 --> 00:01:27,540
We were essentially replacing the pixel values by the local average.

29
00:01:27,540 --> 00:01:30,670
And it was either a box average or a Gaussian average.

30
00:01:30,670 --> 00:01:33,790
And that was fine when the noise was not a huge amount of noise and

31
00:01:33,790 --> 00:01:35,340
it tended to go to 0.

32
00:01:35,340 --> 00:01:38,570
So by averaging, you tend to average away the noise and

33
00:01:38,570 --> 00:01:41,710
get about the right value of pix, of, of the pixel.

34
00:01:41,710 --> 00:01:46,450
But if a few sort of totally random values are being injected into your image.

35
00:01:46,450 --> 00:01:48,862
You really need to do something different.

36
00:01:48,862 --> 00:01:52,290
And as some of you know is when I have sort of these very spurious values.

37
00:01:52,290 --> 00:01:57,421
An interesting way of, of, coming up with sort of the appropriate middle value,

38
00:01:57,421 --> 00:01:59,540
is not an average, but a median.
