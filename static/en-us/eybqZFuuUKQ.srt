1
00:00:00,280 --> 00:00:00,910
First.

2
00:00:00,910 --> 00:00:05,060
Symmetric encryption can only be
used to provide confidentiality.

3
00:00:05,060 --> 00:00:08,710
This is false because symmetric
encryption can be used for

4
00:00:08,710 --> 00:00:10,270
other security services.

5
00:00:10,270 --> 00:00:13,670
For example it can be used for
authentication.

6
00:00:13,670 --> 00:00:15,930
Suppose Alice and Bob share a secret.

7
00:00:15,930 --> 00:00:19,430
Then Alice can use the shared
secret as the key and

8
00:00:19,430 --> 00:00:22,860
encrypt message using symmetric
encryption algorithm and

9
00:00:22,860 --> 00:00:26,380
send the message to Bob to
prove that she's Alice.

10
00:00:26,380 --> 00:00:30,750
Second, public-key encryption can be
used to create digital signatures.

11
00:00:30,750 --> 00:00:31,530
This is true.

12
00:00:31,530 --> 00:00:34,440
Given a message we can
first hash the message and

13
00:00:34,440 --> 00:00:37,580
then encrypt the message
using our public-key.

14
00:00:37,580 --> 00:00:42,000
The encrypted hash value becomes
the digital signature of this message.

15
00:00:42,000 --> 00:00:47,040
Third, cryptanalysis attacks try every
possible key on a piece of ciphertext

16
00:00:47,040 --> 00:00:51,310
until an intelligible translation
into plaintext is obtained.

17
00:00:51,310 --> 00:00:56,400
This is false, because what's described
here is actually the brute force attack,

18
00:00:56,400 --> 00:01:00,150
or the spy research all
possible keys until

19
00:01:00,150 --> 00:01:03,400
the ciphertext is translated
into a plain text.

20
00:01:03,400 --> 00:01:07,870
Well as cryptanalytic attacks would
use knowledge of the algorithm or

21
00:01:07,870 --> 00:01:12,720
the plain text such as the frequency
of letters in order to break a scheme.

22
00:01:12,720 --> 00:01:15,780
In other words a cryptanalytic
attack typically

23
00:01:15,780 --> 00:01:18,380
does not need to try every possible key.

24
00:01:18,380 --> 00:01:21,630
Fourth, the secret key is input
to the encryption algorithm.

25
00:01:21,630 --> 00:01:22,630
This is true.

26
00:01:22,630 --> 00:01:26,360
An encryption algorithm takes as its
input, the plain text and a key.
