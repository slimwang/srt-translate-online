1
00:00:00,710 --> 00:00:04,460
If you answered yes, then you and I are on the same wavelength. And in the

2
00:00:04,460 --> 00:00:08,600
next few panels, I'm going to show you how

3
00:00:08,600 --> 00:00:13,110
this particular programming construct that a multithreaded program

4
00:00:13,110 --> 00:00:15,370
may execute in terms of producer and a

5
00:00:15,370 --> 00:00:19,700
consumer, can actually accom, accomplished with simple read/write

6
00:00:19,700 --> 00:00:22,780
atomic operations available in the instruction set of

7
00:00:22,780 --> 00:00:26,580
a processor. The solution, it turns out is

8
00:00:26,580 --> 00:00:30,170
surprisingly very simple. The idea is that

9
00:00:30,170 --> 00:00:32,360
between p1 and p2, I'm going to introduce a

10
00:00:32,360 --> 00:00:35,270
new variable, a shared variable, and that variable,

11
00:00:35,270 --> 00:00:38,090
I'll call it a flag. And I'll initialize

12
00:00:38,090 --> 00:00:41,390
this flag to be zero to start with.

13
00:00:41,390 --> 00:00:44,580
And the agreement between these two. Producers in

14
00:00:44,580 --> 00:00:49,890
consumer is that the producer will modify the

15
00:00:49,890 --> 00:00:52,530
data structure that he wants to modify and

16
00:00:52,530 --> 00:00:55,090
once he's done with the modification he will

17
00:00:55,090 --> 00:00:57,900
set this flag to be a one. And that's

18
00:00:57,900 --> 00:01:01,510
the signal to p2 that this guy is

19
00:01:01,510 --> 00:01:05,180
done with the modification. Now, what is p2 doing?

20
00:01:05,180 --> 00:01:08,360
Well, p2 is basically waiting. For this flag

21
00:01:08,360 --> 00:01:12,855
which initial, initially the flag was initially zero. And,

22
00:01:12,855 --> 00:01:15,501
and basically the processor P2 is waiting for the

23
00:01:15,501 --> 00:01:17,330
flag to change from a zero to a one.

24
00:01:18,530 --> 00:01:22,070
Now once p1 is done with its modification, it's going to

25
00:01:22,070 --> 00:01:24,620
set this flag to a, to a one. And that's the

26
00:01:24,620 --> 00:01:28,560
signal that this guy's waiting for. And as soon as this

27
00:01:28,560 --> 00:01:32,020
flag changes to a one. Then he'll break out of this spin

28
00:01:32,020 --> 00:01:35,420
loop here,and he is now ready to use the real structure.

29
00:01:35,420 --> 00:01:37,300
And once he is done using the real structure, he can

30
00:01:37,300 --> 00:01:40,130
flip it back to zero, to indicate that he is, that

31
00:01:40,130 --> 00:01:43,800
he is done using it. So that the next time it the

32
00:01:43,800 --> 00:01:46,250
producer wants to modify it again he can

33
00:01:46,250 --> 00:01:48,590
do that. So that's sort of the solution.

34
00:01:48,590 --> 00:01:51,270
Now, let's analyze the solution and see why

35
00:01:51,270 --> 00:01:55,040
it works. It will just atomic reads and writes.
