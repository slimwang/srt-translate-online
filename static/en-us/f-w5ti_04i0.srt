1
00:00:00,280 --> 00:00:02,420
Now, let's define what
scan actually does.

2
00:00:02,420 --> 00:00:04,430
What is the scan operation?

3
00:00:04,430 --> 00:00:06,470
So, there's three inputs to scan.

4
00:00:06,470 --> 00:00:08,620
The first, is an array of length n.

5
00:00:08,620 --> 00:00:12,040
The second, is an operator
a binary associate of operator.

6
00:00:12,040 --> 00:00:13,470
For the purposes of explaining this,

7
00:00:13,470 --> 00:00:16,079
we're going to soon that
that operator is plus.

8
00:00:16,079 --> 00:00:18,720
And finally, we have an identity
element that's associated with that

9
00:00:18,720 --> 00:00:19,840
particular operator.

10
00:00:19,840 --> 00:00:22,420
So in this case,
the identity element is zero.

11
00:00:22,420 --> 00:00:25,300
Let's keep in mind that this
discussion will apply to

12
00:00:25,300 --> 00:00:27,530
any binary area associative operator.

13
00:00:27,530 --> 00:00:30,250
So, our input is an array of length and

14
00:00:30,250 --> 00:00:33,500
we start off by designating the first
element of the input as A zero.

15
00:00:33,500 --> 00:00:37,260
Second element is A one,
the third is A two and so on.

16
00:00:37,260 --> 00:00:42,020
And so, the scan operation will
produce an output, given these inputs.

17
00:00:42,020 --> 00:00:44,470
What does that output
actually look like?

18
00:00:44,470 --> 00:00:46,730
So the output at any given position,

19
00:00:46,730 --> 00:00:50,800
is the sum of all the elements
that precede it in the input.

20
00:00:50,800 --> 00:00:52,310
So, let's see how that actually works.

21
00:00:52,310 --> 00:00:54,740
So the output at position zero is,

22
00:00:54,740 --> 00:00:57,390
the sum of all the elements
that come before it.

23
00:00:57,390 --> 00:00:58,900
Well there is no elements before it, so

24
00:00:58,900 --> 00:01:02,050
the output is simply
the identity element.

25
00:01:02,050 --> 00:01:04,260
The output at the first position here,

26
00:01:04,260 --> 00:01:07,940
is the sum of all the elements
that come before it.

27
00:01:07,940 --> 00:01:08,510
In this case,

28
00:01:08,510 --> 00:01:13,180
there is one element that comes before
it, so that's copied over to the output.

29
00:01:13,180 --> 00:01:15,000
The output in the third element here,

30
00:01:15,000 --> 00:01:18,190
is the sum of all the elements
that come before it.

31
00:01:18,190 --> 00:01:20,702
In this case the sum of A zero and
A one.

32
00:01:20,702 --> 00:01:23,009
The output for the fourth element is,

33
00:01:23,009 --> 00:01:27,040
simply the sum of all
the elements that come before it.

34
00:01:27,040 --> 00:01:32,210
In this case the sum of A zero and
A one and A two and so on.

35
00:01:32,210 --> 00:01:34,390
And so finally,
you reach the final element and

36
00:01:34,390 --> 00:01:39,040
it is the sum of everything in the array
except for the very last value.

37
00:01:39,040 --> 00:01:41,250
That's the definition of scan and

38
00:01:41,250 --> 00:01:44,830
keep in mind again, that this will apply
to any binary associative operator.

39
00:01:44,830 --> 00:01:48,910
Whether that be multiply, max, min,
logical operations like AND and

40
00:01:48,910 --> 00:01:49,700
OR, and so on.

41
00:01:50,870 --> 00:01:52,300
Let's do a simple example.

42
00:01:52,300 --> 00:01:55,020
Let's take the sum scan of this
input array, [3 1 4 1 5 9].

43
00:01:55,020 --> 00:02:00,110
So, how do we compute the output?

44
00:02:00,110 --> 00:02:02,520
First we always start with
the identity element.

45
00:02:02,520 --> 00:02:06,070
Then we start with the first element,
three and one make four.

46
00:02:06,070 --> 00:02:08,975
Three and one and four make eight.

47
00:02:08,975 --> 00:02:10,479
Three, one, four and one make nine.

48
00:02:10,479 --> 00:02:12,200
Three, one, four, one, and five make 14.

49
00:02:12,200 --> 00:02:17,830
So for our input here,

50
00:02:17,830 --> 00:02:22,230
to scan to a sum scan is
314159 The output is zero,

51
00:02:22,230 --> 00:02:25,270
three, four, eight, nine, 14.

52
00:02:25,270 --> 00:02:28,820
Now, let's try doing example with
a different binary so sort of operator.

53
00:02:30,000 --> 00:02:32,340
So as a little quiz,
let's make sure we understand.

54
00:02:32,340 --> 00:02:36,270
Let's try a max scan on
an array of unsigned integers.

55
00:02:36,270 --> 00:02:40,170
The same array of unsigned integers
three, one, four, one, five, nine.

56
00:02:40,170 --> 00:02:41,910
Like to ask you two things first.

57
00:02:41,910 --> 00:02:47,060
What is the identity element if we
do a max scan on unsigned ints?

58
00:02:47,060 --> 00:02:50,600
And second, what's going to be
the output of this max scan operation?
