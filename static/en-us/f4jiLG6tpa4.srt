1
00:00:00,190 --> 00:00:01,520
Here's my solution.

2
00:00:01,520 --> 00:00:04,939
Yours might not be exactly the same,
but that's okay as long as it outputs

3
00:00:04,939 --> 00:00:08,020
the same initial action based
on the parameters given.

4
00:00:08,020 --> 00:00:14,060
I started by adding a new field,
the int numStates, to my FirstMDP class.

5
00:00:14,060 --> 00:00:18,900
Then in the constructor,
I initialized this.numStates to 6.

6
00:00:18,900 --> 00:00:23,580
Then, down in the bestFirstAction
method, I create a ValueIteration object

7
00:00:23,580 --> 00:00:26,600
using the computeValue
method we defined earlier.

8
00:00:26,600 --> 00:00:28,910
To extract the value of each state,

9
00:00:28,910 --> 00:00:31,760
I start by using
the static getState method

10
00:00:31,760 --> 00:00:36,660
from the GraphDefinedDomain class to
convert from integers to state objects.

11
00:00:36,660 --> 00:00:40,140
Then I use the value
method of the object vi to

12
00:00:40,140 --> 00:00:42,830
obtain the value of each
state object in our MDP.

13
00:00:43,930 --> 00:00:48,830
These values are then stored in
the array V for easier access later.

14
00:00:48,830 --> 00:00:54,430
Finally, I check to see whether V[1],
V[2], or V[3] is the largest.

15
00:00:54,430 --> 00:00:58,230
If V[1] is the largest,
then I return the string action a.

16
00:00:58,230 --> 00:01:01,425
If V[2] is the largest,
then I return the string action b, and

17
00:01:01,425 --> 00:01:04,940
if V[3] is largest,
then I return the string action c.
