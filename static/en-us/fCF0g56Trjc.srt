1
00:00:00,190 --> 00:00:02,400
So how did you check that your code worked?

2
00:00:02,400 --> 00:00:05,280
Hopefully, you did check that the conference keys to

3
00:00:05,280 --> 00:00:09,070
attend contains conference key string. And you shouldn't have

4
00:00:09,070 --> 00:00:13,570
found the conference keys to attend contained conference name, because

5
00:00:13,570 --> 00:00:16,630
it doesn't. So another good thing to check is

6
00:00:16,630 --> 00:00:20,030
that after you register for a conference, the seats available

7
00:00:20,030 --> 00:00:22,060
goes down by one. So the first time you

8
00:00:22,060 --> 00:00:25,570
register the seats available, it's going to down by one less

9
00:00:25,570 --> 00:00:28,200
than the max attendees. Of course, if you log out

10
00:00:28,200 --> 00:00:30,490
and log in as a different user and then register

11
00:00:30,490 --> 00:00:33,310
for the same conference again, seats available is going to go

12
00:00:33,310 --> 00:00:37,110
down by even more than one less the max attendees.

13
00:00:37,110 --> 00:00:40,430
And yes, in our application you can register for a

14
00:00:40,430 --> 00:00:44,610
conference you created. Okay. So let's take a quick look

15
00:00:44,610 --> 00:00:47,560
at the finished code for register for conference. And we're

16
00:00:47,560 --> 00:00:50,610
in the conference API class here. You already know if

17
00:00:50,610 --> 00:00:53,700
the user's null through an unauthorized exception. Here

18
00:00:53,700 --> 00:00:57,720
we start the transaction ofy.transact and then here, we

19
00:00:57,720 --> 00:01:01,010
do the public wrapped Boolean run, wrapped Boolean

20
00:01:01,010 --> 00:01:03,050
is what we're going to return. We get the

21
00:01:03,050 --> 00:01:06,130
conference key. We just load the conference from

22
00:01:06,130 --> 00:01:08,730
the datastore, should be familiar with doing that by

23
00:01:08,730 --> 00:01:11,860
now. If there's no conference found, take the appropriate

24
00:01:11,860 --> 00:01:16,730
action. Get the user's profile from the data store.

25
00:01:16,730 --> 00:01:19,400
Check the various conditions before we allow the user

26
00:01:19,400 --> 00:01:22,330
to register, and if all looks good, go ahead

27
00:01:22,330 --> 00:01:25,280
and book the seat. So we add the conference

28
00:01:25,280 --> 00:01:28,290
key to the conference keys to attend property of

29
00:01:28,290 --> 00:01:31,559
the profile, we book the seat on the conference.

30
00:01:32,620 --> 00:01:35,630
And then, very importantly, we save the profile and

31
00:01:35,630 --> 00:01:38,360
the conference and we return the wrapped Boolean. Now,

32
00:01:39,560 --> 00:01:42,060
if we didn't get a success throw the exceptions.

33
00:01:42,060 --> 00:01:43,570
We already talked about that.
