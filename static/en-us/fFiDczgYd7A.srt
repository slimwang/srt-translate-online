1
00:00:00,600 --> 00:00:03,010
Now that we've covered provisioning Vagrant files and

2
00:00:03,010 --> 00:00:08,720
the provision.sh file to add in our Python package, we next talk about Flask.

3
00:00:08,720 --> 00:00:11,790
Flask is called a microframework because it keeps the core

4
00:00:11,790 --> 00:00:13,510
simple but extendable.

5
00:00:13,510 --> 00:00:16,970
Flash has no database extraction layer, form validation, or any other

6
00:00:16,970 --> 00:00:20,490
component where preexisting third-party libraries provide common functions.

7
00:00:21,560 --> 00:00:26,390
As you can see from the home page, Flask is fun and easy to setup.

8
00:00:26,390 --> 00:00:29,810
In this quick video, I'll demonstrate how easy it is to modify Flask.

9
00:00:29,810 --> 00:00:32,610
Make sure your visualization is running or launch your server again by

10
00:00:32,610 --> 00:00:37,990
navigating to the viz in your terminal directory and entering python app.py.

11
00:00:37,990 --> 00:00:46,881
And in your local browser, navigate to http://127.0.0.1:5000.

12
00:00:46,881 --> 00:00:51,310
And next in Atom, navigate to your viz folder and open app.py.

13
00:00:51,310 --> 00:00:55,960
I used the tutorial to create a Flask application named app and a decorator

14
00:00:55,960 --> 00:01:01,350
function syntax to create an app.route with the forward slash location.

15
00:01:01,350 --> 00:01:03,570
To change this location, we can simply copy and

16
00:01:03,570 --> 00:01:08,290
paste, and I've renamed the new route /hack.

17
00:01:08,290 --> 00:01:13,820
And after defining our route, we define the function show_hack.

18
00:01:13,820 --> 00:01:19,740
We then navigate back to our browser and enter in our new location, /hack.

19
00:01:19,740 --> 00:01:21,840
And we see that our code updates immediately and

20
00:01:21,840 --> 00:01:26,840
the same Twitter storm word cloud template is accessed using our new location.

21
00:01:26,840 --> 00:01:31,010
Now that we've seen how easy it is to modify paths in Flask,

22
00:01:31,010 --> 00:01:34,770
our next job is to explore the key-value paired database Redis.
