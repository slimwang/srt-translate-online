1
00:00:00,160 --> 00:00:03,210
So, the question is,
how powerful is morphology?

2
00:00:03,210 --> 00:00:04,610
And like most questions in life,

3
00:00:04,610 --> 00:00:08,770
the answer is what I have to always
tell my kids, kids, it depends.

4
00:00:08,770 --> 00:00:13,360
If you have nice, clean binary images,
or even, I shouldn't say that.

5
00:00:13,360 --> 00:00:17,630
If your binary images behave exactly the
way the three or four binary images you

6
00:00:17,630 --> 00:00:21,440
looked at when you designed the system
were behaving, then things will be fine.

7
00:00:21,440 --> 00:00:23,110
So clean might be the wrong word.

8
00:00:23,110 --> 00:00:26,610
If it's well, here it says almost clean.

9
00:00:26,610 --> 00:00:30,030
Let, let's just say that your binary
images are, sort of, well-behaved.

10
00:00:30,030 --> 00:00:33,345
So here's an example and, again, this
comes from Linda Shapiro, all right?

11
00:00:33,345 --> 00:00:37,930
Here is an original binary image, and,
if I ask you to look at that quickly and

12
00:00:37,930 --> 00:00:41,680
ask you where are the faults in those
gears, you would have to look for

13
00:00:41,680 --> 00:00:43,560
it at a long,
look at it for a long time.

14
00:00:43,560 --> 00:00:47,980
But if I show you this picture, and I
say, where are the faults in the gears?

15
00:00:47,980 --> 00:00:51,460
You would say, oh, I guess there's
one here, and there's one there, and

16
00:00:51,460 --> 00:00:53,740
now when you look at it you see,
yeah, there really is,

17
00:00:53,740 --> 00:00:55,580
there's a tooth missing from the gear.

18
00:00:55,580 --> 00:00:57,390
So the question is,
how did they do that?

19
00:00:58,430 --> 00:01:00,660
So again, I'm not going to
into too much of the detail,

20
00:01:00,660 --> 00:01:02,720
I'm just going to show
you this set of images.

21
00:01:02,720 --> 00:01:05,800
It's all on one page,
that's the sequence of operations, and

22
00:01:05,800 --> 00:01:07,980
i'll just describe them briefly, okay?

23
00:01:07,980 --> 00:01:11,670
So, here was their original
picture that i showed you.

24
00:01:11,670 --> 00:01:16,800
Basically over here,
they were looking for places that had

25
00:01:16,800 --> 00:01:21,970
a ring that would be essentially
black like this, white out here.

26
00:01:21,970 --> 00:01:25,150
And remember I was telling you
about don't care pixels, you know,

27
00:01:25,150 --> 00:01:29,620
don't care in there and, and, and of
a particular shape, particular size, and

28
00:01:29,620 --> 00:01:32,620
the only pixels that
lit up were these guys.

29
00:01:32,620 --> 00:01:33,520
Okay?
All right?

30
00:01:33,520 --> 00:01:37,520
Well that's fine, and then you say okay,
I'm going to take those and

31
00:01:37,520 --> 00:01:40,550
I'm just going to dilate them
by something called a hole mask,

32
00:01:40,550 --> 00:01:42,890
which is just this basic shape.

33
00:01:42,890 --> 00:01:43,470
All right?

34
00:01:43,470 --> 00:01:47,810
So you realize what you end up
with is just the holes filled up.

35
00:01:47,810 --> 00:01:51,764
Well, if I, or
this plus this, I get that.

36
00:01:51,764 --> 00:01:55,190
So voila,
I have filled the holes of my gear.

37
00:01:55,190 --> 00:01:56,850
Okay, great.

38
00:01:56,850 --> 00:02:02,368
Then what I can do is I can essentially
do the same trick again of removing

39
00:02:02,368 --> 00:02:07,560
pixels that basically have with
a structuring element like that.

40
00:02:07,560 --> 00:02:10,907
So I find every place where a
structuring element like that fits, and

41
00:02:10,907 --> 00:02:15,140
that will rem, that will be able to
pull out these, these middle parts.

42
00:02:15,140 --> 00:02:17,690
And then I can dilate the edge, and

43
00:02:17,690 --> 00:02:20,580
I end up with this thing
that looks like that.

44
00:02:20,580 --> 00:02:21,400
Great.

45
00:02:21,400 --> 00:02:26,040
That's sort of a bound around the edge
that's thicker than the edge.

46
00:02:26,040 --> 00:02:33,211
If I and these two things, so
it's an and, I get just the teeth, okay?

47
00:02:33,211 --> 00:02:34,730
That's what's shown there.

48
00:02:34,730 --> 00:02:38,030
And, and also, you'll all notice we're
starting to see there's that gap

49
00:02:38,030 --> 00:02:41,690
right there, because that's where
the teeth are missing, all right?

50
00:02:41,690 --> 00:02:44,550
Well, what I can do is I can
dilate that by something that

51
00:02:44,550 --> 00:02:46,550
has the size of the tip.

52
00:02:46,550 --> 00:02:48,290
And if I run that around here,

53
00:02:48,290 --> 00:02:53,570
I end up filling everything except
where that gap is, both here and there.

54
00:02:53,570 --> 00:02:57,050
And then given those, I can do,
in fact the result is just a,

55
00:02:57,050 --> 00:02:58,540
it's got this thing called defect queue.

56
00:02:58,540 --> 00:03:00,372
That's just this little round ball,

57
00:03:00,372 --> 00:03:02,842
basically the operation's
exactly as it is here.

58
00:03:02,842 --> 00:03:06,963
It's b 7 right, minus b 9 here,

59
00:03:06,963 --> 00:03:11,368
dilated by the defect queue, or

60
00:03:11,368 --> 00:03:15,642
back with b 9 and I get this, okay?

61
00:03:15,642 --> 00:03:19,040
So, would I expect you to
implement something like that?

62
00:03:19,040 --> 00:03:20,340
I, I don't know.

63
00:03:20,340 --> 00:03:24,580
The point is that with
these relatively simple,

64
00:03:24,580 --> 00:03:29,120
low level mathematical operations, you
can do a relatively sophisticated shape

65
00:03:29,120 --> 00:03:33,020
analysis if you have
the particular shape that you,

66
00:03:33,020 --> 00:03:35,710
if you know the particular shape
that you want to deal with, and

67
00:03:35,710 --> 00:03:39,830
the particular types of defect sizes,
for example, you wanted to find.

68
00:03:39,830 --> 00:03:42,790
So, there are other
operations that you can do.

69
00:03:42,790 --> 00:03:45,190
Here's a, just a list of things
that you might computer.

70
00:03:45,190 --> 00:03:48,640
These are shape descriptors
of binary blobs.

71
00:03:48,640 --> 00:03:51,510
And, like I said, this used to be a very
important part of computer vision,

72
00:03:51,510 --> 00:03:56,100
especially in assembly or
machine vision of inspecting 2D parts.

73
00:03:56,100 --> 00:03:58,680
And for those particular applications,
it still is.
