1
00:00:00,510 --> 00:00:05,229
All right, let's start by creating
a new class and call it reminder tasks.

2
00:00:05,230 --> 00:00:08,470
Inside, let's create a public
constant string called

3
00:00:08,470 --> 00:00:10,530
action increment order count.

4
00:00:10,529 --> 00:00:15,009
This is the first intent to action that
the reminder tasks knows how to handle.

5
00:00:15,009 --> 00:00:17,983
Then we'll create a method that
increments the water count

6
00:00:17,983 --> 00:00:20,777
using the preference utilities
that we've created for

7
00:00:20,777 --> 00:00:24,478
you which simply updates an integer
value stored in shared preferences.

8
00:00:24,478 --> 00:00:28,841
Finally, we are going to create a method
called execute task that increments

9
00:00:28,841 --> 00:00:32,869
the water count if the action matches
action, increment water count,

10
00:00:32,869 --> 00:00:37,479
which is the only action that
reminder tasks knows about so far.

11
00:00:37,479 --> 00:00:41,699
Now, let's go to the actual intent
service, go to water reminder intent

12
00:00:41,700 --> 00:00:44,699
service and create the water
reminder intent service class.

13
00:00:45,929 --> 00:00:49,615
Make sure you extend from
the intent service then,

14
00:00:49,615 --> 00:00:52,900
we'll fill in the default constructor
with the name of the service,

15
00:00:52,899 --> 00:00:57,935
which in this case would use the name
of water reminder intent service.

16
00:00:57,935 --> 00:01:01,145
The next thing to do in this file
is to over ride the on handled and

17
00:01:01,145 --> 00:01:04,995
tenth method which is the method
that the intense service calls

18
00:01:04,995 --> 00:01:06,415
on the background thread.

19
00:01:06,415 --> 00:01:09,915
Very similar to the eluded and
background method that we used for

20
00:01:09,915 --> 00:01:10,785
a same task loader.

21
00:01:11,995 --> 00:01:13,605
We are going to set the action for

22
00:01:13,605 --> 00:01:17,225
the service to perform
using intent.setAction.

23
00:01:17,224 --> 00:01:21,659
So let's get the intent.getAction
here to retrieve it.

24
00:01:21,659 --> 00:01:25,849
Then we'll call
ReminderTask.executeTask with that

25
00:01:25,849 --> 00:01:27,649
action as well as the necessary context.

26
00:01:29,010 --> 00:01:33,050
We're almost done, services like
every other android component

27
00:01:33,049 --> 00:01:35,619
needs to be registered in
the android manifest file.

28
00:01:36,829 --> 00:01:39,060
So let's go there and
create a new service tag.

29
00:01:40,700 --> 00:01:43,769
We'll do that within our
application's tag itself.

30
00:01:43,769 --> 00:01:47,399
We'll set the Android name pointing
to our intent service class and

31
00:01:47,400 --> 00:01:49,440
we'll set the server to false.

32
00:01:49,439 --> 00:01:52,939
This works the same way as an exported
tag for content providers.

33
00:01:52,939 --> 00:01:56,629
It controls whether other
applications can access your service.

34
00:01:56,629 --> 00:02:01,079
This is important because we only want
our app to be able to call our service.

35
00:02:01,079 --> 00:02:04,679
Finally, let's test to make
sure that all of that works.

36
00:02:04,680 --> 00:02:06,690
We'll go to our MainActivity and

37
00:02:06,689 --> 00:02:11,669
inside the method called incrementWater,
let's create a new explicit intent

38
00:02:11,669 --> 00:02:15,079
called IncrementWaterCount
that refers to our service.

39
00:02:15,080 --> 00:02:19,518
Then we'll set the action of the intent
to ACTION_INCREMENT_WATER_COUNT from out

40
00:02:19,518 --> 00:02:21,181
WaterReminderIntentService.class.

41
00:02:22,580 --> 00:02:25,480
And now all we have to do to
start our service is to call

42
00:02:25,479 --> 00:02:28,149
start service with our
increment water count intent.

43
00:02:29,229 --> 00:02:33,289
Remember that this increment water
method is already set up to be called

44
00:02:33,289 --> 00:02:35,879
every time the user
clicks on the cup icon.

45
00:02:35,879 --> 00:02:39,710
So now every time this image is clicked
the background service will increment

46
00:02:39,710 --> 00:02:41,010
the count.

47
00:02:41,009 --> 00:02:43,689
And because we've already set
the activity to listen to

48
00:02:43,689 --> 00:02:48,689
the preference changes the UI will
display the updated count immediately.

49
00:02:48,689 --> 00:02:50,500
Perfect, let's give it a go.

50
00:02:50,500 --> 00:02:53,599
Now when we run our app and
start clicking on the cut icon

51
00:02:53,599 --> 00:02:57,189
you can see that the counter is
incrementing as expected, perfect.

