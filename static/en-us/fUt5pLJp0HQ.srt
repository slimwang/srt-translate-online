1
00:00:00,730 --> 00:00:04,050
Earlier we saw that screen readers
will announce an element's role, name,

2
00:00:04,050 --> 00:00:07,470
state and
value not necessarily in that order.

3
00:00:07,470 --> 00:00:12,770
By using the bright semantic element,
we've got role, state and value covered,

4
00:00:12,770 --> 00:00:16,760
but we also need to make sure that we're
making elements name discoverable.

5
00:00:16,760 --> 00:00:20,140
This is actually the very first
item on web aims checklist,

6
00:00:20,140 --> 00:00:23,730
provide text alternatives for
any non text content.

7
00:00:23,730 --> 00:00:26,920
At this point, I'm going to take
a quick tangent on technology.

8
00:00:26,920 --> 00:00:30,200
We're in the unfortunate position
of having all of these terms.

9
00:00:30,200 --> 00:00:34,100
Each of which is overloaded in
its own particular way in HTML,

10
00:00:34,100 --> 00:00:38,510
which are also used in various contexts
to refer to the same central concept

11
00:00:38,510 --> 00:00:40,020
we're talking about in this lesson.

12
00:00:41,050 --> 00:00:46,270
Since the way the term label is used in
HTML is closest to what we mean here for

13
00:00:46,270 --> 00:00:49,290
the rest of this course,
I'm going to refer to label

14
00:00:49,290 --> 00:00:52,070
interchangeably to
refer to this concept.

15
00:00:52,070 --> 00:00:54,740
But please keep in mind that in
the context of role, name, value, and

16
00:00:54,740 --> 00:00:57,960
state, the name means the same thing.

17
00:00:57,960 --> 00:01:01,060
With that out of the way,
let's talk a bit about labels.

18
00:01:01,060 --> 00:01:03,730
Broadly, there are two types of labels.

19
00:01:03,730 --> 00:01:05,480
Visible labels,

20
00:01:05,480 --> 00:01:08,790
which are used by all users to
associate meaning with an element, and

21
00:01:08,790 --> 00:01:12,420
text alternatives which are only used
when there's no need for visual labels.

22
00:01:12,420 --> 00:01:16,778
Or here we've got an image that is
self-explanatory to anyone who can see

23
00:01:16,778 --> 00:01:17,489
the image.

24
00:01:17,489 --> 00:01:21,911
By its very nature a text alternative
is usually not visible on the page.

25
00:01:21,911 --> 00:01:26,386
So in this case, we can see this
image of bees swarming, an assistive

26
00:01:26,386 --> 00:01:30,960
technology user would simply have
access to this bee swarming label.

27
00:01:30,960 --> 00:01:33,800
The checklist provides a list
of recommendations for

28
00:01:33,800 --> 00:01:37,410
how to create visible and
non-visible labels.

29
00:01:37,410 --> 00:01:39,350
The easiest is this one.

30
00:01:39,350 --> 00:01:41,780
Form buttons have a descriptive value.

31
00:01:41,780 --> 00:01:43,550
A button typically has
some text content,

32
00:01:43,550 --> 00:01:46,850
and that acts as the button's
text alternative.

33
00:01:46,850 --> 00:01:51,530
Since this text is visible to both sided
users and technology, we're lucky,

34
00:01:51,530 --> 00:01:54,390
because we don't need to do any more
work to create a good experience

35
00:01:54,390 --> 00:01:56,230
versus to technology uses.

36
00:01:56,230 --> 00:01:58,110
So that's an easy one to check off.

37
00:01:58,110 --> 00:02:03,430
Next we need to check that form
inputs have associated text labels.

38
00:02:03,430 --> 00:02:07,390
When we create a form input like a check
box and just put some text next to it,

39
00:02:07,390 --> 00:02:10,240
we get a visual label, but
we didn't actually create

40
00:02:10,240 --> 00:02:14,210
a programmatically accessible label for
the element we're trying to label.

41
00:02:14,210 --> 00:02:17,140
Also, we don't get the nice behavior
where we can click on the label to total

42
00:02:17,140 --> 00:02:18,460
the check box.

43
00:02:18,460 --> 00:02:21,120
We can fix this by
using a label element.

44
00:02:21,120 --> 00:02:24,830
We can either wrap the input element
like this, or we can use the for

45
00:02:24,830 --> 00:02:26,770
attribute on the label.

46
00:02:26,770 --> 00:02:30,860
If we do that we need to make sure
to give the input element an ID and

47
00:02:30,860 --> 00:02:34,305
use the same ID as the value of the for
attribute.

48
00:02:34,305 --> 00:02:37,275
That creates an association
between the label element and

49
00:02:37,275 --> 00:02:40,255
the input element,
whichever these two methods to use,

50
00:02:40,255 --> 00:02:43,625
we will get an accessible label for
the check box, and

51
00:02:43,625 --> 00:02:45,755
we'll be able to total the check
box by clicking the label.
