1
00:00:00,130 --> 00:00:04,300
There are a few shortcomings in
Diffie-Hellman key exchange algorithm.

2
00:00:04,300 --> 00:00:09,030
First, suppose that Alice tells
Bob to use Diffie-Helman.

3
00:00:09,030 --> 00:00:13,580
The first thing Bob has to
do is to compute his YB.

4
00:00:13,580 --> 00:00:18,840
And this computation involves
exponentiation, which is very expensive.

5
00:00:18,840 --> 00:00:24,840
Therefore, if Alice is a malicious
attacker and Bob is a server, then Alice

6
00:00:24,840 --> 00:00:29,180
can request multiple Diffie-Hellman
sessions with Bob at the same time.

7
00:00:29,180 --> 00:00:35,350
And this would cause Bob to spend a lot
of CPU cycles on exponentiations,

8
00:00:35,350 --> 00:00:38,530
and this can then result
in denial of service.

9
00:00:38,530 --> 00:00:42,060
Second, Diffie-Hellman is only for
key exchange.

10
00:00:42,060 --> 00:00:44,250
It itself does not offer encryption.

11
00:00:44,250 --> 00:00:50,470
And the Diffie-Hellman algorithm does
not authenticate either Alice or Bob.

12
00:00:50,470 --> 00:00:53,272
That is, there's no authentication and

13
00:00:53,272 --> 00:00:56,560
it cannot provide digital
signatures like RSA.
