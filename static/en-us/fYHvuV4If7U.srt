1
00:00:00,330 --> 00:00:02,160
It is time to wire up the buttons.

2
00:00:02,160 --> 00:00:04,360
This will allow us to start
the audio playback and

3
00:00:04,360 --> 00:00:06,770
change the state of the buttons.

4
00:00:06,770 --> 00:00:11,118
Remember that when reaching from code
to UI element we'll use IBOutlets.

5
00:00:11,118 --> 00:00:15,021
And from UI element to call our
code we'll use an IBAction.

6
00:00:15,021 --> 00:00:16,590
We're going to start with IBOutlets.

7
00:00:17,740 --> 00:00:20,930
Instead of dragging each button and
using the assistant editor,

8
00:00:20,930 --> 00:00:23,482
an easier way is to write out
the IBOutlets in code and

9
00:00:23,482 --> 00:00:26,580
then just connect them
via Interface Builder.

10
00:00:26,580 --> 00:00:29,107
Open the PlaySoundsViewController.swift
file and

11
00:00:29,107 --> 00:00:31,360
add the following lines
here inside the class.

12
00:00:32,740 --> 00:00:37,600
These are the IBOutlets for the six
playback buttons and the stop button.

13
00:00:37,600 --> 00:00:39,628
Now we just need to
connect these IBOutlets.

14
00:00:39,628 --> 00:00:45,030
Open the Main.storyboard file and select
the play sounds view controller scene.

15
00:00:45,030 --> 00:00:49,110
Make sure the document outline is open
and that you can see all the buttons.

16
00:00:49,110 --> 00:00:52,963
With the Ctrl key held down, drag from
the Play Sounds View Controller down to

17
00:00:52,963 --> 00:00:56,710
the SnailButton and
select the SnailButton as the outlet.

18
00:00:56,710 --> 00:01:00,580
This has connected the ID outlet
named SnailButton to the actual snail

19
00:01:00,580 --> 00:01:01,110
UI button.

20
00:01:02,170 --> 00:01:04,197
Let's do the same for the other buttons.

21
00:01:04,197 --> 00:01:09,676
With the Ctrl key held down, connect
the RabbitButton, the ChipmunkButton,

22
00:01:09,676 --> 00:01:15,501
the DarthVaderButton, the EchoButton,
the ReverbButton, and the StopButton.

23
00:01:15,501 --> 00:01:19,445
Now our view controller code can reach
out to all of the UI button using these

24
00:01:19,445 --> 00:01:21,020
IBOutlets.

25
00:01:21,020 --> 00:01:24,220
The next step is to connect the buttons
to an IBAction so that when

26
00:01:24,220 --> 00:01:28,900
you press a button, the code inside
our PlaySoundsViewController will run.

27
00:01:28,900 --> 00:01:31,620
From what you've learned so far,
you might be thinking we need to create

28
00:01:31,620 --> 00:01:34,640
seven IBAction functions,
one for each button.

29
00:01:35,830 --> 00:01:38,290
There's a better way,
with less duplication of code and

30
00:01:38,290 --> 00:01:40,510
I'm going to show you that here.

31
00:01:40,510 --> 00:01:42,810
We're going to create
two IBAction functions.

32
00:01:42,810 --> 00:01:46,240
One to handle all six playback buttons
and one to handle the stop button.

33
00:01:47,570 --> 00:01:49,570
Open the PlaysSoundsViewController.swift
file.

34
00:01:50,740 --> 00:01:54,630
Underneath the IBOutlets you have just
created, add these two functions.

35
00:01:54,630 --> 00:01:57,360
We have an IBAction function
to play the sound, and

36
00:01:57,360 --> 00:01:59,580
we have an IBAction function
to stop playing sound.

37
00:02:00,690 --> 00:02:03,210
Now we just need to connect
the six playback buttons to

38
00:02:03,210 --> 00:02:05,970
the playSoundForButton IBAction.

39
00:02:05,970 --> 00:02:09,597
We also need to connect the stop button
to the stopButtonPressed IBAction.

40
00:02:10,650 --> 00:02:12,530
Let's go back to
the Main.storyboard file and

41
00:02:12,530 --> 00:02:14,550
select the Play Sounds View Controller
scene.

42
00:02:15,940 --> 00:02:19,730
For this step, it helps to have all the
buttons visible in the document outline.

43
00:02:19,730 --> 00:02:22,600
You may need to open the disclosure
triangles as I've done here.

44
00:02:24,000 --> 00:02:26,920
With the Ctrl key held down,
select the snail button and

45
00:02:26,920 --> 00:02:29,630
drag into
the Play Sounds View Controller.

46
00:02:29,630 --> 00:02:34,030
Select the playSoundForButton
function from the pop-up.

47
00:02:34,030 --> 00:02:35,458
Let's do the same for the rabbit button.

48
00:02:35,458 --> 00:02:39,420
With the Ctrl key held down, drag to
the Play Sounds View Controller and

49
00:02:39,420 --> 00:02:41,470
select play sound for button.

50
00:02:41,470 --> 00:02:42,300
Follow these steps for

51
00:02:42,300 --> 00:02:46,560
the chipmunk button, the Darth Vader
button, echo button, and reverb button.

52
00:02:47,560 --> 00:02:50,790
All six play buttons are calling
the same IBAction function.

53
00:02:52,110 --> 00:02:56,600
For the stop button, we need connect
it to the stopButtonPressed IBAction.

54
00:02:56,600 --> 00:02:59,460
Let's run and
see if everything is wired up correctly.

55
00:02:59,460 --> 00:03:03,410
Press the run button here to start
Pitch Perfect on the iOS simulator.

56
00:03:03,410 --> 00:03:05,100
Let's just quickly record and

57
00:03:05,100 --> 00:03:09,200
stop so that we can transition to
the Play Sounds View Controller.

58
00:03:09,200 --> 00:03:11,875
If we press on the snail
playback button, we can see

59
00:03:11,875 --> 00:03:15,748
the playSoundForButton function is
getting called here in the console.

60
00:03:15,748 --> 00:03:17,488
Let's try it for the other five buttons.

61
00:03:22,008 --> 00:03:25,860
Lastly, let's check that the stop button
is wired up by pressing on it as well.

62
00:03:26,900 --> 00:03:28,010
That was a bit of work.

63
00:03:28,010 --> 00:03:31,030
But now we can reach into all of
the buttons from our view controller

64
00:03:31,030 --> 00:03:35,408
using IBOutlets and have the button
call our code using the IBActions.

65
00:03:35,408 --> 00:03:37,760
Now that our user interface is set up,

66
00:03:37,760 --> 00:03:39,610
we can start writing our
audio playback code.
