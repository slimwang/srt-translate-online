1
00:00:00,000 --> 00:00:02,000
Let's summarize what we've done so far.

2
00:00:02,000 --> 00:00:07,000
We've built up this valuation function that tells us the value of any state,

3
00:00:07,000 --> 00:00:10,000
and therefore we can choose the best action in a state.

4
00:00:10,000 --> 00:00:14,000
We started off just having terminal states and max value states.

5
00:00:14,000 --> 00:00:19,000
That's good for one-player, deterministic games,

6
00:00:19,000 --> 00:00:23,000
and we realized that that's just the same thing as searches we've seen before

7
00:00:23,000 --> 00:00:26,000
where we had A* search or depth-first search.

8
00:00:26,000 --> 00:00:31,000
Then we added in an opponent player for two-player or multiplayer games,

9
00:00:31,000 --> 00:00:35,000
which is trying to minimize rather than maximize. We saw how to do that.

10
00:00:35,000 --> 00:00:42,000
Then we optimized by saying at some point we may not be able to search the whole tree,

11
00:00:42,000 --> 00:00:46,000
so we're going to have a cutoff depth and an evaluation function.

12
00:00:46,000 --> 00:00:50,000
We recognized that that means that we're no longer perfect in terms of

13
00:00:50,000 --> 00:00:53,000
valuating the tree. We now have an estimate.

14
00:00:53,000 --> 00:00:56,000
We also tried to be more computationally effective

15
00:00:56,000 --> 00:01:00,000
by throwing in the alpha and beta parameters,

16
00:01:00,000 --> 00:01:04,000
which keep track of the best value so far for Max and Min

17
00:01:04,000 --> 00:01:08,000
and prune off branches of the tree that are outside of that range

18
00:01:08,000 --> 00:01:12,000
that are provably not part of the answer for the best value.

19
00:01:12,000 --> 00:01:15,000
We kept track of those through these bookkeeping parameters.

20
00:01:15,000 --> 00:01:19,000
Then finally we introduced stochastic games,

21
00:01:19,000 --> 00:01:23,000
in which there is an element of chance or luck or rolling of the dice.

22
00:01:23,000 --> 00:01:26,000
We realized that in order to valuate those nodes,

23
00:01:26,000 --> 00:01:30,000
we have to take the expected value rather than the minimum or the maximum value.

24
00:01:30,000 --> 00:01:34,000
Now we have a way to deal with all the popular types of games.

25
00:01:34,000 --> 00:01:41,000
The details now go into when we figure out to cut off and what's the right evaluation function.

26
00:01:41,000 --> 00:01:44,000
Those are a complex area.

27
00:01:44,000 --> 00:01:47,000
A lot of research in AI is being done in that,

28
00:01:47,000 --> 99:59:59,999
but it's being done for specific games rather than for the theory in general.
