1
00:00:00,390 --> 00:00:01,460
Jay did you get this working?

2
00:00:03,350 --> 00:00:06,160
>> No, but
I can do it right now to begin,

3
00:00:06,160 --> 00:00:08,350
I'm going to respond
with a match in the cash.

4
00:00:08,350 --> 00:00:09,890
For this request,

5
00:00:09,890 --> 00:00:12,590
I can just pass event dot request
straight into cash's dot match.

6
00:00:13,600 --> 00:00:17,440
Of course there may not be a match in
the cache for this particular request.

7
00:00:17,440 --> 00:00:20,190
In that case the promise
will resolve with undefined.

8
00:00:21,210 --> 00:00:26,180
So if the request is truthy, meaning I
got a match in the cache I'll return it.

9
00:00:27,310 --> 00:00:30,550
Otherwise I'll return a fetch to
the network for the original request.

10
00:00:30,550 --> 00:00:35,680
I can actually make this a little bit
neater by just writing as a response

11
00:00:35,680 --> 00:00:36,850
or fetch.

12
00:00:38,240 --> 00:00:40,870
With force update enabled
I can refresh the page.

13
00:00:40,870 --> 00:00:45,270
And while it doesn't really
look like much has changed.

14
00:00:45,270 --> 00:00:51,180
But if we go offline and refresh,
we get a whole lot of content still.

15
00:00:51,180 --> 00:00:54,550
We shouldn't underestimate what
we've done here, it's pretty huge.

16
00:00:54,550 --> 00:00:56,320
Here's what we've achieved.

17
00:00:56,320 --> 00:00:58,630
Things haven't really changed
with a perfect connection,

18
00:00:58,630 --> 00:01:01,290
but perfect doesn't exist.

19
00:01:01,290 --> 00:01:05,330
On a slow connection, we're getting
stuff on screen a whole lot faster.

20
00:01:05,330 --> 00:01:09,660
On WiFi, we're delivering stuff rather
than a blank screen which is great.

21
00:01:09,660 --> 00:01:13,030
And offline gets content,
rather than a complete failure.

22
00:01:13,030 --> 00:01:14,660
There are things we need to fix though.

23
00:01:14,660 --> 00:01:17,950
The photos and
avatars aren't working offline.

24
00:01:17,950 --> 00:01:20,030
But also if we disable force updates.

25
00:01:20,030 --> 00:01:21,320
And go online.

26
00:01:21,320 --> 00:01:24,020
We can see this post from Sam
with the picture of the car.

27
00:01:24,020 --> 00:01:25,830
And these newer posts above it.

28
00:01:25,830 --> 00:01:27,350
But if we now go offline.

29
00:01:27,350 --> 00:01:31,360
And refresh Sam's post is
showing us the latest.

30
00:01:31,360 --> 00:01:33,350
We're not updating
the posts in the cache.

31
00:01:33,350 --> 00:01:36,440
This is because we cached
the HTML once and install time.

32
00:01:36,440 --> 00:01:39,510
So we're stuck with that set
of messages in the cache.

33
00:01:39,510 --> 00:01:42,440
Here's a to do list that gets
us from where we are now to full

34
00:01:42,440 --> 00:01:44,010
offline first success.

35
00:01:44,010 --> 00:01:47,495
We need to come out of a system for
an intrusive app updates.

36
00:01:47,495 --> 00:01:51,525
We want to get the user using the latest
version as quickly as possible.

37
00:01:51,525 --> 00:01:54,045
We should continually update
the cache of posts so

38
00:01:54,045 --> 00:01:56,935
we're not left with the same content
we originally installed with.

39
00:01:56,935 --> 00:02:00,315
Then we need to cache the photos and
cache the avatars.

40
00:02:00,315 --> 00:02:02,365
The rest of the course
is about doing this.

41
00:02:02,365 --> 00:02:04,605
Starting with unobtrusive app updates.
