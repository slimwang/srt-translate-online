1
00:00:00,640 --> 00:00:04,320
But before we get started, how do we
go about building our web application?

2
00:00:04,320 --> 00:00:07,900
For many people, the most natural way
of going about a project is to just

3
00:00:07,900 --> 00:00:11,980
dive into it head first, writing as much
code as possible before falling asleep.

4
00:00:11,980 --> 00:00:14,790
While this method feels fast,
many times we end up spending more

5
00:00:14,790 --> 00:00:19,530
time fixing bugs and examining code than
actually developing our application.

6
00:00:19,530 --> 00:00:23,150
Another option is to code in pieces,
working on one page here,

7
00:00:23,150 --> 00:00:26,280
another feature there, and
putting everything together at the end.

8
00:00:26,280 --> 00:00:29,150
While this approach is a little more
organized, we may stumble across

9
00:00:29,150 --> 00:00:32,150
several bugs when it's time to
integrate all of our code together.

10
00:00:32,150 --> 00:00:35,070
Also, we won't have a working
prototype until we're finished with

11
00:00:35,070 --> 00:00:36,430
the entire project.

12
00:00:36,430 --> 00:00:39,610
But what if we took another approach,
starting out really simple and

13
00:00:39,610 --> 00:00:41,690
layering on complexity as we go?

14
00:00:41,690 --> 00:00:44,920
Not adding a new feature until
we finish the one before.

15
00:00:44,920 --> 00:00:49,320
With each feature, we stop, test, debug,
and share to make sure we always have

16
00:00:49,320 --> 00:00:53,410
a working application even if it's
very basic in the initial stages.

17
00:00:53,410 --> 00:00:56,720
This way, anyone involved in
the creation of our product, such as

18
00:00:56,720 --> 00:01:01,270
clients, managers, and team members,
always know what the project status is,

19
00:01:01,270 --> 00:01:03,100
and what enhancements
are soon to follow.

20
00:01:03,100 --> 00:01:05,330
This process is called
iterative development.

21
00:01:05,330 --> 00:01:08,790
Iterative development allows
developers to code in an agile way.

22
00:01:08,790 --> 00:01:12,030
What agile means is that since there
is always a working prototype,

23
00:01:12,030 --> 00:01:15,100
if a client or teammate asks for
changes, as a developer,

24
00:01:15,100 --> 00:01:18,850
you can react to that feedback quickly
without tripping up the entire process.

25
00:01:18,850 --> 00:01:22,940
In this last lesson, you will plan,
organize, and execute development

26
00:01:22,940 --> 00:01:26,100
iteratively to create a final
polished restaurant menu application
