1
00:00:00,000 --> 00:00:01,506
So we'll start with the steps.

2
00:00:01,506 --> 00:00:05,483
Intuitively, we're doubling the size of the communication on every step

3
00:00:05,483 --> 00:00:07,721
until we reach the size of the input.

4
00:00:07,721 --> 00:00:12,776
This goes 1 hop, this goes 2 hops, this goes 4 hops over, and so on.

5
00:00:12,776 --> 00:00:15,892
So if that sounds to you like some sort of log, you're right.

6
00:00:15,892 --> 00:00:21,870
There are exactly log n steps to compute this scan. So our step complexity is log n.

7
00:00:21,870 --> 00:00:24,794
So now we turn to computing the amount of work that we're going to do.

8
00:00:24,794 --> 00:00:28,562
And the way we're going to do that is we're going to think about this matrix that we drew

9
00:00:28,562 --> 00:00:31,115
as a big rectangle and we're going to say,

10
00:00:31,115 --> 00:00:34,959
well, at every point in this rectangle we're doing a computation.

11
00:00:34,959 --> 00:00:38,749
Some of those computations are adds. Some of those computations are copies.

12
00:00:38,749 --> 00:00:42,771
It turns out that if you just consider the adds, the analysis ends up being the exact same.

13
00:00:42,771 --> 00:00:45,130
But we're going to say the total amount of work we do,

14
00:00:45,130 --> 00:00:48,532
the total number of computations, is simply the area of this rectangle.

15
00:00:49,496 --> 00:00:50,461
So how big is this rectangle?

16
00:00:50,461 --> 00:00:55,802
Well, in the x direction, the rectangle is n items. We're scanning an array of n items.

17
00:00:55,802 --> 00:00:59,869
We already computed what the y size of this rectangle is.

18
00:00:59,869 --> 00:01:02,651
That's log(n), the number of steps that we have.

19
00:01:02,651 --> 00:01:06,852
So the product of those 2 is going to give us the work complexity.

20
00:01:06,852 --> 00:01:10,490
And so the work complexity here is O(n log n).
