1
00:00:00,000 --> 00:00:04,703
One way to solve this is to define a variable called change and set it equal to tolerance,

2
00:00:04,703 --> 00:00:08,967
where tolerance is a parameter in our function, and you can see its default value is very, very small.

3
00:00:08,967 --> 00:00:12,010
And, as long as this change is greater than or equal to tolerance,

4
00:00:12,010 --> 00:00:13,931
we're going to initialize change to zero,

5
00:00:13,931 --> 00:00:17,621
and iterate over not quite every entry in the path.

6
00:00:17,621 --> 00:00:22,364
You can see here that we want to exclude the first and last entries.

7
00:00:22,364 --> 00:00:24,561
And so, for each entry, we're going to

8
00:00:24,561 --> 00:00:29,452
set an aux variable equal to the new path value at that entry,

9
00:00:29,452 --> 00:00:34,791
we're going to increment newpath, where these are the equations from gradient descent,

10
00:00:34,791 --> 00:00:40,317
we're going to increment change by however much this newpath has changed in this step,

11
00:00:40,317 --> 00:00:42,547
and we're going to keep doing this and doing this

12
00:00:42,547 --> 00:00:46,936
until change becomes less than tolerance, at which point

13
00:00:46,936 --> 00:00:48,568
we can return our new path.

14
00:00:48,568 --> 00:00:54,280
And we see if we run this, we go from this right-angle, jerky path

15
00:00:54,280 --> 00:00:59,199
to this nice, smooth path taking us from [0,0] to [4,4].
