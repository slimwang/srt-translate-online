1
00:00:00,510 --> 00:00:05,450
Disk I/O virtualization works quite similarly. Every VM has an I/O

2
00:00:05,450 --> 00:00:10,900
ring which is dedicated for disk I/O. This is an I/O ring associated

3
00:00:10,900 --> 00:00:16,300
with VM1. This is an I/O ring associated with VM2.

4
00:00:16,300 --> 00:00:20,910
Similar to network virtualization. Here also, the

5
00:00:20,910 --> 00:00:26,380
communication between the guest operating system and then strives

6
00:00:26,380 --> 00:00:29,180
to avoid copying altogether. No copying into xen

7
00:00:29,180 --> 00:00:33,430
because what we're doing is we are entering

8
00:00:33,430 --> 00:00:36,310
descriptors for the disk I/O that we want

9
00:00:36,310 --> 00:00:39,260
to get done with pointers. To the guest

10
00:00:39,260 --> 00:00:42,360
operating system buffers, where the data is already

11
00:00:42,360 --> 00:00:44,460
contained and the transfer has to go into

12
00:00:44,460 --> 00:00:48,400
the disk. Or a placeholder for the data

13
00:00:48,400 --> 00:00:52,060
to come into from the disk. And the philosophy

14
00:00:52,060 --> 00:00:56,200
being asynchronous I/O. Enqueuing these descriptors

15
00:00:56,200 --> 00:00:59,060
into these I/O ring by the guest

16
00:00:59,060 --> 00:01:02,560
operating system happens asynchronously with respect

17
00:01:02,560 --> 00:01:06,730
to xen enqueuing responses back for prior

18
00:01:06,730 --> 00:01:12,180
requests coming from this VM. Since xen is in charge of the actual devices,

19
00:01:12,180 --> 00:01:17,240
in particular in this case, the disk subsystem. It may reorder requests

20
00:01:17,240 --> 00:01:21,986
from competing domains in order to make the I/O throughput

21
00:01:21,986 --> 00:01:27,140
efficient. But there may be situations where such a request reordering may

22
00:01:27,140 --> 00:01:32,320
be inappropriate from the semantics of the I/O operation. And

23
00:01:32,320 --> 00:01:37,270
therefore, xen also provides a reorder barrier for guest operating

24
00:01:37,270 --> 00:01:42,320
systems to enforce that do this operations in exactly the order

25
00:01:42,320 --> 00:01:44,880
in which I've given them. Such a

26
00:01:44,880 --> 00:01:47,960
reorder barrier for instance may be necessary for

27
00:01:47,960 --> 00:01:50,830
higher level semantics such as right ahead,

28
00:01:50,830 --> 00:01:54,020
logging, and things like that. So that completes

29
00:01:54,020 --> 00:02:00,600
discussion of all the subsystems that need to be virtualized, whether it is by a

30
00:02:00,600 --> 00:02:04,980
fully virtualized environment or a para virtualized environment.

31
00:02:04,980 --> 00:02:07,980
Next, we will talk about usage and billing.
