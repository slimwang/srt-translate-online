1
00:00:00,080 --> 00:00:04,490
So we've spent all this time learning
some new concepts and writing some code.

2
00:00:04,490 --> 00:00:08,920
But we haven't been able to verify if
our provider code is correct or not.

3
00:00:08,920 --> 00:00:10,940
Now in this code check point,

4
00:00:10,940 --> 00:00:15,640
let's modify the Catalog Activity
to call the Resolver query method.

5
00:00:17,020 --> 00:00:21,020
Now let's start off by opening
the CatalogActivity in Android Studio.

6
00:00:21,020 --> 00:00:23,680
And then scroll down to
the displayDatabaseInfo method.

7
00:00:25,940 --> 00:00:27,232
So currently in this method,

8
00:00:27,232 --> 00:00:30,490
we're interacting with
the SQLite database directly.

9
00:00:30,490 --> 00:00:34,030
And we've discussed before
that this is bad practise.

10
00:00:34,030 --> 00:00:37,988
Instead, we should be contacting the
database through the ContentResolver and

11
00:00:37,988 --> 00:00:39,840
a PetProvider instead.

12
00:00:39,840 --> 00:00:42,613
So to correct this,
let me comment out a side of code, so

13
00:00:42,613 --> 00:00:45,150
that we can compare it to
the correct code later on.

14
00:00:46,640 --> 00:00:50,775
So now I'll add a new code where we'll
use the ContentProvider instead.

15
00:00:50,775 --> 00:00:54,023
And that means that we no longer
need this database call up here, so

16
00:00:54,023 --> 00:00:55,650
let's go ahead and delete that.

17
00:00:57,720 --> 00:01:00,450
So now instead of directly querying
the database, like we do here,

18
00:01:00,450 --> 00:01:05,870
I'm going to call to getContentResolver
and then query that instead.

19
00:01:07,250 --> 00:01:09,390
Now from this,
we also get back a Cursor.

20
00:01:10,490 --> 00:01:15,940
So let's set that up and
then end it with a semicolon.

21
00:01:15,940 --> 00:01:19,520
Now all that's left to do, is to fill
out the parameters of the query method.

22
00:01:19,520 --> 00:01:22,420
So the first parameter if you remember,
will be the the URI, but

23
00:01:22,420 --> 00:01:26,000
I'm going to actually leave that
blank for you to fill out later on.

24
00:01:26,000 --> 00:01:27,700
So I'll just leave it blank there.

25
00:01:29,030 --> 00:01:31,290
The next parameter will
be the projection, and

26
00:01:31,290 --> 00:01:33,670
all the other parameters
I'll set as null.

27
00:01:35,400 --> 00:01:39,270
So remember that the URI is what
defines the ContentProvider and

28
00:01:39,270 --> 00:01:41,890
the data that you're interesting
in getting a Cursor for.

29
00:01:41,890 --> 00:01:43,880
So it's really important
to get this value correct.

30
00:01:44,990 --> 00:01:47,780
Well, with those changes made,
I'm actually going to stop here and

31
00:01:47,780 --> 00:01:49,590
let you finish out the rest.

32
00:01:49,590 --> 00:01:52,490
So can you help me figure out what
URI I should be putting in here.

33
00:01:54,170 --> 00:01:56,970
So for this code check point,
I'd like you to complete these steps.

34
00:01:58,010 --> 00:02:02,324
In the CatalogActivity's
displayDatabaseInfo method, first,

35
00:02:02,324 --> 00:02:08,479
remove code that directly interacts with
the PetDbHelper and the SQLiteDatabase.

36
00:02:08,479 --> 00:02:12,310
Instead, we're going to call
the ContentResolver's query method.

37
00:02:12,310 --> 00:02:14,530
And that in turn will call
the PetProvider query method.

38
00:02:15,630 --> 00:02:18,370
And from that,
we'll receive a Cursor as a result,

39
00:02:19,390 --> 00:02:21,840
in order to use the same
production as before.

40
00:02:21,840 --> 00:02:25,590
Third, to ensure that the app
is running, compile it and

41
00:02:25,590 --> 00:02:28,190
double check that there
are no visible changes.

42
00:02:28,190 --> 00:02:31,680
Now when you're done with these steps,
fill in this blank here

43
00:02:31,680 --> 00:02:35,090
as to which URI you passed in
to the resolver's query method.
