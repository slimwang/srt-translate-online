1
00:00:00,000 --> 00:00:02,000
[Narrator] The answer is 19.

2
00:00:02,000 --> 00:00:04,000
Some of this we need to compute the key space.

3
00:00:04,000 --> 00:00:07,000
Well, the key is just a permutation of the alphabet.

4
00:00:07,000 --> 00:00:10,000
We have 26 choices for what A could map to.

5
00:00:10,000 --> 00:00:13,000
We have 25 choices for what B could map to.

6
00:00:13,000 --> 00:00:18,000
We have 24 choices for what C could map to and so on through the alphabet.

7
00:00:18,000 --> 00:00:23,000
This is equal to 26 factorial, which I won't attempt to write out but will show you in python.

8
00:00:23,000 --> 00:00:27,000
Let's define a factorial function, and we get this rather large number.

9
00:00:27,000 --> 00:00:31,000
What we need to know now is how this compares to the message space.

10
00:00:31,000 --> 00:00:34,000
The number of possible messages of length N,

11
00:00:34,000 --> 00:00:36,000
while each letter in the message can be any letter in the alphabet.

12
00:00:36,000 --> 00:00:39,000
That's just 26 to the N.

13
00:00:39,000 --> 00:00:45,000
We're going to find the first number N, where 26 to the N exceeds factorial 26,

14
00:00:45,000 --> 00:00:48,000
and we get 19, and we can confirm that.

15
00:00:48,000 --> 00:00:53,000
That 26 to the N is indeed greater than factorial of 26;

16
00:00:53,000 --> 99:59:59,999
26 to the 18 is less than it though.
