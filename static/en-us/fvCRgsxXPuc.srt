1
00:00:00,012 --> 00:00:04,451
Now there's one more error in this code, but it's tricky to catch and it's

2
00:00:04,463 --> 00:00:09,523
tricky because, the JavaScript engine of most browsers won't catch it either.

3
00:00:09,595 --> 00:00:13,485
Let's take a look at that for a second. Now, if you go back up to the top here,

4
00:00:13,588 --> 00:00:18,297
you might notice that there's no semi-colon at the end of this ent.update

5
00:00:18,309 --> 00:00:23,259
statement. Technically, JavaScript requires semi-colons here, but the

6
00:00:23,271 --> 00:00:28,271
javascript engines in most browsers will actually fix this for you.

7
00:00:28,382 --> 00:00:32,839
That is, JavaScript is designed so that when it encounters an error, it will

8
00:00:32,851 --> 00:00:38,098
automatically insert a semicolon in an attempt to fix that error.

9
00:00:38,209 --> 00:00:43,040
In this case, it would fix it just fine: the JavaScript engine would continue executing your

10
00:00:43,052 --> 00:00:47,185
code as if nothing had happened. Don't rely on this though, this can get you

11
00:00:47,197 --> 00:00:51,390
into problems, for example: this is a single line if statement. Let's say we

12
00:00:51,402 --> 00:00:55,340
didn't bother with these braces here, and now let's say there's an error

13
00:00:55,352 --> 00:00:59,885
somewhere in this code so that the JavaScript engine automatically inserted a

14
00:00:59,897 --> 00:01:04,315
semicolon. Well, if it inserted a semicolon right here, then this would be

15
00:01:04,327 --> 00:01:08,980
interpreted as an empty if block, so this statement below would actually not be

16
00:01:08,992 --> 00:01:13,410
part of the if statement, and would get called all the time, which probably

17
00:01:13,422 --> 00:01:17,515
isn't what you want to happen. Be careful about this, make sure

18
00:01:17,527 --> 00:01:20,619
to add semicolons at the end of your statements.
