1
00:00:00,370 --> 00:00:01,898
To start off, I went ahead and

2
00:00:01,898 --> 00:00:04,538
created all the variables that I knew I would need.

3
00:00:04,538 --> 00:00:10,011
I needed family1, family2, bruce, madison, and hunter.

4
00:00:10,011 --> 00:00:14,354
For family2, bruce, madison and hunter, I went ahead and

5
00:00:14,354 --> 00:00:19,120
passed in a string of an HTML element to the jQuery object.

6
00:00:19,120 --> 00:00:20,990
This creates a new DOM element.

7
00:00:20,990 --> 00:00:25,620
I made sure to include these h1, h2 and h3 tags so

8
00:00:25,620 --> 00:00:27,810
I would know what I was looking at when I saw the page.

9
00:00:28,970 --> 00:00:34,130
After that, it was a simple matter of inserting family2 after family1,

10
00:00:34,130 --> 00:00:38,820
appending bruce to family2, and then madison and hunter to bruce.

11
00:00:38,820 --> 00:00:42,180
But I want you to take a look at the syntax of .insertAfter because it's

12
00:00:42,180 --> 00:00:44,330
a little different than what we've seen before with jQuery.

13
00:00:45,490 --> 00:00:51,130
insertAfter acts on some DOM element and then inserts it after the target.

14
00:00:52,400 --> 00:00:55,325
I also want you to notice that we could have used this command called

15
00:00:55,325 --> 00:00:56,040
.after instead.

16
00:00:57,090 --> 00:01:00,060
.after follows more normal jQuery syntax.

17
00:01:00,060 --> 00:01:04,160
It acts on a selector and then adds some content after it.

18
00:01:04,160 --> 00:01:04,849
We can go ahead and

19
00:01:04,849 --> 00:01:08,770
check our work by looking at the resulting page, which looks pretty good.

20
00:01:10,280 --> 00:01:13,080
And we can open up DevTools to make sure that the DOM is

21
00:01:13,080 --> 00:01:14,370
the way that we'd expect it to look
