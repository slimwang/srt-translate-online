1
00:00:00,000 --> 00:00:05,000
Here we're given some code, and we have to fill in the blanks such that if we execute this code

2
00:00:05,000 --> 00:00:09,000
and print the list "p" we get the output [1, 2, 3].

3
00:00:09,000 --> 00:00:15,000
We have to find the initial values of p, and then we update each entry in p once and only once.

4
00:00:15,000 --> 00:00:19,000
Although this says p[0] and this says p[0] and this says p[0],

5
00:00:19,000 --> 00:00:23,000
this p[0] is actually a different value than these 3.

6
00:00:23,000 --> 00:00:25,000
It'll help to think through it if we actually label.

7
00:00:25,000 --> 00:00:33,000
We'll say this is the first one, the second, first, second,

8
00:00:33,000 --> 00:00:36,000
and we know based on the final values that this equation

9
00:00:36,000 --> 00:00:42,000
equals 1, this one equals 2, and this one equals 3.

10
00:00:42,000 --> 00:00:46,000
Let's do a little algebra. I'm going to re-write these on the side to make it easier to read.

11
00:00:46,000 --> 00:00:48,000
With just this equation, there's nothing we can do.

12
00:00:48,000 --> 00:00:53,000
All we know is that the the initial values of p[0] and p[1] have to add to 1.

13
00:00:53,000 --> 00:00:55,000
We can't get anymore specific than that.

14
00:00:55,000 --> 00:00:58,000
Unlike the first equation, we can actually simplify this a little more.

15
00:00:58,000 --> 00:01:02,000
Remember that we know the final values of each entry.

16
00:01:02,000 --> 00:01:09,000
We can actually simplify this to just say 1 plus p[2] equals 2.

17
00:01:09,000 --> 00:01:14,000
With a little algebra we know that p[2] equals 1.

18
00:01:14,000 --> 00:01:20,000
In our last equation, we can just quickly glance at it and see that the final value of p[0]

19
00:01:20,000 --> 00:01:23,000
plus the final value of p[1] equals 3.

20
00:01:23,000 --> 00:01:28,000
Well, we're given that the final values are 1 and 2, so all we're saying is 1 plus 2 equals 3,

21
00:01:28,000 --> 00:01:31,000
which doesn't help us very much. What did we learn?

22
00:01:31,000 --> 00:01:34,000
We know the last value has to be 1,

23
00:01:34,000 --> 00:01:37,000
and we know the first and the second values have to add up to 1.

24
00:01:37,000 --> 00:01:41,000
We can't do anything from here. This is all the information we have.

25
00:01:41,000 --> 00:01:47,000
As long as we satisfy those 2 constraints--this entry plus this entry equals 1--

26
00:01:47,000 --> 00:01:49,000
then we'll get the correct answer.

27
00:01:49,000 --> 00:01:52,000
Two sample solutions would be [1, 0, 1], and an equally valid one is [-99, 100, 1].
