1
00:00:00,025 --> 00:00:03,340
To explain how we can actually keep this
from getting out of hand if it doesn't

2
00:00:03,340 --> 00:00:06,000
need to be, we're going to
look at one special operation.

3
00:00:06,000 --> 00:00:07,680
And let me draw
a picture of it first and

4
00:00:07,680 --> 00:00:09,130
then we'll talk about
it more mathematically.

5
00:00:09,130 --> 00:00:11,789
All right, so do you [LAUGH]
do you see what I drew here?

6
00:00:11,789 --> 00:00:12,719
>> A web.

7
00:00:12,719 --> 00:00:14,660
>> [LAUGH] Yeah,
it doesn't look so great, does it?

8
00:00:14,660 --> 00:00:19,030
So this is intended to be a piecewise
linear convex function, so

9
00:00:19,030 --> 00:00:20,820
basically a value function.

10
00:00:20,820 --> 00:00:25,570
And remember that what we end up doing
is over belief space, that's the black

11
00:00:25,570 --> 00:00:29,340
line here, we're going to be taking
the max over all these linear functions.

12
00:00:29,340 --> 00:00:31,640
So we get this upper surface.

13
00:00:31,640 --> 00:00:34,400
>> Wait, I see, you can get rid of
any of the vectors that don't ever

14
00:00:34,400 --> 00:00:36,320
participate in the max
because they don't matter.

15
00:00:36,320 --> 00:00:39,250
>> Yeah, and so that's going to keep
our vector sets potentially from

16
00:00:39,250 --> 00:00:40,420
blowing up if they don't need to.

17
00:00:40,420 --> 00:00:44,820
So in this particular case I drew, what,
one, two, three, four, five vectors.

18
00:00:44,820 --> 00:00:47,310
But only three of them are really
needed to represent the function.

19
00:00:47,310 --> 00:00:50,050
This one's not needed and
this one is not needed.

20
00:00:50,050 --> 00:00:54,540
So we can define a computational
operation, that we call purge,

21
00:00:54,540 --> 00:00:58,470
that takes a bag of vectors and
shrinks it down,

22
00:00:58,470 --> 00:01:02,210
purges out any vectors that
aren't really needed to represent

23
00:01:02,210 --> 00:01:04,540
the upper surface,
the piecewise linear convex function.

24
00:01:04,540 --> 00:01:06,780
>> Wait, how computationally
complicated is it to do that?

25
00:01:06,780 --> 00:01:07,700
>> That's a good question.

26
00:01:07,700 --> 00:01:08,480
>> Thank you.

27
00:01:08,480 --> 00:01:11,335
>> [LAUGH] So
how computationally complicated is it?

28
00:01:11,335 --> 00:01:13,112
>> It's at least linear.

29
00:01:13,112 --> 00:01:14,494
>> It's at least linear, yeah, and so

30
00:01:14,494 --> 00:01:16,107
there's some quick
tests that you can do.

31
00:01:16,107 --> 00:01:18,740
So let's look at this vector first,
this vector number one here.

32
00:01:18,740 --> 00:01:21,920
If you look, what you can see
is that over belief space,

33
00:01:21,920 --> 00:01:25,540
this 01 zone here,
there's another vector,

34
00:01:25,540 --> 00:01:29,970
specifically this one, call it
vector 2 that always dominates it.

35
00:01:29,970 --> 00:01:32,480
It is always the case
that you can do better

36
00:01:32,480 --> 00:01:34,870
by taking vector 2 instead of vector 1.

37
00:01:34,870 --> 00:01:37,240
So if there's a vector that is
dominated by another vector,

38
00:01:37,240 --> 00:01:38,500
you could totally throw it out.

39
00:01:38,500 --> 00:01:40,551
>> But you ought to be able to
figure out by doing something cute,

40
00:01:40,551 --> 00:01:42,447
like multiplying them together or
taking their cosine or

41
00:01:42,447 --> 00:01:45,066
their angle, there's something you ought
to be able to do to figure that out.

42
00:01:45,066 --> 00:01:48,300
>> Actually all you have
to do is check the corners.

43
00:01:48,300 --> 00:01:50,970
>> If it's bigger on both 0 and 1, that
must be bigger the whole way through.

44
00:01:50,970 --> 00:01:54,743
>> Well, in particular,
let's say we have two vectors like this,

45
00:01:54,743 --> 00:01:59,650
with components alpha 1, alpha 2,
alpha 3, and this is this vector.

46
00:01:59,650 --> 00:02:02,737
And the other vector's represented
by alpha 1 prime, alpha 2 prime,

47
00:02:02,737 --> 00:02:04,010
alpha 3 prime.

48
00:02:04,010 --> 00:02:07,250
If it's the case that alpha 1 is
bigger than alpha 1 prime, and

49
00:02:07,250 --> 00:02:09,139
alpha 2 is bigger than alpha 2 prime,
and

50
00:02:09,139 --> 00:02:13,230
alpha 3 is bigger than alpha 3 prime,
then this vector is not needed, right.

51
00:02:13,230 --> 00:02:14,810
No matter what belief
state you stick in,

52
00:02:14,810 --> 00:02:18,650
you're going to get a higher value out
by using this vector than that one.

53
00:02:18,650 --> 00:02:20,920
>> Does it have to be strictly
dominated, or can it just be dominated?

54
00:02:20,920 --> 00:02:24,250
So, if one is greater than or
equal to the other,

55
00:02:24,250 --> 00:02:26,710
you can get rid of the one that
is less than or equal to, right?

56
00:02:26,710 --> 00:02:28,180
>> Yes.
>> All right, that's neat.

57
00:02:28,180 --> 00:02:31,605
>> Yeah, there's some subtleties
to doing this consistently.

58
00:02:31,605 --> 00:02:32,769
In my dissertation,

59
00:02:32,769 --> 00:02:36,521
I talk about how you can use a
lexicographic ordering of the vectors to

60
00:02:36,521 --> 00:02:41,330
make sure that you only keep things that
really are going to be needed someplace.

61
00:02:41,330 --> 00:02:44,007
But that is a subtlety that I don't
think is very important for this.

62
00:02:44,007 --> 00:02:46,984
This dominated check is actually really
easy to do and it's very fast, but

63
00:02:46,984 --> 00:02:49,440
unfortunately, it's not sufficient.

64
00:02:49,440 --> 00:02:52,530
So let's look at this vector,
we'll call it number 3.

65
00:02:52,530 --> 00:02:56,970
This one is better than
each of the other vectors,

66
00:02:56,970 --> 00:02:59,060
at some point along the way, but

67
00:02:59,060 --> 00:03:03,600
the union of the other vector, the union
of these three vectors dominates it.

68
00:03:03,600 --> 00:03:06,186
So showing that is actually
considerably more difficult.

69
00:03:06,186 --> 00:03:10,380
Knowing that 3 doesn't matter,
isn't needed, because over

70
00:03:10,380 --> 00:03:14,430
here it's dominated by this vector, over
here it's dominated by this vector, and

71
00:03:14,430 --> 00:03:15,940
over here it's dominated by that vector.

72
00:03:15,940 --> 00:03:17,115
>> Wait, what you said isn't true.

73
00:03:17,115 --> 00:03:21,490
3 is dominated by the one that first
does the max all the way through.

74
00:03:21,490 --> 00:03:22,510
>> You mean this one, 4?

75
00:03:22,510 --> 00:03:24,428
>> Yeah.
>> Yes, that is a good point.

76
00:03:24,428 --> 00:03:27,370
>> [LAUGH]
>> All right, that sounds like a quiz.

77
00:03:27,370 --> 00:03:27,870
>> Okay.
