1
00:00:00,560 --> 00:00:06,840
Also goes on to identify four levels of protection. This is of course

2
00:00:06,840 --> 00:00:10,060
unprotected systems, so an unprotected system is

3
00:00:10,060 --> 00:00:12,680
where there is no level of protection.

4
00:00:12,680 --> 00:00:18,925
An example would be the early operating system for the personal computer, called

5
00:00:18,925 --> 00:00:26,290
MS-DOS. And it had hooks, in the system for preventing mistakes by the user.

6
00:00:26,290 --> 00:00:29,010
But there was no real protection. So mistake

7
00:00:29,010 --> 00:00:31,950
prevention is not the same as securing a

8
00:00:31,950 --> 00:00:35,180
system. That's important to see the distinction between

9
00:00:35,180 --> 00:00:39,230
mistake prevention and a secure system. Now, let's

10
00:00:39,230 --> 00:00:42,630
talk about the four levels of protection that,

11
00:00:42,630 --> 00:00:45,720
salts are identified in this classic paper. The

12
00:00:45,720 --> 00:00:48,280
first level is what he calls all or

13
00:00:48,280 --> 00:00:51,680
nothing. An example of a system that implemented

14
00:00:51,680 --> 00:00:57,130
that would be IBM's VM-370. And most of the time-sharing systems

15
00:00:59,330 --> 00:01:00,830
of the 60s and the 70s, they had

16
00:01:00,830 --> 00:01:06,010
this all-or-nothing property. For example, in the VM-370,

17
00:01:06,010 --> 00:01:08,980
Each user was given the illusion as though

18
00:01:08,980 --> 00:01:11,220
they have their own personal system. That's why it's

19
00:01:11,220 --> 00:01:13,530
called a virtual machine and the only way

20
00:01:13,530 --> 00:01:16,760
they can interact with one another is by explicitly

21
00:01:16,760 --> 00:01:19,390
doing I/O from one virtual machine to another

22
00:01:19,390 --> 00:01:24,270
virtual machine. That's the All-or-Nothing Property that VM-370 had.

23
00:01:24,270 --> 00:01:26,820
The second level of protection is what results

24
00:01:26,820 --> 00:01:30,580
are called controlled sharing, that is for example

25
00:01:30,580 --> 00:01:35,470
having access lists associated with files, so that

26
00:01:35,470 --> 00:01:38,250
an individual, if I create a file, I

27
00:01:38,250 --> 00:01:44,980
could say my file can be shared by My students, and here are the names of

28
00:01:44,980 --> 00:01:47,400
the students that have access to their file.

29
00:01:47,400 --> 00:01:49,970
So that's an access list that you can associate

30
00:01:49,970 --> 00:01:55,150
with information that you create and give to the system for safekeeping. That's

31
00:01:55,150 --> 00:01:58,190
controlled sharing. Another level of protection

32
00:01:58,190 --> 00:02:03,060
is what's also called user-programmed sharing controls.

33
00:02:03,060 --> 00:02:09,210
Now this would be facilities similar to what you find in Unix file system today,

34
00:02:09,210 --> 00:02:15,130
for instance, such as being able to associate different access rights for

35
00:02:15,130 --> 00:02:19,360
files for different groups of users. In unix, for

36
00:02:19,360 --> 00:02:22,920
instance, there are levels of protection that you can associate

37
00:02:22,920 --> 00:02:25,170
with a particular file that you created. What is

38
00:02:25,170 --> 00:02:27,410
the access right for the creator, the owner of the

39
00:02:27,410 --> 00:02:30,920
file? What is the access right for a group

40
00:02:30,920 --> 00:02:35,350
that is defined and what is the access right for

41
00:02:35,350 --> 00:02:36,930
the rest of the world? So there are three

42
00:02:36,930 --> 00:02:40,590
levels of, protection that you can associate of the file,

43
00:02:40,590 --> 00:02:42,200
and that's an example of user

44
00:02:42,200 --> 00:02:46,040
program sharing controls. Another level of protection

45
00:02:46,040 --> 00:02:53,090
is having user defined strings on information. For instance, in the military it

46
00:02:53,090 --> 00:02:59,860
is often common to have physical files labeled with top secret. That has

47
00:02:59,860 --> 00:03:06,340
to be opened by only some privileged set of users. Similarly, you can associate

48
00:03:06,340 --> 00:03:09,820
such strings on information that you create and

49
00:03:09,820 --> 00:03:12,370
store with the system. There's four levels of

50
00:03:12,370 --> 00:03:15,560
protection that I've identified here are not cast

51
00:03:15,560 --> 00:03:18,730
in concrete, because as the system evolves, as the

52
00:03:18,730 --> 00:03:21,000
user community evolves, You need to be able

53
00:03:21,000 --> 00:03:24,280
to deal with the dynamics of use of this

54
00:03:24,280 --> 00:03:27,670
information, use of the system. So that is

55
00:03:27,670 --> 00:03:31,880
another issue which you can call as a cross-cutting

56
00:03:31,880 --> 00:03:35,440
issue with respect to these levels of protection.

57
00:03:35,440 --> 00:03:38,420
For example, how do I change the permissions

58
00:03:38,420 --> 00:03:42,420
I've given to,a particular file to a set

59
00:03:42,420 --> 00:03:45,910
of users that I've defined as a group that

60
00:03:45,910 --> 00:03:51,360
can access that file. How do I change the set of users I've included in the

61
00:03:51,360 --> 00:03:57,310
access list? What do I do to remove somebody from the access list? What do I do

62
00:03:57,310 --> 00:04:01,650
to add someone to the access list for information that I've already created? So

63
00:04:01,650 --> 00:04:06,510
all of these are issues that deal with the dynamics of use of information.
