1
00:00:00,190 --> 00:00:03,360
Okay, the next phase of our quiz. So, we've previously

2
00:00:03,360 --> 00:00:05,600
wrote this make password hash function that takes a name and

3
00:00:05,600 --> 00:00:08,910
a password and that returns a salted version of that password.

4
00:00:08,910 --> 00:00:11,970
Now we need to write the next version the next function,

5
00:00:11,970 --> 00:00:14,410
which is going to basically take a name and a password

6
00:00:14,410 --> 00:00:16,850
as if a user entered it you know, on the login

7
00:00:16,850 --> 00:00:20,320
form or something and a hash value from our database and

8
00:00:20,320 --> 00:00:25,900
returns true if they match. Now, you're going to have to modify,

9
00:00:25,900 --> 00:00:30,625
make password hash a little bit for this to work. See if you can figure out how.

10
00:00:30,625 --> 00:00:32,870
I'll, I'll show you what the test case

11
00:00:32,870 --> 00:00:36,060
should look like. You should be able to say

12
00:00:36,060 --> 00:00:41,512
h equals make_pw_hash, name and password, and then

13
00:00:41,512 --> 00:00:46,732
you should be able to say valid_pw spez, hunter2,

14
00:00:46,732 --> 00:00:50,860
h. This should print out true if you if you, if you have a valid hash. Now,

15
00:00:50,860 --> 00:00:54,440
remember, in our previous demo, to give you a little hint when I

16
00:00:54,440 --> 00:00:57,990
was running make password hash with the same inputs over and over, I was

17
00:00:57,990 --> 00:01:01,640
getting a different result every time. That's because we're making a new salt

18
00:01:01,640 --> 00:01:05,620
every time. So see if you can work around that problem. Okay. Good luck.
