1
00:00:00,490 --> 00:00:02,180
So now that we know about ord and we know

2
00:00:02,180 --> 00:00:04,880
about modulo, we're ready to define a hash function. So

3
00:00:04,880 --> 00:00:07,380
let's remember what our hash function should do. So the

4
00:00:07,380 --> 00:00:10,290
hash function takes two inputs. It takes the keyword, and it

5
00:00:10,290 --> 00:00:14,000
takes the number of buckets. And it's outputting a number

6
00:00:14,000 --> 00:00:17,612
between 0 and buckets minus 1, that gives us the

7
00:00:17,612 --> 00:00:22,310
position where that string belongs. And we've seen the function

8
00:00:22,310 --> 00:00:25,631
ord that takes a one letter string and maps that to

9
00:00:25,631 --> 00:00:28,940
a number. And we've seen the modulus operator that takes

10
00:00:28,940 --> 00:00:31,790
a number and a modulus and produces, as a result, the

11
00:00:31,790 --> 00:00:34,680
remainder that we'd get when we divide that number by

12
00:00:34,680 --> 00:00:38,060
the modulus. So now, we can use those to define a

13
00:00:38,060 --> 00:00:40,600
hash function. I'm going to start by giving you a really

14
00:00:40,600 --> 00:00:44,254
bad hash function. So let's define a procedure, and we'll call

15
00:00:44,254 --> 00:00:47,818
it bad_hash_string to make sure we remember that it's really

16
00:00:47,818 --> 00:00:50,731
bad. And it takes as inputs the keyword and the number

17
00:00:50,731 --> 00:00:54,357
of buckets. And we're going to output the bucket based

18
00:00:54,357 --> 00:00:57,543
on the first letter in the keyword. So we'll

19
00:00:57,543 --> 00:01:00,279
use ord on the first letter, and we'll use

20
00:01:00,279 --> 00:01:04,150
modulo the number of buckets. And that's our simple

21
00:01:04,150 --> 00:01:06,400
hash function. For the quiz, I want you to

22
00:01:06,400 --> 00:01:10,097
answer all the reasons why that's bad. And remember

23
00:01:10,097 --> 00:01:13,090
what bad_hash_string does is take the first letter in

24
00:01:13,090 --> 00:01:15,780
the keyword, turn it into a number using ord,

25
00:01:15,780 --> 00:01:19,870
and then find that value modulo the number of buckets.

26
00:01:19,870 --> 00:01:23,860
Here are the possible reasons, check all the reasons that apply.

27
00:01:23,860 --> 00:01:26,320
The first is it takes too long to compute. The

28
00:01:26,320 --> 00:01:30,320
second is there's at least one input cured for which bad_hash_string

29
00:01:30,320 --> 00:01:32,930
will produce an error. The third is, if the keywords

30
00:01:32,930 --> 00:01:35,840
are distributed like words in English, then some of the buckets

31
00:01:35,840 --> 00:01:38,560
will get too many words; others will get too few. And

32
00:01:38,560 --> 00:01:41,240
the fourth choice, if the number of buckets is large then

33
00:01:41,240 --> 00:01:43,660
there's some buckets that will never get any keywords.
