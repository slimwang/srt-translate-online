1
00:00:00,220 --> 00:00:03,320
Can we get an another example of
an iterative improvement problem?

2
00:00:03,319 --> 00:00:06,129
>> Sure, here's one we'll
use throughout this lesson.

3
00:00:06,129 --> 00:00:07,769
It's called N Queens.

4
00:00:07,769 --> 00:00:10,449
Basically, the puzzles
the place N queens, so

5
00:00:10,449 --> 00:00:11,899
they cannot attack each other.

6
00:00:11,900 --> 00:00:14,120
On an end by end chessboard.

7
00:00:14,119 --> 00:00:16,975
>> In other words, no queen can
be on the same horizontal row.

8
00:00:16,975 --> 00:00:20,619
Vertical column or diagonal.

9
00:00:20,620 --> 00:00:23,800
>> Okay, so
here's an example board of four queens.

10
00:00:23,800 --> 00:00:25,719
I just put down the queens randomly.

11
00:00:25,719 --> 00:00:28,859
And there are five ways that
the queens can attack each other.

12
00:00:28,859 --> 00:00:31,649
>> So, our goal is to get
the number of attacks down to zero?

13
00:00:31,649 --> 00:00:34,100
>> Yep, and we have four
dimensions in which to move.

14
00:00:34,100 --> 00:00:36,829
Specifically, we can move
each queen's in it's column.

15
00:00:36,829 --> 00:00:39,710
To minimize the number of attacks.

16
00:00:39,710 --> 00:00:42,299
>> Well, there are two queens
that have three attacks.

17
00:00:42,299 --> 00:00:45,219
It seems like a good idea
to move one of those first.

18
00:00:45,219 --> 00:00:47,699
If we move the second
queen to the top row.

19
00:00:47,700 --> 00:00:50,080
You could eliminate three
of the five attacks.

20
00:00:50,079 --> 00:00:52,479
>> And
that leaves only two attacks left.

21
00:00:52,479 --> 00:00:55,909
>> It seems like we should always start
from the queen with the most attacks.

22
00:00:55,909 --> 00:00:58,439
This reminds me of the most
constrained variable heuristic

23
00:00:58,439 --> 00:01:00,269
in constraint satisfaction problems.

24
00:01:00,270 --> 00:01:02,085
But we'll cover that
topic in the next lesson.

25
00:01:02,085 --> 00:01:02,880
>> Yep, and

26
00:01:02,880 --> 00:01:06,920
taking that approach, the next queen
we should work on is the third one.

27
00:01:06,920 --> 00:01:08,890
Which is involved in two attacks.

28
00:01:08,890 --> 00:01:10,709
If we move it to the bottom row.

29
00:01:10,709 --> 00:01:14,109
Then we will have no more attacks,
and we have solved the problem.

30
00:01:14,109 --> 00:01:16,034
>> That's surprisingly effective!

31
00:01:16,034 --> 00:01:18,109
We've solved the problem
in just two moves.

32
00:01:18,109 --> 00:01:21,060
Whereas, with simple search,
we would have had many more steps.

33
00:01:21,060 --> 00:01:24,460
>> Exactly, it is an example of
trying the stupid thing first.

34
00:01:24,459 --> 00:01:26,979
Then adding intelligence
until we solve the problem.

35
00:01:26,980 --> 00:01:29,390
However, four queens seemed too easy.

36
00:01:29,390 --> 00:01:31,579
Let's try five queens and
see if it gets harder.

