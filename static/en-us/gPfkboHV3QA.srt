1
00:00:00,170 --> 00:00:04,460
And the answer is a few milliseconds. So here's why. We have a 100 years. A year

2
00:00:04,460 --> 00:00:09,081
is roughly 365. If it is a leap year, it's one more, but we're going to have

3
00:00:09,081 --> 00:00:13,142
somewhere around 36,000 days. A modern processor can do about a billion

4
00:00:13,142 --> 00:00:17,124
instructions per second, so that's means 1 nano second per instruction. And now,

5
00:00:17,124 --> 00:00:20,675
these aren't instructions like statements in a Python program. Each statement in

6
00:00:20,675 --> 00:00:23,820
Python program probably involves several instructions for the processor. So

7
00:00:23,820 --> 00:00:27,360
we're going to estimate that for each time through this loop, we're going to

8
00:00:27,360 --> 00:00:31,152
need about a 1,000 instructions. And that's the hardest part of this to guess

9
00:00:31,152 --> 00:00:34,448
and that's a very rough number. That's going to depend on a lot of specifics

10
00:00:34,448 --> 00:00:37,986
about how we write the Python code. But it's going to be somewhere between a few

11
00:00:37,986 --> 00:00:41,690
100 and say 10,000 instructions if we do it in a sensible way. So we'll estimate

12
00:00:41,690 --> 00:00:46,958
a 1,000 instructions. So that means we need a 1,000 instructions times 36,000

13
00:00:46,958 --> 00:00:52,266
days, so we need about 36 and a half million instructions total. If we were

14
00:00:52,266 --> 00:00:55,299
executing this as a human, we'd certainly would not want to do this. But for a

15
00:00:55,299 --> 00:00:58,890
processor, they can do a billion instructions in a second, doing 36 million

16
00:00:58,890 --> 00:01:04,421
instructions is no big deal. So that's going to be about 36 million nanoseconds,

17
00:01:04,421 --> 00:01:08,685
which is 36 milliseconds, which is 0.036 seconds.
