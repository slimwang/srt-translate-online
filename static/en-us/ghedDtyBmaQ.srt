1
00:00:00,270 --> 00:00:01,970
So, now that you can log a user in and

2
00:00:01,970 --> 00:00:05,360
out of your website, let's use the
logins to protect pages that we don't

3
00:00:05,360 --> 00:00:07,950
want anyone on the internet
to be able to access.

4
00:00:07,950 --> 00:00:11,190
We can verify that a user is logged in
by checking to see if the login session

5
00:00:11,190 --> 00:00:13,310
has the username variable filled in.

6
00:00:13,310 --> 00:00:15,060
Since we populate it with each login and

7
00:00:15,060 --> 00:00:18,150
delete it upon each disconnect,
if a username is not detected for

8
00:00:18,150 --> 00:00:21,220
a given request,
let's redirect to the login page.

9
00:00:21,220 --> 00:00:24,150
Prompting a user to go ahead and
log in to continue.

10
00:00:24,150 --> 00:00:26,590
Decide which pages should be
visible to the public and

11
00:00:26,590 --> 00:00:28,530
which ones should be private for users.

12
00:00:28,530 --> 00:00:31,040
Go ahead and add this functionality
where needed in your application.

13
00:00:31,040 --> 00:00:34,000
There are different places in
the code where you can check

14
00:00:34,000 --> 00:00:35,920
to see if a user is logged in.

15
00:00:35,920 --> 00:00:38,760
But keep in mind how that
impacts the user experience.

16
00:00:38,760 --> 00:00:41,530
For example, it would be kind of
annoying to fill out a form only to

17
00:00:41,530 --> 00:00:43,890
find out that you can't submit
it because you're not logged in.
