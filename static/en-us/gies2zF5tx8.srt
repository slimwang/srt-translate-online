1
00:00:00,700 --> 00:00:04,363
Let's start by creating two new files,

2
00:00:04,363 --> 00:00:10,210
spec/AddressBookSpec.js and
src/AddressBook.js.

3
00:00:10,210 --> 00:00:14,670
We'll then need to update our
SpecRunner.html to run these two files.

4
00:00:14,670 --> 00:00:18,710
I included my source file here,
src/AddressBook.js.

5
00:00:18,710 --> 00:00:22,890
And my spec file here,
spec/AddressBookspec.

6
00:00:22,890 --> 00:00:27,400
Notice I removed the player and
song entries that were already there.

7
00:00:27,400 --> 00:00:30,750
Now, let's start to think of what
functionality would be useful for

8
00:00:30,750 --> 00:00:32,130
an address book.

9
00:00:32,130 --> 00:00:36,390
I think being able to add a contact is
a pretty useful feature, don't you?

10
00:00:36,390 --> 00:00:38,480
So, lets start writing a test for this.

11
00:00:38,480 --> 00:00:41,360
I'll describe a new suite
called Address Book, and

12
00:00:41,360 --> 00:00:46,220
within it I'll have a spec called
it should be able to add a contact.

13
00:00:46,220 --> 00:00:48,870
I think I'll take the object
ordinate approach to this problem.

14
00:00:48,870 --> 00:00:53,020
So, let's instantiate a new
AddressBook object in our spec.

15
00:00:53,020 --> 00:00:54,620
Now, to add a contact,

16
00:00:54,620 --> 00:00:59,180
I'm going to need some sort of
addContact method in my address book.

17
00:00:59,180 --> 00:01:02,070
What would I pass to addContact?

18
00:01:02,070 --> 00:01:03,800
I'm going to need some sort of object.

19
00:01:03,800 --> 00:01:08,950
So, we created a new contact object
here, and instantiated as this contact.

20
00:01:08,950 --> 00:01:10,903
And I'm just passing it in here.

21
00:01:10,903 --> 00:01:13,423
Now, I need to think of
what is a good way for

22
00:01:13,423 --> 00:01:17,349
me to test that this contact was
actually added to my address book?

23
00:01:17,349 --> 00:01:23,005
I should expect that if I were to get
the first contact in my address book,

24
00:01:23,005 --> 00:01:27,410
that this would be
the same as this contact.

25
00:01:27,410 --> 00:01:30,020
So, I wrote a test that does that.

26
00:01:30,020 --> 00:01:34,770
In doing this, I can see that I'm also
going to need to add a getContact method

27
00:01:34,770 --> 00:01:38,050
in my address book that
accepts an integer index.
