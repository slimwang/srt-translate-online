1
00:00:00,240 --> 00:00:02,560
>> Well, let's take a look. Your intuition

2
00:00:02,560 --> 00:00:04,980
may be telling you that the second rule, which

3
00:00:04,980 --> 00:00:08,400
is more specific, should be faster because well, it's

4
00:00:08,400 --> 00:00:12,040
more precise, but actually the opposite is true. The

5
00:00:12,040 --> 00:00:15,030
first rule tells us that whenever we encounter an

6
00:00:15,030 --> 00:00:18,030
h1 tag, we should set the font size to

7
00:00:18,030 --> 00:00:22,560
16 pixels. Pretty simple. The second rule is trickier.

8
00:00:22,560 --> 00:00:25,280
First, it says that we should match any paragraph

9
00:00:25,280 --> 00:00:29,040
tag, like the one we have here. But then, once we find

10
00:00:29,040 --> 00:00:32,820
the paragraph tag, we should walk up the DOM tree and only

11
00:00:32,820 --> 00:00:37,690
apply this rule if there's a div element as its parent. As

12
00:00:37,690 --> 00:00:43,420
a result, this more specific tag actually requires more work from the browser.

13
00:00:43,420 --> 00:00:46,870
>> Hm, oh wow, so the more specific rule is more

14
00:00:46,870 --> 00:00:50,550
expensive because it has to traverse more nodes in the DOM tree.

15
00:00:50,550 --> 00:00:55,207
>> That's right. Exactly. That said, before you go all crazy and rewrite all

16
00:00:55,207 --> 00:00:57,581
of your rules, measure first. Chances are

17
00:00:57,581 --> 00:01:00,720
selector matching is not your performance model link.

18
00:01:00,720 --> 00:01:02,600
>> So, I shouldn't worry about it?

19
00:01:02,600 --> 00:01:05,860
>> Well, I didn't say that. Measure first, optimize second.

20
00:01:05,860 --> 00:01:07,840
And speaking of measure, let's take a look at def tools.
