1
00:00:00,000 --> 00:00:05,000
Now that we've seen this one way, let's see this from a different perspective.

2
00:00:05,000 --> 00:00:07,000
[Brendan Eich, CTO, Mozilla] [Wes Weimer, Professor, University of Virginia]

3
00:00:07,000 --> 00:00:10,000
Let me ask you a question that's actually of personal interest and curiosity to me.

4
00:00:10,000 --> 00:00:15,000
I'm teaching in this class a number of elements of functional programming,

5
00:00:15,000 --> 00:00:21,000
list comprehensions in Python, filtering a list to retain only some required elements,

6
00:00:21,000 --> 00:00:25,000
and I noticed that in JavaScript you included the ability to create

7
00:00:25,000 --> 00:00:27,000
an anonymous function with the function keyword.

8
00:00:27,000 --> 00:00:30,000
And for students initially, that might be a little bit confusing because

9
00:00:30,000 --> 00:00:33,000
declaring a function at the top level also uses the function keyword,

10
00:00:33,000 --> 00:00:36,000
but we can get past that with the grammar.

11
00:00:36,000 --> 00:00:39,000
I'm curious, why did you think it was important to include the ability

12
00:00:39,000 --> 00:00:42,000
to have anonymous functions?

13
00:00:42,000 --> 00:00:45,000
JavaScript had to live in the shadow of Java,

14
00:00:45,000 --> 00:00:48,000
but it was its own language, and the original pitch--

15
00:00:48,000 --> 00:00:52,000
the sort of fraudulent pretense for getting me to Netscape--was to do Scheme.

16
00:00:52,000 --> 00:00:56,000
Now, I didn't have time to do Scheme, and I didn't do anything as pretty as Scheme,

17
00:00:56,000 --> 00:01:00,000
but JavaScript is a language with first class functions,

18
00:01:00,000 --> 00:01:04,000
and functions are the main building block, so it's important not simply to have

19
00:01:04,000 --> 00:01:09,000
function declarations and require you to name them and put them at a certain level

20
00:01:09,000 --> 00:01:14,000
in nesting but to allow you to express them freely as anonymous functions

21
00:01:14,000 --> 00:01:18,000
or even named function expressions, and this is incredibly popular today.

22
00:01:18,000 --> 00:01:23,000
This is used in lieu of modules and to make sort of super constructors

23
00:01:23,000 --> 00:01:26,000
and class systems in JavaScript today

24
00:01:26,000 --> 99:59:59,999
using functions and function expressions.
