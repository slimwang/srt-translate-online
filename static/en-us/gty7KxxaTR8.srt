1
00:00:00,000 --> 00:00:02,000
Here's the answer.

2
00:00:02,000 --> 00:00:04,000
The first one is equivalent.

3
00:00:04,000 --> 00:00:09,000
The reason for that is we have our code here that has "if False."

4
00:00:09,000 --> 00:00:12,000
"False" will never be true, so we'll never actually run the "break"Ã¢ÂÂ

5
00:00:12,000 --> 00:00:14,000
we'll never reach that code.

6
00:00:14,000 --> 00:00:18,000
We'll just run the statement again and we'll have the same thing that we started with.

7
00:00:18,000 --> 00:00:21,000
Every time the test is true, we execute the statement.

8
00:00:21,000 --> 00:00:24,000
The second one is not equivalent, and the reason for that is the "break" will

9
00:00:24,000 --> 00:00:26,000
stop the loop.

10
00:00:26,000 --> 00:00:29,000
If the loop would execute more than once in this version,

11
00:00:29,000 --> 00:00:32,000
and if we go through the loop twice,

12
00:00:32,000 --> 00:00:36,000
in this case we can only ever go through the statement once,

13
00:00:36,000 --> 00:00:39,000
since after we go through the statement once, we reach the "break" and then we're done.

14
00:00:39,000 --> 00:00:45,000
The third one is not equivalent, so here we're having a "while true" that will run

15
00:00:45,000 --> 00:00:48,000
forever except for we have the "break" and that would stop it.

16
00:00:48,000 --> 00:00:50,000
The problem is the test condition for the break is the same as the

17
00:00:50,000 --> 00:00:54,000
test condition for the "while," but it should really be the opposite.

18
00:00:54,000 --> 00:00:57,000
In the "while" we keep going as long as the test condition is true.

19
00:00:57,000 --> 00:01:01,000
The way I have written in the code here, if the test condition is true, we stop.

20
00:01:01,000 --> 00:01:05,000
For this to be equivalent, what we should have written instead

21
00:01:05,000 --> 00:01:10,000
would've taken the opposite of the test condition, so if we had "if" not"Ã¢ÂÂ

22
00:01:10,000 --> 00:01:14,000
which changes true to false and false to true, then the test condition,

23
00:01:14,000 --> 00:01:18,000
then the breakÃ¢ÂÂthis would be equivalent to the original loop.

24
00:01:18,000 --> 00:01:20,000
What we have is not.

25
00:01:20,000 --> 00:01:23,000
The final one is the most complicated.

26
00:01:23,000 --> 00:01:26,000
This one is actually always equivalent to the original loop.

27
00:01:26,000 --> 00:01:30,000
The reason for that is if we think through the execution, so in the

28
00:01:30,000 --> 00:01:34,000
original loop, if the test condition is true, we ask to give the statement "S,"

29
00:01:34,000 --> 00:01:35,000
and then we keep going.

30
00:01:35,000 --> 00:01:38,000
If the test condition is true the second time, we execute "S" again

31
00:01:38,000 --> 00:01:40,000
and we keep going.

32
00:01:40,000 --> 00:01:43,000
If we look at what happens hereÃ¢ÂÂwell, if the test condition is true, we

33
00:01:43,000 --> 00:01:45,000
execute "S."

34
00:01:45,000 --> 00:01:50,000
Then if the test condition is true again, we execute S and we keep going.

35
00:01:50,000 --> 00:01:52,000
That has the same behavior.

36
00:01:52,000 --> 00:01:54,000
We should trace it through the case where the test condition is

37
00:01:54,000 --> 00:01:55,000
not true.

38
00:01:55,000 --> 00:01:58,000
HereÃ¢ÂÂif the test condition was true, we execute "S."

39
00:01:58,000 --> 00:02:01,000
If it's not true the second time, then we're done with the loop

40
00:02:01,000 --> 00:02:02,000
and we continue.

41
00:02:02,000 --> 00:02:07,000
In this case if the test condition is true the first time, we'll execute "S."

42
00:02:07,000 --> 00:02:11,000
If it's not true the second time, then we would go to the "else."

43
00:02:11,000 --> 00:02:14,000
So if it's not true, we go to the "else" and then we go to the "break" and

44
00:02:14,000 --> 00:02:16,000
the "break" gets out of the loop.

45
00:02:16,000 --> 00:02:19,000
We have the same exact behavior where we executed "T" once, then

46
00:02:19,000 --> 00:02:22,000
we executed "S," and then we executed "T."

47
00:02:22,000 --> 00:02:25,000
We didn't execute "S" again, and we broke out of the loop to continue.

48
00:02:25,000 --> 00:02:28,000
So these two are equivalent and the other two are different.
