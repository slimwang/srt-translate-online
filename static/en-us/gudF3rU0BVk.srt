1
00:00:00,000 --> 00:00:03,000
So now that we have the key, we have three main things:

2
00:00:03,000 --> 00:00:07,000
we have a message in the spaces of all messages,

3
00:00:07,000 --> 00:00:10,000
we have a ciphertext in the spaces of all ciphertexts,

4
00:00:10,000 --> 00:00:15,000
and we have a key in the space of all possible keys.

5
00:00:15,000 --> 00:00:22,000
And we want our encryption function--we'll take a message and a key--

6
00:00:22,000 --> 00:00:25,000
and map that to a ciphertext, and our decryption function

7
00:00:25,000 --> 00:00:31,000
will take a ciphertext and a key and map that to a message.

8
00:00:31,000 --> 00:00:36,000
And to be correct, we need to obtain the same message after decryption,

9
00:00:36,000 --> 00:00:42,000
we need to know--for all messages and keys--we have the property--

10
00:00:42,000 --> 00:00:47,000
the decrypting--using that key, and I'm going to use the notation

11
00:00:47,000 --> 00:00:49,000
where I put the key as a subscript to the decryption function,

12
00:00:49,000 --> 00:00:53,000
instead of as an input, but that means the same thing as saying

13
00:00:53,000 --> 00:00:55,000
there are two inputs to decryption, one is the key,

14
00:00:55,000 --> 00:01:00,000
one is to input ciphertext, and the input ciphertext is the result of encrypting

15
00:01:00,000 --> 00:01:04,000
using that same key--that message--and we want to know for correctness

16
00:01:04,000 --> 00:01:11,000
that that value must always be the message that was input to the encryption function.

17
00:01:11,000 --> 00:01:13,000
Correctness, of course, is not enough.

18
00:01:13,000 --> 00:01:15,000
We also want security,

19
00:01:15,000 --> 00:01:17,000
and our security property, in an ideal sense,

20
00:01:17,000 --> 00:01:21,000
would be that the ciphertext reveals nothing at all about the key or the message.

21
00:01:21,000 --> 00:01:24,000
We're going to formalize this a little later, this unit.

22
00:01:24,000 --> 00:01:27,000
For now, let's think about that property informally,

23
00:01:27,000 --> 00:01:29,000
and what I'm going to ask you is a quiz,

24
00:01:29,000 --> 00:01:33,000
to see whether given functions satisfy our correctness property.

25
00:01:33,000 --> 00:01:37,000
So now it's time for a quiz to see that you understand the correctness property

26
00:01:37,000 --> 00:01:39,000
for a symmetric cipher.

27
00:01:39,000 --> 00:01:44,000
Which of the functions below satisfy the correctness property

28
00:01:44,000 --> 00:01:46,000
for a symmetric cipher?

29
00:01:46,000 --> 00:01:49,000
And we'll assume both the message space--the set of all possible messages--

30
00:01:49,000 --> 00:01:53,000
and the key space--the set of all possible keys--are the natural numbers,

31
00:01:53,000 --> 00:01:54,000
so the whole numbers starting from 1.

32
00:01:54,000 --> 00:01:57,000
So, each choice is a pair of functions--the encryption function,

33
00:01:57,000 --> 00:01:59,000
and the decryption function.

34
00:01:59,000 --> 00:02:03,000
For the first choice, the encryption function adds the message and the key.

35
00:02:03,000 --> 00:02:08,000
For this decryption function, we subtract from the ciphertext, the key.

36
00:02:08,000 --> 00:02:12,000
For the second choice, the encryption function is the identity.

37
00:02:12,000 --> 00:02:15,000
The decryption function is the identity on the ciphertext.

38
00:02:15,000 --> 00:02:18,000
For the third choice, I am using the modulo operator,

39
00:02:18,000 --> 00:02:22,000
x modulo y is the remainder you get when you divide x by y,

40
00:02:22,000 --> 00:02:25,000
and modulo is a very useful operation in cryptography.

41
00:02:25,000 --> 99:59:59,999
We'll see that quite a bit later on this unit, as well as in later units.
