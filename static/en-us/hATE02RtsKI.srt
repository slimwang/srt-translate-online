1
00:00:00,580 --> 00:00:04,860
Loaders provide a framework to
perform a synchronous loading of data.

2
00:00:04,860 --> 00:00:08,960
They are registered by ID with a loader
manager, which allows them to live

3
00:00:08,960 --> 00:00:13,610
beyond the life cycle of the activity or
fragment they are associated with.

4
00:00:13,610 --> 00:00:17,920
In addition to loading data, loaders
include mechanisms to monitor the source

5
00:00:17,920 --> 00:00:21,400
of their data, and deliver new
results when the contents change.

6
00:00:23,180 --> 00:00:27,050
Up till now, we've used AsyncTask
to load data from the internet and

7
00:00:27,050 --> 00:00:28,420
Sunshine.

8
00:00:28,420 --> 00:00:32,650
We typically create our AsyncTask in
the onCreate method of our activity.

9
00:00:32,650 --> 00:00:35,905
It starts a thread which
begins a background task.

10
00:00:35,905 --> 00:00:37,325
If we rotate the device, or

11
00:00:37,325 --> 00:00:40,905
do something else that requires
the activity to be restarted,

12
00:00:40,905 --> 00:00:43,995
we'll create another AsyncTask
to do the background operation.

13
00:00:45,075 --> 00:00:47,855
We'll create extra network usage, or

14
00:00:47,855 --> 00:00:51,060
file system usage as both
threads run in parallel.

15
00:00:51,060 --> 00:00:55,112
And, it'll take a longer time for
the user to see the result of the load.

16
00:00:55,112 --> 00:00:59,990
The AsyncTask Loader implements the same
functionality as Async Task, but

17
00:00:59,990 --> 00:01:02,610
because it's a loader,
it's lifecycle is different.

18
00:01:02,610 --> 00:01:06,510
With an Async Task Loader,
once we rotate the device,

19
00:01:06,510 --> 00:01:09,560
the loader manager will make sure
that the old loader is connected to

20
00:01:09,560 --> 00:01:12,518
the Async Task Loader
equivalent of on post execute.

21
00:01:12,518 --> 00:01:14,960
The onLoadFinished function.

22
00:01:14,960 --> 00:01:19,430
The loader thread keeps running in
the loadInBackground function, and

23
00:01:19,430 --> 00:01:24,100
once it finishes the activity gets
notified through onLoadFinished.

24
00:01:24,100 --> 00:01:27,250
CursorLoader is derived
from Async Task Loader but

25
00:01:27,250 --> 00:01:29,620
has an additional optimization.

26
00:01:29,620 --> 00:01:31,870
If the cursor has already
finished loading and

27
00:01:31,870 --> 00:01:34,890
load in background before
the activity restarts,

28
00:01:34,890 --> 00:01:39,080
the CursorLoader recognizes this
during the loader initialization.

29
00:01:39,080 --> 00:01:42,655
And the cursor is immediately delivered
to the UI through onLoadFinished
