1
00:00:00,260 --> 00:00:04,710
You can access the underlining NumPy
array within a Pandas data frame

2
00:00:04,710 --> 00:00:06,660
using the values property.

3
00:00:06,660 --> 00:00:09,990
But you can also create
NumPy arrays from scratch.

4
00:00:09,990 --> 00:00:12,200
There are many ways to create an array.

5
00:00:12,200 --> 00:00:17,110
Let's start with creating a one
dimensional array from known values.

6
00:00:17,110 --> 00:00:20,715
NumPy has an array function
which can convert most

7
00:00:20,715 --> 00:00:23,450
array-like objects into an n d array.

8
00:00:23,450 --> 00:00:26,730
What do we mean by nd array
is n-dimensional array.

9
00:00:26,730 --> 00:00:29,350
Let's see how this works for
Python lists.

10
00:00:29,350 --> 00:00:32,830
To start with,
we need to import the library numpy.

11
00:00:32,830 --> 00:00:36,054
And we rename it as np for
the ease of use.

12
00:00:36,054 --> 00:00:39,981
Next, we simply call
a function np.array and

13
00:00:39,981 --> 00:00:43,818
pass a list which has value [2,3,4].

14
00:00:43,818 --> 00:00:47,803
Note that this function
can take as input a list,

15
00:00:47,803 --> 00:00:50,770
a template, or other sequence.

16
00:00:50,770 --> 00:00:54,620
Check out the documentation for
the array function and nd array type for

17
00:00:54,620 --> 00:00:55,900
more information.

18
00:00:55,900 --> 00:00:56,990
Now let's see the output.

19
00:00:58,070 --> 00:01:02,310
The output you see here is not
a list but it is an array.

20
00:01:02,310 --> 00:01:04,330
Let's go ahead and create a 2D array.

21
00:01:05,379 --> 00:01:07,770
Now if you want to create a 2D array,

22
00:01:07,770 --> 00:01:12,338
we simply pass in a sequence
of sequences to this function.

23
00:01:12,338 --> 00:01:16,000
Each tuple enclosed in round parenthesis

24
00:01:16,000 --> 00:01:18,770
serves as one row in
the resulting array.

25
00:01:18,770 --> 00:01:21,630
We could also have
passed a list of lists.

26
00:01:21,630 --> 00:01:24,330
This is called sequence of sequences.

27
00:01:24,330 --> 00:01:26,310
Let's go ahead and print it.

28
00:01:26,310 --> 00:01:31,670
Here is the output and as expected
there are two rows and three columns.

29
00:01:31,670 --> 00:01:36,640
This function is mainly useful when you
have a list of sequence of values, and

30
00:01:36,640 --> 00:01:38,955
you want to convert
them into NumPy arrays.
