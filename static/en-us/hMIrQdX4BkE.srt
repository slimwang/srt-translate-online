1
00:00:00,230 --> 00:00:03,010
There are a variety of
connected component methods.

2
00:00:03,010 --> 00:00:07,400
The one that most people use is
referred to as row by row and

3
00:00:07,400 --> 00:00:09,660
it's sort of, classic algorithm and
it's simple to go through.

4
00:00:09,660 --> 00:00:12,270
And there are some efficient
speed ups that we use so,

5
00:00:12,270 --> 00:00:14,560
that you can run it quickly
in industrial systems.

6
00:00:14,560 --> 00:00:17,930
But, these days running your connecting
components is really the thing that's

7
00:00:17,930 --> 00:00:20,210
taking your time because the machines
have gotten much faster and

8
00:00:20,210 --> 00:00:23,600
the algorithm itself is pretty
straightforward row by row.

9
00:00:24,640 --> 00:00:26,930
So, let's start with a picture
that looks like this.

10
00:00:26,930 --> 00:00:29,880
Okay.
So, we've got 1s and 0s.

11
00:00:29,880 --> 00:00:31,420
And if you look carefully.

12
00:00:32,930 --> 00:00:36,596
You'll see there's really
only one object here.

13
00:00:36,596 --> 00:00:37,790
Okay?

14
00:00:37,790 --> 00:00:39,420
Those are all the 1s.

15
00:00:39,420 --> 00:00:42,590
And what we want to do is we
want to eventually determine

16
00:00:42,590 --> 00:00:45,375
that all of them should
be labeled as a 1.

17
00:00:45,375 --> 00:00:46,880
Okay, but
this system doesn't know this yet.

18
00:00:46,880 --> 00:00:50,120
All it knows is that there are 1s and
0s in the pixels.

19
00:00:50,120 --> 00:00:51,110
All right?

20
00:00:51,110 --> 00:00:52,780
So, here is the algorithm.

21
00:00:52,780 --> 00:00:59,260
We start with a variable at 0 and
what happens is we go across, okay?

22
00:00:59,260 --> 00:01:03,805
And when we find a new pixel, if it's
not connected to anything before it or

23
00:01:03,805 --> 00:01:07,845
above it, and of course there's
no above and there's no before,

24
00:01:07,845 --> 00:01:10,536
we'll increment our counter, all right?

25
00:01:10,536 --> 00:01:14,111
So we start by labeling this 1 as a 1,
and then we go forward, and

26
00:01:14,111 --> 00:01:17,622
then we're not connected, and
then we would get to here, and so

27
00:01:17,622 --> 00:01:20,369
what would that be labeled,
what comes after 1?

28
00:01:20,369 --> 00:01:22,069
2, okay.
So we label that as a 2.

29
00:01:22,069 --> 00:01:24,318
So, this is going to become a 2,
all right?

30
00:01:24,318 --> 00:01:27,520
And then, go over here and then what are
we going to get when we get to next one?

31
00:01:27,520 --> 00:01:28,710
What are we going to label that?

32
00:01:28,710 --> 00:01:30,090
3, okay?

33
00:01:30,090 --> 00:01:32,030
So, that works fine.

34
00:01:32,030 --> 00:01:35,692
The reason that this one is listed as
a 1 even though you've scanned it.

35
00:01:35,692 --> 00:01:37,240
It's, it's connected
to the one above it.

36
00:01:37,240 --> 00:01:38,980
You say, oh I'm connected so, I'm a one.

37
00:01:38,980 --> 00:01:41,770
Likewise when I get over here,
likewise when I get over here,

38
00:01:41,770 --> 00:01:43,340
it's connected to the one above it.

39
00:01:43,340 --> 00:01:46,200
So, these are all labeled as 1,
2s and 3s.

40
00:01:46,200 --> 00:01:48,940
But you see where it says here,
remember conflicts.

41
00:01:49,970 --> 00:01:50,790
All right?

42
00:01:50,790 --> 00:01:57,140
As I'm going through,
when I'm labeling this pixel, okay?

43
00:01:57,140 --> 00:01:58,585
I now have a conflict.

44
00:01:58,585 --> 00:02:01,130
because when I look behind me,
it says that I'm a 1.

45
00:02:01,130 --> 00:02:05,390
And when I look above me,
it says I'm connected to a 2.

46
00:02:05,390 --> 00:02:08,940
So what I do is, I pick one of those,
maybe the 1, but

47
00:02:08,940 --> 00:02:12,400
I remember that I've
got a conflict there.

48
00:02:12,400 --> 00:02:19,350
Likewise, I have a conflict here, and
what I learn is that 1 is the same as

49
00:02:19,350 --> 00:02:25,050
2 because it's connected there, and 1 is
the same as 3, so it's connected there.

50
00:02:25,050 --> 00:02:28,910
So, after I'm done labeling all of
these, and I've got 1s, 2s,and 3s,

51
00:02:28,910 --> 00:02:34,148
I relabel everything as a 1 because
all the 2s get relabeled as 1.

52
00:02:34,148 --> 00:02:36,150
All the 3s get relabeled as 1, and

53
00:02:36,150 --> 00:02:39,980
that way the system knows that there's
exactly one object and all the pixels

54
00:02:39,980 --> 00:02:43,790
with the 1s are the pixels from that
object, and it works just like that.

55
00:02:43,790 --> 00:02:45,070
It works great.

56
00:02:45,070 --> 00:02:48,620
Here's an example from that CT
cross-section I was showing you before,

57
00:02:48,620 --> 00:02:52,350
and you can see that after some various
other operations that we'll talk about

58
00:02:52,350 --> 00:02:56,640
in a minute, it's a, it's able to
label these different elements.

59
00:02:56,640 --> 00:02:59,390
Okay.
And what's nice is those, those elements

60
00:02:59,390 --> 00:03:03,470
have semantic meaning to the radiologist
who's, who's looking at these things.

61
00:03:03,470 --> 00:03:07,360
You know, it's also useful for
if you have some clustering algorithms.

62
00:03:07,360 --> 00:03:10,330
So here you are seeing,
just some clustering pixels, in a,

63
00:03:10,330 --> 00:03:12,850
in a, in a beach sce, well,
it's no much of a beach, is it.

64
00:03:12,850 --> 00:03:13,960
No.
Yuck.

65
00:03:13,960 --> 00:03:15,340
Okay, it must be the Northwest.

66
00:03:15,340 --> 00:03:16,600
No sand, just muck.

67
00:03:16,600 --> 00:03:17,260
Sorry, Seattle.

68
00:03:17,260 --> 00:03:19,987
And you see they're labeling
these different things

69
00:03:19,987 --> 00:03:21,330
using connected components.
