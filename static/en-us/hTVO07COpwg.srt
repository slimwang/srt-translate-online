1
00:00:00,230 --> 00:00:03,270
Let's be a little more formal
about the nQueen's problem.

2
00:00:03,270 --> 00:00:04,339
Given a current board,

3
00:00:04,339 --> 00:00:08,559
we want to make the one move that can
most greatly improve the situation.

4
00:00:08,560 --> 00:00:12,169
In fact, to simplify the discussion,
let's constrain ourselves to moving

5
00:00:12,169 --> 00:00:14,849
a single Queen up or
down within its column.

6
00:00:14,849 --> 00:00:18,719
Then we keep iterating until we reach
our goal of having zero attacks.

7
00:00:18,719 --> 00:00:21,829
>> Given this board which
currently has 17 attacking pairs,

8
00:00:21,829 --> 00:00:25,669
the best we can do with a single move is
to get the number of attacks down to 12.

9
00:00:25,670 --> 00:00:26,630
For example,

10
00:00:26,629 --> 00:00:30,619
if you move this queen here, you
reduce the number of conflicts to 12.

11
00:00:30,620 --> 00:00:31,620
>> That's right.

12
00:00:31,620 --> 00:00:33,870
But how do we figure
out which one to take?

13
00:00:33,869 --> 00:00:35,640
Do we just select it randomly?

14
00:00:35,640 --> 00:00:37,329
>> Seemed as good an idea as any.

15
00:00:37,329 --> 00:00:39,201
>> Okay, so we can continue to iterate.

16
00:00:39,201 --> 00:00:41,960
Hopefully reducing the number
of attacks with each move.

17
00:00:41,960 --> 00:00:46,039
But what if we get into a situation
where no move decreases our number of

18
00:00:46,039 --> 00:00:46,670
attacks?

