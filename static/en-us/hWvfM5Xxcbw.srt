1
00:00:00,200 --> 00:00:04,040
Recall that the Scale problem arises because we have tens of thousands of

2
00:00:04,040 --> 00:00:12,360
servers on a flat layer two Topology, where all of the servers have a Topology

3
00:00:12,360 --> 00:00:16,280
independent MAC or hardware address and thus,

4
00:00:16,280 --> 00:00:18,780
in the default case. Every switch in

5
00:00:18,780 --> 00:00:21,940
the topology has to store affording table

6
00:00:21,940 --> 00:00:25,510
entry for every single MAC address. One solution

7
00:00:25,510 --> 00:00:31,450
is to introduce what are called pods and assign sudo MAC addresses to each

8
00:00:31,450 --> 00:00:35,620
server corresponding to the pod in which

9
00:00:35,620 --> 00:00:38,470
they're location in the Topology. So in addition

10
00:00:38,470 --> 00:00:43,630
to having a real MAC address. Each server has what's known as a pseudo-MAC

11
00:00:43,630 --> 00:00:48,200
address, as shown in pink. Thus, switches

12
00:00:48,200 --> 00:00:50,640
in the Data Centre Topology no longer need

13
00:00:50,640 --> 00:00:53,730
to maintain forwarding table entries for every

14
00:00:53,730 --> 00:00:56,880
host. They only need to maintain entries

15
00:00:56,880 --> 00:01:03,490
for reaching other pods in the Topology. Once a frame answers a pod, the switch

16
00:01:03,490 --> 00:01:10,030
then of course has entries for all of the servers inside that pod but they don't

17
00:01:10,030 --> 00:01:16,110
need to maintain entries for the MAC addresses for servers outside of each pod.

18
00:01:16,110 --> 00:01:19,390
For example, the switch in pod one only

19
00:01:19,390 --> 00:01:23,760
needs to maintain entries for these two servers

20
00:01:23,760 --> 00:01:25,960
with MAC addresses A and B, but it

21
00:01:25,960 --> 00:01:29,390
doesn't need to maintain independent entries with servers

22
00:01:29,390 --> 00:01:35,050
with MAC addresses C and D. It only needs to maintain an entry for how to reach

23
00:01:35,050 --> 00:01:41,630
pod 2. Likewise for pods 2 and pods 3. Now, in such a Data Centre Topology,

24
00:01:41,630 --> 00:01:45,570
of course, these hosts are unmodified. So, their

25
00:01:45,570 --> 00:01:48,770
still going to respond to things like ARP queries,

26
00:01:48,770 --> 00:01:53,460
with their real MAC addresses, so we need a way of dealing with that, as well as

27
00:01:53,460 --> 00:01:55,680
a way of Mapping pseudo MAC addresses to

28
00:01:55,680 --> 00:01:59,910
real MAC addresses. The solution is as follows. When

29
00:01:59,910 --> 00:02:03,040
a host such as server A issues an

30
00:02:03,040 --> 00:02:06,620
ARP query, that query is intercepted by the switch,

31
00:02:06,620 --> 00:02:12,670
but instead of flooding that query, the switch intercepts the query and forwards

32
00:02:12,670 --> 00:02:18,922
it to an entity called the Fabric Manager. The Fabric Manager then responds with

33
00:02:18,922 --> 00:02:26,520
the pseudo-MAC corresponding to that IP address. Host A then sends the frame

34
00:02:26,520 --> 00:02:29,500
with the destination pseudo-MAC address and switches

35
00:02:29,500 --> 00:02:32,420
in the Topology can forward that frame

36
00:02:32,420 --> 00:02:36,570
to the appropriate pod. Corresponding to the pseudo

37
00:02:36,570 --> 00:02:40,630
MAC address of the destination server. Once the

38
00:02:40,630 --> 00:02:44,110
frame reaches the destination pod, let's say in

39
00:02:44,110 --> 00:02:46,960
this case pod 3, the switch at the

40
00:02:46,960 --> 00:02:51,500
top of that pod can then Map the pseudo MAC address back to the real MAC

41
00:02:51,500 --> 00:02:54,890
address. And the server that receives the frame

42
00:02:54,890 --> 00:02:57,920
receives an Ethernet frame with its real destination

43
00:02:57,920 --> 00:03:01,830
MAC address, so it knows that the Ethernet frame was intended for it.

44
00:03:01,830 --> 00:03:03,510
By intercepting our queries in this

45
00:03:03,510 --> 00:03:06,220
way and providing a Mapping between topological

46
00:03:06,220 --> 00:03:08,680
pseudo MAC addresses and real, physical

47
00:03:08,680 --> 00:03:13,230
MAC addresses, we can achieve hierachial forwarding.

48
00:03:13,230 --> 00:03:19,880
In a large Layer 2 Topology, without having to modify any host Software.
