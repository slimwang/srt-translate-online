1
00:00:00,440 --> 00:00:04,160
Running apps in virtual machines
means that they're essentially

2
00:00:04,160 --> 00:00:06,270
sandboxed in runtime.

3
00:00:06,270 --> 00:00:11,890
This means that the apps cannot directly
interfere with the operating system and

4
00:00:11,890 --> 00:00:13,260
other apps.

5
00:00:13,260 --> 00:00:16,400
Nor can they directly
access the device hardware.

6
00:00:16,400 --> 00:00:20,570
Each app is granted a set of
permissions at install time, and

7
00:00:20,570 --> 00:00:24,470
cannot perform operations that
require permissions it does not have.

8
00:00:25,500 --> 00:00:31,452
More specifically, the Android platform
takes advantage of the Linux user-based

9
00:00:31,452 --> 00:00:36,918
protection as a means of identifying and
isolating application resources.

10
00:00:36,918 --> 00:00:41,065
The Android system assigns
a unique user ID, or UID,

11
00:00:41,065 --> 00:00:46,590
to each Android app and runs it as
that user in a separate process.

12
00:00:46,590 --> 00:00:49,680
The kernel enforces
security between apps and

13
00:00:49,680 --> 00:00:54,910
the system at the process level
through standard Linux facilities

14
00:00:54,910 --> 00:00:59,060
such as user and
group IDs that are assigned to the apps.

15
00:00:59,060 --> 00:01:03,290
By default,
apps cannot interact with each other and

16
00:01:03,290 --> 00:01:06,930
apps have limited access
to the operating system.

17
00:01:06,930 --> 00:01:12,450
If app A tries to do something
malicious like reading app B's data or

18
00:01:12,450 --> 00:01:16,890
downloading the form without permission,
then the operating system protects

19
00:01:16,890 --> 00:01:21,970
against this, because app A does not
have the appropriate user privileges.

20
00:01:21,970 --> 00:01:26,280
This sandbox model is simple, but
on the other hand, it is based on

21
00:01:26,280 --> 00:01:30,957
decades of Unix style user separation
of processes and file permissions.

22
00:01:30,957 --> 00:01:34,821
An app can announce
the permissions that it needs, and

23
00:01:34,821 --> 00:01:38,680
user approval is required
at install time.

24
00:01:38,680 --> 00:01:40,950
The permissions are typically, back up.

25
00:01:40,950 --> 00:01:43,530
The permissions
are typically implemented

26
00:01:43,530 --> 00:01:48,225
by mapping them to Linux groups that
have the necessary read-write access to

27
00:01:48,225 --> 00:01:52,620
relevant system resources,
such as files and sockets.

28
00:01:52,620 --> 00:01:56,415
And therefore, they are ultimately
enforced by the Linux kernel.
