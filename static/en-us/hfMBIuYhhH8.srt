1
00:00:00,140 --> 00:00:04,579
You just worked with Sarah on a few questions on arithmetic operations. But I

2
00:00:04,579 --> 00:00:08,178
want to talk about the somewhat trickier aspect on how to do division with

3
00:00:08,178 --> 00:00:12,832
integers. Let's say I have a piggy bank full of pennies, and then I want to

4
00:00:12,832 --> 00:00:18,114
know how many dollars do I have. In Java, I can computer that with a division

5
00:00:18,114 --> 00:00:23,359
operation, and there's a bit of a catch. When both operands on the left and on

6
00:00:23,359 --> 00:00:27,769
the right hand side of the division slash our integers, then the quotient is

7
00:00:27,769 --> 00:00:35,533
formed, and the remainder is discarded. Mathematically, 435 divided by 100 is

8
00:00:35,533 --> 00:00:43,120
of course 4.35. And then, the 0.35 is gone. The leftover is 4 as an integer.

9
00:00:43,120 --> 00:00:48,682
And that number here is now saved as the dollars. That's just what we want,

10
00:00:48,682 --> 00:00:54,492
right? 435 pennies is $4. What if we also want the pennies, for that we have a

11
00:00:54,492 --> 00:00:59,986
different operator called the modulus operator, and we often just pronounce it

12
00:00:59,986 --> 00:01:09,160
as mod. By the operand on the right, let's try that out with 435. 435 divided

13
00:01:09,160 --> 00:01:15,859
by 100 is 4. So, there's 4 times 100 going in here. When we take those off,

14
00:01:15,859 --> 00:01:21,256
we're left with a remainder of 35. That was no longer divisble by 100. That's

15
00:01:21,256 --> 00:01:25,530
what the remainder operator yields. You can see that by making an integer

16
00:01:25,530 --> 00:01:30,118
division by 100, and then also a reminder operation with 100 then we get the

17
00:01:30,118 --> 00:01:36,385
dollars and the cents value. Now, it's time for you try this tell me what is.

18
00:01:36,385 --> 00:01:41,233
Pennies integer divided by ten and pennies mod 10.
