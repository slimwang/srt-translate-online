1
00:00:00,310 --> 00:00:02,899
The last required element
that you have to implement

2
00:00:02,899 --> 00:00:06,129
to wire together a RecyclerView
is the LayoutManager.

3
00:00:06,129 --> 00:00:09,779
Whereas a ViewHolder determines how
an individual entry is displayed,

4
00:00:09,779 --> 00:00:13,684
the LayoutManager determines how
the collection of items is displayed.

5
00:00:13,685 --> 00:00:17,580
LayoutManager is a key part of the way
recycling works in RecyclerView,

6
00:00:17,579 --> 00:00:20,949
since it determines when to recycle
items views that are no longer visible

7
00:00:20,949 --> 00:00:22,289
to the user.

8
00:00:22,289 --> 00:00:25,739
Android currently comes with three
implementations of LayoutManager

9
00:00:25,739 --> 00:00:29,750
to fit most needs, LinearLayoutManager,
GridLayoutManager, and

10
00:00:29,751 --> 00:00:31,678
StaggeredGridLayoutManager.

11
00:00:31,678 --> 00:00:35,560
LinearLayoutManager allows items
to scroll either vertically or

12
00:00:35,560 --> 00:00:36,679
horizontally.

13
00:00:36,679 --> 00:00:38,418
Vertical scrolling is the default.

14
00:00:38,418 --> 00:00:41,509
GridLayoutManager, a subclass
of LinearLayoutManager,

15
00:00:41,509 --> 00:00:45,335
arranges items in a grid that can also
scroll vertically or horizontally.

16
00:00:45,335 --> 00:00:49,980
Lastly, StaggeredGridLayoutManager
displays an offset grid of items.

17
00:00:49,979 --> 00:00:51,773
This LayoutManager is commonly used for

18
00:00:51,774 --> 00:00:55,270
applications that have views with
content of varying dimensions.

19
00:00:55,270 --> 00:00:58,520
If none of those [LAUGH] built in
LayoutManagers satisfies your needs,

20
00:00:58,520 --> 00:01:01,850
you can directly extend from
LayoutManager and create your own.

21
00:01:01,850 --> 00:01:03,969
For our toy app and Sunshine,

22
00:01:03,969 --> 00:01:06,599
we'll be using LinearLayoutManager
to scroll vertically.

