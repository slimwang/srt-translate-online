1
00:00:00,470 --> 00:00:04,570
Let's look at some examples of UIs for
tablets that are less than optimal and

2
00:00:04,570 --> 00:00:06,110
see where they break down.

3
00:00:06,110 --> 00:00:10,380
We'll use the factors we discussed
as a rubric for grading each UI.

4
00:00:10,380 --> 00:00:13,845
This first example shows
a list of messages or updates,

5
00:00:13,845 --> 00:00:16,075
perhaps it's some kind of social app.

6
00:00:16,075 --> 00:00:20,545
It's essentially a list with
full width text and images.

7
00:00:21,665 --> 00:00:25,955
Let's see how it does against our
rubric for what we're optimizing for.

8
00:00:25,955 --> 00:00:30,370
Now firstly, I don't think this design
offers a balanced use of space.

9
00:00:30,370 --> 00:00:34,890
The left alignment can leave lots of
empty space and it feels a bit lopsided.

10
00:00:35,890 --> 00:00:40,300
Secondly, any time you have full width
text, this isn't optimizing for reading

11
00:00:40,300 --> 00:00:45,800
comfort as you're likely to exceed the
45 to 75 character line lengths we want.

12
00:00:45,800 --> 00:00:50,430
Lastly, I'd say that this design risks
blowing images up to fill this width,

13
00:00:50,430 --> 00:00:52,320
sacrificing quality.

14
00:00:52,320 --> 00:00:54,760
This next example is something
like a detail screen,

15
00:00:54,760 --> 00:00:58,310
with a full width image with
an awkward aspect ratio.

16
00:00:58,310 --> 00:01:02,790
Looks like it might have a fixed height,
but a fill width off the screen.

17
00:01:02,790 --> 00:01:05,690
Then it has some text
content top left aligned.

18
00:01:05,690 --> 00:01:07,435
Looking at our optimization goals,

19
00:01:07,435 --> 00:01:11,340
odds say that this design
isn't very balanced.

20
00:01:11,340 --> 00:01:14,810
All of the content is concentrated
here on the top left.

21
00:01:14,810 --> 00:01:17,970
This design also doesn't seem
to respect image quality.

22
00:01:17,970 --> 00:01:21,620
Displaying a small sliver like
this is likely to only convey

23
00:01:21,620 --> 00:01:23,740
a portion of the whole image.

24
00:01:23,740 --> 00:01:28,340
Lastly, I'd say that there might be a
missed opportunity to maintain context.

25
00:01:28,340 --> 00:01:30,530
This looks like a sparse detail screen.

26
00:01:30,530 --> 00:01:34,380
It might have made more sense to show
this info in a larger context, say,

27
00:01:34,380 --> 00:01:36,500
in its own panel or dialogue.

28
00:01:36,500 --> 00:01:40,770
Our last example tablet screen
shows some kind of image feed.

29
00:01:40,770 --> 00:01:43,730
Here the images flow
horizontally from left to right.

30
00:01:43,730 --> 00:01:45,740
Again, looking at our rubric,

31
00:01:45,740 --> 00:01:50,240
I'd say that this design doesn't
make balanced use of space.

32
00:01:50,240 --> 00:01:54,300
We have dense content here on the left
and sparse areas here on the right.

33
00:01:54,300 --> 00:01:57,430
This design also doesn't optimize for
image quality.

34
00:01:57,430 --> 00:02:01,550
It's not that the layout is likely to
blow up images, it's more of a missed

35
00:02:01,550 --> 00:02:05,560
opportunity to display them
more richly or interestingly.

36
00:02:05,560 --> 00:02:10,669
This design appears to use a fixed
size for each image, which is a shame.

37
00:02:10,669 --> 00:02:13,950
Why not make better use
of the space available?

38
00:02:13,950 --> 00:02:17,230
Lastly, I've marked it down for
overall aesthetic.

39
00:02:17,230 --> 00:02:22,300
I'd say that this kind of jagged look,
like this, is somewhat awkward.

40
00:02:22,300 --> 00:02:26,500
While these examples might seem
contrived, they're representative

41
00:02:26,500 --> 00:02:30,160
of how many apps out there today
aren't thinking adaptively.

42
00:02:30,160 --> 00:02:31,300
With some simple tweaks,

43
00:02:31,300 --> 00:02:35,150
you can vastly improve how your app
might appear on larger devices.
