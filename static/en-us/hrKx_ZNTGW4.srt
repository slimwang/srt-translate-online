1
00:00:00,310 --> 00:00:03,260
Bit Torrent has several steps for publishing. First,

2
00:00:03,260 --> 00:00:06,560
a peer creates what's called a torrent which contains

3
00:00:06,560 --> 00:00:10,950
metadata about tracker and all of the pieces of

4
00:00:10,950 --> 00:00:13,520
the file in question as well as a checksum

5
00:00:13,520 --> 00:00:15,700
for each piece of the file at the time

6
00:00:15,700 --> 00:00:18,100
the torrent was created. Now some peers in the

7
00:00:18,100 --> 00:00:22,210
network need to maintain a complete initial copy of

8
00:00:22,210 --> 00:00:25,400
the file. Those peers are called seeders. Now to

9
00:00:25,400 --> 00:00:28,020
download a file, a client first contacts

10
00:00:28,020 --> 00:00:31,250
the tracker which provides this metadata about

11
00:00:31,250 --> 00:00:37,520
the file, including a list of seeders that contain an initial copy of the file.

12
00:00:37,520 --> 00:00:43,900
Next, the client starts to download parts of the file from the seeder. Once

13
00:00:43,900 --> 00:00:47,200
the client starts to accumulate some initial

14
00:00:47,200 --> 00:00:50,470
chunks, hopefully those chunks were different than those

15
00:00:50,470 --> 00:00:55,060
that other clients in the network that are also trading the file have. At this

16
00:00:55,060 --> 00:00:59,120
point clients can begin to swap chuncks.

17
00:00:59,120 --> 00:01:02,150
As clients begin swapping distinct chunks with one

18
00:01:02,150 --> 00:01:04,819
another, the idea is that eventually after

19
00:01:04,819 --> 00:01:07,760
enough swapping everyone gets a copy of the

20
00:01:07,760 --> 00:01:12,020
complete file. Clients that contain incomplete copies of

21
00:01:12,020 --> 00:01:15,800
the file are called leechers. The tracker allows

22
00:01:15,800 --> 00:01:21,220
peers to find each other and it also returns a random list of peers that any

23
00:01:21,220 --> 00:01:24,310
particular leecher can use to swap chunks of

24
00:01:24,310 --> 00:01:28,580
the file. Previous, peer to peer file-sharing systems used

25
00:01:28,580 --> 00:01:32,460
similar swapping techniques, but a problem that many

26
00:01:32,460 --> 00:01:35,310
of them faced, and which Bit Torrent solved, is

27
00:01:35,310 --> 00:01:38,560
called free-loading, whereby a client might leave the

28
00:01:38,560 --> 00:01:40,940
network as soon as it finished. downloading a copy

29
00:01:40,940 --> 00:01:46,120
of the file, not providing any benefit to other clients who also want the file.
