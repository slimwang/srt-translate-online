1
00:00:00,025 --> 00:00:03,220
I've just told you a lot
about validation rules, and

2
00:00:03,220 --> 00:00:06,130
I'd like you to start creating some for
shopping list plus plus.

3
00:00:06,130 --> 00:00:08,770
Now writing validation rules
is pretty straightforward.

4
00:00:08,770 --> 00:00:10,140
In fact if you'd like,

5
00:00:10,140 --> 00:00:13,820
I could walk you through creating one
of these rules right now, start to end.

6
00:00:13,820 --> 00:00:15,760
Here, let's take a look
at the user front node.

7
00:00:17,240 --> 00:00:18,390
When you're writing the rules for

8
00:00:18,390 --> 00:00:22,400
an object, take a look at the actual
object itself in the database.

9
00:00:22,400 --> 00:00:23,930
So let's look at userFriends.

10
00:00:23,930 --> 00:00:27,180
So here's the main node userFriends, and
it's going to have an arbitrary number

11
00:00:27,180 --> 00:00:30,380
of children for every user that
has friends in the database.

12
00:00:30,380 --> 00:00:33,360
And then for each user that has
friends,they in turn have a friends

13
00:00:33,360 --> 00:00:36,820
list, and they're also going to
have arbitrary number of friends.

14
00:00:36,820 --> 00:00:40,550
The friends themselves have pretty much
the same properties that we just saw.

15
00:00:40,550 --> 00:00:43,640
Okay, so first things first,
let's map this out in the rules.

16
00:00:43,640 --> 00:00:45,800
We can see here that
we have user friends.

17
00:00:45,800 --> 00:00:46,510
Those two match.

18
00:00:47,530 --> 00:00:49,710
And then here we have
a wildcard variable for

19
00:00:49,710 --> 00:00:52,140
the users encoded email, and

20
00:00:52,140 --> 00:00:55,880
then we have another wildcard variable
to represent each of the friends, and

21
00:00:55,880 --> 00:00:59,830
then each friend will have this
structure of properties as matched here.

22
00:00:59,830 --> 00:01:02,710
Okay, so it looks like pretty much
the structure matches the structure.

23
00:01:02,710 --> 00:01:03,630
That's good.

24
00:01:03,630 --> 00:01:06,800
Now this is not actually doing
any sort of validation yet.

25
00:01:06,800 --> 00:01:09,180
Notice I haven't written
a single validation rule.

26
00:01:09,180 --> 00:01:12,460
To start, we could write rules that make
sure that all of the correct properties

27
00:01:12,460 --> 00:01:15,740
are present in the friend
encoded email object.

28
00:01:15,740 --> 00:01:20,600
So I'll go ahead start by writing a new
data has children rule right here.

29
00:01:20,600 --> 00:01:23,820
This rule will make sure that
all these properties exist And

30
00:01:23,820 --> 00:01:26,730
also go ahead the write one for
the timestamp joined.

31
00:01:26,730 --> 00:01:29,000
Now this only makes sure
that these properties exist.

32
00:01:29,000 --> 00:01:32,170
It doesn't make sure that they
are the only properties that exist.

33
00:01:32,170 --> 00:01:34,950
And it doesn't protect against
writing other arbitrary properties

34
00:01:34,950 --> 00:01:36,280
that could be wrong.

35
00:01:36,280 --> 00:01:39,950
So do that, we have to use the dollar
sign or wildcard variables as I

36
00:01:39,950 --> 00:01:43,620
described earlier, so
I added those variables here.

37
00:01:43,620 --> 00:01:45,790
At this point, you're completely
confirming the structure of

38
00:01:45,790 --> 00:01:47,130
the user object.

39
00:01:47,130 --> 00:01:50,140
Now you could write more specific
rules for each of these properties.

40
00:01:50,140 --> 00:01:53,000
Generally, you could start by
doing a type related validations.

41
00:01:53,000 --> 00:01:55,440
For example,
the name should be a string.

42
00:01:55,440 --> 00:01:58,590
And just continuing down,
the email should also be a string,

43
00:01:58,590 --> 00:02:02,510
has long to do with password is
a boolean, and timestamp is a number.

44
00:02:02,510 --> 00:02:05,650
In addition, we could do
a further validation on the email

45
00:02:05,650 --> 00:02:07,870
with the regular expression
I showed you before.

46
00:02:07,870 --> 00:02:12,130
So it's a string, and its value
matches the format of an email.

47
00:02:12,130 --> 00:02:13,890
And that's a pretty good start for

48
00:02:13,890 --> 00:02:15,457
ensuring the structure
of the userFriends node.
