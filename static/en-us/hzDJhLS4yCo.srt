1
00:00:00,000 --> 00:00:03,000
So now that we can build an index, we'll want to use it.

2
00:00:03,000 --> 00:00:05,000
We'll want to use it to respond to queries.

3
00:00:05,000 --> 00:00:08,000
If you understood how the add to index code works,

4
00:00:08,000 --> 00:00:12,000
I think you'll be able to write the query code yourself.

5
00:00:12,000 --> 00:00:14,000
So the lookup procedure takes 2 inputs.

6
00:00:14,000 --> 00:00:17,000
The first is an index, and that's the data structure we've been working with.

7
00:00:17,000 --> 00:00:19,000
It's a list where each element

8
00:00:19,000 --> 00:00:21,000
of the list is a list containing a keyword

9
00:00:21,000 --> 00:00:23,000
and a list as its second element,

10
00:00:23,000 --> 00:00:25,000
and that list is a list of URLs

11
00:00:25,000 --> 00:00:27,000
where that keyword appears.

12
00:00:27,000 --> 00:00:29,000
The second input is the keyword to lookup.

13
00:00:29,000 --> 00:00:31,000
That's what we're searching for.

14
00:00:31,000 --> 00:00:33,000
So the output of lookup should be a list

15
00:00:33,000 --> 00:00:36,000
of all the URLs associated with the input keyword.

16
00:00:36,000 --> 00:00:38,000
So as an example,

17
00:00:38,000 --> 00:00:40,000
we constructed the index here

18
00:00:40,000 --> 00:00:42,000
where we've added 2 URLs

19
00:00:42,000 --> 00:00:45,000
with the keyword udacity.

20
00:00:45,000 --> 00:00:47,000
The result from doing a lookup on the keyword udacity

21
00:00:47,000 --> 00:00:50,000
should be a list containing those 2 URLs.

22
00:00:50,000 --> 00:00:52,000
We should be concerned what happens if

23
00:00:52,000 --> 00:00:54,000
the keyword does not exists.

24
00:00:54,000 --> 00:00:56,000
If the keyword doesn't exists, well there are no

25
00:00:56,000 --> 00:00:58,000
URLs associated with that keyword.

26
00:00:58,000 --> 00:01:00,000
So we would just return an empty list.

27
00:01:00,000 --> 00:01:03,000
So see if you can define the lookup procedure.
