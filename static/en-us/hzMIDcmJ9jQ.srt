1
00:00:00,290 --> 00:00:03,560
For the rest of this lesson, you
are going to be working on Python code

2
00:00:03,560 --> 00:00:08,210
that should already be in the forum
sub-directory of your vagrant directory.

3
00:00:08,210 --> 00:00:11,780
You can edit this code with your
favorite text editor on your computer,

4
00:00:11,780 --> 00:00:12,870
and when you save it,

5
00:00:12,870 --> 00:00:16,120
those changes will be visible
from inside the virtual machine.

6
00:00:16,120 --> 00:00:17,870
So, what is this code?

7
00:00:17,870 --> 00:00:20,940
It's a web forum,
just not a very good one yet.

8
00:00:20,940 --> 00:00:24,210
You could run it like any Python
program from the command line.

9
00:00:24,210 --> 00:00:28,730
And once it starts up, it'll tell you
it's listening on port 8000 and then you

10
00:00:28,730 --> 00:00:34,900
can access it at http://localhost:8000
in your web browser.

11
00:00:34,900 --> 00:00:37,710
And when you do,
you'll see something like this.

12
00:00:37,710 --> 00:00:39,240
Hm, it's pretty empty.

13
00:00:39,240 --> 00:00:40,569
Let's put some posts in it.

14
00:00:57,939 --> 00:01:00,964
Now, if we go back to our terminal, and

15
00:01:00,964 --> 00:01:05,183
kill the web server with Ctrl C,
and then restart it and

16
00:01:05,183 --> 00:01:10,940
go back to the web browser and
reload all our posts are gone.

17
00:01:10,940 --> 00:01:12,930
What's going on there?

18
00:01:12,930 --> 00:01:17,663
Now, if we look over in the source code
for this module that forum.py is using,

19
00:01:17,663 --> 00:01:21,660
we'll, see, it's not actually
using a database at all.

20
00:01:21,660 --> 00:01:26,750
It's faking it with plain old variables
which go away when the program exits.

21
00:01:26,750 --> 00:01:28,380
So for the next few exercises,

22
00:01:28,380 --> 00:01:32,790
you're going to be adapting this code to
use a database to make posts persistent.

23
00:01:32,790 --> 00:01:33,720
First off,

24
00:01:33,720 --> 00:01:37,000
let's say hello to the database system
that we're going to use, PostgreSQL.
