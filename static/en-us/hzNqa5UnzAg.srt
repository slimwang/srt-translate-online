1
00:00:00,220 --> 00:00:02,730
Now let me talk about
the problems of magnification and

2
00:00:02,730 --> 00:00:07,230
minification that applied to,
in both forward and inverse mapping.

3
00:00:07,230 --> 00:00:10,383
So let's take this region, of course
it's being copied over a warped in this

4
00:00:10,383 --> 00:00:12,580
region and be much,
bigger in this and so and so.

5
00:00:12,580 --> 00:00:15,070
So this is the issue of magnification.

6
00:00:15,070 --> 00:00:19,430
Where this, all of the information
from here, is now much larger here.

7
00:00:19,430 --> 00:00:23,060
Of course, the problem that you can
expect is going to be because of

8
00:00:23,060 --> 00:00:26,620
aliasing, there's now lot of information
here, much more information here, so

9
00:00:26,620 --> 00:00:28,600
it will be blocky and choppy.

10
00:00:28,600 --> 00:00:32,479
In case of the inverse,
we'll have a region and

11
00:00:32,479 --> 00:00:36,440
what's happening really is basically
this part is going there so

12
00:00:36,440 --> 00:00:40,890
of course now I have to figure out how
to do computation of this from here and

13
00:00:40,890 --> 00:00:43,270
of course this is
a problem of minification.

14
00:00:43,270 --> 00:00:47,260
To solve this, what I would do basically
is kind of even discretize this

15
00:00:47,260 --> 00:00:52,490
region here and copy out the discretized
information, from here to there.

16
00:00:52,490 --> 00:00:55,570
So this allows me to now
generate a much larger thing.

17
00:00:55,570 --> 00:01:00,830
And of course I would take all of
the values from here and inject in here.

18
00:01:00,830 --> 00:01:03,360
And similarly, this one would be here.

19
00:01:03,360 --> 00:01:06,450
And that's how I can actually start
doing, and of course we can do a variety

20
00:01:06,450 --> 00:01:10,550
of other things that allow you
to basically, anti-alias this.

21
00:01:10,550 --> 00:01:13,425
However, in this case,
of course we would actually have

22
00:01:13,425 --> 00:01:17,425
problems because we don't exactly
know how to do the inverse warp.

23
00:01:17,425 --> 00:01:21,155
Again, we'll talk about that briefly
again in the next few slides.

24
00:01:21,155 --> 00:01:23,645
But one thing I want to point
out is that, in essence,

25
00:01:23,645 --> 00:01:27,270
what we want to do is, we want to be
able to sometimes figure out the best

26
00:01:27,270 --> 00:01:29,670
computational mechanisms to support it.

27
00:01:29,670 --> 00:01:32,960
There's a lot of literature of this
kind of stuff in texture mapping and

28
00:01:32,960 --> 00:01:34,600
stuff like that in computer graphics,

29
00:01:34,600 --> 00:01:38,980
that's aimed at addressing this problem
with both forwards and inverse mapping.

30
00:01:38,980 --> 00:01:42,360
One specific method I want you to
look at is a Two-pass transform that

31
00:01:42,360 --> 00:01:45,620
basically does the geometric
transforms that we had looked at

32
00:01:45,620 --> 00:01:46,650
in the previous slides.

33
00:01:46,650 --> 00:01:50,770
Which was basically the whole concept
of doing rigid map line warps and

34
00:01:50,770 --> 00:01:54,610
then basically being able to do
smaller warps to be able to get

35
00:01:54,610 --> 00:01:57,330
smaller differences, and
by combinations of those.

36
00:01:57,330 --> 00:02:00,260
And the fact that these current
processors can actually deal with

37
00:02:00,260 --> 00:02:02,710
these geometric
transformations much better.

38
00:02:02,710 --> 00:02:06,370
You would actually have much quicker
ways of deforming regions and images.

39
00:02:06,370 --> 00:02:11,480
You'll be able to generate nicer
artifact free visuals and videos
