1
00:00:00,000 --> 00:00:03,000
JavaScript also has support for numbers,

2
00:00:03,000 --> 00:00:06,000
and just like in Python they can be whole numbers.

3
00:00:06,000 --> 00:00:09,000
They can have decimal fractional parts,

4
00:00:09,000 --> 00:00:11,000
or they can be negative.

5
00:00:11,000 --> 00:00:14,000
I like all of those, but all of these examples here in blue at the bottom,

6
00:00:14,000 --> 00:00:17,000
1.2.3.4, that has too many decimal points.

7
00:00:17,000 --> 00:00:20,000
This is not a number written using digits.

8
00:00:20,000 --> 00:00:23,000
This is not a number at all, although I may have its number.

9
00:00:23,000 --> 00:00:25,000
That would totally work.

10
00:00:25,000 --> 00:00:29,000
Now that we have an intuition for what numbers look like in JavaScript,

11
00:00:29,000 --> 00:00:31,000
there's a quiz.

12
00:00:31,000 --> 00:00:36,000
I'd like you to define t_number that matches the examples in red

13
00:00:36,000 --> 00:00:38,000
but does not match the examples in blue,

14
00:00:38,000 --> 00:00:42,000
but normally the value of a token is a string.

15
00:00:42,000 --> 00:00:47,000
I want you to convert it to a float before returning.
