1
00:00:00,470 --> 00:00:03,340
All right, so I'm going to create
a new project called MusicPlayer, so

2
00:00:03,340 --> 00:00:06,460
click here on Start a new
android Studio project.

3
00:00:06,460 --> 00:00:09,070
I'm going to name my
application MusicPlayer.

4
00:00:09,070 --> 00:00:12,298
Click Next, I'm going to accept
this default minimum SDK.

5
00:00:12,298 --> 00:00:15,370
And then I'm going to choose
the Empty Activity template,

6
00:00:15,370 --> 00:00:16,910
click Next and then Finish.

7
00:00:18,670 --> 00:00:21,380
Now once that's done,
first I'm going to modify the layout so

8
00:00:21,380 --> 00:00:23,210
there are two buttons on the screen.

9
00:00:23,210 --> 00:00:26,470
So I'm going to open up my
activity_main.xml file and

10
00:00:26,470 --> 00:00:29,780
then head over to the text view and
then close this up.

11
00:00:29,780 --> 00:00:32,200
So with activity main
XML layout file open,

12
00:00:32,200 --> 00:00:34,160
I'm going to open up my preview pane.

13
00:00:34,160 --> 00:00:38,380
I'm going to modify the existing
activity main XML file

14
00:00:38,380 --> 00:00:41,010
from a relative layout
to a linear layout.

15
00:00:41,010 --> 00:00:45,500
So make that change here and this is so
that the play and pause buttons stacked

16
00:00:45,500 --> 00:00:49,820
on top of each other and feel free to
arrange the buttons however you want.

17
00:00:49,820 --> 00:00:53,132
Perhaps in the middle of the screen or
even horizontally in a row and

18
00:00:53,132 --> 00:00:55,928
I'm going to move these so
I can view them all vertically.

19
00:00:55,928 --> 00:00:59,328
I'm also going to add in
orientation of vertical here.

20
00:00:59,328 --> 00:01:03,758
Next I'm going to modify this
textView and change into a button.

21
00:01:03,758 --> 00:01:06,510
And then copy and paste it so
that we have two buttons.

22
00:01:08,140 --> 00:01:11,118
Now I want the text of
the first button to say Play.

23
00:01:11,118 --> 00:01:13,805
And the text of the second
button to say pause.

24
00:01:13,805 --> 00:01:17,175
I'm also going to add view IDs to each
button because we'll need to refer to

25
00:01:17,175 --> 00:01:20,415
them in the Java code to define the
ButtonClick behavior for each of them.

26
00:01:22,185 --> 00:01:25,455
Now taking a look at the layout in
the preview pane that looks good.

27
00:01:25,455 --> 00:01:28,005
Now let's switch over to
the main activity file.

28
00:01:28,005 --> 00:01:30,775
Here I want to hook up click
listeners to each button and

29
00:01:30,775 --> 00:01:34,720
similar to lesson one, we'll implement
an anonymous click listener for

30
00:01:34,720 --> 00:01:38,130
this button and
it's on a click callback method.

31
00:01:38,130 --> 00:01:41,940
So inside the onCreate method, I'm
going to find the playButton we created

32
00:01:41,940 --> 00:01:45,360
using the findViewById method and
passing in the ViewId.

33
00:01:47,200 --> 00:01:49,430
Then I'm going to set the
OnClickListener method on the button.

34
00:01:53,500 --> 00:01:57,797
So for the instructions inside the
onClick method, right now I'll just have

35
00:01:57,797 --> 00:02:01,648
it pop up a Toast message until we
figure out how to play the song file.

36
00:02:01,648 --> 00:02:04,600
[BLANK_AUDIO]

37
00:02:04,600 --> 00:02:07,068
I can use the same logic for
the pause button.

38
00:02:07,068 --> 00:02:11,024
So I'm going to select this whole
block of code, copy and paste,

39
00:02:11,024 --> 00:02:14,757
now all I have to do is change
the variable name the view ID and

40
00:02:14,757 --> 00:02:18,820
the toast message to
reference the pause button.

41
00:02:18,820 --> 00:02:22,160
Now let's make sure this code works so
far by running on our phone.

42
00:02:22,160 --> 00:02:22,820
Awesome.
So

43
00:02:22,820 --> 00:02:25,430
each button pops up with
a different toast message.

44
00:02:25,430 --> 00:02:27,560
One for play and one for pause.

45
00:02:27,560 --> 00:02:29,920
All right so
now let's add in a song file.

46
00:02:29,920 --> 00:02:32,980
So I clear the raw folder
as I showed you earlier.

47
00:02:32,980 --> 00:02:35,390
So this is the song file
in my computer and for

48
00:02:35,390 --> 00:02:38,900
those of you who are curious, it's
actually the trailers video song from

49
00:02:38,900 --> 00:02:41,030
the entry developer's YouTube channel.

50
00:02:41,030 --> 00:02:42,461
So now I'm going to copy and

51
00:02:42,461 --> 00:02:45,608
paste this file into the raw
folder in Android Studio.

52
00:02:45,608 --> 00:02:48,510
Great, there you go, so
the song file is now in our app.

53
00:02:48,510 --> 00:02:50,700
Now let's figure out
how to play that song.

54
00:02:50,700 --> 00:02:53,820
Well one way we could do it is, we could
go back to our earlier Media Player

55
00:02:53,820 --> 00:02:57,520
article but I want to show you
a different way of finding the answer.

56
00:02:57,520 --> 00:03:02,210
So let's go online and search for
Android media player tutorial.

57
00:03:02,210 --> 00:03:03,450
So, this first result here looks good.

58
00:03:04,860 --> 00:03:07,640
Ooh, and these code snippets
look helpful as well.

59
00:03:07,640 --> 00:03:08,970
Now, by reading the description,

60
00:03:08,970 --> 00:03:12,520
it looks like this line of code
creates a media player object for us.

61
00:03:12,520 --> 00:03:16,750
So, notice that we passed in two inputs,
a context and the resource ID for

62
00:03:16,750 --> 00:03:18,500
the raw audio file.

63
00:03:18,500 --> 00:03:22,160
In this instance here,
song is the name of the file.

64
00:03:22,160 --> 00:03:27,080
So, once a media player is created, we
can call methods like start and pause.

65
00:03:27,080 --> 00:03:30,760
So that seems like what we want for
our play button and what we need for

66
00:03:30,760 --> 00:03:32,130
our pause button.

67
00:03:32,130 --> 00:03:35,317
So the rest of this article talks about
other methods that you can call and

68
00:03:35,317 --> 00:03:37,418
you have a chance to go back and
redo this later.

69
00:03:37,418 --> 00:03:40,296
All right so this first line of
code here looks pretty promising.

70
00:03:40,296 --> 00:03:42,890
I will just copy and
paste it into our app.

71
00:03:42,890 --> 00:03:46,390
So back in our code,
where should we create the media player?

72
00:03:46,390 --> 00:03:48,670
Well as suggested by
the hint in the quiz,

73
00:03:48,670 --> 00:03:51,920
let's make the media player a global
variable because we want to

74
00:03:51,920 --> 00:03:56,000
reference the media player from
the OnClickListeners for each button.

75
00:03:56,000 --> 00:04:00,460
So if that reasoning isn't clear, it's
okay, as you get more experience with

76
00:04:00,460 --> 00:04:03,760
Java, you'll get a better understanding
of the requirements of variables

77
00:04:03,760 --> 00:04:07,500
that are used within anonymous
classes like these click listeners.

78
00:04:07,500 --> 00:04:09,570
So for this case, let's go ahead and

79
00:04:09,570 --> 00:04:11,800
make sure that the media
player is a global variable.

80
00:04:12,930 --> 00:04:15,780
Now here in the main activity file,
when should we set up or

81
00:04:15,780 --> 00:04:17,670
initialize the media player?

82
00:04:17,670 --> 00:04:19,570
Should we do it when
the play button is clicked?

83
00:04:21,380 --> 00:04:24,000
No I think we should
set it up before that.

84
00:04:24,000 --> 00:04:27,700
Let's initialize the media player
when the activity is first created,

85
00:04:27,700 --> 00:04:30,680
then the media player object will
be ready whenever we hit play.

86
00:04:31,700 --> 00:04:34,250
So I'll paste the code that we
copied from the tutorial in here.

87
00:04:35,320 --> 00:04:37,870
And now,
I want to modify it to fit our app.

88
00:04:37,870 --> 00:04:40,400
Now I don't need to declare
the object that I type again

89
00:04:40,400 --> 00:04:44,090
because the variable was already
declared as a global variable.

90
00:04:44,090 --> 00:04:47,225
Also renamed the R.raw.song to

91
00:04:47,225 --> 00:04:53,560
R.raw.android_trailer because
that's the name of our song file.

92
00:04:53,560 --> 00:04:55,940
All right,
then in the playButton ClickListener,

93
00:04:55,940 --> 00:05:00,990
we can delete the toast message and
call mediaPlayer.start.

94
00:05:00,990 --> 00:05:04,028
And do something similar
the pauseButton ClickListener,

95
00:05:04,028 --> 00:05:07,318
we'll delete the Toast message and
call mediaPlayer.pause.

96
00:05:07,318 --> 00:05:08,838
All right, so now, let's test the app.

97
00:05:08,838 --> 00:05:15,458
[MUSIC]

98
00:05:15,458 --> 00:05:17,510
Nice.
That sounds fantastic.

99
00:05:17,510 --> 00:05:19,560
So, the song is playing,
and the play and

100
00:05:19,560 --> 00:05:21,910
pause buttons are working as expected.

101
00:05:21,910 --> 00:05:24,230
Now, back to the tutorial
that we found earlier.

102
00:05:24,230 --> 00:05:25,830
If you had some additional time,

103
00:05:25,830 --> 00:05:28,990
maybe you had a chance to experiment
with the other media player methods.

104
00:05:28,990 --> 00:05:31,990
So for example here,
the seekTo method which is used for

105
00:05:31,990 --> 00:05:35,880
skipping to a different part of
the song or this setVolume method here,

106
00:05:35,880 --> 00:05:38,850
which is used for
changing the volume so great work.

107
00:05:38,850 --> 00:05:39,770
As you can see,

108
00:05:39,770 --> 00:05:43,890
writing a small sample app is a nice way
to become comfortable with a new API in

109
00:05:43,890 --> 00:05:48,010
Android without all the extra
complexities of a real full fledged app.

110
00:05:48,010 --> 00:05:50,654
All right ,so let's put
the music player app aside and

111
00:05:50,654 --> 00:05:53,600
we'll return to it later but
now let's go back to Miwok app.
