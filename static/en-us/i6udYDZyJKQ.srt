1
00:00:00,280 --> 00:00:04,150
If you go for this defense where
you use languages that are safe,

2
00:00:04,150 --> 00:00:07,640
obviously buffer overflow
becomes impossible because of

3
00:00:07,640 --> 00:00:11,160
all the checks the language is going
to do, so we set bounds checks.

4
00:00:11,160 --> 00:00:15,440
So the checks have to be done at
run time rather than you doing that

5
00:00:15,440 --> 00:00:19,410
explicitly in the code that you write,
that language is doing for you.

6
00:00:19,410 --> 00:00:22,540
So, why don't we use these kind
of languages for everything?

7
00:00:22,540 --> 00:00:24,990
Well more and more we're doing that but

8
00:00:24,990 --> 00:00:28,270
one draw back with these kind
of languages typically is that,

9
00:00:28,270 --> 00:00:30,810
that's going to be either
some sort of performance

10
00:00:30,810 --> 00:00:34,980
degradation because we just talked
about the checks that had to be done.

11
00:00:34,980 --> 00:00:39,640
And they force you to do certain
things in a certain way.

12
00:00:39,640 --> 00:00:43,240
So flexibility that generally you have
you have with low level programming

13
00:00:43,240 --> 00:00:45,250
languages goes away.

14
00:00:45,250 --> 00:00:49,640
So if you're looking for really
performance or all the flexibility in

15
00:00:49,640 --> 00:00:54,550
the world, maybe that's why you don't
use these languages that do this work

16
00:00:54,550 --> 00:00:58,160
for you to make the buffer
overflow kind of problems go away.
