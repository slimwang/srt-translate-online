1
00:00:00,390 --> 00:00:03,695
Here's the reduction of
3 CNF SAT to SUBSET-SUM.

2
00:00:03,695 --> 00:00:06,737
I'm going to illustrate the reduction
with an example, because writing out

3
00:00:06,737 --> 00:00:10,360
the transformation in it's full
generality can get a little messy.

4
00:00:10,360 --> 00:00:11,650
Even with just an example,

5
00:00:11,650 --> 00:00:15,210
it may not be clear why I'm making some
of the intermediate steps at the time,

6
00:00:15,210 --> 00:00:17,300
it should all become clear at the end,
however.

7
00:00:17,300 --> 00:00:20,520
We're going to create a table with
columns for the variables, and

8
00:00:20,520 --> 00:00:22,260
columns for the clauses.

9
00:00:22,260 --> 00:00:25,660
The rows of the table are going to
be the numbers in our subset.

10
00:00:25,660 --> 00:00:28,210
We'll have this column
represent the one's place,

11
00:00:28,210 --> 00:00:30,930
this one the ten's place, and so forth.

12
00:00:30,930 --> 00:00:33,420
The collection of numbers
will consist of two for

13
00:00:33,420 --> 00:00:34,520
every variable in the formula.

14
00:00:35,560 --> 00:00:38,540
One that we include when Xi is true.

15
00:00:38,540 --> 00:00:43,300
We'll notate that with Yi, and
one that include when Xi bar is true.

16
00:00:43,300 --> 00:00:44,690
We'll notate that with Zi.

17
00:00:46,300 --> 00:00:50,090
In the end,
we want to include either Yi or Zi for

18
00:00:50,090 --> 00:00:53,710
every i since we have to assign
the variable Xi one way or another.

19
00:00:55,060 --> 00:00:59,020
To get a satisfying assignment we
also have to satisfy each clause.

20
00:00:59,020 --> 00:01:00,440
So we want the numbers Yi and

21
00:01:00,440 --> 00:01:03,840
Zi to reflect which clauses
are satisfied, as well.

22
00:01:03,840 --> 00:01:06,079
Here then, is how we fill out the table.

23
00:01:06,079 --> 00:01:08,540
Y1 sets X1 to be true.

24
00:01:08,540 --> 00:01:10,233
So we put a 1 in that column,

25
00:01:10,233 --> 00:01:13,350
to indicate that choosing
Y1 means assigning X1.

26
00:01:14,870 --> 00:01:20,970
And this also satisfies clauses 1 and
3 since that's where X1 appears.

27
00:01:20,970 --> 00:01:25,000
Including Z1 we'd also assign
the variable X1 a value, but

28
00:01:25,000 --> 00:01:27,090
it wouldn't satisfy any of the clauses.

29
00:01:27,090 --> 00:01:29,310
So all these are written as 0s.

30
00:01:29,310 --> 00:01:32,619
We do the analogous procedure for
Y2 and Z2.

31
00:01:32,619 --> 00:01:36,449
The literal X2 appears
in the first clause, and

32
00:01:36,449 --> 00:01:40,850
the literal X2 bar appears
in clauses 2 and 3.

33
00:01:40,850 --> 00:01:43,440
And we do the same for
the variables X3 and X4.

34
00:01:45,130 --> 00:01:48,110
These then are the numbers that
we want to include in our set A.

35
00:01:49,270 --> 00:01:52,020
Now, we need to choose
our desired total k.

36
00:01:52,020 --> 00:01:56,181
For each of the variable clauses,
the desired total is exactly 1.

37
00:01:56,181 --> 00:01:58,600
We assign each variable one way or
the other.

38
00:01:59,750 --> 00:02:03,770
For these clause columns however,
the total just has to be greater than 0.

39
00:02:03,770 --> 00:02:07,260
We just need one literal in
the clause to be true in order for

40
00:02:07,260 --> 00:02:08,280
the clause to be satisfied.

41
00:02:09,280 --> 00:02:12,720
But that doesn't give me a specific
k that we need to sum to.

42
00:02:12,720 --> 00:02:15,340
The trick is to add more
numbers to the table.

43
00:02:15,340 --> 00:02:18,688
These all have 0s in the place
corresponding to the variables.

44
00:02:18,688 --> 00:02:22,169
In exactly 1,1 in a column for
our clause.

45
00:02:23,440 --> 00:02:27,280
Each clause j gets 2 numbers
that have a 1 in that column.

46
00:02:27,280 --> 00:02:31,761
We'll call them gj and
hj, so thus, g2 and

47
00:02:31,761 --> 00:02:38,530
h2 have a 1 in the column for
c2, and 0s everywhere else.

48
00:02:38,530 --> 00:02:42,780
This allows us to set the desired
number to be 3 in the clause columns.

49
00:02:42,780 --> 00:02:45,980
Given a satisfying assignment,
the corresponding choice of Y and

50
00:02:45,980 --> 00:02:51,480
Z numbers will have at least a 1 in all
the clause columns, but not more than 3.

51
00:02:51,480 --> 00:02:55,740
All the 1s and 2s can be boosted up
by including the g and h numbers.

52
00:02:56,960 --> 00:03:00,660
Note that if some clause is unsatisfied,
then including the g and

53
00:03:00,660 --> 00:03:03,500
h numbers isn't enough
to bring the total to 3.

54
00:03:03,500 --> 00:03:04,490
Because they're only two of them.

55
00:03:05,530 --> 00:03:07,040
So there's the construction.

56
00:03:07,040 --> 00:03:10,150
For each variable include one
of the two variables, Y or

57
00:03:10,150 --> 00:03:13,330
Z, which will correspond
to the truth setting.

58
00:03:13,330 --> 00:03:16,510
And for each clause include g and h, so

59
00:03:16,510 --> 00:03:20,710
as to boost up this total in
the clause column to 3 where needed.

60
00:03:20,710 --> 00:03:23,200
This construction just
involves a few four loops.

61
00:03:23,200 --> 00:03:26,370
So it's easy to see that
the construction of the set of numbers

62
00:03:26,370 --> 00:03:27,290
is polynomial time.
