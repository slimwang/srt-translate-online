1
00:00:00,640 --> 00:00:06,450
Zooming back in to what is going on within a given operating system, we already

2
00:00:06,450 --> 00:00:12,310
know that the process address space for an application is an illusion in the

3
00:00:12,310 --> 00:00:18,300
sense that the virtual memory space of this process is contiguous, but in terms

4
00:00:18,300 --> 00:00:22,320
of physical memory, they are not contiguous.

5
00:00:22,320 --> 00:00:25,870
And the page table data structure that the

6
00:00:25,870 --> 00:00:29,590
operating system maintains, on behalf of the processes.

7
00:00:29,590 --> 00:00:32,439
Is the one that supports this illusion so

8
00:00:32,439 --> 00:00:35,800
far as this process is concerned. By mapping

9
00:00:35,800 --> 00:00:38,430
the virtual page number of the process, using

10
00:00:38,430 --> 00:00:41,440
the page table for this particular process into

11
00:00:41,440 --> 00:00:44,880
the physical page number, where a particular virtual

12
00:00:44,880 --> 00:00:47,530
page may be contained in physical memory. This

13
00:00:47,530 --> 00:00:52,080
is a setting in a non-virtualized operating system.

14
00:00:52,080 --> 00:00:57,590
So the page table serves as the broker to convert a virtual page number to a

15
00:00:57,590 --> 00:01:01,420
physical page number. In a virtualized setting, we

16
00:01:01,420 --> 00:01:05,239
have another level of indirection, that is this

17
00:01:05,239 --> 00:01:08,710
physical page number of the operating system has

18
00:01:08,710 --> 00:01:11,720
to be mapped to the machine memory or

19
00:01:11,720 --> 00:01:14,960
the machine page numbers. We'll call the pages

20
00:01:14,960 --> 00:01:17,280
in the machine memory, which is the real thing,

21
00:01:17,280 --> 00:01:20,770
as MPN, short for Machine Page Numbers. And

22
00:01:20,770 --> 00:01:23,750
this goes from zero through some max, which

23
00:01:23,750 --> 00:01:26,210
is the total memory capacity that you have

24
00:01:26,210 --> 00:01:29,960
in your hardware. This data structure, the page table,

25
00:01:29,960 --> 00:01:32,670
is a traditional page table, that gives a

26
00:01:32,670 --> 00:01:35,370
mapping between virtual page number and the physical

27
00:01:35,370 --> 00:01:37,900
page number. And this is a traditional page

28
00:01:37,900 --> 00:01:42,810
table. The mapping between the physical page number and

29
00:01:42,810 --> 00:01:48,500
the machine page number, that is PPN to MPN mapping, is kept

30
00:01:48,500 --> 00:01:53,295
in another page table, which is called shadow page table,

31
00:01:53,295 --> 00:01:58,054
S-PT. So now, in a virtualized setting, there's a two-step

32
00:01:58,054 --> 00:02:02,864
translation process to go from VPN to MPN. The

33
00:02:02,864 --> 00:02:08,050
page table maintained by the guest operating system is the one

34
00:02:08,050 --> 00:02:13,920
that translates VPN to PPN and then there is this additional page table called a

35
00:02:13,920 --> 00:02:17,580
shadow page table that converts the PPN

36
00:02:17,580 --> 00:02:20,820
to MPN. That brings up an interesting question.
