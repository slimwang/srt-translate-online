1
00:00:00,270 --> 00:00:02,646
Let's see if we can compare the mesh and the

2
00:00:02,646 --> 00:00:05,814
bus throughput, for a small four core system, where the

3
00:00:05,814 --> 00:00:08,850
traffic is evenly distributed so that each core sends a

4
00:00:08,850 --> 00:00:12,778
quarter of all the messages in the system. And the messages

5
00:00:12,778 --> 00:00:15,860
that each core sends are sent round-robin, to all the

6
00:00:15,860 --> 00:00:19,650
other three cores. So if we are core 0, we send

7
00:00:19,650 --> 00:00:22,290
messages to 1, then 2, then 3, then 1, then

8
00:00:22,290 --> 00:00:25,470
2, then 3, etc. If we're core 2, then we send

9
00:00:25,470 --> 00:00:26,910
to 0, 1, 3, 0, 1, 3, etc. And

10
00:00:26,910 --> 00:00:30,410
you can assume that this is totally randomly distributed,

11
00:00:30,410 --> 00:00:33,980
so that, we don't necessarily get any synchronicity among

12
00:00:33,980 --> 00:00:36,850
these accesses, pretty much just like a third of

13
00:00:36,850 --> 00:00:39,230
the traffic sent by each core goes to each

14
00:00:39,230 --> 00:00:41,820
of the other core, but you can assume that,

15
00:00:41,820 --> 00:00:46,006
it happens willy nilly. Each core, sends 10 million

16
00:00:46,006 --> 00:00:50,785
messages per second. The bus, can support 20 million messages

17
00:00:50,785 --> 00:00:53,485
messages per second, the mesh can support

18
00:00:53,485 --> 00:00:56,485
20 million messages per second per link, and

19
00:00:56,485 --> 00:00:59,560
obviously, the four core are going to saturate the

20
00:00:59,560 --> 00:01:02,260
bandwidth, in which case they will have to

21
00:01:02,260 --> 00:01:06,030
slow down proportionally so that. They match

22
00:01:06,030 --> 00:01:08,922
the bandwidth of the bus. The question for

23
00:01:08,922 --> 00:01:15,030
you is, the speed up achieved by switching to the mesh, from the bus is what?
