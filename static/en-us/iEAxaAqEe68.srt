1
00:00:00,000 --> 00:00:04,280
How can you deal with an NP complete problem other than avoiding it.

2
00:00:04,280 --> 00:00:09,590
Well, I think you should think of yourself as kind of a lawyer who has to work with the

3
00:00:09,590 --> 00:00:16,470
laws of NP completeness and the main law of NP completeness is this, unless P=NP,

4
00:00:16,470 --> 00:00:20,940
there will be no polynomial time algorithm for your NP complete problems.

5
00:00:20,940 --> 00:00:23,590
Now, what do good lawyers do with the law.

6
00:00:23,590 --> 00:00:30,910
They find loopholes and that is exactly what we are going to do for this law of NP completeness,

7
00:00:30,910 --> 00:00:34,040
and we're actually be looking at two loopholes.

8
00:00:34,040 --> 00:00:39,530
The loophole that we will be exploring in this unit is using intelligent exponential time algorithms.

9
00:00:39,530 --> 00:00:44,320
We're going to work in exponential time but we're going to do it in a smart way.

10
00:00:44,320 --> 00:00:51,240
We're going to avoid things like 2^n or 3^n, but rather we're going to have algorithm set

11
00:00:51,240 --> 00:00:55,240
for example I have something like 1.3^n, which is already much better

12
00:00:55,240 --> 00:00:57,120
and works for many practical cases.

13
00:00:57,120 --> 00:01:02,600
What we are then going to look at in the next units is what I like to call sloppy solutions.

14
00:01:02,600 --> 00:01:06,310
For all proofs of NP completeness, we always require the computer

15
00:01:06,310 --> 00:01:09,670
to provide the exact answer to our problem.

16
00:01:09,670 --> 00:01:13,800
One chance to circumvent NP completeness might be to say,

17
00:01:13,800 --> 00:01:18,570
"Well, we do not want the best possible solution, but we're happy with say

18
00:01:18,570 --> 00:01:23,490
one that is close to optimal" or for a decision problem for example, we might be saying,

19
00:01:23,490 --> 00:01:27,250
"Well, it's okay if we get the right answer in about 80% of the time."

20
00:01:27,250 --> 00:01:30,360
For each of these approaches, we will discuss the main ideas and also of course,

21
00:01:30,360 --> 00:01:33,530
give you some examples to make them more clear and talk a bit about the theory

22
00:01:33,530 --> 00:01:36,170
behind these approaches because these are techniques where you really have

23
00:01:36,170 --> 00:01:39,300
to understand the theory if you want to be successful in practice.

24
00:01:39,300 --> 99:59:59,999
So let's start out with smart exponential time algorithms.
