1
00:00:00,370 --> 00:00:04,780
So let's talk about some problems
of centralized main memory and

2
00:00:04,780 --> 00:00:07,480
why we may want to do something else.

3
00:00:07,480 --> 00:00:12,010
As we have seen in the previous quiz,
memory size is a problem.

4
00:00:12,010 --> 00:00:13,880
We need a large memory, and

5
00:00:13,880 --> 00:00:19,310
because it's all one big memory,
that one memory will be slow and,

6
00:00:19,310 --> 00:00:23,730
because of its large size, relatively
far away from all of the cores.

7
00:00:23,730 --> 00:00:27,170
We will also have the problem
of memory bandwidth.

8
00:00:27,170 --> 00:00:32,040
Because misses from all
cores go to the one memory.

9
00:00:32,040 --> 00:00:35,620
So the requests from all of
the cores create contention for

10
00:00:35,620 --> 00:00:40,540
memory bandwidth because our big, slow
memory will have a limited bandwidth.

11
00:00:40,540 --> 00:00:42,870
And what that does is it prevents,

12
00:00:42,870 --> 00:00:47,200
really, additional cores from
benefiting our performance.

13
00:00:48,270 --> 00:00:52,800
Because all of the accesses
are really serializing

14
00:00:54,050 --> 00:00:55,660
in the queue waiting for memory.

15
00:00:55,660 --> 00:00:59,740
So if we add more cores,
that just makes every core's accesses

16
00:00:59,740 --> 00:01:02,660
even slower because they have
to wait for memory even longer.

17
00:01:02,660 --> 00:01:05,600
So we don't really get
a performance advantage.

18
00:01:05,600 --> 00:01:10,310
So centralized main memory because
of this problems works well only for

19
00:01:10,310 --> 00:01:15,590
relatively small machines, with
something like 2, 4, 8, maybe 16 cores.

20
00:01:16,830 --> 00:01:21,710
Beyond this, we saturate
the memory bandwidth and also

21
00:01:21,710 --> 00:01:25,970
our memory needs to know the too big and
too slow if we keep it centralized.
