1
00:00:00,012 --> 00:00:02,063
So it turns out these are all true.

2
00:00:02,063 --> 00:00:05,475
All threads from a block can access the same variable in that block's shared memory.

3
00:00:05,475 --> 00:00:07,682
That's what the shared memory is.

4
00:00:07,682 --> 00:00:12,682
It's a chunk of memory that stores variables that are accessible from all threads in a given block,

5
00:00:12,682 --> 00:00:16,644
and threads from 2 different blocks can access the same variable in global memory.

6
00:00:16,644 --> 00:00:18,829
Well all threads from any blocks at any time

7
00:00:18,829 --> 00:00:24,541
can access a variable or piece of data that's sitting in global memory, so this is also true.

8
00:00:24,541 --> 00:00:28,952
Threads from different blocks have their own copy of local variables in local memory; yes, this is true.

9
00:00:28,952 --> 00:00:31,801
So every thread has its own copy of whatever local variables--

10
00:00:31,801 --> 00:00:37,317
private variables to that thread are sitting in local memory, so this is true.

11
00:00:37,317 --> 00:00:40,369
And threads from the same block have their own copy of local variables in local memory.

12
00:00:40,369 --> 00:00:45,148
Right, so just because they're from the same block doesn't mean that they share local variables.

13
00:00:45,148 --> 00:00:49,787
They share shared memory--per block shared memory, but they don't share local memory.

14
00:00:49,787 --> 00:00:53,265
So all 4 of these are true.
