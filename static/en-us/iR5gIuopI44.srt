1
00:00:00,000 --> 00:00:03,000
Welcome to the second problem of Unit 3.

2
00:00:03,000 --> 00:00:06,000
If you thought that the whole situation has started to look grim in the last problem

3
00:00:06,000 --> 00:00:11,000
when we dealt with waning immunity, this time circumstances had become even more dire.

4
00:00:11,000 --> 00:00:13,000
There's no immunity at all.

5
00:00:13,000 --> 00:00:17,000
And so with the typical SIR model, people simply switch back and forth

6
00:00:17,000 --> 00:00:19,000
between susceptible and infected.

7
00:00:19,000 --> 00:00:22,000
We're assuming that more people are lost in the scenario.

8
00:00:22,000 --> 00:00:26,000
So that means that the total number of people which I'm going to call N stays constant.

9
00:00:26,000 --> 00:00:34,000
Since every person is either in the S group or the I group, we know that in any given moment S+I=N.

10
00:00:34,000 --> 00:00:37,000
Here once again are the standard SIR model equations.

11
00:00:37,000 --> 00:00:39,000
You'll need to change this which reflect the new situation

12
00:00:39,000 --> 00:00:42,000
similar to what you have to do in the last problem.

13
00:00:42,000 --> 00:00:45,000
Start by reducing this system at differential equations

14
00:00:45,000 --> 00:00:50,000
to a single equation that contains only I and N but not S.

15
00:00:50,000 --> 00:00:53,000
Then solve this equation numerically using the trapezoidal method,

16
00:00:53,000 --> 00:00:56,000
which in case you forgot I will show you right now.

17
00:00:56,000 --> 00:01:01,000
Remember that the trapezoidal rule finds the value of a quantity after an additional time step

18
00:01:01,000 --> 00:01:05,000
by taking their original quantity and adding to it h times the average

19
00:01:05,000 --> 00:01:08,000
of its rate of change at the two points in consideration.

20
00:01:08,000 --> 00:01:11,000
Now use notation here that probably make sense but just to be clear

21
00:01:11,000 --> 00:01:17,000
x sub-n is just equal to x measured at the n time step

22
00:01:17,000 --> 00:01:22,000
and x do- n is just equal to the time derivative of x at the n time step.

23
00:01:22,000 --> 00:01:26,000
Now once you go through using the trapezoidal method, I want you to solve for S

24
00:01:26,000 --> 00:01:30,000
and then convert your equations for I and S into Python.

25
00:01:30,000 --> 00:01:34,000
Right now the supplied code contains expressions for S and I

26
00:01:34,000 --> 00:01:36,000
that come from the forward Euler method.

27
00:01:36,000 --> 00:01:40,000
Before you fill in the program with the trapezoidal rule run it as it is right now.

28
00:01:40,000 --> 00:01:47,000
Try it first with h set to 10 as it is here and see what happens then change h to equal 0.5,

29
00:01:47,000 --> 00:01:50,000
run the program, and compare the difference between the plots.

30
00:01:50,000 --> 00:01:53,000
When you change the code as we've asked you too, see how each of these

31
00:01:53,000 --> 00:01:56,000
step sizes works with the trapezoidal method instead.

32
00:01:56,000 --> 99:59:59,999
After you're done with everything, set h to 10 and press submit.
