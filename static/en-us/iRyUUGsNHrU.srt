1
00:00:00,190 --> 00:00:00,968
Thanks Sarah.

2
00:00:00,968 --> 00:00:04,580
So I don't want to include the easy mode of my game in master, since I

3
00:00:04,580 --> 00:00:08,050
still want the official version of the game to be the standard difficulty.

4
00:00:08,050 --> 00:00:10,860
But I do want to include all the latest changes from master in

5
00:00:10,860 --> 00:00:12,660
the easy mode branch.

6
00:00:12,660 --> 00:00:15,450
Do to this, I'll first check out the easy mode branch.

7
00:00:15,450 --> 00:00:18,370
So that easy-mode will update whenever I make changes.

8
00:00:19,520 --> 00:00:22,430
Then I run git merge master easy-mode.

9
00:00:22,430 --> 00:00:26,460
Now git alerts me there was a marge conflict in game.js.

10
00:00:26,460 --> 00:00:28,985
This means that both branches, master and

11
00:00:28,985 --> 00:00:32,270
easy-mode changed the same part of game.js.

12
00:00:32,270 --> 00:00:35,670
Just like when Rachel and Jake both modified the same line.

13
00:00:35,670 --> 00:00:37,710
Git can know which changes to keep.

14
00:00:37,710 --> 00:00:40,140
So I'll have to resolve the conflicts.

15
00:00:40,140 --> 00:00:42,950
To resolve the conflict, I need to open game.js and

16
00:00:42,950 --> 00:00:44,340
find where the conflict occurred.

17
00:00:45,600 --> 00:00:48,780
Now git represents conflicts using these special lines, so

18
00:00:48,780 --> 00:00:52,468
I can always find it by searching for a bunch of less than signs in a row.

19
00:00:52,468 --> 00:00:53,480
If I scroll down,

20
00:00:53,480 --> 00:00:57,266
I can see that these lines divides the screen into three sections.

21
00:00:57,266 --> 00:01:00,460
One, two, three.

22
00:01:00,460 --> 00:01:04,610
The top section, marked HEAD is my code.

23
00:01:04,610 --> 00:01:08,770
The bottom section, marked master is the code that's in master right now.

24
00:01:08,770 --> 00:01:12,750
And the middle section is the original version that both branches modified,

25
00:01:12,750 --> 00:01:15,890
which git called the common ancestor.

26
00:01:15,890 --> 00:01:17,940
Now when I'm trying to resolve a merge conflict,

27
00:01:17,940 --> 00:01:22,150
the first thing I do is try to understand what changes both branches have made.

28
00:01:22,150 --> 00:01:23,960
The difference between the middle section and

29
00:01:23,960 --> 00:01:28,030
the top, shows the changes that I made in the easy-mode branch.

30
00:01:28,030 --> 00:01:30,990
If I'd forgotten what those changes were, I can spend a few minutes

31
00:01:30,990 --> 00:01:35,380
comparing and recall that the difference was changing this three to a two.

32
00:01:35,380 --> 00:01:36,630
The difference between the middle and

33
00:01:36,630 --> 00:01:39,040
the bottom shows the changes that were made in master.

34
00:01:39,040 --> 00:01:42,400
And it happens that this particular change was made by Sarah.

35
00:01:42,400 --> 00:01:44,930
It's pretty common when I'm resolving merge conflicts.

36
00:01:44,930 --> 00:01:46,810
That one set of changes will be made by me.

37
00:01:46,810 --> 00:01:48,960
And the other by someone else.

38
00:01:48,960 --> 00:01:51,080
So, I might need to go talk to that person.

39
00:01:51,080 --> 00:01:53,316
But first, I always try to understand what they were doing.

40
00:01:53,316 --> 00:01:55,580
By looking at the changes they made.

41
00:01:55,580 --> 00:01:59,090
Here, it looks like Sarah replaced this entire section of

42
00:01:59,090 --> 00:02:04,210
code with a call to a function called breakIntoFragments.

43
00:02:04,210 --> 00:02:07,640
Now that probably means that she created this function and

44
00:02:07,640 --> 00:02:09,758
moved this code into that function.

45
00:02:09,758 --> 00:02:13,560
Which is a pretty common way to make code more readable by breaking it

46
00:02:13,560 --> 00:02:15,570
up into understandable parts.

47
00:02:15,570 --> 00:02:18,520
Now, I need to find this function that she wrote to see if

48
00:02:18,520 --> 00:02:22,910
she just moved the code over or if she also changed something.

49
00:02:22,910 --> 00:02:24,000
I could search for it.

50
00:02:24,000 --> 00:02:26,370
But in this case, it turns out that it's right up here.

51
00:02:27,430 --> 00:02:30,920
Now it might look like this function existed in both versions.

52
00:02:30,920 --> 00:02:33,960
Since it's not inside the special merge conflict lines.

53
00:02:33,960 --> 00:02:36,990
But actually, that's just because this change didn't create a conflict.

54
00:02:38,000 --> 00:02:41,550
Now after I've spent a few minutes comparing this function to the code that was

55
00:02:41,550 --> 00:02:43,270
removed by Sarah below.

56
00:02:43,270 --> 00:02:46,310
I could see that she didn't make any changes to the code, other than to move it.

57
00:02:47,590 --> 00:02:50,240
Now, how should I reserve this merge conflict?

58
00:02:50,240 --> 00:02:51,490
On the next screen,

59
00:02:51,490 --> 00:02:54,640
rewrite the code to what you think the final version should be.

60
00:02:54,640 --> 00:02:56,870
Make sure to remove all of these special lines.

61
00:02:57,960 --> 00:03:04,240
For example, if I wanted to undo my changes, I could just delete my version and

62
00:03:04,240 --> 00:03:10,760
the original version, as well as these special lines to leave only Sarah's code.

63
00:03:10,760 --> 00:03:13,920
Instead, you should create a version of the code that incorporates both

64
00:03:13,920 --> 00:03:14,460
of our changes
