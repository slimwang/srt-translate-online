1
00:00:00,163 --> 00:00:04,511
And the correct answer is the second and third options.

2
00:00:04,511 --> 00:00:07,793
The first one is not true. Alice can determine the key using

3
00:00:07,793 --> 00:00:12,093
the typical Diffie-Hellman protocol as discussed in the Unit 3

4
00:00:12,093 --> 00:00:14,860
by taking the value G to the power Y and raising

5
00:00:14,860 --> 00:00:18,528
it to the power X. The fourth option is not true; adding the

6
00:00:18,528 --> 00:00:21,483
hash to the message actually increases the size of it.

7
00:00:21,483 --> 00:00:24,009
To see whether second and third options are true, let’s take

8
00:00:24,009 --> 00:00:26,997
a look at what could happen without including the hash.

9
00:00:26,997 --> 00:00:29,833
So Alice picks the value X, calculates G of X and

10
00:00:29,833 --> 00:00:33,453
encrypts G of X with Bob’s public key. She then tries to send

11
00:00:33,453 --> 00:00:36,944
this to Bob. Now, you could intercept the message, then

12
00:00:36,944 --> 00:00:39,865
send a different value to Bob, Bob recalculate the key,

13
00:00:39,865 --> 00:00:43,579
G of X prime Y. Bob would then send G of Y which Mallory

14
00:00:43,579 --> 00:00:46,343
could intercept and send a new value to Alice.

15
00:00:46,343 --> 00:00:49,510
Alice would then calculate a non-sense key and have no

16
00:00:49,510 --> 00:00:53,170
idea that the key she has calculated is worthless. Adding the

17
00:00:53,170 --> 00:00:55,985
hash value of the key to this protocol allows Alice to verify

18
00:00:55,985 --> 00:00:58,800
that she has a valid key that came from Bob and not

19
00:00:58,800 --> 00:01:01,000
from some attacker in the middle.
