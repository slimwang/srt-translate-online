1
00:00:00,000 --> 00:00:05,080
So to give you a more clear understanding about the algorithm that Alice is using,

2
00:00:05,080 --> 00:00:08,160
I'm going to write it down in a sort of pseudo-code.

3
00:00:08,160 --> 00:00:12,000
That means I'm not going to write real Python code or any other programming

4
00:00:12,000 --> 00:00:16,329
language that you're used to but, basically, do a more formal description of this

5
00:00:16,329 --> 00:00:18,410
'trying all possibilities' algorithm.

6
00:00:18,410 --> 00:00:22,040
So the solution that we're looking for is going to be written into a variable

7
00:00:22,040 --> 00:00:23,540
called 'minimum devices.'

8
00:00:23,540 --> 00:00:28,650
And initially to start off the algorithm, we're going to set that variable to the number

9
00:00:28,650 --> 00:00:32,040
of communication centers because that is the maximum number of

10
00:00:32,040 --> 00:00:35,230
monitoring devices that you are going to need in any case.

11
00:00:35,230 --> 00:00:40,370
The algorithm then goes through each assignment of the values 0 and 1 to the

12
00:00:40,370 --> 00:00:41,230
communication centers.

13
00:00:41,230 --> 00:00:46,630
And what I mean by that is a value of 0 means that communication center

14
00:00:46,630 --> 00:00:51,270
does not get a monitoring device, and a 1 means that we are going to install

15
00:00:51,270 --> 00:00:53,770
a monitoring device at that communication center.

16
00:00:53,770 --> 00:00:57,670
The algorithm then checks if the assignment is valid.

17
00:00:57,670 --> 00:01:03,000
And what I mean by valid is that the communication centers that

18
00:01:03,000 --> 00:01:08,170
have a 1 in the assignment are monitoring all the cables in the network.

19
00:01:08,170 --> 00:01:14,000
If we have a valid assignment, the algorithm then computes how many

20
00:01:14,000 --> 00:01:19,490
devices we used in that assignment, which is simply summing all the 1's that are

21
00:01:19,490 --> 00:01:21,440
in the current assignment that we're working on.

22
00:01:21,440 --> 00:01:25,260
The algorithm then checks if the current assignment is a better solution

23
00:01:25,260 --> 00:01:27,460
than the best one we have found so far.

24
00:01:27,460 --> 00:01:32,310
And it does that by taking the minimum of the currently known best solution,

25
00:01:32,310 --> 00:01:35,480
which is 'minimum devices'--here--and the number of devices

26
00:01:35,480 --> 00:01:37,490
in the current assignment.

27
00:01:37,490 --> 00:01:41,020
If you're familiar with algorithms, you might already see a few issues--

28
00:01:41,020 --> 00:01:43,800
even in this pseudo-code--with this algorithm.

29
00:01:43,800 --> 00:01:46,640
But we're going to go into that more deeply in Unit 3, actually.

30
00:01:46,640 --> 99:59:59,999
Right now, we're just going to work with this very simple version here.
