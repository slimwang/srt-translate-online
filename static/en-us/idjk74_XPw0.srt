1
00:00:00,380 --> 00:00:02,710
The answer is the last two only.

2
00:00:02,710 --> 00:00:06,270
For the roommate problem,
we make a vertex for each individual.

3
00:00:06,270 --> 00:00:10,660
And we add an edge between two vertices
if the two individuals are compatible.

4
00:00:11,660 --> 00:00:15,880
We find a max matching and
matched edges become roommates.

5
00:00:15,880 --> 00:00:18,890
This is a great application
of maximum matching.

6
00:00:18,890 --> 00:00:23,230
But, more likely than not there will
be an odd cycle of compatibility,

7
00:00:23,230 --> 00:00:25,810
meaning that the graph is not bipartite.

8
00:00:25,810 --> 00:00:28,970
This changes the nature of
the problem significantly.

9
00:00:28,970 --> 00:00:32,650
The taxi problem on the other
hand is clearly bipartite.

10
00:00:32,650 --> 00:00:35,630
We model the taxis with
one set of vertices and

11
00:00:35,630 --> 00:00:37,460
the customers with the others.

12
00:00:37,460 --> 00:00:40,450
And we want to find
the minimum total pick up time.

13
00:00:40,450 --> 00:00:45,480
We can imagine having edges between
the taxis and customers finding and

14
00:00:45,480 --> 00:00:49,360
matching here, and
adding up all of these times.

15
00:00:49,360 --> 00:00:51,780
The problem here is
the existence of the costs,

16
00:00:51,780 --> 00:00:56,870
which demand a different solution
from just finding a maximum matching.

17
00:00:56,870 --> 00:01:00,730
Assigning professors to classes
is a bipartite matching problem.

18
00:01:00,730 --> 00:01:03,120
One side of the partition
is the professors, and

19
00:01:03,120 --> 00:01:05,489
the other is the classes, and

20
00:01:05,489 --> 00:01:09,940
we include an edge if the professor
is qualified to teach class.

21
00:01:09,940 --> 00:01:13,700
A maximum matching solution then will
allow us to teach as many classes

22
00:01:13,700 --> 00:01:14,800
as possible.

23
00:01:14,800 --> 00:01:16,920
Hopefully, this will be all of them.

24
00:01:16,920 --> 00:01:20,510
The situation with organ donors and
patients is analogous.

25
00:01:20,510 --> 00:01:23,510
We add an edge if the patient
will accept the organ, and

26
00:01:23,510 --> 00:01:26,100
we match as many organs
to the patient as we can.
