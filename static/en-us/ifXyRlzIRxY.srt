1
00:00:01,060 --> 00:00:04,260
Once again, here's the design
we're looking to create.

2
00:00:04,260 --> 00:00:08,527
What's great about this view is that
it uses mostly UI elements we've seen

3
00:00:08,527 --> 00:00:09,060
before.

4
00:00:09,060 --> 00:00:11,570
In order to prevent the number
of complex layouts from growing

5
00:00:11,570 --> 00:00:14,300
explosively, we're going to
take advantage of three Android

6
00:00:14,300 --> 00:00:15,520
layout features.

7
00:00:15,520 --> 00:00:17,240
The first one we've seen before.

8
00:00:17,240 --> 00:00:20,470
The only difference between
a forecast list item on the phone and

9
00:00:20,470 --> 00:00:23,390
on the tablet is padding and
margins around the list items.

10
00:00:23,390 --> 00:00:26,860
Fortunately, it's easy to add
this to the forecast list.

11
00:00:26,860 --> 00:00:30,960
We can use dimensions to give the same
layout more space in tablet layouts.

12
00:00:30,960 --> 00:00:35,720
In forecast list item layout, we can add
a padding dimension to the outer layout.

13
00:00:35,720 --> 00:00:39,710
We use padding here instead of margin
because we just want the content in set.

14
00:00:39,710 --> 00:00:40,580
If we used margin,

15
00:00:40,580 --> 00:00:44,110
the row selector wouldn't be drawn
across the entire list item.

16
00:00:44,110 --> 00:00:47,970
We also use a different dimension for
the space between the two temperatures.

17
00:00:47,970 --> 00:00:49,480
Note that we use both right and

18
00:00:49,480 --> 00:00:52,260
end to make sure that this layout is
ready for right to left mirroring.

19
00:00:53,340 --> 00:00:56,110
So then in our resource's file we
create a dimension that updates

20
00:00:56,110 --> 00:00:58,860
the extra padding and
the space between the two temperatures.

21
00:00:58,860 --> 00:01:00,670
And that layout is updated.

22
00:01:00,670 --> 00:01:03,430
I'm using sw600dp-port.

23
00:01:03,430 --> 00:01:07,100
Which means that these changes will
only be applied Portrait Orientation

24
00:01:07,100 --> 00:01:10,130
with devices and a view sides
with at least a width of 600 dp.

25
00:01:10,130 --> 00:01:14,890
The second thing we take advantage of
is Layout Reuse using the include tag.

26
00:01:14,890 --> 00:01:16,430
We can see that our portrait and

27
00:01:16,430 --> 00:01:19,840
landscape detail fragment
use the same views.

28
00:01:19,840 --> 00:01:22,730
The fragment detail view contains
these included lay outs already.

29
00:01:22,730 --> 00:01:26,520
Note that we can assign new lay out
parameters when we include the lay out.

30
00:01:27,530 --> 00:01:29,310
We're not using this in sunshine.

31
00:01:29,310 --> 00:01:32,150
But we can avoid adding an extra
container when we include the layout by

32
00:01:32,150 --> 00:01:34,900
using the merge tag in
the layout to be included.

33
00:01:34,900 --> 00:01:37,810
Finally, we're going to
continue to make use of Refs.

34
00:01:37,810 --> 00:01:40,930
Refs allow us to make aliases for
resources.

35
00:01:40,930 --> 00:01:43,150
As you can see,
in tablet landscape mode,

36
00:01:43,150 --> 00:01:46,250
the detail view should point to
a vertical version of the view.

37
00:01:46,250 --> 00:01:50,850
We're going to create a Ref that
points to fragment_detail_start and

38
00:01:50,850 --> 00:01:54,720
make sure that it points to the correct
detail fragment for all configurations.

39
00:01:54,720 --> 00:01:56,290
This will come in handy
in the next lecture.
