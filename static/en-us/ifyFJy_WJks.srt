1
00:00:00,230 --> 00:00:02,649
The Java back-end part of the app is independent

2
00:00:02,649 --> 00:00:05,120
of the front-end or the UI. In this case,

3
00:00:05,120 --> 00:00:08,180
the back-end defines endpoint functions and the UI calls

4
00:00:08,180 --> 00:00:10,760
those functions. So we're going to start our explanation of the

5
00:00:10,760 --> 00:00:13,280
code by looking at the definition of the endpoint

6
00:00:13,280 --> 00:00:18,017
functions. So I've opened up HelloWorldEndpoints. It's in, this is

7
00:00:18,017 --> 00:00:21,491
the package and then we've imported the classes that

8
00:00:21,491 --> 00:00:26,090
we need from the spi.config package. SPI basically means endpoint.

9
00:00:26,090 --> 00:00:30,110
So here are the imports that we need to use endpoints. Now here at the top

10
00:00:30,110 --> 00:00:32,223
of the file, it says @Api [UNKNOWN] and

11
00:00:32,223 --> 00:00:36,190
its name equals helloworldendpoints, version equals v1. This

12
00:00:36,190 --> 00:00:38,890
is where we're saying, hey, this file contains

13
00:00:38,890 --> 00:00:43,390
endpoint functions. The description's pretty obvious and then

14
00:00:43,390 --> 00:00:47,280
the client IDs specify which clients are allowed

15
00:00:47,280 --> 00:00:52,540
to use these endpoint functions. Here we specified Constants.WEB_CLIENT_ID,

16
00:00:52,540 --> 00:00:56,480
but actually for now, we don't really care which client uses us. But this one

17
00:00:56,480 --> 00:00:59,960
is important, the API_Explorer. So we've specified

18
00:00:59,960 --> 00:01:04,310
that the API_EXPLORER_CLIENT_ID is allowed to use our

19
00:01:04,310 --> 00:01:08,560
endpoint functions. And if we look at Constants.java, see here,

20
00:01:08,560 --> 00:01:12,842
the WEB_CLIENT_ID, we didn't really set it. But here we did set the

21
00:01:12,842 --> 00:01:20,784
API_EXPLORER_CLIENT_ID. You get this from Constant.API_EXPLORER_CLIENT_ID. And

22
00:01:20,784 --> 00:01:27,700
we get this from the SPI.Constant package. So if you want

23
00:01:27,700 --> 00:01:32,710
API Explorer to be able to access your back-end functions, you do need to enable

24
00:01:32,710 --> 00:01:40,770
the client ID to use API Explorer. Okay, so back here in HelloWorldEndpoints,

25
00:01:40,770 --> 00:01:42,920
we've defined just a couple different endpoints.

26
00:01:42,920 --> 00:01:45,950
They're very, very simple. The first method

27
00:01:45,950 --> 00:01:51,680
is sayHello and we've declared it as an @ApiMethod or an @ApiMethod.

28
00:01:51,680 --> 00:01:56,488
By default, every method inside a file that's been declared

29
00:01:56,488 --> 00:02:01,366
as an @Api is exposed through endpoints. But you can set

30
00:02:01,366 --> 00:02:02,768
the name if you want and the path.

31
00:02:02,768 --> 00:02:06,092
And then the method. So here the sayHello method

32
00:02:06,092 --> 00:02:09,292
simply returns a new instance of the HelloClass

33
00:02:09,292 --> 00:02:11,860
object. We'll look at that in just a second.

34
00:02:11,860 --> 00:02:16,370
And then the next method, sayHelloByName takes an argument,

35
00:02:16,370 --> 00:02:19,250
name, and we've declared it must be named, the

36
00:02:19,250 --> 00:02:22,540
argument must be named name, and we return a

37
00:02:22,540 --> 00:02:25,260
new instance of the HelloClass created with the name

38
00:02:25,260 --> 00:02:28,200
string. That's all these methods do. Basically, they say

39
00:02:28,200 --> 00:02:30,710
hello and they say hello by name. So both

40
00:02:30,710 --> 00:02:34,450
of these methods return an instance of HelloClass. So

41
00:02:34,450 --> 00:02:36,860
let's quickly take a look at HelloClass. And you

42
00:02:36,860 --> 00:02:39,630
see this is a really simple class. Doesn't

43
00:02:39,630 --> 00:02:42,710
import anything. It's just a POJO, plain old Java

44
00:02:42,710 --> 00:02:46,460
object. It has one field message. Has a

45
00:02:46,460 --> 00:02:49,680
default constructor. And it has a constructor that takes

46
00:02:49,680 --> 00:02:52,530
the name and generates a message based on

47
00:02:52,530 --> 00:02:55,530
the name and sets a message. And that's all

48
00:02:55,530 --> 00:02:57,570
it does. Now the reason we need this

49
00:02:57,570 --> 00:03:01,880
class is because endpoint functions can't return string objects.

50
00:03:01,880 --> 00:03:05,140
They have to return objects with fields. Otherwise, we

51
00:03:05,140 --> 00:03:07,520
could probably just define our endpoint functions to return

52
00:03:07,520 --> 00:03:10,030
a string of the message. But since we need

53
00:03:10,030 --> 00:03:14,680
a real object, we're using HelloClass for it. Okay, now

54
00:03:14,680 --> 00:03:16,500
I'm going to run my app. I'm going to run it

55
00:03:16,500 --> 00:03:20,740
on the dev server, on localhost. So this time since

56
00:03:20,740 --> 00:03:24,440
I've already got the configuration, the run configuration setup,

57
00:03:24,440 --> 00:03:27,580
I just go to Run As, and then I choose

58
00:03:27,580 --> 00:03:31,543
Maven build. And I choose the configuration that

59
00:03:31,543 --> 00:03:33,354
I set up earlier and then I choose

60
00:03:33,354 --> 00:03:37,660
OK. Now it going to run it on localhost.

61
00:03:37,660 --> 00:03:40,520
Again, you can go to localhost and see your

62
00:03:40,520 --> 00:03:42,510
app. See the homepage for your app. But

63
00:03:42,510 --> 00:03:44,160
actually, I don't want to do that right now.

64
00:03:44,160 --> 00:03:50,609
I want to go straight to the API Explorer. To get there, you just

65
00:03:50,609 --> 00:03:56,409
add a /_ah/api/explorer.

66
00:03:56,409 --> 00:04:03,648
It's localhost:8080/_ah/api/explorer.

67
00:04:03,648 --> 00:04:08,130
So you see this when you go to the API explorer. You

68
00:04:08,130 --> 00:04:12,460
can click on Services to show the services, and then you can click on

69
00:04:12,460 --> 00:04:16,649
the available API to drill down to see what functions are available.

70
00:04:18,670 --> 00:04:21,110
And we have sayHello and we have sayHelloByName.

71
00:04:21,110 --> 00:04:23,510
And if you recall, these are the two functions

72
00:04:23,510 --> 00:04:27,400
that were defined in HelloWorldEndpoints.java. And you can actually

73
00:04:27,400 --> 00:04:30,370
execute these functions right here in the API Explorer.

74
00:04:30,370 --> 00:04:34,530
So we click sayHello, we say Execute and then

75
00:04:34,530 --> 00:04:36,620
you scroll down and you'll see the request, which

76
00:04:36,620 --> 00:04:39,880
shows the requests that got sent. And you see

77
00:04:39,880 --> 00:04:43,550
the response and you see our response is messages

78
00:04:43,550 --> 00:04:46,740
Hello World. Kind of what we expected. Now let's

79
00:04:46,740 --> 00:04:50,450
go up and try the next one, sayHelloByName. Now, see

80
00:04:50,450 --> 00:04:52,692
here it says name. Remember how we have @name

81
00:04:52,692 --> 00:04:55,221
in our API? Well, this is going to show the name

82
00:04:55,221 --> 00:04:58,184
here, a bit confusing because we have @name and

83
00:04:58,184 --> 00:05:01,313
name, but this is the name argument right here. So

84
00:05:01,313 --> 00:05:04,286
let's enter a name and then we'll execute it.

85
00:05:04,286 --> 00:05:06,985
And again, here is the request, but here is the

86
00:05:06,985 --> 00:05:12,510
response. Hello Lauren. It took the name that we supplied. Okay.

87
00:05:12,510 --> 00:05:15,300
Cool. So now you know how to use the APIs Explorer.
