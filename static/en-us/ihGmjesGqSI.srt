1
00:00:00,520 --> 00:00:02,969
Looking at this graphically, we might see

2
00:00:02,969 --> 00:00:06,400
packets generated at a particular rate and the

3
00:00:06,400 --> 00:00:09,510
packets might be received at slightly different

4
00:00:09,510 --> 00:00:12,470
times, depending on network delay. These types of

5
00:00:12,470 --> 00:00:17,590
delays are the types that we want to avoid when we playout, so if we

6
00:00:17,590 --> 00:00:22,250
wait to receive several packets. And fill the

7
00:00:22,250 --> 00:00:26,220
buffer before we start playing, say to here.

8
00:00:26,220 --> 00:00:29,300
Then, we can have a playout schedule

9
00:00:29,300 --> 00:00:32,439
that is smooth, regardless of the erratic arrival

10
00:00:32,439 --> 00:00:35,790
times that may result from network delays. So

11
00:00:35,790 --> 00:00:39,340
this playout delay or buffering allows the client

12
00:00:39,340 --> 00:00:42,130
to achieve a smooth playout. Some delay

13
00:00:42,130 --> 00:00:44,720
at the beginning of the playout is acceptable.

14
00:00:44,720 --> 00:00:47,600
Startup delays of a few seconds are things

15
00:00:47,600 --> 00:00:51,430
that users can typically tolerate, but clients cannot

16
00:00:51,430 --> 00:00:58,010
tolerate high variation in packet arrivals if the buffer starves or if there

17
00:00:58,010 --> 00:01:03,150
aren't enough packets in the buffer. Similarly, small amount of loss or missing

18
00:01:03,150 --> 00:01:08,250
data does not disrupt the playback but retransmitting a lost packet, might

19
00:01:08,250 --> 00:01:13,290
actually take too long and result in delays or starvation of the playout buffer.
