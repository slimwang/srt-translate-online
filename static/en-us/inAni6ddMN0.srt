1
00:00:00,000 --> 00:00:03,000
In the case where the occlusion costs are low,

2
00:00:03,000 --> 00:00:08,000
it is best to assume that those Bs over here correspond as indicated.

3
00:00:08,000 --> 00:00:10,000
That means we have an occlusion cost to pay over here

4
00:00:10,000 --> 00:00:12,000
and an occlusion cost to pay over here.

5
00:00:12,000 --> 00:00:16,000
Our total cost is 20 for 2 occlusions, but we have a perfect match.

6
00:00:16,000 --> 00:00:19,000
As a result, this B moves over here.

7
00:00:19,000 --> 00:00:22,000
However, there is another viable solution when the occlusion costs are large,

8
00:00:22,000 --> 00:00:25,000
because you would pay a total of 200 with the occlusion cost.

9
00:00:25,000 --> 00:00:29,000
If we match pixel one to one like this, then you get two mismatches--

10
00:00:29,000 --> 00:00:31,000
one over here and one over here.

11
00:00:31,000 --> 00:00:33,000
The cost of those in total are 40.

12
00:00:33,000 --> 00:00:37,000
That is still smaller than the 200 occlusion cost we had before.

13
00:00:37,000 --> 00:00:39,000
Therefore the B gets matched to this point over here.

14
00:00:39,000 --> 00:00:42,000
Notice how the different occlusion costs give different results

15
00:00:42,000 --> 99:59:59,999
for the correspondence program in this dynamic programming question.
