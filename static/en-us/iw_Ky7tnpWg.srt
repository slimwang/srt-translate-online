1
00:00:00,110 --> 00:00:04,059
So let's dig a little deeper into sort
of how we're going to implement some of

2
00:00:04,059 --> 00:00:06,040
those functions, or those features.

3
00:00:06,040 --> 00:00:09,288
First of all, we have to protect
the data that is used by the operating

4
00:00:09,288 --> 00:00:11,482
system, or
the transferred computing base.

5
00:00:11,482 --> 00:00:13,664
It must protect itself.

6
00:00:13,664 --> 00:00:17,650
Remember, one of the requirements we
had is that it should be tamper proof.

7
00:00:17,650 --> 00:00:20,220
So, no one should be
able to tamper with it.

8
00:00:20,220 --> 00:00:23,570
And that's only possible when
it is able to protect itself,

9
00:00:23,570 --> 00:00:25,730
against that kind of tampering.

10
00:00:25,730 --> 00:00:28,660
So let's talk about some
security features of

11
00:00:28,660 --> 00:00:31,610
the trusted operating
systems that you have,

12
00:00:31,610 --> 00:00:36,000
in terms of protecting data and
other kind of resources.

13
00:00:36,000 --> 00:00:38,270
So one thing that we address
in these kinds of systems,

14
00:00:38,270 --> 00:00:41,130
is what is called object
reuse protection.

15
00:00:41,130 --> 00:00:46,107
Think of various kinds of objects or
resources, a memory pages, for example.

16
00:00:46,107 --> 00:00:47,199
Disk blocks.

17
00:00:47,199 --> 00:00:51,331
And so what happens when you allocate
a memory page to one process.

18
00:00:51,331 --> 00:00:53,651
That process completes and
then goes away, and

19
00:00:53,651 --> 00:00:56,209
then that page is allocated
to a different process.

20
00:00:56,209 --> 00:01:00,082
But what happens if that page had
some sensitive data that belonged to

21
00:01:00,082 --> 00:01:01,390
the first process?

22
00:01:01,390 --> 00:01:05,330
This also applies to disk blocks for
persistent data.

23
00:01:05,330 --> 00:01:10,140
When a file is deleted, we may free up
certain blocks where the file data was

24
00:01:10,140 --> 00:01:14,390
stored, and these free blocks are free
to be assigned to somebody else.

25
00:01:14,390 --> 00:01:17,208
And they could be, but there may
be data already in these blocks.

26
00:01:17,208 --> 00:01:18,415
In fact, there is.

27
00:01:18,415 --> 00:01:23,086
The one thing we can do, if we
are concerned about having trust in

28
00:01:23,086 --> 00:01:28,190
the system, is that when a process
is allocating either disk blocks or

29
00:01:28,190 --> 00:01:31,477
memory, then we should
be aware of the fact,

30
00:01:31,477 --> 00:01:36,790
that something could be left behind
in these reusable resources.

31
00:01:36,790 --> 00:01:39,770
Well, what can we do if
something is left behind?

32
00:01:39,770 --> 00:01:41,557
If this the system is trusted,

33
00:01:41,557 --> 00:01:44,800
it can zero out these object
before they get reused.

34
00:01:44,800 --> 00:01:49,000
So before the memory block is given
to the new process, we make sure that

35
00:01:49,000 --> 00:01:52,640
it doesn't haven access to the data
that was stored in that memory block or

36
00:01:52,640 --> 00:01:54,590
page by the last process.

37
00:01:54,590 --> 00:01:56,370
We can zero it out.

38
00:01:56,370 --> 00:02:01,890
If we're talking about a file deletion,
or data that's written out in the disk,

39
00:02:01,890 --> 00:02:05,330
we can override it with various
patterns of zeros and ones.

40
00:02:05,330 --> 00:02:07,870
And we have secure deletion,
for example.

41
00:02:07,870 --> 00:02:12,796
And that's basically writing it one or
more times with some garbage, random

42
00:02:12,796 --> 00:02:17,744
zeroes and ones, to make sure that all
data that was there is no longer there.

43
00:02:17,744 --> 00:02:20,402
And you can sort of carry it
even further for example,

44
00:02:20,402 --> 00:02:23,237
when you discard your disk,
do you actually destroy it,

45
00:02:23,237 --> 00:02:26,034
do you degauss it, or
you can do physical destruction.

46
00:02:26,034 --> 00:02:30,786
Because one of the things order a number
of years ago, a bunch of students at MIT

47
00:02:30,786 --> 00:02:35,322
actually went to some place, and bought
some old PCs at almost no cost, and

48
00:02:35,322 --> 00:02:38,274
then pulled out the discs
in those machines, and

49
00:02:38,274 --> 00:02:40,941
they contained all
kind of sensitive data.

50
00:02:40,941 --> 00:02:44,867
Because even if you, either people
don't delete files, even if you delete,

51
00:02:44,867 --> 00:02:48,139
if you're not doing some of these
things that we discussed here,

52
00:02:48,139 --> 00:02:51,790
which a trusted system should do,
the data would still be there.

53
00:02:51,790 --> 00:02:54,190
And if the disk gets in
the hands of somebody else,

54
00:02:54,190 --> 00:02:57,060
then they will be able to sort
of gain access to the data.

55
00:02:57,060 --> 00:02:59,820
So if you're building a secure system,

56
00:02:59,820 --> 00:03:03,960
you have to worry about this idea
of reuse of objects or resources.

57
00:03:03,960 --> 00:03:09,120
In particular, memory objects,
disk blocks, and how information that's

58
00:03:09,120 --> 00:03:13,800
stored in them by a given process of
the system has to be wiped clean,

59
00:03:13,800 --> 00:03:17,550
before those resources
are re-allocated to somebody else.
