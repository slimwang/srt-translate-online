1
00:00:00,000 --> 00:00:03,310
All right, so let's see if we can refine that a little bit.

2
00:00:03,310 --> 00:00:08,970
We've already implemented from the last question a very naive vertex cover algorithm

3
00:00:08,970 --> 00:00:12,960
that will basically check every single possible cover.

4
00:00:12,960 --> 00:00:17,620
Now, let's improve that by instead of checking just one vertex v,

5
00:00:17,620 --> 00:00:21,460
let's check two vertices--u and v that are still not assigned.

6
00:00:21,460 --> 00:00:25,050
Now, if no two such vertices can be found, we simply output the size

7
00:00:25,050 --> 00:00:28,010
of the vertex cover implied by the current assignment.

8
00:00:28,010 --> 00:00:33,610
Now, there may still be vertices that are unassigned, but as we've discussed in the unit,

9
00:00:33,610 --> 00:00:37,840
there's a very straightforward way to tell if this should count as 1 or 0.

10
00:00:37,840 --> 00:00:42,570
If you're confused about this thing, I'd recommend going back and looking over the unit.

11
00:00:42,570 --> 00:00:50,880
What I'd like you to do then is simply add un right here and it starts off as just setting u=-1

12
00:00:50,880 --> 00:00:58,740
and then add un to the logic here wherever you would then normally be just manipulating v.

13
00:00:58,740 --> 00:01:03,600
So you don't have to do a little bit of changing things around to check for other vertices

14
00:01:03,600 --> 00:01:06,620
that are still unassigned and that's going to be a little complicated

15
00:01:06,620 --> 00:01:10,020
but most of these should be relatively straightforward.

16
00:01:10,020 --> 99:59:59,999
So okay. Good luck and I hope you have fun with us.
