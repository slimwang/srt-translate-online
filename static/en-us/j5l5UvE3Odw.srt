1
00:00:00,120 --> 00:00:02,650
Okay, let's look at a couple more operators. I'm going to switch over

2
00:00:02,650 --> 00:00:04,830
and use the Mongo shell for some of this. This is a

3
00:00:04,830 --> 00:00:08,119
console application that ships with the database, and it provides a great

4
00:00:08,119 --> 00:00:12,330
interface for exploring MongoDB's query language. So, the first thing that I

5
00:00:12,330 --> 00:00:15,120
need to do is switch into the right database which I've already

6
00:00:15,120 --> 00:00:18,836
done here with use examples. Now I'm just going to do a find

7
00:00:18,836 --> 00:00:21,146
against the whole collection and we see a whole bunch of documents

8
00:00:21,146 --> 00:00:25,388
scroll by. Okay, so as we've discussed, some documents will contain fields

9
00:00:25,388 --> 00:00:29,270
that others do not. In our cities' collection, for many

10
00:00:29,270 --> 00:00:32,560
cities, especially those that are less important or simply smaller, much

11
00:00:32,560 --> 00:00:35,588
of the detail is missing. For example, a small town

12
00:00:35,588 --> 00:00:37,830
in the U.S. state of Iowa where I used to live

13
00:00:37,830 --> 00:00:40,190
is going to have much less detail than let's say

14
00:00:40,190 --> 00:00:43,543
Berlin, London, or other major cities. Mongo DB allows you to

15
00:00:43,543 --> 00:00:47,503
query based on the structure of information that's in the documents,

16
00:00:47,503 --> 00:00:50,410
as well as their values. So let's take a look at

17
00:00:50,410 --> 00:00:53,630
an example. So I happen to know that relatively few

18
00:00:53,630 --> 00:00:57,470
documents have a field for government type. It's useful to

19
00:00:57,470 --> 00:00:59,850
know what type of government a particular city has, but

20
00:00:59,850 --> 00:01:01,960
it's only the larger cities that tend to have this

21
00:01:01,960 --> 00:01:05,870
field. MongoDB provides an operator called Exists that allows us

22
00:01:05,870 --> 00:01:08,790
to retrieve documents based on whether or not documents contain

23
00:01:08,790 --> 00:01:12,450
a particular field. And the value for Exists is whether

24
00:01:12,450 --> 00:01:16,330
we want documents that contain the field, or those that don't.

25
00:01:16,330 --> 00:01:18,890
In this case, I want to find documents that do

26
00:01:18,890 --> 00:01:21,630
have a governmentType field. Oop and you see what

27
00:01:21,630 --> 00:01:24,430
happened there is I forgot to close the query

28
00:01:24,430 --> 00:01:28,750
document. So, let's go back and do that, and there

29
00:01:28,750 --> 00:01:32,350
we go. And let's do a count here. And

30
00:01:32,350 --> 00:01:35,550
of the 20,000 documents in this collection, a relatively

31
00:01:35,550 --> 00:01:38,520
small number contain this field. We can do the

32
00:01:38,520 --> 00:01:42,010
inverse query and see we get a much larger number.

33
00:01:42,010 --> 00:01:44,140
Let's take a look at one of these documents. Here

34
00:01:44,140 --> 00:01:46,180
I'm going to use pretty to make it more human readable.

35
00:01:47,920 --> 00:01:49,570
Okay, so let's go back to the documents that actually

36
00:01:49,570 --> 00:01:55,680
contain this field. And again I'll make em pretty. Okay,

37
00:01:55,680 --> 00:01:57,770
so this happens to be the city of Lansing, Michigan,

38
00:01:57,770 --> 00:01:59,230
and you can see there's a quite a bit of

39
00:01:59,230 --> 00:02:02,770
detail here. Okay. Now, what we can do is contrast

40
00:02:02,770 --> 00:02:07,180
this with documents that don't have this field, and it just

41
00:02:07,180 --> 00:02:09,930
happens to be the case that this document

42
00:02:09,930 --> 00:02:14,470
is conveniently, for example purposes, much more sparse. So

43
00:02:14,470 --> 00:02:16,830
the Exists Operator allows us to do queries and

44
00:02:16,830 --> 00:02:18,970
asks some questions about the structure of a document.
