1
00:00:00,000 --> 00:00:04,000
[Norvig] It looks like that means that we're going to have to use something more complicated

2
00:00:04,000 --> 00:00:08,000
than just this ranking from 0 to 8.

3
00:00:08,000 --> 00:00:11,000
I'm going to propose a couple possibilities.

4
00:00:11,000 --> 00:00:19,000
One possibility would be to continue to return integers but to use bigger ones.

5
00:00:19,000 --> 00:00:23,000
So let's take an example of what we want to compare.

6
00:00:23,000 --> 00:00:26,000
Let's say we have 2 hands that are 4 of a kind.

7
00:00:26,000 --> 00:00:35,000
One has four 9s and a 5, and the other one has four 3s and a 2.

8
00:00:35,000 --> 00:00:39,000
We want this hand to rank higher.

9
00:00:39,000 --> 00:00:45,000
Under the old formulation, they would both be ranked as a 7

10
00:00:45,000 --> 00:00:50,000
because 7 is the rank for 4 of a kind.

11
00:00:50,000 --> 00:00:55,000
So if we want to change that to use a different type of result,

12
00:00:55,000 --> 00:00:59,000
we could use integers and we could say,

13
00:00:59,000 --> 00:01:11,000
let's say, 70905 and 70302,

14
00:01:11,000 --> 00:01:20,000
so the 9 and the 5 to represent that this is 4 of a kind of 9s with a 5 left over

15
00:01:20,000 --> 00:01:24,000
and the 3 and the 2 to say it's 4 of a kind of 3s with a 2 left over.

16
00:01:24,000 --> 00:01:27,000
We could use real numbers.

17
00:01:27,000 --> 00:01:36,000
We could say 7.0905 or 7.0302.

18
00:01:36,000 --> 00:01:39,000
Another possibility is we could use tuples.

19
00:01:39,000 --> 00:01:51,000
We could use 7, 9, 5 versus 7, 3, 2.

20
00:01:51,000 --> 00:01:54,000
A tuple is just like a list,

21
00:01:54,000 --> 00:02:02,000
except it can't be modified and it has a slightly different set of operations associated with it.

22
00:02:02,000 --> 00:02:08,000
But basically, it just means a grouping of 3 values in this case.

23
00:02:08,000 --> 00:02:15,000
What I want you to tell me is out of these 3 possibilities,

24
00:02:15,000 --> 00:02:21,000
which one of them would work at all

25
00:02:21,000 --> 00:02:26,000
and which one of them seems best in terms of being most convenient

26
00:02:26,000 --> 99:59:59,999
and easy to work with within our program?
