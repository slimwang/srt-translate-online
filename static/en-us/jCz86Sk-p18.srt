1
00:00:00,410 --> 00:00:02,980
But let's presume you really need a raster image

2
00:00:02,980 --> 00:00:05,590
because some things just can't be represented well by a

3
00:00:05,590 --> 00:00:09,250
vector drawing. This is a 21 megapixel photo of my

4
00:00:09,250 --> 00:00:13,870
cat. Obviously, you probably really don't need that resolution pushed

5
00:00:13,870 --> 00:00:16,239
down to a mobile device if I'm just writing

6
00:00:16,239 --> 00:00:18,760
a blog post about my cat. This is a 4

7
00:00:18,760 --> 00:00:21,440
megabyte image after all. So what should we do with

8
00:00:21,440 --> 00:00:25,670
this image to deliver it to different devices? Your first

9
00:00:25,670 --> 00:00:28,480
option is to kind of cheat. You can always

10
00:00:28,480 --> 00:00:32,509
deliver a high resolution but low quality encoding

11
00:00:32,509 --> 00:00:34,970
everywhere. That is, give this same image to

12
00:00:34,970 --> 00:00:37,940
all devices. That's a higher resolution, a 2x

13
00:00:37,940 --> 00:00:40,960
image for example. But lower the quality in

14
00:00:40,960 --> 00:00:43,600
the jpeg encoder to 20 rather than 90.

15
00:00:44,630 --> 00:00:47,100
This typically can result in a 2X image

16
00:00:47,100 --> 00:00:50,950
that will look better than an uncompressed 1X image.

17
00:00:50,950 --> 00:00:53,170
And you'll notice at the same time, it actually has

18
00:00:53,170 --> 00:00:56,660
a smaller file size. Using this technique will work well

19
00:00:56,660 --> 00:00:59,700
in many cases. But it does come at a cost.

20
00:00:59,700 --> 00:01:02,910
The browser also needs to spend some time decompressing the

21
00:01:02,910 --> 00:01:05,940
image, and on a 1x device, it needs to scale

22
00:01:05,940 --> 00:01:08,870
the image by 50% to fit it into the available

23
00:01:08,870 --> 00:01:12,731
pixels. You can also start to see some color [INAUDIBLE]

24
00:01:12,731 --> 00:01:16,090
and some gradients using this approach. Sure, lower pixel count

25
00:01:16,090 --> 00:01:20,410
devices will get a bigger image than they need But not too much more data since

26
00:01:20,410 --> 00:01:23,200
it's low quality. In higher pixel count devices,

27
00:01:23,200 --> 00:01:25,480
we'll get the right size. Although they will get

28
00:01:25,480 --> 00:01:27,410
a slightly lower quality image than they would

29
00:01:27,410 --> 00:01:31,140
normally want. This option isn't great, but it's definitely

30
00:01:31,140 --> 00:01:34,140
better than only serving low pixel count art.

31
00:01:34,140 --> 00:01:36,990
Or serving only high pixel count to all devices.
