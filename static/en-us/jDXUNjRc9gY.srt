1
00:00:00,000 --> 00:00:02,000
Precedence and associativity were not so tough,

2
00:00:02,000 --> 00:00:06,000
which is convenient because they're also super easy in Python.

3
00:00:06,000 --> 00:00:09,000
For our parser, in Python, we can just write out a table:

4
00:00:09,000 --> 00:00:12,000
a single variable, called Precedence,

5
00:00:12,000 --> 00:00:15,000
that lists lower precedence operators at the top

6
00:00:15,000 --> 00:00:17,000
and higher precedence operators at the bottom.

7
00:00:17,000 --> 00:00:19,000
And I know what you're thinking: this is totally reversed--

8
00:00:19,000 --> 00:00:23,000
and you're exactly right, but it's not the first thing we've grown

9
00:00:23,000 --> 00:00:26,000
upside down in computer science programming languages.

10
00:00:26,000 --> 00:00:30,000
So lower precedence operators that bind very weakly--up here at the top;

11
00:00:30,000 --> 00:00:34,000
higher precedence operators that you have to do first--down here at the bottom.

12
00:00:34,000 --> 00:00:38,000
And we can also indicate their associativity at the same time.

13
00:00:38,000 --> 00:00:41,000
So we're going to have our precedence and associativity.

14
00:00:41,000 --> 00:00:44,000
This says that Times and Divide are both left-associative

15
00:00:44,000 --> 00:00:46,000
and they're very high precedence.

16
00:00:46,000 --> 00:00:49,000
Plus and Minus are both left-associative and they're lower precedence.

17
00:00:49,000 --> 00:00:51,000
And then our parser will automatically

18
00:00:51,000 --> 99:59:59,999
get rid of the ambiguity for us by using these rules.
