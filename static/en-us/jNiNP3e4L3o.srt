1
00:00:00,630 --> 00:00:03,750
There are three cardinal
properties of frames.

2
00:00:03,750 --> 00:00:06,510
The first property is that
frames represents stereotypes.

3
00:00:07,760 --> 00:00:09,327
Now we all know about stereotypes.

4
00:00:09,327 --> 00:00:11,231
We deal with stereotypes all the time.

5
00:00:11,231 --> 00:00:14,675
Here's a stereotype for
the world eat or ate.

6
00:00:16,495 --> 00:00:19,515
And this particular stereotype,
the slots are dealing with our

7
00:00:19,515 --> 00:00:24,210
stereotypical, my stereotypical notion
of what happens when something is eaten.

8
00:00:24,210 --> 00:00:26,365
There is a subject and it is a frog.

9
00:00:26,365 --> 00:00:27,805
There is a location.
There is a time.

10
00:00:29,265 --> 00:00:30,614
You may have a different
set of stereotypes.

11
00:00:30,614 --> 00:00:34,465
In fact, stereotypes often
are very culture specific.

12
00:00:34,465 --> 00:00:37,320
Second, frames provide default values.

13
00:00:38,400 --> 00:00:41,310
So not only do they have these
slots which come from other notions

14
00:00:41,310 --> 00:00:44,000
of a stereotype of this particular word,
but

15
00:00:44,000 --> 00:00:46,500
many of these slots may have
values already filled in.

16
00:00:47,660 --> 00:00:51,367
As an example, I may already
have a default value which says

17
00:00:51,367 --> 00:00:55,161
that after the object has been eaten,
it is no longer alive.

18
00:00:55,161 --> 00:00:59,590
It is inside the subject's stomach,
and the subject's mood is now happy.

19
00:00:59,590 --> 00:01:01,830
There are our default values.

20
00:01:01,830 --> 00:01:05,480
Of course, when you have default,
you can also have exceptions to them.

21
00:01:05,480 --> 00:01:08,926
As an example,
it may be that when Ashok ate a frog,

22
00:01:08,926 --> 00:01:12,707
it made him sad because frogs
don't suit him very well.

23
00:01:12,707 --> 00:01:17,140
Now the exception handling is
both very powerful and a problem.

24
00:01:17,140 --> 00:01:21,110
It is powerful because I can have
stereotypes or default values, and

25
00:01:21,110 --> 00:01:23,110
when needed,
I can override the default values.

26
00:01:24,460 --> 00:01:27,261
But it's also a problem,
because you can see what will happen.

27
00:01:27,261 --> 00:01:28,828
The more instances that I have,

28
00:01:28,828 --> 00:01:31,859
the more times where I'll be
overriding some default value.

29
00:01:31,859 --> 00:01:32,517
And then I have to

30
00:01:32,517 --> 00:01:36,030
go to worry about how to manage
all of this exceptional handling.

31
00:01:36,030 --> 00:01:40,230
Nevertheless, frames provide a very nice
way of capturing both default values and

32
00:01:40,230 --> 00:01:41,760
exception handling.

33
00:01:41,760 --> 00:01:46,130
The third cardinal property of frames
is that they exhibit inheritance.

34
00:01:46,130 --> 00:01:49,360
So I can organize this
frames in a frame hierarchy.

35
00:01:49,360 --> 00:01:51,350
Here is a frame for an animal, and

36
00:01:51,350 --> 00:01:56,050
then, that has two subclasses, a frame
for an ant and a frame for a human.

37
00:01:56,050 --> 00:01:59,380
Note, I'm using the language of
classes and subclasses here.

38
00:01:59,380 --> 00:02:04,633
Now inheritance works, in that I may
have some slot for the class animal,

39
00:02:04,633 --> 00:02:10,411
and then, I may specify for the ant more
specific values for some of those slots.

40
00:02:10,411 --> 00:02:14,358
For example, number of legs is six or
the number of arms is zero.

41
00:02:14,358 --> 00:02:17,554
But, the important thing is that
I inherited these slots from

42
00:02:17,554 --> 00:02:18,608
the super-class.

43
00:02:18,608 --> 00:02:21,290
Of course,
when I specify the sub-classes,

44
00:02:21,290 --> 00:02:26,070
when I go down this frame hierarchy,
I may keep on adding additional slots.

45
00:02:26,070 --> 00:02:29,282
So for a human man,
we may also add the job and the name.

46
00:02:29,282 --> 00:02:32,179
There's classes then we have instances,

47
00:02:32,179 --> 00:02:37,176
as an example, Ashock is the name of
the person and the job is a professor.

48
00:02:37,176 --> 00:02:41,541
And so, this instance is also
inheriting all these slots and

49
00:02:41,541 --> 00:02:44,360
the slot values from the class.

50
00:02:44,360 --> 00:02:47,522
>> We can also see that when the frames
provide default values, that's very

51
00:02:47,522 --> 00:02:50,939
similar to a constructor when we're
dealing with object oriented programming

52
00:02:50,939 --> 00:02:54,115
that supplies some initial values
when an object is first instantiated.

53
00:02:54,115 --> 00:02:57,170
So it seems like there's actually a very
rich connection between classes and

54
00:02:57,170 --> 00:02:58,690
frames here.

55
00:02:58,690 --> 00:03:00,102
>> David, that's a very good point.

56
00:03:00,102 --> 00:03:02,423
In fact, there is a history to it.

57
00:03:02,423 --> 00:03:07,032
Frames and object-oriented
programming came about the same time,

58
00:03:07,032 --> 00:03:09,343
the 1960s and the 1970s.

59
00:03:09,343 --> 00:03:12,540
And I'm sure they influenced
each other in both directions.
