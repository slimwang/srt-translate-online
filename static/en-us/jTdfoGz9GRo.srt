1
00:00:00,330 --> 00:00:03,180
The way we do that for what's called key point localization and,

2
00:00:03,180 --> 00:00:05,870
and key point and interest points are used similarly, key point was

3
00:00:05,870 --> 00:00:08,870
the term used by David Lowe and Sift, we'll talk about that in a minute.

4
00:00:09,990 --> 00:00:11,910
Here is the general idea.

5
00:00:11,910 --> 00:00:16,329
We want to find robust extremus so

6
00:00:16,329 --> 00:00:19,560
maximums, by the way, you can also find minimum, so if you remember for

7
00:00:19,560 --> 00:00:24,360
the the Laplacian, it goes through zero, goes positive to negative.

8
00:00:24,360 --> 00:00:25,650
So we've took the absolute value of that,

9
00:00:25,650 --> 00:00:29,280
say the square, the value that's zero is a good point.

10
00:00:29,280 --> 00:00:37,090
Anyway you want to find robust maxima and minima in both space and scale.

11
00:00:37,090 --> 00:00:38,080
So that's what's drawn here.

12
00:00:38,080 --> 00:00:39,960
We haven't talked a lot about scale space.

13
00:00:39,960 --> 00:00:42,630
But the idea is, you know, I have an image, and

14
00:00:42,630 --> 00:00:45,580
then I could filter that image again and I could filter it some more and

15
00:00:45,580 --> 00:00:48,400
you can think of it as a coarser and coarser scale.

16
00:00:48,400 --> 00:00:50,630
And, I have some point.

17
00:00:50,630 --> 00:00:53,760
And you can think of that point as having neighbors to the left and right.

18
00:00:53,760 --> 00:00:56,470
And you can also think of that point as having neighbors up and

19
00:00:56,470 --> 00:00:59,820
down in scale, and that's referred to as scale space.

20
00:00:59,820 --> 00:01:03,920
A specific way of using that scale space was suggested by David Lowe in

21
00:01:03,920 --> 00:01:08,140
the SIFT paper, but at that point there was specific suggestion of.

22
00:01:08,140 --> 00:01:10,490
Do this difference of gallium pyramid?

23
00:01:10,490 --> 00:01:14,360
What I mean by that is you do it at different scales and over space and

24
00:01:14,360 --> 00:01:17,830
find maximum values in all of those.

25
00:01:17,830 --> 00:01:21,700
Now, sometimes you might long, land along edges.

26
00:01:21,700 --> 00:01:25,070
Okay. So your on a maximum value but it's really just a maximum along an edge.

27
00:01:25,070 --> 00:01:28,230
So what you have to do is you have to eliminate the edge points.

28
00:01:28,230 --> 00:01:31,777
In fact, if you recall we first introduced Laplacian or

29
00:01:31,777 --> 00:01:33,742
Gaussian to find edge points.

30
00:01:33,742 --> 00:01:36,830
Right? Even though it was a circular symmetric operator you're able to

31
00:01:36,830 --> 00:01:38,190
find these edges.

32
00:01:38,190 --> 00:01:43,140
So from way back, from the Harris who said well edges aren't so good for

33
00:01:43,140 --> 00:01:47,640
finding you know, specific locations we want it to be more like a corner.

34
00:01:47,640 --> 00:01:50,970
So basically what you would want to do is, you would want to find points that

35
00:01:50,970 --> 00:01:56,670
have these extreme values, then make sure that, you know, the thresholded, that

36
00:01:56,670 --> 00:02:01,320
they were ex, extreme enough, if you will, and then make sure they're not edges.

37
00:02:01,320 --> 00:02:05,830
So here is a particular method by which it was done and

38
00:02:05,830 --> 00:02:08,580
I, I show you this so you can take a look at the results in a minute.

39
00:02:08,580 --> 00:02:12,640
Basically what was done, was you take your image and

40
00:02:12,640 --> 00:02:16,130
you deal with it an octave at a time, and an octave is a doubling.

41
00:02:16,130 --> 00:02:19,130
So what you do is you make it blurrier and blurrier and blurrier and

42
00:02:19,130 --> 00:02:23,810
blurrier, then you take half, then you reduce that down to half the size, and

43
00:02:23,810 --> 00:02:26,100
make it blurrier and blurrier and blurrier and blurrier, and

44
00:02:26,100 --> 00:02:30,220
what you do is you subtract these off to get your difference of Gaussian images.

45
00:02:31,710 --> 00:02:36,630
Then, within each one of these Gaussian images, you're going to compare a pixel

46
00:02:36,630 --> 00:02:41,240
and in fact, if I go back to this picture here, I'm going to compare this

47
00:02:41,240 --> 00:02:46,210
pixel to each of its eight neighbors and each are in the same plane, and

48
00:02:46,210 --> 00:02:49,340
there are nine neighbors above it and nine neighbors below it.

49
00:02:49,340 --> 00:02:52,850
And if you're a maximum of that, you're going to say aha, I'm an extrema.
