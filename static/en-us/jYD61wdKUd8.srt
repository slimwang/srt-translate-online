1
00:00:00,000 --> 00:00:04,000
[Evans] So rather than speculate on why that is, this brings us to the end of Unit 2.

2
00:00:04,000 --> 00:00:09,000
Our main focus for Unit 2 was how to use symmetric encryption to solve problems.

3
00:00:09,000 --> 00:00:11,000
For the first part we focused on this key,

4
00:00:11,000 --> 00:00:15,000
the need to generate a random key, which is a very hard problem,

5
00:00:15,000 --> 00:00:17,000
and we saw that we could use physical randomness

6
00:00:17,000 --> 00:00:20,000
if we had enough available to do this,

7
00:00:20,000 --> 00:00:23,000
but there's no way mechanically to produce a perfectly random key.

8
00:00:23,000 --> 00:00:27,000
But we could use a pseudo-random number generator built using encryption

9
00:00:27,000 --> 00:00:31,000
to take a small amount of random data and amplify that

10
00:00:31,000 --> 00:00:34,000
to produce more pseudo-random data.

11
00:00:34,000 --> 00:00:39,000
We saw how to use a symmetric cipher to take a small amount of random data

12
00:00:39,000 --> 00:00:44,000
and produce a sequence of values that appear to be pseudo-random.

13
00:00:44,000 --> 00:00:48,000
We also looked at the problem of how to encrypt a large file or a large message,

14
00:00:48,000 --> 00:00:53,000
and that brought us to look at modes of operation for using symmetric ciphers.

15
00:00:53,000 --> 00:00:56,000
We talked about the cipher block chaining mode,

16
00:00:56,000 --> 00:01:00,000
the counter mode, and the cipher feedback mode,

17
00:01:00,000 --> 00:01:04,000
all of which have different advantages and disadvantages.

18
00:01:04,000 --> 00:01:07,000
We also looked at how to do fair coin tosses remotely,

19
00:01:07,000 --> 00:01:11,000
and that led us to the need for cryptographic hash functions.

20
00:01:11,000 --> 00:01:14,000
We saw how to use those to check user passwords

21
00:01:14,000 --> 00:01:18,000
in a way that doesn't require us to keep any secrets on the server,

22
00:01:18,000 --> 00:01:20,000
and we also saw how to use hash chains to make it

23
00:01:20,000 --> 00:01:24,000
so those passwords never needed to be reused.

24
00:01:24,000 --> 00:01:28,000
The big problem we haven't addressed yet is how to establish a shared key.

25
00:01:28,000 --> 00:01:32,000
If we want to use a symmetric cipher to allow 2 parties to communicate,

26
00:01:32,000 --> 00:01:34,000
they have to agree upon the shared key beforehand.

27
00:01:34,000 --> 00:01:40,000
If you think about most ways we want to communicate today, that's very difficult.

28
00:01:40,000 --> 00:01:44,000
If you visit a secure website, you don't have a shared secret with them to begin with,

29
00:01:44,000 --> 00:01:49,000
but you want to start communicating securely with them despite not having a shared secret.

30
00:01:49,000 --> 00:01:53,000
And for most uses of cryptography today this is a really big problem.

31
00:01:53,000 --> 00:01:57,000
We can't assume that we have a shared secret with every website that we want to use.

32
00:01:57,000 --> 00:02:01,000
We need some way to establish a shared secret without having one to begin with.

33
00:02:01,000 --> 99:59:59,999
That's the main topic of Unit 3. I hope to see you there.
