1
00:00:00,000 --> 00:00:04,000
The answer is a straight line, and the reason is really subtle.

2
00:00:04,000 --> 00:00:07,000
It's because we're not modifying the first and last point.

3
00:00:07,000 --> 00:00:09,000
Otherwise, it would be a single point.

4
00:00:09,000 --> 00:00:14,000
I just hit the run button, and if you look at these coordinates, they go in 0.5 increments

5
00:00:14,000 --> 00:00:19,000
from 0, 1, 2, 3, 4, and the same is true with this coordinate over here.

6
00:00:19,000 --> 00:00:22,000
This is obviously the coordinates of a straight line

7
00:00:22,000 --> 00:00:29,000
as a result of our smoother applied with a smoothing weight of 0.1 and no data weight.

8
00:00:29,000 --> 00:00:34,000
If we change this to no smoothing weight, we obviously get the original path.

9
00:00:34,000 --> 00:00:38,000
If we look at the right side as well as the left side, it's not identical.

10
00:00:38,000 --> 00:00:41,000
When you implement your algorithm, please test this on those settings,

11
00:00:41,000 --> 00:00:46,000
and we will give you a different path in our testing to see if your algorithm is implemented correctly.

12
00:00:46,000 --> 00:00:48,000
Congratulations!

13
00:00:48,000 --> 00:00:52,000
You just learned how to produce a smooth path. There are a few caveats.

14
00:00:52,000 --> 00:00:57,000
If you apply this algorithm in a robot world like this where an A-star planner might give you something like this,

15
00:00:57,000 --> 00:01:02,000
the smooth path might then lead straight through the obstacle, which you don't want.

16
00:01:02,000 --> 00:01:05,000
There are ways to accommodate this, which I'll just hint at.

17
00:01:05,000 --> 00:01:09,000
One is to use dynamic programming with a stochastic action function.

18
00:01:09,000 --> 00:01:11,000
You've learned this in the previous homework assignment.

19
00:01:11,000 --> 00:01:13,000
That way we stay away from the obstacle.

20
00:01:13,000 --> 00:01:17,000
The second one is to introduce a term that propels you away from obstacles.

21
00:01:17,000 --> 00:01:20,000
I won't go into any depth here, but in your optimization you could have a term

22
00:01:20,000 --> 00:01:23,000
that pushes you away from obstacles

23
00:01:23,000 --> 00:01:27,000
by maximizing the distance between the nearest obstacle and data point.

24
00:01:27,000 --> 00:01:31,000
When you toss that in, you get a path that might look more like this

25
00:01:31,000 --> 00:01:35,000
that is still smooth but maximizes your clearance from obstacles.

26
00:01:35,000 --> 99:59:59,999
We will revisit this in the homework assignment.
