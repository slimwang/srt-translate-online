1
00:00:00,000 --> 00:00:02,000
Both of these are true.

2
00:00:02,000 --> 00:00:05,000
In class, it was shown that it is impossible

3
00:00:05,000 --> 00:00:07,000
to produce a random sequence generator,

4
00:00:07,000 --> 00:00:10,000
but if we have is<u>random</u>sequence, I'm going to sketch out

5
00:00:10,000 --> 00:00:14,000
how we could use that to generate a random sequence generator.

6
00:00:14,000 --> 00:00:17,000
The first thing that we're going to do in our generate_random function

7
00:00:17,000 --> 00:00:21,000
is loop through all the sequences of length n.

8
00:00:21,000 --> 00:00:25,000
Then for each sequence, we will run our is<u>random</u>sequence test,

9
00:00:25,000 --> 00:00:29,000
and if that is<u>random</u>sequence test returns true, we will return the sequence.

10
00:00:29,000 --> 00:00:32,000
We have now created a function that generates a random sequence,

11
00:00:32,000 --> 00:00:34,000
which, as we've shown in class, is impossible.

12
00:00:34,000 --> 00:00:38,000
Therefore, is<u>random</u>sequence is impossible.

13
00:00:38,000 --> 00:00:40,000
The second statement is also true.

14
00:00:40,000 --> 00:00:43,000
This result is a bit counterintuitive.

15
00:00:43,000 --> 00:00:47,000
The reason that this is a true statement

16
00:00:47,000 --> 00:00:52,000
is that any true random number generator must eventually produce sequences

17
00:00:52,000 --> 00:00:54,000
that fail is<u>random</u>sequence.

18
00:00:54,000 --> 00:00:57,000
Presumably, is<u>random</u>sequence would fail, for example,

19
00:00:57,000 --> 00:01:01,000
a sequence of 20 zeros, but a true random number generator

20
00:01:01,000 --> 00:01:04,000
would eventually produce that sequence, and this further shows

21
00:01:04,000 --> 99:59:59,999
the impossibility of having an is<u>random</u>sequence procedure.
