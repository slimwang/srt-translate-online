1
00:00:00,000 --> 00:00:02,000
Here's my solution:

2
00:00:02,000 --> 00:00:08,000
So, I have my state--I just broke it up into pieces so that I know what I'm talking about.

3
00:00:08,000 --> 00:00:10,000
Then if I hold it becomes the other player's turn.

4
00:00:10,000 --> 00:00:14,000
The other player's score is the same as it was before.

5
00:00:14,000 --> 00:00:18,000
So now remember the second place is the score of the player whose turn it is.

6
00:00:18,000 --> 00:00:26,000
So, that was you previously, and then the score that I got--I just add in the pending.

7
00:00:26,000 --> 00:00:29,000
I reap all of those, and the pending gets reset to zero.

8
00:00:29,000 --> 00:00:32,000
When I roll, again let's figure out what's in the state,

9
00:00:32,000 --> 00:00:35,000
if the roll is one that's a pig out,

10
00:00:35,000 --> 00:00:38,000
it becomes the other player's turn, and I only got one lousy point.

11
00:00:38,000 --> 00:00:41,000
Pending gets reset to zero.

12
00:00:41,000 --> 00:00:45,000
If the role is not a one then it's still my turn.

13
00:00:45,000 --> 00:00:49,000
I don't change my score so far, but I add d onto the pending.

14
00:00:49,000 --> 00:00:53,000
Here's just a way to map from one player to the other.

15
00:00:53,000 --> 00:00:55,000
If the other player, if it was one it becomes zero.

16
00:00:55,000 --> 00:00:57,000
If it was zero it becomes one.

17
00:00:57,000 --> 00:01:00,000
It's always a great idea to write some test cases.

18
00:01:00,000 --> 00:01:02,000
Now, one comment on style.

19
00:01:02,000 --> 00:01:07,000
Right here I'm taking this state, which is a tuple that has four components,

20
00:01:07,000 --> 00:01:11,000
and I'm breaking it up like this into it's four components.

21
00:01:11,000 --> 00:01:14,000
When you have four components that's probably okay,

22
00:01:14,000 --> 00:01:18,000
but it's getting to worry me a little bit that maybe I won't be able to remember

23
00:01:18,000 --> 00:01:20,000
which part of the state is which.

24
00:01:20,000 --> 00:01:23,000
If I had more than four, if I had five or six components,

25
00:01:23,000 --> 00:01:25,000
I really start to worry about that.

26
00:01:25,000 --> 00:01:28,000
So there are other possibilities where we can be more explicit about what the state is

27
00:01:28,000 --> 00:01:33,000
rather than just have it be a set of undifferentiated elements of a tuple

28
00:01:33,000 --> 00:01:35,000
that we then define like this.

29
00:01:35,000 --> 99:59:59,999
We can define it ahead of time.
