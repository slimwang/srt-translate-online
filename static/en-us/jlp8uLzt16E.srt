1
00:00:00,650 --> 00:00:03,220
Earlier in the lesson we
talked extensively about how

2
00:00:03,220 --> 00:00:05,970
everything on a web page is a box.

3
00:00:05,970 --> 00:00:10,010
Now, before you start positioning boxes,
you need a better understanding of

4
00:00:10,010 --> 00:00:14,050
the box model, which is what
you see on the screen here.

5
00:00:14,050 --> 00:00:18,090
There's the concept of margins and
borders, padding and

6
00:00:18,090 --> 00:00:21,660
content, all of which makes
up the box on the web page.

7
00:00:22,820 --> 00:00:26,480
A link to this demo is provided
in the instructor notes section.

8
00:00:26,480 --> 00:00:28,740
So, feel free to follow along.

9
00:00:28,740 --> 00:00:34,190
If we explore this box in developer
tools, you'll find a similar

10
00:00:34,190 --> 00:00:38,910
box to what you see on
the page in the computed tab.

11
00:00:40,450 --> 00:00:45,360
You see we have a margin,
a border, padding, and content.

12
00:00:45,360 --> 00:00:47,980
Let's explore each of these items.

13
00:00:47,980 --> 00:00:51,580
Starting at the very center,
we have our content, and

14
00:00:51,580 --> 00:00:56,790
this is the image or
text that's appearing on the website.

15
00:00:56,790 --> 00:00:58,470
You can think of it as the nucleus.

16
00:00:58,470 --> 00:00:59,850
It sits at the very center.

17
00:00:59,850 --> 00:01:02,840
And the other layers
serve to protect it so

18
00:01:02,840 --> 00:01:06,460
that other items on the page
either don't overlap, or

19
00:01:06,460 --> 00:01:10,140
sit too close, so that the website
isn't very visually appealing.

20
00:01:10,140 --> 00:01:13,780
And the next layer we have the padding.

21
00:01:13,780 --> 00:01:15,730
And this is the green color.

22
00:01:16,760 --> 00:01:20,120
The padding clears an area
around the content.

23
00:01:20,120 --> 00:01:23,258
And it's affected by
the background color of the box.

24
00:01:23,258 --> 00:01:27,285
So, you can think of it as the space
inside of the box that protects

25
00:01:27,285 --> 00:01:28,758
the content directly.

26
00:01:28,758 --> 00:01:32,646
Border, then goes around the padding and
the content, and

27
00:01:32,646 --> 00:01:37,510
the border's inherited from
the color property of the box.

28
00:01:37,510 --> 00:01:40,880
And lastly,
our outer layer is the margin, and

29
00:01:40,880 --> 00:01:43,240
this clears an area around the border.

30
00:01:43,240 --> 00:01:47,310
The margin doesn't have a background
color and it's completely transparent,

31
00:01:47,310 --> 00:01:50,860
and you can think of this
as the space between boxes.

32
00:01:50,860 --> 00:01:53,830
Now, you can play along with
the widths of each of these and

33
00:01:53,830 --> 00:01:58,750
see how it affects the box both here and
in the Computed tab.

34
00:01:58,750 --> 00:02:04,120
For example, if I changed the margin
from 20 pixels to 30 pixels,

35
00:02:04,120 --> 00:02:07,540
you'll notice that we got a little
bit of extra space here at the top.

36
00:02:07,540 --> 00:02:09,310
And if you move to the Computed tab,

37
00:02:09,310 --> 00:02:13,910
you see that we have 30 pixels here at
the top, and 30 pixels at the bottom.

38
00:02:13,910 --> 00:02:17,510
Moving back to 20,
we now go back to 20 pixels.

39
00:02:17,510 --> 00:02:19,960
Feel free to stick around here and
play a little bit,

40
00:02:19,960 --> 00:02:24,106
changing the widths of the margin,
border, padding, and content.

41
00:02:24,106 --> 00:02:27,930
And see how it affects the box
both here and in the Computed tab.

42
00:02:27,930 --> 00:02:30,470
Don't worry,
I'll still be here when you get back.

43
00:02:30,470 --> 00:02:32,970
Now, by default, the size of your actual

44
00:02:32,970 --> 00:02:37,850
element is equal to the sum of
the border, padding, and content width.

45
00:02:37,850 --> 00:02:42,910
So, if we wanted to compute the width
of the element shown on the page,

46
00:02:42,910 --> 00:02:46,300
we would have a left border of ten,

47
00:02:46,300 --> 00:02:51,610
plus a left padding of 30,
plus a content width of 200,

48
00:02:51,610 --> 00:02:58,020
plus the right padding of 30,
and the right border of ten.

49
00:02:58,020 --> 00:03:03,200
So, our actual element width
is actually 280 pixels,

50
00:03:03,200 --> 00:03:07,050
not just the 200 pixel
width of the content.

51
00:03:07,050 --> 00:03:10,770
Now, this makes it kind of hard to
know how much space the box will

52
00:03:10,770 --> 00:03:14,480
actually take on the screen
without recalculating it each and

53
00:03:14,480 --> 00:03:17,060
every time you change
one of these values.

54
00:03:17,060 --> 00:03:20,450
But luckily, an easier to use
model has been developed and

55
00:03:20,450 --> 00:03:22,550
we should plan to use that.

56
00:03:22,550 --> 00:03:29,630
This is CSS style,
box-sizing; border-box; this makes

57
00:03:29,630 --> 00:03:34,540
the calculation of the element size
include both the border and padding.

58
00:03:34,540 --> 00:03:35,940
So, that it's easier to make layouts.

59
00:03:37,180 --> 00:03:41,480
You can just set the width of the
overall box and no matter how you tweak

60
00:03:41,480 --> 00:03:46,580
the padding in border sizes, the size
of the box will always stay the same.

61
00:03:46,580 --> 00:03:50,690
Remember, though, that margin
is not included in this size.

62
00:03:50,690 --> 00:03:53,290
However, there is one
drawback with this model.

63
00:03:53,290 --> 00:03:55,150
I mean isn't there always a catch?

64
00:03:56,450 --> 00:03:58,470
It's been developed fairly recently, so

65
00:03:58,470 --> 00:04:02,330
if you want to be sure that older
browsers are also able to display it,

66
00:04:02,330 --> 00:04:07,080
you need to add what's called
browser-specific prefixes.

67
00:04:07,080 --> 00:04:12,160
Now, these prefixes are webkit,
moz, and ms.

68
00:04:13,340 --> 00:04:16,320
You can just add them in front
of the style definition, and

69
00:04:16,320 --> 00:04:17,470
they're defined like so.

70
00:04:19,190 --> 00:04:22,870
As always, see the instructor notes for
more information.

71
00:04:22,870 --> 00:04:26,210
Now, you may have noticed that we've
been setting the size of a box

72
00:04:26,210 --> 00:04:30,280
in pixels, but it's also possible
to do it as a percentage.

73
00:04:30,280 --> 00:04:33,430
If we go back to the My Favorite App
page as an example,

74
00:04:33,430 --> 00:04:36,860
we can see how changing
the content box from

75
00:04:36,860 --> 00:04:41,690
a set pixel to a percentage
affects the screen size.

76
00:04:41,690 --> 00:04:46,830
You can also set the size of a box
as either a pixel or a percentage.

77
00:04:46,830 --> 00:04:50,970
If you set it as a percentage,
the size will change depending on how

78
00:04:50,970 --> 00:04:54,840
big the screen is or
how encompassing the boxes.

79
00:04:54,840 --> 00:04:59,410
If you set the box size in pixels,
it will take exactly that size and

80
00:04:59,410 --> 00:05:03,490
will not change no matter how big or
small the screen is.

81
00:05:03,490 --> 00:05:07,470
This can sometimes lead
to a bad user experience.

82
00:05:07,470 --> 00:05:10,740
For example,
if we look back at our My Favorite App,

83
00:05:10,740 --> 00:05:16,490
you'll see that this paragraph is
defined as a set number of pixels.

84
00:05:16,490 --> 00:05:20,760
If I resize the screen,
you'll see that it stays the same and

85
00:05:20,760 --> 00:05:23,340
disappears as I make it smaller.

86
00:05:23,340 --> 00:05:28,496
However, if I instead set this to be
a percentage, say we want it to take up

87
00:05:28,496 --> 00:05:34,086
50% of the screen, notice how the size
changes as I make the screen smaller.

88
00:05:37,788 --> 00:05:42,783
You can also set a max width for the
box, and in that case, it will resize

89
00:05:42,783 --> 00:05:48,920
and become smaller when necessary,
but not larger than the set max width.

90
00:05:48,920 --> 00:05:53,080
And now, it's time for you to put this
info into your own style sheet file.

91
00:05:54,150 --> 00:05:58,250
Add the border box definition and
then, add max width attributes

92
00:05:58,250 --> 00:06:02,520
to the divs encompassing the image and
description of the app.

93
00:06:04,210 --> 00:06:06,170
Now, if we look back at our design mock,

94
00:06:06,170 --> 00:06:10,960
we got notes from the designer that
the image should be 460 pixels wide,

95
00:06:12,410 --> 00:06:15,570
and the description should
be 705 pixels wide.

96
00:06:16,890 --> 00:06:21,690
Then, what happens when you add
these changes to your CSS file and

97
00:06:21,690 --> 00:06:23,528
explore the result in Developer Tools?

98
00:06:23,528 --> 00:06:27,150
Did nothing change?

99
00:06:27,150 --> 00:06:29,390
Do we have different box sizes?

100
00:06:30,430 --> 00:06:32,225
Or do we have a different layout?
