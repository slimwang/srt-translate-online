1
00:00:00,180 --> 00:00:02,240
If you take a look at
what's happening on P3 and

2
00:00:02,240 --> 00:00:06,920
P4 in this case, we see that now P3 and

3
00:00:06,920 --> 00:00:13,840
P4 are observing reverse order of how
they saw the updates to m3 and m2.

4
00:00:13,840 --> 00:00:19,360
As far as P3 is concerned, P3 observed
that this update to m2 happened,

5
00:00:19,360 --> 00:00:23,220
and it also observed that
this update to m3 happened.

6
00:00:23,220 --> 00:00:27,070
As far as P4 is concerned
it observed this update of

7
00:00:27,070 --> 00:00:29,610
z to the memory location m3.

8
00:00:29,610 --> 00:00:34,341
But it still has not seen that P2
updated the memory location m2

9
00:00:34,341 --> 00:00:35,836
with the value of y.

10
00:00:35,836 --> 00:00:40,573
It thinks that still the memory
location m2 holds value zero.

11
00:00:40,573 --> 00:00:45,886
So P4 thinks that this write
occured before this write from P2,

12
00:00:45,886 --> 00:00:49,900
and then P3 thinks the other way around.

13
00:00:49,900 --> 00:00:54,040
This is clearly illegal as far as
sequential consistency is concerned.

14
00:00:54,040 --> 00:00:58,430
Now if we take a look at these two
updates we see that on P1 before

15
00:00:58,430 --> 00:01:03,670
the value of the memory location
m3 was updated to z, P1 read

16
00:01:03,670 --> 00:01:08,670
the value of the memory location m2 and
it saw that that value was y.

17
00:01:08,670 --> 00:01:11,880
So it saw the effects of
this particular update.

18
00:01:11,880 --> 00:01:16,690
What that means is that these operations
are potentially causally related, and

19
00:01:16,690 --> 00:01:20,360
therefore every processor in
the system has to observe that

20
00:01:20,360 --> 00:01:24,350
this particular update
happened after the update to

21
00:01:24,350 --> 00:01:28,450
m2 given the causal
relationship between the two.

22
00:01:28,450 --> 00:01:31,380
Therefore the answer is no for
both of these questions.
