1
00:00:00,880 --> 00:00:06,330
I can specify the output language, the
units in metric or imperial and more.

2
00:00:06,330 --> 00:00:07,849
Check out the link in
the instruction notes for

3
00:00:07,849 --> 00:00:09,500
a full list of optional parameters.

4
00:00:10,560 --> 00:00:13,380
Let's build this feature into our
site in the form of a search within

5
00:00:13,380 --> 00:00:14,080
time function.

6
00:00:15,109 --> 00:00:18,750
We're going to expand our user control
window to allow the user to specify

7
00:00:18,750 --> 00:00:22,140
the number of minutes they want to
take to get to a certain place,

8
00:00:22,140 --> 00:00:24,570
whether they walk, bike,
drive, or take transit.

9
00:00:25,806 --> 00:00:28,730
We could do it within a certain
distance, but in New York City I know

10
00:00:28,730 --> 00:00:32,899
people usually don't drive, and
I think time matters more to our users.

11
00:00:32,899 --> 00:00:35,070
So we're adding in a bit more html here.

12
00:00:36,340 --> 00:00:39,740
We're going to give the users the option
to choose a maximum duration, so

13
00:00:39,740 --> 00:00:42,900
the maximum time they'd
like to spend commuting and

14
00:00:42,899 --> 00:00:45,199
an option to chose a travel mode.

15
00:00:45,200 --> 00:00:48,830
Then we'll give them a place to input
the address that they're interested in.

16
00:00:48,829 --> 00:00:52,189
And we'll prompt them, for
something like their office address.

17
00:00:52,189 --> 00:00:53,689
And a go button.

18
00:00:53,689 --> 00:00:55,099
And we'll add in some additional CSS.

19
00:00:56,219 --> 00:00:59,990
Then, as usual, we'll just add
an event listener on the go button,

20
00:00:59,990 --> 00:01:02,870
to call our new function which
we'll call searchwithintime.

21
00:01:04,129 --> 00:01:08,510
Now at the high level, what the
searchwithintime function is going to do

22
00:01:08,510 --> 00:01:12,780
is use the DistanceMatrixService
to calculate the distances and

23
00:01:12,780 --> 00:01:16,780
the durations of travel between
each of our markers and

24
00:01:16,780 --> 00:01:19,269
the location that the user entered.

25
00:01:19,269 --> 00:01:22,959
We'll create our DistanceMatrixService
which we'll use and

26
00:01:22,959 --> 00:01:27,179
we'll capture the user entered address
and check to make sure it isn't blank.

27
00:01:27,180 --> 00:01:32,650
If it isn't, we'll create an origins
array from our list of markers.

28
00:01:32,650 --> 00:01:36,609
And use the user enter address
as the destination and

29
00:01:36,609 --> 00:01:40,280
we'll capture the travel mode that
was also entered by the user.

30
00:01:40,280 --> 00:01:43,680
Finally, we'll call
the getdistancematrix function,

31
00:01:43,680 --> 00:01:48,470
passing in our origins, our single
destination, the travel mode and

32
00:01:48,469 --> 00:01:51,280
specifying the unit should be imperial.

33
00:01:51,280 --> 00:01:55,710
When we get back the response we'll
check to make sure the status is okay

34
00:01:55,709 --> 00:01:59,909
and if the status is okay we'll
display all the markers that

35
00:01:59,909 --> 00:02:01,679
fit the criteria that the user entered.

36
00:02:01,680 --> 00:02:04,890
And we'll do this in a separate
function since this is getting huge.

37
00:02:04,890 --> 00:02:06,409
If the status wasn't okay,

38
00:02:06,409 --> 00:02:09,168
we're going to alert the user
with what the status was.

39
00:02:09,169 --> 00:02:12,990
This is an example of a more
specific error message.

40
00:02:12,990 --> 00:02:16,200
Let's move onto the next piece to
display the markers that were within

41
00:02:16,199 --> 00:02:18,289
the time that the user entered.

42
00:02:18,289 --> 00:02:21,159
Okay, so again,
we just used the DistanceMatrixService.

43
00:02:21,159 --> 00:02:24,479
We passed in all of our
markers as the origins and

44
00:02:24,479 --> 00:02:26,659
the users important place
as the destination.

45
00:02:27,680 --> 00:02:29,310
Now that we got back the response,

46
00:02:29,310 --> 00:02:32,080
we have to parse through
it to get the useful data.

47
00:02:32,080 --> 00:02:36,700
We'll recapture all of the origins and
destinations from the response, and

48
00:02:36,699 --> 00:02:40,849
also capture that user entered maximum
travel duration which was in minutes.

49
00:02:41,930 --> 00:02:47,670
We have a nested loop here to create one
element per origin and destination pair.

50
00:02:47,669 --> 00:02:52,809
That element is going to have a distance
and duration from point A to point B.

51
00:02:52,810 --> 00:02:54,699
We want to capture both the distance and

52
00:02:54,699 --> 00:02:58,919
the duration in text form because we're
going to display that to our users.

53
00:02:58,919 --> 00:03:02,089
And we also need the value
of the duration.

54
00:03:02,090 --> 00:03:05,110
Which we're going to compare
to our maximum value

55
00:03:05,110 --> 00:03:06,900
that was entered by the user.

56
00:03:06,900 --> 00:03:10,760
If the duration is within
that maximum value

57
00:03:10,759 --> 00:03:13,289
then we'll display
that marker on the map.

58
00:03:13,289 --> 00:03:16,109
We're also keeping track of
this at least one variable.

59
00:03:17,259 --> 00:03:20,159
This is important because
even if we get an okay

60
00:03:20,159 --> 00:03:24,770
response from the getdistancematrix
function, if we don't find any markers

61
00:03:24,770 --> 00:03:28,210
that are within the acceptable
commute we want to let the user know.

62
00:03:28,210 --> 00:03:32,270
For each marker that does appear,
we'll create a small info window.

63
00:03:32,270 --> 00:03:36,540
We'll display the duration and the
journey distance in that info window.

64
00:03:36,539 --> 00:03:39,530
Finally, we'll put a little event
listener on to that marker so

65
00:03:39,530 --> 00:03:43,449
that if the user clicks on it,
we'll close the little info window and

66
00:03:43,449 --> 00:03:45,959
make room for a big one that
has a street view panorama.

67
00:03:47,009 --> 00:03:48,079
Let's test out this feature.

68
00:03:49,960 --> 00:03:52,777
I'd like to stay within a 30
minute walk of my office.

69
00:03:52,776 --> 00:03:55,215
[BLANK_AUDIO]

70
00:03:55,216 --> 00:03:57,790
I can see that two listings
fit that criteria.

71
00:03:59,349 --> 00:04:01,979
And if I select them,
I can see more details.

72
00:04:01,979 --> 00:04:04,989
Before we move on, let's review
the distance matrix functionality.


