1
00:00:00,270 --> 00:00:00,830
We are now on to

2
00:00:00,830 --> 00:00:04,480
the last major part of the solution which is Filtering and Emitting.

3
00:00:04,480 --> 00:00:07,870
In part two of the written instructions, I hope you changed the number of

4
00:00:07,870 --> 00:00:10,650
words to keep by changing the integer value TopN.

5
00:00:10,650 --> 00:00:15,230
And now we're on to part three, adding a filter using

6
00:00:15,230 --> 00:00:20,390
a skip words list to the ParseTweetBolt to skip undesirable words.

7
00:00:20,390 --> 00:00:22,005
We first navigate to the ParseTweetBolt.

8
00:00:23,030 --> 00:00:26,860
And at the class level, I created a private string array called skipwords.

9
00:00:26,860 --> 00:00:31,010
Don't forget your new import statement to bring in arrays.

10
00:00:31,010 --> 00:00:34,090
Next, if you followed my hint, you can use your top end visualization to

11
00:00:34,090 --> 00:00:37,430
choose the words to skip that will be Twitter specific.

12
00:00:37,430 --> 00:00:38,910
After doing this multiple times,

13
00:00:38,910 --> 00:00:44,160
notice that I've skipped words like http, https, retweet, follow.

14
00:00:44,160 --> 00:00:48,110
And we do this by scrolling down to the execute method and simply add in

15
00:00:48,110 --> 00:00:53,920
the logic that we emit if the ray does not contain the skip words in the token.

16
00:00:53,920 --> 00:00:57,730
And lastly, we only emit tokens if they have a length greater than three.

17
00:00:57,730 --> 00:01:00,860
And finally, we have our word cloud, and notice this is one of the first times

18
00:01:00,860 --> 00:01:05,200
we can show word cloud without blurring out a lot of nasty words.

19
00:01:05,200 --> 00:01:08,203
In part 4, we complete the trivial step to emit hashtags instead of

20
00:01:08,203 --> 00:01:12,200
words; remembering that hashtags begin with the pound character.

21
00:01:12,200 --> 00:01:14,180
And we can do this simply with the logic.

22
00:01:14,180 --> 00:01:17,340
If token starts with a pound sign, then we emit.

23
00:01:17,340 --> 00:01:19,630
We can make this more efficient by keeping the code flexible for

24
00:01:19,630 --> 00:01:21,920
this example, led to this simple solution.

25
00:01:21,920 --> 00:01:25,700
Once we see that your word cloud is emitting only hash tags,

26
00:01:25,700 --> 00:01:31,050
we can move on to part five and visualize the TopN equals 10 hashtags.

27
00:01:31,050 --> 00:01:32,870
Remember, that's in your topN TweetTopology file.

28
00:01:32,870 --> 00:01:35,430
Change your count to ten.

29
00:01:35,430 --> 00:01:39,180
Once your visualization is running, remember to hit refresh periodically.

30
00:01:39,180 --> 00:01:45,160
What's happening is your D3 array is collecting a number of topN hashtags.

31
00:01:45,160 --> 00:01:47,950
And finally, if you like, you can do forward slash basic and

32
00:01:47,950 --> 00:01:51,990
navigate to that page, and you'll see a simpler visualization that I

33
00:01:51,990 --> 00:01:55,950
created that you can also as a jumping off point for your final project.

34
00:01:55,950 --> 00:01:57,400
Congratulations on tackling and

35
00:01:57,400 --> 00:02:00,890
completing one of the more complex assignments of this course.

36
00:02:00,890 --> 00:02:04,050
And take a screen shot, post to the forum, comment on two others.

37
00:02:04,050 --> 00:02:06,610
And if you like, tweet your image to your followers.

38
00:02:06,610 --> 00:02:10,650
Remember that you compare you solution to lesson three, stage five.

39
00:02:10,650 --> 00:02:12,700
If you continue to have any questions.

40
00:02:12,700 --> 00:02:13,200
Great job.
