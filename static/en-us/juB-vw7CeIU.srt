1
00:00:01,378 --> 00:00:05,188
[MUSIC]

2
00:00:05,188 --> 00:00:08,521
So I just want to talk about the role
that measuring plays inside of

3
00:00:08,521 --> 00:00:11,440
a DevOps organization or
for a DevOps engineer.

4
00:00:11,440 --> 00:00:15,980
We have an objective, we have a goal to

5
00:00:15,980 --> 00:00:19,910
create some efficiency, to make some
improvement in the organization.

6
00:00:19,910 --> 00:00:22,410
From its own side that aspiration,

7
00:00:22,410 --> 00:00:24,310
the aspiration to create
the change is not enough.

8
00:00:24,310 --> 00:00:28,010
So even if we have the technical
capability to create something better,

9
00:00:28,010 --> 00:00:32,770
we need to be able to test and verify
that we've got the result we wanted.

10
00:00:32,770 --> 00:00:36,810
It's very easy to to make a claim, but

11
00:00:36,810 --> 00:00:40,350
if we're going to be pragmatic in our
approach we need to test that claim and

12
00:00:40,350 --> 00:00:42,226
this is where measurement
this becomes key.

13
00:00:42,226 --> 00:00:45,490
We articulate the objective,
we articulate if

14
00:00:45,490 --> 00:00:49,095
whatever the steps are we're going to
take to achieve that objective.

15
00:00:49,095 --> 00:00:53,700
So underneath the objectives we need to
articulate the implementation steps that

16
00:00:53,700 --> 00:00:55,010
we're going to take.

17
00:00:55,010 --> 00:00:59,560
And then we have to ask that question,
how do I measure as measured by.

18
00:00:59,560 --> 00:01:03,580
So that we can reflect at the end of
this period whether the steps that we

19
00:01:03,580 --> 00:01:07,300
took actually achieve the outcome that
we wanted, and this is really critical.

20
00:01:09,080 --> 00:01:13,790
When we're talking about tens of
thousands of servers in an environment,

21
00:01:13,790 --> 00:01:17,150
the change propositions
that we have can have

22
00:01:17,150 --> 00:01:19,380
a broad impact on our customer base.

23
00:01:19,380 --> 00:01:23,010
So we need to be able to clearly measure
whether thing we're doing is actually

24
00:01:23,010 --> 00:01:24,690
helping in the way that
we thought it would.

25
00:01:24,690 --> 00:01:29,210
The way that I like to think about this
is we we make the value proposition or

26
00:01:29,210 --> 00:01:33,010
we talk about the outcome
that we want to achieve.

27
00:01:33,010 --> 00:01:35,990
We talk about the implementation
steps we're going to take and

28
00:01:35,990 --> 00:01:40,660
then we ask the question how we measure
whether those steps got us to this goal.

29
00:01:40,660 --> 00:01:44,070
And then when we reflect
on that we ask one or

30
00:01:44,070 --> 00:01:48,730
three questions was the goal effective
or the implementation steps effective or

31
00:01:48,730 --> 00:01:51,540
is it the measurements
that need to be changed.

32
00:01:51,540 --> 00:01:54,520
And in this way we create a kind
of a blame free environment

33
00:01:54,520 --> 00:02:00,410
which is really really critical to
fostering a strong DevOps culture.

34
00:02:00,410 --> 00:02:03,840
Measurements help us to move
the conversation away from people and

35
00:02:03,840 --> 00:02:07,040
onto the outcomes that we
were trying to achieve.

36
00:02:07,040 --> 00:02:10,930
It's very, very easy to personalize
result especially in an environment

37
00:02:10,930 --> 00:02:13,820
which we think that we carry
the cause like we're carrying

38
00:02:13,820 --> 00:02:14,860
the banner for the thing.

39
00:02:14,860 --> 00:02:17,680
So if you come into an organization and

40
00:02:17,680 --> 00:02:21,040
you advocate strongly to take
a particular technical stance.

41
00:02:21,040 --> 00:02:28,000
You could feel maybe rightfully so
that your success is tied to the success

42
00:02:28,000 --> 00:02:32,370
of the power of that thing but this
can be a very dangerous place to be.

43
00:02:32,370 --> 00:02:35,110
Because it colors our perception
about the work that we're doing.

44
00:02:36,570 --> 00:02:40,630
It's better if we start from the
position that we have strong technical

45
00:02:40,630 --> 00:02:41,630
skills.

46
00:02:41,630 --> 00:02:44,942
We evaluate the situation,
we make a proposal.

47
00:02:44,942 --> 00:02:47,782
I want to create a change here for
the better.

48
00:02:47,782 --> 00:02:50,440
I want to increase test
coverage because I believe

49
00:02:50,440 --> 00:02:53,560
that this is going to lower
defects in production.

50
00:02:53,560 --> 00:02:56,740
And then I'm going to measure so
these are the steps I'm going to take

51
00:02:56,740 --> 00:02:59,940
to do it, and this is how I'm going to
measure whether it's successful.

52
00:02:59,940 --> 00:03:02,790
And that's going to drive
the conversation around one of

53
00:03:02,790 --> 00:03:03,580
those three areas.

54
00:03:03,580 --> 00:03:07,170
As opposed to a conversation
about whether I was right or

55
00:03:07,170 --> 00:03:10,070
wrong about whether the thing I
did was going to have the impact

56
00:03:10,070 --> 00:03:11,550
I said it was going to have.

57
00:03:11,550 --> 00:03:12,650
First of all, we don't know.

58
00:03:13,830 --> 00:03:18,250
I mean let's be honest,
there's a lot of variation in software.

59
00:03:18,250 --> 00:03:22,270
The best software in the world
got some problems and

60
00:03:22,270 --> 00:03:25,670
it's not always appropriate
in every context.

61
00:03:25,670 --> 00:03:28,490
So something that worked at your
last job or something that your

62
00:03:28,490 --> 00:03:32,080
friend did at another place may
work perfectly in that context but

63
00:03:32,080 --> 00:03:35,010
it may not work well in
the context at your end.

64
00:03:35,010 --> 00:03:39,600
And so you need to be open to taking
that feedback, to measuring the results

65
00:03:39,600 --> 00:03:41,620
of what you're doing, so
that you can find the right fit.

66
00:03:41,620 --> 00:03:46,120
And your advocacy is not where
your value is going to lie,

67
00:03:46,120 --> 00:03:48,230
it's in your ability to assess.

68
00:03:48,230 --> 00:03:50,380
The results of the thing
that you proposed or

69
00:03:50,380 --> 00:03:53,810
the thing that you did that's where your
value is really going to come through.

70
00:03:53,810 --> 00:03:57,458
And your values a DevOp engineer comes
from your ability to evaluate whether

71
00:03:57,458 --> 00:03:59,650
the thing that you did was successful.

72
00:03:59,650 --> 00:04:03,730
It is a much less to do with your
ability to identify a tool in your

73
00:04:03,730 --> 00:04:08,040
environment and much more to do with
your ability to make a proposal,

74
00:04:08,040 --> 00:04:12,020
execute on it, and then reflect on
how successful was that effort.

75
00:04:12,020 --> 00:04:13,580
Did it hit the mark or didn't it?

76
00:04:13,580 --> 00:04:15,650
That's the thing that people
are going to want from you.

77
00:04:15,650 --> 00:04:17,420
You may have all sorts of
interesting opinions and

78
00:04:17,420 --> 00:04:22,150
you should definitely share them
about software and about methodology.

79
00:04:22,150 --> 00:04:23,980
But when it comes to execution,

80
00:04:23,980 --> 00:04:26,400
you want to take a critical
data-driven approach.
