1
00:00:00,000 --> 00:00:03,960
So the number of rows is the number of objects and that is 7,

2
00:00:03,960 --> 00:00:13,200
and the number of columns is the total sum of all the values, so 2+3+5+4+3+5+2 which is 24.

3
00:00:13,200 --> 00:00:16,450
So, we have 7 rows and 24 columns in this table.

4
00:00:16,450 --> 00:00:21,270
We're going to fill this out row by row, so we start in row 1 then row 2, and so on.

5
00:00:21,270 --> 00:00:26,970
So for row I and column J, what we want in this table is the minimum size required

6
00:00:26,970 --> 00:00:31,800
to achieve a value of exactly J using the objects 1 to I.

7
00:00:31,800 --> 00:00:34,930
Now in the first row, we only have the first object available,

8
00:00:34,930 --> 00:00:40,380
so the only thing that we can achieve is a value of 2 using size 3.

9
00:00:40,380 --> 00:00:44,890
So, value of 2 using size 3 and all of the other ones are just not possible.

10
00:00:44,890 --> 00:00:50,100
Second row, we have two objects available, we have objects A and B available,

11
00:00:50,100 --> 00:00:55,430
so what we can achieve is a value of 2, a value of 3, and a value of 5.

12
00:00:55,430 --> 00:01:02,990
Now for value of 2, we need size 3 again. For value of 3, we can do that for size 2.

13
00:01:02,990 --> 00:01:08,120
And for value of 5, we need size 5 and I'll put out one more row here for you.

14
00:01:08,120 --> 00:01:10,310
I'm not going to show you the part that goes beyond 8th row

15
00:01:10,310 --> 00:01:12,750
because that will not be important for what I'm about to explain.

16
00:01:12,750 --> 00:01:20,220
The interesting part here is this one here because object number 3 has size 4 and value 5

17
00:01:20,220 --> 00:01:23,780
which means that we can achieve value 5 actually by putting in this object

18
00:01:23,780 --> 00:01:26,700
instead of using A and B as we did in the row before.

19
00:01:26,700 --> 00:01:30,050
Let's go to row 4, because in row 4, I can show you something very interesting.

20
00:01:30,050 --> 00:01:33,150
First value is not that interesting.

21
00:01:33,150 --> 00:01:38,270
So remember that in this row here, row number 4, we now have available to us, object A,

22
00:01:38,270 --> 00:01:41,540
object B, object C, and object D.

23
00:01:41,540 --> 00:01:45,210
If we are to go through the whole table, how efficiently can we fill out this table?

24
00:01:45,210 --> 00:01:48,250
And now that we have D available here in row number 4,

25
00:01:48,250 --> 00:01:52,160
I can show you something very interesting because you can fill out this table quite efficiently.

26
00:01:52,160 --> 00:01:57,830
Now, here we are in the column labeled 7 which means we want to achieve a value of 7.

27
00:01:57,830 --> 00:01:59,850
How can we achieve a value of 7?

28
00:01:59,850 --> 00:02:02,270
So you already know that we can achieve a value of 7

29
00:02:02,270 --> 00:02:06,080
using these three objects, A, B, C because we have this row here.

30
00:02:06,080 --> 00:02:10,220
Now, what are the different possibilities of achieving a value of 7?

31
00:02:10,220 --> 00:02:13,910
We could either do this through the row above because we know that we can achieve it

32
00:02:13,910 --> 00:02:18,220
using objects A, B, and C, so it could be row above.

33
00:02:18,220 --> 00:02:21,580
We could also try to take D directly.

34
00:02:21,580 --> 00:02:26,130
That D has a value of 4 so here, that's impossible, so take the new object

35
00:02:26,130 --> 00:02:28,670
and finally there's only a third possibility here.

36
00:02:28,670 --> 00:02:33,730
Well, since D has a value of 4, we could try to achieve a value of 3

37
00:02:33,730 --> 00:02:38,170
using the objects we had in there before and then add D to it.

38
00:02:38,170 --> 00:02:44,470
So add D to another set and that is the set of size 3 and we know just from looking at this table here

39
00:02:44,470 --> 00:02:48,490
that at size 2, we can already achieve a value of 3.

40
00:02:48,490 --> 00:02:55,650
D has a value of 4 and has a size of 5, so 2+5 is 7, which is actually now the same as this one here

41
00:02:55,650 --> 00:02:59,280
but of course you would be taking the minimum of the required sizes.

42
00:02:59,280 --> 00:03:02,420
So here, we would enter a 7. The interesting part is this.

43
00:03:02,420 --> 00:03:06,700
In order to fill the cell here, we do not need to go through all possible combinations

44
00:03:06,700 --> 00:03:10,170
of the objects that we have, we just need to consider three cases.

45
00:03:10,170 --> 00:03:12,970
Each of which can be calculated in constant time

46
00:03:12,970 --> 99:59:59,999
if we have the row previous to the row that we're trying to fill out.
