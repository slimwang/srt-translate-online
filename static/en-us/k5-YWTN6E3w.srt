1
00:00:00,280 --> 00:00:04,180
Handling your own orthographic
camera is often necessary, but

2
00:00:04,180 --> 00:00:07,683
there's quite a lot of fuss involved
with getting the aspect ratio right and

3
00:00:07,683 --> 00:00:10,010
in positioning your world on the screen.

4
00:00:10,010 --> 00:00:13,210
If you don't need to move your
camera around in your game world,

5
00:00:13,210 --> 00:00:16,595
it's often easier to use
a viewport to manage your camera.

6
00:00:16,595 --> 00:00:19,975
We've set up a little demo project
to show off the various viewports.

7
00:00:19,975 --> 00:00:23,585
What we're doing is, we're drawing a
little checkerboard that's 16 units wide

8
00:00:23,585 --> 00:00:28,505
by 9 units tall, which is intentionally
not the same size as the window we're

9
00:00:28,505 --> 00:00:30,610
going to use to display this world.

10
00:00:30,610 --> 00:00:33,970
So here in create we've made
an orthographic camera, and

11
00:00:33,970 --> 00:00:37,202
the first viewport we're going to
explore is the ScreenViewport.

12
00:00:37,202 --> 00:00:40,330
The ScreenViewport doesn't care
about the size of the world.

13
00:00:40,330 --> 00:00:43,770
It just sets the camera up for
pixel for pixel drawing.

14
00:00:43,770 --> 00:00:46,010
This is great if you need
that in particular, but

15
00:00:46,010 --> 00:00:47,860
it's not super useful for most games.

16
00:00:47,860 --> 00:00:49,710
Let's check out what it does.

17
00:00:49,710 --> 00:00:54,300
So our checkerboard is down here on the
bottom left and it's 9 pixels tall and

18
00:00:54,300 --> 00:00:56,770
16 pixels wide, and
you can hardly see it all.

19
00:00:56,770 --> 00:00:59,540
Let's try another viewport that
might be better for this task.

20
00:01:00,540 --> 00:01:02,734
Here we've switched over
to a stretch viewport.

21
00:01:02,734 --> 00:01:06,930
StretchViewport makes the world
exactly fit the screen, but

22
00:01:06,930 --> 00:01:09,470
it doesn't respect the aspect
ratio of the world, so

23
00:01:09,470 --> 00:01:13,290
things might look stretched,
either horizontally or vertically.

24
00:01:13,290 --> 00:01:18,170
Since our world is 16 units wide by 9
units tall, and the aspect ratio of this

25
00:01:18,170 --> 00:01:22,460
is squarer than that, that means our
world gets stretched vertically or

26
00:01:22,460 --> 00:01:25,490
squashed horizontally,
depends how you want to think about it.

27
00:01:25,490 --> 00:01:28,000
Now we've switched
over to a FillViewport.

28
00:01:28,000 --> 00:01:31,510
FillViewport does respect
the aspect ratio of the world, but

29
00:01:31,510 --> 00:01:34,640
it might clip some parts of the world
in order to make that true.

30
00:01:34,640 --> 00:01:38,960
For instance, this world is now
only 12 by 9, instead of 16 by 9.

31
00:01:38,960 --> 00:01:42,450
The extra is offscreen to the left and
right.

32
00:01:42,450 --> 00:01:46,170
A FitViewport makes sure that
the entire world is visible and

33
00:01:46,170 --> 00:01:48,260
at the correct aspect ratio.

34
00:01:48,260 --> 00:01:51,800
However, it does this by adding black
bars at the top and bottom or left and

35
00:01:51,800 --> 00:01:54,310
right to pad out the rest of the window.

36
00:01:54,310 --> 00:01:55,960
This is also called Letter Boxing.

37
00:01:55,960 --> 00:01:59,040
It's what happens when you watch
wide screen movies on old TVs.

38
00:01:59,040 --> 00:02:04,110
This is a great choice when the exact
size of the game world is essential,

39
00:02:04,110 --> 00:02:07,880
but it can look bad on devices that
have very different aspect ratios from

40
00:02:07,880 --> 00:02:09,160
what you intend.

41
00:02:09,160 --> 00:02:12,272
The last viewport type
is the ExtendViewport.

42
00:02:12,272 --> 00:02:15,645
The ExtendViewport also ensures that
the entire game world is visible and

43
00:02:15,645 --> 00:02:17,390
at the correct aspect ratio.

44
00:02:17,390 --> 00:02:20,650
It just makes the game world
bigger in the smaller dimension

45
00:02:20,650 --> 00:02:23,240
in order to fill up
the rest of the space.

46
00:02:23,240 --> 00:02:25,150
So if you remember from
the ScreenViewport,

47
00:02:25,150 --> 00:02:27,660
we had this green apron all around.

48
00:02:27,660 --> 00:02:31,450
You can see it in this version because
we're actually allowed to draw up here.

49
00:02:31,450 --> 00:02:34,180
Back when we were using the FitViewport,
those black bars,

50
00:02:34,180 --> 00:02:36,950
we weren't allowed to draw
anything out there at all.

51
00:02:36,950 --> 00:02:40,180
When it comes to making games that
work across a whole range of devices

52
00:02:40,180 --> 00:02:41,475
with different aspect ratios,

53
00:02:41,475 --> 00:02:45,918
ExtendViewport is almost always the best
choice, when you can get away with it.

54
00:02:45,918 --> 00:02:48,740
Remember, the ScreenViewport
makes the size of the world

55
00:02:48,740 --> 00:02:50,850
match the size of the screen,
pixel for pixel.

56
00:02:51,995 --> 00:02:55,470
StretchViewport makes the world fill
the screen, regardless of aspect ratio.

57
00:02:56,885 --> 00:02:59,060
FillViewport also makes
the world fill the screen,

58
00:02:59,060 --> 00:03:03,285
maintaining the aspect ratio but
cutting off bits of the world.

59
00:03:03,285 --> 00:03:06,070
FitViewport fits the world
inside the screen,

60
00:03:06,070 --> 00:03:10,558
adding black bars to pad out the extra
space to maintain the aspect ratio.

61
00:03:10,558 --> 00:03:14,470
And finally, ExtendViewport makes the
short axis of the world larger to fill

62
00:03:14,470 --> 00:03:16,360
the screen,
maintaining the aspect ratio.
