1
00:00:00,000 --> 00:00:03,000
My solution, I admit, is not the most elegant,

2
00:00:03,000 --> 00:00:06,000
but it's the simplest that I could find

3
00:00:06,000 --> 00:00:09,000
without going into more complicated data structures.

4
00:00:09,000 --> 00:00:12,000
The key thing is that I'm going to go through all my data items,

5
00:00:12,000 --> 00:00:14,000
there's a for loop over here.

6
00:00:14,000 --> 00:00:18,000
As I explained before, this gets me the length of the data sequence;

7
00:00:18,000 --> 00:00:23,000
this gives me a list of all the indices from zero to six, in this case.

8
00:00:23,000 --> 00:00:26,000
We're going to go through these indices one after another in this variable "i."

9
00:00:26,000 --> 00:00:29,000
Now comes the tricky part. I pick the i'th data item,

10
00:00:29,000 --> 00:00:32,000
and I count how often does this occur in the entire list.

11
00:00:32,000 --> 00:00:34,000
For the first data item, 1--

12
00:00:34,000 --> 00:00:36,000
the argument here would be 1--

13
00:00:36,000 --> 00:00:38,000
and the count will give me 1

14
00:00:38,000 --> 00:00:41,000
because there's exactly 1 occurrence of 1.

15
00:00:41,000 --> 00:00:43,000
But for the third item--

16
00:00:43,000 --> 00:00:46,000
as we know, "i" will be 2 now, going from zero on--

17
00:00:46,000 --> 00:00:49,000
then this thing over here will give me the number 5.

18
00:00:49,000 --> 00:00:51,000
I'm going to hit count.

19
00:00:51,000 --> 00:00:53,000
I get back 3 because there's 3 occurrences of 5.

20
00:00:53,000 --> 00:00:56,000
Now I need to find the maximum count,

21
00:00:56,000 --> 00:00:59,000
and specifically the data item that maximizes the count.

22
00:00:59,000 --> 00:01:02,000
For that, I've implemented a variable called "modecnt" that I've set to zero.

23
00:01:02,000 --> 00:01:06,000
If my current count exceeds modecnt, then I've found a new winner.

24
00:01:06,000 --> 00:01:09,000
So as a new winner, I'm going to set the new data item

25
00:01:09,000 --> 00:01:11,000
to the winner--the mode--

26
00:01:11,000 --> 00:01:13,000
and I update modecnt

27
00:01:13,000 --> 00:01:16,000
to reflect the fact that this new winner has a higher count in the data set

28
00:01:16,000 --> 00:01:18,000
than my initial zero.

29
00:01:18,000 --> 00:01:22,000
I iterate this. Out comes the mode.

30
00:01:22,000 --> 00:01:25,000
When I run it for this data set, I get 5.

31
00:01:25,000 --> 00:01:29,000
If you got this right, then you know a lot about programming.

32
00:01:29,000 --> 99:59:59,999
This was really a nontrivial programming quiz.
