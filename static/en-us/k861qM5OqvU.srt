1
00:00:00,200 --> 00:00:02,800
So here's what we want to do, we want to go through

2
00:00:02,800 --> 00:00:06,770
all the pages in the graph. So, we'll call them nodes

3
00:00:06,770 --> 00:00:09,370
this time, we can't use page again, because we already used

4
00:00:09,370 --> 00:00:11,370
page up here. So we're going to go through each page in

5
00:00:11,370 --> 00:00:16,059
the graph, giving it the name node, and for each node,

6
00:00:16,059 --> 00:00:19,600
now what we need to do, is check whether that page

7
00:00:19,600 --> 00:00:22,720
links to this one. So we're going to look in graph index

8
00:00:22,720 --> 00:00:25,080
node, that's going to get us the list of all the pages.

9
00:00:25,080 --> 00:00:28,130
That node links to. If page is in that

10
00:00:28,130 --> 00:00:31,970
list, well that means that node links to page.

11
00:00:31,970 --> 00:00:35,490
So that means that we should add to newrank,

12
00:00:35,490 --> 00:00:38,189
based on the rank of this node. So that's what

13
00:00:38,189 --> 00:00:40,834
we're going to do. We're going to add to newrank, and

14
00:00:40,834 --> 00:00:43,480
the new value is going to be the old value.

15
00:00:43,480 --> 00:00:46,380
We summing into the value of newrank. We're going to

16
00:00:46,380 --> 00:00:50,130
multiply by d, that's our damping factor. And, the value

17
00:00:50,130 --> 00:00:53,850
that we're going to use here, is the page rank of

18
00:00:53,850 --> 00:00:57,190
the node. Remember, it's the node that links to this node

19
00:00:57,190 --> 00:00:59,062
that we care about, so we're getting the rank on

20
00:00:59,062 --> 00:01:02,100
the page. What we want to do, is divide that by the

21
00:01:02,100 --> 00:01:06,450
number of out links from that page, and that's important,

22
00:01:06,450 --> 00:01:10,000
that means that each, a page with many links, the value

23
00:01:10,000 --> 00:01:12,140
of each link is less. We need to divide that by

24
00:01:12,140 --> 00:01:16,050
the length. Of that list, which is what we get by

25
00:01:16,050 --> 00:01:19,000
looking at graph index node. So, that's all we need.

26
00:01:19,000 --> 00:01:22,220
We are going to update the newrank. We are going through all

27
00:01:22,220 --> 00:01:24,070
the nodes in the graph. We are finding all the nodes

28
00:01:24,070 --> 00:01:26,460
that link to this one, and we are updating our rank

29
00:01:26,460 --> 00:01:29,180
using the formula to get that, and at the end, we're

30
00:01:29,180 --> 00:01:33,190
returning the ranks. So let's try that in the Python Interpreter.

31
00:01:33,190 --> 00:01:36,180
We have the code that we just wrote for compute_ranks. We're

32
00:01:36,180 --> 00:01:41,110
going to use crawl_web passing in the example site. Assigning the outputs

33
00:01:41,110 --> 00:01:42,890
to the variable index, which is the index and

34
00:01:42,890 --> 00:01:46,726
graph. And then we're passing in graph to compute_ranks, storing

35
00:01:46,726 --> 00:01:49,270
the result in the variable ranks. And we can

36
00:01:49,270 --> 00:01:52,820
print out the result in ranks, to see the page

37
00:01:52,820 --> 00:01:55,970
ranks. So, here's what we get. So we get

38
00:01:55,970 --> 00:01:59,960
a dictionary, for each URL that we crawled. We have

39
00:01:59,960 --> 00:02:03,134
an entry where we have the URL, followed by

40
00:02:03,134 --> 00:02:06,150
each page rank as the value. So let's see if

41
00:02:06,150 --> 00:02:09,130
the ranks that we get make sense. So, going

42
00:02:09,130 --> 00:02:12,950
back to our example site, we have the page

43
00:02:12,950 --> 00:02:15,680
Kathleen that has two links going into it. We

44
00:02:15,680 --> 00:02:18,900
have the page Nickel. That has three li, links going

45
00:02:18,900 --> 00:02:21,890
into it. If we just did simple link counting,

46
00:02:21,890 --> 00:02:25,160
well then, Nickel should be more popular than Kathleen. If

47
00:02:25,160 --> 00:02:26,950
we look at the page ranks, well the page

48
00:02:26,950 --> 00:02:31,718
rank for Nickel is 0.97. The page rank for Kathleen,

49
00:02:31,718 --> 00:02:35,360
is 0.11. So the page rank is actually higher,

50
00:02:35,360 --> 00:02:38,380
for the page that only has two incoming links. And

51
00:02:38,380 --> 00:02:40,700
the reason for that is, well, even though it only

52
00:02:40,700 --> 00:02:43,890
has two incoming links, the links that are coming into

53
00:02:43,890 --> 00:02:47,480
the page, are from popular pages. It's coming in from

54
00:02:47,480 --> 00:02:50,050
the index page, and it's coming in from the very

55
00:02:50,050 --> 00:02:54,200
popular Nickel page. So that's why the page rank of

56
00:02:54,200 --> 00:02:56,690
Kathleen is actually higher than the page rank of Nickel.
