1
00:00:00,530 --> 00:00:03,839
As you start creating objects, there
are some naming conventions that you'll

2
00:00:03,839 --> 00:00:06,660
want to follow when
defining object properties.

3
00:00:06,660 --> 00:00:09,120
Not following these conventions
can lead to some sneaky bugs.

4
00:00:09,119 --> 00:00:13,209
So I want to spend some time showing you
some things that you'll want to avoid as

5
00:00:13,210 --> 00:00:16,580
well as best practices for
naming object properties.

6
00:00:16,579 --> 00:00:18,459
Okay, so
here I have a couple of examples and

7
00:00:18,460 --> 00:00:21,269
let's just walk through through
each one of these one by one.

8
00:00:21,269 --> 00:00:24,609
In the first example I've got
an object called person, and

9
00:00:24,609 --> 00:00:26,710
it's got some properties that
are used to describe the person.

10
00:00:26,710 --> 00:00:28,699
Actually this person is my dad [LAUGH].

11
00:00:28,699 --> 00:00:33,500
So his name's John, he's 55,
and he's got three children.

12
00:00:33,500 --> 00:00:36,329
Myself, my twin brother Jarrod,
and my sister Alexis.

13
00:00:36,329 --> 00:00:39,750
So anyways, there's two things
I want to point out here.

14
00:00:39,750 --> 00:00:42,950
First, I'm using quotes
around the property names.

15
00:00:42,950 --> 00:00:46,359
Now quotes are perfectly valid but
they're not required.

16
00:00:46,359 --> 00:00:49,859
However, sometimes when you use
quotes around property names

17
00:00:49,859 --> 00:00:52,320
it can mass some potential problems.

18
00:00:52,320 --> 00:00:56,380
For example, I'm going to copy this
code over to our console and let's try

19
00:00:56,380 --> 00:00:59,820
accessing some of these properties so
I can show you what I mean.

20
00:00:59,820 --> 00:01:01,530
So we'll copy this and
paste it over here.

21
00:01:02,890 --> 00:01:06,519
So I've got my person object copied over
to the console and let's give it a go.

22
00:01:06,519 --> 00:01:08,799
Remember we've got two different
ways to access properties.

23
00:01:08,799 --> 00:01:11,039
We can use bracket notation or
dot notation.

24
00:01:11,040 --> 00:01:14,160
So let's just start with
bracket notation first.

25
00:01:14,159 --> 00:01:19,079
So let me try person and let's try
to get the name of this person.

26
00:01:19,079 --> 00:01:21,510
To do that it turns back John.

27
00:01:21,510 --> 00:01:22,300
Okay, so that works.

28
00:01:22,299 --> 00:01:23,731
That's not a problem.

29
00:01:23,731 --> 00:01:29,170
And let's try doing one of the children,
the first child which is me.

30
00:01:29,170 --> 00:01:31,647
And awesome so it tuns back James.

31
00:01:31,647 --> 00:01:34,733
But now let's trying doing
it with dot notation and

32
00:01:34,733 --> 00:01:37,530
this is where you're
going to see the problem.

33
00:01:37,530 --> 00:01:41,260
So we do dot name, no that's still okay.

34
00:01:41,260 --> 00:01:42,365
But what about first child?

35
00:01:42,364 --> 00:01:45,979
Uh-oh, we've got a syntax error.

36
00:01:45,980 --> 00:01:49,350
It doesn't seem to like our
1stChild using dot notation.

37
00:01:49,349 --> 00:01:51,819
So, this is, basically,
the second thing I want to point out.

38
00:01:51,819 --> 00:01:56,429
Don't use numbers as the first
character in your property names.

39
00:01:56,430 --> 00:01:58,740
Technically, it works,
if you're using bracket notation, but

40
00:01:58,739 --> 00:02:01,549
it's going to limit you when
you're using dot notation and

41
00:02:01,549 --> 00:02:03,719
it's just bad practice in general,
so avoid it.

42
00:02:04,780 --> 00:02:07,570
And just to show you what I mean by
quotes sometimes masking potential

43
00:02:07,569 --> 00:02:11,889
problems, if we drop the quotes which
I've done now in this example, and

44
00:02:11,889 --> 00:02:12,750
we copy and

45
00:02:12,750 --> 00:02:15,979
paste it back over to the console,
we're going to get an error back.

46
00:02:15,979 --> 00:02:19,569
So yes, so sometimes quotes
can mask potential problems

47
00:02:19,569 --> 00:02:21,569
when you're naming object properties.

48
00:02:21,569 --> 00:02:26,099
So the moral here is
that don't use numbers to

49
00:02:26,099 --> 00:02:28,430
start your object property names.

50
00:02:28,430 --> 00:02:32,000
And really for this example, for
first, second and third child.

51
00:02:32,000 --> 00:02:35,740
To do this right we should just
change this over to being an array

52
00:02:35,740 --> 00:02:36,610
that holds the children.

53
00:02:37,879 --> 00:02:39,231
Yeah, that's a lot better.

54
00:02:39,231 --> 00:02:41,210
All right, so
let's move on to this next example.

55
00:02:41,210 --> 00:02:43,790
Based on the first example you might
already see where the problems

56
00:02:43,789 --> 00:02:44,810
are going to be.

57
00:02:44,810 --> 00:02:46,900
But let me go ahead and
point them out anyway.

58
00:02:46,900 --> 00:02:49,640
So again, we're using quotes for
property names and

59
00:02:49,639 --> 00:02:52,819
it's going to let us get away with
some things that normally don't fly.

60
00:02:52,819 --> 00:02:57,900
The first is using spaces, and
the second is using hyphens.

61
00:02:57,900 --> 00:03:00,060
You should definitely avoid
doing either of these things for

62
00:03:00,060 --> 00:03:03,500
the same reasons as using
a number as the first character.

63
00:03:03,500 --> 00:03:06,604
Neither of these will work
when you use dot notation.

64
00:03:06,604 --> 00:03:09,571
So if we copy this over to
the JavaScript console and

65
00:03:09,570 --> 00:03:11,643
give it a try we'll see what I mean.

66
00:03:11,643 --> 00:03:19,189
So we'll say garage.fire truck, and
yeah so there is a syntax error here.

67
00:03:19,189 --> 00:03:20,629
And then the same thing goes for

68
00:03:20,629 --> 00:03:25,180
our hyphen, if we say race-car,
again another syntax error.

69
00:03:25,180 --> 00:03:28,015
Now the reason I've got this
is a different example,

70
00:03:28,014 --> 00:03:33,509
is because both of these properties are
examples of multi-word property names.

71
00:03:33,509 --> 00:03:37,129
If you want to use multi-word
properties Instead of using a space or

72
00:03:37,129 --> 00:03:40,460
a hyphen the preferred method
is using camel casing.

73
00:03:40,460 --> 00:03:42,360
Now camel casing is pretty simple.

74
00:03:42,360 --> 00:03:45,100
You just remove the spaces
between multiple words, so

75
00:03:45,099 --> 00:03:47,515
we'll do that here, or
in this case a hyphen.

76
00:03:47,515 --> 00:03:52,000
And then you want to upper case the
first letter in the rest of the words

77
00:03:52,000 --> 00:03:53,550
throughout the property name.

78
00:03:54,590 --> 00:03:58,280
So to recap property names can
be any combination of upper and

79
00:03:58,280 --> 00:04:02,060
lower case letters as well as numbers
just as long as numbers aren't

80
00:04:02,060 --> 00:04:03,759
the beginning of your property name.

81
00:04:03,759 --> 00:04:06,429
Like you can put a number
anywhere in here and

82
00:04:06,430 --> 00:04:09,569
that's going to be fine,
just not at the beginning.

83
00:04:09,569 --> 00:04:11,555
Also using camel casing for

84
00:04:11,555 --> 00:04:16,060
multi-word properties is going to be
better than using spaces or hyphens.

85
00:04:16,060 --> 00:04:17,199
Again, you can use spaces or

86
00:04:17,199 --> 00:04:20,579
hyphens when you're using quotes
around your property names.

87
00:04:20,579 --> 00:04:23,750
But then it's going to break on you
when you try to use dot notation

88
00:04:23,750 --> 00:04:24,970
to access those properties.

89
00:04:24,970 --> 00:04:27,690
So rather than doing that,
just avoid that completely and

90
00:04:27,689 --> 00:04:30,870
use camel casing that's
going to be your best bet.

91
00:04:30,870 --> 00:04:33,980
Finally, one other thing worth
mentioning is all of these rules

92
00:04:33,980 --> 00:04:36,600
also apply to just
normal variable names.

93
00:04:36,600 --> 00:04:39,790
So if your variable name is good,
then it is probably also good for

94
00:04:39,790 --> 00:04:40,460
a property name.

