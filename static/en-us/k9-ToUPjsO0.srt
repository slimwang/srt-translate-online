1
00:00:00,430 --> 00:00:04,470
We actually have full access to the DOM in the JavaScript console.

2
00:00:04,470 --> 00:00:09,540
If you type document, you can see what is returned is the entire DOM document.

3
00:00:09,540 --> 00:00:14,030
Contained within it, is the HTML of the page and the HTML tag.

4
00:00:14,030 --> 00:00:17,420
The other top level object available is the window.

5
00:00:17,420 --> 00:00:20,540
The window corresponds to the browser window and

6
00:00:20,540 --> 00:00:24,440
the document corresponds to the HTML page that's been loaded.

7
00:00:24,440 --> 00:00:28,830
One thing that you may want to do when working with D3 is select elements of

8
00:00:28,830 --> 00:00:33,180
a web page either by something like their class, their ID or

9
00:00:33,180 --> 00:00:35,030
even just what type of tag they are.

10
00:00:35,030 --> 00:00:38,650
But the way that D3 actually does its selections, is based on

11
00:00:38,650 --> 00:00:44,390
the native DOM selection API that gets exposed through native JavaScript.

12
00:00:44,390 --> 00:00:48,510
If we would say, like to access a DOM mode by its ID,

13
00:00:48,510 --> 00:00:52,620
we can call the appropriate selector function on the document itself.

14
00:00:52,620 --> 00:00:56,010
If you notice here, if I type document.get,

15
00:00:56,010 --> 00:00:59,580
Chrome is smart enough to auto complete what function I might want, but

16
00:00:59,580 --> 00:01:02,710
if there's multiple options it shows me all of them.

17
00:01:02,710 --> 00:01:06,260
As you can see here I can get an element by its ID.

18
00:01:06,260 --> 00:01:09,490
I can get multiple elements by their class name and

19
00:01:09,490 --> 00:01:11,840
get multiple elements by their name.

20
00:01:11,840 --> 00:01:15,460
I can get multiple elements by their tag name and so forth.

21
00:01:15,460 --> 00:01:21,140
Typically you never need to access the DOM from this low level of a function,

22
00:01:21,140 --> 00:01:24,750
due to the wealth of libraries that make selecting elements much

23
00:01:24,750 --> 00:01:25,410
more convenient.

24
00:01:25,410 --> 00:01:30,320
One of the most popular is jQuery D3 has a very similar method of

25
00:01:30,320 --> 00:01:32,880
selecting DOM nodes as jQuery does.

26
00:01:32,880 --> 00:01:38,260
But for now, let's start with the simplest and try to get an element by it's ID.

27
00:01:38,260 --> 00:01:41,310
If we try to get a footer, this is going to look for

28
00:01:41,310 --> 00:01:44,450
a DOM node that has ID equal to footer.

29
00:01:44,450 --> 00:01:48,740
And what we see here, is a div tag ID equal to footer, and

30
00:01:48,740 --> 00:01:52,320
we can expand this, and see everything that's contained with in it.

31
00:01:52,320 --> 00:01:53,300
The second and

32
00:01:53,300 --> 00:01:58,090
last query function, defined in the DOM is what's called querySelector.

33
00:01:58,090 --> 00:02:03,510
querySelector is actually much more general than getElementById, and

34
00:02:03,510 --> 00:02:05,620
is what D3 uses internally.

35
00:02:05,620 --> 00:02:11,440
querySelector allows us to use CSS select our syntax to grab DOM elements.

36
00:02:11,440 --> 00:02:15,970
If you're not familiar with CSS query selector syntax I recommend looking it

37
00:02:15,970 --> 00:02:18,420
up as its a very powerful syntax.

38
00:02:18,420 --> 00:02:19,380
The simplest and

39
00:02:19,380 --> 00:02:24,310
most commonly used CSS query selector is probably the class selector.

40
00:02:24,310 --> 00:02:27,510
If you prepend a dot to whatever class you're searching for,

41
00:02:27,510 --> 00:02:31,660
the document .QuerySelector, will find the DOM nodes that have a class,

42
00:02:31,660 --> 00:02:33,720
in this case of Viewer, Maine.

43
00:02:33,720 --> 00:02:34,910
As you can see here,

44
00:02:34,910 --> 00:02:39,340
Viewer, Maine, corresponds to the main window that the video player is in.

45
00:02:39,340 --> 00:02:42,400
And this is actually the same object that gets returned down here.

46
00:02:42,400 --> 00:02:48,440
Notice if I hover over the DOM node in the console or in the HTML frame up here

47
00:02:48,440 --> 00:02:52,870
Chrome's smart enough to know that I'm trying to inspect the DOM node, in this

48
00:02:52,870 --> 00:02:57,540
case a div with class viewer maine, and highlights it for me in the left pane
