1
00:00:00,480 --> 00:00:01,938
Scope can be a tricky subject,

2
00:00:01,938 --> 00:00:05,367
especially when you're balancing
between global and function scope.

3
00:00:05,367 --> 00:00:09,859
One of the gotcha scope can result in is
called scope overriding or shadowing.

4
00:00:09,859 --> 00:00:10,839
To show you how this works and

5
00:00:10,839 --> 00:00:14,199
how you can avoid it, let's take a look
at the the following code example.

6
00:00:14,199 --> 00:00:17,710
Here we have the same variable
bookTitle being assigned values in

7
00:00:17,710 --> 00:00:19,182
two different scopes.

8
00:00:19,181 --> 00:00:22,591
The bookTitle in the global scope is
assigned the value Le Petit Prince, and

9
00:00:22,591 --> 00:00:27,199
the bookTitle in this function scope is
assigned the value The Little Prince.

10
00:00:28,280 --> 00:00:33,170
If we print out the value of bookTitle
at each part of this program, you'll see

11
00:00:33,170 --> 00:00:37,929
that in the final console.log statement,
that The Little Prince is printed out.

12
00:00:37,929 --> 00:00:40,237
However, at this point in the code,

13
00:00:40,237 --> 00:00:45,082
we're no longer in the function scope
of the display book English function.

14
00:00:45,082 --> 00:00:50,729
So why is the bookTitle Le Petit Prince
not being printed instead?

15
00:00:50,729 --> 00:00:55,274
Well, this is a classic case of
scope overriding or shadowing.

16
00:00:55,274 --> 00:00:57,451
When we reach the fifth
line of this code,

17
00:00:57,451 --> 00:01:01,618
the bookTitle variable from the global
scope is actually being reassigned with

18
00:01:01,618 --> 00:01:03,185
the value The Little Prince.

19
00:01:03,185 --> 00:01:08,820
So the bookTitle here is being
reassigned by the bookTitle here.

20
00:01:08,820 --> 00:01:12,881
That means when we finally reach
the last console.log in this code,

21
00:01:12,881 --> 00:01:15,751
bookTitle in the global
scope has been changed,

22
00:01:15,751 --> 00:01:18,489
even though we'd exited
the function scope.

23
00:01:18,489 --> 00:01:22,380
To prevent this from happening, we're
going to simply declare a new variable

24
00:01:22,379 --> 00:01:25,159
inside the display
book English function.

25
00:01:25,159 --> 00:01:27,629
So instead of just
reassigning bookTitle,

26
00:01:27,629 --> 00:01:29,209
we're going to create
a different variable.

27
00:01:29,209 --> 00:01:33,929
So now, we've got a variable
inside displayBookEnglish

28
00:01:33,930 --> 00:01:36,650
that is relative to this function scope.

29
00:01:36,650 --> 00:01:42,109
And our bookTitle that's declared in
the global scope will remain unchanged.

30
00:01:42,109 --> 00:01:45,480
And that way, when we'll reach the tenth
line in our code, and we print it out

31
00:01:45,480 --> 00:01:48,950
for the third time, it's going to print
out what we expect, Le Petit Prince.

