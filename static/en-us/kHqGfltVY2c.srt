1
00:00:00,290 --> 00:00:02,870
The fourth category of connector is a little bit different than the other.

2
00:00:02,870 --> 00:00:04,550
This is linkage connectors.

3
00:00:04,550 --> 00:00:09,100
And they're responsible for describing the structure of the system.

4
00:00:09,100 --> 00:00:12,080
That term linkage here, you can think in terms of link editors,

5
00:00:12,080 --> 00:00:16,450
if you've ever heard of those ways of organizing or constructing or

6
00:00:16,450 --> 00:00:19,010
putting together the pieces of a system.

7
00:00:19,010 --> 00:00:20,690
Linkage connectors are responsible for

8
00:00:20,690 --> 00:00:24,940
establishing the ducts and enforcing the interaction semantics.

9
00:00:24,940 --> 00:00:28,130
Hence, they provide a facilitation service.

10
00:00:28,130 --> 00:00:31,257
Because they're responsible for putting the system together but not for

11
00:00:31,257 --> 00:00:34,496
actually running the system, they may disappear after setup is complete.

12
00:00:34,496 --> 00:00:40,812
The unit of linkage might be a module, might be a file might be an object.

13
00:00:40,812 --> 00:00:45,461
And related to this are tools like configuration management tools and

14
00:00:45,461 --> 00:00:49,530
the make command for actually building a system.

15
00:00:49,530 --> 00:00:54,150
There are semantic issues with respect to the granularity of the pieces and

16
00:00:54,150 --> 00:00:58,610
the semantics that is the, what are the protocols among the pieces.

17
00:00:58,610 --> 00:01:03,080
Among the variants that are involved with linkage connectors are whether they're

18
00:01:03,080 --> 00:01:04,150
implicit or explicit.

19
00:01:04,150 --> 00:01:07,900
For example, implicit might be something like make where you

20
00:01:07,900 --> 00:01:12,420
merely state a overall target that you're trying to build and

21
00:01:12,420 --> 00:01:16,040
the other building steps are done, done for you.

22
00:01:16,040 --> 00:01:20,430
The granularity that is what, what unit is being put together.

23
00:01:20,430 --> 00:01:23,790
Could it be variables, procedures, functions, and, and so on?

24
00:01:23,790 --> 00:01:28,110
And then of course, the semantics, the cardinality in terms of defines and

25
00:01:28,110 --> 00:01:29,120
uses provides and

26
00:01:29,120 --> 00:01:33,130
requires, and a key one is binding, that is when does all this happen?

27
00:01:33,130 --> 00:01:36,820
It might be at compile time, it might be at run time, or

28
00:01:36,820 --> 00:01:40,600
might even be before compile time if, well,

29
00:01:40,600 --> 00:01:45,480
part of your construction process involves things like templating or generics.
