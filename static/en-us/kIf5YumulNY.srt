1
00:00:00,370 --> 00:00:03,340
We've taken a look at correspondence done in a simple fashion.

2
00:00:03,340 --> 00:00:05,910
And in fact that simple fashion is what you guys are going to do on

3
00:00:05,910 --> 00:00:07,070
your problem set.

4
00:00:07,070 --> 00:00:10,800
I want to take a look at a couple of slightly more sophisticated methods that

5
00:00:10,800 --> 00:00:13,520
are actually closer to the state of the art in stereo.

6
00:00:13,520 --> 00:00:15,160
There are a couple of ways we do that.

7
00:00:15,160 --> 00:00:18,250
There's a bunch of stereo pairs out there for

8
00:00:18,250 --> 00:00:22,000
which there is known ground truth of depth.

9
00:00:22,000 --> 00:00:24,300
So here's one from the University of Tsukuba.

10
00:00:24,300 --> 00:00:28,310
It's a well known scene, and the image on the right is the actual depth.

11
00:00:28,310 --> 00:00:30,520
And these things can be generated in a variety of ways.

12
00:00:30,520 --> 00:00:32,540
You use a laser scanner.

13
00:00:32,540 --> 00:00:36,140
Some other method of being very precise and doing the matching.

14
00:00:36,140 --> 00:00:39,140
But the idea is, if you're developing a stereo algorithm or

15
00:00:39,140 --> 00:00:41,820
you're doing a paper or something, you have a scene for

16
00:00:41,820 --> 00:00:45,150
which you can say, I know what the actual value should be.

17
00:00:46,320 --> 00:00:49,860
So, the types of methods I was showing you before,

18
00:00:49,860 --> 00:00:51,660
which are Window based matching,

19
00:00:51,660 --> 00:00:55,530
on the left here we have sort of the best result of a Window based match.

20
00:00:55,530 --> 00:00:56,930
And on the right is the Ground truth.

21
00:00:56,930 --> 00:00:59,020
And we're using a false color image here.

22
00:00:59,020 --> 00:01:00,930
It makes it a lot easier to see mistakes.

23
00:01:00,930 --> 00:01:02,350
If everything was just gray values and

24
00:01:02,350 --> 00:01:05,440
disparities, it's harder to see how things have changed.

25
00:01:05,440 --> 00:01:08,480
And you'll notice that it does an okay job.

26
00:01:08,480 --> 00:01:12,770
You know the, the mannequin head is in front of other things, but

27
00:01:12,770 --> 00:01:15,570
it really does a pretty crummy job around the edges.

28
00:01:15,570 --> 00:01:19,360
This movie camera in the back, whoops bad color, this camera in

29
00:01:19,360 --> 00:01:23,780
the back is sort of all eaten up here, never mind what's going on over here.

30
00:01:23,780 --> 00:01:27,590
So it has some general difficulties, and what we'd like to do is to see if we

31
00:01:27,590 --> 00:01:30,580
can get a lot closer to that ground truth solution.

32
00:01:30,580 --> 00:01:35,250
So better solutions do something more than

33
00:01:35,250 --> 00:01:39,290
just individual correspondence estimates, all right?

34
00:01:39,290 --> 00:01:43,500
Essentially what they want to do is they want to optimize the set of

35
00:01:43,500 --> 00:01:47,960
disparity assignments, in some sense, jointly, meaning that I don't just

36
00:01:47,960 --> 00:01:52,200
assign this pixel to somewhere and then this pixel independently.

37
00:01:52,200 --> 00:01:55,840
I want to think of all of the assignments together in some way.

38
00:01:55,840 --> 00:01:57,280
Come up with an optimal solution.

39
00:01:57,280 --> 00:02:00,700
And this can be done in two different at, at least two different ways.

40
00:02:00,700 --> 00:02:02,690
One is to do a scanline at a time.

41
00:02:02,690 --> 00:02:04,930
So we're still going to do a line at a time.

42
00:02:04,930 --> 00:02:07,640
But for all of the pixels in that line,

43
00:02:07,640 --> 00:02:10,060
we're going to think about how we want to do the assignment.

44
00:02:10,060 --> 00:02:11,530
And then we do that for each scanline.

45
00:02:11,530 --> 00:02:14,660
And then even more modern methods, the ones that are,

46
00:02:14,660 --> 00:02:17,830
that get even more improvement, they actually do it on a full 2D grid.

47
00:02:17,830 --> 00:02:21,030
So we're not thinking just across the scanline but vertically as well.

48
00:02:22,040 --> 00:02:24,260
So let's talk about the scanline methods.

49
00:02:24,260 --> 00:02:28,230
So here I have, that's Kuva University picture again, and

50
00:02:28,230 --> 00:02:33,530
we have two intensity profiles, the left and the right, all right?

51
00:02:33,530 --> 00:02:35,750
So just to be very precise about it,

52
00:02:35,750 --> 00:02:40,020
we have a 1D signal here, and a 1D signal here, and

53
00:02:40,020 --> 00:02:45,450
we have to match every pixel here to some pixel somewhere over here, all right?

54
00:02:45,450 --> 00:02:50,730
But what what we want to find is we want to find the best overall match,

55
00:02:50,730 --> 00:02:54,290
that is the whole set of matches, we want the best set.
