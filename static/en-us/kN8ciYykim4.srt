1
00:00:00,409 --> 00:00:06,260
So, now we're in a good position to finally define this notion

2
00:00:06,260 --> 00:00:09,159
of NP-completeness that I mentioned in the beginning of the unit.

3
00:00:09,159 --> 00:00:10,626
We can say some problem X is NP-complete if it satisfies two properties.

4
00:00:10,626 --> 00:00:15,893
First, it has to be NP-hard, meaning that nothing

5
00:00:15,893 --> 00:00:19,524
in NP is harder then X. Which is to say that if you could

6
00:00:19,524 --> 00:00:24,376
solve X in polynomial time, you could use it to solve everything in NP in polynomial time.

7
00:00:24,376 --> 00:00:27,675
And the second important property is that X

8
00:00:27,675 --> 00:00:33,492
itself is in NP. So its in the set and its as hard as anything in the set.

9
00:00:33,492 --> 00:00:37,042
So, it is in fact the hardest in this set.

10
00:00:37,042 --> 00:00:39,675
And though it may seem a little weird to satisfy

11
00:00:39,675 --> 00:00:43,942
both of these at the same time, there are actually tons of problems known to be NP-complete.

12
00:00:43,942 --> 00:00:49,044
Very often when you go to solve some, to develop some kind of algorithm to solve

13
00:00:49,044 --> 00:00:53,125
a problem and there just doesn't feel like there is anyway to get a foothold

14
00:00:53,125 --> 00:00:58,075
on it, uh, its a good idea to check: is NP-hard and is it in NP?

15
00:00:58,075 --> 00:01:03,292
If so, its NP-complete. And, uh, at this point now, tons of problems are known to be NP-complete.

16
00:01:03,292 --> 00:01:06,742
There is lists, there are online websites that list lots of problems.

17
00:01:06,742 --> 00:01:13,439
There's wonderfully written books that layout problem after problem after problem.

18
00:01:13,439 --> 00:01:16,721
And sometimes they are really natural extensions of each other and

19
00:01:16,721 --> 00:01:20,522
sometimes its really quite interesting to see how they are connected to each other.

20
00:01:20,522 --> 00:01:24,273
Saying that some problem is NP-complete tells us an awful lot about that problem.

21
00:01:24,273 --> 00:01:28,607
So, lets imagine there is some problem called graph partitioning - which is a real problem.

22
00:01:28,607 --> 00:01:31,890
And it is related to social networks.

23
00:01:31,890 --> 00:01:35,489
But, I'm not going to tell you what it is, but I will tell you that its NP-complete.

24
00:01:35,489 --> 00:01:39,907
Even if you don't know what it is, there are some things that you do know by the virtue of the fact

25
00:01:39,907 --> 00:01:44,057
that is is NP-complete, assuming that you believe me, you'd know the following:

26
00:01:44,057 --> 00:01:47,522
which of these, check all that apply, which of these do you know?

27
00:01:47,522 --> 00:01:50,922
if I tell you that graph-partitioning is NP-complete does that mean its

28
00:01:50,922 --> 00:01:55,590
NP-hard and therefore a polynomial time solution for that problem

29
00:01:55,590 --> 00:01:57,657
solves everything in NP.

30
00:01:57,657 --> 00:02:01,622
Do we know that the problem clique can be reduced to it?

31
00:02:01,622 --> 00:02:04,889
Given what we've said so far about what we've said so far about clique.

32
00:02:04,889 --> 00:02:12,706
Do we know that graph partitioning is in NP, and therefore an exponential time solution would exist?

33
00:02:12,706 --> 00:02:22,240
Do we know that it can be reduced to SAT, based on the things I've told you about SAT in this unit?

34
00:02:22,240 --> 99:59:59,999
Check all that apply.
