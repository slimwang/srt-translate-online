1
00:00:00,000 --> 00:00:03,410
If you play around a bit with this algorithm what you will see is this.

2
00:00:03,410 --> 00:00:08,890
Each time that this loop here runs, it puts at least 1 of the vertices from

3
00:00:08,890 --> 00:00:11,890
the minimum vertex cover into its solution.

4
00:00:11,890 --> 00:00:15,880
So the correct answer is this. Let me illustrate this.

5
00:00:15,880 --> 00:00:20,430
If you take any edge here, so the algorithm starts out fresh, and you take any edge

6
00:00:20,430 --> 00:00:25,240
from this graph, it's impossible to take an edge where not at least 1 of the points

7
00:00:25,240 --> 00:00:27,470
is in the minimum vertex cover.

8
00:00:27,470 --> 00:00:33,480
Say we take this edge here, then "Take 2" would put these 2 vertices here into its solution,

9
00:00:33,480 --> 00:00:36,600
and 1 of those vertices is actually part of the minimum vertex cover.

10
00:00:36,600 --> 00:00:41,680
Or if the "Take 2" algorithm say uses this edge here, then we even have a better case,

11
00:00:41,680 --> 00:00:45,700
because both of the vertices that it now chooses to be part of its solution,

12
00:00:45,700 --> 00:00:49,920
are actually also part of a optimum solution. And this works for all edges.

13
00:00:49,920 --> 00:00:54,620
No matter what edge you choose here, you will always have at least 1 endpoint

14
00:00:54,620 --> 99:59:59,999
that is part of a minimum vertex cover.
