1
00:00:00,242 --> 00:00:02,367
So what is the right error function?

2
00:00:02,367 --> 00:00:05,645
Well, we refer to this error function as the geometric error, and

3
00:00:05,645 --> 00:00:06,708
it works as follows.

4
00:00:06,708 --> 00:00:10,581
Let's suppose I have some points in the world capital Xi, and

5
00:00:10,581 --> 00:00:12,525
here they are shown in yellow.

6
00:00:12,525 --> 00:00:15,839
And furthermore, let's suppose I have an image and

7
00:00:15,839 --> 00:00:18,561
I know where those points are in the image.

8
00:00:18,561 --> 00:00:22,508
And those are the, the red Xi's here and these are these little red points here.

9
00:00:22,508 --> 00:00:27,547
Now, when I specify a camera projection, some sort of an m.

10
00:00:27,547 --> 00:00:31,777
Right? What I'm saying is I know where those capital Xi's,

11
00:00:31,777 --> 00:00:36,220
the real points, are supposed to project to the image plane.

12
00:00:36,220 --> 00:00:40,327
And what I want to do is I want to find the M that gives me the smallest

13
00:00:40,327 --> 00:00:45,147
distance between the predicted X size and the ones that I actually found.

14
00:00:45,147 --> 00:00:47,121
And that's what this equation here says.

15
00:00:47,121 --> 00:00:50,182
What it says is we have an error function that is

16
00:00:50,182 --> 00:00:55,445
the sum of the distances between the observed points, those are the red Xi's.

17
00:00:55,445 --> 00:01:00,586
And the predicted image locations, the white Xi's here of, of where the,

18
00:01:00,586 --> 00:01:05,905
the particular M predicts that the points in the world would land in the image.

19
00:01:05,905 --> 00:01:11,779
And what I want to do is I want to find the M that minimizes that value.

20
00:01:11,779 --> 00:01:17,154
And now what's kind of cool is, I might have a more complicated mapping

21
00:01:17,154 --> 00:01:22,172
from points in the world to my 2D points that include things like,

22
00:01:22,172 --> 00:01:26,942
modeling radial distortion, but fix for me the focal length.

23
00:01:26,942 --> 00:01:30,992
The idea is I'd have some great big nonlinear function that does

24
00:01:30,992 --> 00:01:32,422
the full projection.

25
00:01:32,422 --> 00:01:36,743
And what I want to do is I want to minimize this error function by min,

26
00:01:36,743 --> 00:01:41,081
by manipulating the parameters of that big nonlinear function.

27
00:01:41,081 --> 00:01:44,710
And you might do that using your favorite Levenbergâ€“Marquardt or

28
00:01:44,710 --> 00:01:47,444
some other way of doing nonlinear minimization.

29
00:01:47,444 --> 00:01:51,426
So if you read about this in a book and the, it says, the Gold Standard.

30
00:01:51,426 --> 00:01:54,124
Well, the Gold Standard of this type of work is the book on

31
00:01:54,124 --> 00:01:56,499
Multi-View Geometry by Hartley and Zisserman.

32
00:01:56,499 --> 00:02:00,041
What they refer to as the Gold Standard of calibration is,

33
00:02:00,041 --> 00:02:04,377
Given some number of points, more than, greater than or equal to, but

34
00:02:04,377 --> 00:02:09,107
should be greater than 6, where you have 3D to 2D point correspondences.

35
00:02:09,107 --> 00:02:12,358
The way to find, they refer to it as the Maximum Likelihood Estimate.

36
00:02:12,358 --> 00:02:15,644
We could talk about why that's the case later, I'll tell you right now.

37
00:02:15,644 --> 00:02:19,427
You're assuming that your the place that you located the points in

38
00:02:19,427 --> 00:02:22,527
the image was perturbed by a little bit of Gaussian noise.

39
00:02:22,527 --> 00:02:26,445
So you maximize the likelihood by making that as small as possible, and

40
00:02:26,445 --> 00:02:30,121
you want to minimize the square error, if it's a Gaussian error.

41
00:02:30,121 --> 00:02:32,942
So the way you do that is as follows.

42
00:02:32,942 --> 00:02:35,925
You first compute a linear solution.

43
00:02:35,925 --> 00:02:39,161
Now Hartley and Zisserman talk a little bit and, and this is for

44
00:02:39,161 --> 00:02:42,716
those of you who are going to be more involved in doing some of this.

45
00:02:42,716 --> 00:02:46,033
What you might want to do is, you know, if you're measuring your points out

46
00:02:46,033 --> 00:02:48,245
here in meters, you might have some big numbers or

47
00:02:48,245 --> 00:02:50,738
small numbers depending upon your coordinate system.

48
00:02:50,738 --> 00:02:55,684
Your size of your image, you, you may have different pixel values.

49
00:02:55,684 --> 00:02:59,528
They do a normalization, so that everything sort of goes between zero and

50
00:02:59,528 --> 00:03:01,581
one to try to get numerical stability.

51
00:03:01,581 --> 00:03:06,511
So when they do that, they, they create new vert, new external world points and

52
00:03:06,511 --> 00:03:07,885
new image points.

53
00:03:07,885 --> 00:03:09,197
You can do that or not.

54
00:03:09,197 --> 00:03:12,738
Then what you do is you solve the thing I showed you before.

55
00:03:12,738 --> 00:03:18,740
The direct linear transformation using, typically, the eigenvector approach.

56
00:03:18,740 --> 00:03:23,055
That gives you a starting point for the M matrix,

57
00:03:23,055 --> 00:03:28,643
which gives you a starting point for your nonlinear function.

58
00:03:28,643 --> 00:03:31,873
And then what you can do is you can try, u, u,

59
00:03:31,873 --> 00:03:34,598
using the M, you project the points.

60
00:03:34,598 --> 00:03:38,733
And then you can minimize that total distance that's what's written down

61
00:03:38,733 --> 00:03:42,157
below using, like I said, your favorite nonlinear method.

62
00:03:42,157 --> 00:03:46,351
After you've done all that, if you've done the normalization, you have to

63
00:03:46,351 --> 00:03:50,818
denormalize or, or, or translate back from the, the normalized methods.

64
00:03:50,818 --> 00:03:53,314
So that's how you get out your M.

65
00:03:53,314 --> 00:03:57,921
And that's what they refer to as the Gold Standard alg, of, of calibration.

66
00:03:57,921 --> 00:04:00,851
We only use bronze, which is why in your problem set,

67
00:04:00,851 --> 00:04:03,599
you're going to use just the direct linear method.

68
00:04:03,599 --> 00:04:06,943
And you're going to see that even without, I, I will tell you this,

69
00:04:06,943 --> 00:04:10,349
that the first time we did this we had people do the normalization and

70
00:04:10,349 --> 00:04:13,618
it turns out the normalization by just some, but not a lot.

71
00:04:13,618 --> 00:04:17,060
When we do it this time, you can use the normalization or not.
