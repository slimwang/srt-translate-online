1
00:00:00,590 --> 00:00:02,520
All right, so
do you see what to do here?

2
00:00:02,520 --> 00:00:03,820
>> No.

3
00:00:03,820 --> 00:00:05,870
>> Okay, all right, so
here's my suggestion.

4
00:00:05,870 --> 00:00:09,240
So remember this B thing is
just a bit of notation here.

5
00:00:09,240 --> 00:00:12,937
And what the notation is saying is that
whatever value function you give it,

6
00:00:12,937 --> 00:00:16,543
you can replace this whole thing with
a value function defined like this.

7
00:00:16,543 --> 00:00:17,335
>> Right.

8
00:00:17,335 --> 00:00:21,535
>> All right, and so imagine what
happens if you actually plug all that

9
00:00:21,535 --> 00:00:23,893
in, if you actually take this BQ* and

10
00:00:23,893 --> 00:00:28,770
replace it with the definition according
to this operator definition above.

11
00:00:30,030 --> 00:00:33,700
>> That says that Q*
is actually equal to,

12
00:00:33,700 --> 00:00:36,690
well that's the definition of Q star.

13
00:00:36,690 --> 00:00:38,570
>> Do we have a name for that?

14
00:00:38,570 --> 00:00:39,800
>> Q star?

15
00:00:39,800 --> 00:00:43,880
>> Sure, we have a name for Q star,
but the equation that defines Q star.

16
00:00:43,880 --> 00:00:45,458
>> Well it's the Bellman Equation.

17
00:00:45,458 --> 00:00:46,430
>> Yay!

18
00:00:47,520 --> 00:00:49,170
>> That was easy.

19
00:00:49,170 --> 00:00:51,210
Okay.

20
00:00:51,210 --> 00:00:54,403
>> And you don't have to put the
exclamation mark to get the full credit

21
00:00:54,403 --> 00:00:55,084
for that one.

22
00:00:55,084 --> 00:00:55,750
>> Oh, I don't know.

23
00:00:55,750 --> 00:00:58,020
I think you should require they
put the exclamation mark or

24
00:00:58,020 --> 00:00:58,860
they don't get full credit.

25
00:01:00,000 --> 00:01:01,740
>> No, I think it's okay.

26
00:01:01,740 --> 00:01:02,320
>> All right.
>> In fact,

27
00:01:02,320 --> 00:01:03,970
anything that has Bellman
in it should be fine.

28
00:01:05,680 --> 00:01:07,620
>> Anything that has Bellman in it?

29
00:01:07,620 --> 00:01:09,110
>> Yeah, like the Bellman Identity.

30
00:01:09,110 --> 00:01:12,240
Or, the [LAUGH] I don't know.

31
00:01:12,240 --> 00:01:14,940
I was trying to think of
other sequels that have.

32
00:01:14,940 --> 00:01:16,120
>> The Bellman Ultimatum.

33
00:01:17,250 --> 00:01:19,660
>> Yes, Bellman reloaded.

34
00:01:19,660 --> 00:01:21,330
All right, so, good.

35
00:01:21,330 --> 00:01:24,390
So with that kind of thought process
in mind can you do the next one?

36
00:01:24,390 --> 00:01:27,540
So we have some Q function,
we apply the Bellman Operator to it and

37
00:01:27,540 --> 00:01:28,860
we get some new Q function.

38
00:01:28,860 --> 00:01:29,520
>> Bellman update?

39
00:01:30,860 --> 00:01:32,430
>> Yeah, it is a bellman update.

40
00:01:32,430 --> 00:01:34,500
But this now you can
think of as an algorithm.

41
00:01:34,500 --> 00:01:39,272
It's going to actually generate a whole
sequence of value functions one from

42
00:01:39,272 --> 00:01:39,960
the next.

43
00:01:39,960 --> 00:01:41,917
>> PV?

44
00:01:41,917 --> 00:01:44,001
>> [SOUND] No.

45
00:01:44,001 --> 00:01:45,850
>> No.

46
00:01:45,850 --> 00:01:49,043
>> Well then I don't know
because I'm trying to, oh, wait.

47
00:01:49,043 --> 00:01:50,543
This is value iteration.

48
00:01:50,543 --> 00:01:51,043
>> Whoo!

49
00:01:52,430 --> 00:01:54,300
>> Yeah, I think I need extra
exclamation marks with that.

50
00:01:54,300 --> 00:01:56,001
That makes perfect sense.

51
00:01:56,001 --> 00:01:56,509
>> Yeah.
So

52
00:01:56,509 --> 00:02:00,806
value iteration is this big algorithm,
and it probably takes a page of code or

53
00:02:00,806 --> 00:02:04,126
whatever to write, but
in this operator notation, boom.

54
00:02:04,126 --> 00:02:06,948
You start off,
probably to be more precise,

55
00:02:06,948 --> 00:02:11,790
you want to say something like Q0 = 0
value function or something like that.

56
00:02:11,790 --> 00:02:13,710
You need to initialize
the value function.

57
00:02:13,710 --> 00:02:14,320
But then after that,

58
00:02:14,320 --> 00:02:16,940
you're just generating value
functions from other value functions.

59
00:02:16,940 --> 00:02:19,190
That's exactly how
value iteration works.

60
00:02:19,190 --> 00:02:19,850
>> Yeah.

61
00:02:19,850 --> 00:02:23,460
And it would work even
if Q0 weren't last to 0.

62
00:02:23,460 --> 00:02:24,020
>> That's true.

63
00:02:24,020 --> 00:02:26,710
Yeah, but if we want it to be
a complete algorithm we'd have to say

64
00:02:26,710 --> 00:02:29,830
where it starts and then how we
generate new things from old things.

65
00:02:31,100 --> 00:02:34,130
>> It just starts with whatever
happened to be in memory at the time.

66
00:02:34,130 --> 00:02:34,765
>> I see.

67
00:02:34,765 --> 00:02:36,760
[LAUGH] Yeah.

68
00:02:36,760 --> 00:02:40,240
That could run you into trouble,
but probably shouldn't.

69
00:02:40,240 --> 00:02:41,860
As long as the types are correct.

70
00:02:41,860 --> 00:02:43,840
>> Yeah, well it doesn't matter,
they're just bits.

71
00:02:43,840 --> 00:02:45,270
They're ones and zeros.
>> Yeah but

72
00:02:45,270 --> 00:02:47,540
they'd better be interpreted
as floating point numbers.

73
00:02:47,540 --> 00:02:49,970
Because if you interpret
them as imaginary numbers or

74
00:02:49,970 --> 00:02:52,850
something like that it could make
the Bellman equation act strangely.

75
00:02:52,850 --> 00:02:54,840
>> It doesn't matter,
the operators will do the right thing,

76
00:02:54,840 --> 00:02:57,740
they'll just interpret them as numbers,
or doubles.

77
00:02:57,740 --> 00:02:58,460
>> Perfect.

78
00:02:58,460 --> 00:02:59,500
Okay, well then we're all happy.

79
00:02:59,500 --> 00:03:02,906
So I guess what I was hoping
to do with this example is,

80
00:03:02,906 --> 00:03:06,240
you know convince you to
develop an appreciation for

81
00:03:06,240 --> 00:03:10,258
this particular notation,
this Bellman Operator notation,

82
00:03:10,258 --> 00:03:14,751
because we can write stuff that we
care about really, really syncly.

83
00:03:14,751 --> 00:03:16,105
>> Yeah, yeah okay I'll buy that, and

84
00:03:16,105 --> 00:03:18,615
it means that you'll be able to
fit everything in on a slide.

85
00:03:18,615 --> 00:03:21,963
>> [LAUGH] Which will be good,
and look at how less,

86
00:03:21,963 --> 00:03:26,001
I'm messing around with subscripts,
it's very nice.

87
00:03:26,001 --> 00:03:27,120
>> I like your subscripts.
