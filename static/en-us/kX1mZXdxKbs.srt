1
00:00:00,520 --> 00:00:03,419
Now that you understand how to
interpret the results of the geocoding

2
00:00:03,419 --> 00:00:06,560
web service, let's switch back
to the JavaScript API and

3
00:00:06,559 --> 00:00:07,799
incorporate it into our app.

4
00:00:08,939 --> 00:00:13,140
We'll use the geocoding service client
side, since we'll need user input.

5
00:00:13,140 --> 00:00:14,290
The user searching for

6
00:00:14,289 --> 00:00:18,969
a new home may want to indicate
a location to base their search around.

7
00:00:18,969 --> 00:00:21,769
One way to do that would be to have
them enter a point of interest,

8
00:00:21,769 --> 00:00:23,000
a neighborhood or an address.

9
00:00:24,120 --> 00:00:26,310
After they do that we
can center our map and

10
00:00:26,309 --> 00:00:29,599
zoom it around that location
instead of showing the entire city.

11
00:00:31,570 --> 00:00:34,944
So, we'll define another
user input here in our HTML.

12
00:00:34,944 --> 00:00:38,817
I'm calling this zoom-to-area-text
because I'll prompt the user to focus on

13
00:00:38,817 --> 00:00:40,770
an area of the city.

14
00:00:40,770 --> 00:00:42,630
This would be useful if
we had a ton of listings.

15
00:00:44,240 --> 00:00:46,450
We'll also add a zoom button and

16
00:00:46,450 --> 00:00:49,280
a horizontal rule to keep
our page a little neater.

17
00:00:49,280 --> 00:00:50,590
I'm also adding some more CSS.

18
00:00:52,000 --> 00:00:55,979
Next, we'll create an event listener
in our initialized function, so that

19
00:00:55,979 --> 00:01:00,449
when the zoom to area button is clicked
we call our zoom to area function.

20
00:01:00,450 --> 00:01:02,109
Which we'll create below.

21
00:01:02,109 --> 00:01:06,325
The goal of this zoom to area function
is to take the user entered address,

22
00:01:06,325 --> 00:01:09,090
geocode it to get the lat-long, and

23
00:01:09,090 --> 00:01:12,420
then center the map on that lat-long and
zoom in.

24
00:01:12,420 --> 00:01:16,480
The first thing we'll do is
create a new geocoder instance.

25
00:01:16,480 --> 00:01:21,000
We'll then capture the user entered
address and make sure it isn't blank.

26
00:01:22,109 --> 00:01:24,179
Finally we'll geocode that address.

27
00:01:25,239 --> 00:01:28,409
We're also adding in a component
restriction here to keep it within

28
00:01:28,409 --> 00:01:31,819
the city so that they don't enter
an address outside of New York City.

29
00:01:31,819 --> 00:01:33,389
After we get the results,

30
00:01:33,390 --> 00:01:37,670
we'll check our geocoder status to
make sure it's okay, and then we'll

31
00:01:37,670 --> 00:01:41,769
use the resulting lat long we got
back to recenter the map and zoom in.

32
00:01:41,769 --> 00:01:43,080
If the results were not okay,

33
00:01:43,081 --> 00:01:47,480
we'll give the user a message that we
can't find the location they entered.

34
00:01:47,480 --> 00:01:49,829
We could also show some
more information here.

35
00:01:49,829 --> 00:01:52,469
Such as the actual status code received.

36
00:01:52,469 --> 00:01:55,944
So, if Ajay looks for Ajay land, we
could let him know we didn't find it as

37
00:01:55,944 --> 00:01:59,159
opposed to letting him know that we
got a server error or something.

38
00:01:59,159 --> 00:02:00,399
All right let's give this a go.

39
00:02:02,159 --> 00:02:03,369
I'm going to zoom in
on the East Village.

40
00:02:04,920 --> 00:02:08,800
Boom, now the user can zoom in
on the Upper East Side, SoHo,

41
00:02:08,800 --> 00:02:12,230
the East Village, any area that they're
interested in looking at houses within.

42
00:02:13,530 --> 00:02:15,099
So it's getting easier and easier for

43
00:02:15,099 --> 00:02:18,409
the user to see exactly what
listing they're interested in.

44
00:02:18,409 --> 00:02:20,229
Let's practice what we've
learned about geocoding.


