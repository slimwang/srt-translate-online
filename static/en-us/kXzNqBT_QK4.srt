1
00:00:00,170 --> 00:00:04,390
How do we implement access control
using the access control matrix?

2
00:00:04,390 --> 00:00:06,440
This is what we want to discuss.

3
00:00:06,440 --> 00:00:09,510
So first of all the access control
matrix is going to be pretty large.

4
00:00:09,510 --> 00:00:11,560
There could be tons of resources,

5
00:00:11,560 --> 00:00:13,530
depending on what kind
of system you have.

6
00:00:13,530 --> 00:00:17,190
If it's a large shared server
there could be lots of users.

7
00:00:17,190 --> 00:00:22,960
So it's a large matrix, but we know that
the matrix is going to be fairly sparse.

8
00:00:22,960 --> 00:00:26,930
So sparse matrix here really means
that many of the entries in the matrix

9
00:00:26,930 --> 00:00:28,045
are going to be null.

10
00:00:28,045 --> 00:00:32,630
because most users not going to
have access for a given resource.

11
00:00:32,630 --> 00:00:34,271
Resource is owned by somebody.

12
00:00:34,271 --> 00:00:36,095
He or
she's going to have access to it and

13
00:00:36,095 --> 00:00:38,565
maybe they choose to share
it with a few other people.

14
00:00:38,565 --> 00:00:43,335
So the question is how should we
represent this matrix in the system?

15
00:00:43,335 --> 00:00:46,915
Actually sparse matrices
represented in one of two ways.

16
00:00:46,915 --> 00:00:50,315
You can represent them either
sort of column measure or

17
00:00:50,315 --> 00:00:54,020
row measure and that's something
we can do here in this case.

18
00:00:54,020 --> 00:00:57,550
So we can focus on each
column of the matrix, and

19
00:00:57,550 --> 00:01:01,860
if most of the entries are null
we can just ignore those and

20
00:01:01,860 --> 00:01:05,640
we can make a list that says,
well for object Oi,

21
00:01:05,640 --> 00:01:11,198
user ui1, this user's access
rights are this value.

22
00:01:11,198 --> 00:01:18,000
Okay, so we have these entries, so when
I said matrices, when they're sparse,

23
00:01:18,000 --> 00:01:20,680
they can be implemented
through link list for example.

24
00:01:20,680 --> 00:01:24,200
So this could be a list of, and it's
going to have a small number of entries.

25
00:01:24,200 --> 00:01:27,795
Because most users don't have
any access for object Oi.

26
00:01:27,795 --> 00:01:31,655
So if a given user has access,
what kind of access we can have,

27
00:01:31,655 --> 00:01:35,441
sort of this pair, and
then the user id, and access rights,

28
00:01:35,441 --> 00:01:38,210
that makes up the first
node in our list.

29
00:01:38,210 --> 00:01:42,530
Next user is going to be ui2, who has
some other set of rights, and so on.

30
00:01:42,530 --> 00:01:45,840
So we can just go down the column and

31
00:01:45,840 --> 00:01:49,905
see what users actually have
known null access rights.

32
00:01:49,905 --> 00:01:54,280
And build these entries,
that become nodes in a link list or

33
00:01:54,280 --> 00:01:55,320
something like that.

34
00:01:55,320 --> 00:02:00,080
So we can organize this information
either by a resource or an object.

35
00:02:00,080 --> 00:02:03,900
Here we'll have to keep track of what
users have access to this object, and

36
00:02:03,900 --> 00:02:06,410
what kind of access they have for
this object.

37
00:02:06,410 --> 00:02:08,280
So that's one way to do it.

38
00:02:08,280 --> 00:02:11,220
When you do that,
this list I'm talking about, or

39
00:02:11,220 --> 00:02:14,055
the data structure that we're talking
about which is this collection,

40
00:02:14,055 --> 00:02:15,900
this linked list kind
of a data structure.

41
00:02:15,900 --> 00:02:19,570
That's a collection of these entries,
what user has what access rights.

42
00:02:19,570 --> 00:02:22,570
This is called an access control list or
an ACL.

43
00:02:22,570 --> 00:02:27,170
So if you focus on a resource or
object Oi and

44
00:02:27,170 --> 00:02:30,760
grab the information who has
access to this resource and

45
00:02:30,760 --> 00:02:35,660
what kind of access, that defines
an access control list or ACL.

46
00:02:35,660 --> 00:02:40,450
To keep in mind is that ACLs are for
resources we have in the system.

47
00:02:40,450 --> 00:02:44,330
So ACL is always associated
with an object or a resource.

48
00:02:44,330 --> 00:02:47,720
There's another way to think about
how we can implement it, and

49
00:02:47,720 --> 00:02:51,410
rather than focusing on columns,
we can focus on rows.

50
00:02:51,410 --> 00:02:53,960
And we know that rows
correspond to users.

51
00:02:53,960 --> 00:02:57,190
So we can go down horizontally,
you know, across a row and

52
00:02:57,190 --> 00:02:59,230
say, what would we see.

53
00:02:59,230 --> 00:03:03,010
If it's a sparse matrix, this user
ui is not going to have access for

54
00:03:03,010 --> 00:03:04,410
most of the objects.

55
00:03:04,410 --> 00:03:06,950
But he or
she will have access to some objects.

56
00:03:06,950 --> 00:03:12,720
So the first object we run into for
which ui has access is this object oi1.

57
00:03:12,720 --> 00:03:14,850
So the list we are going
to generate here,

58
00:03:14,850 --> 00:03:19,020
which is going to say for this given
user ui, we do have access and

59
00:03:19,020 --> 00:03:21,830
these are the access rights for
object oi1.

60
00:03:21,830 --> 00:03:26,154
The next object for which we have
access, or this user ui has access is

61
00:03:26,154 --> 00:03:31,410
oi2 and those access rights
are defined by rights2 and so on.

62
00:03:31,410 --> 00:03:35,100
Basically we are ignoring
the null entries in the row, and

63
00:03:35,100 --> 00:03:38,330
the entries that are not null are for
certain objects.

64
00:03:38,330 --> 00:03:40,930
So these are those objects,
and what kind of access for

65
00:03:40,930 --> 00:03:44,930
each of those objects,
that's what we capture in this list.

66
00:03:44,930 --> 00:03:48,140
Well, this kind of a list is
called a capability-list,

67
00:03:48,140 --> 00:03:51,360
in some sense what a user is capable of.

68
00:03:51,360 --> 00:03:56,300
A user is capable of accessing oi1
in this manner, oi2 in that manner,

69
00:03:56,300 --> 00:04:01,050
so it's called a capability-list
that is for a given user ui.

70
00:04:01,050 --> 00:04:06,370
Remember, ACLs are for an object,
capability-lists are for a user.

71
00:04:06,370 --> 00:04:11,790
Again, C-list is going to be associated
with each user we have in the system.

72
00:04:11,790 --> 00:04:14,400
Remember, we have a row in
the access control matrix for

73
00:04:14,400 --> 00:04:18,220
each user, and
each row really is a C-list.

74
00:04:18,220 --> 00:04:20,600
It's a list representation
of what's in that row.

75
00:04:20,600 --> 00:04:23,010
So, C-list are for users.

76
00:04:23,010 --> 00:04:24,560
ACLs are for objects.
