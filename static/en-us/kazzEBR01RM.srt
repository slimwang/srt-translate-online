1
00:00:00,650 --> 00:00:03,900
You've just learned how to write some very simple programs and how to correct

2
00:00:03,900 --> 00:00:08,060
errors and to deal with all sorts of fussy details. Let's step back a little

3
00:00:08,060 --> 00:00:13,440
bit and think about what a computer can do for us. A computer can execute an

4
00:00:13,440 --> 00:00:20,710
algorithm. That's a technical term for a recipe of instructions that are

5
00:00:20,710 --> 00:00:25,990
unambiguous, executable, and terminating. Well, those are big words. So let's

6
00:00:25,990 --> 00:00:30,830
see what's going on. Unambiugous means that the recipe can be interpreted in

7
00:00:30,830 --> 00:00:35,220
only one way. Executable means that its steps are those that a computer can

8
00:00:35,220 --> 00:00:39,480
actually carry out. And terminating, of course, means that they come to an end.

9
00:00:39,480 --> 00:00:43,270
That's all pretty abstract. Let's look at a concrete situation. You need to buy

10
00:00:43,270 --> 00:00:48,340
a car. You have two choices: this beauty over here, it's cheap, but it has

11
00:00:48,340 --> 00:00:53,610
terrible gas mileage, or this sleek one over here, expensive, but great

12
00:00:53,610 --> 00:00:57,830
mileage. Which is the better buy? I'll show you an algorithm that makes that

13
00:00:57,830 --> 00:01:05,040
decision. The first car costs $15,000. And the second car costs $30,000. So, it

14
00:01:05,040 --> 00:01:09,130
looks like we should buy the first car. But, not so fast. The first car gets 10

15
00:01:09,130 --> 00:01:13,676
miles per gallon, and the second car 50 miles per gallon. So, what do you

16
00:01:13,676 --> 00:01:19,260
think? Which car should I buy? Do you think I should go for Car 1 or for Car 2?

17
00:01:19,260 --> 00:01:22,040
Or, in the end doesn't it really matter? Or maybe you don't have enough

18
00:01:22,040 --> 00:01:25,800
information to give an exact answer. Tell me what you think.
