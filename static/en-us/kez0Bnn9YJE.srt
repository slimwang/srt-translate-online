1
00:00:00,260 --> 00:00:03,630
If you've been using the simulator
keyboard to test out your version

2
00:00:03,630 --> 00:00:06,780
of me me,
you may have noticed a little problem.

3
00:00:06,780 --> 00:00:11,041
Especially when editing
this bottom text field.

4
00:00:11,041 --> 00:00:17,118
[NOISE] The keyboard covers up the text
field, and leaves the user stuck.

5
00:00:17,118 --> 00:00:20,810
One can avoid this by shifting
the entire view up, like so.

6
00:00:22,840 --> 00:00:26,150
To isolate the keyboard issue,
let's build a simple app.

7
00:00:26,150 --> 00:00:28,738
Here I've got an app with
a text field in an image.

8
00:00:28,738 --> 00:00:30,090
The text field's at the bottom and

9
00:00:30,090 --> 00:00:32,920
it gets covered up if we
don't shift the view.

10
00:00:32,920 --> 00:00:34,560
Shifting the view a simple.

11
00:00:34,560 --> 00:00:38,100
Remember way back when we built
click counter from scratch in code?

12
00:00:38,100 --> 00:00:41,120
To place our views we
use the frame property.

13
00:00:41,120 --> 00:00:43,378
That's the property we'll use
to shift the main view up.

14
00:00:43,378 --> 00:00:47,990
More specifically, frame.origin.why.

15
00:00:47,990 --> 00:00:50,740
The point where y = 0 is
at the top of the screen.

16
00:00:50,740 --> 00:00:52,540
To move the view up above the keyboard,

17
00:00:52,540 --> 00:00:54,600
we subtract the height
of the keyboard like so.

18
00:00:55,690 --> 00:00:58,890
But how will we know when
the keyboard is about to slide up?

19
00:00:58,890 --> 00:01:01,060
This is where NSNotifications come in.

20
00:01:02,100 --> 00:01:06,540
In short, NSNotifications provide a way
to announce information throughout

21
00:01:06,540 --> 00:01:08,670
a program across classes.

22
00:01:08,670 --> 00:01:13,130
To announce information, like
the keyboard appearing or disappearing.

23
00:01:13,130 --> 00:01:18,250
For more details, see the upcoming text
note on the NSnotification center.

24
00:01:18,250 --> 00:01:22,550
Kind of like we subscribe to mailing
lists, objects have to subscribe to, or

25
00:01:22,550 --> 00:01:24,990
observe, notifications.

26
00:01:24,990 --> 00:01:26,370
In this block of code,

27
00:01:26,370 --> 00:01:30,280
the view controller is signing up to
be notified when an event is coming up.

28
00:01:30,280 --> 00:01:33,200
The event, UIKeyboard will show.

29
00:01:33,200 --> 00:01:36,430
We'll call the
subscribeToKeyboardNotifications method

30
00:01:36,430 --> 00:01:37,780
up here, and view will appear.

31
00:01:40,170 --> 00:01:45,330
When the event UIKeyboardWillShow occurs
The method Keyboard Will Show is called

32
00:01:45,330 --> 00:01:47,770
and that method shifts the frame.

33
00:01:47,770 --> 00:01:50,370
But right now the compiler is
complaining because we haven't

34
00:01:50,370 --> 00:01:53,180
implemented this get
Keyboard Height method.

35
00:01:53,180 --> 00:01:58,050
Notifications carry information
in the user info dictionary.

36
00:01:58,050 --> 00:02:01,690
The UI keyboard Will Show notification
carries the keyboard frame in

37
00:02:01,690 --> 00:02:03,880
its user info dictionary.

38
00:02:03,880 --> 00:02:06,000
So that's how we get
the keyboard height.

39
00:02:06,000 --> 00:02:08,139
So now let's see this
keyboard shift in action.

40
00:02:11,000 --> 00:02:12,250
But let's not forget,

41
00:02:12,250 --> 00:02:15,770
just like with mailing lists
eventually we need to unsubscribe.

42
00:02:15,770 --> 00:02:19,730
So here's the method to unsubscribe
from keyboard notifications.

43
00:02:19,730 --> 00:02:24,010
And we'll call this unsubscribe method
up here in view will disappear.
