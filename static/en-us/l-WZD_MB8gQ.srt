1
00:00:01,330 --> 00:00:03,130
The first one is very easy.

2
00:00:03,130 --> 00:00:03,660
Octave and

3
00:00:03,660 --> 00:00:09,350
Matlab make it really trivial to specify
indices repeating at a given step.

4
00:00:09,350 --> 00:00:16,015
In this case, we would like to start
with row 1, step 2, and til the end.

5
00:00:16,015 --> 00:00:18,655
Exactly the same for columns.

6
00:00:18,655 --> 00:00:22,035
This selects rows and

7
00:00:22,035 --> 00:00:26,972
columns 1, 3, 5 and so on.

8
00:00:26,972 --> 00:00:27,512
Okay, now for blurring.

9
00:00:28,652 --> 00:00:31,402
Remember how we used imfilter?

10
00:00:31,402 --> 00:00:36,622
Pass in an image and a filter, defined
here using the fspecial function.

11
00:00:36,622 --> 00:00:40,680
As mentioned,
we want a Gaussian of size 5 by 5.

12
00:00:40,680 --> 00:00:43,450
All right, so
this is our filtered image.

13
00:00:43,450 --> 00:00:46,640
We simply used the same
indexing as before.

14
00:00:46,640 --> 00:00:47,520
Make sense?

15
00:00:47,520 --> 00:00:48,348
Let's see what it looks like.

16
00:00:48,348 --> 00:00:52,133
All right,
here's the result of only down-sampling.

17
00:00:52,133 --> 00:00:56,610
And this is with blurring and
down-sampling.

18
00:00:56,610 --> 00:01:00,250
This appears to be a more natural
blurred version of the original image,

19
00:01:01,270 --> 00:01:05,000
whereas the former has
ugly aliasing effects.

20
00:01:05,000 --> 00:01:10,130
Note that the result is being affected
by how the resize function works.

21
00:01:10,130 --> 00:01:13,250
You can control how it functions,
using a third parameter.

22
00:01:14,600 --> 00:01:17,720
Here, passing in nearest
means no interpolation.

23
00:01:19,430 --> 00:01:22,800
As you can see, this is a much more
accurate representation of what

24
00:01:22,800 --> 00:01:26,120
the pixels in the one eighth
size image look like.

25
00:01:26,120 --> 00:01:27,979
By the way,
this is the downsampled image.

26
00:01:29,000 --> 00:01:31,330
Compare this with the blurred and
downsampled version.

27
00:01:32,590 --> 00:01:33,540
It still wins.

28
00:01:35,070 --> 00:01:39,860
You can also use linear or
bicubic which is the default.

29
00:01:40,860 --> 00:01:42,330
Try these out,

30
00:01:42,330 --> 00:01:45,760
we will be using downsampling
to build Gaussian pyramids next.
