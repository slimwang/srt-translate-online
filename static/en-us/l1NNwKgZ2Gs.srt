1
00:00:00,290 --> 00:00:05,330
A couple of takes on components one from Richard Taylor,

2
00:00:05,330 --> 00:00:08,470
a software component is an architectural entity.

3
00:00:08,470 --> 00:00:14,150
It's concerned with a unit of the system's functionality or its data.

4
00:00:14,150 --> 00:00:17,710
Once again, key here is the interfaces that it provides to the rest of

5
00:00:17,710 --> 00:00:20,410
the world, and, according to Taylor,

6
00:00:20,410 --> 00:00:25,200
the dependencies on its required execution context.

7
00:00:25,200 --> 00:00:28,074
What that, what that means is, what does it take in order to

8
00:00:28,074 --> 00:00:31,528
enable the component to run in a manner that it should?

9
00:00:31,528 --> 00:00:36,698
Szyperski offers the following, that a component is a unit of composition.

10
00:00:36,698 --> 00:00:38,050
We're going to take components,

11
00:00:38,050 --> 00:00:42,350
we're going to put them together with contractually specified interfaces.

12
00:00:42,350 --> 00:00:47,330
This means that the interfaces are explicit, the other components know about it,

13
00:00:47,330 --> 00:00:51,160
they agree to it, and that these interfaces when you're

14
00:00:51,160 --> 00:00:54,450
putting things together in configurations can be checked and enforced.
