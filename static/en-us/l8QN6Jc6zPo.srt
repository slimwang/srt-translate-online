1
00:00:00,270 --> 00:00:01,845
The answer is that it yields nothing.

2
00:00:01,845 --> 00:00:06,764
The actual maximum independent set
will have size of V minus size C

3
00:00:06,764 --> 00:00:09,370
star vertices in it.

4
00:00:09,370 --> 00:00:11,910
While the compliment of
the vertex cover that we find

5
00:00:11,910 --> 00:00:15,950
will have size of V minus
size of C vertices in it.

6
00:00:15,950 --> 00:00:22,170
But, if C star happens to be the number
of vertices over 2, well then the size

7
00:00:22,170 --> 00:00:27,960
of C could be equal to V, and then this
ratio becomes entirely meaningless.

8
00:00:27,960 --> 00:00:30,940
We've now seen the potential
trade-off between time and

9
00:00:30,940 --> 00:00:34,210
accuracy in the context of
the vertex cover problem.

10
00:00:34,210 --> 00:00:36,040
There is an exact exponential algorithm,

11
00:00:36,040 --> 00:00:38,999
and there's a polynomial
factor to approximation.

12
00:00:40,260 --> 00:00:43,920
What if a factor to approximation
isn't what I really want however?

13
00:00:43,920 --> 00:00:47,710
What if I'd be happy with a factor ten
approximation if it were fast enough?

14
00:00:47,710 --> 00:00:51,830
What if I really need to be within 1% of
the optimum, and I'm willing to wait for

15
00:00:51,830 --> 00:00:53,420
an answer as long as it takes?

16
00:00:54,700 --> 00:00:57,670
It would be very convenient if there
was some way to easily trade off

17
00:00:57,670 --> 00:00:59,210
speed versus accuracy in this way.

18
00:01:00,400 --> 00:01:04,540
For vertex cover it turns out that
this is highly unlikely but for

19
00:01:04,540 --> 00:01:08,130
other problems there are schemes that
allow us to trade off speed versus

20
00:01:08,130 --> 00:01:11,090
accuracy with precise guarantees.

21
00:01:11,090 --> 00:01:13,339
We'll illustrate this
possibility with the example.
