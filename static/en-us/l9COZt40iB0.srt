1
00:00:00,360 --> 00:00:03,850
We need an API client,
but how do we design it?

2
00:00:03,850 --> 00:00:07,620
A good place to start is thinking about
the API methods that we want to make and

3
00:00:07,620 --> 00:00:09,160
what they might return.

4
00:00:09,160 --> 00:00:12,110
So what methods or
function calls do we need to make?

5
00:00:12,110 --> 00:00:14,704
If we list the API
interactions that we need,

6
00:00:14,704 --> 00:00:17,863
then we can write convenient
API methods for each one.

7
00:00:17,863 --> 00:00:22,974
The interactions we need are getting
a request token, getting a session ID,

8
00:00:22,974 --> 00:00:27,064
getting the user's ID,
searching movies by search string,

9
00:00:27,064 --> 00:00:32,648
getting a user's favorite movies, adding
and removing favorite movies, getting

10
00:00:32,648 --> 00:00:38,177
a user's watchlist movies, and finally,
adding or removing watchlist movies.

11
00:00:38,177 --> 00:00:41,374
For this exercise, I want you to think
of an intuitive function name for

12
00:00:41,374 --> 00:00:44,840
each requirement and
what these functions might return.

13
00:00:44,840 --> 00:00:46,920
There are no perfect answers for
this exercise,

14
00:00:46,920 --> 00:00:49,620
but some answers are better than others.

15
00:00:49,620 --> 00:00:51,900
Typically, we want to go with simple,

16
00:00:51,900 --> 00:00:56,180
intuitive function names with return
types that are convenient and expected.

17
00:00:56,180 --> 00:00:58,730
Using something simple and
intuitive may be like, for

18
00:00:58,730 --> 00:01:02,890
this one, get request token,
is a property of good reusable APIs, and

19
00:01:02,890 --> 00:01:07,380
you should assume that others want to
use your API client in their projects.

20
00:01:07,380 --> 00:01:10,760
So take this approach with each of your
function names that you write here and

21
00:01:10,760 --> 00:01:12,120
then write the return types here.
