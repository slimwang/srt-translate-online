1
00:00:00,060 --> 00:00:02,880
Obviously if there are multiple good answers in here, don't

2
00:00:02,880 --> 00:00:05,780
cache isn't the solution and given that this is the content

3
00:00:05,780 --> 00:00:08,650
of our lecture, we're going to continue with our caching. So, let's

4
00:00:08,650 --> 00:00:11,320
look at these other three. Improve the cache to automatically expire

5
00:00:11,320 --> 00:00:14,540
after some time. I'm not going to count this as correct. Although

6
00:00:14,540 --> 00:00:17,760
it is possible. And actually many caches, and the, the, the

7
00:00:17,760 --> 00:00:21,070
main cache we'll be talking about shortly, has this ability. But

8
00:00:21,070 --> 00:00:25,130
that doesn't solve our problem here, because if things automatically disappear

9
00:00:25,130 --> 00:00:26,940
out of the cache after some amount of time, there's no

10
00:00:26,940 --> 00:00:30,310
guarantee that that's going to coincide with our submission time. So

11
00:00:30,310 --> 00:00:34,140
let's look at the other answer, after submitting, clear the cache.

12
00:00:34,140 --> 00:00:37,980
Yes. This will work. This basically restores the cache to the

13
00:00:37,980 --> 00:00:40,700
state that it was in before we did a request. So

14
00:00:40,700 --> 00:00:43,450
you submit some art. We store it in the database, and

15
00:00:43,450 --> 00:00:46,370
then we blank the cache, and then the next page load

16
00:00:46,370 --> 00:00:50,360
clears the cache. Another answer after submitting, update the cache. This also

17
00:00:50,360 --> 00:00:53,040
works, but it makes things more complicated. So,

18
00:00:53,040 --> 00:00:55,660
in other words, after submitting a piece of art,

19
00:00:55,660 --> 00:00:57,560
we update the database, and we immediately update

20
00:00:57,560 --> 00:00:59,190
the cache at the same time so that the

21
00:00:59,190 --> 00:01:01,450
next page load of the front page has

22
00:01:01,450 --> 00:01:03,730
an updated version of the art. This would work,

23
00:01:03,730 --> 00:01:06,320
but it's, it's more complex, so let's start with

24
00:01:06,320 --> 00:01:09,380
the first solution after we submit clear the cache.
