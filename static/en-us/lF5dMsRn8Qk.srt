1
00:00:00,380 --> 00:00:04,800
The second way that the differently executing concurrent machines can

2
00:00:04,800 --> 00:00:08,690
communicate is by data conditions. We've already, we've already seen this.

3
00:00:08,690 --> 00:00:14,450
Remember that they occur within square brackets. Okay? And they contain within

4
00:00:14,450 --> 00:00:22,940
them Boolean expressions in which the terms correspond to attributes

5
00:00:22,940 --> 00:00:27,980
of a various classes in the overall system model.

6
00:00:27,980 --> 00:00:34,010
You can think of these data conditions as being continuously monitored.

7
00:00:34,010 --> 00:00:39,740
And that when one of them becomes true, that's like an event were issued saying,

8
00:00:39,740 --> 00:00:44,880
look at me I'm now true, I can take this particular this particular transition.

9
00:00:46,712 --> 00:00:51,830
State charts, in addition, support the keywords in and not in.

10
00:00:53,320 --> 00:00:59,910
What in means is, I'll make this transition if in one of the other concurrent

11
00:00:59,910 --> 00:01:05,890
machines I'm in state whatever x is. So if I say in x and

12
00:01:05,890 --> 00:01:09,300
in the other machine I'm in state x, then I can make the transition. And

13
00:01:09,300 --> 00:01:14,790
similarly from not in. The variables which occur in these expressions,

14
00:01:14,790 --> 00:01:20,300
as I said, come from attributes in the system model. And these attributes

15
00:01:20,300 --> 00:01:23,830
are globally known by all of the concurrently executing machines.
