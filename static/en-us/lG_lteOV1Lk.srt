1
00:00:00,250 --> 00:00:03,430
Like Sara said, to share my
reflections repository on Get Hub,

2
00:00:03,430 --> 00:00:06,350
I'll first need to create
a repository on Get Hub.

3
00:00:06,350 --> 00:00:08,610
To do this, I'll make sure
I'm logged in by looking for

4
00:00:08,610 --> 00:00:14,150
my username in this corner, and then on
any screen, I'll click the plus sign and

5
00:00:14,150 --> 00:00:16,460
select new repository.

6
00:00:16,460 --> 00:00:20,250
I'll name the repository reflections,
and I'll leave it as public.

7
00:00:21,300 --> 00:00:25,110
Now, I don't want to initialize
the repository with a README.

8
00:00:25,110 --> 00:00:28,670
If I were making a repository on git-hub
before I had created any content,

9
00:00:28,670 --> 00:00:30,860
then I probably would check this box.

10
00:00:30,860 --> 00:00:34,300
Because that way my repository would
start out with one commit in it.

11
00:00:34,300 --> 00:00:37,500
You can't clone the repository with no
commit, so this is often a good idea.

12
00:00:38,600 --> 00:00:42,460
But since I already have commits in
my repository that I want to share.

13
00:00:42,460 --> 00:00:44,200
I wont check this box.

14
00:00:44,200 --> 00:00:47,170
Next, I'll need to add this
repository as a remote to my

15
00:00:47,170 --> 00:00:49,150
reflections repository, on my computer.

16
00:00:50,150 --> 00:00:52,860
Just like I can use the command,
git branch, to view and

17
00:00:52,860 --> 00:00:57,920
create branches, I can use the command,
git remote, to view and create remotes.

18
00:00:57,920 --> 00:01:00,270
First I'll run the command
git remote with no arguments,

19
00:01:00,270 --> 00:01:02,310
to see all the current remotes.

20
00:01:02,310 --> 00:01:04,900
The output is empty because I
haven't added any remotes yet.

21
00:01:06,110 --> 00:01:11,177
Next, to add the repository on GitHub as
a remote I'll run, git remote add, and

22
00:01:11,177 --> 00:01:14,290
I'll supply the name I want to use.

23
00:01:14,290 --> 00:01:17,310
Now I can use any name here and
it's the name that I'll use within this

24
00:01:17,310 --> 00:01:20,770
repository, to refer to
the repository on GitHub.

25
00:01:20,770 --> 00:01:22,050
If you only have one remote,

26
00:01:22,050 --> 00:01:24,290
it's standard to name it origin,
so I'll do that.

27
00:01:25,470 --> 00:01:27,680
Next, I'll need to supply a URL for
my remote.

28
00:01:28,810 --> 00:01:31,560
I can find the URL on
the GitHub page where I just

29
00:01:31,560 --> 00:01:34,460
created the reflections repository.

30
00:01:34,460 --> 00:01:39,480
So I'll copy the URL, then paste it
into my command, then press Enter.

31
00:01:39,480 --> 00:01:43,260
Now if I run git remote again, I can see
that the origin remote has been created.

32
00:01:44,680 --> 00:01:49,800
To verify that the URL was added
correctly, i'll run git remote -v.

33
00:01:49,800 --> 00:01:54,550
V stands for verbose, and means that git
remote will output more information.

34
00:01:54,550 --> 00:01:55,880
That is, it will be more verbose.

35
00:01:56,880 --> 00:02:00,830
The output shows both the URL
where I would fetch data from, and

36
00:02:00,830 --> 00:02:02,530
the URL where I would push data to.

37
00:02:03,560 --> 00:02:06,650
In most cases these
will be the same URL.

38
00:02:06,650 --> 00:02:09,008
Here I can see the same
URL that I just pasted.

39
00:02:10,160 --> 00:02:14,870
Now in order to send my changes to the
remote, I'll use the command git push.

40
00:02:14,870 --> 00:02:16,490
Git push takes two arguments.

41
00:02:16,490 --> 00:02:18,830
The remote I want to send changes to,
and

42
00:02:18,830 --> 00:02:21,660
the name of the local branch
that I'd like to push.

43
00:02:21,660 --> 00:02:23,560
I named my remote origin,.

44
00:02:23,560 --> 00:02:26,610
And I've made all of my changes
in the local master branch.

45
00:02:26,610 --> 00:02:29,210
So run git push origin master.

46
00:02:29,210 --> 00:02:30,790
Before I ran Git Push,

47
00:02:30,790 --> 00:02:34,590
I had made a bunch of changes in the
master branch on my local repository.

48
00:02:34,590 --> 00:02:37,130
And my repository on Git Hub was empty.

49
00:02:37,130 --> 00:02:40,300
Running git push copied all of the
commits reachable from my master branch

50
00:02:40,300 --> 00:02:41,000
to origin.

51
00:02:41,000 --> 00:02:43,500
That is my repository on Git Hub.

52
00:02:43,500 --> 00:02:46,560
By default, the branch created on
Git Hub will have the same name as

53
00:02:46,560 --> 00:02:48,250
the local branch that I pushed.

54
00:02:48,250 --> 00:02:51,230
So this branch will
also be called master.

55
00:02:51,230 --> 00:02:53,330
Now I'll refresh the page on GitHub.

56
00:02:53,330 --> 00:02:55,880
And I can see that all my
files have been added.

57
00:02:55,880 --> 00:02:58,440
I can also see here that
the branch I'm on is named master.

58
00:02:59,480 --> 00:03:02,440
Now create a reflections repository
on your own GitHub account.

59
00:03:03,710 --> 00:03:06,520
Then push your reflections from
your own computer to GitHub.

60
00:03:07,700 --> 00:03:11,380
Post a link to your new reflections
repository on the forums.

61
00:03:11,380 --> 00:03:14,980
Then take a minute to read some of
the other students' reflections.

62
00:03:14,980 --> 00:03:18,450
You might not want to read their
reflections for lesson three yet though.

63
00:03:18,450 --> 00:03:20,830
Their reflections will be more
valuable if you think about them for

64
00:03:20,830 --> 00:03:23,750
yourself before reading what
other people have said.

65
00:03:23,750 --> 00:03:26,670
Once you've shared a link to your
reflections repository, check this box.
