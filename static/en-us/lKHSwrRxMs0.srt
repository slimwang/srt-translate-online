1
00:00:00,460 --> 00:00:05,330
So, in this particular slide we have the results of our analysis model.

2
00:00:05,330 --> 00:00:10,031
There were classes corresponding to our three major elements and

3
00:00:10,031 --> 00:00:13,980
then there were associations among the elements.

4
00:00:13,980 --> 00:00:19,850
There was one binary association having to do with displaying the contents.

5
00:00:19,850 --> 00:00:26,060
And there were other ternary or three part associations that indicated how

6
00:00:26,060 --> 00:00:30,860
the misc, how the three components worked together to make sure that the scroll

7
00:00:30,860 --> 00:00:34,540
bar affected the lines on the screen, and that the scroll bar handle and

8
00:00:34,540 --> 00:00:36,728
the position of the scroll bar handle were all right.

9
00:00:36,728 --> 00:00:42,430
Now, in analysis, UML supports the idea of associations.

10
00:00:43,430 --> 00:00:46,450
In design, there are no associations,

11
00:00:46,450 --> 00:00:48,700
in programming languages there are no associations.

12
00:00:48,700 --> 00:00:52,870
Instead there are in UML what are called dependencies.

13
00:00:52,870 --> 00:00:56,890
So part of our process here will be going and taking these associations and

14
00:00:56,890 --> 00:00:58,370
translating them into dependencies.

15
00:00:59,420 --> 00:01:04,000
Also, the comments which describe the guarantees in the previous,

16
00:01:04,000 --> 00:01:09,170
picture have been translated into or, they, they,

17
00:01:09,170 --> 00:01:12,540
they have the OCL constraints which we developed during the analysis phase.
