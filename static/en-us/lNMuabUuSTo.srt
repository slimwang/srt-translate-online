1
00:00:00,770 --> 00:00:03,330
Unit tests are probably
the most well-known test

2
00:00:03,330 --> 00:00:05,180
used by software developers.

3
00:00:05,180 --> 00:00:08,029
They are very useful to test
the low-level functionality

4
00:00:08,029 --> 00:00:11,340
of separate components,
like classes and methods.

5
00:00:11,340 --> 00:00:14,280
They're fairly easy and straightforward
to write, maintain, and run.

6
00:00:14,280 --> 00:00:17,740
So they usually form the largest
part of the overall test body.

7
00:00:17,740 --> 00:00:21,660
In the Agile development process, unit
tests are usually the responsibility of

8
00:00:21,660 --> 00:00:25,780
developers, but this does mean that
the product team has to plan time and

9
00:00:25,780 --> 00:00:27,680
prioritize reading tests, enough so

10
00:00:27,680 --> 00:00:30,770
that the developers are actually
empowered to write them.

11
00:00:30,770 --> 00:00:33,170
If developers are working
under tight deadlines and

12
00:00:33,170 --> 00:00:37,100
are rewarded by feature releases, it's
unreasonable to expect that they will

13
00:00:37,100 --> 00:00:40,390
instead write tests just because
it's a good thing to do.

14
00:00:40,390 --> 00:00:44,060
So while developers are responsible for
writing and maintaining tests,

15
00:00:44,060 --> 00:00:47,160
the whole team is responsible for
giving them the time to do that.

16
00:00:47,160 --> 00:00:50,340
In general, there are three
approaches to writing unit tests.

17
00:00:50,340 --> 00:00:52,910
The first is to write
tests after the code.

18
00:00:52,910 --> 00:00:55,270
Another approach is to write
tests before the code,

19
00:00:55,270 --> 00:00:57,890
which is also called
test driven development.

20
00:00:57,890 --> 00:01:02,470
Option three would be to write no tests,
I guess, but actually scratch that,

21
00:01:02,470 --> 00:01:04,379
that's a very bad idea.

22
00:01:04,379 --> 00:01:08,310
As far as when unit tests get run,
they're still fairly fast.

23
00:01:08,310 --> 00:01:11,380
So they're the next type of test
that runs after smoke tests.

24
00:01:11,380 --> 00:01:13,490
They can also be run on
the development machines,

25
00:01:13,490 --> 00:01:16,290
giving developers very quick
feedback on their code.

26
00:01:16,290 --> 00:01:19,220
This however is only possible
if the tests are written and

27
00:01:19,220 --> 00:01:21,690
committed at the same time
that new code is committed.
