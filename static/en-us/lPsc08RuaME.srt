1
00:00:00,740 --> 00:00:05,020
Kent Beck and Martin Fowler popularized the notion of refactoring as part of

2
00:00:05,020 --> 00:00:09,680
extreme programming in the 1990s. The idea was to move some design activities

3
00:00:09,680 --> 00:00:13,700
that were previously done before implementation was started into the actual

4
00:00:13,700 --> 00:00:17,550
implementation phase of development. The intent was to reduce rework in

5
00:00:17,550 --> 00:00:21,820
situations with rapidly changing requirements. The first step in refactoring is

6
00:00:21,820 --> 00:00:26,650
the recognition of bad smells, which are code situations that are suggestive of

7
00:00:26,650 --> 00:00:30,910
design problems, such as duplicate code, too many comments, or long classes. So

8
00:00:30,910 --> 00:00:35,680
you can think, bad smells as being, things to avoid in other words,

9
00:00:35,680 --> 00:00:40,000
design principles describing situations which you, you don't want to be in.

10
00:00:40,000 --> 00:00:44,260
The Fowler's book recognizes dozens of bad smells and the avoidance of each

11
00:00:44,260 --> 00:00:48,110
should be, could be thought of as a design principle. For example, the duplicate

12
00:00:48,110 --> 00:00:52,570
code bad smell should be thought of as the avoid duplicate code by factoring

13
00:00:52,570 --> 00:00:56,130
principle. You're encouraged to explore Fowler's book as a way of becoming

14
00:00:56,130 --> 00:00:59,990
familiar with these situations, it is referenced in the class resources page.
