1
00:00:00,000 --> 00:00:05,000
The problem with debugging being time consuming and all

2
00:00:05,000 --> 00:00:09,000
actually translates into money and effort on a large scale.

3
00:00:09,000 --> 00:00:15,000
A commonly cited figure in the literature is that in any software project,

4
00:00:15,000 --> 00:00:19,000
at least 50% of the effort is spent on test and debugging.

5
00:00:19,000 --> 00:00:23,000
This number can even go up to 75%.

6
00:00:23,000 --> 00:00:30,000
According to study made in 2002, software bugs are costing the US economy

7
00:00:30,000 --> 00:00:39,000
only $59.5 billion a year and improvements in testing and debugging could reduce

8
00:00:39,000 --> 00:00:45,000
this cost of software bugs by a $30 billion or $22 billion a year.

9
00:00:45,000 --> 00:00:50,000
The main problem with debugging, however, is not that it takes time.

10
00:00:50,000 --> 00:00:55,000
The worst thing that it is a such process whose length is unpredictable.

11
00:00:55,000 --> 00:01:02,000
It can take anything between a few minutes, a few hours, and sometimes even days and weeks.

12
00:01:02,000 --> 00:01:08,000
Even if you don't know how much time it's going to take, be sure to use the systematic process,

13
00:01:08,000 --> 00:01:14,000
which gradually gets you towards the cause of the problem, but even if you never know

14
00:01:14,000 --> 00:01:17,000
how much time a bug will take, it's a bit of a blessing

15
00:01:17,000 --> 00:01:19,000
to use a process which gradually gets you towards its cause.
