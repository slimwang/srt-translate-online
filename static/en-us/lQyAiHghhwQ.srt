1
00:00:00,000 --> 00:00:04,000
We finished the theoretical argument for the security of RSA.

2
00:00:04,000 --> 00:00:09,000
Now I'm going to talk about some ways that things can go wrong when RSA is used in practice.

3
00:00:09,000 --> 00:00:13,000
Our security argument assumed that m was a large random number.

4
00:00:13,000 --> 00:00:15,000
What happens if m is small?

5
00:00:15,000 --> 00:00:18,000
Assume n is some large unfactored number.

6
00:00:18,000 --> 00:00:23,000
RSA-1024 is one of the unsolved RSA challenges.

7
00:00:23,000 --> 00:00:26,000
We'll pick e as 17, and e is often a small number.

8
00:00:26,000 --> 00:00:30,000
It doesn't inherently become insecure when we pick a small e.

9
00:00:30,000 --> 00:00:33,000
The advantage to picking a small e is that it makes encryption fast.

10
00:00:33,000 --> 00:00:36,000
You've intercepted the ciphertext below.

11
00:00:36,000 --> 00:00:39,000
You'll be able to get that number in the Python ID,

12
00:00:39,000 --> 00:00:41,000
so you don't have to try to copy it correctly.

13
00:00:41,000 --> 00:00:43,000
The question is what is m?

14
00:00:43,000 --> 00:00:47,000
Can you determine it from that number?
