1
00:00:00,500 --> 00:00:03,460
We've talked a lot about splitting your data between training and

2
00:00:03,460 --> 00:00:05,660
testing sets in this class so far.

3
00:00:05,660 --> 00:00:08,370
What I want to do now is show you how you can actually do

4
00:00:08,370 --> 00:00:10,850
this very simply using some tools in sklearn.

5
00:00:10,850 --> 00:00:13,610
Of course, you don't need sklearn to do this.

6
00:00:13,610 --> 00:00:16,690
You just need to be able to split up your data, but sklearn has some

7
00:00:16,690 --> 00:00:20,920
functions that turn this really into a, a one or two line of code type problem.

8
00:00:20,920 --> 00:00:24,190
If we want to do a training testing split in sklearn, we want to look for

9
00:00:24,190 --> 00:00:28,730
a group of functions that fall under the general title of cross-validation.

10
00:00:28,730 --> 00:00:31,550
In this documentation page they have a little bit of a warm up,

11
00:00:31,550 --> 00:00:34,730
the idea of cross validation, why you might do it.

12
00:00:34,730 --> 00:00:36,810
But these are things that you're already familiar with because we've

13
00:00:36,810 --> 00:00:39,070
talked about them a lot in this class.

14
00:00:39,070 --> 00:00:42,150
What I want to do is skip ahead to this code example right here and

15
00:00:42,150 --> 00:00:44,440
show you how this can actually be deployed in code.

16
00:00:44,440 --> 00:00:47,290
The output of this is going to be four sets of data.

17
00:00:47,290 --> 00:00:50,630
The first two are going to be the features for the training and

18
00:00:50,630 --> 00:00:51,800
for the testing data.

19
00:00:51,800 --> 00:00:55,320
The second two are going to be the labels for the training and the testing data.

20
00:00:55,320 --> 00:00:59,600
So in this example there's a couple lines here probing how many events fall into

21
00:00:59,600 --> 00:01:02,880
each of these two data sets, the training and the testing.

22
00:01:02,880 --> 00:01:05,860
And then down here you can see that there's actually an SVM that's now

23
00:01:05,860 --> 00:01:07,805
being trained on the training data,

24
00:01:07,805 --> 00:01:12,510
the features in the labels, or as they call it X_train and Y_train.

25
00:01:12,510 --> 00:01:15,450
And then we can do an evaluation on the test set.

26
00:01:15,450 --> 00:01:17,830
So this is looking at something called the score of the classifier.

27
00:01:17,830 --> 00:01:20,190
This is sort of related to the accuracy.

28
00:01:20,190 --> 00:01:23,860
So this is something that you want to be evaluating on your test data.

29
00:01:23,860 --> 00:01:27,310
Now one of the things that maybe you noticed on some of the mini-projects,

30
00:01:27,310 --> 00:01:29,460
if you were paying very close attention,

31
00:01:29,460 --> 00:01:32,340
is that we've actually been deploying this code all along.

32
00:01:32,340 --> 00:01:36,660
So in all of the, for example, classifier training exercises that you

33
00:01:36,660 --> 00:01:39,970
did there was a line of code that was very similar to this one,

34
00:01:39,970 --> 00:01:43,760
where I was splitting the data into a training and testing split for you.

35
00:01:43,760 --> 00:01:48,270
So now what I'm going to ask you to do is, in the form of a programming quiz,

36
00:01:48,270 --> 00:01:52,150
I'm going to ask you to actually deploy a line of code like this on your own so

37
00:01:52,150 --> 00:01:53,980
you have some practice doing it.

38
00:01:53,980 --> 00:01:56,850
I'll give you a dataset that's being read in with all of the features and

39
00:01:56,850 --> 00:01:58,190
all of the labels.

40
00:01:58,190 --> 00:02:00,940
And what I want you to do is to insert a line of code here that splits it

41
00:02:00,940 --> 00:02:03,170
into the training and the testing sets.

42
00:02:03,170 --> 00:02:04,280
Then I'll take those training and

43
00:02:04,280 --> 00:02:09,210
testing sets and train and make predictions using a classifier.

44
00:02:09,210 --> 00:02:12,540
So your job is just to practice deploying a line of code like this one.

45
00:02:12,540 --> 00:02:15,290
The train test split in sklearn.

46
00:02:15,290 --> 00:02:17,450
So that code will execute correctly.

47
00:02:17,450 --> 00:02:18,120
So give it a shot.
