1
00:00:00,000 --> 00:00:05,320
Using the search tree for practical purposes, we may have already gained some efficiency.

2
00:00:05,320 --> 00:00:09,720
But now the question is, does it really affect the running time of the algorithm when we use

3
00:00:09,720 --> 00:00:11,960
O notation and worst-case running time?

4
00:00:11,960 --> 00:00:16,480
Or is it just something that gives us some constant factor saving some practice?

5
00:00:16,480 --> 00:00:20,810
It's hard to tell right now because this tree as we've considered it is highly dependent

6
00:00:20,810 --> 00:00:25,910
on the structure of the graph that we're analyzing and we need to think a little bit more about this.

7
00:00:25,910 --> 00:00:28,460
One interesting thing to consider is the following:

8
00:00:28,460 --> 00:00:33,430
There were only two cases when we stopped further exploration in this tree here.

9
00:00:33,430 --> 00:00:36,570
One case was that we had found a valid vertex cover.

10
00:00:36,570 --> 00:00:41,720
The other one was when we considered an edge that could not be covered any more.

11
00:00:41,720 --> 00:00:45,810
Actually doing it this way is not the smartest possible way because for vertex cover

12
00:00:45,810 --> 00:00:47,100
we already know one thing.

13
00:00:47,100 --> 00:00:51,620
If you look at an edge such as this one here, then this edge here has two endpoints

14
00:00:51,620 --> 00:00:56,940
and now we want to assign these endpoints to be in the vertex cover or to not be in the vertex cover.

15
00:00:56,940 --> 00:00:59,390
So far we have looked at the vertices individually,

16
00:00:59,390 --> 00:01:06,440
but we could also look at both vertices at the same time so not go into two different possibilities

17
00:01:06,440 --> 00:01:09,040
but actually go in three different possibilities.

18
00:01:09,040 --> 00:01:13,350
There's three cases that makes sense here of assigning the vertices

19
00:01:13,350 --> 00:01:15,090
to be on the vertex cover or not.

20
00:01:15,090 --> 00:01:19,780
So we know this edge needs to be covered somehow and there's actually just

21
00:01:19,780 --> 00:01:21,740
three different possibilities of doing that.

22
00:01:21,740 --> 00:01:25,390
One is you take this endpoint here into the vertex cover.

23
00:01:25,390 --> 00:01:29,070
The other one is you take this vertex here into the vertex cover.

24
00:01:29,070 --> 00:01:31,600
Or of course you can also take both.

25
00:01:31,600 --> 00:01:36,390
But you can ignore the case where you would put none of the two endpoints into the vertex cover

26
00:01:36,390 --> 00:01:39,050
because then you already know that your solution doesn't make sense.

27
00:01:39,050 --> 00:01:45,280
This of course also covers other edges as well and now our algorithm can actually very quickly

28
00:01:45,280 --> 00:01:49,260
come to a solution because when we look at this edge here, there's only one possible choice

29
00:01:49,260 --> 00:01:52,730
that remains and that is taking this vertex here into the vertex cover.

30
00:01:52,730 --> 00:01:54,990
All edges are covered. We have a solution of size 2.

31
00:01:54,990 --> 00:02:01,330
So now let's do a worst-case analysis and say that this is the edge that the algorithm considers next.

32
00:02:01,330 --> 00:02:06,700
In all of the three cases, the edge is uncovered so it again goes into three possibilities here,

33
00:02:06,700 --> 00:02:09,960
three possibilities here, and three possibilities here.

34
00:02:09,960 --> 00:02:13,700
Of course if we had been lucky and had chosen this edge here,

35
00:02:13,700 --> 00:02:18,040
the algorithm would have had a much easier choice and actually we're later going to look at

36
00:02:18,040 --> 00:02:23,300
such optimizations for the algorithm and again we're going to branch into the three cases that

37
00:02:23,300 --> 00:02:27,960
makes sense for that edge so this one here would make sense for that edge

38
00:02:27,960 --> 00:02:30,040
but of course it leads to an invalid solution.

39
00:02:30,040 --> 00:02:32,730
This one here is actually the best possible solution.

40
00:02:32,730 --> 00:02:35,960
And this one here is also a solution but it's a larger one,

41
00:02:35,960 --> 00:02:37,760
and we're going to do the same thing over here.

42
00:02:37,760 --> 00:02:42,050
Now, what you might be thinking is, "Oh no! Now we're trying nine assignments."

43
00:02:42,050 --> 99:59:59,999
But the good thing is that, we can now do a worst-case analysis of this.
