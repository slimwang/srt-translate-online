1
00:00:00,000 --> 00:00:03,000
So now we have a way with regular expressions to choose

2
00:00:03,000 --> 00:00:05,000
either a or b.

3
00:00:05,000 --> 00:00:08,000
Another very common choice is to choose between

4
00:00:08,000 --> 00:00:10,000
a or nothing

5
00:00:10,000 --> 00:00:12,000
That is, to have a part of a string that's optional.

6
00:00:12,000 --> 00:00:15,000
For example, when you're writing out numbers, it's possible

7
00:00:15,000 --> 00:00:18,000
to put a negative sign at the begining of a number.

8
00:00:18,000 --> 00:00:22,000
But you don't need to, depends on which number your trying to get across.

9
00:00:22,000 --> 00:00:27,000
Here I've drawn a finite state machine that accepts numbers with no leading negative sign

10
00:00:27,000 --> 00:00:30,000
and numbers with leading negative sign.

11
00:00:30,000 --> 00:00:31,000
Lets see how it goes.

12
00:00:31,000 --> 00:00:37,000
For something like 1,2,3, we start here. 1,2,3, and we're in state 4, which accepts.

13
00:00:37,000 --> 00:00:43,000
For something like -57--negative, 5, 7--we're in state 3, which accepts.

14
00:00:43,000 --> 00:00:46,000
But you may have noticed quite a bit of duplication

15
00:00:46,000 --> 00:00:48,000
in this finite state machine.

16
00:00:48,000 --> 00:00:51,000
These two red areas are the same.

17
00:00:51,000 --> 00:00:55,000
It's an edge labeled 0 - 9, an accepting state with a self-loop labeled 0 - 9.

18
00:00:55,000 --> 00:00:58,000
And one of the things we really wanted was to be concise.

19
00:00:58,000 --> 00:01:04,000
So conceptually, it might be simpler to have an edge that somehow consumes no input.

20
00:01:04,000 --> 00:01:08,000
This new finite state machine will still accept 1, 2, 3.

21
00:01:08,000 --> 00:01:12,000
Here we start in state 1. I don't consume anything and move to state 2.

22
00:01:12,000 --> 00:01:15,000
And then it's 1, 2, 3, and we accept.

23
00:01:15,000 --> 00:01:20,000
-57, I take the negative, 5, 7, and then we accept.

24
00:01:20,000 --> 00:01:24,000
We have a particular convention for indicating that an edge accepts no input.

25
00:01:24,000 --> 00:01:26,000
We use the Greek letter Epsilon.

26
00:01:26,000 --> 00:01:30,000
You can either think of Epsilon as meaning "consume no input"

27
00:01:30,000 --> 00:01:34,000
when you go across this edge, or you can think of it as referring to "the empty string",

28
00:01:34,000 --> 00:01:37,000
at which point you can consume the empty string all you want,

29
00:01:37,000 --> 00:01:41,000
but since it's of size 0, it doesn't effect what you're trying to recognize.

30
00:01:41,000 --> 00:01:44,000
This idea of using this Greek letter--this is totally arbitrary.

31
00:01:44,000 --> 00:01:46,000
This is just an artificial convention.

32
00:01:46,000 --> 00:01:49,000
But it's a commonly used one, so it's worth knowing.

33
00:01:49,000 --> 00:01:52,000
Continuing our theme that anything that can be done in finite state machines

34
00:01:52,000 --> 00:01:57,000
can be done in regular expressions and vice versa--we'll firm that up later on.

35
00:01:57,000 --> 00:02:01,000
I'm going to give you a new regular expression--the question mark,

36
00:02:01,000 --> 00:02:09,000
which we typically read as optional or the previous thing 0 or 1 times.

37
00:02:09,000 --> 00:02:14,000
In that way, it's a lot like plus, which was the previous thing 1 or more times.

38
00:02:14,000 --> 00:02:19,000
So I might write a regular expression that accepts numbers that may optionally

39
00:02:19,000 --> 00:02:20,000
have a leading negative sign.

40
00:02:20,000 --> 00:02:24,000
This negative sign may be present 1 time or 0 times.

41
00:02:24,000 --> 00:02:25,000
It can be there or not.

42
00:02:25,000 --> 00:02:27,000
We definitely need the [0 - 9]+.

43
00:02:27,000 --> 00:02:34,000
And the string we're looking for this needle in is "1861-1941 R. Tagore".

44
00:02:34,000 --> 00:02:38,000
And on this particular input, we will find 2 substrings that match.

45
00:02:38,000 --> 00:02:42,000
1861 matches without the leading negative sign,

46
00:02:42,000 --> 00:02:47,000
and -1941 matches with the leading negative sign.

47
00:02:47,000 --> 00:02:51,000
Rabindranath Tagore is a Nobel Prize winning Bengali poet,

48
00:02:51,000 --> 00:02:53,092
perhaps best known for his work, Where the Mind is Without Fear.
