1
00:00:00,510 --> 00:00:05,050
The Android rendering pipeline is broken
up into two key sections, the CPU and

2
00:00:05,050 --> 00:00:09,190
the GPU, which both work together in
order to draw images on the screen.

3
00:00:09,190 --> 00:00:12,250
Each one has some specific processes
that are defined by it and

4
00:00:12,250 --> 00:00:15,680
need to obey specific operating
rules in order to be performant.

5
00:00:15,680 --> 00:00:19,600
Now on the CPU side, the most common
performance problems come from

6
00:00:19,600 --> 00:00:22,120
unnecessary layouts and
invalidation's that is

7
00:00:22,120 --> 00:00:26,290
part of your view hierarchy having to
be measured, torn down, and rebuilt.

8
00:00:26,290 --> 00:00:30,140
This generally comes in two problematic
flavors, either the display lists

9
00:00:30,140 --> 00:00:34,170
are being rebuilt too many times
during a frame or you're spending too

10
00:00:34,170 --> 00:00:38,770
much time invalidating too much of your
view hierarchy and needlessly redrawing.

11
00:00:38,770 --> 00:00:42,080
Both cause taxing CPU overhead
in refreshing display lists and

12
00:00:42,080 --> 00:00:44,460
other related cache GPU resources.

13
00:00:44,460 --> 00:00:48,450
Now the second major problem is on
the GPU side, involving an inefficiency

14
00:00:48,450 --> 00:00:52,320
called overdraw, which is effectively
when we waste GPU processing time

15
00:00:52,320 --> 00:00:56,410
coloring in pixels that end up getting
colored in later, by something else.

16
00:00:56,410 --> 00:01:00,010
Now, in this lesson, we're going to talk
more about invalidation's, layouts, and

17
00:01:00,010 --> 00:01:03,290
overdraw, and how you can use
the tools available in the SDK

18
00:01:03,290 --> 00:01:05,740
to find out if they're hurting
the performance of your application.

19
00:01:05,740 --> 00:01:09,300
And don't worry about all the crazy
diagrams you've seen so far, once we've

20
00:01:09,300 --> 00:01:12,190
covered the theory, Chris is here to
walk you through the code samples that

21
00:01:12,190 --> 00:01:16,650
will teach you how to fix these exact
kind of problems in your applications.

22
00:01:16,650 --> 00:01:18,870
So, let's get started with
something easy, overdraw.
