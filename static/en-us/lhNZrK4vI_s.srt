1
00:00:00,420 --> 00:00:06,110
To get started, let's create a new
C# script called Audio Picker.

2
00:00:06,110 --> 00:00:11,820
And C# will create something that's
extremely similar to a list,

3
00:00:11,820 --> 00:00:12,530
called an array.

4
00:00:13,640 --> 00:00:17,040
Unity also has support for
a type called List but for

5
00:00:17,040 --> 00:00:19,950
the purposes of this video we'll
be using the built-in array.

6
00:00:20,950 --> 00:00:23,940
To declare one for
audio clips we type in

7
00:00:25,480 --> 00:00:29,800
PublicAudioClip [soundfiles].

8
00:00:29,800 --> 00:00:31,790
Just like other variables we've used,

9
00:00:31,790 --> 00:00:35,590
this enables us to assign our sound
files from the Unity interface.

10
00:00:36,680 --> 00:00:39,250
The key difference here
is that these brackets

11
00:00:39,250 --> 00:00:42,880
allow us to assign multiple
audio clips in an array.

12
00:00:42,880 --> 00:00:46,459
While we're here let's create another
variable for an audio source.

13
00:00:46,459 --> 00:00:48,587
[BLANK_AUDIO]

14
00:00:48,587 --> 00:00:51,726
Now that we've defined our array and
audio component,

15
00:00:51,726 --> 00:00:54,280
all we need to do is
populate the properties.

16
00:00:55,700 --> 00:01:00,360
To do that, we need to define the size
of our array, and then just drag and

17
00:01:00,360 --> 00:01:02,980
drop all of the audio
clips that we want to use.

18
00:01:06,360 --> 00:01:09,430
We also need to drag
in our audio source.

19
00:01:09,430 --> 00:01:12,590
And with that set up, the next thing we
have to do is just pick a random song
