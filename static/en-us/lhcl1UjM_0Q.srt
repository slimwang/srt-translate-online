1
00:00:00,210 --> 00:00:03,450
In order to write the reverse_names
function, I'm going to start off

2
00:00:03,450 --> 00:00:06,650
by writing a function that
reverses only a single name.

3
00:00:06,650 --> 00:00:09,450
First I'll split the name on a space,
which should give

4
00:00:09,450 --> 00:00:12,970
me a list containing the first name and
the last name separately.

5
00:00:12,970 --> 00:00:16,718
Then I'll extract the first name and
the last name using split_name at 0 and

6
00:00:16,718 --> 00:00:18,550
split_name at 1.

7
00:00:18,550 --> 00:00:21,380
And finally I'll return the last name,
followed by a comma and

8
00:00:21,380 --> 00:00:23,690
a space, followed by the first name.

9
00:00:23,690 --> 00:00:26,620
Now before trying to apply my
reverse_name function to the entire

10
00:00:26,620 --> 00:00:28,850
series, I'll test it
out on a single value.

11
00:00:29,860 --> 00:00:32,950
I'll use the iloc attribute to get
the name at position zero, and

12
00:00:32,950 --> 00:00:34,550
then reverse that name.

13
00:00:34,550 --> 00:00:40,550
And sure enough, the name Andre Agassi
has been transformed to Agassi, Andre.

14
00:00:40,550 --> 00:00:43,810
Now I can reverse all the names
using the apply function.

15
00:00:43,810 --> 00:00:47,270
Specifically, I'll return names
that apply and all passes and

16
00:00:47,270 --> 00:00:49,680
argument the reverse name function.

17
00:00:49,680 --> 00:00:52,640
And when I call reverse names I
get each of the names reversed and

18
00:00:52,640 --> 00:00:54,210
collected in a panned series.
