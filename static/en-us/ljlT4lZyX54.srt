1
00:00:00,000 --> 00:00:02,009
And I think there are two correct answers here.

2
00:00:02,009 --> 00:00:06,130
The first one is indeed that randomized algorithms are in some way

3
00:00:06,130 --> 00:00:10,560
more difficult to trick into a worst-case behavior than deterministic algorithms.

4
00:00:10,560 --> 00:00:14,930
Now, to illustrate this for example think about the greedy algorithm

5
00:00:14,930 --> 00:00:17,200
that we use to approximate vertex cover.

6
00:00:17,200 --> 00:00:21,330
We could trick that approximation algorithm into a worst-case behavior

7
00:00:21,330 --> 00:00:25,110
simply because we expose the way that it works

8
00:00:25,110 --> 00:00:28,190
and we knew how it would work because it works deterministically.

9
00:00:28,190 --> 00:00:33,040
For randomized algorithm, of course, we never quite know what it is going to do.

10
00:00:33,040 --> 00:00:36,590
So, constructing a worst-case instance or finding an instance

11
00:00:36,590 --> 00:00:38,920
that really exposes worst-case behavior here

12
00:00:38,920 --> 00:00:41,760
might in some way be more difficult than for deterministic algorithm.

13
00:00:41,760 --> 00:00:45,540
Randomized algorithms can definitely be easier to analyze than deterministic algorithms

14
00:00:45,540 --> 00:00:47,720
although of course this one is a little bit debatable

15
00:00:47,720 --> 00:00:51,340
since statistics and probability can also get very nasty

16
00:00:51,340 --> 00:00:57,450
but when you get down to search tree analysis versus the analysis of random algorithms

17
00:00:57,450 --> 00:01:00,400
and with what probability they produce correct results

18
00:01:00,400 --> 00:01:04,769
usually these over here are easier, and we also had that in the last quiz where I mentioned it.

19
00:01:04,769 --> 00:01:10,470
Now, finally a random algorithm does not explore solutions that a deterministic algorithm would miss.

20
00:01:10,470 --> 00:01:12,420
Rather, it's the other way around.

21
00:01:12,420 --> 00:01:15,820
The deterministic algorithm at least if it's not in the approximation algorithm

22
00:01:15,820 --> 00:01:18,290
will always guarantee that you find a correct solution.

23
00:01:18,290 --> 00:01:22,820
On the other hand, with the randomized algorithm, you know about your probabilities

24
00:01:22,820 --> 00:01:27,940
because you're demanding guarantees, but nevertheless, you can never be 100% sure.

25
00:01:27,940 --> 99:59:59,999
You might be 99.9999% sure that it produces the correct answer but never 100.
