1
00:00:00,460 --> 00:00:03,780
Currently, the user has no way of
knowing they've entered a location that

2
00:00:03,780 --> 00:00:05,650
our server can not handle.

3
00:00:05,650 --> 00:00:09,890
In fact, our source code is also
blissfully unaware of this case.

4
00:00:09,890 --> 00:00:11,210
We'll fix that.

5
00:00:11,210 --> 00:00:14,295
We'll have to add a new location status.

6
00:00:14,295 --> 00:00:16,855
Location status invalid.

7
00:00:16,855 --> 00:00:20,135
But how do we know that that
location is unknown to the server?

8
00:00:20,135 --> 00:00:21,975
It turns out that with each transaction,

9
00:00:21,975 --> 00:00:27,205
the Open Weather Map API returns
a code in JSON similar to HTTP codes.

10
00:00:27,205 --> 00:00:28,515
For success it returns 200,

11
00:00:28,515 --> 00:00:34,165
if the location isn't found it returns
a 404 error, location not found.

12
00:00:34,165 --> 00:00:38,100
So if we see a 404 error we know that
the user has entered something that

13
00:00:38,100 --> 00:00:40,200
the server doesn't understand.

14
00:00:40,200 --> 00:00:42,020
Great, we can modify the code and

15
00:00:42,020 --> 00:00:45,870
get weather data from JSON
to understand this code.

16
00:00:45,870 --> 00:00:48,690
Then we can set the location
status to the invalid state,

17
00:00:48,690 --> 00:00:50,160
when this response is detected.
