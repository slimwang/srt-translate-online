1
00:00:00,540 --> 00:00:02,380
So if you actually wanted to,
build this,

2
00:00:02,380 --> 00:00:04,130
you have to implement an algorithm for
doing it.

3
00:00:04,130 --> 00:00:07,800
Now, I tell you, I took this algorithm
from, I think, their claim slides,

4
00:00:07,800 --> 00:00:09,880
they're on the web, that he took
from somewhere else, etcetera.

5
00:00:09,880 --> 00:00:10,660
So I don't know for

6
00:00:10,660 --> 00:00:15,315
sure that this algorithm is the one
they used, but it sounds pretty good.

7
00:00:15,315 --> 00:00:17,085
All right, it is,
it's similar to what you would do.

8
00:00:17,085 --> 00:00:20,295
So, first thing you do is you
project out these dots, and

9
00:00:20,295 --> 00:00:21,275
you just detect them.

10
00:00:21,275 --> 00:00:24,785
So you detect these speckles, and
you label all of them as unknown.

11
00:00:24,785 --> 00:00:25,665
I don't know their depth.

12
00:00:26,805 --> 00:00:29,945
Now what you start doing is you
randomly select a dot that's,

13
00:00:29,945 --> 00:00:31,190
that's labelled as unknown.

14
00:00:31,190 --> 00:00:34,810
And then you take this windowed search,
all right,

15
00:00:34,810 --> 00:00:38,100
doing a normalized correlation,
and along a scanline.

16
00:00:38,100 --> 00:00:40,900
That is, that really should
say along an epipolar line.

17
00:00:40,900 --> 00:00:46,430
I know exactly where to look, okay,
and I check for the best match.

18
00:00:46,430 --> 00:00:49,440
And by the way, I have to make sure
that that best match is good enough.

19
00:00:49,440 --> 00:00:54,020
If that best match is not so good,
I mark that dot as invalid and

20
00:00:54,020 --> 00:00:56,210
I start looking for new dots again.

21
00:00:56,210 --> 00:00:59,280
But, if my first match is really good,

22
00:00:59,280 --> 00:01:01,150
I start doing what's
called region growing.

23
00:01:01,150 --> 00:01:04,310
I start looking around the,
that neighborhood for

24
00:01:04,310 --> 00:01:08,280
matching other points against
the known pattern, okay?

25
00:01:08,280 --> 00:01:10,380
Oh yeah, by the way,
what am I correlating?

26
00:01:10,380 --> 00:01:12,120
I know the pattern I'm projecting, so

27
00:01:12,120 --> 00:01:15,130
I've got my little local pattern of
what's called pseudo random speckle

28
00:01:15,130 --> 00:01:18,090
points, and
I just correlate them around.

29
00:01:18,090 --> 00:01:21,110
And so,
pixels nearby are added to a queue.

30
00:01:21,110 --> 00:01:26,280
For each pixel, I initialized its offset
looking for it from the one I just had.

31
00:01:26,280 --> 00:01:29,420
I search around a little bit,
see if I find a good enough match.

32
00:01:29,420 --> 00:01:33,440
If so, I label it as matched
with it's offset, its disparity.

33
00:01:33,440 --> 00:01:37,680
And then I look for its neighbors and
I add them to the queue.

34
00:01:37,680 --> 00:01:39,920
And I stop doing that
when that queue is empty,

35
00:01:39,920 --> 00:01:41,940
because I've finished
using this anchor point.

36
00:01:41,940 --> 00:01:46,580
And I go back again and I, I, I,
reinitial, I pick another point and I

37
00:01:46,580 --> 00:01:52,520
stop when all the points are labeled as
with a known depth or marked as invalid.

38
00:01:52,520 --> 00:01:56,280
So what makes that work is that I have
this, semi, this pseudo random pattern,

39
00:01:56,280 --> 00:02:00,430
so any little patch is not, can't be
matched everywhere but is matched or

40
00:02:00,430 --> 00:02:03,230
just in one place well
along that epipolar line.

41
00:02:03,230 --> 00:02:06,810
I know those patterns and so I can
just drive that search very quickly.
