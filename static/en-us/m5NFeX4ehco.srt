1
00:00:00,000 --> 00:00:05,000
So now I'm going to show you how to add HTML style comments to our lexer

2
00:00:05,000 --> 00:00:07,000
so that it gets the behavior that we want.

3
00:00:07,000 --> 00:00:10,000
Just as we had to list all of the tokens,

4
00:00:10,000 --> 00:00:15,000
we're going to have to list all of these possibilities for things we could be doing.

5
00:00:15,000 --> 00:00:18,000
Either we're breaking the input down into tokens,

6
00:00:18,000 --> 00:00:21,000
or we're handling comments.

7
00:00:21,000 --> 00:00:24,000
These 2 possible choices are called lexer states,

8
00:00:24,000 --> 00:00:28,000
a word I really don't like because it's super ambiguous.

9
00:00:28,000 --> 00:00:30,000
We have states in finite state machines.

10
00:00:30,000 --> 00:00:32,000
Let's not have states elsewhere.

11
00:00:32,000 --> 00:00:36,000
This particular syntax for specifying them is arbitrary.

12
00:00:36,000 --> 00:00:39,000
It's just a function of the library we're using,

13
00:00:39,000 --> 00:00:44,000
so I'm going to declare a new state called "htmlcomment," and that's exclusive.

14
00:00:44,000 --> 00:00:47,000
If I'm in the middle of processing an HTML comment,

15
00:00:47,000 --> 00:00:49,000
I can't be doing anything else.

16
00:00:49,000 --> 00:00:51,000
I'm not going to be finding strings or words.

17
00:00:51,000 --> 00:00:56,000
Here's my rule for entering this special mode for HTML comments.

18
00:00:56,000 --> 00:01:01,000
If I see the beginning marker, <!--,

19
00:01:01,000 --> 00:01:04,000
then I want to enter this special HTML comment state

20
00:01:04,000 --> 00:01:09,000
and not find words or strings or numbers or tags but instead ignore everything.

21
00:01:09,000 --> 00:01:13,000
When I reach the end marker for an HTML comment,

22
00:01:13,000 --> 00:01:18,000
I want to jump back to the initial mode, whatever I was doing before,

23
00:01:18,000 --> 00:01:24,000
that time when I could find l angle slash and l angle and r angle.

24
00:01:24,000 --> 00:01:28,000
By default, that mode is called "INITIAL," all in capital letters.

25
00:01:28,000 --> 00:01:32,000
I'm actually going to do one other thing all at the same time.

26
00:01:32,000 --> 00:01:37,000
When we're in our special HTML comment mode, we won't use any of our other rules,

27
00:01:37,000 --> 00:01:41,000
even our super happy newline rule that's counting the line number,

28
00:01:41,000 --> 00:01:45,000
so what I'm going to do is call this string.count function

29
00:01:45,000 --> 00:01:50,000
to count the number of newline characters that occur in the token

30
00:01:50,000 --> 00:01:55,000
in the entire comment and add those to the current line number.

31
00:01:55,000 --> 00:01:59,000
This is a little tricky, so don't worry if this doesn't make sense the first time.

32
00:01:59,000 --> 00:02:03,000
Now, we've said what to do when an HTML comment begins,

33
00:02:03,000 --> 00:02:06,000
and we've said what to do when it ends,

34
00:02:06,000 --> 00:02:10,000
but any other character we see in this special HTML comment mode

35
00:02:10,000 --> 00:02:13,000
isn't going to match one of those two rules.

36
00:02:13,000 --> 00:02:16,000
Anything that doesn't match one of our rules counts as an error,

37
00:02:16,000 --> 00:02:21,000
and what I'm going to say is just skip over that single character in the input.

38
00:02:21,000 --> 00:02:23,000
It's part of the comment. I don't even want to see it.

39
00:02:23,000 --> 00:02:27,000
This is a lot like writing "pass" except that it gathers up

40
00:02:27,000 --> 00:02:31,000
all of the text into one big value so that I can count the newlines later.

41
00:02:31,000 --> 00:02:34,000
Again, this is a pretty tricky maneuver.

42
00:02:34,000 --> 00:02:37,000
Now I've changed my webpage so that it says "hello."

43
00:02:37,000 --> 00:02:40,000
There's an HTML comment with the word comment in it,

44
00:02:40,000 --> 00:02:45,000
and then there's the word all, and if I've written all of this code correctly the first time,

45
00:02:45,000 --> 00:02:48,000
which really that does not happen in Lake Wobegon,

46
00:02:48,000 --> 00:02:51,000
then we'll get a chance to see how this plays out.

47
00:02:51,000 --> 00:02:54,000
There was an error on line 22,

48
00:02:54,000 --> 00:02:58,000
this line number increment, and it's yelling at me.

49
00:02:58,000 --> 00:03:00,000
Let's go back up to line 22.

50
00:03:00,000 --> 00:03:04,000
I had split these onto 2 lines so that it would be easier for you to see.

51
00:03:04,000 --> 00:03:07,000
But let's not do that because Python hates it.

52
00:03:07,000 --> 00:03:11,000
And now with that one simple syntax error fixed,

53
00:03:11,000 --> 00:03:15,000
our webpage produces exactly the 2 tokens we expect,

54
00:03:15,000 --> 00:03:19,000
hello, starting at position 0, and all,

55
00:03:19,000 --> 00:03:24,000
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,

56
00:03:24,000 --> 00:03:29,000
21, 22, 23, all starting at position 23 on line 1.

57
00:03:29,000 --> 99:59:59,999
Excellent.
