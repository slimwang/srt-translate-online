1
00:00:00,180 --> 00:00:03,984
Here's how I solve this problem. There are four different conditions. All four

2
00:00:03,984 --> 00:00:07,814
had to be true. So I join them with the and operator. So let's start with the

3
00:00:07,814 --> 00:00:15,490
x-axis. x has to be at least width over 3, and it should be at most twice that.

4
00:00:15,490 --> 00:00:18,550
The y value should be at least height over 3, and it should be at most twice

5
00:00:18,550 --> 00:00:24,156
that. So, here are my four conditions joined by and. When all of them are true,

6
00:00:24,156 --> 00:00:29,264
then the pixel should be blue, otherwise it should be white. Now, you may be

7
00:00:29,264 --> 00:00:32,627
wondering, what's the deal with the greater equals versus less thans,

8
00:00:32,627 --> 00:00:36,047
particularly, if you didn't do it just so and your answer wasn't counted

9
00:00:36,047 --> 00:00:42,682
correctly. This is easiest to see with a specific example. So let's say we have

10
00:00:42,682 --> 00:00:50,154
300 by 300 flag. That means that the x and y positions range from 0 to 299. We

11
00:00:50,154 --> 00:00:55,005
want each of these three areas to have equal size, so the first one goes from 0

12
00:00:55,005 --> 00:01:02,618
to 99, the next one from 100 to 199, and the last one from 200 to 299. So to be

13
00:01:02,618 --> 00:01:07,598
within the second, of these, you want to be greater equal 100 and less than

14
00:01:07,598 --> 00:01:12,673
200. That's why you have a greater equal here and a less than there. I know it

15
00:01:12,673 --> 00:01:16,627
seems like a fine point, but it is worth paying attention to. And here is what

16
00:01:16,627 --> 00:01:18,583
it looks like, when I run it.
