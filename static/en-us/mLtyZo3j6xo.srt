1
00:00:00,500 --> 00:00:03,440
Our portrait forecast view
looks pretty good now.

2
00:00:03,440 --> 00:00:07,470
The next code you're going to grab will
transform the landscape tablet view from

3
00:00:07,470 --> 00:00:09,910
this, into this.

4
00:00:09,910 --> 00:00:12,920
Let's go over how we
accomplish this change.

5
00:00:12,920 --> 00:00:16,900
First of all, you can see that we've
added a linear layout for the app bar,

6
00:00:16,900 --> 00:00:20,359
which has the correct elevation and
blue primary color background.

7
00:00:21,800 --> 00:00:25,670
Next, we see the toolbar,
rendered with the correct themes.

8
00:00:26,730 --> 00:00:28,580
This is a bit interesting.

9
00:00:28,580 --> 00:00:32,680
We want to align the Sunshine
logo with the forecast day.

10
00:00:32,680 --> 00:00:35,540
Rather than hard coding
the calculated value,

11
00:00:35,540 --> 00:00:38,660
we use nested frame
layouts to perform it.

12
00:00:38,660 --> 00:00:40,690
This is a tiny bit expensive but

13
00:00:40,690 --> 00:00:44,160
it makes it easy to create
responsive layouts.

14
00:00:44,160 --> 00:00:48,140
Finally, we look into how we
position the detail view.

15
00:00:48,140 --> 00:00:52,900
This is a nice trick for creating two
even columns in a relative layout.

16
00:00:52,900 --> 00:00:56,370
Create a center strut view that
has no width or height and

17
00:00:56,370 --> 00:00:58,230
ask relative lay out to center the view.

18
00:00:59,260 --> 00:01:03,815
We can then create the forecast fragment
view to the left of this strut view and

19
00:01:03,815 --> 00:01:07,190
a detailed fragment to the right
of the center strut view.

20
00:01:07,190 --> 00:01:10,120
Note that we have to make sure that
the lay out elevation at least

21
00:01:10,120 --> 00:01:11,670
matches the app bar.

22
00:01:11,670 --> 00:01:14,420
Otherwise the detailed fragment
would be included by the at

23
00:01:14,420 --> 00:01:17,640
bar rather then overlapping it and
that's it.

24
00:01:17,640 --> 00:01:19,750
It's actually a relatively
simple relative layout,

25
00:01:19,750 --> 00:01:22,010
given how complex it looks.

26
00:01:22,010 --> 00:01:26,190
Let's take a quick look on where
the portrait tablet layout stands.

27
00:01:26,190 --> 00:01:29,010
Yikes, it's worse than before.

28
00:01:29,010 --> 00:01:29,880
We can fix it.

29
00:01:30,940 --> 00:01:34,370
Here are our red lines for what we
want the portrait layout to look like.

30
00:01:35,690 --> 00:01:40,770
Wow, these overlapping red
lines are a bit confusing.

31
00:01:40,770 --> 00:01:42,990
We can bring the app bar
forward to analyze it.

32
00:01:44,480 --> 00:01:48,000
So, our app bar will be
made in three sections.

33
00:01:48,000 --> 00:01:53,015
The top section is our tool bar
with a height of action bar size.

34
00:01:53,015 --> 00:01:55,767
Image, with a height of
listPreferredItemHeight, and

35
00:01:55,767 --> 00:01:58,402
the bottom section is our spacer view,
with a height of

36
00:01:58,402 --> 00:02:02,345
details_app_bar_overlap, which
we've just added for you.

37
00:02:02,345 --> 00:02:07,595
We use our standard 16 DP padding
around the details fragment, and

38
00:02:07,595 --> 00:02:10,763
for our details fragment, we're
actually going to use wrap_contents.
