1
00:00:00,320 --> 00:00:02,950
So to understand query world a bit more, you going to

2
00:00:02,950 --> 00:00:05,420
add another filter to the query in your query playground

3
00:00:05,420 --> 00:00:09,280
method. So now here we get all the conferences, sorted

4
00:00:09,280 --> 00:00:12,390
by name, filter on the city is London, e filter on

5
00:00:12,390 --> 00:00:15,810
topics is medical innovations, filter on month is six. But

6
00:00:15,810 --> 00:00:18,530
now I'm going to add one more filter, I want to filter

7
00:00:18,530 --> 00:00:21,970
on max attendees greater than ten. Now I'm going to run

8
00:00:21,970 --> 00:00:25,345
this query on localhost. I'm going to try it out in the

9
00:00:25,345 --> 00:00:30,080
APIs Explorer. Oops. Got an error. How did that happen?

10
00:00:30,080 --> 00:00:33,260
But look, it's got some good information in here. If

11
00:00:33,260 --> 00:00:35,700
you get an error, read it carefully. Remember, you can

12
00:00:35,700 --> 00:00:38,100
copy and paste it into an editor that renders HTML

13
00:00:38,100 --> 00:00:41,110
to make it easier to read. So it's now your

14
00:00:41,110 --> 00:00:44,440
turn to add an inequality filter. Add a filter for

15
00:00:44,440 --> 00:00:47,580
max attendees greater than ten, and then go ahead and

16
00:00:47,580 --> 00:00:50,540
try the query on localhost. And test it out using

17
00:00:50,540 --> 00:00:53,290
the APIs Explorer. I'm guessing that you're

18
00:00:53,290 --> 00:00:55,260
going to get an error. But what caused

19
00:00:55,260 --> 00:00:59,710
the error? Is it because the first sort order is a name, but the

20
00:00:59,710 --> 00:01:04,400
inequality filter is on max attendees? Or is it because the composite index does

21
00:01:04,400 --> 00:01:09,580
not exist? Or is it because you have too many inequality filters in one query?
