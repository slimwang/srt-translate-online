1
00:00:00,000 --> 00:00:02,000
You saw in the simple lexer that we wrote

2
00:00:02,000 --> 00:00:06,000
that tokens come, not just with a type of token in their value,

3
00:00:06,000 --> 00:00:10,000
but also their line number and column number.

4
00:00:10,000 --> 00:00:12,000
That sort of information is very handy

5
00:00:12,000 --> 00:00:14,000
to keep track of for users.

6
00:00:14,000 --> 00:00:18,000
At some point, you may have written an incorrect Python program--nah.

7
00:00:18,000 --> 00:00:20,000
I've only written about a million of them.

8
00:00:20,000 --> 00:00:22,000
And it's really nice when the interpreter tells you

9
00:00:22,000 --> 00:00:24,000
which line the mistake is on.

10
00:00:24,000 --> 00:00:29,000
Unfortunately, the lexer won't do this for us--entirely automatically.

11
00:00:29,000 --> 00:00:31,000
It will keep track of columns,

12
00:00:31,000 --> 00:00:33,000
but it won't keep track of lines--

13
00:00:33,000 --> 00:00:35,000
unless we do some work.

14
00:00:35,000 --> 00:00:37,000
Here's an example of a rule

15
00:00:37,000 --> 00:00:39,000
that matches new lines.

16
00:00:39,000 --> 00:00:41,000
You may not have seen this before,

17
00:00:41,000 --> 00:00:44,000
but we've already seen how the backslash can be used

18
00:00:44,000 --> 00:00:48,000
to Escape special characters, like the quote.

19
00:00:48,000 --> 00:00:50,000
And this basically just means: quote.

20
00:00:50,000 --> 00:00:52,000
However, when paired with something else,

21
00:00:52,000 --> 00:00:55,000
the backslash often has a special meaning.

22
00:00:55,000 --> 00:00:58,000
\ N is the string equivalent of pressing the Return

23
00:00:58,000 --> 00:01:02,000
or Enter key on your keyboard, and we call this the "newline" key.

24
00:01:02,000 --> 00:01:05,000
It advances your Editor, by 1 line.

25
00:01:05,000 --> 00:01:07,000
So this rule--t_newline--

26
00:01:07,000 --> 00:01:10,000
matches a new line that appears.

27
00:01:10,000 --> 00:01:12,000
And when we see it,

28
00:01:12,000 --> 00:01:16,000
we take the token and increment its line number by 1,

29
00:01:16,000 --> 00:01:20,000
and then we pass over the new line, as if it were Whitespace.

30
00:01:20,000 --> 00:01:22,000
Here you can see that I've added

31
00:01:22,000 --> 00:01:24,000
the newline rule,

32
00:01:24,000 --> 00:01:26,000
just as I described on the previous slide,

33
00:01:26,000 --> 00:01:29,000
to our old lexer from before.

34
00:01:29,000 --> 00:01:32,000
Let's go all the way to the bottom,

35
00:01:32,000 --> 00:01:35,000
and now I'm going to make my Web page

36
00:01:35,000 --> 00:01:37,000
much more complicated.

37
00:01:37,000 --> 00:01:39,000
And here, I'm using triple-quoted strings,

38
00:01:39,000 --> 00:01:42,000
showing line1 on the first line

39
00:01:42,000 --> 00:01:44,000
and line2 on the second.

40
00:01:44,000 --> 00:01:47,000
Unfortunately, the output shows

41
00:01:47,000 --> 00:01:49,000
Line1, followed by the new line.

42
00:01:49,000 --> 00:01:52,000
I'm going to have to go up here

43
00:01:52,000 --> 00:01:55,000
and remove newline from the list of things

44
00:01:55,000 --> 00:01:58,000
that it's possible to have in a Word--just like we had to remove space.

45
00:01:58,000 --> 00:02:02,000
And now we see that Line1 starts on LIne1

46
00:02:02,000 --> 00:02:04,000
and Line2 starts on Line2,

47
00:02:04,000 --> 00:02:08,000
and it's the seventh character from the beginning of the file.

48
00:02:08,000 --> 00:02:12,000
Zero, 1, 2, 3, 4, 5 is the newline,

49
00:02:12,000 --> 00:02:16,000
6 is the space, 7 is the capital L. All right.
