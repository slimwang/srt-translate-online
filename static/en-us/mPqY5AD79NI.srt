1
00:00:00,210 --> 00:00:04,724
Now let's compare cross-site request
forgery and cross-site scripting.

2
00:00:04,724 --> 00:00:07,640
In cross-site scripting,
the user's browser

3
00:00:07,640 --> 00:00:12,280
trusts a badly implemented website
that does not check input content.

4
00:00:12,280 --> 00:00:16,730
That is, the attacker is able to inject
a script into the trusted website and

5
00:00:16,730 --> 00:00:20,860
as a result, the user's browser
executes the attacker's script.

6
00:00:20,860 --> 00:00:26,000
In cross-site request forgery a website
trusts that requests are from the user.

7
00:00:26,000 --> 00:00:29,760
But in fact, the attacker forges
user requests to the website.

8
00:00:29,760 --> 00:00:34,220
As a result, the website executes
the attackers malicious actions.

9
00:00:34,220 --> 00:00:38,720
Both cross-site scripting and cross-site
request forgery are the results of

10
00:00:38,720 --> 00:00:41,510
security weakness of websites.

11
00:00:41,510 --> 00:00:44,410
In particular,
the lack of authenticating and

12
00:00:44,410 --> 00:00:45,540
validating user input.
