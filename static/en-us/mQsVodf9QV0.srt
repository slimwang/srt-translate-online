1
00:00:00,230 --> 00:00:04,360
As it turns out, the correct
answer is iterative deepening A*.

2
00:00:04,360 --> 00:00:06,830
This problem is much
harder than it sounds,

3
00:00:06,830 --> 00:00:09,550
simply due to the size
of the search space.

4
00:00:09,550 --> 00:00:14,490
This table shows the number of nodes in
the search tree as a function of depth.

5
00:00:14,490 --> 00:00:17,019
Clearly the problem becomes
intractable quickly.

6
00:00:17,019 --> 00:00:18,210
However, in 1997,

7
00:00:18,210 --> 00:00:23,380
Richard Korf published an approach
using iterative deepening A* search.

8
00:00:23,379 --> 00:00:25,949
He had to search to
a median depth of 18 for

9
00:00:25,949 --> 00:00:28,369
the random configurations he attempted.

10
00:00:28,370 --> 00:00:31,359
The question is, what admissible
heuristic did Korf invent for

11
00:00:31,359 --> 00:00:32,740
his A* search?

12
00:00:32,740 --> 00:00:36,440
To find out, follow the link to
his paper in the instructor notes.

13
00:00:36,439 --> 00:00:39,500
This problem continued to bother
computer science researchers.

14
00:00:39,500 --> 00:00:44,390
In 2010, Thomas Rokiki and
Morley Davidson proved that the maximum

15
00:00:44,390 --> 00:00:47,570
number of quarter turns needed
to solve the cube is 26,

16
00:00:47,570 --> 00:00:52,490
using 29 CPU years of idle computer
time at the Ohio Super Computing Center.

17
00:00:52,490 --> 00:00:56,980
Games have a long history of inspiring
rapid to nasty for AI researchers.

18
00:00:56,979 --> 00:01:01,479
As Peter teaches us about search, keep
in mind interesting problems like these,

19
00:01:01,479 --> 00:01:05,289
and look for clues as to how we might
use search techniques to solve them.

