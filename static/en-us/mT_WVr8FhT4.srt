1
00:00:00,012 --> 00:00:06,545
So 2,508 megahertz is 2,508 times 10 to the 6 clocks per second.

2
00:00:06,545 --> 00:00:10,202
Memory bus of 128 bits is equal to 16 bytes per clock.

3
00:00:10,202 --> 00:00:12,280
So if you multiply this out,

4
00:00:12,280 --> 00:00:16,663
the maximum theoretical peak bandwidth of the memory system

5
00:00:16,663 --> 00:00:19,857
is going to be just over 40 gigabytes per second.

6
00:00:19,857 --> 00:00:21,990
And as a rough rule of thumb,

7
00:00:21,990 --> 00:00:26,535
anytime we achieve something like 40 to 60% of the memory bandwidth,

8
00:00:26,535 --> 00:00:30,357
we'd say, "Well, that's doing okay. It's not great. There's probably room for improvement."

9
00:00:30,357 --> 00:00:34,418
If you can get into the 60 to 75% range, that's doing pretty well.

10
00:00:34,418 --> 00:00:36,469
You might not be able to improve on that.

11
00:00:36,469 --> 00:00:39,322
And any time you get over 75%, we would consider that excellent, okay?

12
00:00:39,322 --> 00:00:44,081
You'll never achieve this theoretical peak bandwidth on any real substantial code, okay?

13
00:00:44,081 --> 00:00:48,133
This is literally just what you get from multiplying out the clock rate and the memory bus,

14
00:00:48,133 --> 00:00:50,484
and a real code is going to have an additional overhead.

15
00:00:50,484 --> 00:00:53,649
So if you can get over 75% of that, you're doing really well,

16
00:00:53,649 --> 00:00:55,960
and you probably don't need to optimize the memory further.

17
00:00:55,960 --> 00:00:58,691
So how well are we doing in this code?
