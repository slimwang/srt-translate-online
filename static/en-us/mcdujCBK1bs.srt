1
00:00:00,210 --> 00:00:03,360
One final password thing. I know I promised the last one was

2
00:00:03,360 --> 00:00:05,470
the final one, but we've got to mention this. We know how

3
00:00:05,470 --> 00:00:08,660
to store a password securely on the server. We still have this

4
00:00:08,660 --> 00:00:10,760
issue that if you type in a password, remember how when we

5
00:00:10,760 --> 00:00:14,520
did the forms, I showed you that you could type in password

6
00:00:14,520 --> 00:00:18,380
in a password text box. You know and, and it looks like

7
00:00:18,380 --> 00:00:22,410
little, little circles or little asterisks. And that even when you, when

8
00:00:22,410 --> 00:00:25,280
you submit this in the URL, you could still see, remember we

9
00:00:25,280 --> 00:00:29,380
saw q equal to hunter 2 before when we're playing around

10
00:00:29,380 --> 00:00:32,119
with that. Submitting a form to go back to our trusted

11
00:00:32,119 --> 00:00:35,320
picture, you know if you're submitting this password to these servers,

12
00:00:35,320 --> 00:00:39,260
the password is actually sent in clear text over the internet.

13
00:00:39,260 --> 00:00:41,260
So you're storing the password securely on your server. If your

14
00:00:41,260 --> 00:00:45,270
database gets stolen, you know you're covered pretty much. But the

15
00:00:45,270 --> 00:00:47,452
problem is when the user logs in, they're actually sending this

16
00:00:47,452 --> 00:00:50,500
password [INAUDIBLE] of the internet. So if you really, really care about

17
00:00:50,500 --> 00:00:52,920
that, about having the password encrypted the whole way

18
00:00:52,920 --> 00:00:56,190
so some bad guy in the middle can't just,

19
00:00:56,190 --> 00:00:58,640
you know, sniff the password off the wire, you

20
00:00:58,640 --> 00:01:02,250
use HTTPS. And all HTTPs is, its just like HTTP

21
00:01:02,250 --> 00:01:05,379
except it is encrypted over SSL. That means this

22
00:01:05,379 --> 00:01:08,340
whole communication is encrypted, so this man in the

23
00:01:08,340 --> 00:01:11,220
middle in theory, unless he's hacked very sign, and

24
00:01:11,220 --> 00:01:15,510
they never get hacked, can't see what's being transmitted over

25
00:01:15,510 --> 00:01:18,910
the wire. So it's all gobbledegook to him.

26
00:01:18,910 --> 00:01:21,810
So anyway, that's what HTTPS is for. And if

27
00:01:21,810 --> 00:01:24,340
you really are, if you're building something that's secure,

28
00:01:24,340 --> 00:01:27,130
you know, perhaps not a blog, but you know

29
00:01:27,130 --> 00:01:30,820
Gmail for example, you want to be using HTTPs.

30
00:01:30,820 --> 00:01:33,510
And then you've got secure transmission from the browser

31
00:01:33,510 --> 00:01:36,410
to the servers, and you've got secure passwords on

32
00:01:36,410 --> 00:01:38,770
the servers. And you're in a reasonably good setup.
