1
00:00:00,008 --> 00:00:05,562
We often refer to services that we're using on an everyday basis, such as

2
00:00:05,562 --> 00:00:09,962
airline reservation or Gmail or websurfing, as

3
00:00:09,962 --> 00:00:13,450
giant scale services, as opposed to the services

4
00:00:13,450 --> 00:00:16,428
that you get within your organization. Example,

5
00:00:16,428 --> 00:00:19,400
a file server. There's a later module in

6
00:00:19,400 --> 00:00:22,640
this course called Internet Scale Computing, and

7
00:00:22,640 --> 00:00:25,640
in that we will discuss programming models and

8
00:00:25,640 --> 00:00:29,180
resource management issues for providing such giant

9
00:00:29,180 --> 00:00:31,440
scale services. The focus of this point

10
00:00:31,440 --> 00:00:34,390
however, is to show how object technology

11
00:00:34,390 --> 00:00:39,100
facilitates structuring such services. Let's look at an

12
00:00:39,100 --> 00:00:42,570
example to put things in perspective. Let's

13
00:00:42,570 --> 00:00:44,750
say you want to purchase a round trip

14
00:00:44,750 --> 00:00:51,400
ticket to go from Atlanta to Chennai, India. With a few clicks, you can send

15
00:00:51,400 --> 00:00:55,510
your request over to a portal such as Expedia.

16
00:00:55,510 --> 00:00:58,000
And Expedia then goes to work for you. It

17
00:00:58,000 --> 00:01:02,220
contacts a whole bunch of different airlines, gets the

18
00:01:02,220 --> 00:01:04,830
best options that are available from all these different

19
00:01:04,830 --> 00:01:07,770
choices, and then it comes back to you with

20
00:01:07,770 --> 00:01:10,020
a bunch of options. Now you may take your

21
00:01:10,020 --> 00:01:13,490
own sweet time deciding which one of those you

22
00:01:13,490 --> 00:01:18,560
may want to pick, based on cost, perhaps convenience, guarantees.

23
00:01:18,560 --> 00:01:20,580
For example, you don't want your baggage to end

24
00:01:20,580 --> 00:01:24,530
up in Timbuktu. So, based on all of that,

25
00:01:24,530 --> 00:01:26,430
you may want to make a decision. Maybe you

26
00:01:26,430 --> 00:01:28,580
have to talk to your spouse or significant other,

27
00:01:28,580 --> 00:01:33,950
siblings, children, so on, in order to make the final decision. Finally

28
00:01:33,950 --> 00:01:39,110
you decide, then commit to buying the ticket, and then Expedia

29
00:01:39,110 --> 00:01:43,620
will complete the transaction based on the choice that you made. And you get

30
00:01:43,620 --> 00:01:48,160
your ticket and life is good. Well, not so fast. While you are busy

31
00:01:48,160 --> 00:01:52,050
procrastinating with your choices, there's another person

32
00:01:52,050 --> 00:01:55,360
who is planning almost an exact similar trip

33
00:01:55,360 --> 00:02:00,150
to yours. Same dates, same constraints, same destination, and so on. And you can

34
00:02:00,150 --> 00:02:04,620
immediately see that, without your realizing, you

35
00:02:04,620 --> 00:02:08,600
are actually competing for resources. In this case,

36
00:02:08,600 --> 00:02:10,780
a physical resource, a seat on a

37
00:02:10,780 --> 00:02:14,700
particular flight going from Atlanta to Chennai, India,

38
00:02:14,700 --> 00:02:16,750
with others that you don't even know exist

39
00:02:16,750 --> 00:02:19,690
on this planet. Therefore, the service provider, in

40
00:02:19,690 --> 00:02:23,750
this case multiple enterprises involved, Expedia and

41
00:02:23,750 --> 00:02:26,790
all the airlines together, that are handling your

42
00:02:26,790 --> 00:02:29,570
request, they all have to work together to

43
00:02:29,570 --> 00:02:33,860
make sure that the result, any resource conflict

44
00:02:33,860 --> 00:02:39,380
that might occur between simultaneous requests across space and time coming from

45
00:02:39,380 --> 00:02:44,800
several different clients. So all the issues that we've discussed in the

46
00:02:44,800 --> 00:02:49,380
context parallel and distributed systems, synchronization,

47
00:02:49,380 --> 00:02:54,030
communication, and immediacy of actions, concurrency,

48
00:02:54,030 --> 00:02:59,200
all of these become important. And they surface in this very simple

49
00:02:59,200 --> 00:03:02,920
example across space and time. And

50
00:03:02,920 --> 00:03:06,730
additionally, all services need some common features.

51
00:03:06,730 --> 00:03:12,730
For example, a shopping cart on your browser. And in fact, even though this

52
00:03:12,730 --> 00:03:15,950
particular example is illustrating an airline

53
00:03:15,950 --> 00:03:18,210
reservation, if it comes to booking a

54
00:03:18,210 --> 00:03:24,300
ticket on a train, or getting hotel reservation, or booking tickets to go see

55
00:03:24,300 --> 00:03:28,030
a game, all of those things have similar

56
00:03:28,030 --> 00:03:32,950
requirements. And many of them are probably repeatable.

57
00:03:32,950 --> 00:03:34,540
And many of them, such as the shopping

58
00:03:34,540 --> 00:03:37,260
cart in this example, are features that might be

59
00:03:37,260 --> 00:03:40,190
needed even if the services that you're talking

60
00:03:40,190 --> 00:03:43,860
about are completely different, such as an airline reservation

61
00:03:43,860 --> 00:03:46,330
and hotel booking. So since the same issues

62
00:03:46,330 --> 00:03:50,250
crop up in the implementation of each new service,

63
00:03:50,250 --> 00:03:55,580
we don't want to reinvent the wheel every time. This

64
00:03:55,580 --> 00:04:00,960
is where object technology comes in, the power of reuse of components.
