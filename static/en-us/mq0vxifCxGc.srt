1
00:00:00,140 --> 00:00:03,242
In the early '90s, CD-ROM's burst onto the scene starting first with computers

2
00:00:03,242 --> 00:00:07,440
and then actually moving to consoles. Of course, with it became larger asset

3
00:00:07,440 --> 00:00:11,894
sizes as well as increased load times. See, the medium of actually getting data

4
00:00:11,894 --> 00:00:15,478
off of a CD-ROM was much slower than cartridge counterparts were for earlier

5
00:00:15,478 --> 00:00:20,194
game systems. This means for the first time in history, game developers are

6
00:00:20,194 --> 00:00:23,596
actually forcing users to stare at a very, very boring screen that just told

7
00:00:23,596 --> 00:00:28,460
them content was loading. This of course was because the assets took time to

8
00:00:28,460 --> 00:00:31,832
get into memory and they weren't being streamed of disc fast enough. More

9
00:00:31,832 --> 00:00:35,048
importantly, game developers didn't really have the proper knowledge of how to

10
00:00:35,048 --> 00:00:38,842
work around this problem. Most of the architectures back then were

11
00:00:38,842 --> 00:00:41,866
single-threaded, which meant all the file iO was actually synchronous, or

12
00:00:41,866 --> 00:00:44,986
blocking, so they had to come up with very, very tricky mechanisms to load data

13
00:00:44,986 --> 00:00:50,556
and render that little UI. Now for grits we run into the same problem. If a

14
00:00:50,556 --> 00:00:53,076
user is on a very, very slow connection, it's actually going to take a lot of

15
00:00:53,076 --> 00:00:56,938
time to stream that data in. For our purposes we actually employ an

16
00:00:56,938 --> 00:01:00,953
asynchronous asset loading methodology. Which means we can actually render

17
00:01:00,953 --> 00:01:03,989
things to the screen, while actually pulling data in from the net. And that's

18
00:01:03,989 --> 00:01:06,030
what we're going to talk about here in just a bit.
