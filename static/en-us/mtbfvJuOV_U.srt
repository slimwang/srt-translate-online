1
00:00:00,000 --> 00:00:04,000
Now we see how to modify the Tree Search Function

2
00:00:04,000 --> 00:00:06,000
to make it be a Graph Search Function

3
00:00:06,000 --> 00:00:09,000
to avoid those repeated paths.

4
00:00:09,000 --> 00:00:13,000
What we do, is we start off and initialize a set

5
00:00:13,000 --> 00:00:16,000
called the explored set of states that we have already explored.

6
00:00:16,000 --> 00:00:19,000
Then, when we consider a new path,

7
00:00:19,000 --> 00:00:23,000
we add the new state to the set of already explored states,

8
00:00:23,000 --> 00:00:26,000
and then when we are expanding the path

9
00:00:26,000 --> 00:00:29,000
and adding in new states to the end of it,

10
00:00:29,000 --> 00:00:33,000
we don’t add that in if we have already seen that new state

11
00:00:33,000 --> 00:00:37,000
in either the frontier or the explored.

12
00:00:37,000 --> 00:00:39,000
Now back to Breadth First Search.

13
00:00:39,000 --> 00:00:41,000
Let’s assume we are using the Graph Search

14
00:00:41,000 --> 00:00:44,000
so that we have eliminated the duplicate paths.

15
00:00:44,000 --> 00:00:47,000
Arad is crossed off the list.

16
00:00:47,000 --> 00:00:49,000
The path that goes from Arad to Sibiu

17
00:00:49,000 --> 00:00:51,000
and back to Arad is removed,

18
00:00:51,000 --> 00:00:53,000
and we are left with these one, two, three,

19
00:00:53,000 --> 00:00:57,000
four, five possible paths.

20
00:00:57,000 --> 00:00:59,000
Given these 5 paths,

21
00:00:59,000 --> 00:01:02,000
show me which ones are candidates to be expanded next

22
00:01:02,000 --> 99:59:59,999
by the Breadth First Search Algorithm.
