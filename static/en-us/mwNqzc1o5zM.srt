1
00:00:00,310 --> 00:00:06,160
So let's look at what one memory bit
looks like in SRAM and DRAM technology.

2
00:00:06,160 --> 00:00:12,480
The bit sits at the intersection of
a wordline that passes by many bits,

3
00:00:12,480 --> 00:00:16,219
and the bitline that
also passes by many bits.

4
00:00:16,219 --> 00:00:19,540
So memory is a matrix
of cells like this.

5
00:00:19,540 --> 00:00:22,510
And DRAM will also have a wordline and
a bitline.

6
00:00:22,510 --> 00:00:28,120
What the wordline does, is it controls
a transistor here that can open or

7
00:00:28,120 --> 00:00:32,180
close itself to connect
the cell to the bitline.

8
00:00:32,180 --> 00:00:35,492
So the idea is that,
if we want to access this cell,

9
00:00:35,492 --> 00:00:39,422
we activate this wordline which
opens this transistor, and

10
00:00:39,422 --> 00:00:42,800
now the memory cell is
connected to the bitline.

11
00:00:42,800 --> 00:00:46,200
So if we want to write data, we put
the bitline at the value we want, and

12
00:00:46,200 --> 00:00:48,090
the cell gets that value.

13
00:00:48,090 --> 00:00:51,770
If we want to read the data,
we'll let go of the bitlines, and then

14
00:00:51,770 --> 00:00:56,770
the cell here will get a new value on
the bitline, so we can sense what it is.

15
00:00:56,770 --> 00:01:02,570
In SRAM, the actual memory cell
consists of two inverters.

16
00:01:02,570 --> 00:01:06,460
Each inverter has two transistors,
that's how you build an inverter.

17
00:01:06,460 --> 00:01:09,850
And the idea is that, if this is 1 here,

18
00:01:10,970 --> 00:01:14,440
then this inverter flips it and
outputs a 0 here.

19
00:01:14,440 --> 00:01:17,840
This other inverter flips that and
outputs 1 here, so

20
00:01:17,840 --> 00:01:22,935
once we disconnect this transistor,
this cell will keep its value.

21
00:01:22,935 --> 00:01:27,820
It's going to maintain a 0 here
because that 0 is inverted and

22
00:01:27,820 --> 00:01:30,750
output is a 1 here,
which amplifies the 0 here, so

23
00:01:30,750 --> 00:01:34,000
we have a feedback loop here that
keeps the data that we want.

24
00:01:34,000 --> 00:01:35,950
So how to we write to this cell?

25
00:01:35,950 --> 00:01:40,860
So if we try to put a 1 here, this
inverter here is working against us.

26
00:01:40,860 --> 00:01:43,880
Because it sees a one,
it wants to output a zero.

27
00:01:43,880 --> 00:01:45,830
And the answer to that,

28
00:01:45,830 --> 00:01:51,311
is that this transistor here
connects this cell to the bit line.

29
00:01:52,360 --> 00:01:56,100
If we put a stronger 1 here,

30
00:01:56,100 --> 00:01:59,850
because these are small inverters,
we can defeat them, so

31
00:01:59,850 --> 00:02:05,030
that even though this inverter is trying
to put a 0 here, we defeat it with a 1.

32
00:02:05,030 --> 00:02:07,783
And then what happens is,
that now that this is a 1,

33
00:02:07,783 --> 00:02:10,780
this inverter outputs a 0 here,

34
00:02:10,780 --> 00:02:15,330
this inverter now starts outputting
a one, and the cell becomes a 1.

35
00:02:15,330 --> 00:02:19,280
To make that easier, typically we
have two of these transistors and

36
00:02:19,280 --> 00:02:23,110
two bit lines for the same cell
that have the opposite values.

37
00:02:23,110 --> 00:02:27,480
So for this cell to become a 1,
we put 1 here and 0 here.

38
00:02:27,480 --> 00:02:31,900
That puts a 1 here at the same
time when we are putting a 0 here.

39
00:02:31,900 --> 00:02:34,600
So these are more easily defeated.

40
00:02:34,600 --> 00:02:39,590
When we want to read, we can connect
both of them to the bit lines.

41
00:02:39,590 --> 00:02:43,710
And if we wrote a 1 here, we will
have this one be 1, this one be 0.

42
00:02:43,710 --> 00:02:46,350
So this line really
outputs the bit we want.

43
00:02:46,350 --> 00:02:50,460
And this one just outputs the opposite
value of the bit we want.

44
00:02:50,460 --> 00:02:54,160
By looking at the difference
between these bitlines,

45
00:02:54,160 --> 00:02:58,420
we can more quickly detect
what the cell actually has.

46
00:02:58,420 --> 00:03:02,040
As we said,
these are weak transistors here.

47
00:03:02,040 --> 00:03:08,140
So once we connect this cell to
the bitlines, the bitline is long.

48
00:03:08,140 --> 00:03:09,890
And in order to, for example,

49
00:03:09,890 --> 00:03:14,050
raise the voltage on the bitline
to a value that corresponds to 1,

50
00:03:14,050 --> 00:03:19,510
this transistor here are weak and
cannot pull it to 1 very fast.

51
00:03:19,510 --> 00:03:22,550
They also will try to
lower this one down to 0,

52
00:03:22,550 --> 00:03:25,700
and they may not be able
to do that very fast.

53
00:03:27,220 --> 00:03:31,390
So at the other end here where we're
trying to detect what's in this cell,

54
00:03:31,390 --> 00:03:35,500
instead of looking at when will this
cross a threshold between a 0 and a 1,

55
00:03:35,500 --> 00:03:42,140
what we look at is in what direction
is the difference of these two going.

56
00:03:42,140 --> 00:03:46,540
We make them, initially,
about halfway between 0 and 1.

57
00:03:46,540 --> 00:03:51,070
We then activate the word line,
the cell now starts,

58
00:03:51,070 --> 00:03:54,340
lets say, pulling this one up and
lowering this one down.

59
00:03:55,500 --> 00:03:58,390
If we look at what's
the difference very quickly,

60
00:03:58,390 --> 00:04:02,690
we'll detect that this one here,
because it's drawn towards 1,

61
00:04:02,690 --> 00:04:06,420
is getting to be larger voltage
than the voltage on this one.

62
00:04:06,420 --> 00:04:10,850
So we can now say that the cell had a 1
before it actually manages to pull this

63
00:04:10,850 --> 00:04:13,035
fully to 1 and lower this fully to 0.
