1
00:00:00,140 --> 00:00:03,400
Let's start by looking at
the makeHttpRequest method.

2
00:00:03,400 --> 00:00:05,730
In the try block shown by
these blue highlights,

3
00:00:05,730 --> 00:00:09,480
we try to make the HTTP request and
read the response.

4
00:00:09,480 --> 00:00:13,042
However, there are some lines in this
code that can throw an IO exception.

5
00:00:13,042 --> 00:00:16,100
So there's a catch block
to catch the exception.

6
00:00:16,100 --> 00:00:16,910
And finally,

7
00:00:16,910 --> 00:00:20,850
we disconnect the connection if
the URL connection is not null.

8
00:00:20,850 --> 00:00:23,490
Now if you look at the documentation for
the methods we use,

9
00:00:23,490 --> 00:00:27,320
you'll see that they declare
IOException as an expected exception.

10
00:00:27,320 --> 00:00:30,059
Take this first line in
the try block as an example,

11
00:00:30,059 --> 00:00:33,420
where we call openConnection
on the URL object.

12
00:00:33,420 --> 00:00:36,595
This method is supposed to return
a URL connection instance, but

13
00:00:36,595 --> 00:00:39,944
it could probably throw an IO
exception if there's a problem opening

14
00:00:39,944 --> 00:00:40,827
the connection.

15
00:00:40,827 --> 00:00:44,585
The URL connection classes connect
method could also throw a few

16
00:00:44,585 --> 00:00:48,491
exceptions, such as
SocketTimeoutException and IOException.

17
00:00:49,980 --> 00:00:51,498
So going back to our quiz,

18
00:00:51,498 --> 00:00:55,800
we catch the IOException in
the makeHTTPRequest method.

19
00:00:55,800 --> 00:00:57,766
For the extractFeatureFromJSON() method,

20
00:00:57,766 --> 00:01:01,220
we have another try catch block
surrounding all the JSON parsing code.

21
00:01:01,220 --> 00:01:04,830
If any step of the parsing throws
a JSONException, we catch it and

22
00:01:04,830 --> 00:01:05,379
log the error.

23
00:01:07,150 --> 00:01:10,290
If we check the documentation, we see
that there are many places on our code

24
00:01:10,290 --> 00:01:12,360
that could potentially
throw the exception.

25
00:01:12,360 --> 00:01:13,003
For starters,

26
00:01:13,003 --> 00:01:16,460
just calling the JSONObject constructor
can throw the JSONException.

27
00:01:16,460 --> 00:01:20,485
This can happen if the input string
is not properly formatted JSON.

28
00:01:20,485 --> 00:01:24,050
Or the same exception can be thrown
when we try to extract the JSONArray.

29
00:01:24,050 --> 00:01:27,810
Also extracting out specific fields
can also throw the JSONException,

30
00:01:27,810 --> 00:01:31,280
especially if we try to extract
the field whose name does not exist.

31
00:01:31,280 --> 00:01:35,380
So back to the quiz, as a result, the
answer to the second question is that

32
00:01:35,380 --> 00:01:39,697
instances of JSONException are caught
in the extractFeatureFromJSON() method.
