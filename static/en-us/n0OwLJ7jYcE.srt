1
00:00:00,370 --> 00:00:04,180
Linear programming is largely just the
generalization of this sort of problem

2
00:00:04,180 --> 00:00:08,870
solving to n dimensions, instead of
just the two that we've seen so far.

3
00:00:10,110 --> 00:00:13,730
We can write our optimization
problem in a form like this one.

4
00:00:13,730 --> 00:00:18,940
In matrix form this becomes
maximize c transpose x

5
00:00:18,940 --> 00:00:24,400
such that A x is at most b and
x is nonnegative.

6
00:00:24,400 --> 00:00:27,820
Note that inequality,
when applied to matrices,

7
00:00:27,820 --> 00:00:31,720
means that it holds for
each element in the matrix.

8
00:00:31,720 --> 00:00:35,410
When we first encounter a linear
programing optimization problem

9
00:00:35,410 --> 00:00:36,880
it might not be in this form.

10
00:00:37,920 --> 00:00:39,700
In fact the only requirements for

11
00:00:39,700 --> 00:00:44,920
an optimization being a linear program
is that both the objective function and

12
00:00:44,920 --> 00:00:50,640
the constraints be linear, whether
they are inequalities or equalities.

13
00:00:50,640 --> 00:00:55,430
If this is true, then we can always
turn it into a canonical form like this.

14
00:00:55,430 --> 00:01:00,070
Here are the key transformations, to
convert a max problem to a min problem,

15
00:01:00,070 --> 00:01:04,879
or vice versa, just negate the vector c,
which contains the coefficients for

16
00:01:04,879 --> 00:01:06,330
the objective function.

17
00:01:06,330 --> 00:01:12,170
Thus, max c transpose x becomes
minimizing -c transpose x,

18
00:01:12,170 --> 00:01:18,310
and minimizing c transpose x
becomes maximizing -c transpose x.

19
00:01:18,310 --> 00:01:21,330
To convert an upper bound to
a lower bound, or vice versa,

20
00:01:21,330 --> 00:01:26,410
in one of the constraints,
we simply negate the inequality.

21
00:01:26,410 --> 00:01:31,690
We can convert an equality into two
inequalities by giving both an upper and

22
00:01:31,690 --> 00:01:33,390
lower bound constraint.

23
00:01:33,390 --> 00:01:36,000
Here I have played the trick
from transformation

24
00:01:36,000 --> 00:01:39,220
to make these both at most constraints.

25
00:01:39,220 --> 00:01:43,210
Things get a little more interesting
when we go from one of the inequalities

26
00:01:43,210 --> 00:01:44,780
to an equality.

27
00:01:44,780 --> 00:01:48,320
Here, we introduce a new variable,
either a slack or

28
00:01:48,320 --> 00:01:52,340
a surplus variable,
depending on the inequality.

29
00:01:52,340 --> 00:01:53,500
There's also the problem of

30
00:01:53,500 --> 00:01:55,390
free variables that
are allowed to be negative.

31
00:01:55,390 --> 00:01:59,060
There are two ways to
cope with one of these.

32
00:01:59,060 --> 00:02:02,160
If it is involved in
an equality constraint,

33
00:02:02,160 --> 00:02:05,420
then we can often simply
eliminate it through substitution.

34
00:02:06,740 --> 00:02:11,770
Otherwise you can replace it with
two new non-negative variables, and

35
00:02:11,770 --> 00:02:14,950
just substitute the difference for
x everywhere.
