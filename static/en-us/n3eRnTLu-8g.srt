1
00:00:00,190 --> 00:00:04,490
Now let's see another type of predictor that combines prediction decisions which

2
00:00:04,490 --> 00:00:09,020
is called a hierarchical predictor. It is similar to the tournament predictor,

3
00:00:09,020 --> 00:00:13,309
but the tournament predictor typically is trying to combined two

4
00:00:13,309 --> 00:00:17,280
good predictors. One is good for some branches, the other for others.

5
00:00:17,280 --> 00:00:23,180
The hierarchical predictor is trying to combined a good predictor with an okay

6
00:00:23,180 --> 00:00:29,460
predictor. Here you're basically doing two good predictions for every branch.

7
00:00:29,460 --> 00:00:34,100
Just to use one of them. And each of the good predictors costs you a lot, for

8
00:00:34,100 --> 00:00:37,930
each entry. Here the idea is you that you have a very good predictor that costs

9
00:00:37,930 --> 00:00:42,320
you a lot for it's entry. But you don't want to be using the good predictor for

10
00:00:42,320 --> 00:00:46,090
branches that are very easy to predict anyway. So the idea is that for

11
00:00:46,090 --> 00:00:48,710
those branches, you want to use the okay predictor. And

12
00:00:48,710 --> 00:00:52,100
use the good predictor entries, which are very expensive, only for

13
00:00:52,100 --> 00:00:56,240
branches that really need that good predictor. So in the tournament predictor,

14
00:00:56,240 --> 00:00:59,160
you will update both predictors on each decision so

15
00:00:59,160 --> 00:01:03,580
that they can both stay current with what's going on. And thus,

16
00:01:03,580 --> 00:01:06,880
they both try to do their best on each branch decision. But in

17
00:01:06,880 --> 00:01:11,800
the hierarchical predictor, you might update the OK predictor on each decision.

18
00:01:11,800 --> 00:01:15,880
But you update the good predictor, only the OK predictor did not work well for

19
00:01:15,880 --> 00:01:20,920
that branch. The idea here is to not use the entries of

20
00:01:20,920 --> 00:01:25,520
the good predictor if the OK one is doing fine. On this branch so really what

21
00:01:25,520 --> 00:01:30,390
that means is we can have very expensive entries in the good predictor. And

22
00:01:30,390 --> 00:01:33,890
we have relatively few entries because most of the branches will be handled just

23
00:01:33,890 --> 00:01:37,900
fine with the OK predictor. If we try to compare the tournament predictor with

24
00:01:37,900 --> 00:01:41,740
the hierarchical predictor the hierarchical one usually wins. Because it

25
00:01:41,740 --> 00:01:45,970
turns out that there are many many branches. That can be predicted just fine

26
00:01:45,970 --> 00:01:49,870
using something like just a simple two bit counter. On the other hand, there

27
00:01:49,870 --> 00:01:54,530
are some branches that really require a very strong predictor to predict them.

28
00:01:54,530 --> 00:01:59,940
In a tournament predictor, each of the predictors is a balance between cost and

29
00:01:59,940 --> 00:02:04,480
accuracy. In this predictor, you can build a very expensive predictor with

30
00:02:04,480 --> 00:02:08,740
very few entries. And an OK predictor, it has a lot of branches. So

31
00:02:08,740 --> 00:02:13,190
those branches can handle like this, which leaves the rest of the resources for

32
00:02:13,190 --> 00:02:17,530
the good predictor. And that means it can have extremely long histories or

33
00:02:17,530 --> 00:02:23,050
be a very, very fancy predictor. You can even have a hierarchy or

34
00:02:23,050 --> 00:02:27,340
for that matter an tournament with more than, just two predictors.
