1
00:00:00,880 --> 00:00:04,500
Lets understand what content distribution networks are.

2
00:00:04,500 --> 00:00:07,290
I'm planning a holiday trip to India fairly

3
00:00:07,290 --> 00:00:14,670
soon and let's say on the holiday trip I record some nice videos of some

4
00:00:14,670 --> 00:00:20,510
of the places that I went sightseeing. And let's say I call the content that

5
00:00:20,510 --> 00:00:23,790
I generated thusly. [INAUDIBLE] India trip. To

6
00:00:23,790 --> 00:00:25,900
keep it simple, let me call the node

7
00:00:25,900 --> 00:00:34,480
ID of my computer as 80. And I want to publish this video that I generated of my

8
00:00:34,480 --> 00:00:39,410
interesting visits to some of the sights and sounds of (no period) India on the

9
00:00:39,410 --> 00:00:42,040
Internet, so that anyone on the Internet can

10
00:00:42,040 --> 00:00:44,410
find it and download it. Now, how do

11
00:00:44,410 --> 00:00:47,020
I name the content of my video? Well,

12
00:00:47,020 --> 00:00:50,910
textual names may not be very meaningful, because there

13
00:00:50,910 --> 00:00:53,080
could be name collisions. So what I'm going to do

14
00:00:53,080 --> 00:00:55,910
is, I'm going to create a content hash of the

15
00:00:55,910 --> 00:01:00,640
video, and let's say my content. Hash has enough bits

16
00:01:00,640 --> 00:01:03,600
to ensure uniqueness of the hash string that I generated, I'll

17
00:01:03,600 --> 00:01:06,310
call that the key. Now I have key value pair

18
00:01:06,310 --> 00:01:09,720
the key is a bit string that is a hash

19
00:01:09,720 --> 00:01:12,600
of the content of what I want to store and

20
00:01:12,600 --> 00:01:16,400
make available to everybody, and the value is my node ID

21
00:01:16,400 --> 00:01:21,630
where the content is stored. Lets say that the content turned out to be 149, and

22
00:01:21,630 --> 00:01:26,330
my node ID is of course 80. So the key value pair that I've generated for

23
00:01:26,330 --> 00:01:31,310
my interesting video is 149, 80. 149 is the

24
00:01:31,310 --> 00:01:36,360
key, and 80 is the value. Which essentially is the node ID

25
00:01:37,550 --> 00:01:42,740
of my computer where I have the content. In other words the key 149,

26
00:01:42,740 --> 00:01:47,750
Is a unique name that I've generated for the content

27
00:01:47,750 --> 00:01:52,870
which I want to distribute to others that may be interested in looking at this

28
00:01:52,870 --> 00:01:58,090
particular content. Now if you get this key value pair

29
00:01:58,090 --> 00:02:03,780
149, 80, you know that 149 is the key

30
00:02:03,780 --> 00:02:08,565
that uniquely names my video it shows India trip and

31
00:02:08,565 --> 00:02:14,150
80 is the value which says where you can get this particular video from. So

32
00:02:14,150 --> 00:02:19,510
you can then come to my node and get it from me. Now the question is. Where to

33
00:02:19,510 --> 00:02:23,390
store this key value pair, so that anybody

34
00:02:23,390 --> 00:02:26,990
can discover this key value pair. If they

35
00:02:26,990 --> 00:02:29,670
are looking for Kishore's India trip, maybe I

36
00:02:29,670 --> 00:02:33,990
published the fact that Kishore's India trip unique name

37
00:02:33,990 --> 00:02:43,740
is 149 somewhere. And so now, if, anybody wants to find a way of locating the

38
00:02:43,740 --> 00:02:45,920
server from which they can download the content

39
00:02:45,920 --> 00:02:47,300
they need to get this key value pair.

40
00:02:47,300 --> 00:02:53,080
So, when I created this particular, key value pair, I have to find a way to

41
00:02:53,080 --> 00:02:59,180
place it in the internet. So that anybody can get these key value pair, and from

42
00:02:59,180 --> 00:03:01,650
that, know the node from which they can download

43
00:03:01,650 --> 00:03:04,340
the content. Now we cannot put this on a

44
00:03:04,340 --> 00:03:07,000
central name cell because it does not scale. Because

45
00:03:07,000 --> 00:03:10,600
user generated content is proliferating on the internet. So

46
00:03:10,600 --> 00:03:13,730
using a central server to store. All the key-value

47
00:03:13,730 --> 00:03:16,790
pairs is just not scalable. We need a distributed

48
00:03:16,790 --> 00:03:21,480
solution. And this is where the idea of DHT,

49
00:03:21,480 --> 00:03:24,580
or distributed hash table, comes into play. The idea

50
00:03:24,580 --> 00:03:28,250
is quite simple. Anyone who generates a key value

51
00:03:28,250 --> 00:03:31,280
pair has to find a location. Where they can

52
00:03:31,280 --> 00:03:34,590
store it so that intuitively, anybody that is looking

53
00:03:34,590 --> 00:03:36,880
for that particular key will be able to discover

54
00:03:36,880 --> 00:03:42,680
it. So if I want to store a key value there, what I'm going to do is find a node

55
00:03:42,680 --> 00:03:49,760
who's ID is exactly the same as the key itself. Or if not, close enough to

56
00:03:49,760 --> 00:03:52,220
the key that I want to store. So in

57
00:03:52,220 --> 00:03:54,970
this case, the key that I generated, which is

58
00:03:54,970 --> 00:03:57,710
a content hash of my India video, is 149.

59
00:03:57,710 --> 00:04:01,020
And looking on the internet, I find that there

60
00:04:01,020 --> 00:04:03,710
is a node whose node ID is 150. Close

61
00:04:03,710 --> 00:04:06,740
enough to 149, and therefore, I'm going to store

62
00:04:06,740 --> 00:04:11,150
this key value pair 149,80. In this particular node

63
00:04:11,150 --> 00:04:14,900
150. Now, if you're looking for my India trip

64
00:04:14,900 --> 00:04:19,300
video, you know that the unique signature associated with that

65
00:04:19,300 --> 00:04:22,550
is 149, and you will know because of the structure

66
00:04:22,550 --> 00:04:25,430
of the DHT that the place to look for the

67
00:04:25,430 --> 00:04:29,670
signature 149, or the key 149, Is a node whose address

68
00:04:29,670 --> 00:04:32,730
is also equal to this key value or close enough.

69
00:04:32,730 --> 00:04:34,200
150 is the one that is close enough so you'll

70
00:04:34,200 --> 00:04:37,320
go to 150 and from 150 you will get this

71
00:04:37,320 --> 00:04:40,140
key value pair, and once you get this key value pair,

72
00:04:40,140 --> 00:04:43,420
you will know that all the content is stored in node 80 and

73
00:04:43,420 --> 00:04:46,570
then you come to me and get the content from me. This is

74
00:04:46,570 --> 00:04:50,310
how content distribution networks exploit the

75
00:04:50,310 --> 00:04:54,710
distributed hash table technology to store content

76
00:04:54,710 --> 00:04:59,090
on the internet. So that they can be discovered and disseminated to the users.
