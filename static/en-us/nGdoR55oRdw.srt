1
00:00:00,220 --> 00:00:01,720
Going back to the wireframes.

2
00:00:01,720 --> 00:00:03,556
In the phone layout, 
we wanted the Today item

3
00:00:03,556 --> 00:00:04,922
to be a little bit bigger,

4
00:00:04,922 --> 00:00:07,800
but on the tablets, we just want it
to look like all the other items,

5
00:00:07,800 --> 00:00:10,910
because we have an 
expanded detail pane here.

6
00:00:11,410 --> 00:00:14,520
To do this in the forecast adapter 
newView method,

7
00:00:14,520 --> 00:00:17,146
we should return the layout 
for a list item forecast

8
00:00:17,146 --> 00:00:18,932
not for the today layout.

9
00:00:18,932 --> 00:00:21,520
Then in the bindView method, 
for the today item,

10
00:00:21,520 --> 00:00:24,350
we should use the gray icon
instead of the colored icon.

11
00:00:24,350 --> 00:00:26,643
These decisions get controlled 
by the return value

12
00:00:26,643 --> 00:00:28,586
of the getItemViewType method.

13
00:00:28,586 --> 00:00:30,734
Therefore we modify 
the getItemViewType method

14
00:00:30,734 --> 00:00:32,472
so that at the zero position,

15
00:00:32,472 --> 00:00:34,260
if we have to use 
the special today layout,

16
00:00:34,260 --> 00:00:36,456
then we return View type today.

17
00:00:36,456 --> 00:00:38,772
Otherwise, if we shouldn't use 
the special today layout,

18
00:00:38,772 --> 00:00:41,230
then we should just return
the View type for all future days.

19
00:00:41,230 --> 00:00:43,640
This Boolean is controlled 
by the setter method.

20
00:00:43,640 --> 00:00:46,790
To access this Boolean, 
we created a public setter method

21
00:00:46,790 --> 00:00:48,443
on the forecast adapter.

22
00:00:48,443 --> 00:00:50,356
But who knows how 
to set this value properly?

23
00:00:50,356 --> 00:00:53,710
Well the main activity knows 
whether it's one-pane or two-pane UI.

24
00:00:53,720 --> 00:00:57,210
So, it can decide whether we should use
the special today layout or not.

25
00:00:57,670 --> 00:00:59,750
We don't have access 
to the forecast adapter here,

26
00:00:59,750 --> 00:01:03,020
but we can plumb the values
through the ForecastFragment.

27
00:01:03,020 --> 00:01:06,159
To get access to the ForecastFragment, 
we can ask the fragment manager

28
00:01:06,159 --> 00:01:08,030
and pass it the fragment ID.

29
00:01:08,480 --> 00:01:11,210
Finish changing the code
so the app looks like this.
