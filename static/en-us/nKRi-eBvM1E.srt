1
00:00:00,260 --> 00:00:02,750
So, assigning a string to a variable is just

2
00:00:02,750 --> 00:00:04,980
like assigning a number to a variable. We can do

3
00:00:04,980 --> 00:00:08,720
that with an assignment statement. My name is Dave. So,

4
00:00:08,720 --> 00:00:12,360
I'll assign the string Dave, to the name, to the

5
00:00:12,360 --> 00:00:15,280
variable name. The nice thing about using a variable like

6
00:00:15,280 --> 00:00:19,400
this, is now we could have code. Say print Hello

7
00:00:19,400 --> 00:00:22,380
plus name. Here hello is a string. Name is a

8
00:00:22,380 --> 00:00:25,610
variable. If you assigned name to mean some other string,

9
00:00:25,610 --> 00:00:27,790
this will print Hello whatever the value of

10
00:00:27,790 --> 00:00:30,930
name is. I've introduced a new operator here.

11
00:00:32,130 --> 00:00:34,580
We're using the plus operator. We already saw

12
00:00:34,580 --> 00:00:38,980
plus on numbers. Now, we're using plus on strings.

13
00:00:38,980 --> 00:00:41,720
It means something different. What plus means with

14
00:00:41,720 --> 00:00:44,340
strings is concatenation. So we can put strings

15
00:00:44,340 --> 00:00:48,180
together by using the plus operator. The value

16
00:00:48,180 --> 00:00:51,900
of the string plus another string is the concatenation.

17
00:00:51,900 --> 00:00:53,950
That's a new string that's a result of pasting

18
00:00:53,950 --> 00:00:56,230
those two strings together. So let's try that in

19
00:00:56,230 --> 00:01:00,680
the Python interpreter. So here I've initialized the variable

20
00:01:00,680 --> 00:01:03,320
name to be the string Dave, and I'm going to

21
00:01:03,320 --> 00:01:07,790
print out hello plus name. You'll see I won't

22
00:01:07,790 --> 00:01:10,090
get quite what I want from this? Here's what

23
00:01:10,090 --> 00:01:14,190
happens, it concatenated the two strings together, it doesn't

24
00:01:14,190 --> 00:01:17,140
add spaces or anything automatically. So now we've got,

25
00:01:17,140 --> 00:01:19,320
the output is hello Dave, without any space in

26
00:01:19,320 --> 00:01:24,100
it. We need to add a space here. Now

27
00:01:24,100 --> 00:01:27,210
we'll have hello space Dave, which looks more like

28
00:01:27,210 --> 00:01:29,780
we want. We can keep doing this just like we

29
00:01:29,780 --> 00:01:32,680
could use the plus operator with numbers more than

30
00:01:32,680 --> 00:01:36,310
once, we can use it with strings more than once.

31
00:01:36,310 --> 00:01:38,740
Adding another string to the end, now we've got

32
00:01:38,740 --> 00:01:42,050
the exclamation point I need. Maybe one is not enough.

33
00:01:42,050 --> 00:01:48,100
We can keep adding more exclamation points. Now I have a more pleasant reading.
