1
00:00:00,290 --> 00:00:02,300
Let's step through the sample
now to refresh your memory

2
00:00:02,300 --> 00:00:03,820
on how notifications work.

3
00:00:03,820 --> 00:00:07,000
So let's go to the code for the sample,
which is in Applications, Java,

4
00:00:07,000 --> 00:00:09,910
in this package, Main Activity.

5
00:00:09,910 --> 00:00:13,315
So this variable here is the first
item of interest notification ID.

6
00:00:13,315 --> 00:00:16,635
This is the unique identifier for
the notification.

7
00:00:16,635 --> 00:00:19,415
Each notification we generate
has a unique value, and

8
00:00:19,415 --> 00:00:23,085
if we issue two notifications with the
same ID, we'll override the first one.

9
00:00:23,085 --> 00:00:27,275
The interesting code is down here,
in the sendNotification method.

10
00:00:27,275 --> 00:00:30,345
This here creates an intent that is
fired when the notification is clicked

11
00:00:30,345 --> 00:00:31,245
by the user.

12
00:00:31,245 --> 00:00:33,075
We need to create a PendingIntent, so

13
00:00:33,075 --> 00:00:36,610
that the notification service can
run the intent later on for our app.

14
00:00:36,610 --> 00:00:39,610
We need to set up a builder
NotificationCompact objects.

15
00:00:39,610 --> 00:00:42,040
We will call methods
on this to set it up.

16
00:00:42,040 --> 00:00:44,620
This sets up the icon we show for
the notification.

17
00:00:44,620 --> 00:00:48,230
This tells the notification what pending
intent to use which we created earlier.

18
00:00:48,230 --> 00:00:50,770
This here makes the notification
automatically disappear

19
00:00:50,770 --> 00:00:52,060
when it's clicked on.

20
00:00:52,060 --> 00:00:55,260
This is a different kind of icon used
on the left of the notification.

21
00:00:55,260 --> 00:00:58,280
These three lines configure
the main title, the main text, and

22
00:00:58,280 --> 00:01:01,770
also some smaller subtext,
all which is shown on the notification.

23
00:01:01,770 --> 00:01:03,970
This grabs a reference to
the NotificationManager,

24
00:01:03,970 --> 00:01:08,040
and this takes the builder and
generates a NotificationCompat object

25
00:01:08,040 --> 00:01:11,453
using the build method, and passes
it to the NotificationManager using

26
00:01:11,453 --> 00:01:13,850
the NOTIFICATION_ID value
we created earlier.

27
00:01:13,850 --> 00:01:17,160
As we said before, the NOTIFICATION_ID
value must be unique,

28
00:01:17,160 --> 00:01:19,830
amongst the other notifications
that you might want to create.

29
00:01:19,830 --> 00:01:21,220
Now let's [INAUDIBLE] run the sample.

30
00:01:21,220 --> 00:01:23,050
So let's click the green play button,

31
00:01:23,050 --> 00:01:25,600
which runs the assemble
debug task to compile it.

32
00:01:25,600 --> 00:01:27,450
It then asks us if we want to run it.

33
00:01:27,450 --> 00:01:30,480
So we select the emulator and
we hit okay.

34
00:01:30,480 --> 00:01:33,500
This then starts the installation
process to the emulator, so

35
00:01:33,500 --> 00:01:37,010
the samples now running, so we click
Do It to generate the notification,

36
00:01:37,010 --> 00:01:39,950
which calls send notification
that we looked at earlier.

37
00:01:39,950 --> 00:01:42,810
You can drop the notification
shade down and see the contents.

38
00:01:42,810 --> 00:01:45,570
Exactly as we described
during the code walk-through.

39
00:01:45,570 --> 00:01:49,252
When you click on it, you'll see it
launch a web browser and open up a URL

40
00:01:49,252 --> 00:01:52,760
for the notification documentation which
is what the intend is configured to do.
