1
00:00:00,012 --> 00:00:04,432
Now it's worth putting out that this magical program, Texture Packer, provides a

2
00:00:04,432 --> 00:00:08,689
nice little output option that you can see right here, called trim. What this

3
00:00:08,689 --> 00:00:12,785
option will do, is that for each image, it'll find out the true boundaries for

4
00:00:12,785 --> 00:00:16,898
it. So let's say an artist gives you a texture but only puts pixels in the

5
00:00:16,898 --> 00:00:21,212
center part of it. The needed pixels of this image only occupy a sub-portion of

6
00:00:21,212 --> 00:00:25,556
the physical space that's been provided. As such we get a lot of wasted pixels.

7
00:00:25,556 --> 00:00:29,588
Texture packer provides this trim option that will go through and remove

8
00:00:29,588 --> 00:00:34,076
unneeded and unused pixels, mostly transparent, from all of the sprites that are

9
00:00:34,076 --> 00:00:38,620
given to an atlas. The results are actually pretty significant. You can see that

10
00:00:38,620 --> 00:00:42,908
the size of the atlas that contains the blank unused pixels is significantly

11
00:00:42,908 --> 00:00:47,372
larger than the one that trims properly. Now it's worth pointing out however,

12
00:00:47,372 --> 00:00:51,593
that when you use this option the format of the data in your output JSON, from

13
00:00:51,593 --> 00:00:55,639
Texture Packer is going to change a little bit. So previously the frame

14
00:00:55,639 --> 00:01:00,046
parameters width and height values matched the same as the sort size. So if your

15
00:01:00,046 --> 00:01:04,330
input image was 128 by 128, the size in your texture atlas was going to be 128,

16
00:01:04,330 --> 00:01:08,927
128. And of course the trimmed value is false. Once you start with trimmed equal

17
00:01:08,927 --> 00:01:12,957
to true, you'll notice that the frame width and height represents the true

18
00:01:12,957 --> 00:01:17,137
boundaries of the used pixels in the input texture. It no longer matches the

19
00:01:17,137 --> 00:01:19,065
size of the input texture exactly.
