1
00:00:00,470 --> 00:00:03,290
First, send a huge amount of traffic.

2
00:00:03,290 --> 00:00:04,210
This is true.

3
00:00:04,210 --> 00:00:07,170
This can cause denial of
service of the IDS and

4
00:00:07,170 --> 00:00:12,180
cause it to not be able to analyze
traffic that contains attacks.

5
00:00:12,180 --> 00:00:17,060
Second, embed attack in packets
that cause non-uniform processing

6
00:00:17,060 --> 00:00:21,380
by different operating systems,
for example, bad checksum and

7
00:00:21,380 --> 00:00:22,940
overlapping fragments.

8
00:00:22,940 --> 00:00:26,220
This is true because
the result of this is that

9
00:00:26,220 --> 00:00:31,830
the IDS is seeing different traffic
as the end host, and as a result,

10
00:00:31,830 --> 00:00:35,730
the end host may be attacked by
the traffic, yet the IDS will miss it.

11
00:00:36,740 --> 00:00:42,040
Third, this is true because this
will result in a lot of alerts

12
00:00:42,040 --> 00:00:44,830
that need to be analyzed
by the sysadmins.

13
00:00:44,830 --> 00:00:49,630
And when the sysadmins are overwhelmed,
then the attacker can send his attack

14
00:00:49,630 --> 00:00:53,590
that although the attack is detected and
an alert is produced,

15
00:00:53,590 --> 00:00:57,680
the sysadmin will not have time to
look at the alert until it's too late.

16
00:00:57,680 --> 00:01:02,990
Fourth, send a packet that would trigger
a buffer-overflow in the IDS code.

17
00:01:02,990 --> 00:01:08,060
This is true because the buffer-overflow
is a typical exploit method

18
00:01:08,060 --> 00:01:10,470
used to attack a program.

19
00:01:10,470 --> 00:01:13,610
For example,
the attacker can inject his own code

20
00:01:13,610 --> 00:01:15,800
using buffer-overflow into a program.

21
00:01:15,800 --> 00:01:19,900
In other words, if the attacker
can buffer-overlow an IDS,

22
00:01:19,900 --> 00:01:22,690
that means the attacker
can now control the IDS.
