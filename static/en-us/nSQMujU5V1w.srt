1
00:00:00,000 --> 00:00:02,000
We''ll I hope you enjoyed trying to fool the test coverage metrics.

2
00:00:02,000 --> 00:00:05,000
We'll it turns out there's essentially an infinite number of ways to do that.

3
00:00:05,000 --> 00:00:08,000
The way I chose was to insert a call to the absolute value function,

4
00:00:08,000 --> 00:00:13,000
so here we're iterating over the values and the list of numbers looking for the largest one,

5
00:00:13,000 --> 00:00:16,000
the smallest one, and competing frequency leading to the mode.

6
00:00:16,000 --> 00:00:19,000
What I did here is so that i is equal to the absolute value of i.

7
00:00:19,000 --> 00:00:24,000
Now of course when the inputs are positive as they are in the first two test cases

8
00:00:24,000 --> 00:00:27,000
that achieved 100% statement coverage, everything is fine.

9
00:00:27,000 --> 00:00:32,000
On the other hand in the other test cases, what I do is call them with the list containing

10
00:00:32,000 --> 00:00:35,000
negative values and of course, it's going to compute the wrong thing for them--right.

11
00:00:35,000 --> 00:00:39,000
So the list contains -33 and -34, and clearly the minimum value

12
00:00:39,000 --> 00:00:41,000
in that list is not 33 and the max is not 34.

13
00:00:41,000 --> 00:00:43,000
So what you can see here is I've met the requirements of the assignment.

14
00:00:43,000 --> 00:00:46,000
As I said, really there are a lot of different ways you could've accomplished this effect

15
00:00:46,000 --> 00:00:49,000
and realistically, for purposes of this assignment which was to get you to think about

16
00:00:49,000 --> 99:59:59,999
the limitations of coverage a little bit, any of them would be just as good as the other.
