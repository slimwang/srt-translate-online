1
00:00:00,660 --> 00:00:03,230
All right, let's go over
the solution to the problem.

2
00:00:03,230 --> 00:00:06,800
The question asked us to write code for
the function word_in_pos,

3
00:00:06,800 --> 00:00:11,190
which takes in a string word and
a list parts_of_speech as inputs.

4
00:00:11,190 --> 00:00:15,060
If one of the words in parts_of_speech
is a substring of word,

5
00:00:15,060 --> 00:00:16,670
then we return that word.

6
00:00:16,670 --> 00:00:17,780
Else, we return none.

7
00:00:18,950 --> 00:00:21,925
Since we want to potentially
compare word to all the words in

8
00:00:21,925 --> 00:00:24,460
parts_of_speech, let's use a for loop.

9
00:00:25,690 --> 00:00:29,230
Now, we need to check if
word is a substring of pos.

10
00:00:30,270 --> 00:00:35,850
We'll do this by using the in
operator to check if pos is inward,

11
00:00:35,850 --> 00:00:38,690
and if it is, we'll return pos.

12
00:00:38,690 --> 00:00:44,630
So for example, let's say word is a noun
exclamation mark, and pos is noun.

13
00:00:45,800 --> 00:00:47,650
It's true that pos isn't a word.

14
00:00:47,650 --> 00:00:52,240
Noun is in noun exclamation mark,
and if that's the case,

15
00:00:52,240 --> 00:00:56,520
we'll want to return pos, or
the part of speech that's in word.

16
00:00:56,520 --> 00:00:58,250
Let's write that down.

17
00:00:58,250 --> 00:01:01,793
Now, if the word wasn't in any
of the words in parts_of_speech,

18
00:01:01,793 --> 00:01:05,930
we'll simply return none, and
we'll do this outside of the for loop.

19
00:01:05,930 --> 00:01:10,560
Since you want to first compare word
to every word in parts_of_speech.

20
00:01:10,560 --> 00:01:11,630
And there we have it.

21
00:01:11,630 --> 00:01:13,440
Now that we have this function working,

22
00:01:13,440 --> 00:01:17,464
let's move on to the final
function we'll write, play_game.
