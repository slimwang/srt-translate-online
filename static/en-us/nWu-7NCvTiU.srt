1
00:00:00,084 --> 00:00:04,255
So now we know how to compact in parallel, but only if we figure out how to

2
00:00:04,255 --> 00:00:07,459
compute the scatter addresses efficiently and in parallel.

3
00:00:07,459 --> 00:00:11,388
So let's take a closer look at the computation that we need to do here.

4
00:00:11,388 --> 00:00:16,598
We're going to have a set predicates here-- true, false, false, true, true, false, true, false.

5
00:00:16,598 --> 00:00:21,781
And what we need to do is compute the scatter addresses that will result from this string of predicates.

6
00:00:21,781 --> 00:00:27,368
Since we don't care about the scatter addresses for the false values, we'll just put a dash for don't care.

7
00:00:27,368 --> 00:00:31,501
Our algorithm is going to generate something there, it just doesn't matter what it generates.

8
00:00:31,501 --> 00:00:38,596
Again, our goal is to input this predicate string and output this string of addresses.

9
00:00:38,596 --> 00:00:41,488
And now we'll do a simple substitution.

10
00:00:41,488 --> 00:00:44,798
Whenever we see a true here, we'll substitute the number 1.

11
00:00:44,798 --> 00:00:48,571
Whenever we see a false here, we'll substitute the number 0.

12
00:00:48,571 --> 00:00:52,504
And rather than "don't cares" I'm actually going to fill in some values here.

13
00:00:52,504 --> 00:00:59,812
So we're going to have the strings 0, 1, 1, 1, 2, 3, 3, 4. So here's our input, a bunch of trues and falses.

14
00:00:59,812 --> 00:01:04,915
We're translating it into 1s and 0s, and this is our output, our set of addresses here.

15
00:01:04,915 --> 00:01:07,769
And now perhaps the shortest quiz of the course.

16
00:01:07,769 --> 00:01:10,933
If this is the input, and this is the output,

17
00:01:10,933 --> 00:01:15,027
what is the operation we need to do to get from this input to this output?

18
00:01:15,027 --> 00:01:18,904
Hint. Your answer is 1 word, of 4 letters.
