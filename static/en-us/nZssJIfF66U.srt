1
00:00:00,400 --> 00:00:04,880
In the responsive world, choosing
images to suit the viewing context,

2
00:00:04,880 --> 00:00:09,340
art direction can be accomplished
pretty easily with the picture element

3
00:00:09,340 --> 00:00:11,770
to enable display of
a crop of an image or

4
00:00:11,770 --> 00:00:15,690
even a different image depending
on image display size.

5
00:00:15,690 --> 00:00:19,870
Now in this example, we're using
media queries to specify the source.

6
00:00:19,870 --> 00:00:23,240
Full sized kitten for a large view port,
and medium kitten for

7
00:00:23,240 --> 00:00:27,780
a medium view port, and
a small kitten for a small view port.

8
00:00:27,780 --> 00:00:28,820
Cute.

9
00:00:28,820 --> 00:00:30,240
This is doing art direction.

10
00:00:30,240 --> 00:00:33,710
Choosing a different image
with just a few lines of HTML.

11
00:00:34,890 --> 00:00:38,050
Okay, hold onto your hat,
here's the full monty.

12
00:00:38,050 --> 00:00:42,920
We've combined media queries and source
set to specify images for smaller and

13
00:00:42,920 --> 00:00:47,370
larger view ports with different
images for different pixel densities.

14
00:00:47,370 --> 00:00:50,450
Here we get the same effect in Safari,
which doesn't yet

15
00:00:50,450 --> 00:00:51,840
support the picture element.

16
00:00:51,840 --> 00:00:53,070
Well how did we do that?

17
00:00:53,070 --> 00:00:54,510
Well, it's the same markup but

18
00:00:54,510 --> 00:00:57,690
this time we've made use of
the picture fill polyfill.

19
00:00:57,690 --> 00:01:01,870
That's a small JavaScript file that
enables you to use source set and

20
00:01:01,870 --> 00:01:04,019
the other new responsive
image elements and

21
00:01:04,019 --> 00:01:07,370
attributes on browsers that don't yet
support them.

22
00:01:07,370 --> 00:01:10,150
You can find out more about picture
fill from the link below the video.
