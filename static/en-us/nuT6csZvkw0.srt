1
00:00:00,218 --> 00:00:02,159
After going through
some simple examples,

2
00:00:02,159 --> 00:00:05,419
now we're ready to show you how to build
a real media app for Android Auto.

3
00:00:05,419 --> 00:00:08,600
We've built a very complete sample that
is a great reference point for you.

4
00:00:08,600 --> 00:00:09,715
So, let's load it up.

5
00:00:09,715 --> 00:00:14,427
Go to File, Import Sample and
search for Universal Music Player.

6
00:00:14,427 --> 00:00:15,195
Select it.

7
00:00:15,195 --> 00:00:18,561
Click next, and
then finish with all the defaults.

8
00:00:18,561 --> 00:00:21,208
Let's now run the sample and
see what it looks like.

9
00:00:21,208 --> 00:00:24,697
Click the green play icon here, and
we're going to use a simple debug to

10
00:00:24,697 --> 00:00:27,779
build and install it to the emulator
just like we did before.

11
00:00:27,779 --> 00:00:30,356
We select the emulator, press OK.

12
00:00:30,356 --> 00:00:31,912
So now, it's running on the emulator.

13
00:00:31,912 --> 00:00:34,095
You can see that we can browse by genre.

14
00:00:34,095 --> 00:00:37,021
We can pick one, and then pick a zone.

15
00:00:37,021 --> 00:00:38,391
And once again, we have music playing.

16
00:00:38,391 --> 00:00:39,620
It's pretty easy, hey?

17
00:00:39,620 --> 00:00:40,596
So, how does this work?

18
00:00:40,596 --> 00:00:43,012
In the previous simple
example we walked through,

19
00:00:43,012 --> 00:00:44,706
there was no UI on the Android side.

20
00:00:44,706 --> 00:00:46,679
We needed to run the media simulator.

21
00:00:46,679 --> 00:00:49,002
In this case there is
an Android activity.

22
00:00:49,002 --> 00:00:50,256
Let's go over to the code.

23
00:00:50,256 --> 00:00:52,461
The UMP sample implements it here.

24
00:00:52,461 --> 00:00:58,079
Go to Java, Package, UI and
Music Player Activity.

25
00:00:58,079 --> 00:01:01,894
This activity implements a media browser
and media controller that connects

26
00:01:01,894 --> 00:01:05,238
to the media browser's service to
retrieve the music hierarchy and

27
00:01:05,238 --> 00:01:06,833
then start the music play back.

28
00:01:06,833 --> 00:01:09,640
The activity implements
exactly the same API,

29
00:01:09,640 --> 00:01:12,035
as what the Android Auto simulator did.

30
00:01:12,035 --> 00:01:17,933
Let's go back to the home screen,
start the media simulator.

31
00:01:17,933 --> 00:01:22,738
And if we go to the top, we can now see
that the Universal Music Player is also

32
00:01:22,738 --> 00:01:27,035
available, and we can browse in
the same way that we did last time.

33
00:01:27,035 --> 00:01:30,982
So, the same media is visible here, too,
but with an Android Auto experience.

34
00:01:30,982 --> 00:01:34,142
The UMP sample is nice because it
implements user interfaces for

35
00:01:34,142 --> 00:01:35,905
many different platforms as well.

36
00:01:35,905 --> 00:01:40,057
It also provides an activity that
Android TV can start, showing the same

37
00:01:40,057 --> 00:01:44,356
music library suitable for presentation
in the Leanback UI on Android TV.

38
00:01:44,356 --> 00:01:46,776
If you're implementing
a large media application,

39
00:01:46,776 --> 00:01:50,270
UMP is a great starting point to see
best practices in implementing this, and

40
00:01:50,270 --> 00:01:53,520
how to make a professional,
polished looking app for many platforms.
