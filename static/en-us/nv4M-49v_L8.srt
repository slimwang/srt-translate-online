1
00:00:00,000 --> 00:00:04,000
Now we're done with decorators, and I want to go back to languages.

2
00:00:04,000 --> 00:00:09,000
The first thing I want to say is that our culture is full of stories of wishful thinking.

3
00:00:09,000 --> 00:00:14,000
We have the story of Pinocchio, who wishes to be a real boy,

4
00:00:14,000 --> 00:00:20,000
and the of Dorothy, who wishes to return from Oz to her home in Kansas by clicking her shoes together.

5
00:00:20,000 --> 00:00:24,000
They find that they have the power within them to fulfill their wishes.

6
00:00:24,000 --> 00:00:26,000
Programming is often like that.

7
00:00:26,000 --> 00:00:32,000
I'm righting the body of the definition of a function, and I wish I had the function "fib" defined already.

8
00:00:32,000 --> 00:00:37,000
If I just assume that I did, then eventually my wish will come true.

9
00:00:37,000 --> 00:00:43,000
In this case, it was good while writing the right-hand side to just assume I wish I had the function I want

10
00:00:43,000 --> 00:00:49,000
and proceed as if you did, and sometimes it's a good idea to say I wish I had the language I want

11
00:00:49,000 --> 00:00:52,000
and proceed as if you did. Here's an example.

12
00:00:52,000 --> 00:00:55,000
Suppose you had to deal with algebraic expressions

13
00:00:55,000 --> 00:00:58,000
and not just compute them the way we can type this expression into Python

14
00:00:58,000 --> 00:01:02,000
and see its value if x is defined but manipulate them.

15
00:01:02,000 --> 00:01:06,000
Have the user type them in, modify them, and treat them as objects

16
00:01:06,000 --> 00:01:09,000
rather than as something to be evaluated.

17
00:01:09,000 --> 00:01:13,000
Now, my question for you is it is possible to write a regular expression

18
00:01:13,000 --> 00:01:16,000
which could recognize expressions like this that are valid.

19
00:01:16,000 --> 00:01:19,000
Is the answer, yes, it is possible to write that?

20
00:01:19,000 --> 00:01:24,000
No, it's not possible because our language we're trying to define

21
00:01:24,000 --> 00:01:29,000
has the plus and asterisk symbols and those are special within regular expressions?

22
00:01:29,000 --> 00:01:33,000
Or no, we can't parse this language because this language

23
00:01:33,000 --> 00:01:39,000
includes parentheses, and we can't do balanced parentheses for the regular expressions.

24
00:01:39,000 --> 00:01:43,000
If you're not familiar with language theory, this may be a hard question for you,

25
00:01:43,000 --> 99:59:59,999
but go ahead and give it a shot anyways.
