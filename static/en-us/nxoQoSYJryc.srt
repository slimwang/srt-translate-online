1
00:00:00,205 --> 00:00:04,290
Okay, time for a quiz. Okay, create template that

2
00:00:04,290 --> 00:00:08,700
when provided with the variable n prints FizzBuzz up to

3
00:00:08,700 --> 00:00:12,590
n. Now, what is FizzBuzz? FizzBuzz is, is a

4
00:00:12,590 --> 00:00:15,520
little programming test that's easy, it's, it's a quick way

5
00:00:15,520 --> 00:00:17,130
to see if somebody actually knows how to program

6
00:00:17,130 --> 00:00:20,040
simple things or not. Basically when you do FizzBuzz, I

7
00:00:20,040 --> 00:00:22,220
want you to follow this logic. If n is

8
00:00:22,220 --> 00:00:26,290
divisible by 3, I want you to print Fizz. If

9
00:00:26,290 --> 00:00:31,940
n is divisible by 5, I want you to print Buzz. And if n

10
00:00:31,940 --> 00:00:36,780
is divisible by 3 and 5, I want you to

11
00:00:36,780 --> 00:00:41,870
report FizzBuzz. And if it's not divisible by 3 or 5, just print

12
00:00:41,870 --> 00:00:43,810
the number. Let me show you what this will

13
00:00:43,810 --> 00:00:46,250
look like when it's working. Okay, so here is

14
00:00:46,250 --> 00:00:48,710
a working FizzBuzz app. I'm just going to ask you

15
00:00:48,710 --> 00:00:51,370
to paste in the template for a FizzBuzz, but here's,

16
00:00:51,370 --> 00:00:52,500
here's what it looks like. So if we were

17
00:00:52,500 --> 00:00:56,190
to say FizzBuzz of n equals 100. This is

18
00:00:56,190 --> 00:01:00,410
what it would print, one, two, three is divisible

19
00:01:00,410 --> 00:01:03,170
by three. So it would print fizz, five is

20
00:01:03,170 --> 00:01:06,330
divisible by five, so print buzz. Four is neither.

21
00:01:06,330 --> 00:01:09,000
Six is three so print fizz. Come down here

22
00:01:09,000 --> 00:01:12,320
to 15 we print FizzBuzz. So as you see

23
00:01:12,320 --> 00:01:16,500
anything divisible three or five prints fizz or Buzz,

24
00:01:16,500 --> 00:01:19,600
both Fizz and Buzz. And if it's neither, it just

25
00:01:19,600 --> 00:01:22,600
prints the number. And the source that we generated looks

26
00:01:22,600 --> 00:01:25,910
like this. It's an ordered list and then I'm just

27
00:01:25,910 --> 00:01:30,030
printing list elements for each value as we count up

28
00:01:30,030 --> 00:01:33,580
to n is 100. As you can see n equals

29
00:01:33,580 --> 00:01:36,630
100 down here. The handler that I'm using looks something

30
00:01:36,630 --> 00:01:39,070
like this. I just added this to the end of

31
00:01:39,070 --> 00:01:41,630
the file we've been working in. I made a new url

32
00:01:41,630 --> 00:01:45,210
called FizzBuzz which uses FizzBuzzHandler. Which is defined

33
00:01:45,210 --> 00:01:49,300
here, which inherits from Handler. And it gets

34
00:01:49,300 --> 00:01:53,610
n from the request defaulting to zero, converts

35
00:01:53,610 --> 00:01:56,420
it to an integer. n and int(n) is

36
00:01:56,420 --> 00:01:58,490
the same as basically saying if n, n

37
00:01:58,490 --> 00:02:03,150
equals int(n). And then we're rendering fizzbuzz.html passing

38
00:02:03,150 --> 00:02:07,676
in n equals n. What I want you to do for this quiz is generate fizzbuzz.html.

39
00:02:07,676 --> 00:02:10,180
And once you've got that working, I'd like

40
00:02:10,180 --> 00:02:12,090
you to paste that right here. Okay, good luck.
