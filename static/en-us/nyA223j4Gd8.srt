1
00:00:00,850 --> 00:00:03,496
Most Android apps won't
live alone on the device.

2
00:00:03,496 --> 00:00:05,740
You'll probably want to talk
to your app at some point.

3
00:00:05,740 --> 00:00:08,029
And to do that you'll need a server.

4
00:00:08,029 --> 00:00:10,120
Now, I'm not going to walk you
through building a server.

5
00:00:10,120 --> 00:00:12,680
There are plenty of resources
out there for that.

6
00:00:12,680 --> 00:00:16,190
Instead, I'm going to show you how
to communicate with your server.

7
00:00:16,190 --> 00:00:19,240
So let's focus on how to get data
from your server to your app.

8
00:00:19,240 --> 00:00:21,410
The easy way,
which you're already familiar with,

9
00:00:21,410 --> 00:00:23,370
is known as polling the server.

10
00:00:23,370 --> 00:00:25,380
This is when your app
calls up the server,

11
00:00:25,380 --> 00:00:27,350
just to see if anything has changed.

12
00:00:27,350 --> 00:00:30,998
With a repeating alarm, the app does
this after a specified amount of time.

13
00:00:30,998 --> 00:00:34,027
But, with a sync adapter, it'll do
it whenever the radio is turned on,

14
00:00:34,027 --> 00:00:35,580
after some time has already passed.

15
00:00:37,150 --> 00:00:39,248
Sorry, let me just, there.

16
00:00:39,248 --> 00:00:40,236
Sorry.

17
00:00:40,236 --> 00:00:43,628
So, by waiting for the radio to be
activated by something else, we can

18
00:00:43,628 --> 00:00:47,670
spare a bit of battery life, but that
requires a flexible timing schedule.

19
00:00:47,670 --> 00:00:50,310
So you need to determine what
your priorities are when choosing

20
00:00:50,310 --> 00:00:51,660
a polling method.

21
00:00:51,660 --> 00:00:55,500
For example, in Sunshine, we poll
the weather servers every three hours,

22
00:00:55,500 --> 00:00:58,023
give or take,
to keep the weather data up to date.

23
00:01:02,005 --> 00:01:04,480
An alternative to polling
would be pushing.

24
00:01:04,480 --> 00:01:07,240
With this method, the server is
responsible for the messaging and

25
00:01:07,240 --> 00:01:09,266
will inform your app when
new data is available.

26
00:01:09,266 --> 00:01:12,888
Your app doesn't need to regularly
check in with the server.

27
00:01:12,888 --> 00:01:15,260
Just, okay.

28
00:01:15,260 --> 00:01:16,031
Where was I?

29
00:01:16,031 --> 00:01:16,982
Oh yeah, pushing.

30
00:01:16,982 --> 00:01:18,306
Oh, pushing.

31
00:01:18,306 --> 00:01:20,106
What a good idea.

32
00:01:20,106 --> 00:01:21,545
Okay.

33
00:01:21,545 --> 00:01:23,402
So pushing can happen in two ways.

34
00:01:23,402 --> 00:01:26,397
Either the server can send a small
message called a tickle, which says

35
00:01:26,397 --> 00:01:30,230
something has changed and asks the app
to sync at its earliest convenience.

36
00:01:30,230 --> 00:01:33,680
Or, the server can just send the updated
data directly to the app and

37
00:01:33,680 --> 00:01:34,535
cut out the middleman.
