1
00:00:00,110 --> 00:00:04,630
The homework scores class may be useful for storing a single student's grades.

2
00:00:04,630 --> 00:00:08,265
And you can get useful information out of a single student's scores. But when

3
00:00:08,265 --> 00:00:12,683
my friend Sarel was teaching math, that wasn't enough information for her. She

4
00:00:12,683 --> 00:00:16,831
wanted information about her teaching skills, as well as detailed summaries for

5
00:00:16,831 --> 00:00:21,462
the students. She wanted to know how well she had taught fractions. And how

6
00:00:21,462 --> 00:00:25,412
well she taught equivalent fractions. And for that, she would need to compare

7
00:00:25,412 --> 00:00:30,365
the data for all of the students for one topic. This is starting to look like a

8
00:00:30,365 --> 00:00:34,666
2-D array. With this structure it would be possible to calculate the total for

9
00:00:34,666 --> 00:00:38,946
a student. And also to calculate the total for a topic, which would allow her

10
00:00:38,946 --> 00:00:43,550
to compute sums for each topic. And then compare them, to see which topics she

11
00:00:43,550 --> 00:00:47,050
needed to spend more time on. Once that was done, she could write very

12
00:00:47,050 --> 00:00:51,130
detailed, customized teacher comments for each student, by looking at what they

13
00:00:51,130 --> 00:00:56,995
got in each topic, and choosing different sentences based on that grade. We're

14
00:00:56,995 --> 00:01:01,806
going to implement this together. I'm going to make a class. The GradeBook

15
00:01:01,806 --> 00:01:05,991
class, which will contain a 2-D array, of all of the scores. It'll also

16
00:01:05,991 --> 00:01:10,974
contain, the names of the students, and the names of the topics. Since you

17
00:01:10,974 --> 00:01:13,769
probably don't want to enter these scores over and over again, I wrote a method

18
00:01:13,769 --> 00:01:16,392
that will read the GradeBook scores, from the files, and put them into the

19
00:01:16,392 --> 00:01:18,490
array for you.
