1
00:00:00,000 --> 00:00:04,000
Welcome to the first unit of CS258--How to Make Software Fail.

2
00:00:04,000 --> 00:00:07,000
Now, making software fail is something that I feel very strongly about, but in the big picture,

3
00:00:07,000 --> 00:00:12,000
it's not necessarily failures that we're interested but rather the fact that if we can find failures

4
00:00:12,000 --> 00:00:16,000
in software and if we can fix these failures, then eventually we're going to run out of bugs

5
00:00:16,000 --> 00:00:19,000
and we'll have a software that actually works reliably.

6
00:00:19,000 --> 00:00:24,000
Now if you look at testing software as a whole--as a large problem--it's really kind of daunting,

7
00:00:24,000 --> 00:00:28,000
because we can look at Microsoft's products and we can see that Microsoft didn't manage

8
00:00:28,000 --> 00:00:31,000
to eliminate all the bugs in their products, and we can look at Google's services and we

9
00:00:31,000 --> 00:00:34,000
can see that Google didn't manage to eliminate all the bugs in their services and so we might

10
00:00:34,000 --> 00:00:39,000
want to say to ourselves--how can we possibly get rid of all the bugs in our own software.

11
00:00:39,000 --> 00:00:44,000
Well, what turns out to be the case is the testing problem is not really this large monolithic problem,

12
00:00:44,000 --> 00:00:48,000
but rather can be broken down into a lot of smaller sub-problems, and by looking at those

13
00:00:48,000 --> 00:00:52,000
sub-problems, we can apply known techniques and things that people have done before,

14
00:00:52,000 --> 00:00:55,000
and we could sort of pattern match on these problems, and once we've become good

15
00:00:55,000 --> 00:00:59,000
at these smaller problems, then we can become much better testers as a whole.

16
00:00:59,000 --> 00:01:01,907
And this is what Unit 1 is about.
