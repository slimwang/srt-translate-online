1
00:00:00,620 --> 00:00:04,590
As before, you'll create a new
application with a blank activity.

2
00:00:04,590 --> 00:00:07,840
Android Studio will take you to the
activity designer, and as you can see,

3
00:00:07,840 --> 00:00:10,840
here, it's populated with a very
basic hello world text field.

4
00:00:12,120 --> 00:00:15,630
I'm going to paste it in the UI
declaration for the activity recognition

5
00:00:15,630 --> 00:00:19,790
app, and you'll see the code for this in
the instructor notes below the video.

6
00:00:19,790 --> 00:00:23,820
So, I'll just replace all
of this with my code.

7
00:00:23,820 --> 00:00:26,210
And my code, as you saw,
had the two buttons for

8
00:00:26,210 --> 00:00:30,260
requesting activity updates and
for removing activity updates.

9
00:00:30,260 --> 00:00:33,950
And then this text view, which just
had the details of the activities.

10
00:00:33,950 --> 00:00:36,140
Now you'll see that
there are some errors.

11
00:00:36,140 --> 00:00:38,680
This is because I don't
have any strings set up.

12
00:00:38,680 --> 00:00:42,070
These are values that you
specify using XML files,

13
00:00:42,070 --> 00:00:44,600
keeping them separate
from the UI declaration.

14
00:00:44,600 --> 00:00:46,030
This is good practice.

15
00:00:46,030 --> 00:00:48,220
To this point in the course,
I've been hard coding them, but

16
00:00:48,220 --> 00:00:50,010
that's not a best practice.

17
00:00:50,010 --> 00:00:52,750
I'm not going to go into
detail on explaining them now.

18
00:00:52,750 --> 00:00:56,090
Check out the Android fundamentals
courses, or the documentation for

19
00:00:56,090 --> 00:00:57,140
how they work.

20
00:00:57,140 --> 00:00:58,350
It's pretty straightforward and

21
00:00:58,350 --> 00:01:00,920
once you've done it a few times,
it becomes second nature.

22
00:01:00,920 --> 00:01:02,930
I'm just going to paste
in these string values.

23
00:01:02,930 --> 00:01:05,480
And you can get the code
from the instructor notes.

24
00:01:05,480 --> 00:01:09,742
Strings are in res >
values > strings.xml.

25
00:01:09,742 --> 00:01:11,580
You can see there isn't much in here.

26
00:01:11,580 --> 00:01:13,660
And I'm going to paste the new stuff in.

27
00:01:13,660 --> 00:01:16,760
So now I've pasted in all the different
string resources that I'm going to be

28
00:01:16,760 --> 00:01:18,040
using in this application.

29
00:01:18,040 --> 00:01:22,370
And if I go back to my layout file,
we'll see that the red has gone away,

30
00:01:22,370 --> 00:01:24,460
that those errors are now fixed.

31
00:01:24,460 --> 00:01:25,875
Next, as you've done before,

32
00:01:25,875 --> 00:01:29,990
you'll need to update your build.gradle
to use the services libraries.

33
00:01:29,990 --> 00:01:33,165
Build.gradle can be found in your
gradle scripts, and that's the one for

34
00:01:33,165 --> 00:01:34,365
the module app.

35
00:01:34,365 --> 00:01:35,745
And you can see it here.

36
00:01:35,745 --> 00:01:39,115
I'm just going to paste it
in my Play services version.

37
00:01:39,115 --> 00:01:42,075
Do remember that when you're building
this to check the version of

38
00:01:42,075 --> 00:01:42,895
the library.

39
00:01:42,895 --> 00:01:45,640
I'm just using 6.5.+ here.

40
00:01:45,640 --> 00:01:48,240
If you have a later version
of the library, use that, and

41
00:01:48,240 --> 00:01:51,710
also try to use the specific latest
version of the library you have on your

42
00:01:51,710 --> 00:01:54,060
machine as we demonstrated earlier.

43
00:01:54,060 --> 00:01:56,730
For the purpose of keeping things
simple, I'm putting the plus in here,

44
00:01:56,730 --> 00:01:58,480
but that's bad practice.

45
00:01:58,480 --> 00:02:00,320
Also, the name may change.

46
00:02:00,320 --> 00:02:02,390
Just look out in the documentation.

47
00:02:02,390 --> 00:02:06,950
At the moment its called
com.google.android.gns:play-services,

48
00:02:06,950 --> 00:02:10,340
but this name may change over time,
so just keep an eye out for that.

49
00:02:10,340 --> 00:02:13,860
Once you're done with that, you also
need to update the app manifest.

50
00:02:13,860 --> 00:02:17,590
The first thing your going to add to the
app manifest are details on the services

51
00:02:17,590 --> 00:02:19,380
libraries that you're going to use.

52
00:02:19,380 --> 00:02:23,060
You enter these just above
the closing application tag and

53
00:02:23,060 --> 00:02:24,740
I'm just going to paste mine in.

54
00:02:24,740 --> 00:02:28,030
You see right now it has red indicating
an error, but when I do my next grade,

55
00:02:28,030 --> 00:02:29,300
I think that'll go away.

56
00:02:29,300 --> 00:02:30,720
You don't need to worry about that.

57
00:02:30,720 --> 00:02:33,760
And the final thing that you
have to add to your app manifest

58
00:02:33,760 --> 00:02:37,310
is the ability to use
the activity recognition APIs.

59
00:02:37,310 --> 00:02:40,240
And you do this with
a user's permission tag.

60
00:02:40,240 --> 00:02:43,480
So, I'm just going to go to
underneath my application tag, and

61
00:02:43,480 --> 00:02:45,670
I'll paste in the user's permission.

62
00:02:45,670 --> 00:02:47,700
So you can see, I'm just setting
it to user's permission.

63
00:02:47,700 --> 00:02:51,720
And the Android name is
the activity recognition details.

64
00:02:51,720 --> 00:02:55,770
So now my manifest is set up,
my build.gradle is set up.

65
00:02:55,770 --> 00:02:57,020
So I've done everything I need for

66
00:02:57,020 --> 00:02:59,550
my project to work for
activity recognition.

67
00:02:59,550 --> 00:03:01,510
So now all we have to do is
actually write the project.
