1
00:00:00,380 --> 00:00:03,120
You actually already
modified the theme of an app

2
00:00:03,120 --> 00:00:05,140
in the CourtCounter app
in practice set two.

3
00:00:06,160 --> 00:00:10,500
You modified the styles at XML
file to have this app theme.

4
00:00:10,500 --> 00:00:12,560
However, we didn't get
into any specifics.

5
00:00:12,560 --> 00:00:14,340
So, let's do that now.

6
00:00:14,340 --> 00:00:16,840
So, what is the style versus a theme?

7
00:00:16,840 --> 00:00:20,270
Well they're both defined as
resources in the app in the same way.

8
00:00:20,270 --> 00:00:22,800
You can add them to the styles.xml file.

9
00:00:22,800 --> 00:00:26,790
However, the difference is that
a style is applied to a single view,

10
00:00:26,790 --> 00:00:30,560
whereas a theme is applied to
an activity or application,

11
00:00:30,560 --> 00:00:35,700
meaning that it's applied to all the
views in that activity or application.

12
00:00:35,700 --> 00:00:38,850
If you want a text feed to show up
in italics with a blue font color,

13
00:00:38,850 --> 00:00:40,960
you could define a style for that.

14
00:00:40,960 --> 00:00:45,109
But if you want all of the text feeds
in your activity to use that blue font

15
00:00:45,109 --> 00:00:48,169
color with italics,
then you could define a theme.

16
00:00:48,169 --> 00:00:52,043
Themes are also used to apply style
properties to the window of the app.

17
00:00:52,043 --> 00:00:56,126
So you can change the color for things
like the app bar or the status bar,

18
00:00:56,126 --> 00:00:59,760
which is exactly how you use
the theme in the CourtCounter app.

19
00:00:59,760 --> 00:01:03,510
The following are three
examples of themes in action.

20
00:01:03,510 --> 00:01:06,250
Notice how the colors used in
the app bar and the status bar

21
00:01:06,250 --> 00:01:10,150
are also reflected in things like
the headers and also the button text.

22
00:01:10,150 --> 00:01:13,900
This is an effective use of
color to convey the brand

23
00:01:13,900 --> 00:01:14,980
of the Google Play Music app.

24
00:01:16,190 --> 00:01:20,040
Similarly, the Google Movies app
uses red as the branding color.

25
00:01:20,040 --> 00:01:24,940
Its use in the app bar, status bar, in
this large image here and the buttons.

26
00:01:24,940 --> 00:01:28,370
In the Google Play Games app, you can
see how specifying different shades of

27
00:01:28,370 --> 00:01:33,180
green for the theme of the app
leads to a cohesive experience.

28
00:01:33,180 --> 00:01:35,060
To make development of an app easier,

29
00:01:35,060 --> 00:01:38,350
there are a few standard system
themes that come with Android.

30
00:01:38,350 --> 00:01:42,300
Each of these system themes follows
the material design principles.

31
00:01:42,300 --> 00:01:46,730
There's Material Dark, which has a dark
content area and a dark action bar.

32
00:01:46,730 --> 00:01:49,690
There's Material Light,
which has a light content area and

33
00:01:49,690 --> 00:01:51,480
a light action bar.

34
00:01:51,480 --> 00:01:54,890
Then there's the Material Light
with Dark Action Bar theme,

35
00:01:54,890 --> 00:01:59,650
which has a light content area with
a dark action bar as the name entails.

36
00:01:59,650 --> 00:02:03,620
When picking a theme, you should pick a
system theme that is closest to what you

37
00:02:03,620 --> 00:02:05,560
want in your final design.

38
00:02:05,560 --> 00:02:09,459
You will make this the parent of
the custom theme you define in

39
00:02:09,459 --> 00:02:10,917
the style.xml file.

40
00:02:10,917 --> 00:02:14,364
That way you'll inherit all
the styling from the parent theme, and

41
00:02:14,364 --> 00:02:18,130
then you can add additional
styling of your own on top of it.

42
00:02:18,130 --> 00:02:21,690
This is a helpful article on
how to use material theme.

43
00:02:21,690 --> 00:02:25,240
It tells you all the things you get for
free by using this theme.

44
00:02:25,240 --> 00:02:27,940
It also talks about the Material theme,
the Material Light and

45
00:02:27,940 --> 00:02:30,630
the Material Light With Dark Action Bar
themes.

46
00:02:30,630 --> 00:02:34,030
Here's some example XML that you
can put into your styles file.

47
00:02:34,030 --> 00:02:38,000
This style is inheriting from
the parent Theme.Material, so

48
00:02:38,000 --> 00:02:40,920
it has a dark content area
with a dark action bar.

49
00:02:40,920 --> 00:02:43,820
We want everything that
the Material.Theme provides for us, but

50
00:02:43,820 --> 00:02:46,380
we do want to change three
of the theme colors, so

51
00:02:46,380 --> 00:02:50,010
we've listed them here in
the properties of this style.

52
00:02:50,010 --> 00:02:52,270
If you're not sure which
properties you want to change,

53
00:02:52,270 --> 00:02:54,470
you can look at this
helpful diagram here.

54
00:02:54,470 --> 00:02:58,040
If you change color primary dark, that's
going to change the status bar and

55
00:02:58,040 --> 00:02:59,330
so on.

56
00:02:59,330 --> 00:03:04,110
These material themes were introduced in
the Android Lollipop Platform version.

57
00:03:04,110 --> 00:03:06,920
But most developers want
the apps to work on

58
00:03:06,920 --> 00:03:09,740
versions of Android older than Lollipop.

59
00:03:09,740 --> 00:03:12,540
In order for your app to run
on older versions of Android,

60
00:03:12,540 --> 00:03:14,019
you should use the support library.

61
00:03:15,220 --> 00:03:19,501
By using the support library,
you can apply one of these themes.

62
00:03:19,501 --> 00:03:23,352
Theme.AppCompat.Light is the same
as the Material.Light theme,

63
00:03:23,352 --> 00:03:26,689
it's just that this one works
on older versions of Android.

64
00:03:27,710 --> 00:03:31,420
And by the way, AppCompat stands for
app compatibility.

65
00:03:31,420 --> 00:03:35,360
Defining a theme using the AppCompat
version is slightly different, so

66
00:03:35,360 --> 00:03:37,360
pay attention to the syntax here.

67
00:03:37,360 --> 00:03:39,040
This example is a good one to follow.

68
00:03:40,125 --> 00:03:42,755
All right, let's go and
change the theme for our app.

69
00:03:42,755 --> 00:03:46,155
We'll start by picking sensible colors
for the app and the status bar.

70
00:03:47,165 --> 00:03:49,168
I open the material
designs spec on color.

71
00:03:49,168 --> 00:03:52,845
You may remember this from
lesson one of our course.

72
00:03:52,845 --> 00:03:57,540
The spec recommends that we use a 500
color for the primary color of the app

73
00:03:57,540 --> 00:04:01,910
and a 700 color for the status
bar within the same color group.

74
00:04:01,910 --> 00:04:05,940
Scrolling through this list, I'm
randomly going to choose the teal color,

75
00:04:06,980 --> 00:04:11,040
so I'm going to use the 500 color for
the primary color of the app.

76
00:04:11,040 --> 00:04:16,690
And then the 700 color for
the primary color dark of the app.

77
00:04:16,690 --> 00:04:18,959
By the way, another helpful tool for
picking colors for

78
00:04:18,959 --> 00:04:21,070
your app, is this material palette tool.

79
00:04:22,280 --> 00:04:24,300
If I click on this color and this color,

80
00:04:24,300 --> 00:04:27,570
then it shows a preview of
what the app would look like.

81
00:04:27,570 --> 00:04:30,510
And down here is a list of all
the colors in the color palette.

82
00:04:30,510 --> 00:04:34,040
Here's the hex color for the primary
color, for the dark primary color,

83
00:04:34,040 --> 00:04:36,520
the accent color and so on.

84
00:04:36,520 --> 00:04:38,680
Once you've picked your colors,
you can go ahead and

85
00:04:38,680 --> 00:04:43,110
define a theme as a style
resource in the styles.xml file.

86
00:04:43,110 --> 00:04:45,480
We ask that you include
these three properties.

87
00:04:45,480 --> 00:04:48,630
Within Android Studio
open the styles.xml file.

88
00:04:48,630 --> 00:04:51,480
We will define our theme here,
this is the same file

89
00:04:51,480 --> 00:04:55,290
that we modified in the last quiz,
where we added the HeaderTextStyle.

90
00:04:55,290 --> 00:04:59,430
But default you should see that
the AppTheme is ready to find.

91
00:04:59,430 --> 00:05:03,890
The parent is
Theme.AppCompat.Light.DarkActionBar.

92
00:05:03,890 --> 00:05:07,020
So, this has a light content
area with a dark action bar.

93
00:05:07,020 --> 00:05:08,520
And we're using AppCompat,

94
00:05:08,520 --> 00:05:12,130
meaning that this will work
on older versions of Android.

95
00:05:12,130 --> 00:05:14,860
Any customization we
do to our theme here

96
00:05:14,860 --> 00:05:19,140
is going to override the defaults that
were provided by the system theme.

97
00:05:19,140 --> 00:05:22,260
This is what the XML looks like for
a theme after you specify

98
00:05:22,260 --> 00:05:25,810
the primary color, primary color,
and the accent color.

99
00:05:25,810 --> 00:05:28,580
The value for
each of these is the hex color here.

100
00:05:29,750 --> 00:05:31,710
This color will show up in the app bar.

101
00:05:31,710 --> 00:05:35,490
This color will show up in the status
bar and contextual app bars.

102
00:05:35,490 --> 00:05:39,480
And the accent color will show up
in UI controls, like checkboxes and

103
00:05:39,480 --> 00:05:40,030
check fields.

104
00:05:41,310 --> 00:05:45,340
Once we've made this style resource,
we want to apply it as a theme.

105
00:05:45,340 --> 00:05:49,080
Lucky for you, AppTheme is already
applied as a theme by default, so

106
00:05:49,080 --> 00:05:51,220
you don't need to change
anything in your code.

107
00:05:51,220 --> 00:05:53,100
Let's look at where
the theme is applied,

108
00:05:53,100 --> 00:05:55,900
in case you want to make
more themes in the future.

109
00:05:55,900 --> 00:05:59,050
You'll need to open up
the AndroidManifest.xml file.

110
00:05:59,050 --> 00:06:02,750
It's located within the Manifest
folder of your app.

111
00:06:02,750 --> 00:06:06,120
This XML file provides important
information about your app

112
00:06:06,120 --> 00:06:07,460
to the system.

113
00:06:07,460 --> 00:06:10,770
For example, it specifies
the package name and the app name,

114
00:06:10,770 --> 00:06:15,870
and it also lists all the components
in your app such as all the activities.

115
00:06:15,870 --> 00:06:19,630
The line that we're interested in now
is this line that specifies the theme

116
00:06:19,630 --> 00:06:20,650
of the application.

117
00:06:21,760 --> 00:06:24,418
The value of the theme
is @style/AppTheme.

118
00:06:24,418 --> 00:06:30,300
This is referring to the style resource
in the @styles.xml file called AppTheme.

119
00:06:30,300 --> 00:06:31,540
By specifying this theme for

120
00:06:31,540 --> 00:06:36,240
the application, all the activities
are going to use this theme.

121
00:06:36,240 --> 00:06:39,300
If we only want to apply this
theme to the MainActivity

122
00:06:39,300 --> 00:06:44,560
then we can copy this line and
paste it here for this activity XML tag.

123
00:06:44,560 --> 00:06:47,755
Since our app only contains one activity
now, there isn't a whole lot of

124
00:06:47,755 --> 00:06:50,945
difference between setting
the theme on the application or

125
00:06:50,945 --> 00:06:53,285
setting the theme on the activity.

126
00:06:53,285 --> 00:06:57,215
But for other more complicated apps
that contain multiple activities,

127
00:06:57,215 --> 00:06:58,931
then the distinction is important.

128
00:06:59,942 --> 00:07:03,362
Complete these tasks in your
version of the Just Java app.

129
00:07:03,362 --> 00:07:05,922
Feel free to choose your own colors for
the theme.

130
00:07:05,922 --> 00:07:09,172
These are just the colors that we
picked for our version of the app.

131
00:07:09,172 --> 00:07:11,342
When you're done,
check these boxes and continue.
