1
00:00:00,190 --> 00:00:03,850
All right, so here I am in the
Command Prompt in the SQLite3 program

2
00:00:03,850 --> 00:00:05,660
inside my shelter database.

3
00:00:05,660 --> 00:00:09,630
Now using this create statement,
I've created a new pets table

4
00:00:09,630 --> 00:00:11,675
with a couple of constraints
on different columns.

5
00:00:11,675 --> 00:00:15,350
Now I want you to follow along,
I suggest taking a look at the insert

6
00:00:15,350 --> 00:00:18,070
statements that I've linked
down below in the notes.

7
00:00:18,070 --> 00:00:20,250
They matched the one
that I've inserted here.

8
00:00:20,250 --> 00:00:23,910
And so I've created new data
inside this pets table.

9
00:00:23,910 --> 00:00:26,890
So back to our overview
of the CRUD SQL commands.

10
00:00:28,180 --> 00:00:30,510
Now thus far we've talked
about creating a table for

11
00:00:30,510 --> 00:00:35,580
the pets, where we're inserted
a new pet into the database

12
00:00:37,030 --> 00:00:39,380
as well as inserted default
pet data into the database.

13
00:00:41,040 --> 00:00:45,300
Next for the read commands,
we've learned how to select or

14
00:00:45,300 --> 00:00:47,602
read a list of all
the pets at the shelter.

15
00:00:47,602 --> 00:00:52,120
Now if you notice the next few actions
are all specific to a single pet

16
00:00:52,120 --> 00:00:53,880
as indicated by the ID we need.

17
00:00:53,880 --> 00:00:58,920
All right so to refer to a pet by
its ID, we can use the where clause.

18
00:00:58,920 --> 00:01:00,970
So let's take a look at an example.

19
00:01:00,970 --> 00:01:05,120
So let's say I use that SELECT * from
statement that we've used before,

20
00:01:05,120 --> 00:01:06,520
select from the pets table.

21
00:01:06,520 --> 00:01:08,700
But now I want to use the WHERE keyword.

22
00:01:08,700 --> 00:01:13,150
And so this WHERE keyword specifies the
pet, or pets that we're interested in.

23
00:01:13,150 --> 00:01:14,210
In our case,

24
00:01:14,210 --> 00:01:17,910
we're only interested in the pet where
the ID column is equivalent to 1.

25
00:01:17,910 --> 00:01:21,290
id == 1.

26
00:01:21,290 --> 00:01:25,340
So notice here that it prints
out the first pet of our table.

27
00:01:25,340 --> 00:01:26,830
So Tommy.

28
00:01:26,830 --> 00:01:30,090
And to help us look at that better,
let's turn on the header and

29
00:01:30,090 --> 00:01:31,970
then set the mode to column.

30
00:01:31,970 --> 00:01:34,640
And once again here's what
that information looks like.

31
00:01:34,640 --> 00:01:37,320
So in our case we're only
interested in the pet

32
00:01:37,320 --> 00:01:39,350
where the ID column was equivalent to 1.

33
00:01:39,350 --> 00:01:43,830
And notice here that we used ID, but
it's not specific to the where clause.

34
00:01:43,830 --> 00:01:45,820
We could have used
various other columns to

35
00:01:45,820 --> 00:01:47,930
specify the information that we wanted.

36
00:01:47,930 --> 00:01:52,400
So for example, say I wanted all the
pets that weigh more than 18 kilograms.

37
00:01:52,400 --> 00:02:00,930
So like FROM pets WHERE weight &gt;= 18.

38
00:02:00,930 --> 00:02:07,490
And so that command gave us that our one
pet Duke has a weight of 70 kilograms.

39
00:02:07,490 --> 00:02:09,220
Another example case we
could have looked at,

40
00:02:09,220 --> 00:02:11,580
although pets whose gender are females.

41
00:02:11,580 --> 00:02:12,210
So let's try that.

42
00:02:12,210 --> 00:02:16,444
WHERE gender equals,
remember we had the value of 2

43
00:02:16,444 --> 00:02:20,400
set as the equivalent for
female in our use case.

44
00:02:22,370 --> 00:02:24,310
So we have our two pets,
Lady and Arlene.

45
00:02:25,920 --> 00:02:29,150
So WHERE helps us specify which rows
of the database we're interested in.

46
00:02:29,150 --> 00:02:35,350
And as I mentioned before, SELECT allows
us to specify which columns we're in.

47
00:02:35,350 --> 00:02:39,685
So for example, I can SELECT
specifically from two columns.

48
00:02:39,685 --> 00:02:43,655
So say name and
breed column FROM the pets table.

49
00:02:44,725 --> 00:02:48,535
So what that does is it pulls up the
information from just these two columns

50
00:02:48,535 --> 00:02:50,185
that I've asked for.

51
00:02:50,185 --> 00:02:52,652
So this is useful if you
have a huge database but

52
00:02:52,652 --> 00:02:56,692
are only interested in one or
two attributes from the database.

53
00:02:56,692 --> 00:03:00,932
So what that ORDER by keyword here
does is change the output ordering.

54
00:03:00,932 --> 00:03:04,840
So it takes the column, so
what we specified here name, and

55
00:03:04,840 --> 00:03:07,310
then orders that column
by either ascending.

56
00:03:07,310 --> 00:03:12,500
So ASC or descending DESC orders.

57
00:03:12,500 --> 00:03:16,830
So in total, this command is telling
us to order all these information

58
00:03:16,830 --> 00:03:19,240
by the name column in ascending order.

59
00:03:19,240 --> 00:03:20,490
So from A to Z.

60
00:03:21,620 --> 00:03:25,080
So using a combination of
the keywords and then various syntax,

61
00:03:25,080 --> 00:03:29,810
we can grab specific information to get
just the particular data that we need.

62
00:03:29,810 --> 00:03:33,110
So for example, we can grab all
the animals that don't have an unknown

63
00:03:33,110 --> 00:03:35,620
breed, and
then show their names and gender.

64
00:03:35,620 --> 00:03:39,880
So for example, SELECT, pet name and
gender FROM the pets table

65
00:03:41,120 --> 00:03:44,565
WHERE the breed !="unknown".

66
00:03:47,600 --> 00:03:50,620
So in Java,
the exclamation mark means not.

67
00:03:50,620 --> 00:03:55,060
So combined with the equal sign,
this reads as not equals.

68
00:03:55,060 --> 00:03:58,810
So in this statement we're just
selecting the column's name and

69
00:03:58,810 --> 00:04:02,810
gender for
the pets whose breed is not unknown.

70
00:04:02,810 --> 00:04:06,180
So that includes these six right here.

71
00:04:06,180 --> 00:04:09,620
So as you learn other operations
in SQL used to delete and

72
00:04:09,620 --> 00:04:13,350
update data, keep in mind that
you can use the WHERE clause

73
00:04:13,350 --> 00:04:15,360
to specify the data that
you want to affect.

74
00:04:16,420 --> 00:04:21,420
So for this practice set, select just
the name and weight from the male pets

75
00:04:21,420 --> 00:04:25,300
and then order that by weight with
the highest weight at the top.

76
00:04:25,300 --> 00:04:27,860
And I like you to paste the command
that you used in this box here.
