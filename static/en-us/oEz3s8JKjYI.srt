1
00:00:00,090 --> 00:00:02,180
Finally, we can start writing the page.

2
00:00:02,180 --> 00:00:04,710
But before we do, we need some kind of convention for

3
00:00:04,710 --> 00:00:07,750
how we're going to name all of the columns in our grid, so

4
00:00:07,750 --> 00:00:10,020
we can easily remember them later when we want to use them.

5
00:00:10,020 --> 00:00:12,910
First off, we need a name for this entire row.

6
00:00:12,910 --> 00:00:15,340
And for that, I think it makes sense to just call it a row.

7
00:00:15,340 --> 00:00:16,890
No need to make things complicated.

8
00:00:16,890 --> 00:00:19,200
Now we need names for all of the columns here.

9
00:00:19,200 --> 00:00:21,520
Or for elements of different column widths.

10
00:00:21,520 --> 00:00:23,510
First one we'll do, well, column one.

11
00:00:23,510 --> 00:00:24,030
Why not?

12
00:00:24,030 --> 00:00:26,480
It's one column wide, so we'll just call it column one.

13
00:00:26,480 --> 00:00:30,230
If we want element to be two columns wide, we'll call it column-2.

14
00:00:30,230 --> 00:00:32,229
To indicate that it's two columns wide.

15
00:00:32,229 --> 00:00:36,120
Same thing for column three, that is three columns wide.

16
00:00:36,120 --> 00:00:40,430
And so on until we get to column 12, which is the full width of the row.

17
00:00:40,430 --> 00:00:42,250
This makes our lives pretty easy.

18
00:00:42,250 --> 00:00:45,720
Let's imagine we wanted something to be a quarter of the full width wide.

19
00:00:45,720 --> 00:00:48,510
A quarter of 12 is three, so we simply need to give that

20
00:00:48,510 --> 00:00:53,070
element a class of column three to make sure it's a quarter of this entire row.

21
00:00:53,070 --> 00:00:55,240
Let's go ahead and set this up in our CSS file.

22
00:00:55,240 --> 00:00:56,610
First, we'll set up some borders so

23
00:00:56,610 --> 00:00:59,480
we can easily see where our elements are on the screen.

24
00:00:59,480 --> 00:01:01,710
And then let's set up some box sizing.

25
00:01:01,710 --> 00:01:03,120
Then we'll define our row.

26
00:01:03,120 --> 00:01:05,740
Remember, each row should take up the entire width of the screen.

27
00:01:05,740 --> 00:01:07,480
So we'll set it to width 100%.

28
00:01:07,480 --> 00:01:11,120
After row, we'll set up the width of all of our columns.

29
00:01:11,120 --> 00:01:12,870
You'll see column one, column two,

30
00:01:12,870 --> 00:01:15,790
column three, just like we decided to do before.

31
00:01:15,790 --> 00:01:18,370
And each width is set to a percentage of the page.

32
00:01:18,370 --> 00:01:20,310
Column one is one twelfth of the page.

33
00:01:20,310 --> 00:01:22,680
Column two is two twelfth of the page.

34
00:01:22,680 --> 00:01:25,430
Column three is twelfths of the page and so on.

35
00:01:25,430 --> 00:01:29,540
Now that we've got our CSS set, let's get a sample page to see if this works.

36
00:01:29,540 --> 00:01:32,970
In the instructor notes, you'll find the HTML that you see right here.

37
00:01:32,970 --> 00:01:37,170
And notice that we've gotten outer class of row, and then, two inner columns.

38
00:01:37,170 --> 00:01:38,690
Column 2 and column 10.

39
00:01:38,690 --> 00:01:41,420
So together, they should fill up the entire row.

40
00:01:41,420 --> 00:01:42,450
Then we have column 3 and

41
00:01:42,450 --> 00:01:47,210
column 9, 3 plus 9 is 12 so these two columns should also fill up this row.

42
00:01:47,210 --> 00:01:48,302
Let's see if it works.

43
00:01:48,302 --> 00:01:52,780
Opening test.html in the browser and we see this.

44
00:01:52,780 --> 00:01:53,700
Hm.

45
00:01:53,700 --> 00:01:55,110
Something doesn't look right.

46
00:01:55,110 --> 00:01:56,660
So we can see column 2 and

47
00:01:56,660 --> 00:02:00,380
column 10, but it looks like they're stacked on top of each other.

48
00:02:00,380 --> 00:02:02,140
They're not lining up next to each other.

49
00:02:02,140 --> 00:02:03,750
Same thing for 3 and 9.

50
00:02:03,750 --> 00:02:04,750
Three 4's.

51
00:02:04,750 --> 00:02:07,490
3, 6, 3. Each one of these should just fill up one row.

52
00:02:07,490 --> 00:02:09,758
But instead, the columns are stacked on top of each other.

53
00:02:09,758 --> 00:02:11,540
It looks like we've got a problem here.

54
00:02:11,540 --> 00:02:15,750
What style should we add to the row class of CSS to fix the way

55
00:02:15,750 --> 00:02:16,520
the columns are behaving?

56
00:02:16,520 --> 00:02:18,690
Should we add display block?

57
00:02:18,690 --> 00:02:23,420
Should we add display flex and flex wrap, wrap, or just display float?

58
00:02:23,420 --> 00:02:26,570
The easiest way to figure this out is to open up dev tools and

59
00:02:26,570 --> 00:02:29,380
add these CSS styles to the row class
