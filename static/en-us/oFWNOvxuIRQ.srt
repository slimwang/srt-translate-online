1
00:00:00,130 --> 00:00:01,522
Okay so we know how to get data into a

2
00:00:01,522 --> 00:00:04,760
MongoDB collection. And do queries against that collection. Now I

3
00:00:04,760 --> 00:00:07,630
would like to talk about briefly, is how to remove

4
00:00:07,630 --> 00:00:12,350
documents from a collection where that's necessary. So the syntax for

5
00:00:12,350 --> 00:00:15,750
removing documents is actually quite similar to the syntax for

6
00:00:15,750 --> 00:00:19,020
finding documents. So with find if we want to return all

7
00:00:19,020 --> 00:00:21,420
the documents in the collection we simply don't express any

8
00:00:21,420 --> 00:00:26,340
parameters to the find function. The same is true with remove

9
00:00:26,340 --> 00:00:28,440
if I were to execute this query it would remove

10
00:00:28,440 --> 00:00:31,140
one by one all of the cities from this collection.

11
00:00:31,140 --> 00:00:33,370
A more efficient way of doing that would simply be

12
00:00:33,370 --> 00:00:37,320
to call drop which would remove the entire collection and

13
00:00:37,320 --> 00:00:41,500
any meta data associated with it. Such as indexes. Now,

14
00:00:41,500 --> 00:00:44,700
we can also remove individual documents or documents matching particular

15
00:00:44,700 --> 00:00:48,500
criteria. So, for example, I could remove an individual document

16
00:00:48,500 --> 00:00:51,400
with the name matching the value "Chicago." So, let me

17
00:00:51,400 --> 00:00:59,030
first do a find and there we see that single city. And now, a remove. And then

18
00:00:59,030 --> 00:01:02,360
to find again, and sure enough, that city's gone

19
00:01:02,360 --> 00:01:04,170
from this collection. Now let's look at a query

20
00:01:04,170 --> 00:01:05,990
that touches more than one document. So in

21
00:01:05,990 --> 00:01:09,150
this case, what I want to do is identify all

22
00:01:09,150 --> 00:01:13,700
documents that don't actually have a name. Okay, you

23
00:01:13,700 --> 00:01:16,840
can see there are several returned, in fact 210

24
00:01:16,840 --> 00:01:20,140
documents in this city's collection may seem odd. Don't actually

25
00:01:20,140 --> 00:01:22,440
have a name. This is a good example here. We've got

26
00:01:22,440 --> 00:01:26,210
a country, but no name for the individual city. Same is

27
00:01:26,210 --> 00:01:29,310
true with the rest of these returned. Now, as part of

28
00:01:29,310 --> 00:01:32,540
a cleaning pass, for example, we might want to remove all cities

29
00:01:32,540 --> 00:01:35,510
from this collection after they've been put into the database, all

30
00:01:35,510 --> 00:01:38,960
cities that don't actually have a value for the name field.

31
00:01:38,960 --> 00:01:41,850
I can do that by sending this same query document to

32
00:01:41,850 --> 00:01:46,010
the remove function. So now, I've removed all of those

33
00:01:46,010 --> 00:01:48,730
cities that have no name and if I do a

34
00:01:48,730 --> 00:01:50,380
find again I can see that there are now in

35
00:01:50,380 --> 00:01:53,490
fact no cites that are missing a name field, so

36
00:01:53,490 --> 00:01:55,430
the take away here is that remove works in a

37
00:01:55,430 --> 00:01:58,250
way very similar to find, you can specify the document

38
00:01:58,250 --> 00:02:01,620
to be removed using a query document that has the

39
00:02:01,620 --> 00:02:05,880
same syntax and operators available as does the find function.
