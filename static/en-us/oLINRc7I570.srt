1
00:00:00,000 --> 00:00:03,070
Enough with introducing new words to you.

2
00:00:03,070 --> 00:00:06,360
What is the algorithm that I propose that Dave should use?

3
00:00:06,360 --> 00:00:08,870
It's a very simple one actually.

4
00:00:08,870 --> 00:00:11,220
The algorithm is now quite simple to describe.

5
00:00:11,220 --> 00:00:14,380
Of course it takes a bit more effort to actually implement it.

6
00:00:14,380 --> 00:00:17,850
Given any graph, the first step that we do is we calculate

7
00:00:17,850 --> 00:00:20,850
a minimum spanning tree for that graph.

8
00:00:20,850 --> 00:00:26,470
That is something if you have had an algorithms class you know to be doable in polynomial time.

9
00:00:26,470 --> 00:00:30,880
That can be done in O(nÂ²) time for an in vertext graph.

10
00:00:30,880 --> 00:00:34,250
Then you take a walk along the tree, and you can guess that

11
00:00:34,250 --> 00:00:37,340
that can be done in polynomial time as well.

12
00:00:37,340 --> 00:00:42,750
The running time of this alogirthm here in total---so it's a polynomial time algorithm.

13
00:00:42,750 --> 00:00:47,880
Now where I probably need to convince you is that this is actually

14
00:00:47,880 --> 00:00:52,250
a good approximation algorithm, because it sounds so simple again doesn't it?

15
00:00:52,250 --> 00:00:59,000
My claim now is, as I've written here, that this is an approximation algorithm for shortest tour.

16
00:00:59,000 --> 00:01:01,800
Actually it's a constant factor approximation algorithm for that problem.

17
00:01:01,800 --> 00:01:03,830
So how come?

18
00:01:03,830 --> 00:01:07,040
Well, since you already saw one constant factor approximation algorithm,

19
00:01:07,040 --> 00:01:10,640
I am actually going to let you figure this out.

20
00:01:10,640 --> 00:01:14,780
Let's start out by taking 2 numbers and comparing them.

21
00:01:14,780 --> 00:01:18,460
The first number is the weight of the minimum spanning tree,

22
00:01:18,460 --> 00:01:25,100
and by weight I simply mean if you take the sum over all edges that are in the spanning tree,

23
00:01:25,100 --> 00:01:27,190
that's what I will call the weight of the spanning tree.

24
00:01:27,190 --> 00:01:32,210
The second one is going to be the length of the shortest tour for the network.

25
00:01:32,210 --> 00:01:37,690
Now first of all I would like you to tell me what you can say about these 2 numbers.

26
00:01:37,690 --> 00:01:39,690
How do they compare?

27
00:01:39,690 --> 00:01:42,960
Is the weight of the tree smaller than the length of the shortest tour?

28
00:01:42,960 --> 00:01:47,110
Is it smaller than or equal to the length of the shortest tour?

29
00:01:47,110 --> 00:01:49,680
Are both the same value?

30
00:01:49,680 --> 00:01:53,890
Or is the weight of the tree larger than or equal to the length of the shortest tour?

31
00:01:53,890 --> 00:01:58,250
Or is it always larger than the length of the shortest tour?

32
00:01:58,250 --> 99:59:59,999
Please select which one is correct here.
