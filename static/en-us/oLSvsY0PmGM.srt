1
00:00:00,460 --> 00:00:03,449
Now, the goal of this unit will be for you to write a PhysicsEngineClass to

2
00:00:03,449 --> 00:00:07,882
manage the interaction of Box2D to your game engine. Now, first things first,

3
00:00:07,882 --> 00:00:11,054
is that we'll need to create a new PhysicsEngineClass and create a global

4
00:00:11,054 --> 00:00:16,232
instance variable for it. Now the core of Box2D simulation is a variable type

5
00:00:16,232 --> 00:00:20,482
called World. Which is used as the main handle to the rest of the APIs. As

6
00:00:20,482 --> 00:00:24,252
such, we need to add a create function to our class. And inside here, create a

7
00:00:24,252 --> 00:00:28,322
new instance of the World object. Note, that typically, the World constructor

8
00:00:28,322 --> 00:00:31,870
takes a vector that represents the gravity of the world. Since now, we're a top

9
00:00:31,870 --> 00:00:35,160
down game, we really don't need a 2D gravity vector. So we're just going to

10
00:00:35,160 --> 00:00:38,417
leave this as 0, 0 for now. Now, the second variable in the constructor, is a

11
00:00:38,417 --> 00:00:41,342
boolean, which tells Box2D, if an object is allowed to sleep or not, given some

12
00:00:41,342 --> 00:00:45,862
time threshold tolerance for the computation. Now, for our purposes, we don't

13
00:00:45,862 --> 00:00:49,892
want to let objects sleep, so we set this, to false. The core of Box2D

14
00:00:49,892 --> 00:00:54,385
simulation is a variable type called World. Now, this is going to be used as

15
00:00:54,385 --> 00:00:57,940
the main handle to the rest of the API's that we're going to use. As such, we

16
00:00:57,940 --> 00:01:00,890
need to add a create Function to our class, and inside of there create an

17
00:01:00,890 --> 00:01:05,352
instance of the World object. So, to move on, go ahead and create an instance

18
00:01:05,352 --> 00:01:09,140
of the World object passing in a vector and a boolean value.
