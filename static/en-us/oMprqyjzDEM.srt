1
00:00:00,320 --> 00:00:04,150
Now what's also interesting, is that
you can use the allocation tracker tool

2
00:00:04,150 --> 00:00:06,070
to identify the extraneous memory bloat,

3
00:00:06,070 --> 00:00:08,119
that arises from stale
views residing in memory.

4
00:00:08,119 --> 00:00:11,420
Now as you can see here,
I've selected a common set of objects or

5
00:00:11,420 --> 00:00:13,790
classes that are still
residing on the heap.

6
00:00:13,790 --> 00:00:15,090
Now these objects are put onto the heap,

7
00:00:15,090 --> 00:00:17,380
when we call onCreate on
this particular activity.

8
00:00:17,380 --> 00:00:22,140
Now each time the device is rotated,
a new activity is created and

9
00:00:22,140 --> 00:00:25,910
thus a similar set of objects are
basically inflated and put on the heap.

10
00:00:25,910 --> 00:00:29,390
So if a leak exists, and
we rotate the device,

11
00:00:29,390 --> 00:00:32,159
the garbage collector won't be able
to cle, clean up these items and

12
00:00:32,159 --> 00:00:36,220
will essentially replicate a large
set of these on, on the heap.

13
00:00:36,220 --> 00:00:37,860
An allocation tracker
will help you see this.
