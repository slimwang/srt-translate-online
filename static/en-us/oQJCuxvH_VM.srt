1
00:00:00,240 --> 00:00:03,320
Let's talk about how we fix that issue. Ginger makes it

2
00:00:03,320 --> 00:00:05,650
easy to do this. There are two ways, I'll show you the

3
00:00:05,650 --> 00:00:10,540
way that's simplest first. They've got the syntax for adding a

4
00:00:10,540 --> 00:00:13,893
pipe and then a filter. There are a couple, there are lots

5
00:00:13,893 --> 00:00:16,000
of built in features in the Ginger. One of them is

6
00:00:16,000 --> 00:00:19,330
called escape. So if you say when you print your item, if

7
00:00:19,330 --> 00:00:22,550
you say pipe escape, it'll actually get escaped. Let's see what

8
00:00:22,550 --> 00:00:25,200
this looks like in our browser. Now when I reload this page,

9
00:00:26,200 --> 00:00:28,490
the junk is actually getting escaped. And if I

10
00:00:28,490 --> 00:00:31,420
look at the source code for this page, we can

11
00:00:31,420 --> 00:00:34,190
see down here that Ginger ran it through an HTML

12
00:00:34,190 --> 00:00:38,700
escaping function and replaced the less than symbol with ampersand

13
00:00:38,700 --> 00:00:42,580
less than, and the greater than symbol with ampersand

14
00:00:42,580 --> 00:00:46,680
greater than. Just like we did in the previous lesson.

15
00:00:46,680 --> 00:00:48,660
And again, you can see that down here with the

16
00:00:48,660 --> 00:00:51,830
h1. But that's not how I prefer to do things

17
00:00:51,830 --> 00:00:54,950
in any templating language. Because it's a little error prone.

18
00:00:54,950 --> 00:00:56,440
If you forget to put this in, you've got a

19
00:00:56,440 --> 00:00:59,640
security hole. There is another way around this, however. If

20
00:00:59,640 --> 00:01:03,870
you go, when you initialize Ginger, if you say this, auto

21
00:01:03,870 --> 00:01:08,280
escape equals true, Ginger will automatically escape all variable substitutions.

22
00:01:08,280 --> 00:01:09,840
So let's make sure this is still working in our

23
00:01:09,840 --> 00:01:13,520
browser. I reload this page, trust me I reloaded it,

24
00:01:13,520 --> 00:01:17,500
nothing changed. If we check our source code, again nothing changed.

25
00:01:17,500 --> 00:01:20,800
We can see it's all skipped properly here. The reason I like

26
00:01:20,800 --> 00:01:23,970
to do this, is that prevents you from accidentally making a mistake.

27
00:01:23,970 --> 00:01:26,700
It's a lot easier to see that oh, I need to deal

28
00:01:26,700 --> 00:01:29,850
with this input when it's here, than it is to see a

29
00:01:29,850 --> 00:01:32,380
subtle error or you know, not be able to see it at

30
00:01:32,380 --> 00:01:35,280
all when a user is trying to hack your website. So I

31
00:01:35,280 --> 00:01:39,690
always, in every templating language that I use, look for the equivalent

32
00:01:39,690 --> 00:01:42,700
of auto escape equals two. And so far every one I have used

33
00:01:42,700 --> 00:01:46,080
has something along this line. Now what if you actually want

34
00:01:46,080 --> 00:01:49,600
to display the HTML? Well, there is a filter for just

35
00:01:49,600 --> 00:01:52,750
that. And you can say safe, pipe safe. And so if

36
00:01:52,750 --> 00:01:55,810
you know the HTML is safe, you can undo it this way,

37
00:01:55,810 --> 00:01:57,090
and I feel like this is the best way, you to

38
00:01:57,090 --> 00:02:02,070
opt in to the unsafe way rather than opting in to the

39
00:02:02,070 --> 00:02:04,960
safe way. So if I save this and we go back

40
00:02:04,960 --> 00:02:07,740
to our browser and I reload this page, we can see that

41
00:02:07,740 --> 00:02:10,389
it is rendering unsafely again. But at least this time we

42
00:02:10,389 --> 00:02:12,930
did it on purpose, we knew what to expect. And you

43
00:02:12,930 --> 00:02:14,930
do this if you want to you know, sanitize the out

44
00:02:14,930 --> 00:02:17,360
put a little bit. For example if your building a comment page

45
00:02:17,360 --> 00:02:20,000
and you want the uses to have some amount of formatting

46
00:02:20,000 --> 00:02:22,490
but not everything. You can only allow certain things and then

47
00:02:22,490 --> 00:02:25,730
print it using this filter. But anyways, let's get that out

48
00:02:25,730 --> 00:02:28,790
of here because we don't, we don't trust our shopping cart users.
