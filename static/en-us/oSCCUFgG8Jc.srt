1
00:00:00,290 --> 00:00:02,350
So in a previous lesson we created a class

2
00:00:02,350 --> 00:00:05,850
called movie. Now this class had the following attributes,

3
00:00:05,850 --> 00:00:08,875
the movie's title, its storyline, a link to the

4
00:00:08,875 --> 00:00:11,460
movie's poster image, and a link to its YouTube

5
00:00:11,460 --> 00:00:14,670
trailer. Now in addition to these things, the class

6
00:00:14,670 --> 00:00:18,690
movie also had a function called show_trailer. After we

7
00:00:18,690 --> 00:00:21,800
had defined this class movie we created several instances

8
00:00:21,800 --> 00:00:25,830
of this class. Instances like Toy Story and Avatar.

9
00:00:25,830 --> 00:00:28,270
Now further imagine that we wanted to create

10
00:00:28,270 --> 00:00:32,390
another class called TvShow. I would think that

11
00:00:32,390 --> 00:00:34,970
this class would have details like the title

12
00:00:34,970 --> 00:00:38,620
of the show, its season and episode number. And

13
00:00:38,620 --> 00:00:40,770
also, the TV station that this show is

14
00:00:40,770 --> 00:00:43,690
aired on. Additionally, this class could also have

15
00:00:43,690 --> 00:00:47,280
a function called, get_local_listings. Once we've created a

16
00:00:47,280 --> 00:00:51,020
class called TvShow, we can create multiple instances of

17
00:00:51,020 --> 00:00:54,440
this class, instances like, season one, episode one

18
00:00:54,440 --> 00:00:58,820
of Breaking Bad, and the final episode of Seinfeld.

19
00:00:58,820 --> 00:01:01,200
Alright, so if we continue our thought experiment

20
00:01:01,200 --> 00:01:03,660
here, we can further imagine that there can be

21
00:01:03,660 --> 00:01:06,280
several items that both of these classes can

22
00:01:06,280 --> 00:01:10,260
share amongst each other. Things like title for sure,

23
00:01:10,260 --> 00:01:12,720
also things like duration of the movie and

24
00:01:12,720 --> 00:01:16,040
duration of the TV show in minutes. So the

25
00:01:16,040 --> 00:01:18,240
best way to structure this code would be

26
00:01:18,240 --> 00:01:21,120
to create another class called Video, which would

27
00:01:21,120 --> 00:01:23,968
have two attributes. The video's title, and the

28
00:01:23,968 --> 00:01:28,490
video's duration. And the class Movie, could inherit from

29
00:01:28,490 --> 00:01:31,370
this class Video. To do this, we would

30
00:01:31,370 --> 00:01:34,740
have to add the class name Video, inside these

31
00:01:34,740 --> 00:01:38,040
parentheses. Now, this would mean that class Movie,

32
00:01:38,040 --> 00:01:42,720
would inherit title and duration, from class Video. Additionally,

33
00:01:42,720 --> 00:01:46,030
the class TvShow could also inherit from class

34
00:01:46,030 --> 00:01:48,610
Video. To do this we would also have

35
00:01:48,610 --> 00:01:51,248
to add the class name Video inside these

36
00:01:51,248 --> 00:01:55,560
parentheses. Now this would mean that class TvShow would

37
00:01:55,560 --> 00:01:59,760
inherit title and duration from class video. Now

38
00:01:59,760 --> 00:02:01,540
you can clearly see how we can write a

39
00:02:01,540 --> 00:02:04,570
piece of code. In this case, class Video,

40
00:02:04,570 --> 00:02:08,430
and continue to reuse it in multiple different places.

41
00:02:08,430 --> 00:02:11,400
Another big benefit of writing code this way,

42
00:02:11,400 --> 00:02:14,330
in addition to just reusing code, is that

43
00:02:14,330 --> 00:02:17,590
it allows us to follow an intuitive model

44
00:02:17,590 --> 00:02:20,970
of how things exist in our brain. So intuitively

45
00:02:20,970 --> 00:02:27,260
speaking, we know what videos are, we also know what TV shows and movies are. So

46
00:02:27,260 --> 00:02:30,110
writing code in this way allows programmers to

47
00:02:30,110 --> 00:02:33,320
map how things exist in our brain onto code.
