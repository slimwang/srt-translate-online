1
00:00:00,680 --> 00:00:04,340
One of the strengths of Gradle lies
in it's extensible domain model.

2
00:00:04,340 --> 00:00:07,400
At the heart of this model
is the concept of tasks.

3
00:00:07,400 --> 00:00:11,520
A task is a self-contained unit of
work that Gradle can reason about.

4
00:00:11,520 --> 00:00:13,880
At the core of a task is its action, for

5
00:00:13,880 --> 00:00:17,730
example we might declare a task
to compile some Java sources or

6
00:00:17,730 --> 00:00:22,030
to copy some files from one directory
to another, or to simply print hello.

7
00:00:22,030 --> 00:00:25,070
A task can perform some
action in isolation but

8
00:00:25,070 --> 00:00:28,230
it can also declare
dependencies on other tasks.

9
00:00:28,230 --> 00:00:31,440
Gradle will ensure that all
these dependencies are run and

10
00:00:31,440 --> 00:00:34,940
ensure all of their dependencies and
so on and so on.

11
00:00:34,940 --> 00:00:37,300
A task can also define its inputs and

12
00:00:37,300 --> 00:00:40,560
its outputs, the files that
it reads from and writes to.

13
00:00:40,560 --> 00:00:43,980
This allows Gradle to determine if
a task needs to do its work, or

14
00:00:43,980 --> 00:00:48,390
if everything is already up to date,
in which case it doesn't need to run.

15
00:00:48,390 --> 00:00:51,120
We'll explore all these features
later on in this lesson, but for

16
00:00:51,120 --> 00:00:54,360
now let's get Gradle up and
running and execute our first task.
