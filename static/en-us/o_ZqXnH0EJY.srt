1
00:00:00,970 --> 00:00:02,710
Let's go back to our second example,

2
00:00:02,710 --> 00:00:07,179
the one with the two text fields and
also a label.

3
00:00:07,179 --> 00:00:09,990
I want the label to take
the space it needs, and

4
00:00:09,990 --> 00:00:14,169
the text fields to share
equally the remaining space.

5
00:00:14,169 --> 00:00:15,820
Can you think of a way of doing this?

6
00:00:16,820 --> 00:00:20,129
We know how to make several
views fill equally.

7
00:00:20,129 --> 00:00:21,149
Hint, hint.

8
00:00:21,149 --> 00:00:26,001
Why don't we change
the distribution to fill equally?

9
00:00:26,001 --> 00:00:28,999
Close, but no cigar.

10
00:00:28,001 --> 00:00:31,170
I want the label to take
only the space it needs, and

11
00:00:31,170 --> 00:00:36,109
then have all the remaining space
equally filled by the text fields.

12
00:00:36,109 --> 00:00:37,519
How can we fix this?

13
00:00:37,520 --> 00:00:41,200
The answer is by composing stack views.

14
00:00:41,200 --> 00:00:46,540
The two text fields will be inside
a stack view with Fill Equally.

15
00:00:46,539 --> 00:00:49,726
Well, this Stack View will
be inside another one,

16
00:00:49,726 --> 00:00:52,864
along with a label with
a fill distribution.

17
00:00:52,865 --> 00:00:55,390
Da-dum.

18
00:00:55,390 --> 00:00:59,429
This strategy of stuffing
stack views inside stack views

19
00:00:59,429 --> 00:01:02,369
is going to be a bread and
butter from now on.

20
00:01:02,369 --> 00:01:06,879
However, before we move to more advanced
layouts, lets try some vertical layouts.

