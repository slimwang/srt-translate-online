1
00:00:00,220 --> 00:00:03,230
Let's walk through all the choices I gave you,

2
00:00:03,230 --> 00:00:05,689
and try to understand which can be categorized as an

3
00:00:05,689 --> 00:00:09,660
abstraction, and which is not an abstraction. Door knob

4
00:00:09,660 --> 00:00:12,510
is something that we use all the time to enter

5
00:00:12,510 --> 00:00:14,950
a room, when you open a door. And that's

6
00:00:14,950 --> 00:00:18,570
an abstraction because we don't know how the door knob

7
00:00:18,570 --> 00:00:21,460
may actually be implemented, nor do we care. So that's

8
00:00:21,460 --> 00:00:25,450
an abstraction. Instruction set architecture of a processor is once

9
00:00:25,450 --> 00:00:28,630
again an abstraction, because it tells you what

10
00:00:28,630 --> 00:00:31,360
the processor's capable of doing, not how it is

11
00:00:31,360 --> 00:00:33,760
doing it. Now the third choice I'm giving you

12
00:00:33,760 --> 00:00:36,530
here, is the number of pins coming out of

13
00:00:36,530 --> 00:00:39,980
a chip. Now, this is being very specific

14
00:00:39,980 --> 00:00:43,080
as to, what exactly is going on here? That

15
00:00:43,080 --> 00:00:45,858
these are exactly the number of pins coming out

16
00:00:45,858 --> 00:00:50,570
of a chip, and therefore it's not an abstraction.

17
00:00:50,570 --> 00:00:53,930
The next choice is an and logic gate,

18
00:00:53,930 --> 00:00:57,100
again here it's only saying what the function of

19
00:00:57,100 --> 00:00:58,840
the logic gate is, not how it is

20
00:00:58,840 --> 00:01:02,800
doing it. And therefore, this is an abstraction. The

21
00:01:02,800 --> 00:01:06,050
next choice is transistor, and this again, is

22
00:01:06,050 --> 00:01:09,720
an abstraction, because we don't know how exactly the

23
00:01:09,720 --> 00:01:12,680
transistor is implemented. All we know is a

24
00:01:12,680 --> 00:01:16,210
functionality of the transistor. For instance, if a transistor

25
00:01:16,210 --> 00:01:18,540
is used as a switching device, you know

26
00:01:18,540 --> 00:01:21,910
that using the transistor you can turn it on

27
00:01:21,910 --> 00:01:24,280
and off, but you don't know what exactly is

28
00:01:24,280 --> 00:01:26,550
going on under the covers in order to make

29
00:01:26,550 --> 00:01:29,820
that work in the solid state physics. The next

30
00:01:29,820 --> 00:01:34,350
choice is INT data type. Now, again it's only

31
00:01:34,350 --> 00:01:37,070
saying that it is a data type and the

32
00:01:37,070 --> 00:01:41,520
name is INT. And therefore you can use this

33
00:01:41,520 --> 00:01:46,690
as a data type that holds integers in your program, but it doesn't tell you how

34
00:01:46,690 --> 00:01:52,990
the data type is actually implemented by the compiler and therefore INT datatype

35
00:01:52,990 --> 00:01:58,580
is also an abstraction. The last choice is saying the exact location of base

36
00:01:58,580 --> 00:02:01,642
pads in baseball field. Again, this one

37
00:02:01,642 --> 00:02:06,180
is being very specific about some particular feature,

38
00:02:06,180 --> 00:02:09,360
namely, base pads and how they're laid out in

39
00:02:09,360 --> 00:02:13,010
a baseball field and therefore, this is not an abstraction.
