1
00:00:00,000 --> 00:00:06,660
So 2^n, if instances are smaller than 10 that means that the running time will be

2
00:00:06,660 --> 00:00:11,200
around 1000 time units or 1024 time units to be precise.

3
00:00:11,200 --> 00:00:15,370
If it's 20, you will have about 1 million time units.

4
00:00:15,370 --> 00:00:21,670
If it's 30, you will have about 1 billion time units. So 1 thousand times 1 thousand times 1 thousand.

5
00:00:21,670 --> 00:00:25,390
If it's larger than 100, then of course you have a huge running time here.

6
00:00:25,390 --> 00:00:29,230
You will have a running time that is about 10³⁰.

7
00:00:29,230 --> 00:00:36,600
It's clear that when your instances get larger than 100, you would not be able to use brute force.

8
00:00:36,600 --> 00:00:41,830
And on the other hand, if you just need 1000 time units, I think you don't even care if you have

9
00:00:41,830 --> 00:00:47,960
1 instance or 100 or 10,000 because if you think about it a current desktop computer

10
00:00:47,960 --> 00:00:52,630
is running on gigahertz so it can perform several billion operations per second.

11
00:00:52,630 --> 00:00:58,000
Even solving 10,000 instances where each one is small is usually not an issue unless

12
00:00:58,000 --> 00:01:00,170
you're working in a very special environment.

13
00:01:00,170 --> 00:01:04,940
What about a million time units? I would clearly say well solving that once is okay.

14
00:01:04,940 --> 00:01:08,790
Again, your computer can perform several billion operations per second.

15
00:01:08,790 --> 00:01:13,280
Solving 100 instances is usually okay and even solving 10,000 instances.

16
00:01:13,280 --> 00:01:18,870
So 10,000 times 1 million that's 10 billion, which sounds like a lot but actually again

17
00:01:18,870 --> 00:01:21,660
desktop computers can handle this in most cases.

18
00:01:21,660 --> 00:01:26,480
Now what about this case here? Well, 1 billion is okay. We just said that over here.

19
00:01:26,480 --> 00:01:29,830
And we said even 10 billion was okay. So what about 100 billion?

20
00:01:29,830 --> 00:01:34,840
Well, this I think here is kind of debatable but I would still say it's worth a try probably.

21
00:01:34,840 --> 00:01:39,990
Then you have to probably wait for two or three or four days until all instances are solved

22
00:01:39,990 --> 00:01:43,190
or maybe even one month but in most cases that should be okay.

23
00:01:43,190 --> 00:01:48,340
You wouldn't even attempt to solve NP-commplete problem in real time for example.

24
00:01:48,340 --> 00:01:50,360
This one here I think is the most debatable.

25
00:01:50,360 --> 00:01:55,190
So 10,000 billion I would say in a general case you wouldn't want to do that.

26
00:01:55,190 --> 00:01:58,950
I mean, there might be special cases if you work for the secret service

27
00:01:58,950 --> 00:02:02,440
and you have a huge cluster of computers available but here you're kind of

28
00:02:02,440 --> 00:02:07,400
reaching the limits of brute force and here of course as we just said you've already reached that.

29
00:02:07,400 --> 00:02:13,250
So again, brute force can work if the instances are small or maybe even moderate

30
00:02:13,250 --> 00:02:19,660
but this approach is bound to fail at some point and that's when to apply intelligence

31
00:02:19,660 --> 99:59:59,999
instead of brute force using intelligent force.
