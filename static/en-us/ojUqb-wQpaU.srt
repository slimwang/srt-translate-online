1
00:00:00,440 --> 00:00:01,530
To achieve its goals,

2
00:00:01,530 --> 00:00:06,590
an operating system supports a number of higher-level abstractions, and

3
00:00:06,590 --> 00:00:11,300
then a number of key mechanisms that operate on top of these instructions.

4
00:00:11,300 --> 00:00:14,120
For instance, some of these abstractions, like process and

5
00:00:14,120 --> 00:00:20,210
thread, correspond to the applications that the operating system executes.

6
00:00:20,210 --> 00:00:25,005
Some corresponding mechanisms would be mechanisms to create, to launch

7
00:00:25,005 --> 00:00:31,020
an application to start executing, or to schedule it to actually run on the CPU.

8
00:00:31,020 --> 00:00:35,500
Other OS abstractions like file or socket that we've mentioned before or

9
00:00:35,500 --> 00:00:39,040
memory page, they may more closely correspond to

10
00:00:39,040 --> 00:00:43,040
the hardware resources that the operating systems need to manage.

11
00:00:43,040 --> 00:00:47,950
Storage device like disk, or a network card for the socket, or the actual

12
00:00:47,950 --> 00:00:52,980
memories, so, memory pages in abstraction abstract memory as a resource.

13
00:00:52,980 --> 00:00:56,712
To operate on these abstractions, the operating system may

14
00:00:56,712 --> 00:01:01,251
incorporate mechanisms to open gain access to a particular device or

15
00:01:01,251 --> 00:01:05,786
hardware component, to write to it, to update its state, to allocate to

16
00:01:05,786 --> 00:01:10,134
make sure that a particular application has access to that resource.

17
00:01:10,134 --> 00:01:11,970
These are some examples of mechanisms.

18
00:01:13,210 --> 00:01:17,120
Operating systems may also integrate specific policies that determine

19
00:01:17,120 --> 00:01:22,850
exactly how these mechanisms will be used to manage the underlying hardware.

20
00:01:22,850 --> 00:01:26,030
For instance, a policy can control what is the maximum number of

21
00:01:26,030 --> 00:01:30,000
sockets that a process can actually have access to.

22
00:01:30,000 --> 00:01:35,630
Or they may control which data will be removed from physical memory, for

23
00:01:35,630 --> 00:01:39,007
instance, based on some algorithm like least-recently used.
