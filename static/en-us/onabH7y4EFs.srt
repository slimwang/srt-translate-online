1
00:00:00,210 --> 00:00:04,418
Well let's figure this out together. In this loop i traverses all rows. In this

2
00:00:04,418 --> 00:00:07,651
nested loop for each row j traverses all columns and we need to figure out x

3
00:00:07,651 --> 00:00:14,040
and y. Let's look at our picture. As i goes zero, one, two, three and so on the

4
00:00:14,040 --> 00:00:20,466
y position goes 30, 60, 90 and so on. So the y values are 30 times i. I should

5
00:00:20,466 --> 00:00:24,434
really be using this constant over here so let me fix that up and for the same

6
00:00:24,434 --> 00:00:30,528
reason the x values of width times j. What are our blue and green? Let's look

7
00:00:30,528 --> 00:00:36,270
at the picture again as I goes larger of the row index, the blueness increases.

8
00:00:36,270 --> 00:00:42,340
When I add 0 blueness is 0. When i is the maximum value of 15, the blueness is

9
00:00:42,340 --> 00:00:51,540
255. So in general, i is 255 divided by the largest value for i. Notice the -1.

10
00:00:51,540 --> 00:00:57,281
There's 16 rows, numbered 0 to 15. And at the 15th one we want the full value

11
00:00:57,281 --> 00:01:02,751
of 255. The formula for the greens is exactly analogous. When j is zero, green

12
00:01:02,751 --> 00:01:11,119
is zero. When j is 15, we have 15 times 255 over 15 or 255. And for values in

13
00:01:11,119 --> 00:01:16,324
between, the green grows as j does. Again, the point of this example was that

14
00:01:16,324 --> 00:01:20,670
you need two nested loops to control the rows and the columns.
