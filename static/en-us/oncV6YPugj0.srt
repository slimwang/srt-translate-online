1
00:00:00,260 --> 00:00:03,750
So just a little bit more
detail of how TOR works.

2
00:00:03,750 --> 00:00:06,230
So it's called onion routing,

3
00:00:06,230 --> 00:00:10,680
is what I think the example we had was
sort of doing something like that.

4
00:00:10,680 --> 00:00:12,430
It uses onion routing.

5
00:00:12,430 --> 00:00:16,300
So to start,
the client we are talking about

6
00:00:16,300 --> 00:00:19,560
uses a director service to
get a set of TOR nodes.

7
00:00:19,560 --> 00:00:24,720
These nodes would then help us route
the message from Alice to Bob's website.

8
00:00:24,720 --> 00:00:29,610
You pick a random set and
order it, so the message is

9
00:00:29,610 --> 00:00:32,958
going to go from one to the next
in the order that we come up with.

10
00:00:32,958 --> 00:00:37,790
Alice is going to prepare her message
and creates these onion layers,

11
00:00:37,790 --> 00:00:41,420
so in the end it's going to
go to Bob's website, but

12
00:00:41,420 --> 00:00:46,080
then we know it's going to be sent
to Bob's website by the last node.

13
00:00:46,080 --> 00:00:49,150
And its predecessor is going to send
it to that and things like that,

14
00:00:49,150 --> 00:00:53,830
so the onion layers that we're talking
about essentially, when you peel one,

15
00:00:53,830 --> 00:00:56,200
you know where it goes next,
okay, but that's all.

16
00:00:56,200 --> 00:01:00,360
You don't see any further down
through the layers beyond that.

17
00:01:00,360 --> 00:01:01,680
So we peel one layer.

18
00:01:01,680 --> 00:01:04,870
We know who to send it to next in
this order that we're talking about.

19
00:01:04,870 --> 00:01:09,220
And that node is going to peel another
layer, and send it to Its successor, and

20
00:01:09,220 --> 00:01:10,700
we're going to continue like that.

21
00:01:10,700 --> 00:01:15,680
And this peeling of the layers actually
is done through encryption using keys,

22
00:01:15,680 --> 00:01:17,530
you encrypted with someone's public key.

23
00:01:17,530 --> 00:01:21,790
So, only they can decrypt it because
they have the corresponding private key,

24
00:01:21,790 --> 00:01:24,900
and that's how this thing works.

25
00:01:24,900 --> 00:01:27,140
So that's anonymous communication.

26
00:01:27,140 --> 00:01:30,998
Well, you can, Alice doesn't
have to say that it's Alice

27
00:01:30,998 --> 00:01:34,712
if Bob's website demands some
sort of identity for her.

28
00:01:34,712 --> 00:01:38,149
You can create sort of fictional or
pseudo identities,

29
00:01:38,149 --> 00:01:40,352
you can have multiple one of those.

30
00:01:40,352 --> 00:01:45,190
So somebody when you switch your
identity they can't say that Alice is

31
00:01:45,190 --> 00:01:50,028
doing A, B, and C, if you switched
after A, then whoever is tracking

32
00:01:50,028 --> 00:01:55,000
would think B is being done by somebody
other than whoever had done A.

33
00:01:55,000 --> 00:02:00,029
So, psuedo-anonymity is not a way
by which we tried to sort of defeat

34
00:02:00,029 --> 00:02:05,508
the tracking and making the kind of
inferences that we're talking about.

35
00:02:05,508 --> 00:02:08,814
And of course,
we talked about aggregation and

36
00:02:08,814 --> 00:02:13,691
privacy enhancing transformations
like anonymization of data, and

37
00:02:13,691 --> 00:02:18,675
diversity in data, so someone is
not able to inference back to you.

38
00:02:18,675 --> 00:02:22,925
This must be some information
about you and things like that, so

39
00:02:22,925 --> 00:02:26,110
the variety of this technologies and

40
00:02:26,110 --> 00:02:31,140
techniques that one can use to
improve privacy to if not defeat,

41
00:02:31,140 --> 00:02:35,490
at least reduce that effectiveness
of tracking, and that happens in

42
00:02:35,490 --> 00:02:40,390
collection of information that can
be tied to a particular identity.

43
00:02:40,390 --> 00:02:42,530
This technology sort of
helps us disrupt that.
