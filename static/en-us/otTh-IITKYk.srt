1
00:00:00,320 --> 00:00:01,910
If we try the smaller image,

2
00:00:01,910 --> 00:00:06,210
then we see that the image is actually
smaller than the size of the screen.

3
00:00:06,210 --> 00:00:11,050
So it doesn't matter if we choose scaleType
to be center or centerCrop.

4
00:00:11,050 --> 00:00:13,780
The full image will be able
to be shown in the view.

5
00:00:13,780 --> 00:00:16,410
And this is what it looks
like with a photograph.

6
00:00:16,410 --> 00:00:18,100
Now let's try the icon.

7
00:00:18,100 --> 00:00:19,380
That was called Android.

8
00:00:20,780 --> 00:00:23,880
So the size of the icon is smaller
than the size of the screen so

9
00:00:23,880 --> 00:00:28,610
if we do wrap_content for the width and
height then it should fit on the screen.

10
00:00:28,610 --> 00:00:31,080
It doesn't matter if we use center or
centerCrop.

11
00:00:31,080 --> 00:00:36,020
Now what happens if we set the image
view to be larger than the device size?

12
00:00:36,020 --> 00:00:38,210
Say we pick a really large
number like 900dp and width and

13
00:00:38,210 --> 00:00:44,270
height, then the image you will take
up a size larger than the screen size.

14
00:00:44,270 --> 00:00:46,240
But the scaleType is set to center.

15
00:00:46,240 --> 00:00:50,440
So, the icon will be centered
within that humongous image view.

16
00:00:50,440 --> 00:00:52,050
If we choose centerCrop though,

17
00:00:52,050 --> 00:00:57,350
the system tries to scale the image
up to be a square of 900dp by 900dp.

18
00:00:57,350 --> 00:01:01,230
And then it centers and crops the image.

19
00:01:01,230 --> 00:01:04,069
Now that you've experimented
with the imageView xml,

20
00:01:04,069 --> 00:01:07,350
hopefully you have a better idea of
how to display images in your app.
