1
00:00:00,810 --> 00:00:02,420
All right!
Your done.

2
00:00:02,420 --> 00:00:03,560
Lets go over my solution.

3
00:00:04,570 --> 00:00:07,340
Before we actually go to lay out
the bottom half of our details view

4
00:00:07,340 --> 00:00:08,550
lets strategize.

5
00:00:08,550 --> 00:00:12,180
We have two columns,
one that contains these headers, and

6
00:00:12,180 --> 00:00:13,930
one that contains data.

7
00:00:13,930 --> 00:00:17,850
The headers column is pretty
easy it's all left justified,

8
00:00:17,850 --> 00:00:21,110
32 dp away from the edge.

9
00:00:21,110 --> 00:00:24,730
The other column is also justified

10
00:00:24,730 --> 00:00:30,630
right from the other edge but all three
of those elements are aligned left.

11
00:00:30,630 --> 00:00:34,810
This would be very tricky to do with
anything else other then a grid lay out.

12
00:00:34,810 --> 00:00:39,040
We're going to let these three elements
actually take up the expanded space.

13
00:00:39,040 --> 00:00:40,360
Let's look at how we implemented that.

14
00:00:41,560 --> 00:00:44,020
All right, so
let's take a look at our grid layout.

15
00:00:44,020 --> 00:00:47,855
As you can see, the padding in
the bottom and top is 16DPR.

16
00:00:47,855 --> 00:00:51,920
Abc_action_bar_content_inset_material.

17
00:00:51,920 --> 00:00:54,040
Our padding in left and
right, in start at end, for

18
00:00:54,040 --> 00:00:57,750
right to left languages,
is forecase_detail_horizontal_padding.

19
00:00:57,750 --> 00:01:01,010
Or 32DP as we defined
it in our dimensions.

20
00:01:01,010 --> 00:01:03,670
Let's take a look at our first row and
column.

21
00:01:03,670 --> 00:01:05,990
As you can see,
we're using columnWeight 1.

22
00:01:05,990 --> 00:01:09,090
Let the layout manager know

23
00:01:09,090 --> 00:01:12,460
that this text view is actually going to
expand to take up any additional space.

24
00:01:13,750 --> 00:01:17,200
We use a rowWeight of 1 to also show
this row is going to participate in any

25
00:01:17,200 --> 00:01:19,580
additional space that
the layout manager may have.

26
00:01:20,660 --> 00:01:22,550
And here's our first column.

27
00:01:22,550 --> 00:01:24,610
And here's our second column.

28
00:01:24,610 --> 00:01:27,170
Notice that we're not using
any weights here at all.

29
00:01:27,170 --> 00:01:29,390
Other than that this is pretty simple,

30
00:01:29,390 --> 00:01:31,340
all of our rows have
a row weight of one, so

31
00:01:31,340 --> 00:01:34,950
they'll all participate in the extra
space, so they'll all be spaced evenly.

32
00:01:34,950 --> 00:01:36,500
This gives the layout a nice even look.

33
00:01:37,670 --> 00:01:38,200
And that's it.

34
00:01:39,200 --> 00:01:41,430
That's pretty straight forward.

35
00:01:41,430 --> 00:01:44,570
Again, there's not necessarily
one solution to this.

36
00:01:44,570 --> 00:01:46,380
One of the things I like about layouts,

37
00:01:46,380 --> 00:01:49,180
is that each one of them is
like solving a little puzzle.

38
00:01:49,180 --> 00:01:51,340
All right, it's running in the emulator.

39
00:01:51,340 --> 00:01:53,050
And there's our new detail view

40
00:01:54,190 --> 00:01:56,770
with that bottom section
looking exactly as we intended.
