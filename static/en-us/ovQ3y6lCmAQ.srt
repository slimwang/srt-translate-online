1
00:00:00,320 --> 00:00:02,849
We've just taken a look
at boolean expressions.

2
00:00:05,769 --> 00:00:09,160
They're great for determining whether
an expression is true or false.

3
00:00:09,160 --> 00:00:13,350
What if we wanted that result to control
something that happens in an app?

4
00:00:13,349 --> 00:00:14,769
Or we can use it for that, too.

5
00:00:16,980 --> 00:00:20,820
For example, imagine an app where
the user can win or lose a challenge.

6
00:00:22,120 --> 00:00:23,950
If it's true that the user wins,

7
00:00:23,949 --> 00:00:25,780
then you might want to
display a winning screen.

8
00:00:27,260 --> 00:00:30,005
Otherwise, you might want to display
a screen that says, try again.

9
00:00:30,004 --> 00:00:35,310
Boolean expressions can be used to
execute different actions in our apps.

10
00:00:35,310 --> 00:00:37,609
Programmers refer to
this as control flow.

11
00:00:38,890 --> 00:00:41,539
This statements are a fundamental
tool of control flow.

12
00:00:42,609 --> 00:00:46,689
We'll use if statements to check for
conditions and then execute actions.

13
00:00:46,689 --> 00:00:50,059
For example, if you're hungry,
you probably want to eat.

14
00:00:50,060 --> 00:00:52,890
The Swift code for this decision
might look something like this.

15
00:00:53,950 --> 00:00:57,140
For a slightly more complex example,
if you want a teddy bear, and

16
00:00:57,140 --> 00:00:58,929
you have money for it, then buy it.

17
00:01:01,350 --> 00:01:03,158
And in code,
this action might look like this.

18
00:01:05,239 --> 00:01:08,719
Finally, if it's raining, then we
should stay inside and watch a movie.

19
00:01:10,280 --> 00:01:13,625
These conditions and executions
are already a part of our daily lives.

20
00:01:13,625 --> 00:01:16,829
You're probably thinking this
way without even realizing it.

21
00:01:16,829 --> 00:01:18,569
We can think of programming this way,
too.

22
00:01:21,599 --> 00:01:24,479
The basic syntax for
an if statement is as follows.

23
00:01:25,540 --> 00:01:28,780
In the example here, can
be replaced with the boolean expression

24
00:01:28,780 --> 00:01:30,957
that evaluates to true of false.

25
00:01:30,957 --> 00:01:35,043
can be
replaced with any code you want.

26
00:01:35,043 --> 00:01:38,459
Any code that should be executed
when the condition is true.

27
00:01:38,459 --> 00:01:42,503
Also notice that the code to execute
is always surrounded by curly braces.

28
00:01:42,503 --> 00:01:43,399
[BLANK_AUDIO]

