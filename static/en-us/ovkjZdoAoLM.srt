1
00:00:00,140 --> 00:00:01,880
If the architecture is 12-bit,

2
00:00:01,880 --> 00:00:05,530
that means that the addresses
are 12-bit long.

3
00:00:05,530 --> 00:00:09,190
If the page size is 32 bytes,
then we need 5 bits for

4
00:00:09,190 --> 00:00:11,360
the offset into that page.

5
00:00:11,360 --> 00:00:15,640
That will leave 7 bits for
the virtual page number, and therefore,

6
00:00:15,640 --> 00:00:21,920
we will need 128 to do the seven total
number of entries in the page table.

7
00:00:21,920 --> 00:00:25,510
Using the same logic for
the 512 byte pages,

8
00:00:25,510 --> 00:00:31,098
we will need 9 bits out of the total
12 bits for the offset into the page.

9
00:00:31,098 --> 00:00:36,160
And therefore, we will be left with
3 bits for the virtual page number.

10
00:00:36,160 --> 00:00:39,750
As a result, the page table
will need to have entries for

11
00:00:39,750 --> 00:00:43,960
all of the 2 to the 3rd
number of virtual pages.

12
00:00:43,960 --> 00:00:46,480
So it will have total of 8 entries.

13
00:00:46,480 --> 00:00:49,590
As you can see,
this example illustrates the impact of

14
00:00:49,590 --> 00:00:54,460
using a larger page sizes on
the requirements of the page table size.
