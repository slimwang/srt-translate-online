1
00:00:00,350 --> 00:00:02,969
When a developer fixes a bug,
makes a new feature or

2
00:00:02,969 --> 00:00:04,920
even just updates the color of a button.

3
00:00:04,920 --> 00:00:07,820
How does that change get
delivered to the end user?

4
00:00:07,820 --> 00:00:10,620
As you've seen this is not a cut and
dry process and

5
00:00:10,620 --> 00:00:12,710
there are quite a few
things to think about.

6
00:00:12,710 --> 00:00:16,190
>> Luckily for you and your coworkers
you now know the tools to start

7
00:00:16,190 --> 00:00:17,960
implementing continuous integration and

8
00:00:17,960 --> 00:00:20,770
continuous delivery into
your team's workflow.

9
00:00:20,770 --> 00:00:24,620
Simply streamlining the CI and
CD process isn't enough though.

10
00:00:24,620 --> 00:00:28,080
You should aim to have a robust
testing suite that covers some or

11
00:00:28,080 --> 00:00:30,790
all of the testing domains we
talked about in this lesson.

12
00:00:30,790 --> 00:00:34,240
>> When you're writing these tests you
can start with low weight smoke tests

13
00:00:34,240 --> 00:00:38,900
that make sure the most important
features of your product are working.

14
00:00:38,900 --> 00:00:42,460
>> Next you and your team should strive
to test the majority of the functions

15
00:00:42,460 --> 00:00:44,220
and classes in your code base.

16
00:00:44,220 --> 00:00:47,350
You can get a general idea of how
thorough your testing suite is

17
00:00:47,350 --> 00:00:49,540
by taking code coverage measurements.

18
00:00:49,540 --> 00:00:52,920
In addition you can set up static
analysis tools in your integration

19
00:00:52,920 --> 00:00:57,760
process to help developers catch issues
before even building their code.

20
00:00:57,760 --> 00:01:00,550
>> Then once you're done
testing all of your components.

21
00:01:00,550 --> 00:01:04,140
You can test how well they work
together with acceptance tests,

22
00:01:04,140 --> 00:01:05,920
which you can automate running.

23
00:01:05,920 --> 00:01:09,160
>> Beyond these more basic forms of
testing you should incorporate manual

24
00:01:09,160 --> 00:01:13,050
acceptance testing by making
deployment to a test server painless.

25
00:01:13,050 --> 00:01:15,900
Finally you should also run security
tests and performance tests.

26
00:01:16,900 --> 00:01:21,220
>> As part of the DevOps team, you're
uniquely positioned to help define and

27
00:01:21,220 --> 00:01:23,080
automate testing and deployment.

28
00:01:23,080 --> 00:01:25,335
To make life easier for your whole team.

29
00:01:25,335 --> 00:01:27,251
[SOUND]
>> We hope you take the skills you

30
00:01:27,251 --> 00:01:30,778
learned in these lessons into the
workplace to support delivering great

31
00:01:30,778 --> 00:01:33,170
web apps, mobile apps,
and more to your users.
