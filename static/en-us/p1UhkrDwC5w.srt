1
00:00:00,000 --> 00:00:03,000
Now let's try out some of these ideas with the flexible rope.

2
00:00:03,000 --> 00:00:06,000
We'll fix both ends of that rope

3
00:00:06,000 --> 00:00:11,000
and want to see what the equilibrium shape is going to be

4
00:00:11,000 --> 00:00:13,000
under the influence of gravity.

5
00:00:13,000 --> 00:00:18,000
The obvious choice of finite elements is springs.

6
00:00:18,000 --> 00:00:23,000
Springs of a given rest length, so that the potential energy of each spring

7
00:00:23,000 --> 00:00:29,000
amounts to 1/2 times the spring constant times the square of the extension of the spring,

8
00:00:29,000 --> 00:00:34,000
which is the distance between the two endpoints minus the rest length of the string.

9
00:00:34,000 --> 00:00:40,000
To model the mass of that rope, we attach mass points to these strings.

10
00:00:40,000 --> 00:00:45,000
Of course, these mass points carry potential energy due to gravity.

11
00:00:45,000 --> 00:00:50,000
Given the constants that we provide, compute the potential energy of that rope.

12
00:00:50,000 --> 00:00:55,000
The one end of that rope will be fixed at x = 0, y = 0.

13
00:00:55,000 --> 00:01:05,000
The other end of that rope will be fixed at x = 1.3 m and y = 0.4 m.

14
00:01:05,000 --> 00:01:08,000
Our code starts with a random initialization

15
00:01:08,000 --> 00:01:13,000
and then applies a pretty simplistic strategy to minimize the energy.

16
00:01:13,000 --> 00:01:16,000
For a certain number of times it's going to pick one of the masses

17
00:01:16,000 --> 00:01:20,000
and change the position of that mass point by a random vector.

18
00:01:20,000 --> 00:01:23,000
If the energy decreases, it keeps that new position.

19
00:01:23,000 --> 00:01:26,000
If it doesn't, it returns to the position before.

20
00:01:26,000 --> 99:59:59,999
Very simple, but highly inefficient.
