1
00:00:00,210 --> 00:00:02,180
Only one of these can be
solved using map, and

2
00:00:02,180 --> 00:00:05,520
that's adding one to each
element in the input array.

3
00:00:05,520 --> 00:00:06,370
Why can we do that?

4
00:00:06,370 --> 00:00:11,030
Each individual element in this input
array, is processed in parallel.

5
00:00:11,030 --> 00:00:13,980
We can't sort an input array using
map because the output at any

6
00:00:13,980 --> 00:00:17,060
position is dependent
on all the input data.

7
00:00:17,060 --> 00:00:21,830
Similarly, to sum up all the elements in
an input array, requires that we look at

8
00:00:21,830 --> 00:00:24,970
all of the separate elements
to compute a single output.

9
00:00:24,970 --> 00:00:28,110
The individual elements
are not parallel.

10
00:00:28,110 --> 00:00:30,430
Finally to compute the average
of an input array,

11
00:00:30,430 --> 00:00:34,090
also requires this all the one
style of communication.

12
00:00:34,090 --> 00:00:37,280
We don't have in parallel things
that happen independently

13
00:00:37,280 --> 00:00:38,920
without any communication.

14
00:00:38,920 --> 00:00:42,880
Now, all these other operations are
very, very interesting in GPU computing,

15
00:00:42,880 --> 00:00:46,180
and we will absolutely be covering
them in the next few units.
