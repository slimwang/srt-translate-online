1
00:00:00,000 --> 00:00:03,000
We need a faster test for primes.

2
00:00:03,000 --> 00:00:06,000
What we're going to use is a probabilistic test.

3
00:00:06,000 --> 00:00:09,000
That means if some number x passes the test,

4
00:00:09,000 --> 00:00:13,000
the probability that x's composite is less than some value.

5
00:00:13,000 --> 00:00:16,000
We're going to use probabilities like 2^(-128).

6
00:00:16,000 --> 00:00:19,000
This is certainly low enough for most uses in crytography.

7
00:00:19,000 --> 00:00:23,000
One way to think about that is if the key size is 128 bits,

8
00:00:23,000 --> 00:00:28,000
we already have that probability that someone would randomly guess that key correctly.

9
00:00:28,000 --> 00:00:33,000
The main basis of probabilistic primality tests is properties of prime numbers.

10
00:00:33,000 --> 00:00:37,000
One useful theorem about prime numbers is Fermat's Little Theorem,

11
00:00:37,000 --> 00:00:42,000
which states that if p is prime, if we select some number a between 1 and p

12
00:00:42,000 --> 00:00:47,000
and raise a^(p-1) power--modulo p--the result must always be 1.

13
00:00:47,000 --> 00:00:50,000
Maybe we could try lots of a's.

14
00:00:50,000 --> 00:00:55,000
If this equation always holds that a^(p-1) is congruent to 1 mod p,

15
00:00:55,000 --> 00:00:58,000
that would mean that p is probably prime.

16
00:00:58,000 --> 00:01:00,000
The problem is that there are some composite numbers

17
00:01:00,000 --> 00:01:05,000
that are known as Carmichael numbers where this test also holds for most a values.

18
00:01:05,000 --> 00:01:09,000
Indeed, it holds for all the a values that are relatively prime with p.

19
00:01:09,000 --> 00:01:13,000
Unless we try all the a numbers between 1 and p

20
00:01:13,000 --> 00:01:16,000
there is a high probability that this will always hold.

21
00:01:16,000 --> 00:01:19,000
If we need to try them all, this test isn't fast enough.

22
00:01:19,000 --> 00:01:21,000
It's still going to be exponential in the size of p.

23
00:01:21,000 --> 00:01:25,000
The good news is there is a faster test, which is known as the Rabin-Miller test.

24
00:01:25,000 --> 00:01:28,000
Sometimes it's known as the Miller-Rabin test.

25
00:01:28,000 --> 00:01:32,000
It was discovered independently by both Miller and Rabin.

26
00:01:32,000 --> 00:01:36,000
The main idea was originally proposed by Gary Miller in 1976.

27
00:01:36,000 --> 00:01:41,000
He provided the deterministic test based on the assumption that Riemann hypothesis was true.

28
00:01:41,000 --> 00:01:45,000
Michael Rabin, who won the Turing award in 1976,

29
00:01:45,000 --> 00:01:49,000
probably did some of his more important work after winning the Turing award, which is quite unusual,

30
00:01:49,000 --> 00:01:53,000
proposed this in 1980, and that's the one that we'll talk about.

31
00:01:53,000 --> 00:01:57,000
Here is how this works, and I'm not going to cover the mathematics behind it,

32
00:01:57,000 --> 00:02:00,000
but just enough to be able to implement the test.

33
00:02:00,000 --> 00:02:03,000
We're going to start with our guess n, which must be odd.

34
00:02:03,000 --> 00:02:06,000
Obviously, if it's even it's not prime.

35
00:02:06,000 --> 00:02:11,000
Because it's odd, that means we can write it as a multiple of 2 + 1.

36
00:02:11,000 --> 00:02:18,000
That means we can break it into 2^t * s + 1.

37
00:02:18,000 --> 00:02:23,000
Next we want to choose some random a value in this range from 1 to n -1.

38
00:02:23,000 --> 00:02:28,000
If n is prime, we know that either a^s is equal to 1 mod n

39
00:02:28,000 --> 00:02:34,000
or we know that a^(s(2^j)) is equal to n - 1 mod n for some j.

40
00:02:34,000 --> 00:02:39,000
The j values are in the range from 0 to t -1, which is the power here.

41
00:02:39,000 --> 00:02:43,000
That's the big advantage that we only need to try a small number of values.

42
00:02:43,000 --> 00:02:48,000
If we don't find any value that satisfies this, we know it's composite.

43
00:02:48,000 --> 00:02:52,000
The important property that this test has that's different from the Fermat test

44
00:02:52,000 --> 00:02:55,000
is that the probability that a composite number of passes

45
00:02:55,000 --> 00:02:57,000
is always less than some constant.

46
00:02:57,000 --> 00:02:59,000
In this case it is less than one quarter.

47
00:02:59,000 --> 00:03:02,000
There are no bad composite numbers like the Carmichael numbers.

48
00:03:02,000 --> 00:03:07,000
If we choose a randomly, for any composite number the probability that the test

49
00:03:07,000 --> 99:59:59,999
is less than one-quarter.
