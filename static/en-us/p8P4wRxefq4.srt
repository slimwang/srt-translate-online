1
00:00:04,705 --> 00:00:07,826
So now you can see,
if only we'd used Index On and Value,

2
00:00:07,826 --> 00:00:11,940
Grocery Grabber's corporate
takeover would have never happened.

3
00:00:11,940 --> 00:00:13,710
So let's take a look at how they work.

4
00:00:13,710 --> 00:00:19,020
Index On tells Firebase which child
keys your app uses in queries.

5
00:00:19,020 --> 00:00:21,497
A notes key is indexed automatically, so

6
00:00:21,497 --> 00:00:24,057
there is no need to
index them explicitly.

7
00:00:24,057 --> 00:00:27,886
Using index on is optional, but it
will dramatically improve performance.

8
00:00:27,886 --> 00:00:32,430
You can use index on in conjunction
with order by child to optimize queries.

9
00:00:32,430 --> 00:00:36,170
In this example, you assign a rule to
the children you want to optimize on.

10
00:00:36,170 --> 00:00:38,260
You can use index on
with order by value.

11
00:00:39,750 --> 00:00:42,577
Which will optimize
queries on a value rule.

12
00:00:42,577 --> 00:00:43,672
>> Intrude in sector one.

13
00:00:43,672 --> 00:00:46,505
>> They've discovered us on the network,
I can't close the connection.

14
00:00:46,505 --> 00:00:50,149
[SOUND]
