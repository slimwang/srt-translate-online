1
00:00:00,220 --> 00:00:01,589
Here's my solution.

2
00:00:01,589 --> 00:00:04,490
The initial state accepts
on the blank symbol.

3
00:00:04,490 --> 00:00:06,420
The empty string is balanced naturally.

4
00:00:06,420 --> 00:00:11,380
While encountering a 0, we move to
state q1, and go hunting for a 1.

5
00:00:11,380 --> 00:00:16,960
On encountering a 1, we move to
state q2, and go hunting for a 0.

6
00:00:16,960 --> 00:00:21,990
As we hunt for a 1,
we skipped past all the zeros and x's.

7
00:00:21,990 --> 00:00:27,750
And if we do find a 1, then we move on
to state q4, which will rewind for us.

8
00:00:27,750 --> 00:00:29,923
And we do the analogous thing for q2.

9
00:00:29,923 --> 00:00:34,660
On the other hand, if we encounter
a blank instead of a 1, then we reject.

10
00:00:34,660 --> 00:00:36,250
There were no 1's to match.

11
00:00:36,250 --> 00:00:39,130
Or in this case,
if we're looking for a 0 and

12
00:00:39,130 --> 00:00:43,000
encounter a blank instead,
that means that there's no 0 to match.

13
00:00:43,000 --> 00:00:48,090
Assuming we do find a match, we end
up in state Q4 which then rewinds.

14
00:00:48,090 --> 00:00:52,840
It moves left past all the Xs, the
zeros, and the ones until it finds that

15
00:00:52,840 --> 00:00:56,460
blank symbol, which we crossed out
initially in this transition here.

16
00:00:57,500 --> 00:01:00,820
It exes that out and
then moves to the right, so

17
00:01:00,820 --> 00:01:02,370
that we're ready to
process the next symbol.
