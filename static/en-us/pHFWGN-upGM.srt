1
00:00:00,460 --> 00:00:03,130
A fundamental part of
understanding restful APIs

2
00:00:03,130 --> 00:00:06,640
is understanding the components that
make up the client-server flow of HTTP.

3
00:00:07,820 --> 00:00:10,810
HTTP can be described as pull protocol.

4
00:00:10,810 --> 00:00:13,400
Communication is always
initiated by the client

5
00:00:13,400 --> 00:00:15,259
sending an HTTP request to the server.

6
00:00:16,290 --> 00:00:19,440
In turn, the server responds
with a response message.

7
00:00:19,440 --> 00:00:22,600
These messages are just bodies of text
that the machines can later interpret

8
00:00:22,600 --> 00:00:25,740
into actions, images, and
even multimedia content.

9
00:00:26,900 --> 00:00:30,450
Let's briefly discuss some of the major
components of HTTP requests and

10
00:00:30,450 --> 00:00:32,830
responses, starting with requests.

11
00:00:32,830 --> 00:00:38,320
Every HTTP message consists of a message
header, and an optional message body.

12
00:00:38,320 --> 00:00:42,390
These two entities are separated by
a space, like in the diagram here.

13
00:00:42,390 --> 00:00:45,880
In an HTTP request, the first line of
the header is called the request line.

14
00:00:45,880 --> 00:00:50,740
The request line contains the HTTP verb,
the URI, or

15
00:00:50,740 --> 00:00:55,040
Uniform Resource Identifier,
and the HTTP version number.

16
00:00:55,040 --> 00:00:57,710
Take a look at these
examples of request lines.

17
00:00:57,710 --> 00:01:02,880
We see the verb here, the resource we
want to access via the URI here, and

18
00:01:02,880 --> 00:01:05,680
the version of HTTP we
are using at the end.

19
00:01:05,680 --> 00:01:09,060
After the request line we have
the optional request headers.

20
00:01:09,060 --> 00:01:11,830
These are perimeters that can be
used to describe specific properties

21
00:01:11,830 --> 00:01:13,090
about a request.

22
00:01:13,090 --> 00:01:15,970
Request headers appear
in name value pairs.

23
00:01:15,970 --> 00:01:19,460
Multiple values can be
separated by commas, like so.

24
00:01:19,460 --> 00:01:23,350
A blank line separates the header and
body of an HTTP request.

25
00:01:23,350 --> 00:01:26,070
In the body, we can add any other
information about the request that we

26
00:01:26,070 --> 00:01:27,880
want to send along to the server.

27
00:01:27,880 --> 00:01:30,870
An example of a complete HTTP
request message is shown here.
