1
00:00:00,250 --> 00:00:03,270
Congratulations, you just did a lot of stuff. Let's do

2
00:00:03,270 --> 00:00:06,069
a recap. You've wrote your first lines of code and

3
00:00:06,069 --> 00:00:08,773
deployed it to App Engine. You got Conference Central up

4
00:00:08,773 --> 00:00:13,550
and running. And you've tried out the API Explorer. Don't underestimate

5
00:00:13,550 --> 00:00:16,610
the API Explorer. It's a great tool to use to

6
00:00:16,610 --> 00:00:19,070
try out the APIs. And it's not limited to your

7
00:00:19,070 --> 00:00:21,710
own APIs, you can use it for any Google API.

8
00:00:21,710 --> 00:00:26,810
So, all good stuff. But let's now talk about user authentication.

9
00:00:26,810 --> 00:00:30,490
Many applications require that a user is registered and

10
00:00:30,490 --> 00:00:35,080
signed in before using the application. We will also require

11
00:00:35,080 --> 00:00:37,680
this for Conference Central, so let's look at how

12
00:00:37,680 --> 00:00:40,110
we do that. It used to be the case that

13
00:00:40,110 --> 00:00:42,820
almost every application had to create their own user

14
00:00:42,820 --> 00:00:46,140
management system. That would mean that you would have to

15
00:00:46,140 --> 00:00:48,600
write all the code from scratch in order for

16
00:00:48,600 --> 00:00:52,150
your users to use your applications. Well, good for us.

17
00:00:52,150 --> 00:00:54,700
That is not needed anymore. With App Engine, you

18
00:00:54,700 --> 00:00:57,800
can use third party authentication with Cloud Endpoints, such

19
00:00:57,800 --> 00:01:00,260
as Google Plus sign-in. But also other ones can

20
00:01:00,260 --> 00:01:04,450
be used. In Conference Central, we will require a Google

21
00:01:04,450 --> 00:01:07,170
account for sign-in. So, how do we know that

22
00:01:07,170 --> 00:01:09,810
the user is signed into their Google account when they

23
00:01:09,810 --> 00:01:12,830
use Conference Central? That is actually taking care of

24
00:01:12,830 --> 00:01:17,620
by Cloud Endpoints. A Cloud Endpoint's API method can optionally

25
00:01:17,620 --> 00:01:21,320
take a user object as its first argument and

26
00:01:21,320 --> 00:01:23,640
if the user object is not null then the

27
00:01:23,640 --> 00:01:26,470
user is signed in, but if it's null then

28
00:01:26,470 --> 00:01:29,380
we throw in exception which decline should receive and

29
00:01:29,380 --> 00:01:32,540
redirect for sign in. Could it be more easy?

30
00:01:33,775 --> 00:01:36,590
Hm, you might say now. But what about security

31
00:01:36,590 --> 00:01:39,760
and privacy? Well, that is all taken care of

32
00:01:39,760 --> 00:01:43,850
by Google Sign in or a third party authentication provider.

33
00:01:43,850 --> 00:01:47,780
So this mechanism is the best of two worlds combined. A simple way

34
00:01:47,780 --> 00:01:51,970
to add user authentication to your app, combined with the strong security and

35
00:01:51,970 --> 00:01:57,410
privacy standards of Google, all right, that's enough talking, time for you do

36
00:01:57,410 --> 00:01:59,240
some coding again by adding user

37
00:01:59,240 --> 00:02:01,900
authentication to your Conference Central. Good luck.
