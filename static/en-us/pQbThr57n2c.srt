1
00:00:00,000 --> 00:00:04,629
Hi! Miriam here making a guest appearance in the middle of the unit.

2
00:00:04,629 --> 00:00:08,869
Your task for this quiz is going to be to implement adaptive step sizes.

3
00:00:08,869 --> 00:00:10,979
We've already provided Huen's method for you.

4
00:00:10,979 --> 00:00:14,699
So you just have to determine the next value of the step size h.

5
00:00:14,699 --> 00:00:16,769
There's one important change to the framework, however.

6
00:00:16,769 --> 00:00:21,559
You see we're dealing with single vectors here. We're no longer filling arrays of vectors.

7
00:00:21,559 --> 00:00:25,649
So the reason that we just are using single vectors is because we don't know upfront

8
00:00:25,649 --> 00:00:27,789
how many steps the simulation is going to have.

9
00:00:27,789 --> 00:00:31,789
The number of steps is going to depend on the values h that are being computed.

10
00:00:31,789 --> 00:00:34,848
So we're not storing a history of x and b anymore

11
00:00:34,848 --> 00:00:37,719
because we don't know how many entries that history would have to contain.

12
00:00:37,719 --> 00:00:41,019
So when we plot the result, we're not going to be plotting a whole curve.

13
00:00:41,019 --> 00:00:44,689
We're going to be plotting just a single dot at each different location.

14
00:00:44,689 --> 00:00:47,350
Now you can see that in addition to the step size h right here,

15
00:00:47,350 --> 00:00:50,897
we've also created a variable for you called h new.

16
00:00:50,897 --> 00:00:53,779
Inside this while loop, we want h to store the current step size

17
00:00:53,779 --> 00:00:57,709
and then we'll compute the next step size as h new.

18
00:00:57,709 --> 00:01:03,518
At the end of each step, we want to add h to the time it has past, just what's happening right here

19
00:01:03,518 --> 99:59:59,999
and I want to set h equal to h new, which signals that we move onto the next step.
