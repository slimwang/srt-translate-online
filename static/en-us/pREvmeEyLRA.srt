1
00:00:00,430 --> 00:00:04,500
Instead of using the device's exact
pixel density which can vary quite

2
00:00:04,500 --> 00:00:07,740
a bit like 311 dpi or

3
00:00:07,740 --> 00:00:13,360
442 dpi, Android groups devices
into a number of density buckets.

4
00:00:13,360 --> 00:00:17,164
Each device gets assigned a density
bucket that most closely matches

5
00:00:17,164 --> 00:00:19,430
its actual pixel density.

6
00:00:19,430 --> 00:00:26,010
So a device with a 311 dpi screen
might get assigned 320 dpi or XHDPI,

7
00:00:26,010 --> 00:00:32,807
and a device with a 442 dpi screen
might get assigned XXHDPI or 480 dpi.

8
00:00:32,807 --> 00:00:37,325
Though there are density buckets for
both incredibly low density screens,

9
00:00:37,325 --> 00:00:42,338
like 120 dpi, and really high density
screens, like 640 dpi, you generally

10
00:00:42,338 --> 00:00:48,004
only have to work with the middle four
shown here, 160, 240, 320, and 480 dpi.

11
00:00:48,004 --> 00:00:52,670
And these are sometimes
referred to as 1X, 2X, and 3X.

12
00:00:52,670 --> 00:00:57,505
Now, these buckets give you control
over the scaling of your graphic assets,

13
00:00:57,505 --> 00:00:59,150
things like icons.

14
00:00:59,150 --> 00:01:03,450
They also ensure that you don't have to
create hundreds of different versions

15
00:01:03,450 --> 00:01:07,150
of these little icons for
each screen's exact pixel density.

16
00:01:07,150 --> 00:01:11,295
They essentially make your UI elements
almost exactly the same physical size,

17
00:01:11,295 --> 00:01:15,530
like really, really close while
letting you only produce assets for

18
00:01:15,530 --> 00:01:18,081
a handful of densities, these four.
