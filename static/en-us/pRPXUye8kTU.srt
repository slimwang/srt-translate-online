1
00:00:00,660 --> 00:00:03,310
I created the brick warehouse
service with Yeomen,

2
00:00:03,310 --> 00:00:06,130
then I injected the service
into both controllers.

3
00:00:06,130 --> 00:00:08,640
Since both controllers now have
access to the warehouse service,

4
00:00:08,640 --> 00:00:11,996
I extracted and combined each store's
brick data into the warehouse.

5
00:00:11,996 --> 00:00:15,060
The Bricks A Bunch store
only sells red bricks, so

6
00:00:15,060 --> 00:00:17,656
I connected the store's red
bricks with the warehouses.

7
00:00:17,656 --> 00:00:21,100
The Lots O Bricks store
sells all bricks, so

8
00:00:21,100 --> 00:00:23,650
I connected each color to
the warehouse's color.

9
00:00:23,650 --> 00:00:25,150
I decided to keep these names so

10
00:00:25,150 --> 00:00:27,930
that I don't have to modify
anything in the template.

11
00:00:27,930 --> 00:00:31,410
Everything's the same now except that
the inventory levels are shared between

12
00:00:31,410 --> 00:00:32,759
the two stores.

13
00:00:32,759 --> 00:00:34,870
Now I need to add that
Add To Cart button.

14
00:00:34,870 --> 00:00:38,206
In the Bricks A Bunch template, I added
a button that calls the controller's

15
00:00:38,206 --> 00:00:40,490
addToCart method, passing in the size.

16
00:00:40,490 --> 00:00:42,630
The controller just passes
this data to the service.

17
00:00:43,690 --> 00:00:45,690
Since the service is shared
by both controllers,

18
00:00:45,690 --> 00:00:48,610
when one controller changes the shared
data, the other controller sees

19
00:00:48,610 --> 00:00:52,100
the change and its template is updated
to reflect the new stock level.

20
00:00:52,100 --> 00:00:53,340
Services are a great way for

21
00:00:53,340 --> 00:00:55,760
two different views to share
a common source of information.
