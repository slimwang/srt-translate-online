1
00:00:00,170 --> 00:00:02,300
Let's go ahead and start with the endpoint.

2
00:00:02,300 --> 00:00:07,140
It's simply a Wikipedia URL with a search string put inside.

3
00:00:07,140 --> 00:00:08,330
So far so good.

4
00:00:08,330 --> 00:00:10,660
Then we come to the AJAX request object.

5
00:00:10,660 --> 00:00:13,130
We start off by creating a URL parameter and

6
00:00:13,130 --> 00:00:16,760
setting it equal to the wikiUrl that we just created.

7
00:00:16,760 --> 00:00:19,900
If we didn't want to pass the URL in as a parameter of this object,

8
00:00:19,900 --> 00:00:24,140
it could actually just be a string by itself that comes before this settings

9
00:00:24,140 --> 00:00:26,500
object inside this method call.

10
00:00:26,500 --> 00:00:29,960
In other words, we could've passed the URL in here as a string before

11
00:00:29,960 --> 00:00:33,680
the settings object instead of making it a parameter of the settings object,

12
00:00:33,680 --> 00:00:35,350
but either way works.

13
00:00:35,350 --> 00:00:40,460
Then we set the data type to jsonp, indicating that this a JSONP request, and

14
00:00:40,460 --> 00:00:42,280
then we have a success function.

15
00:00:42,280 --> 00:00:44,607
I've got a line commented out here for

16
00:00:44,607 --> 00:00:48,190
JSONP as a parameter, setting JSONP to callback.

17
00:00:48,190 --> 00:00:51,620
Some APIs want to use a different name for the callback function.

18
00:00:51,620 --> 00:00:54,620
By default, using JSONP as a data type

19
00:00:54,620 --> 00:00:57,660
will set the callback function name to callback.

20
00:00:57,660 --> 00:00:59,840
So this line here's actually redundant.

21
00:00:59,840 --> 00:01:02,450
But if we needed to change it in other words if we

22
00:01:02,450 --> 00:01:05,379
needed to change this callback right here.

23
00:01:05,379 --> 00:01:09,990
In that case we would use a different string here on the JSONP property.

24
00:01:09,990 --> 00:01:12,470
Check the instructor notes for more on JSONP.

25
00:01:12,470 --> 00:01:16,300
Inside the success parameter we've got this anonymous function which is run when

26
00:01:16,300 --> 00:01:17,940
we get the response.

27
00:01:17,940 --> 00:01:20,320
Let's take a look at this response in the browser.

28
00:01:20,320 --> 00:01:22,340
Inside the network tab we can see this request for

29
00:01:22,340 --> 00:01:27,220
Wikipedia, let's click on it, and it looks like we've got a JavaScript object.

30
00:01:27,220 --> 00:01:28,010
Like we said before,

31
00:01:28,010 --> 00:01:31,130
this JavaScript object is going to be wrapped within a function.

32
00:01:31,130 --> 00:01:34,540
So, we can see this long string here as the function.

33
00:01:34,540 --> 00:01:36,220
It looks like we've got a few sections,

34
00:01:36,220 --> 00:01:39,930
including main which has some information.

35
00:01:39,930 --> 00:01:43,680
Inside we finally come to this parameter 1 which has an array of

36
00:01:43,680 --> 00:01:45,320
different articles about San Fransisco.

37
00:01:45,320 --> 00:01:51,270
Now you'll notice here how there are spaces between the words in the response,

38
00:01:51,270 --> 00:01:52,090
but that's okay.

39
00:01:52,090 --> 00:01:55,610
We can actually just use this inside our URLs.

40
00:01:55,610 --> 00:01:59,900
You'll notice that if right-click on one of these and click copy link address

41
00:01:59,900 --> 00:02:04,050
and then paste it into my browser, we see that the spaces are replaced with %20.

42
00:02:04,050 --> 00:02:05,780
When we press Enter,

43
00:02:05,780 --> 00:02:09,699
we see that Wikipedia's smart enough to redirect us to San Francisco's URL.

44
00:02:09,699 --> 00:02:13,230
So we create this article list variable that we set equal to the array of

45
00:02:13,230 --> 00:02:16,350
articles, remember that parameter one from the object that got

46
00:02:16,350 --> 00:02:18,740
returned from Wikipedia, which is the response.

47
00:02:18,740 --> 00:02:20,940
And then we simply iterate through it.

48
00:02:20,940 --> 00:02:25,650
Each article gets appended to the page inside a list element using an a tag, and

49
00:02:25,650 --> 00:02:31,490
we simply set the URL to the URL that we create here, and it's article string,

50
00:02:31,490 --> 00:02:34,570
which is the name of the article which we saw in the response.

51
00:02:34,570 --> 00:02:36,380
And with that we've got a pretty awesome page.
