1
00:00:01,280 --> 00:00:03,719
Until now we've been working
on a single machine.

2
00:00:03,719 --> 00:00:06,920
It's time to start thinking about
scaling up and scaling out.

3
00:00:06,920 --> 00:00:09,830
So let's bring our
expert Adrian back in.

4
00:00:09,830 --> 00:00:10,470
>> Hi there.

5
00:00:10,470 --> 00:00:12,620
>> Hey, Adrian, thanks for coming back.

6
00:00:12,620 --> 00:00:15,300
What role do you see containers
playing in the future of

7
00:00:15,300 --> 00:00:17,360
application development and deployment?

8
00:00:17,360 --> 00:00:22,320
Well if you look at the history of
having large systems in the data center.

9
00:00:22,320 --> 00:00:25,190
Bare metal machines,
typically you'd buy them,

10
00:00:25,190 --> 00:00:27,290
you'd depreciate them over three years.

11
00:00:27,290 --> 00:00:28,640
They'd sit at the same IP address.

12
00:00:28,640 --> 00:00:31,640
They get installed once and
used over and over again, and

13
00:00:31,640 --> 00:00:33,900
you can think of those machines as pets.

14
00:00:33,900 --> 00:00:37,730
What we really want
to do is have cattle.

15
00:00:37,730 --> 00:00:39,140
Right.
So if you lose some

16
00:00:39,140 --> 00:00:42,080
you know one cow out of a dairy
hood you still got milk, right.

17
00:00:42,080 --> 00:00:43,470
You can get another cow.

18
00:00:43,470 --> 00:00:47,750
That's that kind of model,
rather than having some machine that's

19
00:00:47,750 --> 00:00:50,140
very specific and
if one knows its name and

20
00:00:50,140 --> 00:00:53,260
if they have anything goes wrong
with it everyone gets very unhappy.

21
00:00:53,260 --> 00:00:59,370
So that transition from sort of
these very specific machines to

22
00:00:59,370 --> 00:01:05,220
more sort of fleets or
herds of machines is

23
00:01:05,220 --> 00:01:09,440
something that happened typically when,
you know, you can do it with the VMs.

24
00:01:09,440 --> 00:01:11,330
But VMs take out as, you know,

25
00:01:11,330 --> 00:01:14,220
they basically usually you get
them by the hour and they last for

26
00:01:14,220 --> 00:01:18,120
a few weeks and you know they
have a much shorter life cycle.

27
00:01:18,120 --> 00:01:21,000
But when we go to
containers became efficient

28
00:01:21,000 --> 00:01:24,160
enough that you could actually
get a machine in seconds and

29
00:01:24,160 --> 00:01:27,390
you could run it for minutes and that
was a perfectly reasonable thing to do.

30
00:01:27,390 --> 00:01:30,422
So, you can create an entire
test environment from scratch,

31
00:01:30,422 --> 00:01:33,453
run it until when and run all your
tests, shut it down again and

32
00:01:33,453 --> 00:01:36,300
you can have lots of those
running in parallel.

33
00:01:36,300 --> 00:01:41,330
So now you've got machines,
some of them you barely know they exist,

34
00:01:41,330 --> 00:01:43,830
they come and go very, very quickly.

35
00:01:43,830 --> 00:01:46,240
And finally, sort of,
if you take it right to the limit,

36
00:01:46,240 --> 00:01:50,210
you could create a container just to run
a single request and shut it down again.

37
00:01:50,210 --> 00:01:53,390
And that's something that's starting
to be called serverless computing,

38
00:01:53,390 --> 00:01:55,950
and there's a few frameworks for
doing that.

39
00:01:57,330 --> 00:02:01,180
But that's sort of the leading edge
of what's happening right now.

40
00:02:01,180 --> 00:02:03,950
>> So when it comes to writing
containerized apps other than make it

41
00:02:03,950 --> 00:02:06,210
smaller, what are problems
that no one's talking about?

42
00:02:07,350 --> 00:02:11,520
>> So one of the problems is
that people get into is if

43
00:02:11,520 --> 00:02:15,086
they keep their old organization and
the old practices.

44
00:02:15,086 --> 00:02:18,880
So if you've got a micro service or
an application you are building and

45
00:02:18,880 --> 00:02:21,780
the way you used to build your
monolith was you had teams spread

46
00:02:21,780 --> 00:02:25,020
all around the world that
contributed code into the system and

47
00:02:25,020 --> 00:02:28,710
you spent, you know,
weeks of putting everything together.

48
00:02:28,710 --> 00:02:31,990
So when we created software
it sort of followed the form.

49
00:02:31,990 --> 00:02:34,520
That form,
this is sometimes called Conway's law

50
00:02:34,520 --> 00:02:37,760
which says that the structure
of an organization

51
00:02:37,760 --> 00:02:40,260
guides the kind of structure
of the code they produce.

52
00:02:40,260 --> 00:02:43,880
So what I'm really saying is that
you can't build micro services with

53
00:02:43,880 --> 00:02:45,460
a waterfall organization.

54
00:02:45,460 --> 00:02:48,670
>> So people might lose some of the
benefits of the microservices pattern

55
00:02:48,670 --> 00:02:50,820
with organizational issues.

56
00:02:50,820 --> 00:02:52,720
What about technical
issues like monitoring,

57
00:02:52,720 --> 00:02:54,410
logging what are problems with those?

58
00:02:54,410 --> 00:02:56,640
>> And so you need much more automation.

59
00:02:56,640 --> 00:03:00,720
That's a lot more moving parts,you need
systems that dynamically discover what

60
00:03:00,720 --> 00:03:03,240
to be monitored and track them.

61
00:03:03,240 --> 00:03:05,630
So, that's the kind of
characteristic you're looking for.

62
00:03:05,630 --> 00:03:08,350
>> That sounds like a lot goes
into it is this something

63
00:03:08,350 --> 00:03:10,180
developers are programming themselves?

64
00:03:10,180 --> 00:03:12,960
We're looking back five years when
Netflix first started doing this.

65
00:03:12,960 --> 00:03:15,850
One of the things we had was that
because we were early we had to invent

66
00:03:15,850 --> 00:03:17,490
a lot of stuff ourselves.

67
00:03:17,490 --> 00:03:21,580
And there was just, we went and
read papers and we built things, right.

68
00:03:21,580 --> 00:03:25,480
And what the situation now is that
there's really too many things to

69
00:03:25,480 --> 00:03:28,330
choose from and you spend more time
trying to figure out which GitHub

70
00:03:28,330 --> 00:03:31,930
lipo has something useful in it,
which open source project,s and

71
00:03:31,930 --> 00:03:34,670
which the SAS vendor is
trying to sell you something.

72
00:03:34,670 --> 00:03:37,230
So, there's just too many
choices right now, and

73
00:03:37,230 --> 00:03:39,760
those choices are changing
really rapidly.

74
00:03:39,760 --> 00:03:42,300
>> So, it sounds like infrastructure
is something really important,

75
00:03:42,300 --> 00:03:44,910
maybe not to code yourself
because there's so much, so

76
00:03:44,910 --> 00:03:48,420
find something that works, use it for
now change or readjust as you go.

77
00:03:48,420 --> 00:03:53,020
>> Yeah, there's no need to build it
yourself now, and there's too many good

78
00:03:53,020 --> 00:03:56,315
options out there, too many things
you can just get hold of and use.

79
00:03:56,315 --> 00:03:57,865
There're cloud based services.

80
00:03:57,865 --> 00:03:59,200
There's On Premise.

81
00:03:59,200 --> 00:04:01,260
There's things you can download for
free.

82
00:04:01,260 --> 00:04:05,420
So something that could be an 80s has a
lot of functionality you can just go use

83
00:04:05,420 --> 00:04:08,580
it and you don't have to go try and
build all that yourself.

84
00:04:08,580 --> 00:04:12,820
So they're building higher and
higher level services on top of

85
00:04:12,820 --> 00:04:16,500
lots of the detailed engineering what
goes into building these frameworks and

86
00:04:16,500 --> 00:04:18,019
then you can build on top of them.

87
00:04:18,019 --> 00:04:20,790
>> Okay thank you so much for
coming in and talking about this.

88
00:04:20,790 --> 00:04:22,250
>> Thanks very much.

89
00:04:22,250 --> 00:04:23,770
>> After talking with Adrian,

90
00:04:23,770 --> 00:04:25,870
one of the industry's leading
experts on this subject,

91
00:04:26,970 --> 00:04:30,099
it turns out that infrastructure is just
as important as the application itself.

92
00:04:31,330 --> 00:04:33,160
This course is going to
cover the theory and

93
00:04:33,160 --> 00:04:35,740
implementation of managing
that infrastructure.

94
00:04:35,740 --> 00:04:38,814
So in this course we're going to move
past theory and show you how to do it,

95
00:04:38,814 --> 00:04:40,560
and we'll be using Kubernetes for that.
