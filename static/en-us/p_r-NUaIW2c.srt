1
00:00:00,270 --> 00:00:03,290
Here we have a gruesome problem. Although the title

2
00:00:03,290 --> 00:00:05,890
is a bit menacing, all we're really going to do is

3
00:00:05,890 --> 00:00:08,970
color words. Sounds like fun. So, we're going to use two

4
00:00:08,970 --> 00:00:13,390
colors to start out with, blue and green. Now, we

5
00:00:13,390 --> 00:00:16,340
say a word is blue if a lower case

6
00:00:16,340 --> 00:00:19,810
b occurs before a lower case t within the word.

7
00:00:19,810 --> 00:00:22,100
We say a word is green if a lower case

8
00:00:22,100 --> 00:00:25,650
g occurs after the occurrence of a lower case t.

9
00:00:25,650 --> 00:00:27,915
Within the word. So an example of a blue

10
00:00:27,915 --> 00:00:30,751
word would be wombat, because we have a lowercase

11
00:00:30,751 --> 00:00:33,863
b, occurring before lowercase t. As an example of

12
00:00:33,863 --> 00:00:37,994
a green word, we have racketeering, because g occurs after

13
00:00:37,994 --> 00:00:41,290
the current lowercase t. As one last example, we

14
00:00:41,290 --> 00:00:44,850
have the word abating, which is blue, because b occurs

15
00:00:44,850 --> 00:00:48,850
before t. And green because g occurs after t.

16
00:00:48,850 --> 00:00:51,570
So, yes, one word can be both blue and green.

17
00:00:51,570 --> 00:00:54,190
And, lastly, we just find a new color. I will

18
00:00:54,190 --> 00:00:57,050
call is grue. It may look like some purplish-pink. But,

19
00:00:57,050 --> 00:01:01,740
it's a brand new color that you've never seen before

20
00:01:01,740 --> 00:01:04,730
because I say so. I word is grue if it's

21
00:01:04,730 --> 00:01:08,580
blue or green. And it can be both blue and

22
00:01:08,580 --> 00:01:10,871
green and still be grue. So all three of the

23
00:01:10,871 --> 00:01:13,400
words I used here are grue. So those are our

24
00:01:13,400 --> 00:01:16,710
gruesome words and we've been asked to identify all the grue

25
00:01:16,710 --> 00:01:21,030
words within a given string. And we're going to

26
00:01:21,030 --> 00:01:24,510
use our regular expressions skills to do that. So what

27
00:01:24,510 --> 00:01:27,070
is a regular expression going to look like? My basic

28
00:01:27,070 --> 00:01:29,500
strategy is going to write it like this. Where I'm

29
00:01:29,500 --> 00:01:31,970
going to define what a blue word is like

30
00:01:31,970 --> 00:01:35,470
and a green word is like and match both words

31
00:01:35,470 --> 00:01:39,340
using the regular expression or operator. So first let's look

32
00:01:39,340 --> 00:01:43,200
at blue. Here I have the regex for blue words.

33
00:01:43,200 --> 00:01:46,650
We have zero more characters followed by a lower case b.

34
00:01:46,650 --> 00:01:48,740
And in between the B and the T can be zero

35
00:01:48,740 --> 00:01:51,640
more characters, and after the B and the T can be

36
00:01:51,640 --> 00:01:54,740
zero more characters. We're going to do the same thing with green. Here

37
00:01:54,740 --> 00:01:57,670
I have a T and a G with zero more characters

38
00:01:57,670 --> 00:02:00,570
before and after and in between. So, here I have a solution

39
00:02:00,570 --> 00:02:03,900
to the problem. I import the regular expression library, and then

40
00:02:03,900 --> 00:02:07,930
I just use re dot find all, with the completed regular expression.

41
00:02:07,930 --> 00:02:13,320
First we identify. Blue words and then afterwards we do the green words

42
00:02:13,320 --> 00:02:15,790
and we just feed in the string that we passed into the function.
