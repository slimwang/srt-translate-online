1
00:00:00,000 --> 00:00:04,000
What we've seen so far--we've analysed a bunch of different families of graphs,

2
00:00:04,000 --> 00:00:09,000
and we've found that for all these examples the number of edges is like Î(n).

3
00:00:09,000 --> 00:00:11,000
It grows linearly with the number of edges.

4
00:00:11,000 --> 00:00:13,000
You might wonder at this point, is that all there is in life?

5
00:00:13,000 --> 00:00:18,000
Is it always the case that the number of edges grows linearly with the number of nodes.

6
00:00:18,000 --> 00:00:21,000
The answer, of course, is no.

7
00:00:21,000 --> 00:00:24,000
Let's consider the complete graph, also known as a clique on n-nodes.

8
00:00:24,000 --> 00:00:28,000
In a complete graph, every node is connected to every other node,

9
00:00:28,000 --> 00:00:31,000
and you get very pretty star patterns if you fill these in.

10
00:00:31,000 --> 00:00:36,000
In this case, we have five nodes and a total of ten edges.

11
00:00:36,000 --> 00:00:39,000
But this doesn't really tell us anything about the growth rate.

12
00:00:39,000 --> 00:00:42,000
It just tells us that in this one example, well, it could be that the number of edges

13
00:00:42,000 --> 00:00:44,000
is twice the number of nodes. We don't know.

14
00:00:44,000 --> 00:00:48,000
We need to generate a more comprehensive formula.

15
00:00:48,000 --> 00:00:51,000
In fact, I'm going to say you need to generate a more comprehensive formula.

16
00:00:51,000 --> 00:00:57,000
In this question, I'd like you to actually work out the number of edges in a complete graph on n nodes.

17
00:00:57,000 --> 00:01:02,000
The way you should submit this to us is by writing a function in Python that's called "clique"

18
00:01:02,000 --> 00:01:07,000
and is given one value n, which is going to be an integer greater than 0,

19
00:01:07,000 --> 00:01:11,000
and it should calculate from that the number of edges that will be created

20
00:01:11,000 --> 00:01:13,000
if you fully connect all those nodes,

21
00:01:13,000 --> 00:01:16,000
and then just return that answer back so that we can grade it.
