1
00:00:00,700 --> 00:00:02,540
Now that you know what
Android resources are,

2
00:00:02,540 --> 00:00:05,260
and that you can put them
in different folders.

3
00:00:05,260 --> 00:00:08,840
Let's talk about how you can actually
access the resources that you saved in

4
00:00:08,840 --> 00:00:10,580
those folders.

5
00:00:10,580 --> 00:00:15,050
When your app is compiled,
there's a tool in Android called AAPT.

6
00:00:15,050 --> 00:00:17,610
And that generates the R class.

7
00:00:17,610 --> 00:00:21,840
This is simply an R.Java file, and
I'll show you an example next.

8
00:00:21,840 --> 00:00:26,580
It contains the resource IDs for all
the resources in your S directory, so

9
00:00:26,580 --> 00:00:30,790
for all the resources that you've added,
there's an ID to refer to it.

10
00:00:30,790 --> 00:00:35,000
The ID is in a format that is
based on the resource type, so for

11
00:00:35,000 --> 00:00:40,640
all Java resources which are graphics it
would follow the format of R.drawable.

12
00:00:40,640 --> 00:00:43,805
For all strings that are resources,
it would follow the formula

13
00:00:43,805 --> 00:00:47,850
R.string.resource name which
is hello in this case.

14
00:00:49,190 --> 00:00:52,230
Note there are two ways that
you can access a resource.

15
00:00:52,230 --> 00:00:58,720
In Java code it follows the format of
R.resource type.resource name In XML

16
00:00:58,720 --> 00:01:03,820
though, it follows the at notation, so
it would be at and then the resource

17
00:01:03,820 --> 00:01:08,050
type would be string slash, and
then the resource name, which is hello.

18
00:01:09,320 --> 00:01:12,730
Here are more examples of different
resource types and how to access them.

19
00:01:13,740 --> 00:01:16,430
These are just a couple of
the common resource types,

20
00:01:16,430 --> 00:01:19,660
but there are many others.

21
00:01:19,660 --> 00:01:21,590
You always start with R, a dot,

22
00:01:21,590 --> 00:01:25,180
and then resource type, a dot,
and then the resource name.

23
00:01:25,180 --> 00:01:27,350
And the name is whatever you assign it.

24
00:01:27,350 --> 00:01:31,610
And then in XML you have @ and
then the resource type, slash,

25
00:01:31,610 --> 00:01:32,790
and then the name of the resource.

26
00:01:34,080 --> 00:01:36,640
Let's take a moment to find
all the resource IDs in

27
00:01:36,640 --> 00:01:38,620
our main activity Java file.

28
00:01:38,620 --> 00:01:41,160
I'm going to open up the find
command in Android Studio.

29
00:01:41,160 --> 00:01:45,640
I'm going to use Cmd+F, or
you can use Ctrl+F if you're on Windows.

30
00:01:46,970 --> 00:01:48,460
It pops up a search field here.

31
00:01:48,460 --> 00:01:52,910
I'm going to search for
capital R dot, and

32
00:01:52,910 --> 00:01:58,430
then click on match case, so
that it only grabs the capital R cases.

33
00:01:58,430 --> 00:02:03,650
The first thing it finds is this
r.layout.activity_main reference.

34
00:02:03,650 --> 00:02:06,420
This is interesting because we're
referring to the activity main

35
00:02:06,420 --> 00:02:07,710
layout file.

36
00:02:07,710 --> 00:02:12,170
This is actually how the main activity
knows to load up this XML file.

37
00:02:12,170 --> 00:02:13,390
Isn't that cool?

38
00:02:13,390 --> 00:02:14,639
Let's look at the next reference.

39
00:02:15,640 --> 00:02:17,440
Okay.
In the displayQuantity method,

40
00:02:17,440 --> 00:02:22,360
we have a reference to
R.id.quantity_text_view.

41
00:02:22,360 --> 00:02:25,270
So this is referring to a ViewId.

42
00:02:25,270 --> 00:02:29,120
Specifically, the TextView
that displays the quantity.

43
00:02:29,120 --> 00:02:31,660
Hopefully some of the puzzle
pieces are coming together.

44
00:02:31,660 --> 00:02:34,220
By referring to this
view in the Java code.

45
00:02:34,220 --> 00:02:38,550
We can update it while the app is
running to show this numberOfCoffees.

46
00:02:38,550 --> 00:02:40,720
Let's go to the next occurance.

47
00:02:40,720 --> 00:02:43,520
OK in the displayMessage

48
00:02:43,520 --> 00:02:47,470
method we see a reference to
R.id.order_summary_text_view.

49
00:02:47,470 --> 00:02:51,530
Here it seems like we're trying to
refer to this text view which displays

50
00:02:51,530 --> 00:02:54,210
the order summary, so
that we can update it with this message.
