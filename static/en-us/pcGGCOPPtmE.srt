1
00:00:00,000 --> 00:00:05,000
In lecture, we said the number of rabbits in a given month was = to

2
00:00:05,000 --> 00:00:11,000
the number of rabbits the previous month + the number of rabbits 2 months ago.

3
00:00:11,000 --> 00:00:15,000
In the new model, we have the same number of growth of rabbits,

4
00:00:15,000 --> 00:00:21,000
but instead we're going to subtract the number of rabbits that are 5 months old

5
00:00:21,000 --> 00:00:24,000
to account for them dying.

6
00:00:24,000 --> 00:00:31,000
Astute readers will know that this doesn't actually model death correctly of rabbits,

7
00:00:31,000 --> 00:00:35,000
but it's a good example for coding a recursive function.

8
00:00:35,000 --> 00:00:38,000
So with this in mind, let's get to the programming.

9
00:00:38,000 --> 00:00:41,000
So the first thing I've done is at our base case,

10
00:00:41,000 --> 00:00:43,000
which was defined in the problem statement.

11
00:00:43,000 --> 00:00:46,000
And if it's not the base case, we're just going to plug in the formula

12
00:00:46,000 --> 00:00:47,000
that we got from the problem statement.

13
00:00:47,000 --> 00:00:50,000
So this may look like it's finished, but there's one issue,

14
00:00:50,000 --> 00:00:57,000
and that is, what we'd do and say n = 3, when 3 - 5 is a negative number,

15
00:00:57,000 --> 00:00:59,000
and we don't have anything to account for that.

16
00:00:59,000 --> 00:01:01,000
We're just going to continue forever, basically,

17
00:01:01,000 --> 00:01:04,000
because we're never going to hit the base case of 1 or 2.

18
00:01:04,000 --> 00:01:06,000
So we need to actually add a second base case.

19
00:01:06,000 --> 00:01:12,000
And our second base case, basically, says if we had a number that's not 1 or 2,

20
00:01:12,000 --> 00:01:18,000
or below a 1 or 2, then we're going to return 0 and not effect the count

21
00:01:18,000 --> 00:01:21,000
of the number of rabbits alive for that month.
