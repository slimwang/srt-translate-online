1
00:00:00,330 --> 00:00:04,470
Let us look at the first, the model
base method for adapting our case.

2
00:00:04,470 --> 00:00:06,590
Once again we're in this micro world.

3
00:00:06,590 --> 00:00:09,280
Let us suppose that we
begin from our office, and

4
00:00:09,280 --> 00:00:10,970
we need to go to a restaurant.

5
00:00:10,970 --> 00:00:14,350
Given the problem of going from the
office to the restaurant, let us suppose

6
00:00:14,350 --> 00:00:18,920
that we retrieve from memory a case
that takes us to a doctor's office,

7
00:00:18,920 --> 00:00:22,630
which is quite close to the restaurant
but not the same as the restaurant.

8
00:00:22,630 --> 00:00:26,750
So one way in which I might be able to
allot this case that I have received

9
00:00:26,750 --> 00:00:29,310
to address the problem going from
the office to the restaurant,

10
00:00:29,310 --> 00:00:32,780
is to do a search using this model,

11
00:00:32,780 --> 00:00:36,460
this map of the world, which tells me
that to go from the doctor's office to

12
00:00:36,460 --> 00:00:38,920
the restaurant office,
you can take this particular route.

13
00:00:39,960 --> 00:00:42,420
So now, I have the earlier case,

14
00:00:42,420 --> 00:00:45,440
which I've adapted,
using some model of the world.

15
00:00:45,440 --> 00:00:49,960
This is an example of using
models In order to adapt cases.

16
00:00:49,960 --> 00:00:54,130
>> So in my programming example earlier,
instead of having a map of the world,

17
00:00:54,130 --> 00:00:58,250
we might have for example an API for
interacting with a particular language.

18
00:00:58,250 --> 00:01:02,855
I've done input from a file in
Python several hundred times, but

19
00:01:02,855 --> 00:01:04,765
I've never done it in Java before.

20
00:01:04,765 --> 00:01:07,265
I know that the overall
process of doing in from Java

21
00:01:07,265 --> 00:01:09,665
is going to be very similar to
the process of doing it in Python.

22
00:01:09,665 --> 00:01:14,065
And I have a model of the way Java
works, to know how to actually translate

23
00:01:14,065 --> 00:01:16,960
my case of doing in it in
Python to doing it in Java.

24
00:01:16,960 --> 00:01:18,150
>> Good example David.

25
00:01:18,150 --> 00:01:19,100
It is another one.

26
00:01:19,100 --> 00:01:20,226
This one is from design.

27
00:01:20,226 --> 00:01:22,486
When we design with
this kind of product,

28
00:01:22,486 --> 00:01:26,557
let's suppose a VLSI circuit for
example, than we not only know something

29
00:01:26,557 --> 00:01:29,982
about the configuration of
the elements in the design, we also

30
00:01:29,982 --> 00:01:34,310
have a model of how that particular
configuration is supposed to work.

31
00:01:34,310 --> 00:01:39,150
In fact, it might amuse you, David,
that about 25 years back in the 80s,

32
00:01:39,150 --> 00:01:42,920
when I wrote my PhD dissertation, it was
one of the first PhD dissertations that

33
00:01:42,920 --> 00:01:45,410
integrated model-based spacing and
case-based spacing.

34
00:01:45,410 --> 00:01:47,910
That was exactly the idea
in my PhD dissertation.

35
00:01:47,910 --> 00:01:52,300
You used models to be able to adapt,
evaluate, and store cases.
