1
00:00:00,430 --> 00:00:03,975
Let's revisit our restaurant menus example from the last unit. And we have

2
00:00:03,975 --> 00:00:08,236
objects for representing menus, as well as for representing a dish. So here's

3
00:00:08,236 --> 00:00:12,336
some code we might use to define a dish class. We only have two methods, we've

4
00:00:12,336 --> 00:00:16,423
defined init method which takes name, price, and description and assigns those

5
00:00:16,423 --> 00:00:20,616
to attributes of the self object. And we define the str method. Which turns it

6
00:00:20,616 --> 00:00:24,999
into string and I've used the string format method to do that. Formats are a

7
00:00:24,999 --> 00:00:28,866
really useful method provided by the string built in type provided by thumb. We

8
00:00:28,866 --> 00:00:32,469
can see it's a string method. Here's the string. And then we're using dot and

9
00:00:32,469 --> 00:00:36,720
format as the attribute and we're calling that method, passing in these values.

10
00:00:36,720 --> 00:00:39,744
There are lots of things that we can do in this format string to get output the

11
00:00:39,744 --> 00:00:43,844
way we want. Here the special syntax with the squiggly braces allows us to put

12
00:00:43,844 --> 00:00:48,134
values inside our string and in this case we're putting a value of name which is

13
00:00:48,134 --> 00:00:51,999
what was passed in as the name parameter. So its going to print out the name of

14
00:00:51,999 --> 00:00:55,761
the dish followed by the description with parenthesis around it and now for the

15
00:00:55,761 --> 00:00:59,409
price we've got the price has our value passed in as price and that's a number,

16
00:00:59,409 --> 00:01:03,465
we want that to appear with two decimal points. So it'll all look like this and

17
00:01:03,465 --> 00:01:07,162
that's what we get with a .2f. We could of course have written our own code to

18
00:01:07,162 --> 00:01:10,348
do all this if we didn't know about format but format a really easy way to

19
00:01:10,348 --> 00:01:13,858
generate formatted strings and there are lots and lots of different things we

20
00:01:13,858 --> 00:01:16,786
can do with format. I'm not going to go into details here. I'm going to assume

21
00:01:16,786 --> 00:01:19,873
that you're all enough of a pythonista, at this point, to be able to figure it

22
00:01:19,873 --> 00:01:24,005
out yourself. From the Python documentation, and from examples. And you'll find

23
00:01:24,005 --> 00:01:24,783
a link to that below.
