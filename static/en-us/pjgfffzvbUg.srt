1
00:00:00,000 --> 00:00:08,000
In the path planning class, we specified paths as a sequence of points in a 2D grid

2
00:00:08,000 --> 00:00:10,000
just like this over here.

3
00:00:10,000 --> 00:00:14,000
For the smoothing purposes, we will call each point xi.

4
00:00:14,000 --> 00:00:20,000
This is a sequence that goes from x0 to xn-1,

5
00:00:20,000 --> 00:00:25,000
and each of the x's is really a 2-dimensional coordinate, but that should be immaterial to the smoothing.

6
00:00:25,000 --> 00:00:28,000
You could do this in 1D, 2D, or 3D.

7
00:00:28,000 --> 00:00:34,000
Here's the smoothing algorithm. Initially we create variable yi that are the same

8
00:00:34,000 --> 00:00:39,000
as all the xi's. Remember that these are the non-smooth locations that the planner has found.

9
00:00:39,000 --> 00:00:41,000
Then we optimize two criteria.

10
00:00:41,000 --> 00:00:47,000
The first is minimizing this expression over here, and the second looks as follows.

11
00:00:47,000 --> 00:00:52,000
In the first one we minimize the error of the ith original point with the ith smooth point,

12
00:00:52,000 --> 00:00:57,000
and the second we minimize the distance between consecutive smooth points, both to the square.

13
00:00:57,000 --> 00:00:59,000
Here's a little quiz.

14
00:00:59,000 --> 00:01:04,000
If we only apply the first criteria--forget about the second one--will we get the original path,

15
00:01:04,000 --> 00:01:09,000
and smooth path, or no path. Please check exactly one of those boxes.
