1
00:00:00,000 --> 00:00:08,000
Now let's go and proceed a bit systematically. The situation we are in is classical.

2
00:00:08,000 --> 00:00:14,000
We do have a program and the program gets some input and out pops a failure

3
00:00:14,000 --> 00:00:16,000
that can be seen by the user.

4
00:00:16,000 --> 00:00:21,000
What is a failure in here? A failure is an error.

5
00:00:21,000 --> 00:00:26,000
An error that's externally visible that is visible by the user.

6
00:00:26,000 --> 00:00:33,000
What is an error? An error is something that deviates from what's correct, right, or truth.

7
00:00:33,000 --> 00:00:41,000
Errors are typically unwanted and unintended. Failures are error. A defect is also an error.

8
00:00:41,000 --> 00:00:44,000
A defect, however, is somewhere in the code.

9
00:00:44,000 --> 00:00:49,000
The defect is what turns otherwise valid input in the end into a failure.

10
00:00:49,000 --> 00:00:53,000
The term defect is an error in the code as in several synonyms.

11
00:00:53,000 --> 00:00:58,000
Some people also called this a fault but then a fault can also be applied to data.

12
00:00:58,000 --> 00:01:04,000
The by far most common word for defect, however, is of course, bug.

13
00:01:04,000 --> 00:01:12,000
There is a bug in my code somewhere as if this had somehow crawled in into my code.

14
00:01:12,000 --> 00:01:16,000
Here is this foreign but, this is my code, it doesn't belong here. That's okay.

15
00:01:16,000 --> 00:01:22,000
In the end, it's us programmers who are actually introducing these bugs in there

16
00:01:22,000 --> 00:01:25,000
and so are very much prefer the term defect.

17
00:01:25,000 --> 00:01:31,000
The aim of debugging is to find the defect that causes the problem.

18
00:01:31,000 --> 00:01:33,000
For this, I want you to look a little bit deeper into how a program actually executes.
