1
00:00:00,300 --> 00:00:04,670
Now lets talk a little bit more in depth about interruption signal handling.

2
00:00:04,670 --> 00:00:06,250
Lets start with interrupts.

3
00:00:06,250 --> 00:00:09,900
When a device like disk for instance wants to send the notification to

4
00:00:09,900 --> 00:00:14,760
the CPU it sends an interrupt by basically sending a signal through

5
00:00:14,760 --> 00:00:19,040
the interconnect that connects the device to the CPU complex.

6
00:00:19,040 --> 00:00:23,050
In the past for this we used dedicated wires, but most modern

7
00:00:24,110 --> 00:00:29,380
there's a special message called a message signal interrupter, MSI, that can be

8
00:00:29,380 --> 00:00:33,770
carried on the same interconnect that connects the devices to the CPU complex.

9
00:00:33,770 --> 00:00:36,110
So PC Express, for instance.

10
00:00:36,110 --> 00:00:41,490
Based on the pins where the interrupt occurs or based on the MSI message.

11
00:00:41,490 --> 00:00:45,070
The interrupt can be uniquely identified so we know, based on this information,

12
00:00:45,070 --> 00:00:48,540
exactly which one of the devices generated the interrupt.

13
00:00:48,540 --> 00:00:51,700
Okay, so now the interrupt interrupts the execution of

14
00:00:51,700 --> 00:00:54,450
the thread that was executing on top of the CPU.

15
00:00:54,450 --> 00:00:56,460
And now what?

16
00:00:56,460 --> 00:00:59,673
Now, if the interrupt is enabled only,

17
00:00:59,673 --> 00:01:03,933
based on the interrupt number a table is referenced.

18
00:01:03,933 --> 00:01:08,375
For all the interrupt supported in this system, this table specifies what is

19
00:01:08,375 --> 00:01:12,170
the starting address of the interrupt handling routines?

20
00:01:12,170 --> 00:01:14,270
So, this is the interrupt handler table.

21
00:01:14,270 --> 00:01:18,440
Based on the interrupt number, for instance, interrupt-N in this case.

22
00:01:18,440 --> 00:01:21,960
We look up the starting address of the handler co.

23
00:01:21,960 --> 00:01:26,440
And then the program counter is set to that starting address.

24
00:01:26,440 --> 00:01:29,770
And the execution of interrupt handling link routine starts.

25
00:01:29,770 --> 00:01:33,850
All of this happens in the context of the thread, which was interrupted.

26
00:01:33,850 --> 00:01:38,570
Remember again that which exact interrupts can occur on a platform depends on

27
00:01:38,570 --> 00:01:43,110
the hardware and how they're handled is specified by the operating system.
