1
00:00:00,120 --> 00:00:04,019
Note that with our setup, this call to an entity's update function, will allow

2
00:00:04,019 --> 00:00:09,504
each entity's unique logic function to be called. For example, the landmine

3
00:00:09,504 --> 00:00:13,323
update function will check against a timer, each frame, to determine whether or

4
00:00:13,323 --> 00:00:17,580
not it should blow up. While self-destructive in nature, this type of

5
00:00:17,580 --> 00:00:20,499
functionality is the backbone of our gaming system.

6
00:00:23,380 --> 00:00:23,716
[SOUND]

7
00:00:23,716 --> 00:00:26,836
Now the game engine is capable of updating all live entities, but it's calling

8
00:00:26,836 --> 00:00:31,076
a blank update method on each entity class instance. We need to fill in each

9
00:00:31,076 --> 00:00:35,290
entity's update method. But this might be a little too involved for a quiz.

10
00:00:35,290 --> 00:00:39,230
Let's instead, look at a single sub class of entity. The landmine disk class

11
00:00:39,230 --> 00:00:42,750
represents a landmine that's been placed in the environment, waiting for an

12
00:00:42,750 --> 00:00:47,235
unknowing robot to walk on top of it. We have a couple properties that make

13
00:00:47,235 --> 00:00:51,192
this possible. First off, is the landmine disk actually defines a lifetime of

14
00:00:51,192 --> 00:00:55,932
100 units. Secondly, is we override the kill function for the entity. To remove

15
00:00:55,932 --> 00:00:59,226
the physics engine body as well as the entity itself once this landmine is

16
00:00:59,226 --> 00:01:03,126
dead. Your job, if you choose to accept it, is to fill in the rest of this

17
00:01:03,126 --> 00:01:06,506
update function where we subtract 0.5 from the lifetime each update call, and

18
00:01:06,506 --> 00:01:11,899
then once we reach the bottom we call the kill function and return out.
