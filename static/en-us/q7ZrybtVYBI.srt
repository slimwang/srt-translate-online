1
00:00:00,000 --> 00:00:03,000
I here with Carson Knowle from Security Research Labs in Berlin.

2
00:00:03,000 --> 00:00:07,000
Carson has done a lot of interesting work on breaking real-world cryptosystems,

3
00:00:07,000 --> 00:00:12,000
including the GSM cryptosystem that's used to protect many mobile calls and SMS messages.

4
00:00:12,000 --> 00:00:16,000
He's going to give us a little demo of that and then explain how it works.

5
00:00:16,000 --> 00:00:20,000
I'd like to start with a motivating example of where this has been applied,

6
00:00:20,000 --> 00:00:25,000
cracking mobile phones--the 2G part of the phones we still use.

7
00:00:25,000 --> 00:00:29,000
Every phone today is still a 2G phone in some way,

8
00:00:29,000 --> 00:00:34,000
even though 3G and 4G now have been added to it.

9
00:00:34,000 --> 00:00:40,000
Breaking this, of course, allows you to snoop in on messages, phone calls,

10
00:00:40,000 --> 00:00:43,000
may allow you to put charges on somebody else's phones,

11
00:00:43,000 --> 00:00:47,000
and may allow you to track them, for instance, right?

12
00:00:47,000 --> 00:00:50,000
You can certainly get in a lot of trouble for misusing those powers.

13
00:00:50,000 --> 00:00:53,000
Yes, and we certainly want to stay away from that today,

14
00:00:53,000 --> 00:00:57,000
which is why we're only breaking this phone, my phone.

15
00:00:57,000 --> 00:01:02,000
The demo I want to show is intercepting a text message sent to this phone.

16
00:01:02,000 --> 00:01:06,000
It's something that is delivered to the phone in an encrypted form--

17
00:01:06,000 --> 00:01:10,000
an encryption function from 20 years ago, but some of these are still solild.

18
00:01:10,000 --> 00:01:15,000
DES, for instance--TripleDES anyway.

19
00:01:15,000 --> 00:01:20,000
However, this one turns out to be weak and how weak we'll show now.

20
00:01:20,000 --> 00:01:27,000
For this I need a way of intercepting the phone communication with another phone.

21
00:01:27,000 --> 00:01:31,000
Of course, every phone can record phone traffic.

22
00:01:31,000 --> 00:01:35,000
Usually, they'll record traffic sent to their own number.

23
00:01:35,000 --> 00:01:40,000
If you slightly reprogram it, it'll just record traffic sent to any number

24
00:01:40,000 --> 00:01:42,000
or whatever number you specify.

25
00:01:42,000 --> 00:01:49,000
To stay in the legal side, we'll make it just intercept traffic off this one other phone today.

26
00:01:49,000 --> 00:01:58,000
This and a little bit of theory that you'll learn today is all that's needed to intercept a text message.

27
00:01:58,000 --> 00:02:00,000
Okay. You see these blue lines?

28
00:02:00,000 --> 00:02:08,000
These are all attempts of the cell to reach phones for whatever reason.

29
00:02:08,000 --> 00:02:11,000
Those are--we don't want to intercept them.

30
00:02:11,000 --> 00:02:17,000
Now you see the red lines. This is when it started sending data to the right phone.

31
00:02:17,000 --> 00:02:19,000
The one where we gave it--

32
00:02:19,000 --> 00:02:21,000
So you set this up only to look at data that's sent to that particular number. >>Right.

33
00:02:21,000 --> 00:02:25,000
We could have put any number or just left it out to intercept it.

34
00:02:25,000 --> 00:02:28,000
That would put us on the wrong side of the law.

35
00:02:28,000 --> 00:02:39,000
You see after just over 2 seconds, it found the correct key.

36
00:02:39,000 --> 00:02:44,000
It also would show the from number. We blanked this out here.

37
00:02:44,000 --> 00:02:49,000
It did come from England though. Interesting service you're using there.

38
00:02:49,000 --> 00:02:54,000
And, of course, the texter of the SMS--the actual secret.

39
00:02:54,000 --> 00:02:59,000
All of this can be cracked in less than 3 seconds, apparently.

40
00:02:59,000 --> 00:03:04,000
While we are on this data, let me briefly show you

41
00:03:04,000 --> 00:03:07,000
what actually was exchanged between the phones, which will be interesting later

42
00:03:07,000 --> 00:03:10,000
to see why this was crackable.

43
00:03:10,000 --> 00:03:14,000
In particular, we'll ask the question, why was this predictable in parts.

44
00:03:14,000 --> 00:03:18,000
Some of the messages that you're intercepting you need to be able to guess what they are.

45
00:03:18,000 --> 00:03:25,000
That's ciphering, which is the old word for starred encryption.

46
00:03:25,000 --> 00:03:30,000
Then everything below here is encrypted.

47
00:03:30,000 --> 00:03:34,000
Now, a lot of this shouldn't be encrypted, at least it's not secret.

48
00:03:34,000 --> 00:03:38,000
For instance, the GPRS data connection list switched off.

49
00:03:38,000 --> 00:03:42,000
While you're receiving an SMS, apparently this phone is not supposed

50
00:03:42,000 --> 00:03:46,000
to also do data connections for just 1 second.

51
00:03:46,000 --> 00:03:53,000
Then the cell introduces itself, saying I am the cell that uses all of these frequencies.

52
00:03:53,000 --> 00:03:59,000
It did that as well before. You see up here the exact same message but unencrypted.

53
00:03:59,000 --> 00:04:02,000
Here's the borderline. >>So these messages are very predictable.

54
00:04:02,000 --> 00:04:06,000
Very predictable given one's encrypted and one's not.

55
00:04:06,000 --> 00:04:11,000
Then the phone responds, hey, I measured our communication,

56
00:04:11,000 --> 00:04:16,000
and I measured you to be this far away.

57
00:04:16,000 --> 00:04:20,000
This is for tweaking certain parameters--also not very secret,

58
00:04:20,000 --> 00:04:27,000
because probably the measurement report didn't change much from before the encryption.

59
00:04:27,000 --> 00:04:31,000
He goes on to exchange a few empty packets.

60
00:04:31,000 --> 00:04:35,000
In JSM you have to say something in certain time slots,

61
00:04:35,000 --> 00:04:38,000
and if you have nothing to say then you say you have nothing to say. Exactly.

62
00:04:38,000 --> 00:04:40,000
These are just empty.

63
00:04:40,000 --> 00:04:45,000
Again it measures. Again, empty, empty, empty, empty.

64
00:04:45,000 --> 00:04:48,000
And again, the cell introduces itself and again it measures.

65
00:04:48,000 --> 00:04:54,000
And again an empty and an empty frame.

66
00:04:54,000 --> 00:04:56,000
And only now the actual SMS is exchanged.

67
00:04:56,000 --> 00:05:04,000
The from number with the text--I won't go into it so we don't see the from number.

68
00:05:04,000 --> 00:05:07,000
The phone acknowledges the message as being received.

69
00:05:07,000 --> 00:05:11,000
These are the only two messages that I actually really needed.

70
00:05:11,000 --> 00:05:15,000
Only one of them should really be encrypted.

71
00:05:15,000 --> 00:05:19,000
This cell, again, introduces itself as if the connection wasn't over yet.

72
00:05:19,000 --> 00:05:23,000
And again, the phone measures. There's a couple more empty messages.

73
00:05:23,000 --> 00:05:27,000
The cell says, "Please stop using this channel. We are done."

74
00:05:27,000 --> 00:05:32,000
Just in case the phone hasn't gone away yet, sends more empty encrypted messages.

75
00:05:32,000 --> 00:05:35,000
Now, this is all the decrypted traffic after you've decrypted it,

76
00:05:35,000 --> 00:05:38,000
but before decrypting it you've got a pretty good guess of what was in it

77
00:05:38,000 --> 00:05:41,000
other than that one frame with the message.

78
00:05:41,000 --> 00:05:46,000
Precisely, each predictable message gives us some attack surface

79
00:05:46,000 --> 00:05:49,000
that we can exploit using methods that we want to discuss next.

80
00:05:49,000 --> 00:05:54,000
Great, well, let's hear about how you actually explain that.
