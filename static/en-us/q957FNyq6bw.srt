1
00:00:00,000 --> 00:00:03,062
To start off, let me actually go
back to the source, and actually,

2
00:00:03,062 --> 00:00:06,878
show you the video that Noah Snavely,
Steven Seitz, and Rick Szeliski did with

3
00:00:06,878 --> 00:00:10,021
the paper that actually, resulted
in the concept of Photo Tourism.

4
00:00:10,021 --> 00:00:14,642
And how we can actually use this,
to now showcase photographs of space,

5
00:00:14,642 --> 00:00:17,010
to showcase a variety of instances.

6
00:00:17,010 --> 00:00:18,374
And specifically in this case,

7
00:00:18,374 --> 00:00:21,558
they're going to talk more about how
we can actually, see popular sites,

8
00:00:21,558 --> 00:00:24,964
where pictures have been taken, by
variety of people, not just by one-self.

9
00:00:24,964 --> 00:00:28,099
>> Searching for a particular image
of a well-photographed object

10
00:00:28,099 --> 00:00:31,975
using conventional tools, often results
in a large number of images that are not

11
00:00:31,975 --> 00:00:33,518
ordered, in an intuitive way.

12
00:00:33,518 --> 00:00:35,136
Finding the exact picture you want,

13
00:00:35,136 --> 00:00:37,704
can mean browsing through page
after page of thumbnails.

14
00:00:37,704 --> 00:00:41,258
How can we organize such large photo
collections, in a more intuitive way?

15
00:00:41,258 --> 00:00:43,329
In this project,
we present a novel system for

16
00:00:43,329 --> 00:00:46,581
registering large sets of photos,
and exploring them in a 3D browser.

17
00:00:46,581 --> 00:00:49,768
Our system discovers the relative
positions of the cameras used to take

18
00:00:49,768 --> 00:00:53,221
each photograph, situates the photos
in 3D space, and provides intuitive

19
00:00:53,221 --> 00:00:56,643
controls for exploring the scene,
and finding interesting photographs.

20
00:00:56,643 --> 00:01:00,463
Our system takes a collection of photos,
from the same scene as input.

21
00:01:00,463 --> 00:01:02,675
We first find key points in
each of the input images,

22
00:01:02,675 --> 00:01:04,848
then match keypoints between
each pair of images.

23
00:01:04,848 --> 00:01:09,164
Next, we run an adjustment procedure to
estimate the parameters of each camera,

24
00:01:09,164 --> 00:01:11,395
and the positions of
the observed 3D points.

25
00:01:11,395 --> 00:01:13,144
Once the photos have been registered,

26
00:01:13,144 --> 00:01:15,851
they can be browsed using our
photo exploration interface.

27
00:01:15,851 --> 00:01:19,102
Our system provides standard controls,
for moving around a 3D scene.

28
00:01:19,102 --> 00:01:21,179
In addition,
when the user selects a photograph,

29
00:01:21,179 --> 00:01:24,242
the virtual camera is smoothly brought
into alignment, with that photo.

30
00:01:24,242 --> 00:01:27,676
Information about the photograph appears
in the information pane, on the left.

31
00:01:27,676 --> 00:01:30,947
Our system provides several intuitive
ways, to select new photos.

32
00:01:30,947 --> 00:01:32,593
One is to select an object.

33
00:01:32,593 --> 00:01:35,009
The user can highlight a region
of the current photo, and

34
00:01:35,009 --> 00:01:37,693
the system automatically finds
a good photo of the selection.

35
00:01:37,693 --> 00:01:40,475
And smoothly, moves the virtual
camera to the new photo.

36
00:01:40,475 --> 00:01:43,041
During transitions we use
a simple plane-based morph,

37
00:01:43,041 --> 00:01:44,864
to provide context as the camera moves.

38
00:01:44,864 --> 00:01:47,272
A thumbnail pane along
the bottom of the screen,

39
00:01:47,272 --> 00:01:49,455
shows other photos of
the selected object.

40
00:01:49,455 --> 00:01:52,897
When the user moves the mouse over
a thumbnail, that photo is displayed in

41
00:01:52,897 --> 00:01:56,739
the main view, projected onto a planar
approximation, to the selected object.

42
00:01:56,739 --> 00:02:00,701
Here, the user selects a thumbnail to
see a different view of the statute.

43
00:02:00,701 --> 00:02:04,033
We also provide tools for
viewing the scene, at different scales.

44
00:02:04,033 --> 00:02:06,959
The user can step back from the scene,
with the zoom out tool.

45
00:02:06,959 --> 00:02:09,906
This finds photos that display
a larger area of the scene.

46
00:02:09,906 --> 00:02:13,306
The Show Me Similar Images tool finds
images of the scene with scale, and

47
00:02:13,306 --> 00:02:15,715
orientation similar to
that of the current photo.

48
00:02:15,715 --> 00:02:18,524
The Zoom In button finds details,
showing the user what

49
00:02:18,524 --> 00:02:21,465
parts of the scene,
can be viewed at a higher resolution.

50
00:02:21,465 --> 00:02:25,204
Here, the user selects a photo
of the in the upper left, and

51
00:02:25,204 --> 00:02:27,905
the browser zooms into
the more detailed photo.

52
00:02:27,905 --> 00:02:31,510
Our second example uses a set
of photos taken by one person,

53
00:02:31,510 --> 00:02:33,249
over the course of two days.

54
00:02:33,249 --> 00:02:36,157
We registered the photographs,
and reconstructed line segments,

55
00:02:36,157 --> 00:02:36,967
as well as points.

56
00:02:36,967 --> 00:02:39,898
We can align the reconstructed
model with the satellite image,

57
00:02:39,898 --> 00:02:42,352
to situate in a geo-referenced
coordinate system.

58
00:02:42,352 --> 00:02:45,480
We rendered the scene using
the reconstructed line segments.

59
00:02:45,480 --> 00:02:48,796
We also project blurred, partially
transparent versions of the photos on to

60
00:02:48,796 --> 00:02:52,022
the scene, to convey more information
with a non-photo realistic look.

61
00:02:52,022 --> 00:02:54,728
An overhead map is displayed
in the upper right,

62
00:02:54,728 --> 00:02:57,041
the user can select
a photo using the map.

63
00:02:57,041 --> 00:03:01,367
Here, the user selects a building,
to see a photograph of it.

64
00:03:01,367 --> 00:03:05,382
For this data set,
we can also move left, and right,

65
00:03:05,382 --> 00:03:07,889
along a row of building facades.

66
00:03:07,889 --> 00:03:10,896
We provide geometric controls,
for this type of interaction.

67
00:03:10,896 --> 00:03:14,032
For each photograph, we pre-compute
a left, and right neighbor based on

68
00:03:14,032 --> 00:03:16,545
the projected motion of the points
preserved by the image.

69
00:03:16,545 --> 00:03:19,498
We also pre-compute a step back image,
so

70
00:03:19,498 --> 00:03:22,538
the user can quickly
view more of the scene.

71
00:03:29,283 --> 00:03:31,839
In this example, we explore photos of
the Notre Dame Cathedral in Paris,

72
00:03:31,839 --> 00:03:32,757
downloaded from the web.

73
00:03:32,757 --> 00:03:36,536
The user can select regions in the point
cloud, to find images of an object.

74
00:03:39,340 --> 00:03:41,495
Our system also,
allows you to annotate photos.

75
00:03:41,495 --> 00:03:43,872
These annotations are automatically
transferred to new images.

76
00:03:43,872 --> 00:03:46,613
Here, these are labeled several
regions of the current photo.

77
00:03:46,613 --> 00:03:50,108
As each is labelled we transfer
the annotation to the other photos.

78
00:03:50,108 --> 00:03:53,277
The transferred annotations
are highlighted in the thumbnail pane.

79
00:03:53,277 --> 00:03:55,857
So, as not to cover the photos,
we'll hide the panes, and

80
00:03:55,857 --> 00:03:58,397
use the hot key to step to
the next photo, in the sequence.

81
00:03:58,397 --> 00:04:01,384
As we move to each photograph,
the annotations appear.

82
00:04:01,384 --> 00:04:03,420
Our system uses simple heuristics,

83
00:04:03,420 --> 00:04:06,118
to determine if a annotated
region is occluded.

84
00:04:06,118 --> 00:04:08,576
As in this example,
where one region is hidden.

85
00:04:08,576 --> 00:04:12,112
We can also transfer annotations
from other sources such as,

86
00:04:12,112 --> 00:04:13,818
annotated images on Flickr.

87
00:04:13,818 --> 00:04:18,512
In this scene, we've also added
several other annotations by hand.

88
00:04:23,388 --> 00:04:25,460
Our annotation transfer
algorithm is sensitive to scale.

89
00:04:25,460 --> 00:04:27,497
If we look at photographs
taken at different scales,

90
00:04:27,497 --> 00:04:28,731
we see different annotations.

91
00:04:38,137 --> 00:04:40,866
Next, we explore a set of photos of
Half Dome in Yosemite National Park,

92
00:04:40,866 --> 00:04:41,774
gathered from the web.

93
00:04:45,208 --> 00:04:46,602
If the user finds
a view point they like,

94
00:04:46,602 --> 00:04:49,068
our system makes it easy to find images
taken from a similar view point.

95
00:04:49,068 --> 00:04:52,251
By selecting the Lock The Camera option,
we can generate a slideshow,

96
00:04:52,251 --> 00:04:54,168
where an object remains
fixed in the view.

97
00:05:03,107 --> 00:05:04,043
Now, we unlock the camera.

98
00:05:04,043 --> 00:05:06,521
We can also register
historical imagery such as,

99
00:05:06,521 --> 00:05:09,649
this photograph of Half Dome
taken by Ansel Adams in 1960.

100
00:05:09,649 --> 00:05:13,773
Here's our estimate of where Ansel was
standing, when he took this photograph.

101
00:05:13,773 --> 00:05:16,897
[SOUND] Here, we compare the photograph
to a synthetic rendering,

102
00:05:16,897 --> 00:05:18,081
from the same location.

103
00:05:18,081 --> 00:05:20,864
The port has been manually,
added for clarity.

104
00:05:20,864 --> 00:05:22,795
Our final example is a scene created,

105
00:05:22,795 --> 00:05:25,943
from about 80 photos of a walk
along the Great Wall of China.

106
00:05:25,943 --> 00:05:29,641
We organized about 20 of the photos
seen here, into a slide show.

107
00:05:29,641 --> 00:05:32,642
We have experimented with
an alternative morphing technique,

108
00:05:32,642 --> 00:05:34,761
that creates a mesh from
the 3D point cloud.

109
00:05:34,761 --> 00:05:37,544
Which is used as an imposter,
for the true scene geometry.

110
00:05:37,544 --> 00:05:40,337
This methods often works well for
nearby view points, but

111
00:05:40,337 --> 00:05:42,969
creates artifacts in cases
where the matching fails.

112
00:05:49,267 --> 00:05:50,893
We hope you have enjoyed
our 3D photo tours.

113
00:05:50,893 --> 00:05:52,151
>> So, for more detail,

114
00:05:52,151 --> 00:05:55,281
visit the website that I
recommend you folks to look at.

115
00:05:55,281 --> 00:05:57,516
And actually, there is
additional data on this website.

116
00:05:57,516 --> 00:06:00,368
I wanted to show the entire video
because there's a lot of additional

117
00:06:00,368 --> 00:06:02,494
stuff, in this work,
that is actually exciting.

118
00:06:02,494 --> 00:06:05,805
And again, it covers a lot of things,
we've already kind of discussed.

119
00:06:05,805 --> 00:06:07,999
I'm going to give you more details,
on some of them.

120
00:06:07,999 --> 00:06:11,769
It builds on the concept of feature
detection, that we've looked at before,

121
00:06:11,769 --> 00:06:14,237
and are using that extract
parameters of cameras.

122
00:06:14,237 --> 00:06:15,234
And then, of course,

123
00:06:15,234 --> 00:06:17,711
you heard the mention a little
bit about port morphing.

124
00:06:17,711 --> 00:06:21,625
Where they actually use the point cloud,
as the proxy to help you do morphing,

125
00:06:21,625 --> 00:06:23,482
between different types of images.

126
00:06:23,482 --> 00:06:25,660
So now, let's dive in deeper.
