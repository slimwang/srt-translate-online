1
00:00:00,000 --> 00:00:02,500
Fix a bug as soon as you spot the problem?

2
00:00:02,500 --> 00:00:06,000
Well, if you can fix a bug, yes.

3
00:00:06,000 --> 00:00:10,500
But normally you'd like to think about the problem, whether you can generalize it,

4
00:00:10,500 --> 00:00:16,800
find about the best place to fix, reason about it until you have a very good diagnosis,

5
00:00:16,800 --> 00:00:18,000
so this is definitely not true.

6
00:00:18,000 --> 00:00:20,500
Always keep all details in your head.

7
00:00:20,500 --> 00:00:24,500
Well, the name of the last part was "Explicit Debugging,"

8
00:00:24,500 --> 00:00:28,300
so you should not always try to keep all details in your head. This is wrong.

9
00:00:28,300 --> 00:00:32,800
Explaining the problem can be helpful. Yes--plenty of anecdotal evidence for that.

10
00:00:32,800 --> 00:00:35,400
And finally, up to 50% to 70% of software development effort

11
00:00:35,400 --> 00:00:36,500
is spent on validation and debugging.

12
00:00:36,500 --> 00:00:38,500
This is also true, and this is something we really, really, really must change.
