1
00:00:00,270 --> 00:00:01,890
If you've been playing
careful attention,

2
00:00:01,890 --> 00:00:04,960
you will have noticed that the simplex
algorithm started with the basic

3
00:00:04,960 --> 00:00:06,410
feasible solution.

4
00:00:06,410 --> 00:00:10,237
Now in some cases basic feasible
solutions are easy to find just by

5
00:00:10,237 --> 00:00:11,083
inspection.

6
00:00:11,083 --> 00:00:13,060
But that's not always the case.

7
00:00:13,060 --> 00:00:17,020
For these harder cases, we can create
an auxiliary program to help us.

8
00:00:17,020 --> 00:00:19,230
First, we negate
the constraint equations so

9
00:00:19,230 --> 00:00:22,020
that we have B is non-negative.

10
00:00:22,020 --> 00:00:25,020
Then we create an auxiliary
program as follows.

11
00:00:25,020 --> 00:00:31,380
We introduce artificial variables Y that
represent the slack between Ax and b.

12
00:00:31,380 --> 00:00:34,351
We require these variables
to be non-negative and

13
00:00:34,351 --> 00:00:36,223
then try to minimize their sum.

14
00:00:36,223 --> 00:00:40,710
For this auxiliary program it is easy
to find a basic, feasible solution.

15
00:00:40,710 --> 00:00:44,330
Just that x equal to zero,
and y equal the b.

16
00:00:44,330 --> 00:00:47,938
Therefore we can start
simplex on this problem here.

17
00:00:47,938 --> 00:00:53,210
If the optimum here is zero,
then we can start the simplex algorithm

18
00:00:53,210 --> 00:00:58,910
on this problem at the value we found
for x, at the optimum to this one.

19
00:00:58,910 --> 00:01:01,230
On the other hand,
if the optimum isn't zero,

20
00:01:01,230 --> 00:01:05,940
then we conclude that our
original problem was in-feasible.

21
00:01:05,940 --> 00:01:10,090
This is sometimes called the two phase
approach for solving linear programs.
