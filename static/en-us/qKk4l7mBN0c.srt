1
00:00:00,430 --> 00:00:04,712
Okay, great, so now we know about
how ViewGroups can contain views.

2
00:00:04,712 --> 00:00:08,050
Each ViewGroup has specific rules on
how it will position the children

3
00:00:08,050 --> 00:00:09,270
inside of it.

4
00:00:09,270 --> 00:00:11,292
First, let's look at LinearLayout.

5
00:00:11,292 --> 00:00:15,120
This ViewGroup can arrange children
in a vertical column like this.

6
00:00:17,310 --> 00:00:20,990
Notice how we're not limited to just
one TextView and one ImageView.

7
00:00:20,990 --> 00:00:25,200
We can put as many of them as we want in
here as well as other types of views.

8
00:00:25,200 --> 00:00:27,220
So this is Tommy, and
this is his brother Timmy.

9
00:00:27,220 --> 00:00:30,426
And this is Ivy and
her twin sister Irene.

10
00:00:30,426 --> 00:00:35,780
Or the LinearLayout can arrange its
children views in a horizontal row

11
00:00:35,780 --> 00:00:36,410
like this.

12
00:00:38,400 --> 00:00:41,140
Hey, if you want to say no boys allowed,
that's totally fine with me.

13
00:00:42,240 --> 00:00:45,140
This is Ivy, Irene, and Isabella.

14
00:00:45,140 --> 00:00:47,630
Okay, and that's it for a LinearLayout.

15
00:00:47,630 --> 00:00:48,880
Pretty straightforward, right?

16
00:00:48,880 --> 00:00:52,225
You can arrange children in a vertical
column or in a horizontal row.

17
00:00:52,225 --> 00:00:54,847
And then we have dad,
the RelativeLayout.

18
00:00:54,847 --> 00:00:55,985
The RelativeLayout, again,

19
00:00:55,985 --> 00:00:58,575
has its own rules for
how to position its children within it.

20
00:00:59,575 --> 00:01:03,545
For example, it can position
children relative to the parent.

21
00:01:03,545 --> 00:01:05,455
So if this is the parent ViewGroup,

22
00:01:05,455 --> 00:01:09,040
we can have a child TextView aligned
to the bottom of the parent and

23
00:01:09,040 --> 00:01:12,270
a child ImageView aligned
to the top of the parent.

24
00:01:12,270 --> 00:01:14,380
This also works for
aligning to the parent's left and

25
00:01:14,380 --> 00:01:16,060
right edge as well as the center.

26
00:01:17,330 --> 00:01:19,870
The other useful capability
of RelativeLayout

27
00:01:19,870 --> 00:01:23,531
is that you can position children
relative to other children views.

28
00:01:23,531 --> 00:01:25,960
So, if this is the parent ViewGroup,

29
00:01:25,960 --> 00:01:30,310
then you can position an ImageView
on the left edge of the parent and

30
00:01:30,310 --> 00:01:33,760
then position a child TextView
to the right of that image.

31
00:01:33,760 --> 00:01:37,780
And then, this child TextView is
positioned to the right of the ImageView

32
00:01:37,780 --> 00:01:40,680
but also below this first TextView.

33
00:01:40,680 --> 00:01:44,690
So you see how some of these children
views are aligned relative to the parent

34
00:01:44,690 --> 00:01:46,100
or relative to each other.

35
00:01:47,210 --> 00:01:50,990
That was a really quick overview of
LinearLayout versus RelativeLayout.

36
00:01:50,990 --> 00:01:53,870
You can see how you might pick
one over the other depending

37
00:01:53,870 --> 00:01:55,620
on the type of layout that you want for
your app.

38
00:01:56,640 --> 00:02:00,190
Now let's look at the XML for
how a ViewGroup contains other views.

39
00:02:01,330 --> 00:02:02,050
In this example,

40
00:02:02,050 --> 00:02:06,060
we'll start with a ViewGroup that
contains two child TextViews.

41
00:02:07,200 --> 00:02:09,300
This is a little more code
than we're used to, but

42
00:02:09,300 --> 00:02:12,350
I want you to make some
observations about this code.

43
00:02:12,350 --> 00:02:17,370
As a hint, the parent code is in red,
and the child TextView code is in blue.

44
00:02:17,370 --> 00:02:20,030
We've linked that code below so
you can take a look at it and

45
00:02:20,030 --> 00:02:21,740
then write down three observations here.
