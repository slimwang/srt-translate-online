1
00:00:00,280 --> 00:00:03,980
In the first exercise you also
saw string interpolation.

2
00:00:03,980 --> 00:00:07,077
In other words,
inserting the values of variables and

3
00:00:07,078 --> 00:00:09,717
expressions directly
into string literals.

4
00:00:09,717 --> 00:00:14,007
Let's say we have a statement about how
much food my roommates dog Mia eats per

5
00:00:14,006 --> 00:00:14,471
month.

6
00:00:14,471 --> 00:00:18,250
[BLANK_AUDIO]

7
00:00:18,250 --> 00:00:20,942
If we use a variable for
the dog name instead of Mia,

8
00:00:20,942 --> 00:00:23,949
our statement becomes more versatile.

9
00:00:23,949 --> 00:00:28,329
Here I'm declaring dog name and
pounds per month as variables.

10
00:00:28,329 --> 00:00:32,658
So now, if I insert the variables
dog name, and pounds per month,

11
00:00:32,658 --> 00:00:36,839
into my doggy diet string,
then I can print out that string,

12
00:00:38,590 --> 00:00:42,690
and we will see that our
string has the same value.

13
00:00:42,689 --> 00:00:44,659
Now let's say instead of Mia,

14
00:00:44,659 --> 00:00:48,609
we want to know how much Zebedee
the Samoyed eats per month.

15
00:00:48,609 --> 00:00:52,665
So we'll just go up here, and we'll
switch out the values for our variables.

16
00:00:52,665 --> 00:00:56,831
[BLANK_AUDIO]

17
00:00:56,832 --> 00:01:03,359
Print it again, and voila,
we've got a statement about Zebedee now.

18
00:01:03,359 --> 00:01:13,055
[BLANK_AUDIO]

19
00:01:13,055 --> 00:01:15,949
We can also use string
interpolation with expressions.

20
00:01:15,948 --> 00:01:17,879
Zebedee is a pretty wordly pooch.

21
00:01:17,879 --> 00:01:23,019
Let's say we want to know how much
Zebedee eats in kilos instead of pounds.

22
00:01:23,019 --> 00:01:32,435
[BLANK_AUDIO]

23
00:01:32,436 --> 00:01:33,028
Okay.

24
00:01:33,028 --> 00:01:37,400
So now we're making a new string
called metricDoggieDiet, and

25
00:01:37,400 --> 00:01:40,290
we are inserting our
two variables in there.

26
00:01:40,290 --> 00:01:42,400
But instead of pounds per month,

27
00:01:42,400 --> 00:01:46,320
we're using an expression that
represents kilos per month.

28
00:01:46,319 --> 00:01:50,119
And then of course we change pounds
to kilos here in the string.

29
00:01:50,120 --> 00:01:51,990
And then this expression for kilos,

30
00:01:51,989 --> 00:01:56,549
which includes the conversion rate, can
be evaluated as this string is built.

31
00:01:56,549 --> 00:02:00,063
So now let's try printing out
our metric DoggieDiet string.

32
00:02:00,063 --> 00:02:03,843
[BLANK_AUDIO]

33
00:02:03,843 --> 00:02:04,919
Uh-oh.

34
00:02:04,920 --> 00:02:06,890
Okay, let's look at this error.

35
00:02:06,890 --> 00:02:11,729
Binary operator cannot be applied to
operands of type "Double" and "Int".

36
00:02:11,729 --> 00:02:13,599
Okay, I think I know
what's going on here.

37
00:02:13,599 --> 00:02:16,325
Our kilos in a pound is double, but

38
00:02:16,325 --> 00:02:21,030
our pounds per month is
probably defaulting to an Int.

39
00:02:21,030 --> 00:02:24,866
So, let's make that a double, and
see if that fixes the problem.

40
00:02:24,866 --> 00:02:27,742
[BLANK_AUDIO]

41
00:02:27,741 --> 00:02:31,439
All right, here's our
metricDoggyDiet string for Zebedee.

42
00:02:31,439 --> 00:02:35,939
And then if we want a statement for Mia,

43
00:02:35,939 --> 00:02:40,786
we just change our dog name variable,
change our pounds per month variable.

44
00:02:40,786 --> 00:02:43,123
Run it again.

45
00:02:43,123 --> 00:02:47,259
[BLANK_AUDIO]

46
00:02:47,259 --> 00:02:49,539
And there's our statement about Mia.

47
00:02:49,539 --> 00:02:50,979
And we are good to go.

