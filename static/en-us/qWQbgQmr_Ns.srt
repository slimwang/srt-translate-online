1
00:00:00,170 --> 00:00:04,140
Let's see the solution for our instruction pipelining quiz.

2
00:00:04,140 --> 00:00:06,850
We have a five-stage pipeline. Each stage takes one

3
00:00:06,850 --> 00:00:09,854
clock cycle. We have ten instructions. If we do

4
00:00:09,854 --> 00:00:13,856
instructions one at time with no pipelining, each instruction will

5
00:00:13,856 --> 00:00:16,850
need to go through all five stages. Takes five

6
00:00:16,850 --> 00:00:19,934
cycles to do that. And then the next instruction can

7
00:00:19,934 --> 00:00:22,139
go, and takes five cycles to do that, and

8
00:00:22,139 --> 00:00:25,993
so on. So we're going to have five cycles per instruction,

9
00:00:25,993 --> 00:00:28,949
times ten instructions. It will be 50 cycles

10
00:00:28,949 --> 00:00:32,580
until we are done. With pipelining, remember that

11
00:00:32,580 --> 00:00:35,505
the first instruction will take five cycles to

12
00:00:35,505 --> 00:00:38,205
go through but the next instruction will be

13
00:00:38,205 --> 00:00:40,577
one cycle behind. So it will take one

14
00:00:40,577 --> 00:00:43,503
cycle to get the next instruction, one cycle

15
00:00:43,503 --> 00:00:45,582
to get the one after that, and so

16
00:00:45,582 --> 00:00:50,670
on. So the remaining nine instructions finish every cycle.

17
00:00:51,830 --> 00:00:56,040
Overall, it takes 14 cycles. As you can see again, we

18
00:00:56,040 --> 00:01:00,406
have a significant speed-up from using pipelining. And just like with laundry,

19
00:01:00,406 --> 00:01:03,808
don't forget that it takes some initial number of cycles to fill

20
00:01:03,808 --> 00:01:08,280
the pipeline. Only then, we can get an instruction leaving every cycle.
