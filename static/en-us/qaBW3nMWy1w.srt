1
00:00:00,570 --> 00:00:04,820
We've seen how to create new Gradle
tasks, and add task actions to them.

2
00:00:04,820 --> 00:00:07,330
So far, task action
implementations have been simple,

3
00:00:07,330 --> 00:00:10,020
such as just writing
text out to the console.

4
00:00:10,020 --> 00:00:12,360
But what about more sophisticated tasks?

5
00:00:12,360 --> 00:00:16,370
How might we go about implementing
a task action for, say, copying files?

6
00:00:16,370 --> 00:00:17,950
We would first have to
define some way for

7
00:00:17,950 --> 00:00:21,390
the users to configure which files
should be copied and to where.

8
00:00:21,390 --> 00:00:25,420
We then have to write all the I/O code
necessary to perform the copy action,

9
00:00:25,420 --> 00:00:27,640
handle errors, and
report status back to the user.

10
00:00:28,740 --> 00:00:32,430
Thankfully, Gradle includes many
tasks which are preconfigured

11
00:00:32,430 --> 00:00:34,900
to provide commonly
needed functionality.

12
00:00:34,900 --> 00:00:38,440
We distinguish these tasks by their
type, such as copy, delete, or zip.

13
00:00:39,470 --> 00:00:42,330
We refer to these kinds
of task as type task.

14
00:00:42,330 --> 00:00:46,040
In contrast, tasks whose actions are
implemented inline in the build script

15
00:00:46,040 --> 00:00:50,340
using gif first or gif last
are referred to as ad hoc tasks.

16
00:00:50,340 --> 00:00:54,370
The syntax for creating a type task
is similar to that of an ad hoc task,

17
00:00:54,370 --> 00:00:57,670
the difference being that we define the
type of the task as a name parameter.
