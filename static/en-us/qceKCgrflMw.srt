1
00:00:00,012 --> 00:00:02,272
So in the intermediate stages of the merge,

2
00:00:02,272 --> 00:00:06,042
we have all the SMs working on independent merges, one SM per merge.

3
00:00:06,042 --> 00:00:09,208
At some point though, when we get to the very top of the merge tree,

4
00:00:09,208 --> 00:00:13,516
we only have a very small number of merges left or eventually, just one.

5
00:00:13,516 --> 00:00:18,752
We have a single task, but it's a very big task. Now, why is this bad?

6
00:00:18,752 --> 00:00:24,176
Why is it problematic for efficiency that we only have one merging task remaining?

7
00:00:24,176 --> 00:00:30,665
So why is this bad? Why is it problematic for efficiency that we have only one merging task remaining?

8
00:00:30,665 --> 00:00:35,676
Well, could be a number of things. We could have lots of idle threads per SM,

9
00:00:35,676 --> 00:00:40,926
We could just have lots of SMs that are idle, or we might suffer from very high branch divergence.

10
00:00:40,926 --> 00:00:43,387
So please check the one you think is the best answer.
