1
00:00:00,000 --> 00:00:05,000
All right, this review quiz is about precedence and associativity.

2
00:00:05,000 --> 00:00:08,000
Over here on the left, I've written out a grammar for list,

3
00:00:08,000 --> 00:00:11,000
and list selections in Python, which is kind of cool.

4
00:00:11,000 --> 00:00:14,000
An expression can be a list of integers separated by commas.

5
00:00:14,000 --> 00:00:16,000
You can have as many integers as you want, and let's imagine there is some other rule

6
00:00:16,000 --> 00:00:19,000
where int goes to [1, 2, 3] and we have tokens for that.

7
00:00:19,000 --> 00:00:23,000
You can take the length of the list, or if you're given a list,

8
00:00:23,000 --> 00:00:27,000
you can select off all but the last element.

9
00:00:27,000 --> 00:00:31,000
If you have the list [1, 2, 3], then you just get the list [1, 2].

10
00:00:31,000 --> 00:00:37,000
Now I tell you as part of this problem that "len" associates to the "right" and it has low precedence,

11
00:00:37,000 --> 00:00:43,000
and selecting off all but the last element associates to the left and has high precedence.

12
00:00:43,000 --> 00:00:46,000
Just like we may have told you before that multiplication has high precedence,

13
00:00:46,000 --> 00:00:48,000
and addition has lower precedence.

14
00:00:48,000 --> 00:00:53,000
Then the input here is I want to compute the length of [1, 2, 3] with the last element selected off.

15
00:00:53,000 --> 00:00:59,000
The last element selected off. And then down here, I've parenthesized that input two different ways.

16
00:00:59,000 --> 00:01:04,000
What I want you to do is check the box that corresponds to what are parse 3 looks like.

17
00:01:04,000 --> 00:01:10,000
If we were to put this associativity and precedence declaration into our parser with this grammar,

18
00:01:10,000 --> 99:59:59,999
which one of these worlds would we end up in?
