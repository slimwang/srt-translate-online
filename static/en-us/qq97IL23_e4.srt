1
00:00:00,280 --> 00:00:02,430
The problem here is
that M1 might not halt.

2
00:00:03,580 --> 00:00:06,100
If M1 accepts, then the program is fine.

3
00:00:07,220 --> 00:00:13,660
If M1 rejects, then we'll get to here,
M2 will accept, and D will reject.

4
00:00:13,660 --> 00:00:14,470
That's also correct.

5
00:00:15,600 --> 00:00:19,870
If M1 loops, however,
then this whole program will loop.

6
00:00:19,870 --> 00:00:25,398
Yet we need it to reject in order for
D to decide the language L.

7
00:00:25,398 --> 00:00:28,780
Note that M2 looping can't be a problem

8
00:00:29,830 --> 00:00:34,287
because it can only loop when
x is in the language, but

9
00:00:34,287 --> 00:00:39,180
then M1 would of accepted and
we would have accepted by that point.

10
00:00:39,180 --> 00:00:42,530
Also, if this program returns
any answer, it will be correct.

11
00:00:42,530 --> 00:00:45,180
So both of these are wrong for
that reason.

12
00:00:45,180 --> 00:00:47,600
All right, so
how do we fix this problem of looping?

13
00:00:48,780 --> 00:00:52,950
Well one idea is to run
the two programs parallel, and

14
00:00:52,950 --> 00:00:56,056
accept if M1 accepts,
and reject if M2 does.

15
00:00:56,056 --> 00:01:00,350
Now we can't actually run the two
programs in parallel, but

16
00:01:00,350 --> 00:01:04,739
we can do the next best thing by
switching between the two at every step.

17
00:01:04,739 --> 00:01:08,800
First running a step of M1,
then one of M2, then one of M1, etc.
