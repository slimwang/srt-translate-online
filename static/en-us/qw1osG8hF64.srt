1
00:00:00,000 --> 00:00:03,000
Let me show you how that actually works when we use SSH.

2
00:00:03,000 --> 00:00:07,000
Here I'm using SSH to log into udacity.com.

3
00:00:07,000 --> 00:00:12,000
What I see is a message that says the authenticity of the host can't be established.

4
00:00:12,000 --> 00:00:14,000
That means I don't already know a public key for the host.

5
00:00:14,000 --> 00:00:18,000
We can see because I don't already have a public key for udacity.com--

6
00:00:18,000 --> 00:00:21,000
that it cannot establish the authenticity of the host--

7
00:00:21,000 --> 00:00:27,000
it's showing me this finger print, which is a way for it to be more easy for a human to view the key,

8
00:00:27,000 --> 00:00:29,000
rather than seeing all the bites in the key.

9
00:00:29,000 --> 00:00:33,000
If I was very paranoid and careful, what I would do is call up an administrator that I trust

10
00:00:33,000 --> 00:00:38,000
at Udacity and say is this the finger print for our public key.

11
00:00:38,000 --> 00:00:41,000
If I'm less paranoid or more impatient,

12
00:00:41,000 --> 00:00:45,000
then I could connect, and once I connect that public key is going to be stored.

13
00:00:45,000 --> 00:00:48,000
It's added to the list of hosts that I have.

14
00:00:48,000 --> 00:00:51,000
I'm not going to actually continue connecting, but now I have a secure channel

15
00:00:51,000 --> 00:00:56,000
encrypted with some key that's been agreed to using the SSH protocol

16
00:00:56,000 --> 00:01:01,000
to send my password to the Udacity host knowing that it couldn't be intercepted.

17
00:01:01,000 --> 00:01:04,000
But this only has value if I really knew that this was the public key.

18
00:01:04,000 --> 00:01:06,000
Otherwise, I could be talking to anyone.

19
00:01:06,000 --> 00:01:11,000
What's happened as a result of this is now that key has been added to my collection of keys.

20
00:01:11,000 --> 00:01:18,000
Now if I look in the file. ssh/known_hosts, I'll see that I have udacity.com here.

21
00:01:18,000 --> 00:01:21,000
What's been stored is the IP address I was talking to

22
00:01:21,000 --> 00:01:25,000
as well as this is the public key that's stored for udacity.com.

23
00:01:25,000 --> 00:01:30,000
If I try it again, you'll see that it does connect. It has a secure channel now.

24
00:01:30,000 --> 00:01:35,000
It's verified it by checking that the public key that the server sent matched this one.

25
00:01:35,000 --> 00:01:38,000
What's more fun is if I modify this file.

26
00:01:38,000 --> 00:01:44,000
I'm going to make a little change to the public key. Let's change that 4 to a 3.

27
00:01:44,000 --> 00:01:46,000
Now let's try connecting again.

28
00:01:46,000 --> 00:01:51,000
What happens now is we get a very large yelling message with lots of capital letters,

29
00:01:51,000 --> 00:01:55,000
saying that the host identification has changed,

30
00:01:55,000 --> 00:02:00,000
that the host I'm trying to connect to sent back a public key that's different from the one I've stored.

31
00:02:00,000 --> 00:02:03,000
It means that someone could be doing something very nasty.

32
00:02:03,000 --> 00:02:06,000
In this case it means that I just modified the key file,

33
00:02:06,000 --> 00:02:09,000
and they're talking about possibly being eavesdropped on.

34
00:02:09,000 --> 00:02:12,000
It's really not the case that it would be eavesdropping.

35
00:02:12,000 --> 00:02:17,000
It must be an attack in the middle. This is a bit of poor wording in the error message.

36
00:02:17,000 --> 00:02:20,000
It's possible the key changed or something else happened.

37
00:02:20,000 --> 00:02:24,000
So they don't allow you to continue with the connection at this point.

38
00:02:24,000 --> 00:02:30,000
You could modify the file to create a new key, but it's worried enough that something

39
00:02:30,000 --> 00:02:33,000
has gone wrong that it won't let you connect.
