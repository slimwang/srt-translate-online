1
00:00:00,000 --> 00:00:04,000
I now want to teach you an alternative method for planning.

2
00:00:04,000 --> 00:00:09,000
This alternative method has a number of advantages and a number of disadvantages.

3
00:00:09,000 --> 00:00:11,000
It's called dynamic programming,

4
00:00:11,000 --> 00:00:14,000
and just like A-star, it's going to find you the shortest path.

5
00:00:14,000 --> 00:00:20,000
You give it a map of the environment as in A-star, one or more goal positions--

6
00:00:20,000 --> 00:00:22,000
let's assume just one goal position.

7
00:00:22,000 --> 00:00:26,000
What it outputs is the best path from any possible starting location.

8
00:00:26,000 --> 00:00:30,000
This planning technique is not just limited to a single

9
00:00:30,000 --> 00:00:35,000
start location, but to any start location. Why would we worry about this?

10
00:00:35,000 --> 00:00:37,000
Let me give you an example.

11
00:00:37,000 --> 00:00:43,000
Suppose you are the Google self-driving car in an environment just like this.

12
00:00:43,000 --> 00:00:47,000
You're in this little street over here, and you're asked to turn right,

13
00:00:47,000 --> 00:00:50,000
but your goal is right over here.

14
00:00:50,000 --> 00:00:57,000
As before, there are two different lanes over here--a left turn lane and a straight lane.

15
00:00:57,000 --> 00:01:00,000
If you reach the straight lane, the only way to get to the goal

16
00:01:00,000 --> 00:01:04,000
is to go around the block over here and proceed in this direction.

17
00:01:04,000 --> 00:01:06,000
You've seen this example before.

18
00:01:06,000 --> 00:01:09,000
Now, the point I want to make is a different one.

19
00:01:09,000 --> 00:01:15,000
That is, your attempt to do a lane shift over here might fail. Why would it fail?

20
00:01:15,000 --> 00:01:21,000
Well, it could be there's a big, big truck in this lane over here,

21
00:01:21,000 --> 00:01:26,000
and as you go into the right lane when you're waiting for the truck to disappear,

22
00:01:26,000 --> 00:01:31,000
there are these people behind you that honk their horns.

23
00:01:31,000 --> 00:01:34,000
You really don't want to wait for the truck to disappear.

24
00:01:34,000 --> 00:01:37,000
That means the environment is stochastic.

25
00:01:37,000 --> 00:01:40,000
The outcomes of actions are non-deterministic.

26
00:01:40,000 --> 00:01:43,000
In our planning so far we ignored this, but in reality that's the case.

27
00:01:43,000 --> 00:01:50,000
In reality, you might find yourself--wow, I'm over here. How did that happen?

28
00:01:50,000 --> 00:01:54,000
Well, it's happened because the world is stochastic, and this truck over here--

29
00:01:54,000 --> 00:01:57,000
this stupid truck---didn't let you in.

30
00:01:57,000 --> 00:02:02,000
What that means is you need a plan not just for the most likely position

31
00:02:02,000 --> 00:02:05,000
but you might need a plan for other positions as well.

32
00:02:05,000 --> 00:02:10,000
What dynamic programming gives you is a plan for every position.

33
00:02:10,000 --> 00:02:19,000
If we redraw this environment as a grid with a goal location and certain obstacles,

34
00:02:19,000 --> 00:02:26,000
they dynamic programming gives you an optimal action to do at every single grid cell.

35
00:02:26,000 --> 00:02:29,000
As you can see, each grid cell now has a label.

36
00:02:29,000 --> 00:02:32,000
That label is often called policy,

37
00:02:32,000 --> 00:02:39,000
and policy is a function that maps the grid cell into an action

38
00:02:39,000 --> 00:02:44,000
with the action in this case as a move left, move down, move right, or move up.

39
00:02:44,000 --> 00:02:51,000
Now, we will compute a policy using dynamic programming.

40
00:02:51,000 --> 00:02:55,000
That is, given a grid world like this and a goal state like that,

41
00:02:55,000 --> 00:03:00,000
we will write software that will output for each of the grid cells

42
00:03:00,000 --> 00:03:05,000
what the best thing is to do should the robot find itself there.

43
00:03:05,000 --> 00:03:07,000
That requires a different algorithm than A-star.

44
00:03:07,000 --> 00:03:10,000
It happens to be a more computation involved algorithm.

45
00:03:10,000 --> 99:59:59,999
As I said before, it's called dynamic programming for robot path planning.
