1
00:00:00,330 --> 00:00:02,530
Since we're on the subject
of focus management,

2
00:00:02,530 --> 00:00:05,390
let me show you another
really useful technique.

3
00:00:05,390 --> 00:00:09,930
On most websites the main content is
usually not the first thing in the DOM,

4
00:00:09,930 --> 00:00:13,810
instead we often begin with navigation,
sublists,

5
00:00:13,810 --> 00:00:19,380
side bars, hamburger menus, and
other bits of page scaffolding.

6
00:00:19,380 --> 00:00:22,820
This means that keyboard and screen
reader users must first navigate through

7
00:00:22,820 --> 00:00:26,280
all of this content before they can
get at the actual heart of the page.

8
00:00:27,560 --> 00:00:31,540
For users with motor impairments
this is especially frustrating.

9
00:00:31,540 --> 00:00:34,340
A user who's unable to move
their arms might be navigating

10
00:00:34,340 --> 00:00:38,250
the page with a switch device, which
they activate by tapping their head.

11
00:00:38,250 --> 00:00:42,580
This user is going to have to tap
over and over again to get through

12
00:00:42,580 --> 00:00:46,470
all of these elements before they can
get to our content, and that's not cool.

13
00:00:47,820 --> 00:00:51,890
Thankfully, there's an easy to
implement solution to this problem.

14
00:00:51,890 --> 00:00:54,590
Let's create a hidden link
that allows keyboard and

15
00:00:54,590 --> 00:00:58,370
switch device users the ability to
jump straight to our page content.

16
00:00:59,720 --> 00:01:02,680
These links are often
referred to as skip links.

17
00:01:02,680 --> 00:01:05,209
Let me show you an example.

18
00:01:05,209 --> 00:01:09,480
So here we are on the Funion news site,
and I have some navigation up here which

19
00:01:09,480 --> 00:01:11,870
normally the keyboard user
would have to tab through.

20
00:01:12,890 --> 00:01:15,140
Instead, when I press tab,

21
00:01:15,140 --> 00:01:18,160
the first thing I'm presented with is
this little option up here in the top

22
00:01:18,160 --> 00:01:21,849
of the corner, which is asking if I'd
like to skip down to the main content.

23
00:01:23,150 --> 00:01:26,990
Pressing Enter will then move focus
down to the main content area,

24
00:01:26,990 --> 00:01:29,480
bypassing all of our navigation.

25
00:01:29,480 --> 00:01:32,330
Implementing a skip link
is actually really easy.

26
00:01:32,330 --> 00:01:34,538
I'll start by creating a named anchor.

27
00:01:34,538 --> 00:01:37,970
So the href of this anchor

28
00:01:37,970 --> 00:01:42,100
refers to the ID of another element
that I'll have on the page.

29
00:01:42,100 --> 00:01:44,980
I'm also going to give this
element a class of skip-link so

30
00:01:44,980 --> 00:01:47,690
I can refer to it in CSS later.

31
00:01:47,690 --> 00:01:50,140
I want the skip link to
appear early in the DOM, so

32
00:01:50,140 --> 00:01:52,910
I'm going to put it
before my navigation.

33
00:01:52,910 --> 00:01:57,190
To connect my skip-link to my main
content, I'll give my main element

34
00:01:57,190 --> 00:02:01,850
an ID of maincontent,
which matches the href value up here.

35
00:02:01,850 --> 00:02:04,010
So these two are now connected.

36
00:02:05,500 --> 00:02:09,810
In newer versions of Chrome and Firefox
just doing this right here will allow

37
00:02:09,810 --> 00:02:13,900
you to move focus down to the main
element when the skip-link is pressed.

38
00:02:13,900 --> 00:02:17,920
But for older browsers which don't move
focus when named anchors are clicked,

39
00:02:17,920 --> 00:02:21,700
I'm also going to want to
add a tabindex -1.

40
00:02:21,700 --> 00:02:26,790
Over in my CSS, I'll make sure that the
skip-link has an absolute position, so

41
00:02:26,790 --> 00:02:28,948
it can appear in the top
left corner of the screen.

42
00:02:28,948 --> 00:02:32,720
But I'm going to make it
initially positioned off screen

43
00:02:32,720 --> 00:02:36,930
by setting the top value to -40 pixels.

44
00:02:36,930 --> 00:02:41,990
Then I can use the focus pseudo class
to move the element back on screen.

45
00:02:43,385 --> 00:02:46,200
We'll talk more about the focus
pseudo class in a later lesson, but

46
00:02:46,200 --> 00:02:49,760
the short explanation is that
this pseudo class matches

47
00:02:49,760 --> 00:02:53,580
any time the corresponding
element gains focus.

48
00:02:53,580 --> 00:02:57,190
With these simple techniques, we've
removed the road blocks from the path of

49
00:02:57,190 --> 00:02:59,940
our keyboard users and
greatly improve their experience.

50
00:03:01,030 --> 00:03:03,360
If you're interested to learn
more about other techniques for

51
00:03:03,360 --> 00:03:07,150
creating skip-links, I'll leave a link
down in the instructor notes to a WebAIM

52
00:03:07,150 --> 00:03:08,970
article, which covers
them in more detail.
