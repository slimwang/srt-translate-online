1
00:00:00,037 --> 00:00:01,907
Okay, final quiz.

2
00:00:01,907 --> 00:00:07,178
What I've got here is a list of potential reasons why the dynamic parallel version of quicksort

3
00:00:07,178 --> 00:00:10,116
ends up more efficient than the CPU-controlled one.

4
00:00:10,116 --> 00:00:14,620
We've got more efficient partitioning of the data inside the sort.

5
00:00:14,620 --> 00:00:19,790
We've got launching on the fly from the GPU rather than returning to the CPU to do the launch.

6
00:00:19,790 --> 00:00:23,527
Simpler code, because the code is a lot shorter and easier to write,

7
00:00:23,527 --> 00:00:26,531
and greater GPU utilization.

8
00:00:26,531 --> 00:00:28,867
Remember, that GPU utilization is making sure that

9
00:00:28,867 --> 00:00:32,803
as much of GPU is busy doing useful work at any given time.

10
00:00:32,803 --> 00:00:40,112
So as long as you've got enough threads going on at one time to keep the GPU busy, you have high utilization.

11
00:00:40,112 --> 00:00:41,842
So check all the boxes that apply.
