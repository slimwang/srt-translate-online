1
00:00:00,000 --> 00:00:02,000
[Evans] Here's the answer.

2
00:00:02,000 --> 00:00:06,000
When the procedure starts, p refers to some list that was passed in.

3
00:00:06,000 --> 00:00:08,000
We want the procedure to work on any list,

4
00:00:08,000 --> 00:00:10,000
so we shouldn't assume anything about the list that was passed in.

5
00:00:10,000 --> 00:00:12,000
It could be any length.

6
00:00:12,000 --> 00:00:14,000
And i has the value of 0.

7
00:00:14,000 --> 00:00:19,000
That means the value of p index i is this first element of the list p.

8
00:00:19,000 --> 00:00:22,000
In the loop body we print out that element,

9
00:00:22,000 --> 00:00:25,000
and then we go on to the next element by increasing i by 1.

10
00:00:25,000 --> 00:00:27,000
i will now have the value 1.

11
00:00:27,000 --> 00:00:30,000
We go to the next element of p.

12
00:00:30,000 --> 00:00:33,000
We're going to keep on going until we get through the elements.

13
00:00:33,000 --> 00:00:35,000
What we need for the test condition of the while

14
00:00:35,000 --> 00:00:37,000
is to figure out when to stop.

15
00:00:37,000 --> 00:00:40,000
We learned about the len operator.

16
00:00:40,000 --> 00:00:44,000
The len of a list tells us the number of elements in the list.

17
00:00:44,000 --> 00:00:48,000
The highest index in the list is not the value of len

18
00:00:48,000 --> 00:00:50,000
because the list starts from 0.

19
00:00:50,000 --> 00:00:54,000
The highest index is the value of len(p) - 1.

20
00:00:54,000 --> 00:00:56,000
So we want the test condition of the loop to make sure

21
00:00:56,000 --> 00:00:59,000
that i has not exceeded that last index.

22
00:00:59,000 --> 00:01:01,000
We could write that condition many different ways.

23
00:01:01,000 --> 00:01:06,000
One way would be to use i < = len(p) - 1

24
00:01:06,000 --> 00:01:10,000
since we know i is an integer since we created i, initialized it to the value 0,

25
00:01:10,000 --> 00:01:13,000
and the only thing we do with i is add 1 to it.

26
00:01:13,000 --> 00:01:19,000
This is equivalent to a simpler expression: i < len(p).

27
00:01:19,000 --> 00:01:21,000
Either of these would work as the test condition for our loop.

28
00:01:21,000 --> 00:01:24,000
We'll use the shorter one since it's simpler.
