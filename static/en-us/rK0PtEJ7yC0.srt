1
00:00:00,167 --> 00:00:07,599
So now let's step back a little bit and look at pre-processing in general. So you've already figured out three pre-processing rules for SAT.

2
00:00:07,600 --> 00:00:13,632
And what I would like you to think about now is, in general, if we think about pre-processing,

3
00:00:13,633 --> 00:00:17,866
what are the requirements that we would have for a pre-processing algorithm?

4
00:00:17,867 --> 00:00:21,499
And of course, since we're defining pre-processing, I write requirements here in brackets

5
00:00:21,500 --> 00:00:25,532
because it has a somewhat subjective component. But here's the three choices:

6
00:00:25,533 --> 00:00:28,799
So what would be kind of good requirements for pre-processing?

7
00:00:28,800 --> 00:00:35,832
The first one is that it must run in polynomial time; the second one is that pre-processing should always speed up the running time,

8
00:00:35,833 --> 00:00:42,766
which means it would speed up the worst-case running time. And the third one is that pre-processing should not affect the solution.

9
00:00:42,767 --> 00:00:48,799
By this, I mean that pre-processing does not change if we get a yes or a no as a result.

10
00:00:48,800 --> 00:00:53,132
If we have an optimization problem, it's the same. So if, for example, we're solving vertex cover

11
00:00:53,133 --> 00:00:57,199
and we're finding a solution of size ten, then after pre-processing, of course,

12
00:00:57,200 --> 00:01:02,332
we would also like that solution size to remain the same and not get a solution of 11 or 12.

13
00:01:02,333 --> 00:01:07,033
So please check which of these three here would be very sensible requirements for pre-processing.
