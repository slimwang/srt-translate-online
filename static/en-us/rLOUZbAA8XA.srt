1
00:00:00,000 --> 00:00:02,000
Here is my solution.

2
00:00:02,000 --> 00:00:05,000
As I go through all different actions a, as before,

3
00:00:05,000 --> 00:00:10,000
I now create a new inner loop of going through different action outcomes.

4
00:00:10,000 --> 00:00:14,000
This lists is (-1, 0, 1),

5
00:00:14,000 --> 00:00:17,000
and I set the actual outcome to the adjacent action in the action list.

6
00:00:17,000 --> 00:00:21,000
You might remember the action list is a list of different outcomes.

7
00:00:21,000 --> 00:00:27,000
By incrementing it by 1 or decrementing it by 1, I can pick a slightly different action in that list.

8
00:00:27,000 --> 00:00:30,000
Of course, I have to do the modulo 4 on the right side.

9
00:00:30,000 --> 00:00:36,000
Then the limitation is similar to before. I project the outcome into new coordinates--x2 and y2.

10
00:00:36,000 --> 00:00:39,000
Now I need to assign the probability with this outcome

11
00:00:39,000 --> 00:00:42,000
where if they modify a 0, we take the success probability.

12
00:00:42,000 --> 00:00:49,000
If it's not 0, we take 1 minus that divided by 2, because there are 2 possible undesired outcomes.

13
00:00:49,000 --> 00:00:52,000
Then the test proceeds by checking whether this is a legal grid cell,

14
00:00:52,000 --> 00:00:55,000
it's inside the grid, and the grid value is 0.

15
00:00:55,000 --> 00:00:59,000
Then like before, I add the value of the grid cell

16
00:00:59,000 --> 00:01:03,000
by now multiplying by the probability of that specific action outcome.

17
00:01:03,000 --> 00:01:06,000
Otherwise, I do the same for the collision cost.

18
00:01:06,000 --> 00:01:12,000
Finally, I take my cumulative value of v2, which I initialized with the cost of motion.

19
00:01:12,000 --> 00:01:14,000
You can't see this right here, but it's filled up.

20
00:01:14,000 --> 00:01:17,000
I update my value function just like before.

21
00:01:17,000 --> 00:01:19,000
You can see the quote over here.

22
00:01:19,000 --> 00:01:21,000
This is what you should have programmed.

23
00:01:21,000 --> 00:01:26,000
The key difference to our example in class is the inner loop over here

24
00:01:26,000 --> 00:01:29,000
where I go over different possible action outcomes,

25
00:01:29,000 --> 00:01:32,000
compute the actual action outcome,

26
00:01:32,000 --> 99:59:59,999
and then do the probabilistic addition of these outcomes rather than just studying one outcome.
