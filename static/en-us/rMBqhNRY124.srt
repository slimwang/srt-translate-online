1
00:00:00,530 --> 00:00:03,520
The answer is that only this
first statement is true, and

2
00:00:03,520 --> 00:00:07,860
it shows that the empty
problem is undecidable.

3
00:00:07,860 --> 00:00:09,650
The reduction is straightforward.

4
00:00:09,650 --> 00:00:13,470
The output machine just runs the input
machine on the empty string.

5
00:00:13,470 --> 00:00:15,270
And if it halts, it accepts.

6
00:00:16,390 --> 00:00:22,350
If the input machine is in H bar that
means that it loops on the empty string.

7
00:00:22,350 --> 00:00:27,310
And so will the output machine,
and it will accept nothing.

8
00:00:27,310 --> 00:00:34,000
On the other hand, if the input machine
is not an HTM, that means it does halt.

9
00:00:34,000 --> 00:00:36,840
And then the output machine
will accept everything.

10
00:00:36,840 --> 00:00:39,840
Use pencil and paper to confirm that
this reduction works for yourself.

11
00:00:40,890 --> 00:00:45,152
If you try to use a similar argument for
these next reductions, you'll find that

12
00:00:45,152 --> 00:00:49,039
the machines output by the reduction,
except when you want them to loop or

13
00:00:49,039 --> 00:00:52,066
reject, and loop or
reject when you want them to accept.

14
00:00:52,066 --> 00:00:55,715
But, proof by Lack of imagination
isn't very satisfactory.

15
00:00:55,715 --> 00:00:59,355
So let's actually show that if
these statements were true,

16
00:00:59,355 --> 00:01:01,135
then we would get a contradiction.

17
00:01:01,135 --> 00:01:02,565
If we could find these reductions,

18
00:01:02,565 --> 00:01:06,975
then this one would directly imply that
the halting problem is decidable, and

19
00:01:06,975 --> 00:01:11,380
this last one would imply that
the empty problem is decidable.

20
00:01:11,380 --> 00:01:15,100
Let's erase the rest and
focus on this contradiction here.

21
00:01:15,100 --> 00:01:19,970
We'll let R be the reduction such
that the description of the machine M

22
00:01:19,970 --> 00:01:24,240
is in H if and
only if R of them is in E.

23
00:01:25,280 --> 00:01:29,490
Then we let A be a recognizer for
the compliment of E.

24
00:01:29,490 --> 00:01:34,130
The compliment of E is the set of
machines that except something.

25
00:01:34,130 --> 00:01:36,680
We talked about how we can
recognize this language

26
00:01:36,680 --> 00:01:41,640
with the dove tailing strategy before,
so assume that A implements that.

27
00:01:41,640 --> 00:01:47,810
So to decide H we run M on empty
string and A on R of M in parallel.

28
00:01:47,810 --> 00:01:51,300
If M halts on the empty string,
we recognize that fact.

29
00:01:51,300 --> 00:01:57,260
And if it does not, we'll then R
of M must be an E complement so

30
00:01:57,260 --> 00:01:59,510
A must recognize that.

31
00:01:59,510 --> 00:02:04,270
And running these in parallel allows
us then to decide the halting problem.

32
00:02:04,270 --> 00:02:04,980
One way or another,

33
00:02:04,980 --> 00:02:07,880
we're going to ge tan answer
from one of these two machines.

34
00:02:07,880 --> 00:02:08,490
Overall then,

35
00:02:08,490 --> 00:02:12,540
the moral of the story is that you can't
mapping reduce a recognizable language,

36
00:02:12,540 --> 00:02:17,230
like the halting problem to a
co-recognizable like the empty problem.

37
00:02:17,230 --> 00:02:22,010
A co-recognizable language, by the way,
is one whose complement is recognizable.

38
00:02:22,010 --> 00:02:23,980
And vice versa doesn't work either.

39
00:02:23,980 --> 00:02:26,580
Keep this in mind when you're
trying to prove undecidability.
