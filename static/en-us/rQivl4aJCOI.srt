1
00:00:00,290 --> 00:00:04,160
The first code snippet will print 2,
3, 4, 5.

2
00:00:04,160 --> 00:00:06,700
I haven't shown you the plus
equals operation before, but

3
00:00:06,700 --> 00:00:09,110
it will modify the existing array.

4
00:00:09,110 --> 00:00:11,370
So, before you run this line, both a and

5
00:00:11,370 --> 00:00:15,092
b will point to the same array which
contains the elements 1, 2, 3, and 4.

6
00:00:16,129 --> 00:00:20,570
Running this line updates
the values to 2, 3, 4 and 5.

7
00:00:23,450 --> 00:00:25,670
So now if you print a or if you print b,

8
00:00:25,670 --> 00:00:28,502
you'll see the same result,
the array 2, 3, 4, 5.

9
00:00:29,650 --> 00:00:33,180
The second code snippet, on the other
hand, will print 1, 2, 3, 4.

10
00:00:34,200 --> 00:00:37,080
Once again, a and
b start off referring to the same array.

11
00:00:37,080 --> 00:00:38,222
1, 2, 3, 4.

12
00:00:38,222 --> 00:00:45,020
However, the plus operator without
an equal sign first creates a new array.

13
00:00:45,020 --> 00:00:48,840
The values in the new array are 2,
3, 4, and 5.

14
00:00:48,840 --> 00:00:53,380
Then setting A equal to this new array
updates A to refer to the new array.

15
00:00:54,390 --> 00:00:57,880
B still refers to the previous
array which has not been modified.

16
00:00:57,880 --> 00:01:00,900
So when you print B you
get the output 1, 2, 3, 4.
