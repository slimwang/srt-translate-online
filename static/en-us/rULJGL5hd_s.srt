1
00:00:00,190 --> 00:00:03,760
Here we are in storyboard and to address
the first two questions in the quiz,

2
00:00:03,760 --> 00:00:07,310
we want to double check that our
actions and outlets are all connected.

3
00:00:07,310 --> 00:00:09,830
First let's check
the roll the dice button.

4
00:00:09,830 --> 00:00:14,730
So, we'll look at the pop-up menu here,
and we can see roll the dice down here,

5
00:00:14,730 --> 00:00:18,390
the roll the dice action, but
it's not connected to anything.

6
00:00:18,390 --> 00:00:20,490
So, that's one connection
that's missing.

7
00:00:20,490 --> 00:00:21,650
Let's go ahead and fix that.

8
00:00:21,650 --> 00:00:26,090
And we also need to check the action for
the OK button.

9
00:00:26,090 --> 00:00:27,890
So, that looks fine, that's hooked up.

10
00:00:29,550 --> 00:00:32,659
And there's two outlets we need
to check, the two outlets for

11
00:00:32,659 --> 00:00:34,510
the dice image views.

12
00:00:34,510 --> 00:00:36,373
So, let's look at our
Dice View Controller.

13
00:00:36,373 --> 00:00:41,907
Here, the first die outlet is set,
you can see it highlights there, but

14
00:00:41,907 --> 00:00:46,920
the second die outlet is not set,
so let's go ahead and fix that.

15
00:00:46,920 --> 00:00:49,314
To see where the images for
these dice are stored,

16
00:00:49,314 --> 00:00:51,940
we need to open up
the project navigator.

17
00:00:51,940 --> 00:00:55,980
Here, if you click on this
folder images.xcassets,

18
00:00:55,980 --> 00:00:58,019
you'll see all the dice images here.

19
00:00:59,270 --> 00:01:02,760
And next we're going to go into
the RollViewController.swift file and

20
00:01:02,760 --> 00:01:05,200
go ahead and
close our project navigator.

21
00:01:05,200 --> 00:01:09,350
And then if you look in the Roll the
Dice method, you can see that the first

22
00:01:09,350 --> 00:01:14,490
value, the dice value, is coming from
calling this function randomDiceValue.

23
00:01:14,490 --> 00:01:18,270
And then if you go into the function
randomDiceValue, you can see that

24
00:01:18,270 --> 00:01:22,479
the method arc4Random is what's
actually generating the random numbers.

25
00:01:24,220 --> 00:01:27,380
Now, if we go into the Dice
view controller file,

26
00:01:27,380 --> 00:01:30,720
we can see how these random numbers
are matched up with images.

27
00:01:32,020 --> 00:01:34,270
Here in this line, a view will appear.

28
00:01:34,270 --> 00:01:36,835
You can see where
the image names come from.

29
00:01:36,835 --> 00:01:42,314
Remember that the Dice images
have the names D1, D2, D3, etc.

30
00:01:42,314 --> 00:01:44,774
Which means that the strings for

31
00:01:44,774 --> 00:01:48,792
the image names can be built
up from the dice values.

32
00:01:48,792 --> 00:01:51,800
Let's take another look
at these dice values.

33
00:01:51,800 --> 00:01:53,330
Why do they have question
marks at the end?

34
00:01:54,700 --> 00:01:57,240
We declare these properties
with optional types

35
00:01:57,240 --> 00:02:01,190
because we expect them to be nil until
the rollTheDice method is called.

36
00:02:01,190 --> 00:02:03,860
Remember from the first Swift
session that it's okay for

37
00:02:03,860 --> 00:02:05,000
optional types to be nil.

38
00:02:06,010 --> 00:02:09,199
The question mark specifies
a wrapped optional, and you can see

39
00:02:09,199 --> 00:02:12,790
that the dice values are conditionally
unwrapped here in viewWillAppear.

40
00:02:13,840 --> 00:02:18,410
This if let construction unwraps the
first value optional by assigning it to

41
00:02:18,410 --> 00:02:21,870
a new variable under the condition
that first value is not nil.
