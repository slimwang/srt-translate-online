1
00:00:00,410 --> 00:00:03,690
Pyretic enables the notion of both sequential and

2
00:00:03,690 --> 00:00:07,670
parallel composition as we've discussed in previous lessons.

3
00:00:07,670 --> 00:00:10,350
For example, we could match all packets for

4
00:00:10,350 --> 00:00:13,760
a particular destination IP address and send them or

5
00:00:13,760 --> 00:00:16,400
forward them out a particular output port. The

6
00:00:16,400 --> 00:00:19,200
double greater than sign shown here Is the

7
00:00:19,200 --> 00:00:23,060
way of expressing sequential composition in Pyretic. Parallel

8
00:00:23,060 --> 00:00:26,350
composition allows two policies to be applied in parallel.

9
00:00:26,350 --> 00:00:28,380
In this example, we match on a

10
00:00:28,380 --> 00:00:32,340
particular destination IP address and subsequently forward the

11
00:00:32,340 --> 00:00:35,270
traffic out Output Port one. In Parallel,

12
00:00:35,270 --> 00:00:37,000
we apply a different set of policies that

13
00:00:37,000 --> 00:00:39,860
match on a different source IP address.

14
00:00:39,860 --> 00:00:42,830
An output the packets on a different output

15
00:00:42,830 --> 00:00:46,590
port. In Pyretic, the plus operator performs

16
00:00:46,590 --> 00:00:51,480
parallel composition of policies. Pyretic allows an operator,

17
00:00:51,480 --> 00:00:55,530
to construct queries, which allow the program

18
00:00:55,530 --> 00:00:58,380
to see packet streams. For example, the

19
00:00:58,380 --> 00:01:01,280
packets query allows the operator to see

20
00:01:01,280 --> 00:01:05,500
packets, arriving at a particular switch with

21
00:01:05,500 --> 00:01:08,520
a particular source MAC address. The one

22
00:01:08,520 --> 00:01:10,710
parameter here indicates that we only want

23
00:01:10,710 --> 00:01:13,530
to see the first packet that arrives

24
00:01:13,530 --> 00:01:17,230
with a unique source MAC address and switch.

25
00:01:17,230 --> 00:01:20,250
We can then register callbacks for these packet streams. That are

26
00:01:20,250 --> 00:01:23,600
invoked to handle each new packet that arrives for that query.
