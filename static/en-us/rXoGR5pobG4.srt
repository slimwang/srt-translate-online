1
00:00:00,025 --> 00:00:04,457
We've used object 3D to give us access to a few extra transforms in the chain.

2
00:00:04,458 --> 00:00:08,119
However, object 3D is designed for another purpose that is extremely useful.

3
00:00:08,119 --> 00:00:13,542
What object 3D does is create a parent child relationship between two objects.

4
00:00:13,543 --> 00:00:18,531
Once an object is a child of another object. That child is affected by whatever

5
00:00:18,531 --> 00:00:22,478
is done to the parent. Here I'm sowing the fleshed out set of parent child

6
00:00:22,478 --> 00:00:27,456
relationships. The car has two doors and four wheels. Each wheel has a rim a

7
00:00:27,456 --> 00:00:31,852
hubcap and a tire. This is usually called a seam graph as it defines the graph

8
00:00:31,852 --> 00:00:35,560
of relationships of objects in the scene. This whole tree structure is called

9
00:00:35,560 --> 00:00:39,358
the hierarchy another frequently misspelled word so get it right. With this

10
00:00:39,358 --> 00:00:43,228
hierarchy we can do a lot. For example, we can move the whole car by applying a

11
00:00:43,228 --> 00:00:46,510
transform to just the parent. The other objects in the hierarchy will

12
00:00:46,510 --> 00:00:49,956
automatically be updated with this transform and follow along with the body. We

13
00:00:49,956 --> 00:00:54,144
can also affect objects within the hierarchy. If I change the wheel's rotation,

14
00:00:54,144 --> 00:00:58,710
the rim, hubcap and tire will also be updated and move along. Under the hood

15
00:00:58,710 --> 00:01:01,967
what is happening is that a series of transforms are being maintained. For

16
00:01:01,967 --> 00:01:06,790
example, for the hub cap, here's the series. There's the scale, rotate and

17
00:01:06,790 --> 00:01:11,376
translate set for the hub cap itself. Then another scale rotate and translate

18
00:01:11,376 --> 00:01:15,994
for the wheel. And finally a scale rotate and translate for the car as a whole.

19
00:01:15,995 --> 00:01:20,209
In practice, the scale matrices are not often used. As many model creators make

20
00:01:20,209 --> 00:01:24,023
their models to scale. The good news is that these complex series of transforms

21
00:01:24,023 --> 00:01:27,975
can be compressed into a single transform that does it all. It holds all the

22
00:01:27,975 --> 00:01:32,294
scales, rotations and translations. Plus any thing else done. We'll show how

23
00:01:32,294 --> 00:01:36,339
this works in the upcoming lesson on matrices. That said, fixed hierarchies in

24
00:01:36,339 --> 00:01:40,348
the parent child relationship they establish are extremely useful. Hierarchies

25
00:01:40,348 --> 00:01:44,200
allow most objects to be controlled in a natural way. I believe I've said this

26
00:01:44,200 --> 00:01:48,358
three times, so I'll invoke Lewis Carroll's line from The Hunting of the Snark,

27
00:01:48,358 --> 00:01:52,642
what I tell you three times is true. Personally, when I'm thinking through what

28
00:01:52,642 --> 00:01:56,688
series of transforms I want to apply, I work step by step. Perhaps the most

29
00:01:56,688 --> 00:02:01,043
important rule I can offer you is this Once you've applied a transform, forget

30
00:02:01,043 --> 00:02:05,650
about it entirely. That transforms applied, it's history and you now have some

31
00:02:05,650 --> 00:02:10,160
new object and a new position, possibly with some new location at the origin.

32
00:02:10,160 --> 00:02:15,088
Next, draw a picture if it helps. I usually do. Finally, once a transform is

33
00:02:15,088 --> 00:02:19,905
applied, where does your new object want to move from there? If you find you've

34
00:02:19,905 --> 00:02:24,013
messed up and the new object is not moving toward your goal, undo and try again.
