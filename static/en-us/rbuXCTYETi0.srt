1
00:00:00,410 --> 00:00:04,190
To use a semaphore in this manner,
you should initialize the semaphore so

2
00:00:04,190 --> 00:00:07,250
that it is a non-process
shared semaphore.

3
00:00:07,250 --> 00:00:11,860
So, this argument to
the initialization call should be 0.

4
00:00:11,860 --> 00:00:15,180
And so that its initial count is 1.

5
00:00:15,180 --> 00:00:16,545
So this argument will be 1.

6
00:00:17,630 --> 00:00:20,640
Then, when the semaphore
wait operation is called.

7
00:00:20,640 --> 00:00:24,993
It will decrement this counter and it
will allow exactly one thread at a time

8
00:00:24,993 --> 00:00:29,141
to enter the critical section and
posting to a semaphore will increment

9
00:00:29,141 --> 00:00:33,210
the counter and it will be
identical to a mutex being freed.

10
00:00:33,210 --> 00:00:37,610
Note that most operating systems
textbooks will include some examples on

11
00:00:37,610 --> 00:00:41,320
how to implement one synchronization
construct with another

12
00:00:41,320 --> 00:00:45,150
including mutexes or
condition variables with semaphores.

13
00:00:45,150 --> 00:00:47,080
And there are many other examples.

14
00:00:47,080 --> 00:00:50,670
So you're welcome to experiment on
your own with these kinds of examples.
