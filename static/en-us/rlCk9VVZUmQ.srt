1
00:00:00,550 --> 00:00:02,150
To construct this diagram,

2
00:00:02,150 --> 00:00:07,010
you should take the following steps using a UML class model diagram as notation.

3
00:00:07,010 --> 00:00:11,800
First of all, indicate external actors but only one activity.

4
00:00:11,800 --> 00:00:13,640
That is, there's only going to be one class in here and

5
00:00:13,640 --> 00:00:15,490
that's the class of the text browser itself.

6
00:00:16,600 --> 00:00:22,470
Indicate in the external stimuli or events that can affect the text browser.

7
00:00:22,470 --> 00:00:26,220
And indicate how the text browser communicates it's results back to

8
00:00:26,220 --> 00:00:28,000
the external actors, it's percepts.

9
00:00:28,000 --> 00:00:32,240
So you want to take a crack at producing such a, a,

10
00:00:32,240 --> 00:00:37,990
a diagram that lays out the text browsers relationship to the external actors.

11
00:00:37,990 --> 00:00:42,760
>> Okay, so I have I think kind of what are the things that you can

12
00:00:42,760 --> 00:00:43,750
do to the system.

13
00:00:45,340 --> 00:00:48,629
>> Okay, let's, let's start with [COUGH] what are the actors,

14
00:00:48,629 --> 00:00:50,300
the external actors?

15
00:00:50,300 --> 00:00:55,750
>> So for the external actors, I've shown drawn the user using the text browser,

16
00:00:55,750 --> 00:00:59,140
but also I believe we mentioned previously that the operating system is

17
00:00:59,140 --> 00:01:02,420
also an actor, even though you may not think of it visually, like,

18
00:01:02,420 --> 00:01:03,730
see that happening.

19
00:01:03,730 --> 00:01:04,310
>> Okay.

20
00:01:04,310 --> 00:01:06,390
So there's two external actors in here.

21
00:01:06,390 --> 00:01:07,990
The end user and

22
00:01:07,990 --> 00:01:12,040
the operating system which is going to supply the actual file contents.

23
00:01:12,040 --> 00:01:17,200
There's the the classic self which represents the system, okay.

24
00:01:17,200 --> 00:01:20,390
And you also have some events okay.

25
00:01:20,390 --> 00:01:21,820
What events do you have?

26
00:01:21,820 --> 00:01:25,070
>> So, an event that the user would, start with the user,

27
00:01:25,070 --> 00:01:28,860
what the user can do with a text browser, view the text browser,

28
00:01:28,860 --> 00:01:34,950
can move the handle that's in the tray, and then also resize the text browser.

29
00:01:34,950 --> 00:01:37,260
>> So which one of, which ones of those are events?

30
00:01:38,996 --> 00:01:39,720
>> events?

31
00:01:39,720 --> 00:01:42,696
The movement of the handle's an event,

32
00:01:42,696 --> 00:01:46,030
the resizing of the window's also an event.

33
00:01:47,720 --> 00:01:49,560
Viewing's kind of like a continuous process,

34
00:01:49,560 --> 00:01:51,750
there's no kind of instantaneous event that's happening.

35
00:01:51,750 --> 00:01:55,610
>> Well but the system is not doing the viewser, viewing,

36
00:01:55,610 --> 00:01:57,140
the use is doing the viewing, so.

37
00:01:57,140 --> 00:01:59,730
>> Correct. >> That's actually a percept of the system right.

38
00:01:59,730 --> 00:02:02,950
>> Okay. >> It's something that the system provides for the user.

39
00:02:02,950 --> 00:02:09,620
In addition to the actual lines of file,

40
00:02:09,620 --> 00:02:14,540
what else is the system communicating back to the user?

41
00:02:14,540 --> 00:02:17,550
>> We're also communicating back the size of the handle.

42
00:02:17,550 --> 00:02:18,430
Something that we're seeing.

43
00:02:18,430 --> 00:02:21,770
>> That, that says something about the proportion of the file that's visible.

44
00:02:21,770 --> 00:02:22,940
>> Correct.

45
00:02:22,940 --> 00:02:27,110
And we're also communicating back to the user the height of the view port.

46
00:02:27,110 --> 00:02:28,230
>> Okay.

47
00:02:28,230 --> 00:02:32,300
Obviously the the user has control over that height.

48
00:02:32,300 --> 00:02:35,120
And the system is

49
00:02:35,120 --> 00:02:39,430
going to give feedback by showing a view port with different heights on it.

50
00:02:39,430 --> 00:02:44,850
And you mentioned also that the contents, and that's clearly a percept as well.

51
00:02:44,850 --> 00:02:49,020
So we have the height of the viewport, it's contents, the size of the handle,

52
00:02:49,020 --> 00:02:51,810
and the position of the handle on the tray is another percept.

53
00:02:51,810 --> 00:02:54,130
>> Correct. >> Okay, and we have the two events, the resizing event and

54
00:02:54,130 --> 00:02:55,390
the scrolling event.

55
00:02:55,390 --> 00:02:58,920
We have the two external actors and we have the class itself.

56
00:02:58,920 --> 00:03:02,270
Okay, so we can take the informal sketch that you've done, and

57
00:03:02,270 --> 00:03:08,930
we can lay it out using some kind of UML tool into a precise UML diagram that's

58
00:03:08,930 --> 00:03:14,280
got the single rectangle indicating the, the class labeled text browser.

59
00:03:14,280 --> 00:03:20,120
It's got some attributes which include the height,

60
00:03:20,120 --> 00:03:26,650
the the contents that are visible, the handle size, the handle position.

61
00:03:26,650 --> 00:03:32,350
Its got some external actors for the user and the file system.

62
00:03:32,350 --> 00:03:37,190
Its got some events indicating the user what the user can do to

63
00:03:38,840 --> 00:03:46,230
affect the text browser, and I've also put into the image into the diagram some

64
00:03:46,230 --> 00:03:53,620
real mode comments which are the rectangles with the dog eared corners on them.

65
00:03:53,620 --> 00:03:58,290
Note that there are some certain subtleties that haven't included in

66
00:03:58,290 --> 00:04:02,310
here such as how we're going to deal with zero length files and so on.
