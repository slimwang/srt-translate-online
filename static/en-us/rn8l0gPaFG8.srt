1
00:00:00,000 --> 00:00:05,000
Okay. Welcome to Unit 5 Office Hours. We had a lot of great questions in the forums.

2
00:00:05,000 --> 00:00:09,000
Before we get into those, I think you wanted to mention something about memcache that you--

3
00:00:09,000 --> 00:00:12,000
eah. >>--you were worried you weren't too clear on.

4
00:00:12,000 --> 00:00:15,000
Sure. Yeah. Somebody asked me a question I received this morning that made me think.

5
00:00:15,000 --> 00:00:21,000
There's a 10-second piece of advice I can give you that'll make the homework or Unit 6

6
00:00:21,000 --> 00:00:25,000
actually a lot easier, which you should be working on right about now.

7
00:00:25,000 --> 00:00:28,000
We're using memcache basically to store strings and integers.

8
00:00:28,000 --> 00:00:35,000
In your code you can say something like memcache.set.

9
00:00:35,000 --> 00:00:40,000
I realized as I was writing this stuff I'm trying not to speak while I'm writing so they can edit it.

10
00:00:40,000 --> 00:00:43,000
But anyway, you can say memcache.set and then you give it a key.

11
00:00:43,000 --> 00:00:49,000
It'll just be a string. It's always a string. That's the memcache protocol.

12
00:00:49,000 --> 00:00:52,000
And in the memcache protocol it says the value has to be a string as well.

13
00:00:52,000 --> 00:00:57,000
However, we're using this library--this Python memcache library that Google provides

14
00:00:57,000 --> 00:01:00,000
and most Python memcache libraries have the same behavior which is

15
00:01:00,000 --> 00:01:04,000
you can put just about anything as the value.

16
00:01:04,000 --> 00:01:12,000
The value can be another string. It can also be just an integer.

17
00:01:12,000 --> 00:01:17,000
Or it can even be a Python data structure.

18
00:01:17,000 --> 00:01:19,000
You can give it a little dictionary.

19
00:01:19,000 --> 00:01:24,000
What might be useful in the homework you'll find

20
00:01:24,000 --> 00:01:29,000
would be a tuple with maybe a time stamp and another string.

21
00:01:29,000 --> 00:01:32,000
Something like that perhaps. We'll see.

22
00:01:32,000 --> 00:01:38,000
But you can store this value and then when you get the value back out of memcache

23
00:01:38,000 --> 00:01:44,000
the library will take the encoded string and convert it back into your Python data structure.

24
00:01:44,000 --> 00:01:50,000
So as long as there are simple things in here and by simple things I basically mean lists, dictionaries,

25
00:01:50,000 --> 00:01:55,000
primitive data types, you can get away with some objects but they have to be picklable.

26
00:01:55,000 --> 00:02:01,000
That's the Python library they're using called "pickle," which converts a Python object into a string.

27
00:02:01,000 --> 00:02:03,000
Most simple objects will work as well.

28
00:02:03,000 --> 00:02:07,000
Everything we do in this class should be memcacheable without any trouble.

29
00:02:07,000 --> 00:02:12,000
Data for entities can be memcached with no trouble, so you can actually store whatever you like.

30
00:02:12,000 --> 00:02:14,000
So that should help with the homework.
