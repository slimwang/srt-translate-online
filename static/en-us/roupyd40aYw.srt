1
00:00:00,460 --> 00:00:03,210
Now that we have those two classes
in place, the last step to getting

2
00:00:03,210 --> 00:00:06,880
the core data structure set up
is creating our managed objects.

3
00:00:06,880 --> 00:00:10,140
Creating our managed objects is
actually easier than you might think.

4
00:00:10,140 --> 00:00:10,810
Because, in fact,

5
00:00:10,810 --> 00:00:14,020
we did most of the work already
when we created our model file.

6
00:00:14,020 --> 00:00:17,790
Now, all we need to do in order to
generate our managed object files

7
00:00:17,790 --> 00:00:20,910
is click on our data model,
click editor and

8
00:00:20,910 --> 00:00:25,640
then click
Create NSManagedObject Subclass.

9
00:00:25,640 --> 00:00:30,400
From here we select the model file we'd
like to create entity classes from and

10
00:00:30,400 --> 00:00:33,770
then the entities or
objects we would like to be managed.

11
00:00:33,770 --> 00:00:37,190
Here will select both Note and Notebook
because we want to manage both of them.

12
00:00:37,190 --> 00:00:38,810
And then we'll click Next.

13
00:00:40,300 --> 00:00:45,050
And then Create, cool,
and here they are taddah.

14
00:00:45,050 --> 00:00:48,160
But wait a minute,
how come there are four files here?

15
00:00:48,160 --> 00:00:50,650
So when you generate
these managed classes

16
00:00:50,650 --> 00:00:53,410
two files are actually created for
each entity.

17
00:00:53,410 --> 00:00:56,920
You have a class file and
you have an extension.

18
00:00:56,920 --> 00:01:00,840
The extension file contains code that
matches up with your object model.

19
00:01:00,840 --> 00:01:04,700
You never ever want to write anything
into these extensions because Xcode

20
00:01:04,700 --> 00:01:08,180
will overwrite them and recreate
the class if you modify the model.

21
00:01:08,180 --> 00:01:11,900
So, it's good to write any code inside
of the managed object class itself.

22
00:01:11,900 --> 00:01:14,630
Now let's just move these down to
the model folder where they belong and

23
00:01:14,630 --> 00:01:16,150
feel free to pause the video here and

24
00:01:16,150 --> 00:01:18,720
go ahead and generate these managed
object classes on your own.

25
00:01:20,160 --> 00:01:23,170
Great, so,
this Note class is looking pretty bare.

26
00:01:23,170 --> 00:01:26,480
What we need to do now is that add
an init method to this class can create

27
00:01:26,480 --> 00:01:28,480
usable instances of itself.

28
00:01:28,480 --> 00:01:32,340
We'll add in a convenience init which
takes text, a string with the words new

29
00:01:32,340 --> 00:01:37,960
Note init and an NSManagedObject
context called, Context.

30
00:01:37,960 --> 00:01:42,330
Then, what we need to do is
create an NSEntityDescription.

31
00:01:42,330 --> 00:01:45,930
An entity description is an object that
has access to all the information we

32
00:01:45,930 --> 00:01:48,290
provided in the entity
part of the model.

33
00:01:48,290 --> 00:01:52,890
And it's needed in order to
instantiate any managed object class.

34
00:01:52,890 --> 00:01:55,920
From the entity description,
we call entity for name.

35
00:01:55,920 --> 00:02:00,030
Which takes in the name of the entity,
so in this case, Note, and

36
00:02:00,030 --> 00:02:05,730
the context in which we want the Note to
live, in managed object context context.

37
00:02:05,730 --> 00:02:09,780
Then we can call the designated
initializer, which is the initializer

38
00:02:09,780 --> 00:02:14,210
for NSManagedObject, the superclass,
which takes in the entity description

39
00:02:14,210 --> 00:02:17,480
and the context in order
to create a new instance.

40
00:02:17,480 --> 00:02:21,600
And you can see the parameter name says,
insertIntoManagedObjectContext,

41
00:02:21,600 --> 00:02:23,490
which is where the instance will live.

42
00:02:23,490 --> 00:02:27,740
Remember that every single core data
object needs to know its context.

43
00:02:27,740 --> 00:02:30,220
Lastly, we just initialize
some properties,

44
00:02:30,220 --> 00:02:34,460
text will equal text which we
can remember is the new note.

45
00:02:34,460 --> 00:02:38,640
And creation date will get
initialized to NSDate object

46
00:02:38,640 --> 00:02:40,490
which is just the current date.

47
00:02:40,490 --> 00:02:43,790
We'll put in this fatal error
in case no entity exists and

48
00:02:43,790 --> 00:02:45,050
the entity name we're passing in.

49
00:02:46,110 --> 00:02:46,610
And we're done.

50
00:02:47,665 --> 00:02:50,601
I'm also just going to add in this
variable which is just a formatted

51
00:02:50,601 --> 00:02:54,235
version of that CreationDate
property we initialized up there.

52
00:02:54,235 --> 00:02:56,055
It just makes the date
more human readable.

53
00:02:58,855 --> 00:03:00,265
And that's it.

54
00:03:00,265 --> 00:03:03,435
We can now just do the same thing for
the Notebook class.

55
00:03:03,435 --> 00:03:06,030
Awesome, why don't you give it a try?

56
00:03:06,030 --> 00:03:08,960
Before moving ahead to the next video
make sure you have both inits and

57
00:03:08,960 --> 00:03:09,960
get no warnings.
