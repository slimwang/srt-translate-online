1
00:00:00,300 --> 00:00:03,370
We just finished calling a method and
passing in inputs.

2
00:00:03,370 --> 00:00:04,260
>> Oh wait.

3
00:00:04,260 --> 00:00:06,790
Are you referring to passing
in quality to what was it,

4
00:00:06,790 --> 00:00:08,270
the calculate price method?

5
00:00:08,270 --> 00:00:09,300
>> Exactly.

6
00:00:09,300 --> 00:00:11,850
And now we want to get
a return value out of it.

7
00:00:11,850 --> 00:00:12,765
>> I love return values.

8
00:00:12,765 --> 00:00:13,930
>> [LAUGH]
>> What is it going to be?

9
00:00:13,930 --> 00:00:15,300
I think a price?

10
00:00:15,300 --> 00:00:16,550
Because it's the calculate price method.

11
00:00:16,550 --> 00:00:19,750
>> Yeah the total order price
is going to be the return value.

12
00:00:19,750 --> 00:00:21,310
>> Okay, let's do that!

13
00:00:21,310 --> 00:00:23,510
>> Okay.
Do you need a fork?

14
00:00:25,820 --> 00:00:26,980
>> Do I?

15
00:00:26,980 --> 00:00:31,340
>> In Java, the output of a method
is known as a return value.

16
00:00:31,340 --> 00:00:35,640
In code samples, you may have seen
the word return inside the method, or

17
00:00:35,640 --> 00:00:39,090
seen the word return In
the comment above it.

18
00:00:39,090 --> 00:00:42,170
Let's look up more information about
the return values for methods.

19
00:00:42,170 --> 00:00:46,900
I'm going to do a Google search for
Java method return value.

20
00:00:46,900 --> 00:00:48,780
The first link looks good.

21
00:00:48,780 --> 00:00:51,420
This article talks about
returning a value from a method.

22
00:00:52,710 --> 00:00:55,240
It says that a method is
finished being executed

23
00:00:55,240 --> 00:00:59,510
when we've completed all statements in
the method or all lines in the method.

24
00:00:59,510 --> 00:01:04,319
Or when we've reached the first return
statement, whichever one comes first.

25
00:01:04,319 --> 00:01:07,370
A method will also end if
we've thrown an exception or

26
00:01:07,370 --> 00:01:10,410
an error, but we're not going to
cover that in this course.

27
00:01:10,410 --> 00:01:12,710
We're mostly going to focus
on the first two cases.

28
00:01:14,240 --> 00:01:18,230
So in the code, you might see
something like return semicolon.

29
00:01:18,230 --> 00:01:21,100
That means the method should end and

30
00:01:21,100 --> 00:01:24,150
any line of code that comes
after this won't be executed.

31
00:01:25,440 --> 00:01:28,170
Alternatively you might
see something like this.

32
00:01:28,170 --> 00:01:32,230
Return and then a value, semi-colon.

33
00:01:32,230 --> 00:01:35,280
This is returning an output
value from the method.

34
00:01:36,470 --> 00:01:37,900
Here's an example.

35
00:01:37,900 --> 00:01:40,140
This is code for the getArea method.

36
00:01:40,140 --> 00:01:43,420
It's supposed to compute
the area of a rectangle,

37
00:01:43,420 --> 00:01:46,010
which is defined as width times height.

38
00:01:46,010 --> 00:01:51,100
So inside the method we have the word
return followed by the return value.

39
00:01:51,100 --> 00:01:54,660
The return value is the variable
width times the variable height.

40
00:01:54,660 --> 00:01:56,610
And this equals a single number.

41
00:01:56,610 --> 00:02:01,270
And that number is returned as
the output value for this method.

42
00:02:01,270 --> 00:02:02,760
Unlike input parameters,

43
00:02:02,760 --> 00:02:05,890
where you can has any many input
parameters listed inbetween

44
00:02:05,890 --> 00:02:10,389
the opening the closing parentheses,
you can only have a single return value.

45
00:02:10,389 --> 00:02:13,530
And the data type of that
return value is specified here.

46
00:02:13,530 --> 00:02:18,300
So we could have returned any other
number, as long as it's an integer.

47
00:02:18,300 --> 00:02:21,050
For example, you can't return a string,

48
00:02:21,050 --> 00:02:24,170
because that doesn't match
the entered data type.

49
00:02:24,170 --> 00:02:27,930
You're probably realizing by now
that Java has a special meaning for

50
00:02:27,930 --> 00:02:29,550
the word return.

51
00:02:29,550 --> 00:02:33,480
You can't use it for
the name of variables or methods.

52
00:02:33,480 --> 00:02:35,549
These are called Java key words.

53
00:02:37,140 --> 00:02:38,960
I can search for the Java keywords list.

54
00:02:41,370 --> 00:02:43,740
This is the list of
all the Java keywords.

55
00:02:43,740 --> 00:02:46,880
You'll notice that some of the words
we've already seen before,

56
00:02:46,880 --> 00:02:49,460
like int, public, and private.

57
00:02:49,460 --> 00:02:50,710
It's a pretty short list.

58
00:02:50,710 --> 00:02:53,440
And all these words have a special
meaning in Java when you put them

59
00:02:53,440 --> 00:02:53,940
in your code.

60
00:02:53,940 --> 00:02:58,640
So that means you can't use them for
identifiers, like variable names, or

61
00:02:58,640 --> 00:03:00,560
method names in your app.

62
00:03:00,560 --> 00:03:04,140
And you'll also notice that
return is a special Java keyword.

63
00:03:04,140 --> 00:03:07,780
This is reserved for when you want to
return an output value from a method.

64
00:03:09,140 --> 00:03:12,240
Going back to our earlier example
of creating a weather message.

65
00:03:12,240 --> 00:03:17,150
We can create a string and
then return it by saying return message.

66
00:03:17,150 --> 00:03:19,230
The data type of this
variable is string.

67
00:03:19,230 --> 00:03:25,150
What would happen if I added a line
of code after this return statement?

68
00:03:25,150 --> 00:03:28,390
Well then I would get an error
that says unreachable statement.

69
00:03:28,390 --> 00:03:31,230
Because the computer won't
get to these lines of code

70
00:03:31,230 --> 00:03:32,690
after the return statement.

71
00:03:32,690 --> 00:03:35,690
because it would have ended
the method at this point.

72
00:03:35,690 --> 00:03:38,570
So delete any lines of code that
come after your return statement.

73
00:03:39,640 --> 00:03:43,100
What if you don't need your method
to return any output value?

74
00:03:43,100 --> 00:03:45,390
Well let's look at a couple of
examples in the MainActivity

75
00:03:45,390 --> 00:03:47,295
of the JustJava app App.

76
00:03:47,295 --> 00:03:52,415
The increment and decrement methods are
examples where there is no return value.

77
00:03:52,415 --> 00:03:53,905
When you call the decrement method,

78
00:03:53,905 --> 00:03:58,405
it does all of its hard work in updating
the UI in the displayQuantity method.

79
00:03:58,405 --> 00:04:01,045
There's no output value to return.

80
00:04:01,045 --> 00:04:04,185
And same with the increment method,
all the hard work is done

81
00:04:04,185 --> 00:04:07,455
when you call displayQuantity and
it updates the screen.

82
00:04:07,455 --> 00:04:10,430
You might be wondering where
the return statement is, then.

83
00:04:10,430 --> 00:04:14,180
Well, the method will finish executing
when all the lines of code have been

84
00:04:14,180 --> 00:04:17,089
completed, or
when it hits the return statement.

85
00:04:17,089 --> 00:04:20,320
So, I could've added return; like this.

86
00:04:21,570 --> 00:04:24,870
That way, the method would finish
as soon as it hits this line.

87
00:04:24,870 --> 00:04:27,200
This gives me a warning
in Android Studio.

88
00:04:27,200 --> 00:04:31,570
It says, return is unnecessary at
the last statement in Avoid method.

89
00:04:31,570 --> 00:04:35,900
Since I'm not returning anything,
I can just delete this line here.

90
00:04:35,900 --> 00:04:38,080
This is less lines of code and
its easier to read, so

91
00:04:38,080 --> 00:04:39,750
I prefer it like this.

92
00:04:39,750 --> 00:04:43,100
To indicate that there is no return
value, It's important in the method

93
00:04:43,100 --> 00:04:46,570
signature to say that
the return data type is void.

94
00:04:46,570 --> 00:04:49,390
Void just means that
there's no return value.

95
00:04:49,390 --> 00:04:51,310
Java has a special way
of representing this, so

96
00:04:51,310 --> 00:04:53,940
that's why this is a Java keyword.

97
00:04:53,940 --> 00:04:56,720
Let's look back at our Java
keyword list and, indeed,

98
00:04:56,720 --> 00:04:58,280
we see that void is in this list.

99
00:04:59,310 --> 00:05:01,310
So, if you don't have a return value,

100
00:05:01,310 --> 00:05:04,130
make sure you don't just
leave it blank like this.

101
00:05:04,130 --> 00:05:07,470
because otherwise there's
a java syntax error.

102
00:05:07,470 --> 00:05:09,430
Just type void with a lower case V.

103
00:05:10,500 --> 00:05:12,310
Go ahead and
read this article on your own now.

104
00:05:12,310 --> 00:05:17,190
You can skim it for the information you
do understand, or Google search for

105
00:05:17,190 --> 00:05:18,090
more information online.

106
00:05:18,090 --> 00:05:21,310
Once you've learned a couple
of things from this article,

107
00:05:21,310 --> 00:05:22,249
you can move on to the task.

108
00:05:23,500 --> 00:05:24,560
And then check your notes.

109
00:05:24,560 --> 00:05:28,290
You'll find the link to some code for
four different methods.

110
00:05:28,290 --> 00:05:30,440
Each method contains an error.

111
00:05:30,440 --> 00:05:33,560
And the task is for you to find
the error in each of these methods.

112
00:05:34,850 --> 00:05:37,110
Since there's multiple
ways to fix the code,

113
00:05:37,110 --> 00:05:40,710
assume that the javadoc comment at
the top of each method is correct.

114
00:05:40,710 --> 00:05:42,210
And we want to make the code match that.

115
00:05:43,410 --> 00:05:44,680
This is what the methods look like.

116
00:05:45,810 --> 00:05:48,120
Identify the line number
that the error is on.

117
00:05:48,120 --> 00:05:51,060
The line number is located in
the left-hand column here.

118
00:05:51,060 --> 00:05:55,100
Then write a short description
on why that line has an error.

119
00:05:55,100 --> 00:05:56,872
So line number goes here,
and description goes here.

120
00:05:56,872 --> 00:05:57,993
When you're done,
you can continue to the solution video.
