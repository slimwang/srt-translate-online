1
00:00:00,170 --> 00:00:03,670
We're going to make an app with
three different text fields.

2
00:00:03,670 --> 00:00:06,880
Each embellishes text in
its own way as you type.

3
00:00:06,880 --> 00:00:11,130
Our goal is to use delegates to create
many different customized behaviors

4
00:00:11,130 --> 00:00:13,060
using just one view.

5
00:00:13,060 --> 00:00:17,500
The first turns the words cat,
dog and fish into emojis.

6
00:00:17,500 --> 00:00:20,810
The second sets the text color to
be a combination of color words

7
00:00:20,810 --> 00:00:21,690
used in the text.

8
00:00:23,000 --> 00:00:25,600
And the third is related to
a label which keeps a character

9
00:00:25,600 --> 00:00:27,040
count as you type.

10
00:00:27,040 --> 00:00:31,130
For all three, the text field
views themselves look the same.

11
00:00:31,130 --> 00:00:35,010
They're used directly off the shelf
as written by Apple engineers.

12
00:00:35,010 --> 00:00:38,800
The differences in their behavior
come entirely from delegates.

13
00:00:39,900 --> 00:00:43,710
A delegate is an object that executes
a group of methods on behalf of

14
00:00:43,710 --> 00:00:45,140
another object.

15
00:00:45,140 --> 00:00:48,240
The ability to reuse views
without needing to subclass and

16
00:00:48,240 --> 00:00:52,910
modify them is an important goal of all
graphical user interface libraries.

17
00:00:52,910 --> 00:00:56,890
We want view classes to be used as is,
and then we want control and

18
00:00:56,890 --> 00:01:00,420
model classes to have the freedom
to customize those views.

19
00:01:00,420 --> 00:01:03,030
The delegate pattern allows for this.

20
00:01:03,030 --> 00:01:05,135
Let's look at some
examples of view reuse and

21
00:01:05,135 --> 00:01:07,305
customization in the apps
we use everyday.

22
00:01:08,485 --> 00:01:09,185
Here in Safari,

23
00:01:09,185 --> 00:01:12,285
you can see a text field that was
designed specifically for searching.

24
00:01:13,945 --> 00:01:15,335
It has custom completion and

25
00:01:15,335 --> 00:01:18,230
is often presented with a table
view of search results.

26
00:01:18,230 --> 00:01:22,010
If we look in settings, we see a table
that uses the same view class as

27
00:01:22,010 --> 00:01:23,900
the search tables, but they look and

28
00:01:23,900 --> 00:01:27,660
feel pretty different and present
content in a different structure.

29
00:01:27,660 --> 00:01:30,490
How does the delegate pattern
enable the same view classes

30
00:01:30,490 --> 00:01:32,300
to serve such different functions?
