1
00:00:00,320 --> 00:00:03,390
Because new developments are
automatically inserted in the tab order,

2
00:00:03,390 --> 00:00:06,160
they can be very convenient to use.

3
00:00:06,160 --> 00:00:09,140
But there are instances when you'll
want to modify the tab order.

4
00:00:09,140 --> 00:00:12,117
Like if you're building a component
without a native analog,

5
00:00:12,117 --> 00:00:15,656
like this dropdown up here, or if you
need to have something off screen that

6
00:00:15,656 --> 00:00:19,101
should only be focusable when it
appears, like perhaps a modal window.

7
00:00:19,101 --> 00:00:22,889
For these cases,
you can use the tabindex attribute.

8
00:00:22,889 --> 00:00:25,859
Tabindex can be applied
to any HTML element, and

9
00:00:25,859 --> 00:00:28,046
it takes a range of numeric values.

10
00:00:28,046 --> 00:00:33,780
A tabindex of -1 means that the element
will not be in the tab order,

11
00:00:33,780 --> 00:00:36,520
but it can be programmatically
focused via JavaScript,

12
00:00:36,520 --> 00:00:39,050
by calling the element's focus method.

13
00:00:39,050 --> 00:00:40,430
This can be especially useful for

14
00:00:40,430 --> 00:00:43,790
off screen content which appears on
screen in response to a user event.

15
00:00:44,890 --> 00:00:48,620
When the new content is displayed,
you may wish to call its focus method

16
00:00:48,620 --> 00:00:50,582
which will then direct future
keyboard events to it.

17
00:00:50,582 --> 00:00:56,570
A tabindex of 0 will add the element
to the natural tab order,

18
00:00:56,570 --> 00:00:59,660
plus, that element will also be focus
full by calling its focus method.

19
00:01:00,850 --> 00:01:01,570
For example,

20
00:01:01,570 --> 00:01:05,170
here I've got a fancy button that
I've created out of just a div.

21
00:01:05,170 --> 00:01:07,380
Now, without a tabindex attribute,
if I press the Tab key,

22
00:01:07,380 --> 00:01:09,560
this element will not receive focus.

23
00:01:09,560 --> 00:01:13,050
By adding a tabindex of zero,
now when I press the Tab key,

24
00:01:13,050 --> 00:01:17,412
this element gets focused, and future
keyboard events get directed to it.

25
00:01:17,412 --> 00:01:19,230
A tabindex of greater than zero, for

26
00:01:19,230 --> 00:01:22,790
instance something like tab index of
5 will jump the element to the front

27
00:01:22,790 --> 00:01:26,000
of the tab order regardless
of where it is in the DOM.

28
00:01:26,000 --> 00:01:29,401
If there are multiple elements
with a tabindex greater than zero,

29
00:01:29,401 --> 00:01:32,986
the order will start from the lowest
value that is greater than zero and

30
00:01:32,986 --> 00:01:34,096
then work its way up.

31
00:01:34,096 --> 00:01:38,212
In general, using a tabindex greater
than zero is discouraged and

32
00:01:38,212 --> 00:01:40,670
considered a bit of an anti-pattern.

33
00:01:40,670 --> 00:01:43,640
If you get in the habit of using it,
you can quickly end up with a very

34
00:01:43,640 --> 00:01:47,340
jumbled tab order, and it can make
things especially confusing for

35
00:01:47,340 --> 00:01:51,490
screen reader users who navigate
the DOM in a linear fashion.

36
00:01:51,490 --> 00:01:54,420
Ideally, if you need to put
something earlier in the tab order,

37
00:01:54,420 --> 00:01:56,300
the best bet is to
move it up in the DOM.
