1
00:00:00,150 --> 00:00:02,320
Okay, so here is the code for the class Movie

2
00:00:02,320 --> 00:00:05,180
that we have written thus far. Now, bear in mind, that

3
00:00:05,180 --> 00:00:07,450
you may have to go into full-screen mode in order

4
00:00:07,450 --> 00:00:11,020
to see all of the details here properly. And I'm really

5
00:00:11,020 --> 00:00:14,630
curious to figure out what happens behind the scenes when

6
00:00:14,630 --> 00:00:17,420
I run this line of code. What happens when I create

7
00:00:17,420 --> 00:00:21,200
an instance called toy_story by providing these four pieces of

8
00:00:21,200 --> 00:00:25,170
information or arguments. These pieces of information are the name of

9
00:00:25,170 --> 00:00:28,960
the movie, its story line, the link to its poster,

10
00:00:28,960 --> 00:00:31,920
and the link to its YouTube URL. Now clearly, the

11
00:00:31,920 --> 00:00:35,100
last two of these are not really links or URLs

12
00:00:35,100 --> 00:00:39,020
just yet. They are English phrases and I did that because

13
00:00:39,020 --> 00:00:41,900
there wasn't enough space on the screen for me to

14
00:00:41,900 --> 00:00:44,490
add the full links or the URLs to the poster and

15
00:00:44,490 --> 00:00:47,380
the YouTube trailer. So, the first thing that happens when

16
00:00:47,380 --> 00:00:50,210
we learn this line of code is that the init function

17
00:00:50,210 --> 00:00:52,250
gets called. And the init function, you

18
00:00:52,250 --> 00:00:54,250
will recall, is the function we defined inside

19
00:00:54,250 --> 00:00:58,360
class Movie. Self, in that case, is itself

20
00:00:58,360 --> 00:01:01,910
or the instance being created, which is toy_story.

21
00:01:01,910 --> 00:01:04,420
The next argument is movie_title whose value

22
00:01:04,420 --> 00:01:08,870
is Toy Story. Movie_storyline gets the value Toys

23
00:01:08,870 --> 00:01:11,920
come to life. The variable poster_image gets the

24
00:01:11,920 --> 00:01:15,590
right value. And finally, the trailer_youtube variable gets

25
00:01:15,590 --> 00:01:21,890
the correct link. Okay, so far so good. Now, once init gets called and

26
00:01:21,890 --> 00:01:23,980
all of these arguments receive their correct

27
00:01:23,980 --> 00:01:27,130
values, all of the variables that are associated

28
00:01:27,130 --> 00:01:30,269
with the instance toy_story, they get initialized

29
00:01:30,269 --> 00:01:32,930
appropriately and these variables, you may notice,

30
00:01:32,930 --> 00:01:38,880
are title, storyline, poster_image_url and trailer_youtube_url. At

31
00:01:38,880 --> 00:01:40,635
this point, if I try to print out

32
00:01:40,635 --> 00:01:45,910
toy_story.storyline, it prints out the correct value. All right,

33
00:01:45,910 --> 00:01:48,790
now that we know exactly what happens when we create

34
00:01:48,790 --> 00:01:51,700
this instance toy story. Let's go back to our

35
00:01:51,700 --> 00:01:54,270
design and find out what we have to do next.
