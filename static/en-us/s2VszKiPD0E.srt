1
00:00:00,490 --> 00:00:03,560
You made some good observations in
the last quiz about the XML that

2
00:00:03,560 --> 00:00:04,720
we showed you.

3
00:00:04,720 --> 00:00:08,150
Now we're going to talk more
formally about the XML syntax.

4
00:00:08,150 --> 00:00:12,470
Syntax means the rules that
define what valid XML is.

5
00:00:12,470 --> 00:00:15,570
If you write invalid XML, then it
won't even show up on your phone.

6
00:00:16,680 --> 00:00:20,130
This is the code for
the XML element called TextView.

7
00:00:20,130 --> 00:00:24,110
We always start with an opening angle
bracket, followed by the view name.

8
00:00:24,110 --> 00:00:28,020
This could be image view, button,
or any other type of view.

9
00:00:28,020 --> 00:00:30,790
Then we have a list of attributes here,
one per line.

10
00:00:30,790 --> 00:00:35,880
And then we have a forward slash and
a closing angle bracket.

11
00:00:35,880 --> 00:00:38,420
There's a lot of symbols and
characters here.

12
00:00:38,420 --> 00:00:41,945
To help you remember it, you can
think of an opening angle bracket.

13
00:00:41,945 --> 00:00:44,089
[SOUND] And then the view name.

14
00:00:44,089 --> 00:00:47,052
[SOUND] And
then the attributes [SOUND] and

15
00:00:47,052 --> 00:00:52,008
then the forward slash [SOUND] And
then the closing angle bracket.

16
00:00:52,008 --> 00:00:59,066
[SOUND] So all together it's [SOUND].

17
00:00:59,066 --> 00:01:02,814
If you miss any of these symbols,
then you're going to get invalid XML.

18
00:01:02,814 --> 00:01:07,500
Here's the reasoning behind what
seem to be arbitrary symbols.

19
00:01:07,500 --> 00:01:10,490
For every XML element,
when you start or open up a tag,

20
00:01:10,490 --> 00:01:12,910
you always need to close it.

21
00:01:12,910 --> 00:01:15,680
It's kind of like putting a period
at the end of a sentence, but for

22
00:01:15,680 --> 00:01:19,260
XML Instead of a sentence, you need
to make sure you close each tag.

23
00:01:20,440 --> 00:01:21,900
Because we start the tag here and

24
00:01:21,900 --> 00:01:25,197
then close it right away,
this is called a self-closing tag.

25
00:01:26,690 --> 00:01:28,410
Instead of a self-closing tag,

26
00:01:28,410 --> 00:01:31,570
you could have a separate opening
tag and a separate closing tag.

27
00:01:33,060 --> 00:01:35,090
Here's an example where it'd be useful.

28
00:01:35,090 --> 00:01:37,990
This is for the LinearLayout
view which is what you going to

29
00:01:37,990 --> 00:01:39,740
learn later in this lesson.

30
00:01:39,740 --> 00:01:42,820
But just know that this is the opening
tag and this is the closing tag.

31
00:01:44,510 --> 00:01:49,550
The closing tag is the same,
except it has an open angle bracket,

32
00:01:49,550 --> 00:01:53,199
a forward slash, the name of the view
and then a closing angle bracket.

33
00:01:54,330 --> 00:01:55,730
So the difference
between the opening and

34
00:01:55,730 --> 00:01:58,400
the closing tag is this forward slash.

35
00:02:00,080 --> 00:02:04,630
And you'll also notice that in between,
we have two TextView XML elements.

36
00:02:04,630 --> 00:02:09,840
These are also called children XML
elements within the parent LinearLayout.

37
00:02:09,840 --> 00:02:12,775
You can imagine that if you had
a self-closing tag up here for

38
00:02:12,775 --> 00:02:16,810
LinearLayout, then you would have no
idea how many children it contains.

39
00:02:16,810 --> 00:02:18,430
But now that the closing
tag is down here,

40
00:02:18,430 --> 00:02:20,550
you know exactly that
you have two children.

41
00:02:22,020 --> 00:02:25,750
In our case, for the TextView,
there are no children XML elements, so

42
00:02:25,750 --> 00:02:30,200
we can just do a self-closing tag right
away because that saves us from having

43
00:02:30,200 --> 00:02:34,840
to write open angle bracket slash
TextView closing angle bracket.

44
00:02:36,140 --> 00:02:40,210
You notice that we have a bunch of
additional text inside this tag.

45
00:02:40,210 --> 00:02:42,160
These are called attributes.

46
00:02:42,160 --> 00:02:44,950
Attributes are characteristics
that determine the behavior or

47
00:02:44,950 --> 00:02:48,040
the appearance of the view
on the Android phone.

48
00:02:48,040 --> 00:02:51,000
For example,
we can think of it with this analogy.

49
00:02:51,000 --> 00:02:54,230
A person have attributes like
black hair, and brown eyes.

50
00:02:54,230 --> 00:02:57,492
A text too has attributes like width,
height, background,

51
00:02:57,492 --> 00:02:59,190
text among many others.

52
00:02:59,190 --> 00:03:02,560
Looking more closely at
the format at each line,

53
00:03:02,560 --> 00:03:06,040
we have the attribute
name the left hand side.

54
00:03:06,040 --> 00:03:07,040
Underlined in yellow here.

55
00:03:07,040 --> 00:03:09,970
And on the right hand side,
we have the actual value.

56
00:03:11,600 --> 00:03:14,180
It's important to note
that the attribute values

57
00:03:14,180 --> 00:03:17,730
should be put in quotation marks
as part of the syntax for XML.

58
00:03:19,220 --> 00:03:22,830
Then we have an equal sign in the middle
to say that the attribute name on

59
00:03:22,830 --> 00:03:25,940
the left is set to
the value on the right.

60
00:03:25,940 --> 00:03:29,570
So the text for
the TextView is Happy Birthday!, and

61
00:03:29,570 --> 00:03:32,640
the height is 75 density
independent pixels.

62
00:03:34,080 --> 00:03:36,070
All of these attributes
have default values,

63
00:03:36,070 --> 00:03:38,850
and there's attributes that
we didn't even list here.

64
00:03:38,850 --> 00:03:42,740
That's because the TextView has default
values for all of it's attributes.

65
00:03:42,740 --> 00:03:45,690
If you're okay with the default values
then you don't need to set them here.

66
00:03:46,750 --> 00:03:48,000
You should only write lines of code

67
00:03:48,000 --> 00:03:50,940
here that you want to be
different than the default values.

68
00:03:50,940 --> 00:03:52,920
For example,
the default background color for

69
00:03:52,920 --> 00:03:55,170
a TextView is the transparent color.

70
00:03:55,170 --> 00:03:57,890
But, we want to set it to
be a darker grey color, so

71
00:03:57,890 --> 00:03:59,400
that's why we have
this line of code here.

72
00:04:01,430 --> 00:04:03,250
One more important note.

73
00:04:03,250 --> 00:04:06,770
Humans are pretty smart, if I write
phrases like this, you probably know

74
00:04:06,770 --> 00:04:10,450
what I mean, even if I'm not using
proper English punctuation or

75
00:04:10,450 --> 00:04:13,040
grammar, or even real words.

76
00:04:13,040 --> 00:04:17,089
However, computers are not as smart, so
you need to use the precise symbols and

77
00:04:17,089 --> 00:04:20,720
names that they recognize, otherwise
they won't know what you mean and

78
00:04:20,720 --> 00:04:22,110
there will be errors in your code.

79
00:04:23,410 --> 00:04:24,740
Here's an example.

80
00:04:24,740 --> 00:04:28,580
For the name of the view,
we can't spell it TxtView, or

81
00:04:28,580 --> 00:04:32,640
Textview with a lowercase v, or
text view with a space in it.

82
00:04:32,640 --> 00:04:34,140
These are all incorrect and

83
00:04:34,140 --> 00:04:37,260
the computer won't know that
we actually mean TextView.

84
00:04:37,260 --> 00:04:40,800
if we want TextView we need to
spell it exactly the same way

85
00:04:40,800 --> 00:04:43,370
with a capital T and
a Capital V for camel case.

86
00:04:44,610 --> 00:04:48,080
Attribute names need to be spelled
out this exact way with a colon

87
00:04:48,080 --> 00:04:49,260
after the android.

88
00:04:49,260 --> 00:04:53,960
We need to have an equal sign and then
we need to put quotes around the values.

89
00:04:53,960 --> 00:04:59,892
One more time so
you don't forget its [SOUND].

90
00:04:59,892 --> 00:05:02,683
Now that we've gone over
the syntax rules of XML,

91
00:05:02,683 --> 00:05:06,440
can you answer these questions for
this XML element?

92
00:05:06,440 --> 00:05:09,530
First, what is the name
of this XML element?

93
00:05:09,530 --> 00:05:13,320
Then, can you list all the attribute
names separated by commas?

94
00:05:13,320 --> 00:05:15,570
Not the attribute values.

95
00:05:15,570 --> 00:05:17,540
Then, on what line number
is the tag closed?

96
00:05:18,580 --> 00:05:21,490
To help you, I've written down the line
numbers on the left hand side.
