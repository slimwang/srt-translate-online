1
00:00:00,380 --> 00:00:02,190
So if you follow
the instructions in the quiz,

2
00:00:02,190 --> 00:00:03,690
you would have created the word class.

3
00:00:04,700 --> 00:00:08,440
And Android studio helped us out by auto
generating some code for us already.

4
00:00:08,440 --> 00:00:12,960
All right, so first in our word class,
we declare it as publicly accessible.

5
00:00:12,960 --> 00:00:16,300
That way other classes like the numbers
activity would be able to access and

6
00:00:16,300 --> 00:00:17,090
use it.

7
00:00:17,090 --> 00:00:21,100
Also here, I've added the Java.comment
already above the class declaration.

8
00:00:21,100 --> 00:00:25,250
To explain how the work class is meant
to represent of a vocabulary word, so

9
00:00:25,250 --> 00:00:28,608
notice that it contains an English
default translation, and

10
00:00:28,608 --> 00:00:30,390
a Miwok translation for each word.

11
00:00:31,750 --> 00:00:34,070
Hence we'll need two fields for
the state of the word object.

12
00:00:35,415 --> 00:00:39,440
mDefaultTranslation, which is the word
in a language of the users already

13
00:00:39,440 --> 00:00:44,870
familiar with, so for example English,
and secondly, mMiwokTranslation.

14
00:00:44,870 --> 00:00:46,580
Which is a word in the Miwok language.

15
00:00:47,970 --> 00:00:49,280
So both of these here, notice,

16
00:00:49,280 --> 00:00:53,900
are private, because we only need them
to be accessible from inside the class.

17
00:00:53,900 --> 00:00:57,310
So by convention, since they are private
member variables of the class,

18
00:00:57,310 --> 00:01:00,680
we add a lowercase m to indicate that,
and

19
00:01:00,680 --> 00:01:03,540
the m is added to the start
of each variable name.

20
00:01:03,540 --> 00:01:06,070
So next,
we need to create the constructor which

21
00:01:06,070 --> 00:01:08,660
takes in two string parameters.

22
00:01:08,660 --> 00:01:12,550
The defaultTranslation and
the miwokTranslation and

23
00:01:12,550 --> 00:01:14,530
then set these values for
our two fields.

24
00:01:15,790 --> 00:01:19,290
So in order to create a new word
object the color has to pass in

25
00:01:19,290 --> 00:01:21,810
these two required inputs.

26
00:01:21,810 --> 00:01:25,373
Remember that the constructor has to
look like a at method declaration.

27
00:01:25,373 --> 00:01:29,090
But the name has to match the class name
exactly, which in this case is Word.

28
00:01:30,610 --> 00:01:32,470
And remember that it has no return type.

29
00:01:33,630 --> 00:01:36,990
So lastly we'll add two methods
which will be marked as public, so

30
00:01:36,990 --> 00:01:40,620
that classes outside of the Word
class can access these methods.

31
00:01:40,620 --> 00:01:45,480
So first is the getDefaultTranslation
method, which will return the default

32
00:01:45,480 --> 00:01:49,190
translation of the word
whose return type is String.

33
00:01:49,190 --> 00:01:51,110
So it won't accept any parameters,

34
00:01:51,110 --> 00:01:54,530
because its sole purpose is
just to return information.

35
00:01:54,530 --> 00:01:56,800
Our second method is
getMiwokTranslation,

36
00:01:56,800 --> 00:01:59,110
and I'll follow a similar format.

37
00:02:00,200 --> 00:02:03,110
So notice that it returns in
Miwok translation of a word

38
00:02:03,110 --> 00:02:04,770
which is a string data type.

39
00:02:04,770 --> 00:02:07,780
Now remember to add comments above
each method to help people who

40
00:02:07,780 --> 00:02:11,910
are reading your code better understand
what to expect from each method.

41
00:02:11,910 --> 00:02:16,120
So we could of added two setter methods
to allow the two strings to be changed

42
00:02:16,120 --> 00:02:17,750
by an outside color.

43
00:02:17,750 --> 00:02:21,040
However for the purpose of this app,
once we create the word object,

44
00:02:21,040 --> 00:02:24,298
we don't expect the English or
Miwok words to change.

45
00:02:24,298 --> 00:02:28,370
Hence we won't provide setter methods
to modify the state of the word object.

46
00:02:28,370 --> 00:02:31,740
So when you create a class it's entirely
up to you to decide what methods you

47
00:02:31,740 --> 00:02:33,970
want to expose to the outside classes.

48
00:02:33,970 --> 00:02:35,770
All right, so there we have it.

49
00:02:35,770 --> 00:02:40,700
Here is the word class defined in its
entirety with the declaration, state,

50
00:02:40,700 --> 00:02:42,350
constructor and methods.

51
00:02:43,720 --> 00:02:45,960
Now great work on defining
your first custom class.
