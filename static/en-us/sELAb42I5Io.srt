1
00:00:00,190 --> 00:00:04,400
Okay, so. We've got this new technique for that,

2
00:00:04,400 --> 00:00:07,010
that we just learned. About a hash thing. So we're

3
00:00:07,010 --> 00:00:09,060
going to use this and our cookie to prevent people from

4
00:00:09,060 --> 00:00:11,970
cheating. Remember we had that example where it, it kept

5
00:00:11,970 --> 00:00:13,390
a count. And we want to use hashing to

6
00:00:13,390 --> 00:00:17,560
verify on, if that count is valid And the algorithm's

7
00:00:17,560 --> 00:00:20,840
going to look something like this. So instead of just saying

8
00:00:20,840 --> 00:00:25,170
set cookie visits equal five, which an, anybody can edit,

9
00:00:25,170 --> 00:00:27,420
we're going to add a hash to this. So we're going to

10
00:00:27,420 --> 00:00:30,750
send something like this instead. Set cookie equals five. We're going to

11
00:00:30,750 --> 00:00:31,970
add something on the end of this. So we'll add

12
00:00:31,970 --> 00:00:35,310
a comma, and then we're going to add a hash of the

13
00:00:35,310 --> 00:00:39,600
value here five. So that, a would be cheater can't

14
00:00:39,600 --> 00:00:43,266
forge a cookie without knowing what hashing algorithm we used. So

15
00:00:43,266 --> 00:00:46,530
we sent this cookie with five followed by, you know, our

16
00:00:46,530 --> 00:00:50,202
hex string, you know, abc one, two three, it'll be whatever

17
00:00:50,202 --> 00:00:52,770
the output of our hash was. When we receive this

18
00:00:52,770 --> 00:00:56,530
cookie from the browser, we'll receive this five, you know, followed

19
00:00:56,530 --> 00:00:59,110
by our hash, what we're going to do is we're going to break

20
00:00:59,110 --> 00:01:02,630
this apart into two pieces. You know this will be like

21
00:01:02,630 --> 00:01:05,800
our our value and this will be our hash. We're

22
00:01:05,800 --> 00:01:07,900
going to hash this value and check to see check to

23
00:01:07,900 --> 00:01:12,350
see if it equals this hash and if it does, we

24
00:01:12,350 --> 00:01:15,190
know this value hasn't been tampered with and if it doesn't,

25
00:01:16,250 --> 00:01:19,020
we know the cookie's invalid and we can throw it out. So our codes going

26
00:01:19,020 --> 00:01:23,830
to look something like this. We we split apart the cookie value, based on this

27
00:01:23,830 --> 00:01:28,000
comma into two parts, value and and hash and then we rehash the value and

28
00:01:28,000 --> 00:01:31,510
if it matches the one we sent we know that our cookie hasn't be tampered with.
