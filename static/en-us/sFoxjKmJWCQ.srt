1
00:00:00,000 --> 00:00:02,000
The first answer--all HTML is XML--that's not true.

2
00:00:02,000 --> 00:00:08,000
Despite the similarity between the two, HTML can have things in it that are not valid in XML.

3
00:00:08,000 --> 00:00:13,000
A good example was the void tag--the tag--with no closer.

4
00:00:13,000 --> 00:00:16,000
All XML is HTML.

5
00:00:16,000 --> 00:00:20,000
This is also not true, but it is borderline acceptable.

6
00:00:20,000 --> 00:00:24,000
You could certainly--if you had an XML document that was full of all HTML tags

7
00:00:24,000 --> 00:00:30,000
it would be very close to HTML and would actually probably render in a browser just fine.

8
00:00:30,000 --> 00:00:34,000
For example, if you included in your browser something like this--

9
00:00:34,000 --> 00:00:37,000
and opening and closing tag--it would actually probably render just fine.

10
00:00:37,000 --> 00:00:41,000
Actually, that's a good question. I'd invite you to see if this enters one new line or two.

11
00:00:41,000 --> 00:00:44,000
I honestly don't know off the top of my head, and I'm not going to quiz you on it.

12
00:00:44,000 --> 00:00:48,000
Now, the next answer--HTML can be expressed in XML. That is true.

13
00:00:48,000 --> 00:00:52,000
When we use the doc type XHTML instead of just HTML,

14
00:00:52,000 --> 00:00:57,000
that says the following HTML document is actually going to be a valid XML document,

15
00:00:57,000 --> 00:00:59,000
and you can parse it as such.

16
00:00:59,000 --> 00:01:03,000
You don't have to look for broken tags.

17
00:01:03,000 --> 00:01:06,000
Your browser doesn't do less work.

18
00:01:06,000 --> 00:01:10,000
It's not expecting the HTML to be somewhat sloppy as HTML often is.

19
00:01:10,000 --> 00:01:14,000
If you say it's in XML, it'd better be in XML though,

20
00:01:14,000 --> 00:01:17,000
because the browser is not going to be quite as lenient on you.

21
00:01:17,000 --> 00:01:22,000
The final answer--XML and HTML share a common lineage--this is also true.

22
00:01:22,000 --> 00:01:29,000
Remember their ancester is SGML, which stands for Standard Generalize Markup Language.

23
00:01:29,000 --> 00:01:36,000
There are actually many other types of documents that descended from SGML,

24
00:01:36,000 --> 00:01:40,000
and HTML and XML are the two that will affect our lives in this course.

25
00:01:40,000 --> 00:01:42,000
Okay, let me just show you some doc types in the browser

26
00:01:42,000 --> 00:01:44,000
now that we have a little bit more of a framework to understand these.

27
00:01:44,000 --> 00:01:47,000
If I were to go to Wikipedia, and I were to view the source of Wikipedia,

28
00:01:47,000 --> 00:01:50,000
I would see that the doc type is HTML.

29
00:01:50,000 --> 00:01:55,000
This means HTML5. I know it doesn't say 5, but trust me on this one.

30
00:01:55,000 --> 00:01:58,000
Doc type HTML means HTML5, which is the most modern version of HTML we have.

31
00:01:58,000 --> 00:02:05,000
Now, if I were to go to a particular Wikipedia page, the Wikipedia page for SGML, for example,

32
00:02:05,000 --> 00:02:07,000
and I were to look at the source of this page,

33
00:02:07,000 --> 00:02:11,000
we see that the doc type is actually XHTML.

34
00:02:11,000 --> 00:02:16,000
It's actually XHTML transitional, which basically means the document is going to be in XML

35
00:02:16,000 --> 00:02:19,000
but will have some non-standard things in there.

36
00:02:19,000 --> 00:02:22,000
I'm not going to get into too much of how this affects things,

37
00:02:22,000 --> 00:02:24,000
but it does make some browsers behave differently.

38
00:02:24,000 --> 00:02:28,000
Why Wikipedia has two different doc types on two different pages I cannot explain to you.

39
00:02:28,000 --> 00:02:33,000
Although I can offer one guess, which is the SGML page is probably generated dynamically,

40
00:02:33,000 --> 00:02:37,000
and the front page is probably a nearly static page that are served from two different servers

41
00:02:37,000 --> 00:02:40,000
or two different machines, which is fine. You see things like this all over the internet.

42
00:02:40,000 --> 00:02:45,000
But when you see XHTML that means every tag in here should have a closing tag.

43
00:02:45,000 --> 00:02:49,000
You can see, for example, some of these header tags are these little void tags

44
00:02:49,000 --> 00:02:51,000
that have the closing slashes.

45
00:02:51,000 --> 00:02:54,000
You wouldn't see that in most HTML5 documents,

46
00:02:54,000 --> 00:02:57,678
although any browser would accept it, because it doesn't actually hurt anything.
