1
00:00:00,000 --> 00:00:03,330
So the Roadblock problem is know to be exponential-time complete,

2
00:00:03,330 --> 00:00:08,150
which means it's provably harder than any problem in NP

3
00:00:08,150 --> 00:00:10,650
even on a nondeterministic machine.

4
00:00:10,650 --> 00:00:13,980
And the proof does not depend on whether P=NP or not.

5
00:00:13,980 --> 00:00:17,870
The proof is certain; Roadblock is harder than any problem in NP.

6
00:00:17,870 --> 00:00:21,180
So it's harder than, say, vertex cover.

7
00:00:21,180 --> 00:00:26,290
Now why is that? Why can't nondeterminism help us to solve Roadblock?

8
00:00:26,290 --> 00:00:29,070
Well, it can help us, but it apparently can't help us enough

9
00:00:29,070 --> 00:00:31,610
to make this problem solvable in NP.

10
00:00:31,610 --> 00:00:34,070
So there's several ways to explain this, and 1 of the differences

11
00:00:34,070 --> 00:00:38,760
between NP and problems that are harder than NP is that in NP,

12
00:00:38,760 --> 00:00:43,410
or, more concretely, in a problem like vertex cover, you're dealing with a static input.

13
00:00:43,410 --> 00:00:48,680
You're given 1 graph, and for that graph you're trying to solve 1 question.

14
00:00:48,680 --> 00:00:52,390
And that question is: Do you have a vertex cover of a certain size?

15
00:00:52,390 --> 00:00:56,550
Asking for an optimal strategy in a game like Roadblock is a bit different

16
00:00:56,550 --> 00:00:59,400
because this game is played against a player.

17
00:00:59,400 --> 00:01:05,440
So the question kind of is: After player 1 has made a move, what can player 2 do?

18
00:01:05,440 --> 00:01:10,210
And player 2, of course, has a number of possible reactions to what player 1 has done.

19
00:01:10,210 --> 00:01:13,470
You need to take all of these possibilities into consideration.

20
00:01:13,470 --> 00:01:17,060
How player 1 makes the second move or the third move

21
00:01:17,060 --> 00:01:20,060
always depends on what player 2 is doing in between.

22
00:01:20,060 --> 00:01:24,790
And that is why this problem here is intuitively exponential-time complete,

23
00:01:24,790 --> 00:01:26,860
because after every move that player 1 makes,

24
00:01:26,860 --> 00:01:31,150
you have to consider all of the possibilities that player 2 makes.

25
00:01:31,150 --> 00:01:33,280
And there's no way around that, instead of here,

26
00:01:33,280 --> 00:01:36,310
where we can just guess a small vertex cover.

27
00:01:36,310 --> 00:01:39,300
There's a description for this that is a little bit more formal.

28
00:01:39,300 --> 00:01:45,800
You can say that NP is kind of the set of problems that have a short proof.

29
00:01:45,800 --> 00:01:49,080
And by short, I mean a polynomial-time verifiable proof.

30
00:01:49,080 --> 00:01:51,880
So, for example, for vertex cover, when I tell you

31
00:01:51,880 --> 00:01:55,030
I have a vertex cover that only uses 5 vertices,

32
00:01:55,030 --> 00:01:57,890
and you ask me, please show me that vertex cover,

33
00:01:57,890 --> 00:02:00,890
well, I can just specify those 5 vertices to you,

34
00:02:00,890 --> 00:02:04,920
and you can check yourself that they will make up a vertex cover for the input graph.

35
00:02:04,920 --> 00:02:08,160
Now, for a game like Roadblock, that is not that easy,

36
00:02:08,160 --> 00:02:11,039
because if you said, "Player 1 can always win this game,"

37
00:02:11,039 --> 00:02:15,040
and I asked you--I wanted proof of that, then we again get into

38
00:02:15,040 --> 00:02:20,110
this situation that the proof of the optimal strategy is exponential in size.

39
00:02:20,110 --> 00:02:22,510
Because that proof will basically start out by saying,

40
00:02:22,510 --> 00:02:25,270
okay, this is the first move that player 1 should make,

41
00:02:25,270 --> 00:02:29,340
but then there are a couple of reactions that player 2 could have to that move.

42
00:02:29,340 --> 00:02:34,130
So, let's say it branches out; so this is what player 1 is doing,

43
00:02:34,130 --> 00:02:36,130
and this is what player 2 is doing.

44
00:02:36,130 --> 00:02:39,530
Now, for each of these reactions of player 2, I will again in this proof

45
00:02:39,530 --> 00:02:42,410
have to specify what player 1 is supposed to do.

46
00:02:42,410 --> 00:02:46,310
But then, as you see, it branches out. Player 2 again has a number

47
00:02:46,310 --> 00:02:48,690
of possible reactions that it can have to this move.

48
00:02:48,690 --> 00:02:51,580
For Roadblock, if you think of this as a large search tree,

49
00:02:51,580 --> 00:02:56,480
it doesn't suffice to show that there's just 1 single path that leads to a solution,

50
00:02:56,480 --> 00:02:59,610
but basically you have to show that any path here in this tree

51
00:02:59,610 --> 00:03:01,870
always leads to player 1 winning.

52
00:03:01,870 --> 00:03:05,090
So for vertex cover or any other problem in NP

53
00:03:05,090 --> 00:03:07,400
and, of course, this is again talking very informally,

54
00:03:07,400 --> 00:03:10,940
it suffices to show 1 path in the search tree.

55
00:03:10,940 --> 00:03:15,480
Whereas for a problem like Roadblock, the proof that, for example,

56
00:03:15,480 --> 00:03:20,120
player 1 can always win, would require you to show the whole search tree

57
00:03:20,120 --> 00:03:23,450
and not just a single path, and that is why problems such as Roadblock

58
00:03:23,450 --> 99:59:59,999
are provably harder than problems in NP.
