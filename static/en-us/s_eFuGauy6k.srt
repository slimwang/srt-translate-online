1
00:00:00,560 --> 00:00:02,370
Now I'm going to walk you
through the process of

2
00:00:02,370 --> 00:00:04,640
getting your workspace set up on Mac.

3
00:00:04,640 --> 00:00:06,250
And the process on Linux is similar.

4
00:00:07,260 --> 00:00:10,350
There are also written instructions
in the instructor notes.

5
00:00:10,350 --> 00:00:13,920
If you're using Windows, there
are instructions in the previous video.

6
00:00:13,920 --> 00:00:16,300
First I'm going to download
two files that are needed for

7
00:00:16,300 --> 00:00:19,940
the set up I just showed you,
one to enable tab completion, and

8
00:00:19,940 --> 00:00:23,540
want to enable the special
Git features in the prompt.

9
00:00:23,540 --> 00:00:25,503
So I'll go to the webpage
with the first file and

10
00:00:25,503 --> 00:00:29,010
you can find the link to this
file in the instructor's notes.

11
00:00:29,010 --> 00:00:32,805
Then I'll right-click anywhere
on the page and select Save As.

12
00:00:32,805 --> 00:00:34,995
And I'll save the file in
my Downloads directory.

13
00:00:36,135 --> 00:00:39,030
Now I want to make sure that
Hide extension is unchecked, so

14
00:00:39,030 --> 00:00:42,105
that I can see the exact name
the file is being given.

15
00:00:42,105 --> 00:00:45,820
And by default,
it's suggesting Redirecting.txt.

16
00:00:45,820 --> 00:00:49,670
But I want to change this
to git-completion.bash, and

17
00:00:49,670 --> 00:00:50,500
then I'll Save the file.

18
00:00:51,870 --> 00:00:53,890
Now I want to move the file
to my home directory,

19
00:00:53,890 --> 00:00:56,050
which I'll do using the Terminal.

20
00:00:56,050 --> 00:00:59,650
Now when I first open the Terminal,
I start out in my home directory, or

21
00:00:59,650 --> 00:01:03,520
I can type cd ~ to get to
the home directory if I need to.

22
00:01:03,520 --> 00:01:05,630
Now I'll use the command mv,
which stands for

23
00:01:05,630 --> 00:01:09,720
move, to move the file I just
saved into my home directory.

24
00:01:09,720 --> 00:01:11,830
The first argument is
the file I want to move,

25
00:01:11,830 --> 00:01:15,892
which is in my Downloads directory and
it's named git-completion.bash.

26
00:01:15,892 --> 00:01:21,530
And I want to move it into the current
directory while keeping the same name.

27
00:01:21,530 --> 00:01:24,490
Then I'll go through the same process
to save the second file linked in

28
00:01:24,490 --> 00:01:28,010
the instructor's notes as git-prompt.sh.

29
00:01:28,010 --> 00:01:30,390
Next, I'm going to create
a file called .bash_profile,

30
00:01:30,390 --> 00:01:32,780
which contains configuration for
the Terminal.

31
00:01:34,150 --> 00:01:37,740
I recommend using the configuration file
that I used when filming this course.

32
00:01:38,760 --> 00:01:42,040
To do that, you can download the file
called bash_profile_course in

33
00:01:42,040 --> 00:01:43,290
the downloadables section.

34
00:01:44,850 --> 00:01:48,920
Next, use the Terminal to move
this file to your home directory.

35
00:01:48,920 --> 00:01:52,980
You should name it .bash_profile and
don't forget the dot at the beginning.

36
00:01:52,980 --> 00:01:57,030
Now if you already have a bash profile,
then don't run this command, and

37
00:01:57,030 --> 00:01:58,280
instead you can copy and

38
00:01:58,280 --> 00:02:01,320
paste the content from this file
into your existing bash profile.

39
00:02:02,550 --> 00:02:03,830
And if you're running Linux,

40
00:02:03,830 --> 00:02:09,090
then you might need to name this file
.bashrc instead of .bash_profile.

41
00:02:09,090 --> 00:02:13,220
Now I don't see any changes made to my
prompt yet, and that's because I'll

42
00:02:13,220 --> 00:02:16,420
need to close and reopen the Terminal
before the changes take effect.

43
00:02:16,420 --> 00:02:18,600
I'll do that at
the the end of the video.

44
00:02:18,600 --> 00:02:21,740
In case you're curious about
what's in this bash profile, or

45
00:02:21,740 --> 00:02:22,780
if you'd like to pick and

46
00:02:22,780 --> 00:02:27,150
choose just the lines you're interested
in, I'll go through what each line does.

47
00:02:27,150 --> 00:02:31,195
Now, don't worry if you don't
understand how each line works though.

48
00:02:31,195 --> 00:02:34,605
Even experienced Unix programmers
frequently copy and paste this kind of

49
00:02:34,605 --> 00:02:36,735
thing from their friends,
rather than writing it from scratch.

50
00:02:38,605 --> 00:02:41,545
This first line loads one of
the files you downloaded earlier and

51
00:02:41,545 --> 00:02:42,725
enables tab completion.

52
00:02:44,145 --> 00:02:46,775
These lines define some colors,
which will be used in your prompt.

53
00:02:47,795 --> 00:02:50,580
This line loads the other
file you downloaded earlier.

54
00:02:50,580 --> 00:02:51,600
And it's necessary for

55
00:02:51,600 --> 00:02:54,330
the git related stuff like commit
IDs to show up in your prompt.

56
00:02:55,590 --> 00:02:58,370
This line is what makes sure that
the asterisk will be shown in your

57
00:02:58,370 --> 00:03:01,460
prompt if you make changes
in a git repository.

58
00:03:01,460 --> 00:03:04,450
And this line actually defines
what the prompt will be.

59
00:03:04,450 --> 00:03:06,880
The prompt will show
your username in purple,

60
00:03:06,880 --> 00:03:10,740
the commit you currently have checked
out or other git related stuff in green.

61
00:03:10,740 --> 00:03:14,230
And the director URN followed
by a dollar sign in blue.

62
00:03:14,230 --> 00:03:17,360
Then any text after that will be
displayed in the default color.

63
00:03:17,360 --> 00:03:20,500
If you're curious to learn more
about how prompts work in bash,

64
00:03:20,500 --> 00:03:23,300
check out the link in the instructor's
notes, but it's not necessary for

65
00:03:23,300 --> 00:03:25,060
the rest of this course.

66
00:03:25,060 --> 00:03:27,810
Next, it's important to make sure
you can launch your favorite text

67
00:03:27,810 --> 00:03:29,120
editor from the Terminal so

68
00:03:29,120 --> 00:03:32,740
that you'll be able to set it as
your default editor within git.

69
00:03:32,740 --> 00:03:34,820
I'll show how to do this for Sublime.

70
00:03:34,820 --> 00:03:36,610
If you're using another text editor,

71
00:03:36,610 --> 00:03:41,490
I recommend that you Google to figure
out how to use it from the Terminal.

72
00:03:41,490 --> 00:03:45,260
Now, I can launch Sublime from the
Terminal by running this long command.

73
00:03:45,260 --> 00:03:48,770
Where this is where Sublime
is stored on my computer, but

74
00:03:48,770 --> 00:03:50,720
I'd like to have a shortcut.

75
00:03:50,720 --> 00:03:54,570
To create one I'll use Sublime to
add a line to my bash profile.

76
00:03:55,860 --> 00:03:58,980
Files with a dot at the beginning of
the name don't usually show up in

77
00:03:58,980 --> 00:04:00,700
file system explorers, so

78
00:04:00,700 --> 00:04:04,330
I'm going to have trouble opening
my batch profile with Sublime.

79
00:04:04,330 --> 00:04:07,330
To fix this I'll use the trick
of moving my bash profile

80
00:04:08,360 --> 00:04:10,730
to a file without a dot at
the beginning of the name.

81
00:04:11,940 --> 00:04:15,370
Then to open the file in Sublime, I'll
first navigate to my home directory,

82
00:04:15,370 --> 00:04:18,790
which I can do by pressing Cmd+Shift+H.

83
00:04:18,790 --> 00:04:21,980
And then I'll select
the file bash_profile.

84
00:04:21,980 --> 00:04:25,420
Then I'll add this line to it to
make the subl command stand for

85
00:04:25,420 --> 00:04:27,370
the same command that you
saw me enter earlier.

86
00:04:28,920 --> 00:04:29,600
You can copy and

87
00:04:29,600 --> 00:04:32,360
paste this line from the instructor's
notes if you're using Sublime.

88
00:04:33,750 --> 00:04:36,260
Now I'll save the file and

89
00:04:36,260 --> 00:04:40,590
I'll change the name back to have a dot
at the beginning using the Terminal.

90
00:04:40,590 --> 00:04:41,465
If I don't do this,

91
00:04:41,465 --> 00:04:45,320
then the bash profile won't take
effect when I open the Terminal.

92
00:04:45,320 --> 00:04:48,010
Again, this command won't work
until I've restarted the Terminal.

93
00:04:49,010 --> 00:04:51,440
Now I'll configure git to
use Sublime as my editor for

94
00:04:51,440 --> 00:04:53,470
things like commit messages.

95
00:04:53,470 --> 00:05:00,340
To do that I'll run git config
--global core.editor and

96
00:05:00,340 --> 00:05:04,070
here I need to put in double quotes
the command to open my text editor.

97
00:05:05,130 --> 00:05:08,584
For Sublime that's subl -n -w.

98
00:05:08,584 --> 00:05:12,502
Where -n will open
Sublime in a new window,

99
00:05:12,502 --> 00:05:16,440
and -w will wait until you close
your file before continuing.

100
00:05:17,590 --> 00:05:18,730
If you use a different editor,

101
00:05:18,730 --> 00:05:23,190
you will need to modify this part of the
command to use the editor that you like.

102
00:05:23,190 --> 00:05:25,920
See the instructor's notes for
more details.

103
00:05:25,920 --> 00:05:29,460
Next I'll run these two
git config commands,

104
00:05:29,460 --> 00:05:32,040
which will come in handy
later in the course.

105
00:05:32,040 --> 00:05:32,750
Please copy and

106
00:05:32,750 --> 00:05:35,790
paste these commands from
the instructor's notes and run them.

107
00:05:35,790 --> 00:05:38,730
Finally I'll close the Terminal and
reopen it.

108
00:05:38,730 --> 00:05:41,610
Now I can see that my prompt has
changed to become more colorful.

109
00:05:42,700 --> 00:05:46,100
And if I want to view my
bash profile using Sublime,

110
00:05:46,100 --> 00:05:49,390
I can run subl .bash_profile.

111
00:05:49,390 --> 00:05:52,010
Remember to close and reopen your
Terminal when you're finished, or

112
00:05:52,010 --> 00:05:53,190
your changes won't take effect.
