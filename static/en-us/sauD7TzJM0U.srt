1
00:00:00,650 --> 00:00:02,260
As we said at the outset of

2
00:00:02,260 --> 00:00:06,660
this course module, virtualizing the memory subsystem in

3
00:00:06,660 --> 00:00:10,280
a safe and performance conscious manner is the

4
00:00:10,280 --> 00:00:14,570
key to the success of virtualization. What remains

5
00:00:14,570 --> 00:00:16,770
to be vertualized are the CPU and the

6
00:00:16,770 --> 00:00:20,810
devices. That's what we'll talk about next. Memory

7
00:00:20,810 --> 00:00:23,990
virtualization is sort of under the covers. When

8
00:00:23,990 --> 00:00:26,710
it comes to the CPU and the devices,

9
00:00:26,710 --> 00:00:29,930
the interference among the virtual machines living

10
00:00:29,930 --> 00:00:32,490
on top of the hypervisor becomes much

11
00:00:32,490 --> 00:00:36,550
more explicit. The challenge in virtualizing the

12
00:00:36,550 --> 00:00:39,560
CPU and the devices is giving the

13
00:00:39,560 --> 00:00:42,360
illusion to the guest operating systems living

14
00:00:42,360 --> 00:00:45,810
on top, that they own the resources.

15
00:00:45,810 --> 00:00:51,840
Protected and handed to them by the hypervisor, on a need basis. There are two

16
00:00:51,840 --> 00:00:54,890
parts to CPU virtualization, we want to give the

17
00:00:54,890 --> 00:00:58,850
illusion to each guest operating system, that it

18
00:00:58,850 --> 00:01:01,790
owns the CPU, that is; it does not

19
00:01:01,790 --> 00:01:05,370
even know the existence of other guests on top

20
00:01:05,370 --> 00:01:07,360
the same CPU If you think about it,

21
00:01:07,360 --> 00:01:09,890
this is not very far removed from the concerns

22
00:01:09,890 --> 00:01:12,810
of a time shared operating system, which has

23
00:01:12,810 --> 00:01:17,430
to give the illusion to each running process that

24
00:01:17,430 --> 00:01:19,470
that process is the only one running

25
00:01:19,470 --> 00:01:22,360
on the processor. The main difference in the

26
00:01:22,360 --> 00:01:26,280
virtual setting is that this illusion is

27
00:01:26,280 --> 00:01:30,290
being provided by the hypervisor at the granularity

28
00:01:30,290 --> 00:01:35,810
of an entire operating system. That's the first part. The second part is we want

29
00:01:35,810 --> 00:01:39,510
the hyperviser to field events arising due

30
00:01:39,510 --> 00:01:42,930
to the execution of a process that belongs

31
00:01:42,930 --> 00:01:46,550
to a parent guest operating system, in particular during the

32
00:01:46,550 --> 00:01:50,230
execution of a process on the processor. There are going to be

33
00:01:50,230 --> 00:01:55,510
discontinuities that occur. And those program discontinuities, have to be

34
00:01:55,510 --> 00:02:00,990
fielded by the hypoviser, and passed to right guest operating system.
