1
00:00:00,670 --> 00:00:04,770
So how should you go about thinking about implementing generalization.

2
00:00:04,770 --> 00:00:08,780
You certainly want to be able to take advantage of whatever inheritance feature

3
00:00:08,780 --> 00:00:11,920
is in your programming language. You just need to stick to certain rules.

4
00:00:11,920 --> 00:00:17,280
Typically, this means that in children classes, you can add features, but

5
00:00:17,280 --> 00:00:21,950
you don't want to take away features. And you want to really restrict how you do

6
00:00:21,950 --> 00:00:29,110
any kind of overriding, in the child class. When you do want to override

7
00:00:29,110 --> 00:00:34,350
a method in the child class, make sure that you obey the two following rules.

8
00:00:34,350 --> 00:00:39,810
First of all, when calling that particular method, you want to make sure that

9
00:00:39,810 --> 00:00:45,350
the child method can accept any arguments that the parents method could accept.

10
00:00:45,350 --> 00:00:50,690
That is, the child has to be as open to inputs as the parent does.

11
00:00:50,690 --> 00:00:55,030
Secondly, the output produced by the child method,

12
00:00:55,030 --> 00:00:58,920
when given the same arguments that were given to the parent method should

13
00:00:58,920 --> 00:01:03,910
produce the same result. What we're saying with both these rules is that for

14
00:01:03,910 --> 00:01:08,750
the same situation in the parent, the child needs to do the same thing.

15
00:01:08,750 --> 00:01:12,870
It needs to be, a special case. Now the child can do more.

16
00:01:12,870 --> 00:01:17,330
If the child is handling a special case of the parent it,

17
00:01:17,330 --> 00:01:21,230
it can deal with that particular special case. It just has to always,

18
00:01:21,230 --> 00:01:25,520
act as if it is, it is also obeying whatever rules it specified for the parent.
