1
00:00:00,000 --> 00:00:02,000
Let's find out what the right answers are.

2
00:00:02,000 --> 00:00:05,000
Fibonacci of 6 = 8.

3
00:00:05,000 --> 00:00:09,000
Well, if N is 1, 2, 3, 4, 5, 6.

4
00:00:09,000 --> 00:00:18,000
We said that Fibonacci of N was 1, 1, 2, 3, 5, 8.

5
00:00:18,000 --> 00:00:21,000
It does look like Fibonacci of 6 = 8. Great!

6
00:00:21,000 --> 00:00:25,000
Is Fibonacci of N always < or = N + 1?

7
00:00:25,000 --> 00:00:29,000
Well, 1 is < or = to 2. 2 is < or = 3.

8
00:00:29,000 --> 00:00:32,000
1 < or = 1. 5 < or = 8.

9
00:00:32,000 --> 00:00:33,000
This is certainly true.

10
00:00:33,000 --> 00:00:36,000
The Fibonacci sequence is strictly nondecreasing.

11
00:00:36,000 --> 00:00:39,000
It either stays the same or gets bigger.

12
00:00:39,000 --> 00:00:42,000
This next one was a bit of a ringer--a bit of a trick.

13
00:00:42,000 --> 00:00:48,000
The vast majority of the time, almost always, albeit finitely often,

14
00:00:48,000 --> 00:00:54,000
Fibonacci of N is strictly > than Fibonacci of N + 1, except right here at the start

15
00:00:54,000 --> 00:01:00,000
when Fibonacci of 1 and Fibonacci of 2 are both 1, so they're = rather than <.

16
00:01:00,000 --> 00:01:01,000
So no dice there.

17
00:01:01,000 --> 00:01:05,000
Is Fibonacci of 20 > 1000?

18
00:01:05,000 --> 00:01:06,000
Yes. The sequence grows super fast.

19
00:01:06,000 --> 00:01:07,000
Let's just go check.

20
00:01:07,000 --> 00:01:11,000
I'll just write out the definition of Fibonacci right here.

21
00:01:11,000 --> 00:01:14,000
I'm declaring a procedure called fibo. It takes an argument n.

22
00:01:14,000 --> 00:01:17,000
Here's our base case: if n < or = to 2, return 1.

23
00:01:17,000 --> 00:01:23,000
Otherwise, we call ourselves recursively 2 times.

24
00:01:23,000 --> 00:01:28,000
And the answer is 6,765. Wow! That's immense.

25
00:01:28,000 --> 00:01:34,000
Notably, it's bigger than the 1000 we were asking about.

26
00:01:34,000 --> 99:59:59,999
True!
