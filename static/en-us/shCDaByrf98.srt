1
00:00:00,000 --> 00:00:03,000
Here's a game that we've seen before.

2
00:00:03,000 --> 00:00:07,000
We call this a single-player deterministic game.

3
00:00:07,000 --> 00:00:09,000
We know how to solve this.

4
00:00:09,000 --> 00:00:13,000
We use the techniques of search through a state space--the problems solving techniques.

5
00:00:13,000 --> 00:00:18,000
We draw a search tree through the state space,

6
00:00:18,000 --> 00:00:24,000
and I'm going to draw the nodes like this with triangles rather than with circles.

7
00:00:24,000 --> 00:00:28,000
In any position--in this position here--there are three moves I can make.

8
00:00:28,000 --> 00:00:32,000
I can slide this tile, this tile, or this tile.

9
00:00:32,000 --> 00:00:36,000
So I have 3 moves, and that gives me 3 more states.

10
00:00:36,000 --> 00:00:42,000
I keep on expanding out the states going farther and farther down until I reach one

11
00:00:42,000 --> 00:00:49,000
that's a goal state, and then I have a path through there that gets me to a solution.

12
00:00:49,000 --> 00:00:51,000
What does it take to describe a game?

13
00:00:51,000 --> 00:00:58,000
Well, we have a set of states S, including a distinguished start state S0.

14
00:00:58,000 --> 00:01:03,000
We have a set of players P that can be our one player, as in this game, or two or more.

15
00:01:03,000 --> 00:01:10,000
We have a function that gives us the allowable actions in a state,

16
00:01:10,000 --> 00:01:13,000
and sometimes we put in a second argument,

17
00:01:13,000 --> 00:01:17,000
which is the player, in that state-making action,

18
00:01:17,000 --> 00:01:21,000
and sometimes it's explicit in the state itself whose turn it is to move.

19
00:01:21,000 --> 00:01:25,000
We have a transition function that tells us the result of,

20
00:01:25,000 --> 00:01:29,000
in some state, applying an action giving us a new state.

21
00:01:29,000 --> 00:01:34,000
And we have a terminal test to say is it the end of the game.

22
00:01:34,000 --> 00:01:36,000
That's going to be true or false.

23
00:01:36,000 --> 00:01:42,000
Finally, we have terminal utilities saying that for a given state and a given player

24
00:01:42,000 --> 00:01:46,000
there is some number which is the value of the game to that player.

25
00:01:46,000 --> 00:01:52,000
In simple games that number is a win or a loss, a one or a zero.

26
00:01:52,000 --> 00:01:56,000
Sometimes it's denoted as a +1 and a -1.

27
00:01:56,000 --> 00:02:00,000
In other games there can be more complicated utilities

28
00:02:00,000 --> 99:59:59,999
of you win twice as much or four times as much or whatever.
