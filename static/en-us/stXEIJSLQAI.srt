1
00:00:00,360 --> 00:00:05,480
As we already said before, direct
mapped, and fully associated caches

2
00:00:05,480 --> 00:00:08,760
can be considered to be just special
cases or set of associated caches.

3
00:00:08,760 --> 00:00:09,540
So for example,

4
00:00:09,540 --> 00:00:15,370
a direct mapped cache, is actually
a 1-way set associative cache.

5
00:00:15,370 --> 00:00:21,850
And a fully associative =
N-way SA where N = # of lines.

6
00:00:21,850 --> 00:00:26,520
For all this caches,
the address that the processor supplies

7
00:00:26,520 --> 00:00:31,400
is broken into the offset,
index and tag components.

8
00:00:31,400 --> 00:00:35,840
The number of offsets bits is
the number of bits that we need to

9
00:00:35,840 --> 00:00:37,820
tell us where in the block size we are.

10
00:00:37,820 --> 00:00:40,130
So it's log2 (block size).

11
00:00:40,130 --> 00:00:44,250
The number of index bits
is log2(# of sets) we have.

12
00:00:45,520 --> 00:00:50,080
In a direct mapped cache,
that is the number of blocks we have.

13
00:00:50,080 --> 00:00:55,040
In a fully associative cache,
that's 1, so log2 of that is 0,

14
00:00:55,040 --> 00:00:57,000
and we have no index bits.

15
00:00:57,000 --> 00:00:59,990
And the tag bits are the remaining bits.

16
00:00:59,990 --> 00:01:03,090
When you're trying to figure out
which bits are the index bits,

17
00:01:03,090 --> 00:01:06,250
we actually need to know which
bits are the offset bits, too.

18
00:01:06,250 --> 00:01:08,300
Because knowing that we have,
for example,

19
00:01:08,300 --> 00:01:13,720
three index bits doesn't really tell us
whether they're here, or here, or here.

20
00:01:13,720 --> 00:01:16,270
That depends on the offset bits.

21
00:01:16,270 --> 00:01:18,760
So make sure that when you're
determining these bits,

22
00:01:18,760 --> 00:01:19,810
you do it in that order.

23
00:01:19,810 --> 00:01:23,100
First figure out how many
offset bits then the next so

24
00:01:23,100 --> 00:01:25,770
many bits are indexed bits and
then the rest is the tag.
