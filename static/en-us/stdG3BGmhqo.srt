1
00:00:19,177 --> 00:00:26,469
Now and then I think of when they were together.

2
00:00:26,469 --> 00:00:34,108
Like when you found a route that went from X to Y

3
00:00:34,108 --> 00:00:37,837
All those paths, they went through A and B, which

4
00:00:37,837 --> 00:00:41,835
isolates them from that whole subtree. It was a

5
00:00:41,835 --> 00:01:03,336
bridge and it’s a bridge that now is severed.

6
00:01:03,336 --> 00:01:06,671
You can try computing when a graph is all

7
00:01:06,671 --> 00:01:14,158
connected. You put the neighbors on a list, the

8
00:01:14,158 --> 00:01:20,915
open list. So when I tried to run a depth-first

9
00:01:20,915 --> 00:01:26,214
search. And found that half the graph was in I

10
00:01:26,229 --> 00:01:28,794
guess it means it makes the search that more

11
00:01:28,794 --> 00:01:33,561
efficient.

12
00:01:33,561 --> 00:01:38,440
But you didn’t have to cut the path. Drop that singular

13
00:01:38,440 --> 00:01:42,370
connection, start a new component. Now each is in a

14
00:01:42,370 --> 00:01:46,139
separate graph, so their reachable descendents have been

15
00:01:46,139 --> 00:01:52,016
split in half. No it doesn’t change the time, big O or

16
00:01:52,016 --> 00:01:56,351
the clustering coefficient in the social network.

17
00:01:56,351 --> 00:01:59,066
I guess that I don’t need that though.

18
00:01:59,066 --> 00:02:06,963
Now there’s just no pathway that can use two nodes

19
00:02:06,963 --> 00:02:13,958
Now there’s just no pathway that can use two nodes

20
00:02:13,958 --> 00:02:33,142
Now there’s just no pathway that can use two nodes

21
00:02:33,142 --> 00:02:35,782
Now and then I think of all the times you chilled

22
00:02:35,782 --> 00:02:41,917
me over. But had me believing it was always

23
00:02:41,917 --> 00:02:50,016
something that I'd done. But I don’t wanna loop

24
00:02:50,016 --> 00:02:56,474
again. Though my running time is. You said you’d

25
00:02:56,474 --> 00:02:59,651
use efficient codes and you wouldn’t waste your

26
00:02:59,651 --> 00:03:02,873
cycles finding pathways that can you to know

27
00:03:02,873 --> 00:03:06,900
But you didn’t have to cut the path. Drop that

28
00:03:06,900 --> 00:03:10,846
singular connection, start a new component. Now

29
00:03:10,846 --> 00:03:14,130
each is in a separate graph, so their reachable

30
00:03:14,130 --> 00:03:18,638
descendents have been split in half. No it doesn’t

31
00:03:18,638 --> 00:03:23,543
change the time, big O or the clustering coefficient

32
00:03:23,543 --> 00:03:27,485
in the social network. I guess that I don’t need that

33
00:03:27,485 --> 00:03:28,360
though.

34
00:03:28,360 --> 00:03:32,062
Now there’s just no pathway that can use two nodes

35
00:03:32,062 --> 00:03:33,531
[No pathways]

36
00:03:33,531 --> 00:03:35,865
That can use two nodes.

37
00:03:35,865 --> 00:03:39,028
Now there’s just no pathway that can use two nodes

38
00:03:39,028 --> 00:03:41,228
[No pathways]

39
00:03:41,228 --> 00:03:43,078
That can use two nodes

40
00:03:43,078 --> 00:03:44,928
[No pathways]

41
00:03:44,928 --> 00:03:46,614
Now there’s just no pathway that can use two nodes

42
00:03:46,614 --> 00:03:48,143
[No pathways]

43
00:03:48,143 --> 00:03:52,616
That can use two nodes

44
00:03:52,616 --> 00:03:55,834
That can use two nodes.

45
00:03:55,834 --> 00:03:58,106
That can use two nodes

46
00:03:58,106 --> 00:04:02,106
[No pathways]
