1
00:00:00,000 --> 00:00:03,000
The answer is because lists are mutable.

2
00:00:03,000 --> 00:00:07,000
That makes them unlikely candidates to put into hash tables.

3
00:00:07,000 --> 00:00:08,000
Here's why.

4
00:00:08,000 --> 00:00:12,000
Let's suppose we did allow lists to be hashable.

5
00:00:12,000 --> 00:00:15,000
Now we're trying to compute the hash function for y,

6
00:00:15,000 --> 00:00:19,000
and let's say we have a very simple hash function--not a very good one--that just says

7
00:00:19,000 --> 00:00:22,000
add up the values of the elements.

8
00:00:22,000 --> 00:00:25,000
Let's also say that the hash of an integer is itself,

9
00:00:25,000 --> 00:00:30,000
so the hash code for this list would be equal to 6, the sum of the elements.

10
00:00:30,000 --> 00:00:34,000
But now the problem is, because these lists are mutable,

11
00:00:34,000 --> 00:00:39,000
I could go in, and I could say, y[0] = 10.

12
00:00:39,000 --> 00:00:42,000
Y would be the list [10, 2, 3].

13
00:00:42,000 --> 00:00:47,000
Now when we check and say, is y in d?

14
00:00:47,000 --> 00:00:53,000
We're going to compute the hash value 10 + 2 + 3 = 15.

15
00:00:53,000 --> 00:00:56,000
That's a different hash value than we had before.

16
00:00:56,000 --> 00:01:00,000
So if we stored y into the dictionary when it had the value 6,

17
00:01:00,000 --> 00:01:03,000
and now we're trying to fetch it when it has the value 15,

18
00:01:03,000 --> 00:01:05,000
you can see how Python is going to be confused.

19
00:01:05,000 --> 00:01:07,000
Now, there's 2 ways you could handle that.

20
00:01:07,000 --> 00:01:14,000
One--the way that Python does take is to disallow putting the list into the hash table

21
00:01:14,000 --> 00:01:18,000
in the first place because it potentially could lead to errors if it was modified.

22
00:01:18,000 --> 00:01:23,000
The other way is Python could allow you to put it in,

23
00:01:23,000 --> 00:01:25,000
but then recognize that it's the programmers fault,

24
00:01:25,000 --> 00:01:28,000
and if you go ahead and modify it, then things are not going to work anymore,

25
00:01:28,000 --> 99:59:59,999
and Python does not take that approach, although some other languages do.
