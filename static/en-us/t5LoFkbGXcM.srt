1
00:00:00,730 --> 00:00:02,930
So you've seen some of the responses
we get from these APIs,

2
00:00:02,930 --> 00:00:05,310
and they're kind of unwieldy.

3
00:00:05,310 --> 00:00:07,990
Although they are somewhat readable,
at first glance it's difficult

4
00:00:07,990 --> 00:00:10,150
to extract something useful
from these responses.

5
00:00:11,310 --> 00:00:15,000
But these JSON responses
are easily parsable in Python.

6
00:00:15,000 --> 00:00:18,770
I'm going to call the getGeocodeLocation
function again, but this time,

7
00:00:18,770 --> 00:00:20,700
store the result in
a variable named Dallas.

8
00:00:21,780 --> 00:00:25,460
So when I call Dallas,
I get this huge JSON object again.

9
00:00:25,460 --> 00:00:26,860
Looking at this response,

10
00:00:26,860 --> 00:00:29,810
I can try to better understand the data
that google maps is providing to me.

11
00:00:30,870 --> 00:00:33,460
All of the data that looks like
coordinates is in this portion of

12
00:00:33,460 --> 00:00:34,740
the response.

13
00:00:34,740 --> 00:00:38,640
I see quite a few coordinates though,
so which ones are the ones that I need?

14
00:00:38,640 --> 00:00:41,310
Well, reading through the response,
the first thing I notice

15
00:00:41,310 --> 00:00:44,490
is that Google is giving me
an approximate set of coordinates,

16
00:00:44,490 --> 00:00:47,540
that correspond to the Northeast and
Southwest bounds of the city.

17
00:00:48,620 --> 00:00:52,880
Then it provides a suggested viewport
for viewing the entire city on the map.

18
00:00:52,880 --> 00:00:56,100
But this final set of coordinates seems
to correspond to a central set of

19
00:00:56,100 --> 00:00:57,780
coordinates for the city.

20
00:00:57,780 --> 00:00:59,166
These are the ones
that I want to extract.

21
00:00:59,166 --> 00:01:02,000
By typing dallas.keys

22
00:01:02,000 --> 00:01:06,540
I can navigate through the keys of the
JSON response like a Python dictionary.

23
00:01:06,540 --> 00:01:09,880
In some cases,
I see that keys contain lists of values.

24
00:01:09,880 --> 00:01:11,460
So by using the square brackets,

25
00:01:11,460 --> 00:01:14,550
I can reference to an index
inside of these lists.

26
00:01:14,550 --> 00:01:16,330
After navigating through
this response for

27
00:01:16,330 --> 00:01:21,550
a little bit, I found that going
into results, then the zero's index,

28
00:01:21,550 --> 00:01:26,920
then geometry, location, and lat,
gave me the latitude that I wanted.

29
00:01:28,130 --> 00:01:31,980
Similarly, going down the same path and
then using lng,

30
00:01:31,980 --> 00:01:34,290
returns the longitude
coordinate I wanted.

31
00:01:34,290 --> 00:01:36,240
So I'm finished extracting
just the latitude and

32
00:01:36,240 --> 00:01:39,080
longitude coordinates from
my geocoding request.

33
00:01:39,080 --> 00:01:41,585
I modify my geocode.pie file like so,

34
00:01:41,585 --> 00:01:45,255
such that now it responds the latitude
and longitude coordinates.

35
00:01:45,255 --> 00:01:47,445
I'll also comment out the response
header for now as well.

36
00:01:48,475 --> 00:01:50,975
The code for this activity can be
found in the instructor notes.
