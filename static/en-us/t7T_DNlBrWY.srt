1
00:00:00,000 --> 00:00:03,000
And of course, the part that is easy to see is that

2
00:00:03,000 --> 00:00:06,000
this is the shortest possible tour,

3
00:00:06,000 --> 00:00:09,000
so these two here cannot be true.

4
00:00:09,000 --> 00:00:11,000
And also this one here cannot be true

5
00:00:11,000 --> 00:00:13,000
because, after all, this is an approximation,

6
00:00:13,000 --> 00:00:16,000
and it is not guaranteed to give us the optimum solution.

7
00:00:16,000 --> 00:00:19,000
The question now is which one of these two here to choose.

8
00:00:19,000 --> 00:00:22,000
So is it always strictly smaller

9
00:00:22,000 --> 00:00:24,000
or can it be the same?

10
00:00:24,000 --> 00:00:26,000
And the correct answer here is that the length of the shortest tour

11
00:00:26,000 --> 00:00:29,000
can actually also be equal to the length of the tour

12
00:00:29,000 --> 00:00:31,000
output by the algorithm.

13
00:00:31,000 --> 00:00:32,000
It's not guaranteed to be, but it can be.

14
00:00:32,000 --> 00:00:35,000
And this could be the case, for example,

15
00:00:35,000 --> 00:00:37,000
if the input that we are given

16
00:00:37,000 --> 00:00:40,000
is already a tree, then the spanning tree

17
00:00:40,000 --> 00:00:44,000
will just be the input network itself.

18
00:00:44,000 --> 00:00:48,000
Then a shortest tour is indeed a walk along that tree.

19
00:00:48,000 --> 00:00:51,000
So in this case, you would have equality here.

20
00:00:51,000 --> 00:00:54,000
So length of the tour that we compute is at least as large

21
00:00:54,000 --> 99:59:59,999
as the length of the shortest tour but not always strictly bigger.
