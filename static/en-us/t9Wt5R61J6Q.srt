1
00:00:00,650 --> 00:00:06,040
Notice so far that Exokernel supports no extractions. It

2
00:00:06,040 --> 00:00:11,240
only has mechanisms for securely giving resources to the Library Operating

3
00:00:11,240 --> 00:00:16,390
System. And the resources may be a space resource, memory, time resource,

4
00:00:16,390 --> 00:00:21,230
or specific hardware resource like area of the graphic display, and

5
00:00:21,230 --> 00:00:26,470
so on. Therefore, exokernel needs a way of

6
00:00:26,470 --> 00:00:31,070
revoking or reclaiming resources that have been allocated

7
00:00:31,070 --> 00:00:34,210
to a library operating system. Of course, exokernel keeps

8
00:00:34,210 --> 00:00:36,990
the scoreboard as to what resources have been allocated

9
00:00:36,990 --> 00:00:40,600
to different library operating systems. And therefore, at any

10
00:00:40,600 --> 00:00:43,575
point of time, it can revoke the resources that

11
00:00:43,575 --> 00:00:45,940
had been given to a library operating system. Sort

12
00:00:45,940 --> 00:00:48,630
of similar to a student working in my lab,

13
00:00:48,630 --> 00:00:51,460
if he or she graduates, I might say, well,

14
00:00:51,460 --> 00:00:55,860
it's time for you to return the key to the lab, and I have a way of revoking

15
00:00:55,860 --> 00:01:01,490
that resource that I may have given to a student for use in my lab. Similarly,

16
00:01:01,490 --> 00:01:05,850
exokernel has mechanisms for revoking resources from a

17
00:01:05,850 --> 00:01:08,650
library operating system. So specifically, for instance, if you

18
00:01:08,650 --> 00:01:13,190
think about the CPU, exokernel has no idea what

19
00:01:13,190 --> 00:01:16,660
the library operating system is using the CPU for.

20
00:01:16,660 --> 00:01:19,260
As opposed to SPIN for instance, which

21
00:01:19,260 --> 00:01:22,980
has an abstraction of strand that represents

22
00:01:22,980 --> 00:01:26,360
the user level that represents the library's

23
00:01:26,360 --> 00:01:29,760
notion of a thread. So exokernel has a

24
00:01:29,760 --> 00:01:33,890
revoke mechanism for exactly this purpose of

25
00:01:33,890 --> 00:01:37,290
revoking resources that have been allocated to a

26
00:01:37,290 --> 00:01:39,970
library operating system. And the revoke call,

27
00:01:39,970 --> 00:01:41,740
which is an up call into the library

28
00:01:41,740 --> 00:01:44,240
operating system, is going to give this library

29
00:01:44,240 --> 00:01:48,620
operating system a repossession vector, saying these are the

30
00:01:48,620 --> 00:01:52,020
resources I'm taking away from you. For instance, it

31
00:01:52,020 --> 00:01:54,630
could say, you know, remember I gave you these

32
00:01:54,630 --> 00:01:56,920
page frames? Well, I'm going to reclaim those page

33
00:01:56,920 --> 00:02:01,230
frames. And when it gives those repossession vector to

34
00:02:01,230 --> 00:02:04,490
the library operating system, it is a responsibility of

35
00:02:04,490 --> 00:02:06,880
the library operating system to do what it needs

36
00:02:06,880 --> 00:02:09,070
to do in order to clean up. In

37
00:02:09,070 --> 00:02:13,870
other words, the library takes corrective action commensurate with

38
00:02:13,870 --> 00:02:17,030
the repossession vector that has been presented by exokernel

39
00:02:17,030 --> 00:02:21,730
to it. For example, if the exokernel tells this

40
00:02:21,730 --> 00:02:24,170
library that I'm going to take away page frame

41
00:02:24,170 --> 00:02:26,960
number 20 and page frame number 25 from you,

42
00:02:26,960 --> 00:02:29,150
then the library operating system will say, oh, in

43
00:02:29,150 --> 00:02:31,990
that case I have to stash away the contents

44
00:02:31,990 --> 00:02:34,840
of those page frames into the disk.

45
00:02:34,840 --> 00:02:37,260
So that's the corrective action that the library

46
00:02:37,260 --> 00:02:40,070
operating system will have to take when it

47
00:02:40,070 --> 00:02:43,870
is informed by exokernel that some hardware resources

48
00:02:43,870 --> 00:02:49,010
that have been given to it have been taken away by exokernel. To make the life

49
00:02:49,010 --> 00:02:53,740
of the library operating system easier, exokernel also

50
00:02:53,740 --> 00:02:57,600
allows a library to seed it with autosave

51
00:02:57,600 --> 00:03:02,371
options for resources that exokernel wants to

52
00:03:02,371 --> 00:03:06,260
revoke. So, in other words, if exokernel decides

53
00:03:06,260 --> 00:03:09,070
to revoke, let's say, some page frames

54
00:03:09,070 --> 00:03:11,470
from the library operating system, the library could

55
00:03:11,470 --> 00:03:13,330
have seeded the exokernel ahead of time.

56
00:03:13,330 --> 00:03:16,260
That, any time you want to take away these

57
00:03:16,260 --> 00:03:20,020
page frames, dump it into the disk.

58
00:03:20,020 --> 00:03:22,620
And that kind of seeding allows the exokernel

59
00:03:22,620 --> 00:03:25,160
to do the work on behalf of the library

60
00:03:25,160 --> 00:03:28,630
operating system. So that, at the point of revocation, the

61
00:03:28,630 --> 00:03:31,200
amount of work that the library has to do, in

62
00:03:31,200 --> 00:03:34,390
order to do corrective action for the repossession, is minimal.
