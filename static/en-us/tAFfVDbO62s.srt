1
00:00:00,250 --> 00:00:04,689
Now consider the relationship between
work, transfers, and execution time.

2
00:00:04,689 --> 00:00:09,040
Suppose the processor takes tau
time units to perform an operation.

3
00:00:09,040 --> 00:00:12,980
Thus, the time to perform just
the compute operations is tau times

4
00:00:12,980 --> 00:00:14,530
the work, W.

5
00:00:14,530 --> 00:00:19,850
Next, let alpha be the amortized time to
move one word of data between slow and

6
00:00:19,850 --> 00:00:21,310
fast memory.

7
00:00:21,310 --> 00:00:23,960
Alpha has units of time per word.

8
00:00:23,960 --> 00:00:28,680
Then the time to execute Q
transfers is alpha times L times Q.

9
00:00:28,680 --> 00:00:32,830
Now let's assume perfect overlap
between data transfer and compute.

10
00:00:32,830 --> 00:00:36,010
Then the minimum time to execute
the program would be the maximum

11
00:00:36,010 --> 00:00:39,380
of the time to compute, and
the time to move the data.

12
00:00:39,380 --> 00:00:41,940
Let's refactor this expression a little.

13
00:00:41,940 --> 00:00:46,350
This refactoring shows the execution
time relative to the ideal running time,

14
00:00:46,350 --> 00:00:48,630
which is just tau times W.

15
00:00:48,630 --> 00:00:52,070
It's ideal in the sense that it
assumes data movement is free.

16
00:00:52,070 --> 00:00:56,170
Now relative to this ideal computation
time, you need to pay a penalty.

17
00:00:56,170 --> 00:00:59,190
This communication or transfer
penalty is the price you pay for

18
00:00:59,190 --> 00:01:00,740
having to move the data.

19
00:01:00,740 --> 00:01:03,060
Now this penalty has some structure.

20
00:01:03,060 --> 00:01:06,310
Let's start with the denominator
of the second argument.

21
00:01:06,310 --> 00:01:10,050
Why it's nothing more than
the algorithms computational intensity.

22
00:01:10,050 --> 00:01:13,880
Recall that intensity has
units of operations per word.

23
00:01:13,880 --> 00:01:15,480
Now what about the numerator?

24
00:01:15,480 --> 00:01:19,940
The numerator is th time per word
divided by the time per operation.

25
00:01:19,940 --> 00:01:23,910
It's a ratio of parameters that
only depend on the machine.

26
00:01:23,910 --> 00:01:26,980
In the literature, it's sometimes
referred to as the machine's balance

27
00:01:26,980 --> 00:01:29,810
point, or just machine balance.

28
00:01:29,810 --> 00:01:33,820
And just like intensity,
it has units of operations per word.

29
00:01:33,820 --> 00:01:37,560
In other words, this ratio tells you
how many operations can be executing in

30
00:01:37,560 --> 00:01:40,450
the time that it takes
to move a word of data.

31
00:01:40,450 --> 00:01:42,510
Machine balance is kind of
a special parameters, so

32
00:01:42,510 --> 00:01:45,180
let's replace it with a symbol,
capital B.

33
00:01:45,180 --> 00:01:46,900
That's B as in buzz.

34
00:01:46,900 --> 00:01:49,570
Okay, so what we have now
is a general formula for

35
00:01:49,570 --> 00:01:53,460
the minimum possible execution time in
terms of the balance of the machine and

36
00:01:53,460 --> 00:01:55,660
the intensity of the algorithm.

37
00:01:55,660 --> 00:01:58,900
For completeness we could also
estimate the maximum time for

38
00:01:58,900 --> 00:02:00,880
computation in this model.

39
00:02:00,880 --> 00:02:03,610
It's basically the sum
rather than the max.

40
00:02:03,610 --> 00:02:06,600
That's because if there's no overlap,
you have to pay for computation and

41
00:02:06,600 --> 00:02:08,470
communication one after the other.

42
00:02:08,470 --> 00:02:12,020
Okay, so we have a formula to
estimate the minimum execution time.

43
00:02:12,020 --> 00:02:14,460
Sometimes, rather than
asking about execution time,

44
00:02:14,460 --> 00:02:17,370
we'll ask about a certain
measure of performance.

45
00:02:17,370 --> 00:02:19,830
I'll denote that measure by R.

46
00:02:19,830 --> 00:02:22,840
Its numerator is tao times W star.

47
00:02:22,840 --> 00:02:26,100
In other words,
the best time in the pure RAM model.

48
00:02:26,100 --> 00:02:28,150
So what does dividing by T do?

49
00:02:28,150 --> 00:02:30,030
Why?
It gives you the following formula.

50
00:02:30,030 --> 00:02:34,040
It says the best possible value of
the normalized performance is W star

51
00:02:34,040 --> 00:02:38,390
over W times the min of one and
intensity divided by balance.

52
00:02:38,390 --> 00:02:41,650
This measure of performance is
inversely proportional to time.

53
00:02:41,650 --> 00:02:43,910
Therefore higher values are better.

54
00:02:43,910 --> 00:02:47,270
Take a moment to ponder it as you'll
explore it in more depth momentarily.
