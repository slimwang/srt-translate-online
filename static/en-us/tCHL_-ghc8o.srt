1
00:00:00,210 --> 00:00:03,469
Now the NAT clearly violates the end-to-end principle,

2
00:00:03,469 --> 00:00:06,280
because machines behind the NAT are not globally

3
00:00:06,280 --> 00:00:09,020
addressable, or routable, and other hosts on the

4
00:00:09,020 --> 00:00:13,680
public Internet cannot initiate inbound connections to these devices

5
00:00:13,680 --> 00:00:15,311
behind the NAT. Now there are ways to

6
00:00:15,311 --> 00:00:17,901
get around this, they're various protocols. One is called

7
00:00:17,901 --> 00:00:21,593
STUN, or signalling and tunneling through UDP-enabled NAT

8
00:00:21,593 --> 00:00:25,534
devices. And in these types of protocols, the device

9
00:00:25,534 --> 00:00:29,670
sends an initial outbound packet somewhere, simply to

10
00:00:29,670 --> 00:00:32,222
create an entry in the NAT table and

11
00:00:32,222 --> 00:00:35,430
once that entry is created. We now have

12
00:00:35,430 --> 00:00:39,920
a globally routable address and port to which devices

13
00:00:39,920 --> 00:00:42,330
on a public Internet can send traffic. Now

14
00:00:42,330 --> 00:00:45,120
these devices somehow have to learn that public IP

15
00:00:45,120 --> 00:00:47,310
address and port that corresponds to that service

16
00:00:47,310 --> 00:00:50,660
and this might be done using DNS for example.

17
00:00:50,660 --> 00:00:53,865
It's also possible to statically configure, these tunnels

18
00:00:53,865 --> 00:00:56,800
or mappings on your NAT device at home.

19
00:00:56,800 --> 00:00:59,270
Needless to say, even with these types of

20
00:00:59,270 --> 00:01:04,550
hacks and workarounds for NAT, it's clear that network

21
00:01:04,550 --> 00:01:07,210
address translation is a violation of the end-to-end

22
00:01:07,210 --> 00:01:10,020
principle. Because by default two hosts on the

23
00:01:10,020 --> 00:01:12,710
Internet, one on the home network and one

24
00:01:12,710 --> 00:01:16,430
on the public Internet, cannot communicate directly by default.
