1
00:00:00,210 --> 00:00:03,940
As Magnus said, you'll now be adding the
functionality to create conferences to

2
00:00:03,940 --> 00:00:04,930
your application.

3
00:00:04,930 --> 00:00:08,490
We use a conference entity
class to represent conferences.

4
00:00:08,490 --> 00:00:11,600
Each conference entity will be
created with an ancestor, or parent,

5
00:00:11,600 --> 00:00:14,150
which is the profile entity
of the user who created it.

6
00:00:14,150 --> 00:00:17,450
Let's take a look at the code for
the conference entity class definition.

7
00:00:17,450 --> 00:00:20,950
As you can see, the class itself
does not have a parent property.

8
00:00:20,950 --> 00:00:23,970
Why do we want conference entities
to have their creator's profile

9
00:00:23,970 --> 00:00:24,850
as a parent?

10
00:00:24,850 --> 00:00:28,430
Because this makes it very easy to
quickly find all the conferences that

11
00:00:28,430 --> 00:00:30,610
a particular user has created.

12
00:00:30,610 --> 00:00:31,440
Using NDB,

13
00:00:31,440 --> 00:00:35,570
the way you create an entity with a
parent is that you use parent equals and

14
00:00:35,570 --> 00:00:39,410
then the parent entity key when
creating the key for the new entity.

15
00:00:39,410 --> 00:00:41,600
First you have to get the profile key,

16
00:00:41,600 --> 00:00:44,870
same as you did when working with the
profile creation and updating methods.

17
00:00:44,870 --> 00:00:47,280
Then you'll create the conference
key the same way, but

18
00:00:47,280 --> 00:00:49,100
also specifying the parent.

19
00:00:49,100 --> 00:00:51,300
Now, when you created
the profile entity,

20
00:00:51,300 --> 00:00:56,550
you specified that the user_id should
be used as the ID for the entity key.

21
00:00:56,550 --> 00:00:59,510
For conference entities we
still need a unique ID.

22
00:00:59,510 --> 00:01:02,840
We don't have anything that we can
use for this, unlike the profile.

23
00:01:02,840 --> 00:01:07,440
However, the ndb.model superclass gives
us the ability to create unique ID's for

24
00:01:07,440 --> 00:01:08,800
any entity class.

25
00:01:08,800 --> 00:01:12,130
The method for
doing that is called allocate_ids, and

26
00:01:12,130 --> 00:01:14,740
it returns a list of unique ids.

27
00:01:14,740 --> 00:01:18,300
So if we just want one we'll have
to access item zero of that list.

28
00:01:18,300 --> 00:01:22,390
We can then define a key based on
that unique id and the parent key.

29
00:01:22,390 --> 00:01:22,970
Okay, so

30
00:01:22,970 --> 00:01:26,210
you now have the conference key, but
when a user creates a conference they're

31
00:01:26,210 --> 00:01:29,670
going to specify a bunch of information
that we want to save in the data store.

32
00:01:29,670 --> 00:01:32,820
And some of that user input will
need to be processed a bit first.

33
00:01:32,820 --> 00:01:34,680
So let's take a look at
the conference class.

34
00:01:34,680 --> 00:01:38,540
Every conference has a name, which
is a required field, a description,

35
00:01:38,540 --> 00:01:41,780
the user ID of the organizer,
some set of topics,

36
00:01:41,780 --> 00:01:44,860
which is a repeated field because
a conference could be on several topics.

37
00:01:44,860 --> 00:01:47,850
It's going to be located in the city,
it's going to have a start date and

38
00:01:47,850 --> 00:01:48,650
an end date.

39
00:01:48,650 --> 00:01:51,300
For searching purposes,
it's also going to have a month.

40
00:01:51,300 --> 00:01:53,060
Are there any conferences in June?

41
00:01:53,060 --> 00:01:55,410
There's going to be
a number of max attendees.

42
00:01:55,410 --> 00:01:57,690
How many people could possibly
fit in this conference?

43
00:01:57,690 --> 00:01:59,640
And the number of
current seats available,

44
00:01:59,640 --> 00:02:02,430
which will change as people register for
the conference.

45
00:02:02,430 --> 00:02:05,150
Let's also take a look down
at the conference form class.

46
00:02:05,150 --> 00:02:08,460
This class defines the input parameters
to the create conference function,

47
00:02:08,460 --> 00:02:10,900
just like profile form defined
the input parameters for

48
00:02:10,900 --> 00:02:12,520
the function save profile.

49
00:02:12,520 --> 00:02:14,240
But the fields between
conference forum and

50
00:02:14,240 --> 00:02:16,700
conference are not exactly
one to one the same.

51
00:02:16,700 --> 00:02:17,730
So the code that handles

52
00:02:17,730 --> 00:02:20,300
conference requests will have
to translate between them.

53
00:02:20,300 --> 00:02:24,030
And since we're using the conference key
as part of the URL for our conference,

54
00:02:24,030 --> 00:02:27,730
this code will also have to translate
the key into a web safe text form,

55
00:02:27,730 --> 00:02:29,720
that doesn't have any
funny characters in it.

56
00:02:29,720 --> 00:02:32,390
Now it's your turn to add the
functionality to create conferences to

57
00:02:32,390 --> 00:02:33,520
your application.

58
00:02:33,520 --> 00:02:36,130
Since there's a lot to do,
we've provided you templates for

59
00:02:36,130 --> 00:02:37,560
the new functionality.

60
00:02:37,560 --> 00:02:42,420
To get ready, copy the code from
ToDo_1_conference.py into the API

61
00:02:42,420 --> 00:02:45,010
class in your conference.py file, and

62
00:02:45,010 --> 00:02:48,210
from ToDo_1_models.py
into your models.py file.

63
00:02:48,210 --> 00:02:52,550
You'll need to copy the conference form
and conference classes to models.py,

64
00:02:52,550 --> 00:02:57,210
and the copy conference_2 form and
create conference objects functions and

65
00:02:57,210 --> 00:03:00,970
the create conference endpoint
definition into conference.py.

66
00:03:00,970 --> 00:03:03,910
Once you've copied the contents of
the to do files into your project

67
00:03:03,910 --> 00:03:06,600
take a look at the Conference and
ConferenceForm classes.

68
00:03:06,600 --> 00:03:09,770
Specifically, does ConferenceForm have
properties that map to the following

69
00:03:09,770 --> 00:03:11,280
Conference properties?

70
00:03:11,280 --> 00:03:13,620
Name, topics, parent and month.

71
00:03:13,620 --> 00:03:15,220
Check off the ones that it does.
