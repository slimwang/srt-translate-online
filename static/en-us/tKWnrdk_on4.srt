1
00:00:00,000 --> 00:00:02,000
We've been talking about environments,

2
00:00:02,000 --> 00:00:04,000
and we've established that they need to do 2 different things:

3
00:00:04,000 --> 00:00:09,000
map variables to values and also point to the parent environment.

4
00:00:09,000 --> 00:00:13,000
So we're actually just going to represent environments as a tuple of the parent_pointer,

5
00:00:13,000 --> 00:00:19,000
or None if it's the global environment, and the dictionary, mapping variable names to values.

6
00:00:19,000 --> 00:00:21,000
That means that I can finally provide you with the definition

7
00:00:21,000 --> 00:00:25,000
of that environment lookup procedure we promised earlier.

8
00:00:25,000 --> 00:00:28,000
Remember that our procedure--check your pockets, check your hotel room,

9
00:00:28,000 --> 00:00:31,000
check your actual home. If that doesn't work, try to buy it on the Interwebs.

10
00:00:31,000 --> 00:00:33,000
Let's go see how this goes.

11
00:00:33,000 --> 00:00:36,000
We'll just look and see if this variable name is in our environment.

12
00:00:36,000 --> 00:00:39,000
But remember that our environment is actually a tuple of a parent in a dictionary,

13
00:00:39,000 --> 00:00:43,000
so we're going to have to select out the oneth element in order to check this out.

14
00:00:43,000 --> 00:00:47,000
If we have a binding for our variable name in the current environment,

15
00:00:47,000 --> 00:00:49,000
we just return that binding.

16
00:00:49,000 --> 00:00:53,000
We get out our dictionary, and we look up the value associated with vname in it.

17
00:00:53,000 --> 00:00:56,000
If we were the global environment and we didn't know the answer,

18
00:00:56,000 --> 00:01:00,000
then we'll just return None. We don't know what the deal is.

19
00:01:00,000 --> 00:01:03,000
We could try to do something else here like flag an error.

20
00:01:03,000 --> 00:01:05,000
For now let's just return some default value.

21
00:01:05,000 --> 00:01:09,000
But if we are not the global environment, if I don't have it in my pockets,

22
00:01:09,000 --> 00:01:11,000
I can check my hotel room and then my house,

23
00:01:11,000 --> 00:01:14,000
and I'll do that by getting my parent pointer out of position 0

24
00:01:14,000 --> 00:01:16,000
and calling myself recursively.

25
00:01:16,000 --> 00:01:19,000
And the astute among you may notice that I was too lazy

26
00:01:19,000 --> 00:01:23,000
to actually call the formal parameter var_name, so let's just leave it at vname

27
00:01:23,000 --> 00:01:25,000
for variable name.

28
00:01:25,000 --> 00:01:28,000
So that's our lookup procedure. Step 1: Do we have it?

29
00:01:28,000 --> 00:01:31,000
Step 2: Are we the global environment?

30
00:01:31,000 --> 00:01:34,000
Step 3: If we're not the global environment, ask our parents.

31
00:01:34,000 --> 00:01:38,000
Similarly, we now know how to update an environment,

32
00:01:38,000 --> 00:01:40,000
or we could work our way through it.

33
00:01:40,000 --> 00:01:42,000
If we already have a binding for this variable name,

34
00:01:42,000 --> 00:01:45,000
then we'll just change that binding.

35
00:01:45,000 --> 00:01:51,000
This is a dictionary, and here I just updated the value that corresponds to vname

36
00:01:51,000 --> 00:01:53,000
in that dictionary.

37
00:01:53,000 --> 00:01:56,000
Otherwise, if I'm not the global environment,

38
00:01:56,000 --> 00:01:59,000
I can ask my parents to store the value for me.

39
00:01:59,000 --> 00:02:03,000
If I am the global environment and I didn't define your variable,

40
00:02:03,000 --> 00:02:05,000
then this is problematic.

41
00:02:05,000 --> 00:02:07,000
We should have allocated space earlier.

42
00:02:07,000 --> 00:02:11,000
So here I'm going to actually define some environments in Python

43
00:02:11,000 --> 00:02:13,000
rather than drawing pretty pictures of them,

44
00:02:13,000 --> 00:02:18,000
and we're going to run through some practice problems to make sure we understand this.

45
00:02:18,000 --> 00:02:20,000
This will be fill in the blanks.

46
00:02:20,000 --> 00:02:23,000
I'm going to call environment lookup of "x" in the new environment.

47
00:02:23,000 --> 00:02:25,000
What's that going to return?

48
00:02:25,000 --> 00:02:28,000
So then after we look up "y" in the global environment, we make a change.

49
00:02:28,000 --> 00:02:30,000
We assign "x" to be 55 in the new environment,

50
00:02:30,000 --> 00:02:33,000
and then we print out "x" in the new environment and the global one.

51
00:02:33,000 --> 99:59:59,999
How do these things turn out?
