1
00:00:00,310 --> 00:00:02,969
I'm now going to start refactoring
this function based on

2
00:00:02,969 --> 00:00:04,980
the expectations we've identified.

3
00:00:04,980 --> 00:00:07,620
I've placed all the expectations
in the top right corner here and

4
00:00:07,620 --> 00:00:11,720
notice how I've placed a green check
mark next to the one we are passing and

5
00:00:11,720 --> 00:00:14,560
red Xs next to the ones
we currently are not.

6
00:00:14,560 --> 00:00:18,250
I can now safely refactor this function
because I have these tests here to

7
00:00:18,250 --> 00:00:20,910
tell me if I inadvertently
break something.

8
00:00:20,910 --> 00:00:24,660
This process is called
the Red Green Refactor cycle.

9
00:00:24,660 --> 00:00:27,630
I'll add a check to make sure the
parameters being passed to the function

10
00:00:27,630 --> 00:00:29,360
are both of the type, number.

11
00:00:29,360 --> 00:00:31,890
If they aren't, I'll throw a new error.

12
00:00:31,890 --> 00:00:33,950
This changes the results of our test.

13
00:00:33,950 --> 00:00:36,730
This function now passes the first and
second test, and

14
00:00:36,730 --> 00:00:38,910
I just need to pass the third test.

15
00:00:38,910 --> 00:00:41,820
Now I'll be the first to admit,
this solution s pretty naive.

16
00:00:41,820 --> 00:00:44,410
It only applies to a very
small set of use cases.

17
00:00:44,410 --> 00:00:45,630
But that's okay.

18
00:00:45,630 --> 00:00:48,920
Writing a perfect add function is
not the point of this exercise.

19
00:00:48,920 --> 00:00:52,030
I just want to be confident I
can safely refactor my function,

20
00:00:52,030 --> 00:00:55,420
without breaking anything, and
that's exactly what we've done here.

21
00:00:55,420 --> 00:00:58,380
If I check my test again,
I'll see that they're all green.

22
00:00:58,380 --> 00:01:00,480
So assuming my tests are comprehensive,

23
00:01:00,480 --> 00:01:03,880
I can be confident that this function
behaves the same way as it did before,

24
00:01:03,880 --> 00:01:05,880
but without the errors
we initially discovered.
