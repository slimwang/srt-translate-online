1
00:00:00,000 --> 00:00:05,420
Congratulations! You have now learned a lot about solving NP complete problems in practice.

2
00:00:05,420 --> 00:00:10,170
You have learned about search tree optimizations, you have learned about pre-processing,

3
00:00:10,170 --> 00:00:15,600
and you have learned about other techniques such as fixed parameter tractability, and this is huge.

4
00:00:15,600 --> 00:00:19,800
Now, of course, in this unit, I could only teach you the very basic techniques that I use.

5
00:00:19,800 --> 00:00:25,280
So you might be wondering, what is the state of the art for solving NP-complete problems in practice?

6
00:00:25,280 --> 00:00:28,290
I would like to give you a few examples and numbers.

7
00:00:28,290 --> 00:00:33,240
For vertex cover on practically relevant inputs, you can sometimes find the vertex cover

8
00:00:33,240 --> 00:00:39,320
progress with over 10,000 vertices for independent set and clique.

9
00:00:39,320 --> 00:00:45,510
Independent sets and cliques have been calculated for many graphs with over 1000 vertices

10
00:00:45,510 --> 00:00:48,340
and traveling salesman which is very close to shortest tour

11
00:00:48,340 --> 00:00:51,570
and actually sometimes people also solve shortest tour, so a traveling salesman,

12
00:00:51,570 --> 00:00:54,860
you really have to be specific what kind of problem your are talking about.

13
00:00:54,860 --> 00:01:01,640
But there's one example where somebody solved an instance with â‰¥85,000 vertices.

14
00:01:01,640 --> 00:01:05,170
Think about what this means for the four computer scientists

15
00:01:05,170 --> 00:01:11,110
that we met throughout this course so far as started out with not being able to solve vertex cover for

16
00:01:11,110 --> 00:01:15,730
a graph with 10 or 20 vertices and then she learned about NP completeness.

17
00:01:15,730 --> 00:01:21,230
Her situation was actually quite dire, but then we showed her that there's search tree optimization

18
00:01:21,230 --> 00:01:24,820
and pre-processing and if those techniques are applied in the right way,

19
00:01:24,820 --> 00:01:28,480
then, Alice can't certainly expect to be able to solve her problem

20
00:01:28,480 --> 00:01:32,580
if she is working with 500 or 1000 vertices, because the thing is this,

21
00:01:32,580 --> 00:01:35,430
the instances for vertex cover that come up in practice

22
00:01:35,430 --> 00:01:39,350
are actually much easier to solve than worse case instances.

23
00:01:39,350 --> 00:01:42,780
One example is this, you're practical instances went up to 10,000 vertices.

24
00:01:42,780 --> 00:01:45,640
I think Alice can be pretty happy. What about Bob and Carol?

25
00:01:45,640 --> 00:01:49,170
Bob and Carol, of course, they started out being as unhappy as Alice

26
00:01:49,170 --> 00:01:54,230
because they also had impractical algorithms and then they found out about NP completeness.

27
00:01:54,230 --> 00:01:57,590
Of course, they can also use search trees and pre-processing,

28
00:01:57,590 --> 00:02:01,450
but their problems turn out to be harder to solve than vertex cover in general.

29
00:02:01,450 --> 00:02:06,560
Even so, I think they should be a little bit happy because for the problems that they try to solve

30
00:02:06,560 --> 00:02:11,950
in Genetics and in Finance, I think being able to work with about 1000 vertices should be okay.

31
00:02:11,950 --> 00:02:15,800
And again, we have to assume that, of course, they are working with inputs

32
00:02:15,800 --> 00:02:20,550
that are more easily solvable than worse case inputs but usually in practice, again, that's the case.

33
00:02:20,550 --> 00:02:23,550
What about Dave, who we met very late in this course?

34
00:02:23,550 --> 00:02:28,360
Well, when we met Dave, we showed a very complex proof that his problem was NP-complete,

35
00:02:28,360 --> 00:02:31,000
so he started out very unhappy as well, I would assume.

36
00:02:31,000 --> 00:02:34,100
And actually I think he stayed unhappy throughout this unit

37
00:02:34,100 --> 00:02:37,800
because whenever we came across shortest tour or traveling salesman,

38
00:02:37,800 --> 00:02:41,890
we always had to say, well, we're not really quite sure on how to do this.

39
00:02:41,890 --> 00:02:43,370
This is an open research problem.

40
00:02:43,370 --> 00:02:47,320
But then again, since this problem is so highly relevant in practice,

41
00:02:47,320 --> 00:02:51,730
there have been lots of developments regarding sophisticated algorithms

42
00:02:51,730 --> 00:02:55,510
that work very well in practice, so we can basically put it like this.

43
00:02:55,510 --> 00:02:59,090
From a theoretical perspective, Dave has to be very very unhappy,

44
00:02:59,090 --> 00:03:03,000
but if he uses sophisticated algorithms, then actually Dave can be the happiest of all

45
00:03:03,000 --> 00:03:06,080
because the algorithms that have been developed for traveling salesman

46
00:03:06,080 --> 00:03:08,490
work extremely well in practice.

47
00:03:08,490 --> 00:03:11,180
And finally, of course, we should also say a little bit about SAT.

48
00:03:11,180 --> 00:03:15,880
For the satisfiability problem, there are annual competitions and these competitions, of course,

49
00:03:15,880 --> 00:03:19,540
are based on mostly on instances that occur in practice

50
00:03:19,540 --> 00:03:21,510
than on instances that are deliberately hard.

51
00:03:21,510 --> 00:03:26,210
And yet so, each year, usually instances are solved with over 1000 variables.

52
00:03:26,210 --> 00:03:29,280
Now SAT is a problem that behaves very differently.

53
00:03:29,280 --> 00:03:33,920
So there are some instances of SAT even with 10,000 or 100,000 variables

54
00:03:33,920 --> 00:03:38,080
that are very very easy to solve because pre-processing is very effective for these instances.

55
00:03:38,080 --> 00:03:41,660
And then there are other instances for SAT that just have a few 100 variables

56
00:03:41,660 --> 00:03:45,450
that are super super hard to solve, so there, you usually need to try

57
00:03:45,450 --> 00:03:48,100
a lot of different packages and techniques, but nevertheless,

58
00:03:48,100 --> 00:03:50,510
when you come across an instance of SAT

59
00:03:50,510 --> 00:03:54,340
and there are certain practical situations but this is the case, then you shouldn't despair.

60
00:03:54,340 --> 99:59:59,999
SAT, again, if you're working with real world instances, for SAT, it's usually worth a try to solve it.
