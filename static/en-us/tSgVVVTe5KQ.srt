1
00:00:00,000 --> 00:00:02,452
And the answer is log2 (n).

2
00:00:02,452 --> 00:00:06,309
Note that 2^ the number of steps equals the number of elements.

3
00:00:06,309 --> 00:00:10,730
We would say that the step complexity of this parallel algorithm is O(log n).

4
00:00:10,730 --> 00:00:15,566
So if we reduced 1024 elements, we would see that it would take 10 steps,

5
00:00:15,566 --> 00:00:18,741
compared to 1023 in the serial case.

6
00:00:18,741 --> 00:00:21,034
This is 2 orders of magnitude fewer steps.

7
00:00:21,034 --> 00:00:25,268
And now you're starting to get an idea of why parallel implementation might get significant speedups.

8
00:00:25,698 --> 00:00:29,449
However, note that it can only get these speedups if it has enough processors

9
00:00:29,449 --> 00:00:32,345
to handle all these operations at the same time.

10
00:00:32,345 --> 00:00:37,013
If we're adding 1024 elements in parallel, our 1st step requires performing

11
00:00:37,013 --> 00:00:39,716
512 additions at the same time.

12
00:00:39,716 --> 00:00:41,718
Now, a modern GPU can actually handle this.

13
00:00:41,718 --> 00:00:46,426
But if we're adding a million items in parallel, our math would tell us we could finish in 20 steps

14
00:00:46,426 --> 00:00:51,517
but would also tell us we'd need to perform 500,000 additions at the 1st step at the 1st time,

15
00:00:51,517 --> 00:00:55,266
which is not too likely given the desktop hardware we have at our disposal today.

16
00:00:55,266 --> 00:00:56,869
That's okay, though.

17
00:00:56,869 --> 00:01:00,612
Even if we're only keeping 500 processors doing additions throughout the computation

18
00:01:00,612 --> 00:01:03,435
rather than 500,000, that's still an enormous speedup

19
00:01:03,435 --> 00:01:06,548
over having only 1 processor doing additions.

20
00:01:06,548 --> 00:01:09,587
It's a good exercise to work out how many steps it takes to run this algorithm

21
00:01:09,587 --> 00:01:13,318
for an input of size n if you have only p processors.

22
00:01:13,318 --> 00:01:17,289
This is called Brent's Theorem, which the interested student will want to look up

23
00:01:17,289 --> 00:01:19,457
and perhaps discuss on the discussion forum.
