1
00:00:01,000 --> 00:00:03,890
Let's talk a bit more
about those references.

2
00:00:03,890 --> 00:00:06,740
So far you've created a cube in
the scene, and then drag and

3
00:00:06,740 --> 00:00:08,800
dropped it into a script reference.

4
00:00:08,800 --> 00:00:09,970
And that's fine.

5
00:00:09,970 --> 00:00:11,757
But what if you want to create and

6
00:00:11,757 --> 00:00:15,020
re-use elaborate objects
across multiple projects?

7
00:00:15,020 --> 00:00:18,620
Well, for that you should probably
use something called a prefab.

8
00:00:18,620 --> 00:00:19,700
Let's talk about prefabs.

9
00:00:21,270 --> 00:00:25,150
In Unity, prefabs allows you
to store a GameObject and

10
00:00:25,150 --> 00:00:29,940
all of it components and its settings
in a file on your hard disk.

11
00:00:30,970 --> 00:00:35,341
They're a great way to store and
reuse your GameObjects across scenes.

12
00:00:35,341 --> 00:00:39,750
You can think of prefabs as examples for
a GameObject.

13
00:00:39,750 --> 00:00:44,140
It's like a plan that Unity follows
to create certain GameObjects.

14
00:00:44,140 --> 00:00:45,420
Okay, let's make one real quick.

15
00:00:46,750 --> 00:00:50,842
Take your MyCube object and
scale it vertically a little bit.

16
00:00:50,842 --> 00:00:54,880
[BLANK_AUDIO]

17
00:00:54,880 --> 00:00:59,205
Okay, now drag and drop your MyCube
object into the project pane.

18
00:01:01,110 --> 00:01:04,272
There you go, you just created a prefab.

19
00:01:04,272 --> 00:01:06,360
Now, you'll notice it
has a little blue icon.

20
00:01:07,440 --> 00:01:10,130
That's what prefabs
look inside of Unity.

21
00:01:10,130 --> 00:01:11,950
It also shows you the model up here.

22
00:01:13,090 --> 00:01:15,520
This prefab is now an example for

23
00:01:15,520 --> 00:01:18,685
objects of this type that
you can create easily.

24
00:01:18,685 --> 00:01:21,298
Okay, go ahead and save your scene,
and then create a new one.

25
00:01:21,298 --> 00:01:24,230
Find your prefab in the project pane.

26
00:01:24,230 --> 00:01:26,470
And then drag and
drop it into the new scene.

27
00:01:27,670 --> 00:01:32,807
Cool, there's your object, in a brand
new scene, with all of its settings.

28
00:01:32,807 --> 00:01:37,610
Great, okay, let's go back to
the previous scene and user prefab.

29
00:01:37,610 --> 00:01:38,920
And we don't need to save this one.

30
00:01:40,930 --> 00:01:46,260
Locate the game object that has the
mini-object maker script attached to it.

31
00:01:46,260 --> 00:01:49,500
And this time,
drag the prefab into that slot.

32
00:01:51,240 --> 00:01:52,478
Okay, go ahead and press Play.

33
00:01:52,478 --> 00:01:56,350
And, it worked.

34
00:01:56,350 --> 00:01:59,680
It worked because,
a game object reference accepts both

35
00:01:59,680 --> 00:02:01,910
objects from the hierarchy and
the project pane.

36
00:02:03,190 --> 00:02:04,640
There they all are.

37
00:02:04,640 --> 00:02:06,260
So why is that important?

38
00:02:06,260 --> 00:02:10,680
Because most assets you get from
the Unity assets store will be prefabs.

39
00:02:10,680 --> 00:02:13,370
Okay, let's try another prefab now.

40
00:02:13,370 --> 00:02:17,264
Look in the text notes below for
a download link for some Unity assets.

41
00:02:17,264 --> 00:02:20,623
Once you've got them,
go ahead and install them.

42
00:02:20,623 --> 00:02:25,550
Okay, once everything's installed, go
and search for a prefab called seagull.

43
00:02:26,870 --> 00:02:30,687
Once you've found it, drag and
drop it into the object to create slide.

44
00:02:33,270 --> 00:02:33,860
Then press play.

45
00:02:36,080 --> 00:02:39,940
Wow, you just created 1,000 seagulls.

46
00:02:39,940 --> 00:02:42,510
That's a ton of birds.

47
00:02:42,510 --> 00:02:43,900
Alfred Hitchcock would be proud.
