1
00:00:00,360 --> 00:00:04,810
Recall that a Turing machine recognizes
a language if it accepts every string in

2
00:00:04,810 --> 00:00:09,010
the language and does not accept
any string not in the language,

3
00:00:09,010 --> 00:00:11,180
it could either reject or loop.

4
00:00:11,180 --> 00:00:15,275
This Turing machine here recognized the
language of binary strings containing

5
00:00:15,275 --> 00:00:19,560
one, but it looped on those
that don't contain a one.

6
00:00:19,560 --> 00:00:24,010
In order to decide the language,
the Turing machine must not only accept

7
00:00:24,010 --> 00:00:29,010
every string in the language, but it has
to reject every one not in the language.

8
00:00:29,010 --> 00:00:32,570
This machine achieves that goal for
the same language

9
00:00:32,570 --> 00:00:37,630
by explicitly rejecting the input when
we reached the end of the string.

10
00:00:37,630 --> 00:00:40,580
Ultimately, however, we're not
interested in whether a particular

11
00:00:40,580 --> 00:00:44,530
Turing machine recognizes or decides
a language, rather we're interested in

12
00:00:44,530 --> 00:00:49,440
whether there is a Turing machine that
can recognize or decide the language.

13
00:00:49,440 --> 00:00:53,866
Therefore, we say that a language is
recognizable if there is a Turing

14
00:00:53,866 --> 00:00:55,748
machine that recognizes it.

15
00:00:55,748 --> 00:00:58,014
And we say that a language is decidable,

16
00:00:58,014 --> 00:01:00,554
if there is a Turing
machine that decides it.

17
00:01:00,554 --> 00:01:04,154
Now looking at this someone
might object shouldnâ€™t we say,

18
00:01:04,154 --> 00:01:08,260
recognizable by a Turing machine and
decidable by a Turing machine.

19
00:01:09,410 --> 00:01:13,414
Well, of course, we could and
the statements would still be true, but

20
00:01:13,414 --> 00:01:14,095
we don't.

21
00:01:14,095 --> 00:01:18,167
And the reason we don't is that we
strongly believe that if anything can do

22
00:01:18,167 --> 00:01:19,690
it, a Turing machine can.

23
00:01:19,690 --> 00:01:21,769
That's the Church turn thesis.

24
00:01:21,769 --> 00:01:26,032
So in some absolute sense, we believe
that a language is only recognizable by

25
00:01:26,032 --> 00:01:29,400
anything if a Turing
machine can recognize it.

26
00:01:29,400 --> 00:01:32,340
And a language is only
decidable by anything,

27
00:01:32,340 --> 00:01:37,020
if a Turing machine can decide it and
we use terms that reflect this belief.

28
00:01:37,020 --> 00:01:41,330
Now, other terms are sometimes used
instead of recognizable and decidable.

29
00:01:41,330 --> 00:01:44,310
Some say that Turing
machines compute languages.

30
00:01:44,310 --> 00:01:48,350
So to go along with that,
they say that languages are computable

31
00:01:48,350 --> 00:01:50,340
if there's a Turing machine
that computes them.

32
00:01:51,700 --> 00:01:55,580
Another equivalent term for
decidable is recursive.

33
00:01:55,580 --> 00:02:00,190
Mathematicians often prefer this
word and those that use that term

34
00:02:00,190 --> 00:02:03,860
will refer to recognizable languages
as recursively innumerable.

35
00:02:04,870 --> 00:02:08,090
Some also call these languages
Turning acceptable or

36
00:02:08,090 --> 00:02:10,490
semi or partially decidable.

37
00:02:10,490 --> 00:02:14,060
We should also make clear the
relationship between these two terms.

38
00:02:14,060 --> 00:02:18,050
If a language is decidable,
then it's also recognizable.

39
00:02:18,050 --> 00:02:20,350
The same Turing machine works for both.

40
00:02:20,350 --> 00:02:24,720
It feels like it should also be true
that if a language is recognizable and

41
00:02:24,720 --> 00:02:28,650
it's compliment is also recognizable,
then the language is decidable.

42
00:02:29,680 --> 00:02:30,270
This is true,

43
00:02:30,270 --> 00:02:33,870
but there's a potential pitfall here
that we need to make sure to avoid.
