1
00:00:00,280 --> 00:00:04,320
The layout shifter pattern is probably
the most responsive pattern with

2
00:00:04,320 --> 00:00:07,870
multiple break points across several
different screen widths, but

3
00:00:07,870 --> 00:00:12,130
the key to this layout is the way
that content moves about instead of

4
00:00:12,130 --> 00:00:15,310
reflowing and
dropping below other columns.

5
00:00:15,310 --> 00:00:20,060
Flex box really shines here, because
we can use the order CSS attribute.

6
00:00:20,060 --> 00:00:21,010
Amazing.

7
00:00:21,010 --> 00:00:21,580
Because so

8
00:00:21,580 --> 00:00:26,600
much can change in each layout, it does
require a bit more planning to maintain.

9
00:00:26,600 --> 00:00:29,610
I'll go for
something a bit more complex this time.

10
00:00:29,610 --> 00:00:33,640
In order to get the layout I want,
I've wrapped the light blue div, and

11
00:00:33,640 --> 00:00:36,690
the green div inside container two.

12
00:00:36,690 --> 00:00:40,670
I've made one small change to the
container class from the last example.

13
00:00:40,670 --> 00:00:42,650
And I've set it's width to 100%,

14
00:00:42,650 --> 00:00:46,580
so that the element inside
takes up the full width.

15
00:00:46,580 --> 00:00:48,420
When no break point has been hit,

16
00:00:48,420 --> 00:00:53,130
only the default styles are applied
making each element 100% width.

17
00:00:53,130 --> 00:00:54,888
Stacked on top of the other.

18
00:00:54,888 --> 00:00:59,991
When the first media query is hit
at 500 pixels, the break point

19
00:00:59,991 --> 00:01:05,289
changes the dark blue and
the container, each to be width of 50%.

20
00:01:05,289 --> 00:01:10,350
The red div remains at 100%,
because we haven't changed it.

21
00:01:10,350 --> 00:01:13,410
At 600 pixels things
start to get really fun.

22
00:01:13,410 --> 00:01:18,480
To get everything to fit, I need to
change the width on container2 to 50%

23
00:01:18,480 --> 00:01:24,340
and the width on dark blue and
red to 25% each.

24
00:01:24,340 --> 00:01:29,310
Next, to change the order, I need to
specify an order for each element.

25
00:01:29,310 --> 00:01:33,190
Remember, the default order value for
an element is zero.

26
00:01:33,190 --> 00:01:38,760
If I set order to negative 1 on
the red div it'll appear first.

27
00:01:38,760 --> 00:01:42,040
To get the dark blue element,
to show up last,

28
00:01:42,040 --> 00:01:47,490
I need to set it's value to
anything greater than zero, so one.

29
00:01:47,490 --> 00:01:49,270
Let's take a look in the browser.

30
00:01:49,270 --> 00:01:51,120
It's all stacked to start.

31
00:01:51,120 --> 00:01:54,710
But as it gets wider, and
hits the first break point,

32
00:01:54,710 --> 00:01:57,510
the dark blue goes to
the left with light blue and

33
00:01:57,510 --> 00:02:01,860
green on the right,
until finally it switches up again.

34
00:02:01,860 --> 00:02:02,360
Nice!
