1
00:00:00,430 --> 00:00:03,350
As we concluded, a radical change was needed a

2
00:00:03,350 --> 00:00:07,320
brave new world. A completely new approach to building applications

3
00:00:07,320 --> 00:00:09,630
needed to be developed that could scale to meet

4
00:00:09,630 --> 00:00:13,060
the demands of the rapidly growing internet. Not a key

5
00:00:13,060 --> 00:00:15,640
step to building a scalable system is you need

6
00:00:15,640 --> 00:00:19,140
to decouple it from executing on a single computer. You

7
00:00:19,140 --> 00:00:22,600
design a scale out architecture as your application scales

8
00:00:22,600 --> 00:00:25,910
outside the scope of a single computer and this distributed

9
00:00:25,910 --> 00:00:28,670
architecture needs to be a socalled, share

10
00:00:28,670 --> 00:00:31,760
nothing architecture. Meaning, that it must not depend

11
00:00:31,760 --> 00:00:34,150
on any shared resources that can become the

12
00:00:34,150 --> 00:00:36,680
bottleneck, this way if your application needs a

13
00:00:36,680 --> 00:00:39,270
scale, you can just provide more computers to

14
00:00:39,270 --> 00:00:43,080
provide the additional capacity required. That means, you

15
00:00:43,080 --> 00:00:48,610
can run your application on. All the things.

16
00:00:48,610 --> 00:00:51,110
And to get even more flexibility the concept

17
00:00:51,110 --> 00:00:54,030
of virtual machines was born which enables you

18
00:00:54,030 --> 00:00:56,800
to decouple a physical machine from the application

19
00:00:56,800 --> 00:01:00,310
execution machine. This had great flexibility gain since

20
00:01:00,310 --> 00:01:03,220
the infrastructure turned virtual you would now run your

21
00:01:03,220 --> 00:01:06,540
scale out application on several virtual machines instead

22
00:01:06,540 --> 00:01:10,270
of physical computers. Problem solved, right? You can

23
00:01:10,270 --> 00:01:13,100
now scale indefinitely by adding these standard building

24
00:01:13,100 --> 00:01:16,600
blocks of performance that your application can utilize and

25
00:01:16,600 --> 00:01:18,700
you have decomposed your application from the

26
00:01:18,700 --> 00:01:22,580
specific execution machine, great. Now only one

27
00:01:22,580 --> 00:01:24,950
question remains, how do you design your

28
00:01:24,950 --> 00:01:27,330
application to be able to scale like this?
