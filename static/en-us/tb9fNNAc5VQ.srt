1
00:00:00,380 --> 00:00:02,469
So is there any hope of doing better?

2
00:00:02,469 --> 00:00:06,910
In fact, there's a big clue in the way
we've described the algorithms so far.

3
00:00:06,910 --> 00:00:09,860
Remember that the BFS
visits the graph in waves.

4
00:00:09,860 --> 00:00:14,420
Now this wavy nature of a BFS has
two really important implications.

5
00:00:14,420 --> 00:00:19,070
First, an upper bound on the span
shouldn't be the number of vertices.

6
00:00:19,070 --> 00:00:21,980
Instead, it ought to be
the number of waves.

7
00:00:21,980 --> 00:00:24,700
Lets give each wave,
which consists of all the vertices at

8
00:00:24,700 --> 00:00:27,130
the same distance from the source,
a special name.

9
00:00:27,130 --> 00:00:28,540
Call them levels.

10
00:00:28,540 --> 00:00:33,220
So here's a question for you, what is
an upper limit on the number of levels?

11
00:00:33,220 --> 00:00:35,960
One answer comes from
a particular property of a graph,

12
00:00:35,960 --> 00:00:37,390
called it's diameter.

13
00:00:37,390 --> 00:00:41,313
The diameter is basically the maximum
shortest distance between any pair of

14
00:00:41,313 --> 00:00:42,150
vertices.

15
00:00:42,150 --> 00:00:44,400
Now here's an important
point about diameter.

16
00:00:44,400 --> 00:00:48,480
It's a property of the whole graph,
so that makes it only an upper bound

17
00:00:48,480 --> 00:00:51,640
on the number of levels
from any starting vertex.

18
00:00:51,640 --> 00:00:56,060
For example, I claim that this graph
has a diameter of 5, and that's

19
00:00:56,060 --> 00:00:59,470
despite the fact that the shortest
distance from S to any vertex is 4.

20
00:00:59,470 --> 00:01:01,820
Can you see why the diameter is 5?

21
00:01:01,820 --> 00:01:04,360
I smell a quiz.

22
00:01:05,510 --> 00:01:09,273
Now the process of visiting in a graph,
level by level is sometimes called

23
00:01:09,273 --> 00:01:13,770
a level synchronous traversal, and
that leads us to the second big idea.

24
00:01:13,770 --> 00:01:17,880
If you perform a level synchronous BFS,
then it shouldn't matter in what order

25
00:01:17,880 --> 00:01:20,900
you visit the vertices
of any given level.

26
00:01:20,900 --> 00:01:25,490
So if I take level two for example,
the fact that I visit this node,

27
00:01:25,490 --> 00:01:28,180
before this node or
this node, before this node.

28
00:01:28,180 --> 00:01:29,570
Really shouldn't matter.

29
00:01:29,570 --> 00:01:32,030
After all, they get the same distance.

30
00:01:32,030 --> 00:01:34,160
Let's be a little bit more precise.

31
00:01:34,160 --> 00:01:37,210
Imagine running a BFS, and
stopping it at some level, call it L.

32
00:01:37,210 --> 00:01:41,320
Now let's look at any two
unvisited neighbors of the set.

33
00:01:41,320 --> 00:01:44,860
Now these both have to be a distance
of just one away from the set, so

34
00:01:44,860 --> 00:01:47,420
it doesn't matter which
one we see first.

35
00:01:47,420 --> 00:01:49,500
In face, we can even look
at them at the same time,

36
00:01:49,500 --> 00:01:51,200
because they'll both
have the same value.
