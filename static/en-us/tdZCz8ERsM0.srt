1
00:00:00,000 --> 00:00:03,000
If we want to make our program faster effectively,

2
00:00:03,000 --> 00:00:06,000
we'd better concentrate on the eval function,

3
00:00:06,000 --> 00:00:15,000
because that's taking up about 47 out of our 75 seconds or about 63% of our time.

4
00:00:15,000 --> 00:00:19,000
The problem is that eval is a built-in function.

5
00:00:19,000 --> 00:00:22,000
We can't go editing eval to try to make it faster,

6
00:00:22,000 --> 00:00:25,000
but if we can't touch eval itself,

7
00:00:25,000 --> 00:00:30,000
the only choices we have are we could make fewer calls to eval.

8
00:00:30,000 --> 00:00:33,000
We call it fewer times. We'll spend less time in it.

9
00:00:33,000 --> 00:00:37,000
Or we can make easier calls to eval.

10
00:00:37,000 --> 00:00:40,000
Pass it an argument that's easier for it to evaluate.

11
00:00:40,000 --> 00:00:43,000
Let's concentrate on easier first.

12
00:00:43,000 --> 00:00:47,000
Do you see a way to break up the problem of evaluating a formula

13
00:00:47,000 --> 00:00:53,000
into smaller pieces in such a way that we could make the resulting program, say,

14
00:00:53,000 --> 00:00:55,000
10 times faster.

15
00:00:55,000 --> 00:00:58,000
What do I mean by making it easier or breaking it up into pieces?

16
00:00:58,000 --> 00:01:07,000
We could do eval of ODD plus ODD and then do eval of EVEN

17
00:01:07,000 --> 00:01:13,000
and do those separately rather than do them all together in one equation.

18
00:01:13,000 --> 00:01:19,000
Of course, I'd probably substitute in the numbers here rather than eval the letters themselves.

19
00:01:19,000 --> 00:01:23,000
That might be one way of breaking it up into smaller pieces.

20
00:01:23,000 --> 00:01:30,000
Often this idea of divide and conquer is a good idea for program design.

21
00:01:30,000 --> 00:01:35,000
Do you think that that approach would work here to make the calls to eval

22
00:01:35,000 --> 00:01:41,000
easier so that we could cut down on this 47 second execution time.

23
00:01:41,000 --> 00:01:43,000
Yes or no?

24
00:01:43,000 --> 00:01:46,000
I guess this is an matter of opinion. You might have some ideas.

25
00:01:46,000 --> 00:01:49,000
I might have different ideas, so don't worry if you agree with me too much,

26
00:01:49,000 --> 99:59:59,999
but think about it and give me your answer.
