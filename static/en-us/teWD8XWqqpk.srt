1
00:00:00,740 --> 00:00:02,910
So now that we know the inputs and the outputs,

2
00:00:02,910 --> 00:00:05,990
the procedure almost writes itself. Especially since we already know the

3
00:00:05,990 --> 00:00:10,180
code that we wanted to execute before we defined the procedure.

4
00:00:10,180 --> 00:00:13,370
So I'm going to write the procedure, by modifying the code here.

5
00:00:15,380 --> 00:00:18,600
So first what we're going to do is make a little space.

6
00:00:18,600 --> 00:00:21,230
Erasing the code that's not part of the 4 lines that we

7
00:00:21,230 --> 00:00:24,350
want to turn in the procedure. So now I've, I haven't

8
00:00:24,350 --> 00:00:27,760
modified the code at all. What I have is, almost exactly what

9
00:00:27,760 --> 00:00:30,330
I need for the body of the procedure. This is what

10
00:00:30,330 --> 00:00:33,330
we want to do. What we need to do is modify that to

11
00:00:33,330 --> 00:00:36,780
get in the inputs, and turn it into a procedure. So, to

12
00:00:36,780 --> 00:00:40,760
make it a procedure, we need to use the def name syntax.

13
00:00:40,760 --> 00:00:45,000
So we're going to define the procedure. Get next target. So

14
00:00:45,000 --> 00:00:48,250
now we need our parameters, the parameters are the inputs for

15
00:00:48,250 --> 00:00:51,600
the procedures and we decided what the input should be.

16
00:00:51,600 --> 00:00:54,420
Is the web contents that's the string giving the contents to

17
00:00:54,420 --> 00:00:57,000
the webpage and that's what we had in the variable

18
00:00:57,000 --> 00:01:01,010
page. So we can call that page again here, that's what

19
00:01:01,010 --> 00:01:03,620
we are passing in as our input and now we have

20
00:01:03,620 --> 00:01:06,020
the body of the procedure. The code is exactly the same

21
00:01:06,020 --> 00:01:09,180
as the code we had before. But this time, instead of page

22
00:01:09,180 --> 00:01:12,860
being whatever it was here, page is whatever we pass in as

23
00:01:12,860 --> 00:01:15,570
the input to the procedure. And we can change the name of

24
00:01:15,570 --> 00:01:18,500
the page. It sort of makes sense to change that name. This

25
00:01:18,500 --> 00:01:21,110
code works no matter what we pass in. It doesn't have to

26
00:01:21,110 --> 00:01:24,500
be a webpage. Any string that we pass in, this code will

27
00:01:24,500 --> 00:01:27,230
find it. So it makes more sense to give it a slightly

28
00:01:27,230 --> 00:01:31,280
more generic name. We'll change the name to S. If we change

29
00:01:31,280 --> 00:01:35,160
the name of the parameter, well everywhere that we use page,

30
00:01:35,160 --> 00:01:37,530
now we don't have the value of page. What we have

31
00:01:37,530 --> 00:01:40,060
is the value of S, which is the name of the

32
00:01:40,060 --> 00:01:44,180
parameter. So we'll change all of those to S's as well. So

33
00:01:44,180 --> 00:01:46,550
we're almost done. There is one big thing we have left

34
00:01:46,550 --> 00:01:49,630
to do and that's how do we get the outputs. Right

35
00:01:49,630 --> 00:01:51,640
we said what we wanted the outputs to be is the

36
00:01:51,640 --> 00:01:56,500
URL and the value of end-quote. We need some way of getting

37
00:01:56,500 --> 00:01:58,660
those back and the way that you do that

38
00:01:58,660 --> 00:02:01,772
is to use return. Return's a special construct in

39
00:02:01,772 --> 00:02:05,490
python. So we have the keyword return, followed by

40
00:02:05,490 --> 00:02:07,340
a list of all the things that we want

41
00:02:07,340 --> 00:02:10,250
to return from the procedure. So what we return

42
00:02:10,250 --> 00:02:14,000
is a list of any number of expressions, seperated

43
00:02:14,000 --> 00:02:18,030
by commas. We can have zero return expressions, that

44
00:02:18,030 --> 00:02:21,510
would mean there's no output. And it actually is useful

45
00:02:21,510 --> 00:02:24,630
to have procedures with no output sometimes. That's not true if

46
00:02:24,630 --> 00:02:26,950
we just think of procedures as things that map inputs to

47
00:02:26,950 --> 00:02:30,270
outputs, but procedures can also do other things. They can do

48
00:02:30,270 --> 00:02:32,970
what we call side-effects, and what side-effects are, are things that we

49
00:02:32,970 --> 00:02:36,760
can see, but that aren't the outputs. And an example of

50
00:02:36,760 --> 00:02:41,170
a side-effect would be, well, if we printed something out, we would

51
00:02:41,170 --> 00:02:43,870
see that result happen. We'd see everything that happens when the

52
00:02:43,870 --> 00:02:47,840
code and procedure runs. But we wouldn't get it as an output.

53
00:02:47,840 --> 00:02:49,920
So, in this case, we do want to have outputs from get

54
00:02:49,920 --> 00:02:54,250
next target. We want to return results, so we know how to

55
00:02:54,250 --> 00:02:57,290
continue. And we decided what the output should be, are the

56
00:02:57,290 --> 00:03:00,880
value of the URL. So we want to find the string that's the

57
00:03:00,880 --> 00:03:04,640
next target. And the value of the end quote, so we

58
00:03:04,640 --> 00:03:07,800
know the position where it was found. So let's see if you

59
00:03:07,800 --> 00:03:10,390
can figure out how to finish the return statement. And your

60
00:03:10,390 --> 00:03:12,850
goal is to figure out the code that we need after the

61
00:03:12,850 --> 00:03:16,090
return, to finish this procedure.
