1
00:00:00,300 --> 00:00:02,260
The answer is that
the first two are in NP.

2
00:00:03,400 --> 00:00:07,890
Graph connectivity can be solved in
polynomial time via depth-first search,

3
00:00:07,890 --> 00:00:09,830
no certificate necessary.

4
00:00:09,830 --> 00:00:12,600
This problem is in P, so
it's definitely in NP.

5
00:00:14,050 --> 00:00:16,760
Does a graph have a set of k
vertices with no edges between?

6
00:00:18,120 --> 00:00:19,690
Well, given the right k vertices,

7
00:00:19,690 --> 00:00:23,800
we can verify this by checking
order k squared edges in the graph.

8
00:00:23,800 --> 00:00:26,840
The certificate just needs
to give us this information.

9
00:00:26,840 --> 00:00:30,100
This last problem is not decidable,
as we've seen before, and

10
00:00:30,100 --> 00:00:31,750
hence it simply can't be in NP.

11
00:00:33,020 --> 00:00:37,120
Note that there are decidable
questions that are not in NP too.

12
00:00:37,120 --> 00:00:39,480
The easiest one to articulate,
given what we've covered so

13
00:00:39,480 --> 00:00:44,850
far, is deciding if a non-deterministic
Turing machine will halt after k steps,

14
00:00:44,850 --> 00:00:47,190
where k is encoded in binary.

15
00:00:47,190 --> 00:00:50,370
Unfortunately, the proof is
beyond the scope of this course.

16
00:00:50,370 --> 00:00:52,230
But it's worth knowing
that such problems exist.
