1
00:00:00,510 --> 00:00:04,460
Now that we understand the when of
adaptive design, namely the points at

2
00:00:04,460 --> 00:00:08,690
which our UI breaks, let's talk
about the what of adaptive design,

3
00:00:08,690 --> 00:00:11,860
specifically the techniques for
what to fix.

4
00:00:11,860 --> 00:00:16,160
Let's think back to what we wanted to
optimize our UIs for and what we can do.

5
00:00:16,160 --> 00:00:20,440
Filling the width of the screen can
become problematic on wider devices.

6
00:00:20,440 --> 00:00:23,910
This might not optimize for
balance and line length.

7
00:00:23,910 --> 00:00:26,150
There a couple of approaches
we can take to address this.

8
00:00:27,350 --> 00:00:30,320
Firstly, you can show additional
content on the screen.

9
00:00:30,320 --> 00:00:34,720
Instead of just filling the extra space,
we can instead show more content there.

10
00:00:34,720 --> 00:00:38,750
One way to do this is to reveal
previously hidden UI elements.

11
00:00:38,750 --> 00:00:43,615
For example, you might use an off-screen
navigation draw on small devices,

12
00:00:43,615 --> 00:00:47,180
but then pin it on-screen
on larger devices.

13
00:00:47,180 --> 00:00:51,150
We might also divide the available
space to show additional content.

14
00:00:51,150 --> 00:00:55,440
For example, showing a details
page on the same screen as a list

15
00:00:55,440 --> 00:00:57,870
rather than on a completely new screen.

16
00:00:57,870 --> 00:01:01,090
We also might reflow content
on different size screens to

17
00:01:01,090 --> 00:01:02,580
better arrange it.

18
00:01:02,580 --> 00:01:06,330
It this example, we're reflowing
a few things on the larger screen.

19
00:01:06,330 --> 00:01:09,130
Firstly, we switch from
a single column of content

20
00:01:09,130 --> 00:01:13,230
to multiple columns to make better
use of the available space.

21
00:01:13,230 --> 00:01:16,770
Secondly, we're not just
rearranging these content cards,

22
00:01:16,770 --> 00:01:21,450
we're also adjusting their layouts to
better fit with this new arrangement.

23
00:01:21,450 --> 00:01:25,190
Lastly, we tweak the app bar height
when the space is available for

24
00:01:25,190 --> 00:01:27,900
a more balanced, branded appearance.

25
00:01:27,900 --> 00:01:31,800
We can also use this reflow technique
in different orientations on the same

26
00:01:31,800 --> 00:01:33,020
device.

27
00:01:33,020 --> 00:01:34,240
In this example,

28
00:01:34,240 --> 00:01:40,160
a portrait layout places an image with
a set aspect ratio above some text.

29
00:01:40,160 --> 00:01:43,400
Now using the same layout
in landscape would likely

30
00:01:43,400 --> 00:01:48,360
fill the entire screen with an image and
push the text down below the fold.

31
00:01:48,360 --> 00:01:51,030
A better approach would be
to reflow the content so

32
00:01:51,030 --> 00:01:54,400
that it's horizontally stacked
instead of vertically,

33
00:01:54,400 --> 00:01:57,090
allowing you to see both the image and
the text together.

34
00:01:58,250 --> 00:02:02,350
Notice that we're also reflowing
the FAP to a more appropriate position

35
00:02:02,350 --> 00:02:02,920
for this layout.

36
00:02:03,970 --> 00:02:06,620
If you don't have more
content to show on-screen,

37
00:02:06,620 --> 00:02:09,729
then you can expand
the content up to a point, and

38
00:02:09,729 --> 00:02:14,040
then introduce margins to constrain
it from growing too wide.

39
00:02:14,040 --> 00:02:16,775
This works extremely well
with a paper metaphor, where

40
00:02:16,775 --> 00:02:21,725
you can use a paper surface which has a
maximum width to constrain the content.

41
00:02:21,725 --> 00:02:24,935
This technique can also work
great if you have rich imagery,

42
00:02:24,935 --> 00:02:28,645
such as a full bleed background,
which you can put behind the content and

43
00:02:28,645 --> 00:02:30,595
layer a service on top of it.

44
00:02:30,595 --> 00:02:33,065
This can create an extremely
immersive experience.
