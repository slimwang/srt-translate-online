1
00:00:00,370 --> 00:00:04,160
As we've seen, randomization can be
a very useful tool in the design and

2
00:00:04,160 --> 00:00:05,850
analysis of algorithms.

3
00:00:05,850 --> 00:00:09,230
And it turns out that this is true
in practical programming too,

4
00:00:09,230 --> 00:00:12,540
as many real world computer
programs rely on pseudorandomness

5
00:00:12,540 --> 00:00:14,800
to achieve their desired behavior.

6
00:00:14,800 --> 00:00:18,554
Nevertheless, it's an open question
whether randomization actually helps in

7
00:00:18,554 --> 00:00:21,753
the sense that the complexity classes
that we discussed earlier on in

8
00:00:21,753 --> 00:00:22,372
the course.

9
00:00:22,372 --> 00:00:25,828
It simply isn't known whether
there's a language that can

10
00:00:25,828 --> 00:00:30,045
be decided in polynomial time with
a two sided Monte Carlo algorithm that

11
00:00:30,045 --> 00:00:34,210
can't be decided with the normal
turning machine in polynomial time.

12
00:00:35,390 --> 00:00:38,020
This is known as the P
equals BPP question,

13
00:00:38,020 --> 00:00:40,870
and it's one of the major
open problems in complexity.
