1
00:00:00,025 --> 00:00:03,290
The answers are, for the first one, the dates are the same. We said that was

2
00:00:03,290 --> 00:00:07,240
okay. The requirement is that the second date cannot be before the first date.

3
00:00:07,240 --> 00:00:10,462
It's fine if they're the same. And then the answer should be 0, there are no

4
00:00:10,462 --> 00:00:14,756
dates, between those two. The second one, the second input is one day after the

5
00:00:14,756 --> 00:00:19,130
first input, so the output should be 1. For the third one, the second date is

6
00:00:19,130 --> 00:00:23,930
before the first date. The way we specify the problem. That's an invalid input.

7
00:00:23,930 --> 00:00:27,603
That means the output is undefined. And, our procedure could actually be

8
00:00:27,603 --> 00:00:31,575
correct, no matter what it does for this input. It'd be more useful if it gives

9
00:00:31,575 --> 00:00:35,314
a clear error message or maybe even more useful if it gives negative 1. But the

10
00:00:35,314 --> 00:00:38,303
way we specify the problem, we don't have to worry about what the output is

11
00:00:38,303 --> 00:00:42,204
there, because we're saying that these inputs are invalid. For the fourth one,

12
00:00:42,204 --> 00:00:47,687
the dates are a year apart, June 29 in 2013 is one year after June 29 in 2012.

13
00:00:47,687 --> 00:00:52,050
And so, there are 365 days in a non-leap year. And it's non-leap year because

14
00:00:52,050 --> 00:00:56,490
the February that's included is the February in 2013. For the final one, we're

15
00:00:56,490 --> 00:01:02,063
going from June 29, 2012 to June 31st, 2013. If you know your calendar well, you

16
00:01:02,063 --> 00:01:06,442
know there's actually no June 31st. The way we specified the problem, we said

17
00:01:06,442 --> 00:01:09,880
that both input dates have to be valid dates in the Gregorian calendar. That

18
00:01:09,880 --> 00:01:13,662
means that the output here is undefined. We'd like to get some kind of error

19
00:01:13,662 --> 00:01:16,643
output, but there's no requirement for our procedure.
