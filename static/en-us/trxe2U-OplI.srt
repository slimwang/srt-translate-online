1
00:00:00,000 --> 00:00:06,000
We're back in our editor, and we have our app that if the submission is not valid,

2
00:00:06,000 --> 00:00:10,000
we just rewrite the form out, and if it is valid, we say, Thanks!

3
00:00:10,000 --> 00:00:13,000
Now let's work on this invalid case. Let's make that a little bit more friendly.

4
00:00:13,000 --> 00:00:16,000
The first thing we want to do is tell the user there was an error.

5
00:00:16,000 --> 00:00:19,000
Let's figure out a way to do that.

6
00:00:19,000 --> 00:00:22,000
We're going to add a little section to our form here

7
00:00:22,000 --> 00:00:25,000
for a little placeholder for our error message.

8
00:00:25,000 --> 00:00:31,000
After our form, we're going to have a . You remember .

9
00:00:31,000 --> 00:00:35,000
It's just a block element with no special styling or anything like that.

10
00:00:35,000 --> 00:00:39,000
It'll just make a new line for us, and inside that, we're going to print our error message,

11
00:00:39,000 --> 00:00:43,000
and we're going to use the string substitution we just learned to print our error message.

12
00:00:43,000 --> 00:00:47,000
Now I'm going to do 1 more thing here as I'm going to make this text appear red.

13
00:00:47,000 --> 00:00:51,000
I'm going to add a little CSS--style, color, red.

14
00:00:51,000 --> 00:00:53,000
Now this is--like I said, we're not going to spend a whole lot of time in CSS,

15
00:00:53,000 --> 00:00:55,000
but this is 1 example of how'd we use it.

16
00:00:55,000 --> 00:00:58,000
This will make this text in this appear red.

17
00:00:58,000 --> 00:01:04,000
Okay, so we need to update our form a little bit or the way we use form to use this.

18
00:01:04,000 --> 00:01:09,000
Since we're going to be printing the form in a couple of places--here and here--

19
00:01:09,000 --> 00:01:12,000
let's generalize this into a function.

20
00:01:12,000 --> 00:01:16,000
So I'm going to add a new function called write_form,

21
00:01:16,000 --> 00:01:20,000
and this is going to take a parameter for the error message,

22
00:01:20,000 --> 00:01:24,000
and the default value of this parameter is going to be the empty string.

23
00:01:24,000 --> 00:01:29,000
All this is going to do is just going to self.response.out--it's going to write our form

24
00:01:29,000 --> 00:01:33,000
like we've been doing before, but we have to use a string substitution now

25
00:01:33,000 --> 00:01:36,000
because we've included a variable in our form.

26
00:01:36,000 --> 00:01:43,000
We have to address it here, and we're going to say, error equals error.

27
00:01:43,000 --> 00:01:51,000
So this is going to say the string error in our form will be equal to the value

28
00:01:51,000 --> 00:01:53,000
of this variable here, error.

29
00:01:53,000 --> 00:01:58,000
So this variable in the function is used down here,

30
00:01:58,000 --> 00:02:01,000
and it refers to the string substitution error here.

31
00:02:01,000 --> 00:02:05,000
Okay, now we need to use this function, and we have this new function write_form,

32
00:02:05,000 --> 00:02:08,000
so let's use it everywhere where we draw our form now.

33
00:02:08,000 --> 00:02:12,000
So we can use it here in our GET function,

34
00:02:12,000 --> 00:02:15,000
so now we can say self.write_form,

35
00:02:15,000 --> 00:02:20,000
and error takes a default parameter, so we don't need to specify it here.

36
00:02:20,000 --> 00:02:23,000
We can also use it down here in our POST function.

37
00:02:23,000 --> 00:02:29,000
We can say self.write_form, and now we can give it an error message.

38
00:02:29,000 --> 00:02:32,000
Okay, so what have we done?

39
00:02:32,000 --> 00:02:33,000
We've updated our form.

40
00:02:33,000 --> 00:02:38,000
We've made a new write_form function that should be a nice way of calling this,

41
00:02:38,000 --> 00:02:40,000
and we've used our write_form function here.

42
00:02:40,000 --> 00:02:43,000
Our GET, remember, just draws the empty form

43
00:02:43,000 --> 00:02:50,000
and our POST, down here, should draw the form with a new error message.

44
00:02:50,000 --> 00:02:52,000
So let's give this a try out in practice.

45
00:02:52,000 --> 00:02:54,000
There's one last thing we forgot to do.

46
00:02:54,000 --> 00:02:58,000
The first parameter to all of our functions inside a class should be self

47
00:02:58,000 --> 00:03:00,000
because otherwise this self here wouldn't be referring to anything.

48
00:03:00,000 --> 00:03:03,000
Okay, so we've got that in place. Let's try this out in our browser.

49
00:03:03,000 --> 00:03:04,000
Here we are in our browser.

50
00:03:04,000 --> 00:03:05,000
Let's give our form a shot.

51
00:03:05,000 --> 00:03:10,000
I'm going to type in some invalid data first because that's what we were just testing.

52
00:03:10,000 --> 00:03:14,000
So invalid everything, and we submit this form.

53
00:03:14,000 --> 00:03:18,000
Aha! Now we have our error message, and it appeared red like we wanted it to.

54
00:03:18,000 --> 00:03:19,000
Really cool!

55
00:03:19,000 --> 00:03:23,000
So now the user has an opportunity to submit the form again in a valid way.

56
00:03:23,000 --> 00:03:26,000
Okay, so we're going to fill out this form with correct data,

57
00:03:26,000 --> 00:03:31,000
and when we submit it now, we still see our success message. Cool!

58
00:03:31,000 --> 00:03:33,000
Alright, so we're making progress.

59
00:03:33,000 --> 00:03:36,000
One thing that would be nice is if when we entered bad data--

60
00:03:36,000 --> 00:03:39,000
when we entered an invalid form--and we submit this,

61
00:03:39,000 --> 00:03:44,000
it would be nice if it left our values in here for us, so we don't have to enter everything

62
00:03:44,000 --> 00:03:46,000
over and over again, especially the ones that are already valid.

63
00:03:46,000 --> 00:03:50,000
Let's make that work.
