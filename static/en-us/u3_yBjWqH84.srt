1
00:00:00,600 --> 00:00:03,040
So focusing on details first is a really common

2
00:00:03,040 --> 00:00:05,720
problem in design and in development because when you do

3
00:00:05,720 --> 00:00:09,495
this you can really only optimize locally. So what's a

4
00:00:09,495 --> 00:00:13,700
good solution for this problem? Well in design we have

5
00:00:13,700 --> 00:00:17,880
a technique it's called wireframing or low res wireframing. It

6
00:00:17,880 --> 00:00:20,110
helps us really focus on the UX first and the

7
00:00:20,110 --> 00:00:23,266
big picture. Without getting caught in the UI details too

8
00:00:23,266 --> 00:00:26,060
soon. I know in development, they do something very similar?

9
00:00:26,060 --> 00:00:26,482
>> Yeah, I know.

10
00:00:26,482 --> 00:00:29,550
>> In development there's a really easy trap to fall into,

11
00:00:29,550 --> 00:00:32,479
is when you start coding, you you just want to create functions.

12
00:00:32,479 --> 00:00:33,470
>> And you don't want to think about

13
00:00:33,470 --> 00:00:36,040
abstraction and you don't want to think about encapsulation.

14
00:00:36,040 --> 00:00:39,160
>> So as a Java developer maybe you make the static class and you

15
00:00:39,160 --> 00:00:40,230
have a lot of methods in it

16
00:00:40,230 --> 00:00:42,960
and you forget about interfaces and classes altogether.

17
00:00:42,960 --> 00:00:45,520
>> That's again an example of in development,

18
00:00:45,520 --> 00:00:47,780
where when you focus on the details kind

19
00:00:47,780 --> 00:00:49,230
of bad things happen. So it's kind of

20
00:00:49,230 --> 00:00:51,230
always a good idea in development and design

21
00:00:51,230 --> 00:00:54,000
to think about the big picture first. So the sign in and

22
00:00:54,000 --> 00:00:56,880
the check out example we just gave you, imagine that is part

23
00:00:56,880 --> 00:01:01,190
of an experience of a cookie buying application. So here's how you

24
00:01:01,190 --> 00:01:04,599
really get started, imagine there's a task that your user wants to

25
00:01:04,599 --> 00:01:07,930
complete. So for this example, it's I'm hungry for cookies I want to

26
00:01:07,930 --> 00:01:11,060
get some and eat the cookies, basically. So then you think about

27
00:01:11,060 --> 00:01:14,080
what steps does your user need to go through to complete this

28
00:01:14,080 --> 00:01:17,310
task? So this is an easy example cause we only have one task.

29
00:01:17,310 --> 00:01:21,350
So the steps would be, sign in decide which cookie you

30
00:01:21,350 --> 00:01:25,550
want, pay for your cookies and then eat the cookies. So when

31
00:01:25,550 --> 00:01:27,790
we write out each of these steps at a high level like

32
00:01:27,790 --> 00:01:31,640
this, each of these steps is kind of like a Java interface.

33
00:01:31,640 --> 00:01:34,170
>> Exactly when you think about a Java interface, it's

34
00:01:34,170 --> 00:01:36,310
something that doesn't have any implementation, so you're not really

35
00:01:36,310 --> 00:01:38,720
thinking about the low level details but you're thinking about

36
00:01:38,720 --> 00:01:41,730
the contract that interface has with other interfaces and classes.

37
00:01:41,730 --> 00:01:42,510
>> Which in this case

38
00:01:42,510 --> 00:01:46,110
if you look at the steps, it's how these steps connect with each other.

39
00:01:46,110 --> 00:01:49,680
>> So instead of focusing just on one step and nothing else,

40
00:01:49,680 --> 00:01:53,330
you're really thinking about the big picture. Exactly, so now that we're

41
00:01:53,330 --> 00:01:57,470
thinking about the sign in experience as part of our overall flow

42
00:01:57,470 --> 00:02:00,960
in order to buy cookies, how do you think we should start?

43
00:02:02,460 --> 00:02:05,350
>> Do we even need a sign in experience? You know actually, we

44
00:02:05,350 --> 00:02:07,920
might not actually need a Sign In experience. We could have an anonymous

45
00:02:07,920 --> 00:02:10,788
experience because what if I just want to install the

46
00:02:10,788 --> 00:02:13,610
app and just get cookies. And maybe after I've used the

47
00:02:13,610 --> 00:02:15,650
application or maybe even gotten some cookies for the first

48
00:02:15,650 --> 00:02:18,560
time, I might think, okay maybe I'll use this application again.

49
00:02:18,560 --> 00:02:20,610
>> That's a good point but actually the way I would use

50
00:02:20,610 --> 00:02:23,930
this application is that I actually do want to sign in because

51
00:02:23,930 --> 00:02:26,820
I want to see my order history any my payment history. And

52
00:02:26,820 --> 00:02:30,480
actually I want to place orders that I've already placed before. Okay.

53
00:02:30,480 --> 00:02:33,100
>> So for me, like for someone like me, if I was a user, I would actually

54
00:02:33,100 --> 00:02:34,710
want the sign in experience sooner rather than

55
00:02:34,710 --> 00:02:36,080
later. So we could actually give the user

56
00:02:36,080 --> 00:02:38,270
an option of just getting straight into the

57
00:02:38,270 --> 00:02:40,570
app and buying cookies and just skipping sign in.

58
00:02:40,570 --> 00:02:42,120
>> Right. Or for users that are more

59
00:02:42,120 --> 00:02:43,810
like you, we could let them sign in initially.

60
00:02:43,810 --> 00:02:45,630
>> Yeah that's true, so actually what we could do is, instead

61
00:02:45,630 --> 00:02:49,540
of having this sign in happen up front maybe we can actually.

62
00:02:49,540 --> 00:02:53,440
>> Allow them to flow through this application without signing in but when they

63
00:02:53,440 --> 00:02:57,670
actually need to then block them with the sign in. Just before check out.

64
00:02:57,670 --> 00:02:58,150
>> I like that,

65
00:02:58,150 --> 00:03:00,730
that would actually end up in a much nicer flow. Yeah.

66
00:03:01,750 --> 00:03:03,810
>> This is great I hadn't even thought about

67
00:03:03,810 --> 00:03:05,310
it but now that if we actually move the

68
00:03:05,310 --> 00:03:07,530
sign in to this step it actually ends up

69
00:03:07,530 --> 00:03:09,900
in a much better application. I agree, I think

70
00:03:09,900 --> 00:03:12,600
that using low res wire framing really helped us

71
00:03:12,600 --> 00:03:14,500
elevate the whole discussion. We could look at the

72
00:03:14,500 --> 00:03:16,870
sign in experience and really see how it made

73
00:03:16,870 --> 00:03:20,380
the most sense to put in the application over all.

74
00:03:20,380 --> 00:03:20,990
>> Exactly.

75
00:03:20,990 --> 00:03:23,780
>> Which again it results in a much better application

76
00:03:23,780 --> 00:03:24,520
for the end user. Yep.

77
00:03:24,520 --> 00:03:26,180
>> So, we haven't really changed anything.

78
00:03:26,180 --> 00:03:29,670
>> We've just thought about it at a high level and optimized how they

79
00:03:29,670 --> 00:03:32,190
link up just like good interfaces should

80
00:03:32,190 --> 00:03:34,150
and we can worry about the implementation later.

81
00:03:34,150 --> 00:03:37,710
>> I think, this deserves a fist bump. Low res framing wire for the win.

82
00:03:37,710 --> 00:03:38,210
>> Boom.
