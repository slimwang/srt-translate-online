1
00:00:00,000 --> 00:00:05,000
We won't talk in much detail about modern symmetric ciphers in this course.

2
00:00:05,000 --> 00:00:07,000
There are a couple reasons for this.

3
00:00:07,000 --> 00:00:10,000
One is that I want to get on to uses of ciphers,

4
00:00:10,000 --> 00:00:13,000
which I think is more important and more interesting for most people.

5
00:00:13,000 --> 00:00:16,000
Very few people today need to implement a cipher.

6
00:00:16,000 --> 00:00:21,000
You really should use library implementations of ciphers in any serious application.

7
00:00:21,000 --> 00:00:25,000
It's certainly useful to understand more about what's going on beneath the scenes.

8
00:00:25,000 --> 00:00:28,000
But even few people should be designing new ciphers.

9
00:00:28,000 --> 00:00:31,000
You would have to have very unique requirements to think

10
00:00:31,000 --> 00:00:34,000
that you're better off designing a new cipher yourself than using

11
00:00:34,000 --> 00:00:38,000
a standard well-accepted carefully analyzed cipher.

12
00:00:38,000 --> 00:00:41,000
Most of the time we've used ciphers as black boxes

13
00:00:41,000 --> 00:00:47,000
that are taking in messages and keys and outputing ciphertext

14
00:00:47,000 --> 00:00:50,000
and assuming that they have the properties that we need.

15
00:00:50,000 --> 00:00:54,000
Certainly we've proven that no cipher really does.

16
00:00:54,000 --> 00:00:57,000
We've shown that the only way for a cipher to be perfect

17
00:00:57,000 --> 00:01:02,000
is if the key space is at least as big as the message space.

18
00:01:02,000 --> 00:01:05,000
That's impractical for any useful use.

19
00:01:05,000 --> 00:01:08,000
We can group modern ciphers into two types.

20
00:01:08,000 --> 00:01:12,000
There are stream ciphers and block ciphers.

21
00:01:12,000 --> 00:01:17,000
The different is that with a stream cipher we've got a stream of data,

22
00:01:17,000 --> 00:01:21,000
and our cipher can encrypt small chunks at a time.

23
00:01:21,000 --> 00:01:25,000
You can think of the data streaming through the cipher encrypting

24
00:01:25,000 --> 00:01:29,000
encrypting usually at the level of one byte at a time,

25
00:01:29,000 --> 00:01:32,000
whereas with the block cipher we think of our data in larger chunks,

26
00:01:32,000 --> 00:01:35,000
and the cipher encrypts a block at a time.

27
00:01:35,000 --> 00:01:44,000
Usually a block size is at least 64 bits and can be longer up to 128 or 256 bits.

28
00:01:44,000 --> 00:01:46,000
These are sort of really the same thing.

29
00:01:46,000 --> 00:01:49,000
The only difference is changing the block size.

30
00:01:49,000 --> 00:01:52,000
If the block size is small enough, it would become a stream cipher.

31
00:01:52,000 --> 00:01:57,000
If the block size is large enough, we can think of it as a block cipher.

32
00:01:57,000 --> 00:02:02,000
But there are enough differences in the way you build ciphers

33
00:02:02,000 --> 00:02:04,000
that different ciphers are designed for each purpose.

34
00:02:04,000 --> 00:02:09,000
The most important block cipher today is known as AES,

35
00:02:09,000 --> 00:02:12,000
and this stands for the Advanced Encryption Standard.

36
00:02:12,000 --> 00:02:17,000
AES is a block cipher. It works on blocks of 128 bits.

37
00:02:17,000 --> 00:02:23,000
AES is the result of the competition that was run by the United States

38
00:02:23,000 --> 00:02:29,000
National Institute of Standards in Technology, more commonly known as NIST.

39
00:02:29,000 --> 00:02:36,000
This competition was started in 1997 to find a cipher to replace DES,

40
00:02:36,000 --> 00:02:41,000
which was the Data Encryption Standard, which had been a standard for the previous 30 years.

41
00:02:41,000 --> 00:02:46,000
That contest ran from 1997. They had a very open process.

42
00:02:46,000 --> 00:02:52,000
This is very unlike the process that was used to select DES as the previous recommended cipher.

43
00:02:52,000 --> 00:02:56,000
This lead to 15 submissions for round 1.

44
00:02:56,000 --> 00:02:58,000
Some of these were actually completely broken.

45
00:02:58,000 --> 00:03:01,000
Others were rejected for other reasons.

46
00:03:01,000 --> 00:03:05,000
This was narrowed down to five finalists, none of which were seriously broken,

47
00:03:05,000 --> 00:03:08,000
and one winner, which was selected.

48
00:03:08,000 --> 00:03:15,000
The main criteria for selecting the winner of AES were the security of the ciphers,

49
00:03:15,000 --> 00:03:17,000
and this is really the hardest thing to measure.

50
00:03:17,000 --> 00:03:20,000
We've seen that other than the one-time pad

51
00:03:20,000 --> 00:03:24,000
provable security is not achievable for most ciphers

52
00:03:24,000 --> 00:03:28,000
and not achievable for any cipher that was a candidate for AES.

53
00:03:28,000 --> 00:03:32,000
The way this was measured was trying to estimate the security.

54
00:03:32,000 --> 00:03:36,000
The main metric for measuring security was looking at

55
00:03:36,000 --> 00:03:41,000
the actual number of rounds in the cipher and dividing it by the minimum number of rounds

56
00:03:41,000 --> 00:03:45,000
that were breakable in some sense.

57
00:03:45,000 --> 00:03:49,000
Breakable here is very much the academic of breakable.

58
00:03:49,000 --> 00:03:53,000
You didn't need to be able to extract a message or a key.

59
00:03:53,000 --> 00:03:57,000
Anything that showed you could reduce the search space even a little bit would be enough

60
00:03:57,000 --> 00:04:00,000
to show that it was breakable for that number of rounds.

61
00:04:00,000 --> 00:04:04,000
The other properties were easier to compare and measure, which were speed--

62
00:04:04,000 --> 00:04:09,000
implementing it both in hardware and in software--and simplicity.

63
00:04:09,000 --> 00:04:12,000
Simplicity is usually against security.

64
00:04:12,000 --> 00:04:15,000
To have higher security we want more confusion.

65
00:04:15,000 --> 00:04:19,000
We want to do more transformations to the data. That goes against simplicity.

66
00:04:19,000 --> 00:04:26,000
Simplicity aids the analysis to make it more clear whether the cipher is secure or not.

67
00:04:26,000 --> 00:04:32,000
The winner of the AES competition was a cipher known as Rijndael,

68
00:04:32,000 --> 00:04:35,000
which was developed by two Belgian cryptographers.

69
00:04:35,000 --> 00:04:38,000
The good thing about it winning AES is now we don't have to figure out how

70
00:04:38,000 --> 00:04:43,000
to pronounce it correctly in Belgian. It's now called AES.

71
00:04:43,000 --> 00:04:47,000
The best known current break against AES is very theoretical,

72
00:04:47,000 --> 00:04:56,000
so with 128-bit keys, that would be a brute-force attack that tries every possible key.

73
00:04:56,000 --> 00:05:00,000
It would require on average 2^127 attempts.

74
00:05:00,000 --> 00:05:04,000
You're expected within half the 128-bit keys.

75
00:05:04,000 --> 00:05:12,000
You've got 2^128 total keys. You expect to find a break after testing half of them

76
00:05:12,000 --> 00:05:16,000
So they expect it costs a brute-force attack 2^127.

77
00:05:16,000 --> 00:05:20,000
The best known attack removes less than 1 bit of security.

78
00:05:20,000 --> 00:05:23,000
That's the best known today.

79
00:05:23,000 --> 00:05:28,000
And 126 bits of security is well beyond what's practical to imagine implementing

80
00:05:28,000 --> 99:59:59,999
even with a huge amount of computing resources.
