1
00:00:01,034 --> 00:00:05,313
The correct answer is the second and fourth options.

2
00:00:05,313 --> 00:00:08,456
The first one is non-issue because the circuit identifiers

3
00:00:08,456 --> 00:00:11,137
are remapped to between each onion router and so there

4
00:00:11,137 --> 00:00:14,447
is no way for the beginning and ends onion routers to

5
00:00:14,447 --> 00:00:17,386
collude. The second statement is an issue. And Section

6
00:00:17,386 --> 00:00:21,656
7 of TOR, the second generation onion router paper, the

7
00:00:21,656 --> 00:00:25,165
authors discussed this issue in talking about end-to-end

8
00:00:25,165 --> 00:00:28,323
timing attacks and introducing timing into messages. The

9
00:00:28,323 --> 00:00:31,016
third item is not an issue. Different keys are used

10
00:00:31,016 --> 00:00:33,985
between each router. So there is no way for Melissa’s

11
00:00:33,985 --> 00:00:36,184
router to identify and associate a key with Alice.

12
00:00:36,184 --> 00:00:40,401
This fourth item is an issue. To see this, let’s take this

13
00:00:40,401 --> 00:00:43,147
example network between A and B and we’ve chosen a

14
00:00:43,147 --> 00:00:46,015
circuit in red. An attacker can try introducing congestion

15
00:00:46,015 --> 00:00:49,964
on each connection, for example, here and see if it

16
00:00:49,964 --> 00:00:52,989
causes any disruption on the flow of packets into B. In

17
00:00:52,989 --> 00:00:56,466
this case, it won't. And so the attackers learned this

18
00:00:56,466 --> 00:00:58,831
connection is not involved. You can track here and

19
00:00:58,831 --> 00:01:01,972
observe and he should see disruption of packets into B

20
00:01:01,972 --> 00:01:04,352
and the attackers learned that these two onion routers

21
00:01:04,352 --> 00:01:06,954
are on the circuit. You can continue on to do this on all

22
00:01:06,954 --> 00:01:10,000
the connections and learn which onion routers are involved.
