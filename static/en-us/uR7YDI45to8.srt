1
00:00:00,000 --> 00:00:02,170
Okay, let's look at these questions.

2
00:00:02,170 --> 00:00:07,040
So, the new algorithm on average, check fewer assignments than the original?

3
00:00:07,040 --> 00:00:12,530
This is actually true and to see this the area all you have to look at is

4
00:00:12,530 --> 00:00:16,630
the original has to check every possible assignment.

5
00:00:16,630 --> 00:00:21,960
If it doesn't, then it can't know that it's actually the lowest assignment

6
00:00:21,960 --> 00:00:26,200
whereas the new algorithm, as soon as it finds a vertex cover that works,

7
00:00:26,200 --> 00:00:31,040
since it starts from the bottom, it knows that that is the minimum vertex cover,

8
00:00:31,040 --> 00:00:34,210
so it knows that it can be done, so on the average,

9
00:00:34,210 --> 00:00:38,550
the new algorithm will actually check fewer assignments than the original.

10
00:00:38,550 --> 00:00:42,380
Now does the original algorithm sometimes look through fewer assignments?

11
00:00:42,380 --> 00:00:45,510
This is actually false and again, the same reasoning applies.

12
00:00:45,510 --> 00:00:49,720
The original algorithm has to look through every possible assignment,

13
00:00:49,720 --> 00:00:52,950
whereas the new algorithm sometimes doesn't.

14
00:00:52,950 --> 00:00:57,220
Now is the worst-case behavior of the new algorithm, in O-notation better than the original?

15
00:00:57,220 --> 00:01:02,820
This is actually false and to see this, you just have to realize that

16
00:01:02,820 --> 00:01:07,220
sometimes the new algorithm is still going to have to check through every possible assignment.

17
00:01:07,220 --> 00:01:10,560
Sometimes that's the best minimum vertex cover you can hope to find

18
00:01:10,560 --> 00:01:14,870
and since that's the worst case and it's the same as new algorithm,

19
00:01:14,870 --> 00:01:19,560
the worst case behavior in O-notation is also just as bad as the original.

20
00:01:19,560 --> 00:01:25,200
However, the best case behavior is actually better than the original algorithm.

21
00:01:25,200 --> 00:01:28,350
The new algorithm does better in the best case.

22
00:01:28,350 --> 00:01:31,830
The best case is that there happens to be a minimum vertex cover

23
00:01:31,830 --> 00:01:36,030
of only one vertex and it checks that first.

24
00:01:36,030 --> 00:01:43,470
And if it does, well then it's done whereas the best case of the original algorithm is still exponential

25
00:01:43,470 --> 00:01:49,630
because it has to check every possible assignment, so the best case behavior is far better.

26
00:01:49,630 --> 00:01:55,140
Now what about the average-case, how can we expect the new algorithm to behave on average?

27
00:01:55,140 --> 00:02:03,140
Well actually, the new algorithm isn't on average as synthetically better than the original algorithm.

28
00:02:03,140 --> 00:02:09,889
Again because it may have to check through just as many assignments as the original algorithm.

29
00:02:09,889 --> 00:02:14,240
Now, this last question is tricky. How about the average-case behavior in the algorithm?

30
00:02:14,240 --> 00:02:17,780
Compared to the original, is it better as synthetically?

31
00:02:17,780 --> 00:02:21,200
This is actually false and this might be a little hard to see

32
00:02:21,200 --> 00:02:25,420
but a good way of looking at it is to realize that on average,

33
00:02:25,420 --> 00:02:27,970
the new algorithm is still going to have to check through

34
00:02:27,970 --> 00:02:33,100
at least half of the possible vertex cover of all the possible assignments.

35
00:02:33,100 --> 00:02:37,880
And there are exponentially many different assignments to the graph.

36
00:02:37,880 --> 00:02:42,590
Well, half of the exponential number of assignments is still exponential,

37
00:02:42,590 --> 00:02:48,180
so on average, the behavior of the new algorithm is still exponential which is just as bad as the original.

38
00:02:48,180 --> 00:02:52,280
So, if you got that, great. If you didn't, don't worry.

39
00:02:52,280 --> 00:02:56,020
That's kind of a tricky question but hopefully I got you thinking.

40
00:02:56,020 --> 00:02:58,890
So if you have trouble with any of these, don't worry about it.

41
00:02:58,890 --> 00:03:02,250
Some of them were a little bit tricky but hopefully they got you thinking.

42
00:03:02,250 --> 00:03:07,380
Okay, that's it for this problem set. Hope to see you in the next unit.
