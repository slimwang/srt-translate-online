1
00:00:00,000 --> 00:00:04,340
Now, let's have a closer look at approximation and again, we're assuming that we're given

2
00:00:04,340 --> 00:00:08,760
an instance of knapsack, which means we have any objects and the sizes

3
00:00:08,760 --> 00:00:11,330
and the values of those objects are given to us

4
00:00:11,330 --> 00:00:14,850
and you know that the total sum of those values here we'll call V.

5
00:00:14,850 --> 00:00:19,400
So what we said now is that we wanted to scale down all of these values.

6
00:00:19,400 --> 00:00:25,240
So we'll scale this down to V₁/x and then round down and I'm going to write the rounding down

7
00:00:25,240 --> 00:00:29,800
like this, which is called a floor symbol--in case you haven't come across that.

8
00:00:29,800 --> 00:00:33,960
So I'm going to write down the same thing here, so this is going to become V₂/x,

9
00:00:33,960 --> 00:00:37,370
this here is going to become V₃/x, and so on.

10
00:00:37,370 --> 00:00:39,290
We're going to have Vn/x.

11
00:00:39,290 --> 00:00:42,090
So what rally do we use here for the x.

12
00:00:42,090 --> 00:00:46,770
Well, of course, that takes a bit of either playing around or pre-knowledge.

13
00:00:46,770 --> 00:00:55,010
In this case, we'll set this x here and we're going to set this to V/n*1-c.

14
00:00:55,010 --> 00:00:59,820
Now, you already know most of the constants here, so you know n--n is the number of objects

15
00:00:59,820 --> 00:01:02,790
and V is the sum of all values.

16
00:01:02,790 --> 00:01:07,170
Now, c is some value I'm not yet going to specify to you.

17
00:01:07,170 --> 00:01:10,940
We'll just say for now that c lies between 0 and 1.

18
00:01:10,940 --> 00:01:15,670
Now, using these values here, if you use the knapsack algorithm using the table,

19
00:01:15,670 --> 99:59:59,999
my question to you is what is the running time now of the knapsack algorithm using these values here.
