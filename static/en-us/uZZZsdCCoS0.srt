1
00:00:00,610 --> 00:00:05,340
The best way to become familiar with objects is to use lots of them. Here, we

2
00:00:05,340 --> 00:00:11,970
will look at strings and we will do it in three ways. With BlueJ objects, with

3
00:00:11,970 --> 00:00:18,370
Java code, and with another nifty tool called the code pad. In the code pad, as

4
00:00:18,370 --> 00:00:23,560
you'll see in a minute, I can type in code and have it executed right away

5
00:00:23,560 --> 00:00:27,650
without having to compile anything, or without having to click on the bubbles.

6
00:00:27,650 --> 00:00:32,110
The code pad is so nifty that it's a shame that it's hidden, to reveal it,

7
00:00:32,110 --> 00:00:38,670
select View and Show Code Pad. And then they make it so small, which is also a

8
00:00:38,670 --> 00:00:43,890
shame. Let's make it much, much bigger. In the code pad I can write regular

9
00:00:43,890 --> 00:00:49,580
Java statements. Here I declare a variable, here I have a print statement. And

10
00:00:49,580 --> 00:00:54,570
as soon as I hit the Enter key, it gets executed. You see a window pops up that

11
00:00:54,570 --> 00:01:00,040
has the output. But what's even better, any value that I type in here gets

12
00:01:00,040 --> 00:01:07,760
displayed right away. Let me show you. I type river.length, and the answer 11

13
00:01:07,760 --> 00:01:12,130
is displayed as soon as I hit the Enter key. It's important that you don't type

14
00:01:12,130 --> 00:01:18,350
a semi-colon because otherwise the code pad thinks that you have a statement

15
00:01:18,350 --> 00:01:24,130
like up here. No semicolon tells it that it should immediately print the value

16
00:01:25,150 --> 00:01:29,275
of the code that you write. Here I type the name of the variable without a

17
00:01:29,275 --> 00:01:35,790
semicolon, and it's printed the string Mississippi. And to the left, I have a

18
00:01:35,790 --> 00:01:40,750
little blob that I can drag into the workbench. Here it goes. I drop it into

19
00:01:40,750 --> 00:01:47,860
the workbench. Now I'm supposed to give it a name. I'll give it the same name,

20
00:01:47,860 --> 00:01:56,750
that the variable has river. And over here I have a familiar BlueJ blob. That I

21
00:01:56,750 --> 00:02:01,410
can manipulate in the usual way. I can right click on it, and now the string

22
00:02:01,410 --> 00:02:05,200
class has many, many methods, but I want to call length. When I select the

23
00:02:05,200 --> 00:02:11,170
length method I get the answer 11. So I can get the same answer in two

24
00:02:11,170 --> 00:02:17,000
different ways. Which one is better? It really depends. Sometimes I prefer to

25
00:02:17,000 --> 00:02:21,330
use the BlueJ bubbles for quick experimentation, because you can't really make

26
00:02:21,330 --> 00:02:28,040
any typos. Sometimes I prefer to use the code pad. Because it's just easier to

27
00:02:28,040 --> 00:02:33,490
type in, maybe to copy and paste in, what you want. Both of those are great for

28
00:02:33,490 --> 00:02:38,250
experimenting with classes and objects, and to just find out what happens when

29
00:02:38,250 --> 00:02:42,340
you call a particular method. You should try them both and see which one you

30
00:02:42,340 --> 00:02:46,440
like better. Of course for more hardcore programming. For writing a program

31
00:02:46,440 --> 00:02:53,240
that gets repeated over and over again, one wants to write an actual Java class

32
00:02:53,240 --> 00:03:00,320
with a main method. In that case, as you know, you right click on the empty

33
00:03:00,320 --> 00:03:12,710
space, make a new class, right click, open the editor. And start typing. Then

34
00:03:12,710 --> 00:03:17,880
you put your code into the main method. Here I wrote a couple of lines of code

35
00:03:17,880 --> 00:03:24,760
that let me compute the length of this string. You compile. You run. And you

36
00:03:24,760 --> 00:03:29,200
get the answer. That's more work at first, and it'll pay off when you write a

37
00:03:29,200 --> 00:03:34,350
longer program. For short explorations, the object bubbles and the code pad are

38
00:03:34,350 --> 00:03:39,670
hard to beat. So go ahead. Fire up BlueJ and work along with Sara to explore

39
00:03:39,670 --> 00:03:41,790
the string class and its methods.
