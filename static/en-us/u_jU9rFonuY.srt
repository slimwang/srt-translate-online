1
00:00:00,160 --> 00:00:02,310
It's been a while, since we last updated our Concept Map.

2
00:00:02,310 --> 00:00:05,260
And we discussed several new topics in the meantime.

3
00:00:05,260 --> 00:00:08,390
As a refresher, here's what the map looked like the last time we touched it.

4
00:00:08,390 --> 00:00:11,170
The map is getting pretty complicated at this point.

5
00:00:11,170 --> 00:00:13,080
And we're mostly just going to be talking about git and

6
00:00:13,080 --> 00:00:15,570
not so much the other concepts at this point.

7
00:00:15,570 --> 00:00:19,710
So, let's go ahead and zoom in and just look at this part of the graph.

8
00:00:19,710 --> 00:00:20,300
Okay. Great.

9
00:00:20,300 --> 00:00:21,890
That's a lot simpler.

10
00:00:21,890 --> 00:00:25,670
One new concept that we've talked about is the idea of a Git repository.

11
00:00:25,670 --> 00:00:28,650
A Git repository is a collection of files that are tracked by Git as

12
00:00:28,650 --> 00:00:30,250
a cohesive unit.

13
00:00:30,250 --> 00:00:32,940
You can have lots of different Git repositories on your computer and

14
00:00:32,940 --> 00:00:36,350
we'll talk later about how repositories can interact with one another.

15
00:00:36,350 --> 00:00:38,590
How to commits interact with their repository?

16
00:00:38,590 --> 00:00:39,610
How are they connected?

17
00:00:39,610 --> 00:00:42,290
At this point, it's important to remember that the current graph is

18
00:00:42,290 --> 00:00:43,720
not set in stone.

19
00:00:43,720 --> 00:00:46,820
We can modify it, to add new nodes between already connected ones.

20
00:00:46,820 --> 00:00:51,940
Repositories are a part of Git and commits are parts of repositories.

21
00:00:51,940 --> 00:00:53,750
So lets add those two connections.

22
00:00:53,750 --> 00:00:57,110
There's no need to keep this connection between commit and Git.

23
00:00:57,110 --> 00:00:58,680
Since it's pretty redundant.

24
00:00:58,680 --> 00:01:00,570
Since they're already connected through repository.

25
00:01:00,570 --> 00:01:01,570
So let's go ahead and get rid of that.

26
00:01:02,730 --> 00:01:04,420
Now, let's consider clone.

27
00:01:04,420 --> 00:01:07,570
Clone takes an existing repository and creates a new one just like it.

28
00:01:08,610 --> 00:01:11,630
So it should clearly be connected to repository.

29
00:01:11,630 --> 00:01:14,170
Does one of our existing connection types make sense?

30
00:01:14,170 --> 00:01:15,430
Or should we make a new one?

31
00:01:15,430 --> 00:01:18,910
It looks like the operates-on connection would work here pretty well.

32
00:01:18,910 --> 00:01:20,430
Now lets consider log.

33
00:01:20,430 --> 00:01:23,670
Log shows the commits in the repository prior to the current commit.

34
00:01:23,670 --> 00:01:26,790
How would you represent how it fits in to the existing map?

35
00:01:26,790 --> 00:01:27,750
In the following quiz,

36
00:01:27,750 --> 00:01:30,590
check the box next to any node that you think log should be connected to.

37
00:01:30,590 --> 00:01:36,300
In the text box, use the phrases for the existing connection types or

38
00:01:36,300 --> 00:01:39,340
write other if you don't think that any of the existing ones fit.

39
00:01:39,340 --> 00:01:41,210
Remember, this stuff is pretty subjective.

40
00:01:41,210 --> 00:01:43,770
So if you don't pick the same thing as what we thought made sense.

41
00:01:43,770 --> 00:01:44,790
Don't worry about it.

42
00:01:44,790 --> 00:01:47,380
You can keep trying until you land on our solution.

43
00:01:47,380 --> 00:01:50,750
Or you can just give it a shot and continue through to see how we did it.

44
00:01:50,750 --> 00:01:52,920
Please do try it yourself before continuing on though
