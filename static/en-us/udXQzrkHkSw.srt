1
00:00:00,300 --> 00:00:01,920
As you've noticed, we aren't actually testing

2
00:00:01,920 --> 00:00:04,170
that new function yet. Fortunately, we have a

3
00:00:04,170 --> 00:00:05,890
pretty good spot in doing background to

4
00:00:05,890 --> 00:00:08,430
do that. After all, right here we've already

5
00:00:08,430 --> 00:00:13,227
parsed everything we need to call that function. So, we can just call long

6
00:00:13,227 --> 00:00:18,843
locationId equals addLocation cityName locationQuery

7
00:00:18,843 --> 00:00:25,411
citylatitude, and citylongitude. It would be useful for our contract to have

8
00:00:25,411 --> 00:00:28,715
another method, one that converts a date object

9
00:00:28,715 --> 00:00:32,800
to the format our database uses. Note that Android

10
00:00:32,800 --> 00:00:34,840
Studio may have trouble importing this data object,

11
00:00:34,840 --> 00:00:37,930
since Java has two day classes, one in databases,

12
00:00:37,930 --> 00:00:42,680
and one in java.util. We want java.util.date. Back

13
00:00:42,680 --> 00:00:45,180
in the FetchWeatherTask, we're going to collect the data

14
00:00:45,180 --> 00:00:49,090
from JSON into the weather array. All right, so

15
00:00:49,090 --> 00:00:50,530
we now have a whole bunch of data that

16
00:00:50,530 --> 00:00:53,300
needs to be inserted. Guess what we're going to do next?
