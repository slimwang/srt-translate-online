1
00:00:00,280 --> 00:00:04,880
So finally, let's take a look at what kinds of consistency are there. We

2
00:00:04,880 --> 00:00:08,160
know that there is sequential consistency, and

3
00:00:08,160 --> 00:00:11,360
then, there is a family of relaxed consistency

4
00:00:11,360 --> 00:00:17,212
models which are allowed to violate one or more of those ordering rules. And the

5
00:00:17,212 --> 00:00:20,061
models that have actually been proposed and

6
00:00:20,061 --> 00:00:24,912
sometimes used, are called weak consistency, processor consistency,

7
00:00:24,912 --> 00:00:28,685
release consistency, lazy release consistency, scope

8
00:00:28,685 --> 00:00:32,491
consistency, etcetera. There are actually many,

9
00:00:32,491 --> 00:00:38,089
many relax consistency models, too many to actually explain here. But the key

10
00:00:38,089 --> 00:00:42,949
to all of them, is that although they allow arbitrary reordering's or

11
00:00:42,949 --> 00:00:46,448
maybe some reordering's among data operations.

12
00:00:46,448 --> 00:00:50,183
All of them support synchronization operations that

13
00:00:50,183 --> 00:00:55,744
allow you to ensure that the ordering that you really want in your program, gets

14
00:00:55,744 --> 00:01:00,523
to happen. Some of them do it by doing something like the N-sync corporation,

15
00:01:00,523 --> 00:01:01,762
some of them do it by using

16
00:01:01,762 --> 00:01:05,330
more refined memory synchronization operations. Some of them

17
00:01:05,330 --> 00:01:07,820
do it by actually calling library functions

18
00:01:07,820 --> 00:01:09,560
that are ensuring such ordering, and so on.
