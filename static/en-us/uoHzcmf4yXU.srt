1
00:00:00,460 --> 00:00:04,500
Now hopefully you have a little more context into the process

2
00:00:04,500 --> 00:00:09,340
of projecting three dimensions into two for the purpose of creating a map.

3
00:00:09,340 --> 00:00:13,230
And now we can begin drawing our world map in d3.

4
00:00:13,230 --> 00:00:18,580
So to recap, we have a GeoJSON file, world_countries.json, that

5
00:00:18,580 --> 00:00:24,250
we load in with our typical D3 JSON data loading file.

6
00:00:24,250 --> 00:00:28,460
Calling our function draw once all the data's loaded.

7
00:00:28,460 --> 00:00:33,040
And in our draw function, we've already set up the Mercator projection.

8
00:00:34,100 --> 00:00:37,990
Now, we need to draw the SVG path to actually visualize the map.

9
00:00:39,470 --> 00:00:43,600
Think of the projection in this case analogous to the scales we

10
00:00:43,600 --> 00:00:45,200
used for our chart.

11
00:00:45,200 --> 00:00:48,920
With scales, we converted a data value.

12
00:00:48,920 --> 00:00:53,170
Either an integer or a float into a pixel value.

13
00:00:53,170 --> 00:00:55,950
The mercator projection, while internally,

14
00:00:55,950 --> 00:01:00,140
is much more complicated than something like a linear or logarithmic scale,

15
00:01:01,180 --> 00:01:08,030
performed the exact same function, given a coordinate of longitude and latitude.

16
00:01:08,030 --> 00:01:10,270
It spits back an x and y pixel.

17
00:01:11,680 --> 00:01:15,370
And to actually create the SVG object.

18
00:01:15,370 --> 00:01:18,270
That will represent the polygon of our map.

19
00:01:18,270 --> 00:01:20,810
We used D3's geo.path.

20
00:01:20,810 --> 00:01:27,810
Now even though the projection converts from longitudes and latitudes.

21
00:01:27,810 --> 00:01:34,550
Into the pixel domain, we still need to construct the SVG objects, to correctly

22
00:01:34,550 --> 00:01:40,174
render those pixels, and that's exactly what the D3.geo.path does.

23
00:01:40,174 --> 00:01:45,200
And to let it know we're using the Mercator projection,

24
00:01:45,200 --> 00:01:49,690
we can simply call the .projection method on the path,

25
00:01:49,690 --> 00:01:51,390
passing in the projection we would like to use.

26
00:01:52,610 --> 00:01:56,360
So let's put all these pieces together to actually draw the map with our data.

27
00:01:57,860 --> 00:02:01,740
This bit of code I added should look very familiar to you by now, and

28
00:02:01,740 --> 00:02:04,700
is similar to the code we used to draw our chart.

29
00:02:05,700 --> 00:02:08,794
First, we select all of the paths in this case,

30
00:02:08,794 --> 00:02:14,920
in our SVG since those are what were going to be adding.

31
00:02:14,920 --> 00:02:21,430
And bind our GeoJSON data to this empty selection, it's empty

32
00:02:21,430 --> 00:02:25,580
again since it's the first time we're drawing the map on our page, and notice

33
00:02:25,580 --> 00:02:30,201
here that I'm not just using geo_data, but I'm using the .features already.

34
00:02:32,170 --> 00:02:35,476
Remember geo_data actually at two top level keys.

35
00:02:35,476 --> 00:02:42,010
And the .features key corresponded to the array of country coordinates.

36
00:02:42,010 --> 00:02:44,070
And now with our bound data.

37
00:02:44,070 --> 00:02:49,260
And again remember that this is an array of placeholder elements.

38
00:02:49,260 --> 00:02:55,000
We then make the enter selection to select all the paths of countries.

39
00:02:55,000 --> 00:02:56,620
That are not currently not on the page,

40
00:02:56,620 --> 00:03:01,080
which is all of them since this is the first time we're drawing the map.

41
00:03:01,080 --> 00:03:04,050
And for each of this, we want to append the path to our

42
00:03:05,380 --> 00:03:10,780
SVG that has its d property set to this path object we created above.

43
00:03:10,780 --> 00:03:16,940
SVG path elements are quite flexible and can represent most any shape, and

44
00:03:16,940 --> 00:03:21,800
you simply pass the S series of vertices or points in the d attribute that can

45
00:03:22,800 --> 00:03:29,160
be thought of as the data of the path, to specify the SVG path to actually draw.

46
00:03:29,160 --> 00:03:31,570
Notice here that we simply pass.

47
00:03:31,570 --> 00:03:34,630
The d3 path object without any arguments or

48
00:03:34,630 --> 00:03:37,870
without using any callback successor function.

49
00:03:37,870 --> 00:03:39,530
How does it know which country to draw then?
