1
00:00:00,303 --> 00:00:02,272
Let's talk about thread blocks and why they're there.

2
00:00:02,272 --> 00:00:04,656
Hopefully, you have some questions about how the GPU works,

3
00:00:04,656 --> 00:00:09,879
since we've just sort of been telling you about threads and thread blocks without giving you much motivation.

4
00:00:09,879 --> 00:00:12,882
You might be wondering why do we divide the problem into blocks.

5
00:00:12,882 --> 00:00:14,284
When do blocks get run?

6
00:00:14,284 --> 00:00:17,353
And if you have a whole bunch of thread blocks, in what order do they run?

7
00:00:17,353 --> 00:00:20,662
And I've told you that thread blocks were about letting groups of threads cooperate.

8
00:00:20,662 --> 00:00:23,825
But I haven't told you how those threads cooperate or with what limitations.

9
00:00:23,825 --> 00:00:26,694
To answer this we're going to have to dive in to learn

10
00:00:26,694 --> 00:00:28,265
a little bit more about the GPU hardware.

11
00:00:28,265 --> 00:00:31,434
At a high level, a Cuda GPU is a bunch of these.

12
00:00:31,434 --> 00:00:35,036
We call them streaming multiprocessors or SMs for short.

13
00:00:35,036 --> 00:00:38,487
Now, different GPUs have a different number of SMs.

14
00:00:38,487 --> 00:00:40,743
A small GPU might only have one SM

15
00:00:40,743 --> 00:00:44,713
whereas a really big GPU might have 16 SMs, for example.

16
00:00:44,713 --> 00:00:49,822
An SM in turn has many simple processors that can run a bunch of parallel threads.

17
00:00:49,822 --> 00:00:53,789
It also has some other things like some memory that we'll talk more about in a moment.

18
00:00:53,789 --> 00:00:57,927
When you've got a Cuda program with a bunch of threads organized into thread blocks,

19
00:00:57,927 --> 00:01:03,768
the important thing to understand is that the GPU is responsible for allocating blocks to SMs.

20
00:01:03,768 --> 00:01:06,270
Let me say that again because it's really important,

21
00:01:06,270 --> 00:01:10,073
the GPU is responsible for allocating the blocks to the SMs.

22
00:01:10,073 --> 00:01:14,345
As a programmer, all you have to worry about is giving the GPU a big pile of thread blocks,

23
00:01:14,345 --> 00:01:17,782
and the GPU will take care of assigning them to run on the hardware SMs.

24
00:01:17,782 --> 00:01:20,790
All the SMs run in parallel and independently.
