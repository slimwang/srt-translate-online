1
00:00:00,180 --> 00:00:03,050
Well, first of all, we have an external CSS

2
00:00:03,050 --> 00:00:06,300
file which we need to construct the CSSOM. So, if

3
00:00:06,300 --> 00:00:08,039
I inline that, then that could save a lot

4
00:00:08,039 --> 00:00:11,490
of time. Same goes for JavaScript. If I inline that,

5
00:00:11,490 --> 00:00:13,700
then we can skip the request. And in fact,

6
00:00:13,700 --> 00:00:16,630
if I inline both, then that's even better because my

7
00:00:16,630 --> 00:00:19,050
critical path length will be one. As soon as

8
00:00:19,050 --> 00:00:21,880
I have my HTML file, I have everything I need.

9
00:00:21,880 --> 00:00:25,370
>> Yep, that's right. Those are definitely good strategies. Just be careful

10
00:00:25,370 --> 00:00:27,120
when you apply them. Remember that inlining

11
00:00:27,120 --> 00:00:29,460
a lot of JavaScript and CSS, especially when

12
00:00:29,460 --> 00:00:31,710
those resources can be used between multiple

13
00:00:31,710 --> 00:00:33,930
pages, can lead to a lot of overhead.

14
00:00:33,930 --> 00:00:37,610
>> Right. Right. Good point. Alright, speaking of which, I guess, I

15
00:00:37,610 --> 00:00:40,850
don't know if this applies to this exact case, but if I knew

16
00:00:40,850 --> 00:00:43,960
what was inside the CSS and JavaScript files, then I could also

17
00:00:43,960 --> 00:00:47,900
consider adding a media type to the CSS or making the script async.

18
00:00:47,900 --> 00:00:50,380
>> Yep, you got it. Just to confirm though, what would

19
00:00:50,380 --> 00:00:52,900
you look for in the CSS and JavaScript files?

20
00:00:52,900 --> 00:00:55,060
>> Well, for CSS, I'd want to make

21
00:00:55,060 --> 00:00:57,240
sure the styles are actually required to render the

22
00:00:57,240 --> 00:00:59,670
page. If they're not being used, I could

23
00:00:59,670 --> 00:01:02,170
add an appropriate media tag to attribute and unblock

24
00:01:02,170 --> 00:01:04,940
rendering. Also, it's pretty much the same idea

25
00:01:04,940 --> 00:01:07,480
for JavaScript. If the script is not manipulating or

26
00:01:07,480 --> 00:01:10,150
accessing the DOM or CSSOM, then I could

27
00:01:10,150 --> 00:01:14,590
add an async attribute, which would unblock DOM construction.

28
00:01:14,590 --> 00:01:15,700
>> Yep. That's awesome.
