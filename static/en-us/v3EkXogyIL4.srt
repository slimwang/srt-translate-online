1
00:00:00,360 --> 00:00:03,110
Now that we've seen some sorts of
information that we can store in

2
00:00:03,110 --> 00:00:07,230
a database table, let's talk about
how our code talks to a database.

3
00:00:07,230 --> 00:00:10,630
When our code fetches data out
of a database it does this by

4
00:00:10,630 --> 00:00:13,860
sending a query, in response,
the database will

5
00:00:13,860 --> 00:00:18,480
send us a result containing a new
table with the data that we asked for.

6
00:00:18,480 --> 00:00:22,440
Depending on the specifics of our
environment our code might be talking to

7
00:00:22,440 --> 00:00:24,910
the database over the network, or

8
00:00:24,910 --> 00:00:28,800
it might just be calling a library
that keeps a database on local disk.

9
00:00:28,800 --> 00:00:31,110
Those design details would
be important later but for

10
00:00:31,110 --> 00:00:33,030
now we can actually ignore them.

11
00:00:33,030 --> 00:00:37,770
The basics of databases work the same
no matter what the implementation is.

12
00:00:37,770 --> 00:00:40,830
So let's take a look at running
some queries in SQL against

13
00:00:40,830 --> 00:00:42,290
an actual database.

14
00:00:42,290 --> 00:00:45,790
Don't worry about the syntax right now,
we'll see that in the next lesson.

15
00:00:45,790 --> 00:00:48,140
Okay, so here's a query we saw before,

16
00:00:48,140 --> 00:00:52,590
select food from diet where
species equals orangutan.

17
00:00:52,590 --> 00:00:54,020
And when we run it, here is the result.

18
00:00:54,020 --> 00:00:57,750
Now, something to notice about
the result is that it's a table.

19
00:00:57,750 --> 00:01:01,430
It has two rows, even says two rows
down underneath the table, and

20
00:01:01,430 --> 00:01:04,050
it has one column,
the food column that we asked for.

21
00:01:04,050 --> 00:01:08,530
So running a query against the database
isn't like returning a single value from

22
00:01:08,530 --> 00:01:10,600
a function,
it's more like returning a list,

23
00:01:10,600 --> 00:01:12,780
even if there might only be one element.

24
00:01:12,780 --> 00:01:17,530
In fact, even if we ask the database for
2 plus 2 like this.

25
00:01:17,530 --> 00:01:20,500
The answer is still actually a table
with one column and one row.

26
00:01:21,530 --> 00:01:26,025
If we ask the database for the answers
to three arithmetic problems at

27
00:01:26,025 --> 00:01:29,433
once then we'll get back
a table with a single row and

28
00:01:29,433 --> 00:01:33,328
three columns, each one of them
giving one of the answers.

29
00:01:33,328 --> 00:01:36,514
You might have noticed that these
columns have rather unusual names,

30
00:01:36,514 --> 00:01:39,580
they all are question marks
column question mark.

31
00:01:39,580 --> 00:01:44,710
If we want to give them more descriptive
names we can do that, by using as sum

32
00:01:44,710 --> 00:01:49,660
here we get back still a table
still with one row and

33
00:01:49,660 --> 00:01:52,720
one column, but now the column has
a more descriptive name of sum

34
00:01:52,720 --> 00:01:54,160
instead of question mark column,
question mark.
