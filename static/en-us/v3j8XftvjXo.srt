1
00:00:00,100 --> 00:00:03,820
So here's the original elevator demo, where we read in an integer, or we're

2
00:00:03,820 --> 00:00:07,240
hoping it's going to be an integer, and then we use it here for that first

3
00:00:07,240 --> 00:00:13,536
demonstration of a new statement. Our task is to make sure that we get a valid

4
00:00:13,536 --> 00:00:18,420
integer here. Someone was kind enough to supply us with the bits and pieces

5
00:00:18,420 --> 00:00:25,700
that we need. Here is the check where the, the user mistakenly enters 13.

6
00:00:25,700 --> 00:00:31,312
Whether the floor is less than 1 or greater than 18. And finally, where that's

7
00:00:31,312 --> 00:00:36,119
not an integer at all. Our job is to put these together in the right order.

8
00:00:36,119 --> 00:00:40,944
Now, the first 2 checks already assume that the user entered an integer. So we

9
00:00:40,944 --> 00:00:46,268
should use the sur check first to test for that. Let's cut it out, and paste it

10
00:00:46,268 --> 00:00:51,340
into the main method, and fix up the flow. So, we have our scanner, we're

11
00:00:51,340 --> 00:00:55,180
prompting the user to type something in, and now we're checking what the user

12
00:00:55,180 --> 00:00:59,255
types. And if that's successful, then we call nextInt. And that gets us to

13
00:00:59,255 --> 00:01:04,530
where we were here. So, everything that's down here needs to get inserted here.

14
00:01:04,530 --> 00:01:08,740
Let's do that. So, if the user entered an integer, we grab the integer and we

15
00:01:08,740 --> 00:01:14,806
do our computation. Let's move on to the other tests. Here they are. Again,

16
00:01:14,806 --> 00:01:17,915
I'll cut them out. So, these one's only make sense after I have read in the

17
00:01:17,915 --> 00:01:22,276
next input as an integer. So I'll paste them in here. So if the floor is 13, I

18
00:01:22,276 --> 00:01:28,628
print an error. If it's less than equal 0 or greater than 18, I print an error.

19
00:01:28,628 --> 00:01:32,156
this isn't really going to work because I'm printing the error and then I still

20
00:01:32,156 --> 00:01:37,504
continue with all of these things. What I really need to say is if this error

21
00:01:37,504 --> 00:01:44,210
happens, print the error, else go on here. Let me do that. So I have enclosed

22
00:01:44,210 --> 00:01:49,180
all of the original action inside this else. Now peaking up, there still is a

23
00:01:49,180 --> 00:01:54,080
bit of an issue with control flow. The floor is 13, then it does this, and then

24
00:01:54,080 --> 00:01:58,844
in all cases, whether or not it's 13, it makes this check. So we also want to

25
00:01:58,844 --> 00:02:03,160
put an else in here. So first we check whether the number is even an integer.

26
00:02:03,160 --> 00:02:09,190
If so, we check whether it's one of these two special situations. And finally

27
00:02:09,190 --> 00:02:14,240
here we know that it is a good input, and we do our regular thing. Note that we

28
00:02:14,240 --> 00:02:19,390
have three levels of nesting. This if contains this if, and the else branch

29
00:02:19,390 --> 00:02:22,330
here contains another if. C'est la vie.
