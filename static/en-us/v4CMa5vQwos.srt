1
00:00:00,630 --> 00:00:04,469
Now let's talk about how to include
color and font styles in this app.

2
00:00:04,469 --> 00:00:08,519
In the Colors and Fonts activity starter
code, we already have a few examples

3
00:00:08,519 --> 00:00:11,910
of colored views and text views
of different font families and

4
00:00:11,910 --> 00:00:14,519
sizes, just so
you can see what they look like.

5
00:00:14,519 --> 00:00:17,070
Then later, you'll see how
to use some simple font and

6
00:00:17,070 --> 00:00:20,690
color styles to add consistency
to different layouts.

7
00:00:20,690 --> 00:00:24,609
Right now, we will be changing an add
in to the colors in phones activity.

8
00:00:24,609 --> 00:00:28,619
To add new colors, I want to add them
to a file in the values folder, and

9
00:00:28,620 --> 00:00:29,798
our resources directory.

10
00:00:29,797 --> 00:00:32,460
Its named colors.xml.

11
00:00:32,460 --> 00:00:35,649
And this is in the same values
folders that contains the strings

12
00:00:35,649 --> 00:00:36,478
which you've seen before.

13
00:00:36,478 --> 00:00:40,789
In this colors.xml file,
you already sen some colors here.

14
00:00:40,789 --> 00:00:44,589
With the name and the hex code that
defines their color, the name is color

15
00:00:44,590 --> 00:00:49,440
primary, color primary dark, and
color accent are especially important.

16
00:00:49,439 --> 00:00:54,170
These are names for the default app in
Android, so when your app is created,

17
00:00:54,170 --> 00:00:57,760
components like the menu bar and
this special buttons like Fabs or

18
00:00:57,759 --> 00:01:01,509
radio buttons who will be
colored base on these values.

19
00:01:01,509 --> 00:01:05,730
And when I run these app you can see
these main colors in the top menu bar.

20
00:01:05,730 --> 00:01:09,549
And also in the views displayed
in our Colors and Fonts activity.

21
00:01:09,549 --> 00:01:12,780
And you can see a preview of these
colors in swatches to the left

22
00:01:12,780 --> 00:01:14,760
of the text in Android studio.

23
00:01:14,760 --> 00:01:18,310
For this app, I want the primary
color to be a dark purple.

24
00:01:18,310 --> 00:01:22,019
So I'll change the primary and
the primary dark colors to the hex codes

25
00:01:22,019 --> 00:01:25,390
provided in the comment above and
I can just copy and paste from here.

26
00:01:25,390 --> 00:01:29,879
I will also change the accent color to
be orange and as I change these hex

27
00:01:29,879 --> 00:01:33,659
codes, you should see to the left
that these color swatches change.

28
00:01:33,659 --> 00:01:36,539
I also want to add a third
light primary color and

29
00:01:36,540 --> 00:01:41,490
I will name this color primary light and
I will give this a light purple color.

30
00:01:41,489 --> 00:01:45,593
I am actually getting these hex values
from the material design color pallet

31
00:01:45,593 --> 00:01:48,989
for Android which has
pre-chosen vibrant pallets.

32
00:01:48,989 --> 00:01:51,949
And now, if we run our app,
we'll see that the menu bar and

33
00:01:51,950 --> 00:01:55,310
our list of activities has
changed from blue to purple.

34
00:01:55,310 --> 00:01:57,820
And let's take a look at our Colors and
Fonts activity.

35
00:01:57,819 --> 00:01:59,909
The colored views here
have changed as well.

36
00:01:59,909 --> 00:02:02,709
This is because in our Color and
Fonts Layout XML.

37
00:02:02,709 --> 00:02:06,069
We have views with their
background set to these colors.

38
00:02:06,069 --> 00:02:08,888
If we look at our
Color Font Activity XML.

39
00:02:08,889 --> 00:02:12,930
We can see that each of these views has
a background set to different color.

40
00:02:12,930 --> 00:02:16,810
The first is color primary,
the second color primary dark and

41
00:02:16,810 --> 00:02:18,699
the third are accent color.

42
00:02:18,699 --> 00:02:22,179
So when we change these values
in our colors.XML file,

43
00:02:22,180 --> 00:02:24,710
that change was
reflected in these views.

44
00:02:24,710 --> 00:02:28,950
Let's create one more view at the top of
this layout to display our newly created

45
00:02:28,949 --> 00:02:30,369
primary light color.

46
00:02:30,370 --> 00:02:32,640
I'll give it an id of primaryLight and

47
00:02:32,639 --> 00:02:35,500
the same layout width and
height as our other views.

48
00:02:35,500 --> 00:02:38,479
Then I'll set its background
to our colorPrimaryLight.

49
00:02:38,479 --> 00:02:41,409
And we know this is a color
resource because of this @color

50
00:02:41,409 --> 00:02:42,870
part of this value.

51
00:02:42,870 --> 00:02:45,289
Now let's save this and
run our app again.

52
00:02:45,289 --> 00:02:46,769
Now if we click on our colors and

53
00:02:46,770 --> 00:02:50,689
fonts activity, we can see our
light purple color appear.

54
00:02:50,689 --> 00:02:53,509
Okay, now let's move
on to our text views.

55
00:02:53,509 --> 00:02:57,289
There are a lot of text views in here,
all displaying a different size and

56
00:02:57,289 --> 00:02:59,449
font family of the Roboto font.

57
00:02:59,449 --> 00:03:01,379
Let's take a look at the XML.

58
00:03:01,379 --> 00:03:04,269
If we scroll down in our
color_font_activity XML,

59
00:03:04,270 --> 00:03:06,350
we see a lot of text views.

60
00:03:06,349 --> 00:03:10,539
In the first text view we see that
the text to size property is set

61
00:03:10,539 --> 00:03:15,250
to 56 sp and
the font family to sans serif light and

62
00:03:15,250 --> 00:03:18,210
this is a thinner,
lighter text family than the default.

63
00:03:18,210 --> 00:03:21,314
We also see some Views with
a text style property.

64
00:03:21,314 --> 00:03:24,215
This can be set to bold,
italic or normal.

65
00:03:24,215 --> 00:03:27,034
You can also set a text
color if you want to.

66
00:03:27,034 --> 00:03:30,754
And in the app these views display
text that describes their style,

67
00:03:30,754 --> 00:03:32,365
font family and size.

68
00:03:32,365 --> 00:03:35,175
>From 56 sp down to 20 sp.

69
00:03:35,175 --> 00:03:39,525
Back to the xml, let's scroll down to
the bottom and add one more text view.

70
00:03:39,525 --> 00:03:42,125
I'll create a view with
a text size equal to 16 sp

71
00:03:43,370 --> 00:03:46,230
In the font family of
san-serif-smallcaps.

72
00:03:46,229 --> 00:03:48,750
And smallcaps is all capital letters.

73
00:03:48,750 --> 00:03:51,289
And the text of display
will be Smallcaps 16sp,

74
00:03:51,289 --> 00:03:55,009
in fact I'll actually create
the string resource for this.

75
00:03:55,009 --> 00:03:57,329
So, I'll go to our strings.xml and

76
00:03:57,330 --> 00:04:02,320
create a new string named
smallcaps_16 that displays this text.

77
00:04:02,319 --> 00:04:05,840
Then in our activity code I
can reference that string.

78
00:04:05,840 --> 00:04:06,580
And that's it.

79
00:04:06,580 --> 00:04:08,120
Let's run our app again.

80
00:04:08,120 --> 00:04:11,939
Now in your colors and fonts,
you can see our new color and

81
00:04:11,939 --> 00:04:15,020
our new text view, small caps, 16SP.

82
00:04:15,020 --> 00:04:18,949
Next, it'll be your turn to change
the color scheme and create views.

83
00:04:18,949 --> 00:04:21,430
Also, feel free to look
around this code and create

84
00:04:21,430 --> 00:04:24,540
more views to test out the appearance
of different colors and fonts.

