1
00:00:00,390 --> 00:00:03,130
So, first thing you probably notice
about TCP dump data is that there's

2
00:00:03,130 --> 00:00:05,180
a lot of details here.

3
00:00:05,180 --> 00:00:08,600
What is all this options sack stuff?

4
00:00:08,600 --> 00:00:10,820
We're not going to look
at that in this course.

5
00:00:10,820 --> 00:00:12,570
I'm going to wave my magic wand and
make it go away.

6
00:00:13,680 --> 00:00:16,430
I know it's kind of silly to say,
but don't panic about the fact that

7
00:00:16,430 --> 00:00:19,030
this output probably looks
like a big pile of weird.

8
00:00:19,030 --> 00:00:21,760
Some parts of it may jump out at you
as already saying something, and

9
00:00:21,760 --> 00:00:23,702
if not right now,
maybe by the end of this video.

10
00:00:23,702 --> 00:00:26,620
So, there's some things in here
you might already recognize.

11
00:00:26,620 --> 00:00:31,590
If you're using your own data, you'll
see your machine's IP address here.

12
00:00:31,590 --> 00:00:32,689
Here's mine.

13
00:00:32,689 --> 00:00:35,380
Notice that just as we saw with pings,
sometimes it shows up to

14
00:00:35,380 --> 00:00:39,300
the left of this little angle bracket,
and sometimes it shows up to the right.

15
00:00:39,300 --> 00:00:41,890
That's because some of these
packets are going from our machine

16
00:00:41,890 --> 00:00:45,700
to example dot net, and
some of them are coming back.

17
00:00:45,700 --> 00:00:49,030
Likewise, here's the IP address for
example dot net.

18
00:00:49,030 --> 00:00:50,610
If you want to check that,

19
00:00:50,610 --> 00:00:53,590
you can use the host command
to look it up in the DNS.

20
00:00:53,590 --> 00:00:56,000
Now, let's look at something that
differs across these packets.

21
00:00:57,020 --> 00:00:58,030
At the end of each record,

22
00:00:58,030 --> 00:01:02,240
there's a length field that's telling us
how much data was sent in that packet.

23
00:01:02,240 --> 00:01:05,510
That's just the payload,
the actual HTTP data,

24
00:01:05,510 --> 00:01:09,840
as opposed to all the TCP overhead like
addresses and port numbers and such.

25
00:01:09,840 --> 00:01:13,000
So, the interesting thing here is
that out of all of these packets,

26
00:01:13,000 --> 00:01:16,220
only a few of them even
have any payload data.

27
00:01:16,220 --> 00:01:19,510
For most of them,
the length value is zero.

28
00:01:19,510 --> 00:01:21,330
This is an important fact about TCP.

29
00:01:22,400 --> 00:01:25,470
Even before the client and
server get to exchange any real data,

30
00:01:25,470 --> 00:01:28,170
they've got some set up to do
to bring up the connection.

31
00:01:28,170 --> 00:01:32,020
And after they're done with the real
data, they have some tear down to do.

32
00:01:32,020 --> 00:01:35,890
So, looking at the first of these that
has any real data, it says link 38.

33
00:01:35,890 --> 00:01:39,829
And the only other one has length 321.

34
00:01:39,829 --> 00:01:41,320
Well, where did those numbers come from?

35
00:01:42,360 --> 00:01:45,050
Let's look back at what
data we actually sent.

36
00:01:45,050 --> 00:01:47,010
Here's our HTTP request.

37
00:01:47,010 --> 00:01:50,162
And if you count these new line
characters the end of each line as only,

38
00:01:50,162 --> 00:01:52,112
because the backslash
doesn't really count,

39
00:01:52,112 --> 00:01:55,700
it's going to come out
to exactly 38 bytes.

40
00:01:55,700 --> 00:01:59,370
Which means that this
record in the TCP dump data

41
00:01:59,370 --> 00:02:01,930
exactly represents
the transmission of the HTTP

42
00:02:01,930 --> 00:02:04,330
request from our client to
the example to that server.
