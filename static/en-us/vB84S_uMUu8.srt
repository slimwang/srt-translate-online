1
00:00:00,540 --> 00:00:02,520
So we finished with our layout.

2
00:00:02,520 --> 00:00:07,150
That means we're all done with
the UI of our app, right?

3
00:00:07,150 --> 00:00:10,250
You might have noticed that
there's no way to actually submit

4
00:00:10,250 --> 00:00:12,009
the query to GitHub.

5
00:00:12,009 --> 00:00:15,404
While most applications would make
use of a button in the main layout,

6
00:00:15,404 --> 00:00:18,608
we're going to take this opportunity
to teach you something new.

7
00:00:19,929 --> 00:00:22,460
Android is the concept of menus.

8
00:00:22,460 --> 00:00:27,190
We usually create them like any
Android resource using XML.

9
00:00:27,190 --> 00:00:30,782
This example shows a menu item
that will display search.

10
00:00:30,782 --> 00:00:35,189
The orderInCategory field indicates the
order that the menu item will appear in

11
00:00:35,189 --> 00:00:37,210
relative to other items.

12
00:00:37,210 --> 00:00:41,210
Android devices prior to Honeycomb
actually have a menu button.

13
00:00:41,210 --> 00:00:45,950
But the visual design team felt it hid
too much functionality from users.

14
00:00:45,950 --> 00:00:50,520
So in Honeycomb, we added a UX
control we called an action bar.

15
00:00:50,520 --> 00:00:54,030
This sits at the top of the activity
window, and provides a place for

16
00:00:54,030 --> 00:00:54,980
an overflow menu.

17
00:00:56,049 --> 00:01:00,219
We also allow applications to
specify menu items as actions.

18
00:01:00,219 --> 00:01:02,299
If there's enough horizontal space,

19
00:01:02,299 --> 00:01:04,829
those actions appear on
the action bar as buttons.

20
00:01:06,159 --> 00:01:10,450
To do this in our menu XML,
we add the show as action attribute.

21
00:01:10,450 --> 00:01:13,969
We're doing this in the app namespace
because we're using AppCompat

22
00:01:13,969 --> 00:01:19,400
to make our app compatible with
API Level 10 Gingerbread devices.

23
00:01:19,400 --> 00:01:24,340
In Android API Level 21 Lollipop,
as part of our material design overhaul,

24
00:01:24,340 --> 00:01:28,260
we generalized this to a standard
toolbar widget, allowing us to animate

25
00:01:28,260 --> 00:01:32,609
the toolbar in, as well as use it
in different places in our layout.

26
00:01:32,609 --> 00:01:36,549
This new functionality is available to
Android applications targeting most

27
00:01:36,549 --> 00:01:40,194
Android versions, thanks to its
implementations in the support library.

28
00:01:40,194 --> 00:01:43,952
We'll cover more on material
design later in the course.

29
00:01:43,953 --> 00:01:45,906
[BLANK_AUDIO]

30
00:01:45,906 --> 00:01:50,810
To create our menu, we override
onCreateOptionsMenu within our activity.

31
00:01:50,810 --> 00:01:53,329
We can then handle
menu item selections by

32
00:01:53,329 --> 00:01:56,730
overriding onOptionsItemSelected
within our activity.

