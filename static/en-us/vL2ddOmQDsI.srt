1
00:00:00,440 --> 00:00:04,640
So, I know I want to rename all of my files. And I remember there were about

2
00:00:04,640 --> 00:00:08,010
50 photos, inside that folder that you downloaded. So,

3
00:00:08,010 --> 00:00:10,490
to rename 50 photos, I think I'll have to

4
00:00:10,490 --> 00:00:13,115
use some sort of a loop. So, I'll

5
00:00:13,115 --> 00:00:18,615
just write one down now by saying, for file_name,

6
00:00:18,615 --> 00:00:22,640
in file_list. Now, bear in mind, file_list is something

7
00:00:22,640 --> 00:00:25,290
we've seen before. In fact, we printed it out.

8
00:00:25,290 --> 00:00:27,300
This was a list of all of the photos inside

9
00:00:27,300 --> 00:00:29,680
the folder. And what this for loop is going to

10
00:00:29,680 --> 00:00:33,170
allow us to do is work with each photo file

11
00:00:33,170 --> 00:00:36,740
one at a time. So, for each photo, I want to change

12
00:00:36,740 --> 00:00:41,510
its name. And the old name is in file_name. And

13
00:00:41,510 --> 00:00:44,380
the new name, well, I know the new name is devoid

14
00:00:44,380 --> 00:00:47,740
of any numbers. But how to do that, I still

15
00:00:47,740 --> 00:00:51,710
don't know. And this means I'll have to do some experimentation.

16
00:00:51,710 --> 00:00:54,090
And to run those experiments I generally use the

17
00:00:54,090 --> 00:00:57,340
Python Shell window, where I can just start typing

18
00:00:57,340 --> 00:01:00,350
and seeing the result really quickly. Let me make

19
00:01:00,350 --> 00:01:01,940
more room for this window so you can see

20
00:01:01,940 --> 00:01:05,425
it properly. So, say, my file name was the

21
00:01:05,425 --> 00:01:10,950
following string; 48athens.jpg. Let me print that out, okay,

22
00:01:10,950 --> 00:01:14,134
good. Now, previously I Googled to find out that

23
00:01:14,134 --> 00:01:16,848
there is a string function called translate that takes

24
00:01:16,848 --> 00:01:19,551
up to two arguments. The first argument is a

25
00:01:19,551 --> 00:01:23,132
table. Which translates one set of characters to another set

26
00:01:23,132 --> 00:01:26,072
of characters and since we don't have that, I can

27
00:01:26,072 --> 00:01:28,834
use the keyword none. And the second is a list

28
00:01:28,834 --> 00:01:31,461
of all characters that we want to remove from

29
00:01:31,461 --> 00:01:34,077
the string. And those I know are numbers, so that

30
00:01:34,077 --> 00:01:37,204
will be zero, one, two, three, four, five, six, seven,

31
00:01:37,204 --> 00:01:40,910
eight, nine. All of those numbers. Let me try that.

32
00:01:41,910 --> 00:01:44,320
Oh hey, look, the file name now has

33
00:01:44,320 --> 00:01:47,000
no numbers in it. So, because that experiment

34
00:01:47,000 --> 00:01:49,050
worked, I will go back to the code

35
00:01:49,050 --> 00:01:52,240
and add this file_ name.translate function into my code.
