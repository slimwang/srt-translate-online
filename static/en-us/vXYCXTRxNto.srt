1
00:00:00,470 --> 00:00:03,030
One particularly interesting thing about observables, and

2
00:00:03,030 --> 00:00:06,770
observable arrays, is that they're actually functions.

3
00:00:06,770 --> 00:00:11,120
If we hop over into the console here, I can verify that this page has

4
00:00:11,120 --> 00:00:16,740
knockout by typing, ko, sure enough knockout is this object.

5
00:00:16,740 --> 00:00:21,900
If I make a new observable array I can say, ko.observableArray.

6
00:00:21,900 --> 00:00:25,290
And inside I'm going to pass it its initial array.

7
00:00:25,290 --> 00:00:27,900
Sure enough, that returns our observable array.

8
00:00:27,900 --> 00:00:31,400
Now I'm going to go ahead and make a variable, I'll call it foo.

9
00:00:31,400 --> 00:00:36,170
And now we can call console.dir on foo.

10
00:00:36,170 --> 00:00:37,510
Now before I run this,

11
00:00:37,510 --> 00:00:43,100
I just want to point that this observable array here, foo, is a function.

12
00:00:43,100 --> 00:00:47,120
I can validate that by typing just simply foo.

13
00:00:47,120 --> 00:00:49,620
And sure enough, you can see that it's a function.

14
00:00:49,620 --> 00:00:54,400
Now remember that in JavaScript functions are also objects.

15
00:00:54,400 --> 00:00:55,640
And if we extrapolate from that,

16
00:00:55,640 --> 00:01:00,280
we can infer that functions will also be able to have properties on them.

17
00:01:00,280 --> 00:01:02,850
Let's show that by typing console.dir foo.

18
00:01:05,459 --> 00:01:10,650
Sure enough if we open this up we can see all of this stuff on our function.

19
00:01:10,650 --> 00:01:13,340
Now as a side point this might look familiar.

20
00:01:13,340 --> 00:01:15,950
It's very similar to how jQuery works.

21
00:01:15,950 --> 00:01:20,860
If we go to jQuery.com, Inspect Element and go to our Console.

22
00:01:20,860 --> 00:01:25,810
We can type jQuery and we can see that jQuery is also a function.

23
00:01:25,810 --> 00:01:28,990
However, if we type console.dir jQuery,

24
00:01:28,990 --> 00:01:32,365
we can see we get this function with a bunch of stuff inside of it.

25
00:01:32,365 --> 00:01:37,290
What this means is we can run jQuery like a function just like this,

26
00:01:38,630 --> 00:01:41,090
or we can say jQuery.something.

27
00:01:41,090 --> 00:01:44,320
Now the same goes for Knockout.

28
00:01:44,320 --> 00:01:47,180
Our observable array, we can run it like this and

29
00:01:47,180 --> 00:01:52,310
get the value or we can go ahead and say foo.,

30
00:01:52,310 --> 00:01:54,720
and I'll say push(5).

31
00:01:54,720 --> 00:01:57,940
When I push the number five into this array, it returns,

32
00:01:57,940 --> 00:02:00,970
just like push normally does, the total length of the array.

33
00:02:00,970 --> 00:02:07,090
And now if I run through, I can get back 1, 2, 3, 5, with four of them in there.

34
00:02:08,180 --> 00:02:11,890
So in this way Knockout and jQuery work similarly.

35
00:02:11,890 --> 00:02:12,880
Observables and

36
00:02:12,880 --> 00:02:17,850
observable arrays are actually functions with keys on them as well.

37
00:02:17,850 --> 00:02:22,230
Just like jQuery is a function with a bunch of keys and methods on it.

38
00:02:22,230 --> 00:02:24,550
Now many people don't know this, and they use jQuery and

39
00:02:24,550 --> 00:02:26,400
Knockout very successfully.

40
00:02:26,400 --> 00:02:29,867
But it's wonderful to understand a bit more about what's actually going on

41
00:02:29,867 --> 00:02:30,634
under the hood.
