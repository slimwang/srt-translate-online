1
00:00:00,360 --> 00:00:01,600
The answer is the first two.

2
00:00:02,660 --> 00:00:04,490
Does U contain a number
greater than 100?

3
00:00:04,490 --> 00:00:06,680
Well just scan through.

4
00:00:06,680 --> 00:00:08,340
If you find one, it does.

5
00:00:08,340 --> 00:00:10,250
If not, there wasn't one.

6
00:00:10,250 --> 00:00:12,320
This can be solved with
a linear time algorithm.

7
00:00:13,760 --> 00:00:16,129
Do any three elements sum to zero?

8
00:00:16,129 --> 00:00:20,050
Well, we can just try all and
choose three possibilities.

9
00:00:20,050 --> 00:00:23,470
This is only cubic in
the number of input numbers, so

10
00:00:23,470 --> 00:00:25,360
this brute force
algorithm is polynomial.

11
00:00:26,390 --> 00:00:28,960
I should say that there happen
to be faster algorithms as well.

12
00:00:30,750 --> 00:00:33,260
And lastly,
does any subset of U sum to zero?

13
00:00:34,330 --> 00:00:37,500
Here, the brute force strategy
is to try all subsets of U,

14
00:00:37,500 --> 00:00:41,190
and this is exponential in the size and
input.

15
00:00:41,190 --> 00:00:44,016
Indeed, this problem is NP complete.
