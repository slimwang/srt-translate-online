1
00:00:00,000 --> 00:00:04,000
In this unit, we're going to be covering what programs mean

2
00:00:04,000 --> 00:00:07,000
and especially what they mean in terms of their context,

3
00:00:07,000 --> 00:00:10,000
the environment in which they operate.

4
00:00:10,000 --> 00:00:13,000
This is called formal symantics, and while it may initially seem a bit dry,

5
00:00:13,000 --> 00:00:17,000
it's actually one of my favorite topics in computer science.

6
00:00:17,000 --> 00:00:22,000
In fact, before my research moved on to the greater glory of fixing bugs in programs,

7
00:00:22,000 --> 00:00:26,000
I started out trying to find bugs in programs,

8
00:00:26,000 --> 00:00:29,000
and one of the surprising lessons in finding bugs in programs

9
00:00:29,000 --> 00:00:34,000
is that both the program and our idea of what it should mean matter.

10
00:00:34,000 --> 00:00:38,000
All of you have probably had a bug in your code at some point or another,

11
00:00:38,000 --> 00:00:46,000
and officially a bug is really just an instance where the program's meaning is different from its specification.

12
00:00:46,000 --> 00:00:49,000
What it does do and what it should do don't agree.

13
00:00:49,000 --> 00:00:53,000
A, perhaps, surprising result is that in industrial practice

14
00:00:53,000 --> 00:00:56,000
a lot of the time the mistake is actually with the specification,

15
00:00:56,000 --> 00:00:59,000
and you've probably seen this in real life.

16
00:00:59,000 --> 00:01:01,000
A friend might've asked you to do something.

17
00:01:01,000 --> 00:01:06,000
You go and do it faithfully only to discover that that wasn't actually what the friend wanted to have happen.

18
00:01:06,000 --> 00:01:09,000
It's just what they told you to do.

19
00:01:09,000 --> 00:01:13,000
The same sort of thing comes up in bug finding and bug fixing research.

20
00:01:13,000 --> 00:01:19,000
Often the formal specification for a problem, this would never happen for the homework problems here, is vague or imprecise.

21
00:01:19,000 --> 00:01:22,000
Not enough to tell you exactly what's supposed to happen.

22
00:01:22,000 --> 00:01:27,000
Regardless of whether the problem is with the source code or the specification,

23
00:01:27,000 --> 00:01:32,000
understanding what code means in context is critical to figuring out if it's right or wrong,

24
00:01:32,000 --> 99:59:59,999
and that's what we're going to do in this unit.
