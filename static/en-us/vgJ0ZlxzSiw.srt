1
00:00:00,140 --> 00:00:01,560
In order to mine this site for the data we

2
00:00:01,560 --> 00:00:06,370
need, we need to look at how we programmatically construct requests

3
00:00:06,370 --> 00:00:08,630
in order to pull each page of data that we're

4
00:00:08,630 --> 00:00:10,920
going to need. Remember each time through, we're going to be

5
00:00:10,920 --> 00:00:15,430
passing a carrier value and an airport value. So the

6
00:00:15,430 --> 00:00:17,960
best way, I think, to do this is to use the

7
00:00:17,960 --> 00:00:21,670
browser to tell us how it makes requests to the site.

8
00:00:21,670 --> 00:00:23,290
Because the browser is obviously

9
00:00:23,290 --> 00:00:25,290
successfully making those requests and receiving

10
00:00:25,290 --> 00:00:27,880
the results. Now to do that, We can take a

11
00:00:27,880 --> 00:00:31,770
look at the network tab. Now I've just opened this so

12
00:00:31,770 --> 00:00:35,140
at this point there are no network requests captured. In

13
00:00:35,140 --> 00:00:37,600
order to get those what we're going to need to do

14
00:00:37,600 --> 00:00:42,254
is submit our request again. Now its possible when you

15
00:00:42,254 --> 00:00:44,686
do that if you've had the page open for a while

16
00:00:44,686 --> 00:00:48,014
that you'll actually get an error page instead if that's the

17
00:00:48,014 --> 00:00:50,318
case just copy this into a new tab and look it

18
00:00:50,318 --> 00:00:53,480
as if you're loading it for the first time.

19
00:00:53,480 --> 00:00:56,790
Simply trying to reload the page won't work for

20
00:00:56,790 --> 00:01:01,040
you. Alright, so let's scroll to the top here.

21
00:01:01,040 --> 00:01:03,880
And we can see right here that a post request

22
00:01:03,880 --> 00:01:06,590
was submitted. If we click on that, that will

23
00:01:06,590 --> 00:01:09,880
allow us to actually take a look at the HTTP

24
00:01:09,880 --> 00:01:12,290
that was sent across, the request itself, as it's

25
00:01:12,290 --> 00:01:15,450
encoded as HTTP, in order to retrieve this page full

26
00:01:15,450 --> 00:01:17,470
of data. This is the same page we've been

27
00:01:17,470 --> 00:01:22,118
looking at all along. Now, what I'm interested in is

28
00:01:22,118 --> 00:01:26,253
exactly what data is submitted for this particular form.

29
00:01:26,253 --> 00:01:29,103
So going back to the Network tab, what I want to

30
00:01:29,103 --> 00:01:31,653
do is scroll down until I find Form Data,

31
00:01:31,653 --> 00:01:34,503
and right away I realize that we have more work

32
00:01:34,503 --> 00:01:37,955
to do. Than we might have originally expected. This is

33
00:01:37,955 --> 00:01:40,505
a perfect example of why we want to use the

34
00:01:40,505 --> 00:01:44,071
browser to figure out how to construct our requests. To

35
00:01:44,071 --> 00:01:48,225
this point, we've been operating under the admittedly naive assumption that

36
00:01:48,225 --> 00:01:50,829
all we were going to need to submit were the carrier

37
00:01:50,829 --> 00:01:53,371
and airport as the form data in order to fetch each

38
00:01:53,371 --> 00:01:56,236
page we're interested in. But we can see right here

39
00:01:56,236 --> 00:01:59,372
that there are at least three more fields that we're going

40
00:01:59,372 --> 00:02:01,868
to need to submit, and it's not clear at all to

41
00:02:01,868 --> 00:02:05,630
us at this point where this value comes from. So that's

42
00:02:05,630 --> 00:02:07,940
more work to do for us. But this is exactly

43
00:02:07,940 --> 00:02:11,500
the type of situation that this particular class is about. In

44
00:02:11,500 --> 00:02:14,660
some sense, we're essentially bending the web to our will. This

45
00:02:14,660 --> 00:02:17,050
is where we're really getting into the meat of data wrangling.
