1
00:00:00,000 --> 00:00:03,257
So the final new parallel pattern is something called recursive parallelism,

2
00:00:03,257 --> 00:00:08,415
and this is really interesting because it lets you do stuff you literally could not easily do before.

3
00:00:08,415 --> 00:00:12,616
A recursive algorithm would be, for example, a divide and conquer kind of algorithm.

4
00:00:12,616 --> 00:00:16,586
A classic example of this is quicksort, which I think you covered in an earlier lecture,

5
00:00:16,586 --> 00:00:20,290
but it's much, much simpler and faster when you use recursion for this.

6
00:00:20,290 --> 00:00:26,103
Recursion is where you would subdivide a problem, and using the same operating kernel,

7
00:00:26,103 --> 00:00:30,999
you would apply that repeatedly to smaller and smaller subsets of data until you've solved your problem.

8
00:00:30,999 --> 00:00:34,037
We'll go into more detail on recursive algorithm later on,

9
00:00:34,037 --> 00:00:37,674
but first, let's have a look at how you program dynamic parallelism.
