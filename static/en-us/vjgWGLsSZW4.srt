1
00:00:00,080 --> 00:00:01,010
First, the files or

2
00:00:01,010 --> 00:00:05,950
the file blocks can be cached in the
client memories in their buffer cache.

3
00:00:05,950 --> 00:00:07,630
The first place where files or

4
00:00:07,630 --> 00:00:11,520
file blocks can be cached
will be the client's memory.

5
00:00:11,520 --> 00:00:12,280
As the files or

6
00:00:12,280 --> 00:00:16,200
the file blocks are brought in
from the server to the clients,

7
00:00:16,200 --> 00:00:20,070
they can be present in the client's
memory as part of their buffer cache.

8
00:00:20,070 --> 00:00:23,780
This is what regular file systems do
when they're bringing in files they're

9
00:00:23,780 --> 00:00:25,830
reading from their local discs.

10
00:00:25,830 --> 00:00:28,520
Second, the clients may
store cache components

11
00:00:28,520 --> 00:00:32,470
on their local storage devices,
hard discs, SSDs.

12
00:00:32,470 --> 00:00:36,590
It may be faster to retrieve portions
of the file from the local storage than

13
00:00:36,590 --> 00:00:39,730
to go via the network to
the remote file system.

14
00:00:39,730 --> 00:00:44,020
Finally, the file blocks can also
be cached on the server-side

15
00:00:44,020 --> 00:00:48,130
in the buffer cache in memory
on the file server machine.

16
00:00:48,130 --> 00:00:52,470
However, how useful this will be will be
the hit rate on that buffer cache will

17
00:00:52,470 --> 00:00:56,870
depend a lot on how many clients are
accessing the server at the same time,

18
00:00:56,870 --> 00:00:59,130
and how are their requests interleave.

19
00:00:59,130 --> 00:01:01,160
If there is high request interleaving,

20
00:01:01,160 --> 00:01:04,200
the buffer cache may prove
not to be very useful.

21
00:01:04,200 --> 00:01:08,220
Because there may not be much
locality among the accesses which

22
00:01:08,220 --> 00:01:10,910
are originating, in this case,
from many, many clients.
