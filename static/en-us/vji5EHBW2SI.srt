1
00:00:00,037 --> 00:00:03,100
So now you know how to enable
the email and password provider.

2
00:00:03,100 --> 00:00:05,616
Why don't you change the Android code
to allow your users to be created?

3
00:00:05,616 --> 00:00:08,347
I've sent you the login screens
I've been working on, and

4
00:00:08,347 --> 00:00:10,570
they're in a package called login.

5
00:00:10,570 --> 00:00:12,860
We plan to support two types of
login that we're going to use for

6
00:00:12,860 --> 00:00:16,200
the app, email and password,
and Google sign in.

7
00:00:16,200 --> 00:00:17,640
I'll give you a moment to look at them.

8
00:00:17,640 --> 00:00:19,400
We've got two new activities here.

9
00:00:19,400 --> 00:00:23,070
First is the LoginActivity,
which supports both email password and

10
00:00:23,070 --> 00:00:23,870
Google login.

11
00:00:23,870 --> 00:00:26,050
Second, we've got
the CreateAccountActivity.

12
00:00:26,050 --> 00:00:29,340
This creates new users with
the email password login provider.

13
00:00:29,340 --> 00:00:32,430
Now I haven't added any of the Firebase
authentication capabilities yet, so

14
00:00:32,430 --> 00:00:34,860
what I'd like you to do is
start by adding the code for

15
00:00:34,860 --> 00:00:37,290
making a new account in
the CreateAccountActivity.

16
00:00:37,290 --> 00:00:40,110
Afterall, we can't log anybody
in if they're not created.

17
00:00:40,110 --> 00:00:42,989
Here's some code that I copied over
from the Firebase documentation.

18
00:00:42,989 --> 00:00:46,240
It's basically showing you how to use
this createUser method to make a new

19
00:00:46,240 --> 00:00:48,030
user with the email password provider.

20
00:00:48,030 --> 00:00:50,060
To start you get ahold
of a Firebase reference,

21
00:00:50,060 --> 00:00:51,939
then on that reference
to call createUser,

22
00:00:51,939 --> 00:00:55,000
passing in both the email and
password that you want to associate.

23
00:00:55,000 --> 00:00:57,270
Taking a quick look at
the CreateAccountActivity,

24
00:00:57,270 --> 00:01:00,730
I've made two edit texts for you that
have this information that you need.

25
00:01:00,730 --> 00:01:03,740
The name up here is not
something that createUser takes.

26
00:01:03,740 --> 00:01:05,930
We'll discuss how to
incorporate that data in a bit.

27
00:01:05,930 --> 00:01:08,670
This third parameter is something
known as a ResultHandler.

28
00:01:08,670 --> 00:01:12,580
The ResultHandlers have two methods,
onSuccess and onError.

29
00:01:12,580 --> 00:01:15,250
And these get called depending on
whether the new user you're trying to

30
00:01:15,250 --> 00:01:20,030
create, let's say onecooldude@gmail.com,
is successfully added as a new user.

31
00:01:21,260 --> 00:01:25,366
If J.P. successfully adds himself,
the code end onSuccess is called.

32
00:01:25,366 --> 00:01:30,070
If you used ValueResultHandler like I'm
doing here, when onSuccess gets called,

33
00:01:30,070 --> 00:01:33,260
you get an extra little map of
information that contains additional

34
00:01:33,260 --> 00:01:35,100
login information for a new user.

35
00:01:35,100 --> 00:01:36,101
And just a quick note,

36
00:01:36,101 --> 00:01:38,849
when you're creating a user you
actually don't log them in.

37
00:01:38,849 --> 00:01:40,950
You have to call a separate
method to do that.

38
00:01:40,950 --> 00:01:43,140
Now, in Shopping Lists Plus Plus'
login flow,

39
00:01:43,140 --> 00:01:46,080
we don't even want to log them
in when they're on this page.

40
00:01:46,080 --> 00:01:47,880
We have a completely separate activity.

41
00:01:47,880 --> 00:01:50,449
The login activity and
that's where we log our users in.

42
00:01:50,449 --> 00:01:53,310
Now that's pretty much all you
need to know about onSuccess.

43
00:01:53,310 --> 00:01:56,510
The other method in your ResultHandler
is of course the onError method.

44
00:01:56,510 --> 00:01:58,548
And this gets called if
anything happens and

45
00:01:58,548 --> 00:02:00,870
the account is not successfully created.

46
00:02:00,870 --> 00:02:03,450
So why might JP's account
not be successfully added?

47
00:02:03,450 --> 00:02:06,450
Well there's actually a Full Error
Listing on the Firebase documentation,

48
00:02:06,450 --> 00:02:09,180
which provides some insight
in to what could go wrong.

49
00:02:09,180 --> 00:02:12,040
For example, there could already
be an account using that email.

50
00:02:12,040 --> 00:02:15,140
Or the user could have typed something
that isn't perceived as a valid email.

51
00:02:15,140 --> 00:02:16,565
To be able to know which
of these errors occurred,

52
00:02:16,565 --> 00:02:19,030
you'll need to use
the Firebase error parameter,

53
00:02:19,030 --> 00:02:21,330
which will match one of
these errors given here.

54
00:02:21,330 --> 00:02:22,740
That's the argument shown right here.

55
00:02:22,740 --> 00:02:26,320
And once you've figured out what error
occurred, let's say onecooldude was

56
00:02:26,320 --> 00:02:29,700
already taken, you might want to give a
helpful message to the user in some way.

57
00:02:29,700 --> 00:02:33,440
Okay, so can you take this more generic
code here and put it in our app so

58
00:02:33,440 --> 00:02:36,140
that when the user types
in their email and

59
00:02:36,140 --> 00:02:39,020
their password it actually
makes a new user for them?

60
00:02:39,020 --> 00:02:42,410
You'll know you're successful when you
can go to the Firebase dashboard and

61
00:02:42,410 --> 00:02:43,830
see your new account.

62
00:02:43,830 --> 00:02:46,600
So I'm here on the User Login
& Authentication page.

63
00:02:46,600 --> 00:02:48,020
And if I scroll down,

64
00:02:48,020 --> 00:02:50,260
in this area here you'll see
when new accounts get created.

65
00:02:50,260 --> 00:02:53,100
But don't worry about actually
signing in these new users,

66
00:02:53,100 --> 00:02:53,990
that's going to be our next step.
