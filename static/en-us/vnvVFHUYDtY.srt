1
00:00:00,400 --> 00:00:03,260
We use the Gradle Wrapper way back
the start of this class to run our

2
00:00:03,260 --> 00:00:04,090
first task.

3
00:00:04,090 --> 00:00:06,375
Before we had even installed Gradle.

4
00:00:06,375 --> 00:00:09,430
That's a cool party trick, but
the real strength of the wrapper

5
00:00:09,430 --> 00:00:12,390
is that you can put your build
tool under version control.

6
00:00:12,390 --> 00:00:15,520
So everyone building your project is
building it with the exact same tool.

7
00:00:16,710 --> 00:00:20,820
The Gradle Wrapper is composed of four
files, a jar, our properties file, and

8
00:00:20,820 --> 00:00:24,330
a pair of scripts, a shell script for
UNIX and Mac, and a batch script for

9
00:00:24,330 --> 00:00:25,480
Windows.

10
00:00:25,480 --> 00:00:28,710
When you pass a command to one of these
scripts, it'll first check if Gradle

11
00:00:28,710 --> 00:00:32,630
is installed, download it if necessary,
then execute your command.

12
00:00:32,630 --> 00:00:36,720
A wrapper can be created by running
the built -in wrapper task.

13
00:00:36,720 --> 00:00:38,560
Here we go, let's give it a try.

14
00:00:38,560 --> 00:00:41,630
And here we see the files of the Gradle
Wrapper, the two build scripts, and

15
00:00:41,630 --> 00:00:44,727
then inside the Gradle directory
we'll find the gradlewrapper.jar and

16
00:00:44,727 --> 00:00:46,380
the gradlewrapperdir.properties.

17
00:00:46,380 --> 00:00:48,520
We can now run our Gradle
build using the wrapper.

18
00:00:48,520 --> 00:00:51,450
We use the wrapper identically to
how we would use the Gradle command.

19
00:00:51,450 --> 00:00:52,875
Let's get our task list.

20
00:00:52,875 --> 00:00:55,920
Oops, looks like we don't have
this version of Gradle installed.

21
00:00:55,920 --> 00:00:59,270
Since this was our first time using
the wrapper, it went ahead and

22
00:00:59,270 --> 00:01:02,830
downloaded the appropriate Gradle
distribution, and cached it locally.

23
00:01:02,830 --> 00:01:05,970
We can also explicitly configure
what version of Gradle we want

24
00:01:05,970 --> 00:01:10,270
the wrapper to use by setting the Gradle
version property of the wrapper task.

25
00:01:10,270 --> 00:01:13,130
Let's change the version to 2.2 and
run the wrapper task again.

26
00:01:14,190 --> 00:01:18,200
Now if we use this new wrapper to get
the task list, it'll have to download

27
00:01:18,200 --> 00:01:21,840
Gradle again because we don't
already have version 2.2.

28
00:01:21,840 --> 00:01:26,390
If we run gradle --version to see
which we're actually using here,

29
00:01:26,390 --> 00:01:29,420
looks like we were using version
2.2 just like we asked for.

30
00:01:29,420 --> 00:01:32,420
Configuration options of
the Gradle Wrapper is stored in this

31
00:01:32,420 --> 00:01:34,260
Gradle Wrapper properties file.

32
00:01:34,260 --> 00:01:36,160
We've got it opened up down here.

33
00:01:36,160 --> 00:01:39,790
As you can see, what URL to get
Gradle from is defined here.

34
00:01:39,790 --> 00:01:44,010
Is currently using Gradle version 2.2,
just like we set from the build file.

35
00:01:44,010 --> 00:01:45,740
Let's change this back to 2.3.

36
00:01:45,740 --> 00:01:50,120
Now if we try running Gradlew version
again, we see we're back on version 2.3.

37
00:01:50,120 --> 00:01:54,520
This is a really important feature, as
it allows us to centrally control what

38
00:01:54,520 --> 00:01:57,260
version of Gradle is used
to build our project.

39
00:01:57,260 --> 00:02:00,410
In practice, the Gradle Wrapper files,
including the scripts, jar, and

40
00:02:00,410 --> 00:02:03,210
properties file,
will be committed to source control.

41
00:02:03,210 --> 00:02:05,350
This serves two main functions.

42
00:02:05,350 --> 00:02:08,280
First, it means that everything that
is needed to get up and running with

43
00:02:08,280 --> 00:02:11,820
the development of our project is
included in the source repository.

44
00:02:11,820 --> 00:02:15,020
Second, it means that the Gradle
version is also version control,

45
00:02:15,020 --> 00:02:17,910
which eliminates the possibility that
a developer encounters problems with

46
00:02:17,910 --> 00:02:20,240
the build due to using
the wrong version of Gradle.
