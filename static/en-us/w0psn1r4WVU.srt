1
00:00:00,370 --> 00:00:03,835
We've used cube maps for skyboxes and environment maps for sharp and glossy

2
00:00:03,835 --> 00:00:07,620
reflections and for refraction. It turns out we can even use this same

3
00:00:07,620 --> 00:00:10,995
mechanism for diffuse lighting. For these previous techniques we needed the

4
00:00:10,995 --> 00:00:13,920
direction to the eye and the shading normal in order to compute a reflection or

5
00:00:13,920 --> 00:00:18,840
a refraction ray. For the diffuse component, we just need the shading normal.

6
00:00:18,840 --> 00:00:22,465
Remember, the diffuse component doesn't depend on the eye's direction. We used

7
00:00:22,465 --> 00:00:25,120
the dot product between the normal and the light source vectors when we

8
00:00:25,120 --> 00:00:29,911
computed the effect of a single light on the surface, using Lambert's Law. Now

9
00:00:29,911 --> 00:00:33,689
think big. For a particular point on a surface, consider every texel in our

10
00:00:33,689 --> 00:00:37,980
environment map as a source of light, emitted or reflected. Take the dot

11
00:00:37,980 --> 00:00:40,710
product of the direction vector to each texel from the surface and compute the

12
00:00:40,710 --> 00:00:45,861
dot product with the surface normal. Add these all up. You now have the

13
00:00:45,861 --> 00:00:49,730
contribution of the entire environment map on a single location. You might

14
00:00:49,730 --> 00:00:52,160
think doing this is a bit expensive to do for every pixel we want to

15
00:00:52,160 --> 00:00:56,210
illuminate, and you'd be right. Doing this properly is a good task for path

16
00:00:56,210 --> 00:01:00,590
tracing. However, there are a few things working in our favor. First, once

17
00:01:00,590 --> 00:01:03,640
you've computed the sum of all the contributions of all the texels for one

18
00:01:03,640 --> 00:01:06,890
point on one surface, you've actually computed it for all points with the same

19
00:01:06,890 --> 00:01:11,533
normal direction. Remember that the environment map is infinitely far away, so

20
00:01:11,533 --> 00:01:15,580
what's true for one surface normal is true for them all. The other element

21
00:01:15,580 --> 00:01:18,060
working in our favor is that a cube map can be used to store the results of our

22
00:01:18,060 --> 00:01:21,970
computations. After we compute the sum of all the contributions for a given

23
00:01:21,970 --> 00:01:25,220
normal, we then simply store this value directly at that location, in the cube

24
00:01:25,220 --> 00:01:30,788
map texture. This texture is called the diffuse environment map, or irradiance

25
00:01:30,788 --> 00:01:35,172
map. Now when we want to sum total lighting for the surrounding environment for

26
00:01:35,172 --> 00:01:39,214
a given normal, we can just look it up on the cube map. One other advantage

27
00:01:39,214 --> 00:01:42,386
that we have is that the diffuse map can be quite low resolution while this

28
00:01:42,386 --> 00:01:45,714
original sharp environment map had cube faces that were 512 by 512 texels and

29
00:01:45,714 --> 00:01:51,425
our gloss map was 128 squared. The diffuse map is only usable at only 32 by 32

30
00:01:51,425 --> 00:01:55,773
texels. Nonetheless, it can be expensive to compute the diffuse map, so what we

31
00:01:55,773 --> 00:01:59,738
do is the same as for the glossy map. We compute the texture in advance with

32
00:01:59,738 --> 00:02:03,130
some image processing software. This gives us the texture we need to light the

33
00:02:03,130 --> 00:02:06,457
scene. During rendering, we just use the shading normal to find the overall

34
00:02:06,457 --> 00:02:09,800
contribution of the environment's lighting to the surface fragment.
