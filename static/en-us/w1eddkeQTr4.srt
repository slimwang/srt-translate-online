1
00:00:00,001 --> 00:00:03,882
All right, let's recap what we've
learned so far about strings.

2
00:00:03,882 --> 00:00:07,591
We started out by talking about
what a string is composed of,

3
00:00:07,591 --> 00:00:11,023
and we saw how to define
a string using a string literal.

4
00:00:11,023 --> 00:00:15,029
Use letter var the way you would with
any other constant or variable, and

5
00:00:15,029 --> 00:00:18,194
then type your string,
literal in between quotations.

6
00:00:18,194 --> 00:00:22,292
We also learned that Swift strings
are coded with uni code scalers.

7
00:00:22,292 --> 00:00:26,657
For this reason, we're able to
incorporate an uni code character in to

8
00:00:26,657 --> 00:00:28,780
a Swift string including emojis.

9
00:00:28,780 --> 00:00:32,368
Letâ€™s make two strings similar
to those above, but this time,

10
00:00:32,368 --> 00:00:35,102
use the monkey emoji and
the mobile phone emoji.

11
00:00:35,102 --> 00:00:38,865
Remember, to access the emoji
keyboard in playgrounds,

12
00:00:38,865 --> 00:00:41,333
you can press Ctrl+Cmd+spacebar.

13
00:00:41,333 --> 00:00:45,132
We also learned that the strings
in Swift are encoded in a struct.

14
00:00:45,132 --> 00:00:48,762
And the characters of a string can be
accessed through the characters property

15
00:00:48,762 --> 00:00:50,302
belonging to the string struct.

16
00:00:50,302 --> 00:00:54,773
For example, let's say we wanted to
count how many g's are in this string.

17
00:00:54,773 --> 00:00:59,245
We could loop though all the characters
in this string using the character's

18
00:00:59,245 --> 00:01:03,043
property like so and increment
a count each time we encounter a g.

19
00:01:03,043 --> 00:01:06,025
And then if we type count
into playground, and

20
00:01:06,025 --> 00:01:09,860
look over in the sidebar,
we can see that our count is five.

21
00:01:09,860 --> 00:01:14,043
String interpolation is another
incredibly convenient feature of Swift

22
00:01:14,043 --> 00:01:14,653
strings.

23
00:01:14,653 --> 00:01:15,891
Here's an example.

24
00:01:15,891 --> 00:01:20,189
Let's say we have to convert from an
integer representing number of pennies

25
00:01:20,189 --> 00:01:22,751
to a string representing dollars and
cents.

26
00:01:22,751 --> 00:01:31,013
We can use string interpolation along
with operators to get our solution.

27
00:01:31,013 --> 00:01:32,808
We can calculate the number of
dollars by dividing by 100, and

28
00:01:32,808 --> 00:01:34,711
we can calculate the number of
cents by taking the modular of 100.

29
00:01:34,711 --> 00:01:38,947
Then, through string interpolation,
we can take this variable,

30
00:01:38,947 --> 00:01:43,572
dollarInt, along with this expression,
and insert them into a string.

31
00:01:43,572 --> 00:01:47,563
And you can see that string
here in the sidebar.

32
00:01:47,563 --> 00:01:50,881
We looked at some common string
manipulations starting with string

33
00:01:50,881 --> 00:01:51,762
concatenation.

34
00:01:51,762 --> 00:01:56,429
For example, we can combine our monkey
string and our thief string to make

35
00:01:56,429 --> 00:01:59,903
a very short story about
a monkey with sticky fingers.

36
00:01:59,903 --> 00:02:03,045
We also learned that the swift
string struct is also

37
00:02:03,045 --> 00:02:05,903
bridged to the NS string
class in objective C.

38
00:02:05,903 --> 00:02:10,264
This opens a host of useful methods
including contained string,

39
00:02:10,264 --> 00:02:14,083
string by replacing the current string,
and lots more.

40
00:02:14,083 --> 00:02:16,693
Let's look at those
methods one more time.

41
00:02:16,693 --> 00:02:20,917
Here, we're calling the method
containsString on the variable

42
00:02:20,917 --> 00:02:24,692
monkeyString, and
we're passing in key as a parameter.

43
00:02:24,692 --> 00:02:28,861
By doing this, we're asking if the
monkeyString contains the string key.

44
00:02:28,861 --> 00:02:33,132
And over here on the sidebar,
we can see that the method returns true.

45
00:02:33,132 --> 00:02:34,572
Here's another one.

46
00:02:34,572 --> 00:02:37,254
Let's say our WiFi
password is meet me in St.

47
00:02:37,254 --> 00:02:39,522
Louis but we need to switch it up a bit.

48
00:02:39,522 --> 00:02:43,558
Let's replace all the e's with
3's using the NSString method,

49
00:02:43,558 --> 00:02:46,306
stringByReplacingOccurrencesOfString.

50
00:02:46,306 --> 00:02:50,465
And what you're looking at here is
the variable name followed by the dot

51
00:02:50,465 --> 00:02:53,667
operator
stringByReplacingOccurrencesOfString.

52
00:02:53,667 --> 00:02:57,739
And then the parameters we're passing in
are the string we want to replace and

53
00:02:57,739 --> 00:02:59,126
the replacement string.

54
00:02:59,126 --> 00:03:01,520
And over here in the sidebar,
we can see the result.
