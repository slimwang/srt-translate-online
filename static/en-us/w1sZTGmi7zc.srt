1
00:00:00,400 --> 00:00:04,059
The first solution is acceptable, for the most part. It solves the problem of

2
00:00:04,059 --> 00:00:08,670
two surfaces being in the same location. However, it does change the geometry

3
00:00:08,670 --> 00:00:13,320
of the model, which might not be acceptable. also, even surfaces that are near

4
00:00:13,320 --> 00:00:17,270
each other can still have Z-fighting problems, since the Z buffer has limits on

5
00:00:17,270 --> 00:00:21,700
its precision. So, this solution works, but it's not optimal. The second

6
00:00:21,700 --> 00:00:25,770
solution sounds nice. A new graphics card is always fun, but it doesn't help at

7
00:00:25,770 --> 00:00:30,350
all. Since both surfaces are in an identical location, which one happens to be

8
00:00:30,350 --> 00:00:35,610
closer is entirely arbitrary. Another GPU can and will give you a different

9
00:00:35,610 --> 00:00:39,610
view of Z-fighting. So if you like the Z-fighting effect, you can control it if

10
00:00:39,610 --> 00:00:43,610
your users are on different machines with different GPUs. The third answer is

11
00:00:43,610 --> 00:00:46,160
switching to another is switching to another rendering algorithm, again, will

12
00:00:46,160 --> 00:00:50,040
just cause different precision errors to show up. The underlying problem of two

13
00:00:50,040 --> 00:00:53,980
surfaces being in the same place is a modeling error and can't be solved by

14
00:00:53,980 --> 00:00:58,080
rendering. The forth answer, removing the bottom part of the leg that overlaps

15
00:00:58,080 --> 00:01:01,950
with the foot, is certainly the cleanest solution. This is also the most

16
00:01:01,950 --> 00:01:06,160
efficient answer, as making the object smaller will mean it covers less pixels

17
00:01:06,160 --> 00:01:07,630
and so causes less work.
