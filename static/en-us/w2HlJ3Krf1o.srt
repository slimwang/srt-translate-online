1
00:00:00,250 --> 00:00:02,940
All right, let's see how we did.

2
00:00:02,940 --> 00:00:08,452
If you checked record ID, weather
condition ID, minimum temperature,

3
00:00:08,452 --> 00:00:13,003
wind speed, humidity,
maximum temperature,

4
00:00:13,003 --> 00:00:16,920
date, weather direction and
pressure, you've got this right.

5
00:00:16,920 --> 00:00:19,910
Now technically,
one could have included either date or

6
00:00:19,910 --> 00:00:23,040
time, as time includes date.

7
00:00:23,040 --> 00:00:25,250
Month doesn't really
make any sense here.

8
00:00:25,250 --> 00:00:28,900
But since we're really displaying the
date, it makes sense for the database to

9
00:00:28,900 --> 00:00:32,540
actually replicate what's on
the display as much as possible.

10
00:00:32,540 --> 00:00:35,640
Units should be stored in
a separate table with preferences.

11
00:00:35,640 --> 00:00:38,800
There's no reason to store things
we aren't displaying, such as,

12
00:00:38,800 --> 00:00:41,790
you know, rainfall or
average temperature.

13
00:00:41,790 --> 00:00:45,560
And besides, we cannot get these
from the OpenWeatherMap API.

14
00:00:45,560 --> 00:00:48,820
We do need weather condition ID,
since we use this to

15
00:00:48,820 --> 00:00:52,850
both display the forecast, and
determine the image to display.

16
00:00:52,850 --> 00:00:56,100
And finally,
while it's not displayed in our UI,

17
00:00:56,100 --> 00:00:59,140
we need an ID column to
uniquely identify each row.

18
00:01:00,260 --> 00:01:02,440
As discussed, it's required for

19
00:01:02,440 --> 00:01:06,410
all SQLI database tables that are going
to be displayed in Android list views.
