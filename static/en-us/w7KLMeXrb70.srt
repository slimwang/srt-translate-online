1
00:00:00,210 --> 00:00:03,240
So let's see an example of
when does it really matter.

2
00:00:03,240 --> 00:00:06,810
Let's look at the multiprocessor
that has coherent memory but

3
00:00:06,810 --> 00:00:08,620
out of order cores.

4
00:00:08,620 --> 00:00:12,100
And specifically the core
can predict the branch and

5
00:00:12,100 --> 00:00:15,540
later verify that it was taken or
not taken correctly.

6
00:00:15,540 --> 00:00:19,610
The store instructions in each core
are done strictly in program order, so

7
00:00:19,610 --> 00:00:21,800
it doesn't reorder any stores.

8
00:00:21,800 --> 00:00:25,910
But the loads between store instructions
can be reordered on a core.

9
00:00:25,910 --> 00:00:31,330
Now let's say that we have CORE 1 and
CORE 2 where CORE 1 executes

10
00:00:31,330 --> 00:00:37,550
the following code while a flag is zero,
it waits, and then it prints the data.

11
00:00:37,550 --> 00:00:42,320
While CORE 2 writes ten to data,
then increments

12
00:00:42,320 --> 00:00:47,380
data by five then sets the flag and
let's say that both flag and

13
00:00:47,380 --> 00:00:51,540
data are zero initially before
CORE 2 gets to change them.

14
00:00:51,540 --> 00:00:54,580
So now CORE 1 when it prints the data,

15
00:00:54,580 --> 00:00:56,890
what are the values that
it can possibly print?

16
00:00:59,230 --> 00:01:01,240
Can it print zero?

17
00:01:01,240 --> 00:01:02,076
Can it print five?

18
00:01:02,076 --> 00:01:03,240
Can it print ten?

19
00:01:03,240 --> 00:01:06,980
Can it print 15, and
can it print anything else?
