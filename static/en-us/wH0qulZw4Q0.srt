1
00:00:00,200 --> 00:00:04,210
And finally, let's talk about Raid 5,
which uses a technique

2
00:00:04,210 --> 00:00:08,508
called distributed block-interleaved
parity to protect the disks.

3
00:00:08,508 --> 00:00:13,300
It does block-interleaved
parity just like Raid 4, but

4
00:00:13,300 --> 00:00:18,740
its parity is not all on the same disk,
it is spread among all the disks.

5
00:00:18,740 --> 00:00:22,908
So when we have four disks,
the first set of stripes,

6
00:00:22,908 --> 00:00:26,810
in Raid 5,
will be exactly the same as in RAID 4.

7
00:00:26,810 --> 00:00:30,960
There will be 3 stripes of
data on the first 3 disks.

8
00:00:30,960 --> 00:00:33,810
And the parity for these stripes.

9
00:00:33,810 --> 00:00:39,970
Which is computed by XORing the data
bit by bit In the three stripes,

10
00:00:39,970 --> 00:00:44,310
and the resulting parity stripe
is written to the fourth disk.

11
00:00:44,310 --> 00:00:49,010
But Raid 4 would do the same thing and
put the next parity here as well.

12
00:00:49,010 --> 00:00:56,470
In contrast, Raid 5 puts the next parity
strip not here, but on the next disk.

13
00:00:56,470 --> 00:01:02,140
So we get 3 data stripes on these
disks now and their parity is here.

14
00:01:02,140 --> 00:01:06,182
Then for the next set of stripes we
again move the parity to another

15
00:01:06,182 --> 00:01:10,370
disk and then for the next set of
stripes the parity moves again, and

16
00:01:10,370 --> 00:01:14,800
then for the next set of stripes
the parity would again be here.

17
00:01:14,800 --> 00:01:15,790
And so on.

18
00:01:15,790 --> 00:01:20,459
So as you can see,
the block-interleaved parity,

19
00:01:20,459 --> 00:01:24,913
what it really does is it
gets the parity here, and

20
00:01:24,913 --> 00:01:28,760
then here, and then here, and then here.

21
00:01:28,760 --> 00:01:30,430
And then again, here.

22
00:01:30,430 --> 00:01:34,480
So each of the disks will get
its fair share of parity.

23
00:01:34,480 --> 00:01:36,930
But for each set of stripes,

24
00:01:36,930 --> 00:01:40,590
we will have three stripes in
this case in the parity block.

25
00:01:40,590 --> 00:01:46,110
It's just that the max set of four will
have a parity in a different place.

26
00:01:46,110 --> 00:01:51,100
So what we get is the read performance
where all four disks can actually

27
00:01:51,100 --> 00:01:56,520
be used for reading data, and we get
N times the throughput of one disk.

28
00:01:56,520 --> 00:01:59,720
Remember that rate four was
getting N minus one times

29
00:01:59,720 --> 00:02:04,880
the throughput of one disk, because one
of the disks was not used for data.

30
00:02:04,880 --> 00:02:07,950
Here the data is spread
over all four disks.

31
00:02:07,950 --> 00:02:10,949
So chances are of all
the blocks we want to read

32
00:02:10,949 --> 00:02:15,500
they will be equally distributed
among the four disks in this case.

33
00:02:15,500 --> 00:02:20,250
Write performance is still
affected by having to read and

34
00:02:20,250 --> 00:02:22,150
then write the data in the parity.

35
00:02:23,290 --> 00:02:27,030
So a single write results
in four accesses.

36
00:02:27,030 --> 00:02:30,760
If you remember, we will read
the data block in the parity and

37
00:02:30,760 --> 00:02:33,240
then we would write the data
block in the parities.

38
00:02:33,240 --> 00:02:38,630
So there are four accesses per write but
they're distributed among all the disks.

39
00:02:38,630 --> 00:02:44,290
So we get N over four times
the throughput of one disk.

40
00:02:44,290 --> 00:02:48,220
In this case we have four disks so
right performance

41
00:02:48,220 --> 00:02:52,630
is equal to the throughput of one of
the disks if it was used without RAID.

42
00:02:52,630 --> 00:02:54,150
Remember that in RAID 4,

43
00:02:54,150 --> 00:02:59,880
our write performance is always limited
to half the throughput of one disk.

44
00:02:59,880 --> 00:03:02,690
In this case it would be

45
00:03:02,690 --> 00:03:06,040
half of the performance of one disk
versus the full performance of one disk.

46
00:03:06,040 --> 00:03:07,380
So we win.

47
00:03:07,380 --> 00:03:09,850
If we had for example eight disks,

48
00:03:09,850 --> 00:03:14,620
here we would get twice the throughput
of one disk, with RAID four,

49
00:03:14,620 --> 00:03:18,300
the eight disks would still
have a single parity disk and

50
00:03:18,300 --> 00:03:22,810
the write performance would still be
half the throughput of that one disk.

51
00:03:22,810 --> 00:03:27,290
And the reliability of RAID
5 Be the same as RAID 4.

52
00:03:27,290 --> 00:03:31,240
This fails if we lose
more than one disk.

53
00:03:31,240 --> 00:03:35,188
Just like in RAID 4,
in any group of four stripes here,

54
00:03:35,188 --> 00:03:37,550
we could lose one of the disks.

55
00:03:37,550 --> 00:03:41,780
If we lose the parity disk,
we can still read everything and write.

56
00:03:41,780 --> 00:03:46,690
If we lose a data disk, we can
reconstruct the data using the parity.

57
00:03:46,690 --> 00:03:51,260
Here, any one of the disks play
the role of a data disk in some

58
00:03:51,260 --> 00:03:56,670
group of stripes and play the role of
a parity disk in some groups of stripes.

59
00:03:56,670 --> 00:04:00,680
So all groups of stripes are still
usable after we lose only one disk.

60
00:04:00,680 --> 00:04:03,860
If we lose two disks, however,
then we have a problem.
