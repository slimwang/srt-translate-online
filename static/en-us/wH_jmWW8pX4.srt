1
00:00:00,710 --> 00:00:03,110
Let's begin with network communications.

2
00:00:03,110 --> 00:00:05,920
Obviously, if you have a distributed application the pieces of

3
00:00:05,920 --> 00:00:10,080
the application have to be connected together over some kind of network.

4
00:00:10,080 --> 00:00:13,430
Some of the issues that arise in dealing with applications that

5
00:00:13,430 --> 00:00:17,110
are split across a network are how are errors handled.

6
00:00:17,110 --> 00:00:21,390
And there a variety of different kinds of errors that might arise.

7
00:00:21,390 --> 00:00:22,720
There are synchronous errors.

8
00:00:22,720 --> 00:00:25,950
That is, when a particular request is made, and

9
00:00:25,950 --> 00:00:28,070
part of a system awaits a response.

10
00:00:28,070 --> 00:00:29,250
Or asynchronous errors.

11
00:00:29,250 --> 00:00:33,090
That is spontaneous issuing of some kind of

12
00:00:33,090 --> 00:00:37,260
notification that the rest of the system has to respond to.

13
00:00:37,260 --> 00:00:42,750
Primary concern here is reliable delivery of these messages,

14
00:00:42,750 --> 00:00:44,700
particularly the error messages.

15
00:00:44,700 --> 00:00:49,160
If the network itself is unreliable, various strategies such as delivering more

16
00:00:49,160 --> 00:00:54,950
than once can be employed, but then again, you don't want to have more than one

17
00:00:56,710 --> 00:01:00,290
actual copy of a message received and, and acted upon.

18
00:01:01,330 --> 00:01:03,720
And communicating across the network,

19
00:01:03,720 --> 00:01:07,140
another issue relates to how the data is represented.

20
00:01:09,200 --> 00:01:10,370
It may well be the case,

21
00:01:10,370 --> 00:01:14,510
because we're in a heterogeneous situation, that the different machine and

22
00:01:14,510 --> 00:01:16,940
the different machines represent data in different ways.

23
00:01:17,970 --> 00:01:21,079
And then third is the whole question of transaction.

24
00:01:22,130 --> 00:01:27,020
If there's a database involved, it may well be the case

25
00:01:27,020 --> 00:01:33,381
that of the multiple users which might be using the application, one user

26
00:01:33,381 --> 00:01:38,270
is updating the database at the same time another user is reading the database.

27
00:01:38,270 --> 00:01:42,720
And there's the potential for the receipt of information that is not up

28
00:01:42,720 --> 00:01:44,870
to date with respect to the, the database.
