1
00:00:00,008 --> 00:00:05,960
In is vowel, we want to return true if letters.substring equals a or e or i or

2
00:00:05,960 --> 00:00:13,869
o, so we add those comparisons using or. So, it would look like this. I had to

3
00:00:13,869 --> 00:00:18,419
type letters dot substring a whole bunch of times maybe I should have made that

4
00:00:18,419 --> 00:00:24,018
a variable. And then, every word I used letters.substring i to i plus 1, I

5
00:00:24,018 --> 00:00:29,733
could replace them with letter. That looks a lot better now for is consonant a

6
00:00:29,733 --> 00:00:35,151
letter is a consonant if its not a vowel. So, I can take a shortcut here and

7
00:00:35,151 --> 00:00:40,712
just return not is vowel for the given index. I don't need to tell it that it's

8
00:00:40,712 --> 00:00:45,934
an int. And I didn't actually initialize letter. If I want to test my method, I

9
00:00:45,934 --> 00:00:51,390
can make a new word. I'll fill it with sleep. And now, if I ask if the first

10
00:00:51,390 --> 00:00:55,545
letter is a vowel, I get that it's not because it's an s. If I ask if it's a

11
00:00:55,545 --> 00:00:59,325
consonant, I get true. I would probably want to test a couple more cases if I

12
00:00:59,325 --> 00:01:05,703
was going to ship this code to somebody. But, this looks like it's working for

13
00:01:05,703 --> 00:01:07,114
now.
