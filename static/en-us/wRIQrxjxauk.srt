1
00:00:00,200 --> 00:00:02,360
Given that encryption or

2
00:00:02,360 --> 00:00:07,090
cryptography in general, plays such
an essential role in security, we can

3
00:00:07,090 --> 00:00:12,110
only expect that attackers will always
try to break an encryption scheme.

4
00:00:12,110 --> 00:00:15,930
Typically, the goal of such
an attack is to uncover

5
00:00:15,930 --> 00:00:21,020
the plaintext from the ciphertext or
to discover the encryption key.

6
00:00:21,020 --> 00:00:25,330
For example, an attacker may
try to recover the plaintext

7
00:00:25,330 --> 00:00:28,240
from the ciphertext that is
transmitted on the Internet.

8
00:00:28,240 --> 00:00:31,780
And you may ask,
how can the attacker obtain such

9
00:00:31,780 --> 00:00:33,900
ciphertext that's
transmitted on the Internet?

10
00:00:33,900 --> 00:00:38,520
The answer is, actually this is
very feasible because an attacker

11
00:00:38,520 --> 00:00:42,110
can use a packet capturing tool
to capture the traffic, and

12
00:00:42,110 --> 00:00:45,200
then extract the ciphertext
in the traffic.

13
00:00:45,200 --> 00:00:46,220
And then from there,

14
00:00:46,220 --> 00:00:50,950
the attacker can attempt to recover the
plaintext from the captured ciphertext.

15
00:00:50,950 --> 00:00:53,990
So as a rule of thumb,
we should always assume that

16
00:00:53,990 --> 00:00:58,860
the ciphertext that we transmit over the
Internet can be captured by an attacker.

17
00:00:58,860 --> 00:01:03,050
Alternatively, the attacker may try
to discover the encryption key, so

18
00:01:03,050 --> 00:01:07,320
that he can then decrypt all
the data encrypted using this key.

19
00:01:07,320 --> 00:01:09,360
That are several attack methods.

20
00:01:09,360 --> 00:01:11,200
The first simplest and yet

21
00:01:11,200 --> 00:01:16,350
the most inefficient way is to use
brute-force, or to search blindly.

22
00:01:16,350 --> 00:01:20,675
For example, an attacker can try
all possible keys, one by one,

23
00:01:20,675 --> 00:01:25,375
until the one that can decrypt
the ciphertext properly into plaintext.

24
00:01:25,375 --> 00:01:29,455
And you may ask, how does the attacker
know that the decryption with a key

25
00:01:29,455 --> 00:01:30,665
has worked properly?

26
00:01:30,665 --> 00:01:34,365
Typically, the attacker knows what
the plaintext should look like.

27
00:01:34,365 --> 00:01:38,815
For example, if the plaintext is an
English sentence, then only the correct

28
00:01:38,815 --> 00:01:43,750
key can decrypt the ciphertext into
data that can be read as English.

29
00:01:43,750 --> 00:01:48,900
This method is very inefficient because
the number of possible keys can be huge,

30
00:01:48,900 --> 00:01:53,220
and so brute-force or search blindly
can take a long time to succeed.

31
00:01:53,220 --> 00:01:56,090
Another approach is
to use cryptanalysis.

32
00:01:56,090 --> 00:01:59,940
Here, a attacker has some knowledge
of the encryption algorithm and

33
00:01:59,940 --> 00:02:03,250
perhaps the characteristics of data,
such as,

34
00:02:03,250 --> 00:02:05,840
distribution of certain letters or
words.

35
00:02:05,840 --> 00:02:09,008
With such knowledge,
the attacker can do a lot better

36
00:02:09,008 --> 00:02:12,940
than using brute-force to
search the entire key space.

37
00:02:12,940 --> 00:02:17,320
Attackers can also exploit
implementation or system's issues.

38
00:02:17,320 --> 00:02:21,570
For example, it was shown that by
using side channel analysis, for

39
00:02:21,570 --> 00:02:25,910
example, by observing the power
consumption used by a crypto system,

40
00:02:25,910 --> 00:02:30,390
an attacker can deduce values of
certain bits of key, and therefore

41
00:02:30,390 --> 00:02:35,250
the attacker can significantly decrease
the key space that he needs to search.

42
00:02:35,250 --> 00:02:39,790
Finally, let's not forget that
the weakest link in security

43
00:02:39,790 --> 00:02:41,460
is the naive users.

44
00:02:41,460 --> 00:02:44,490
And they can be exploited using
social engineering tricks.

45
00:02:44,490 --> 00:02:49,880
For example, an attacker can pretend
to be a sysadmin who has just forgotten

46
00:02:49,880 --> 00:02:55,260
the key, and he called an unsuspected
user for the encryption key to a system.
