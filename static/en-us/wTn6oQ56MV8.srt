1
00:00:00,000 --> 00:00:02,000
This notion of variables having different

2
00:00:02,000 --> 00:00:04,000
values and different contexts

3
00:00:04,000 --> 00:00:06,000
is sometimes called scope.

4
00:00:06,000 --> 00:00:08,000
There's some sort of global scope that

5
00:00:08,000 --> 00:00:10,000
we start in where we're assigning values to variables,

6
00:00:10,000 --> 00:00:12,000
but then inside myfun,

7
00:00:12,000 --> 00:00:15,000
there's a new x that has a new value,

8
00:00:15,000 --> 00:00:17,000
and what this means is that our environment

9
00:00:17,000 --> 00:00:20,000
cannot be a flat mapping.

10
00:00:20,000 --> 00:00:22,000
We had hoped before that we'd be able to use

11
00:00:22,000 --> 00:00:24,000
a single Python dictionary,

12
00:00:24,000 --> 00:00:26,000
but this myfun example shows that that's

13
00:00:26,000 --> 00:00:29,000
really not going to cut it because in a single dictionary,

14
00:00:29,000 --> 00:00:31,000
you can only have x bind to 1 thing,

15
00:00:31,000 --> 00:00:34,000
and we need to know that x is sometimes

16
00:00:34,000 --> 00:00:36,000
outside x and sometimes os lasiandras.

17
00:00:36,000 --> 00:00:40,000
Let's get some practice with these concepts with another quiz.

18
00:00:40,000 --> 00:00:42,000
This one explicitly on scoping,

19
00:00:42,000 --> 00:00:44,000
and we'll do it together in the interpreter.

20
00:00:44,000 --> 00:00:46,000
So we have x gets outside x and

21
00:00:46,000 --> 00:00:48,000
y gets outside y just like before.

22
00:00:48,000 --> 00:00:50,000
So I've written out this program,

23
00:00:50,000 --> 00:00:52,000
and it's a little more complicated than last time.

24
00:00:52,000 --> 00:00:56,000
It has 2 functions, funone and funtwo,

25
00:00:56,000 --> 00:00:58,000
my phenomenal cosmic naming scheme,

26
00:00:58,000 --> 00:01:00,000
with a few printouts.

27
00:01:00,000 --> 00:01:02,000
X starts out as outside x.

28
00:01:02,000 --> 00:01:04,000
Y starts out as outside y.

29
00:01:04,000 --> 00:01:06,000
When we enter function 1,

30
00:01:06,000 --> 00:01:09,000
we print out current value of x in scope,

31
00:01:09,000 --> 00:01:12,000
the current value of y in scope, and then we call function 2.

32
00:01:12,000 --> 00:01:18,000
Function 2 also prints out its value of x and its value of y,

33
00:01:18,000 --> 00:01:20,000
and down here we get the ball rolling by calling

34
00:01:20,000 --> 00:01:23,000
function 1 on Hong Kong in 1997.

35
00:01:23,000 --> 00:01:27,000
So the quiz for you is to fill in these blanks,

36
00:01:27,000 --> 00:01:30,000
the 3 formal parameter declarations,

37
00:01:30,000 --> 00:01:33,000
2 for funone and 1 for funtwo,

38
00:01:33,000 --> 00:01:36,000
but you can only use x, y, and z.

39
00:01:36,000 --> 00:01:38,000
So for each one of these blanks, fill it in with

40
00:01:38,000 --> 00:01:41,000
either x or y or z, and that's it.

41
00:01:41,000 --> 00:01:44,000
In order to make the output of this program,

42
00:01:44,000 --> 00:01:47,000
match exactly what we see down here,

43
00:01:47,000 --> 00:01:50,000
funone x Hong Kong, funone y outside y,

44
00:01:50,000 --> 00:01:54,000
funtwo x outside x, funtwo y funone y.

45
00:01:54,000 --> 99:59:59,999
This is a bit of a puzzle, try it out.
