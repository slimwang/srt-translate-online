1
00:00:00,510 --> 00:00:02,570
Let's Google search for how to do this.

2
00:00:02,570 --> 00:00:05,280
I'm going to type in how to
scroll in an android app.

3
00:00:06,450 --> 00:00:08,240
Let's check out the first result.

4
00:00:08,240 --> 00:00:11,220
The question is, how to make
my layout able to scroll down?

5
00:00:11,220 --> 00:00:13,570
That's pretty similar to what we want.

6
00:00:13,570 --> 00:00:16,425
I skip down to the answer part and
this has a green check mark and

7
00:00:16,425 --> 00:00:17,825
lots of up votes.

8
00:00:17,825 --> 00:00:20,285
So this could be a good answer.

9
00:00:20,285 --> 00:00:22,901
It says, just wrap all of
that inside a ScrollView.

10
00:00:22,901 --> 00:00:26,045
And then it has an example, ScrollView,

11
00:00:26,045 --> 00:00:28,695
and then it specifies name space and
then it says.

12
00:00:28,695 --> 00:00:33,720
Fill_parent for width and height, and
then it has an ending tag here, and

13
00:00:33,720 --> 00:00:38,570
in this comment it says, put the rest
of your current view inside of it.

14
00:00:39,580 --> 00:00:42,710
For background knowledge, fill_parent
is actually the same as match_parent.

15
00:00:42,710 --> 00:00:45,860
It's just an older version of it,
but they mean the same thing.

16
00:00:45,860 --> 00:00:50,590
On this next line it says that
ScrollView can contain just one item.

17
00:00:50,590 --> 00:00:53,150
It looks like this was
someone's original layout, and

18
00:00:53,150 --> 00:00:55,740
then to put inside of
scroll view then they just

19
00:00:55,740 --> 00:01:00,060
made scroll view be the parent view and
the linear layout be the child's view.

20
00:01:00,060 --> 00:01:02,520
Okay that was a helpful response so
let's go back and

21
00:01:02,520 --> 00:01:04,250
see if there's any other solutions.

22
00:01:07,020 --> 00:01:09,160
This person is describing
the same thing.

23
00:01:09,160 --> 00:01:14,450
They have XML lay out and
I think they want to make it scroll.

24
00:01:14,450 --> 00:01:16,865
Usually, I don't read
the full question in detail.

25
00:01:16,865 --> 00:01:18,660
I just get to the answer part.

26
00:01:18,660 --> 00:01:19,930
This person says,

27
00:01:19,930 --> 00:01:23,340
have you tried to include all of
your XML into a parent ScrollView?

28
00:01:23,340 --> 00:01:25,880
And then they give an example
of ScrollView, and

29
00:01:25,880 --> 00:01:28,370
then the child is a RelativeLayout.

30
00:01:28,370 --> 00:01:31,430
And then they have a closing tag for
ScrollView.

31
00:01:31,430 --> 00:01:34,030
That's all they have in this thread.

32
00:01:34,030 --> 00:01:37,850
But it looks like the two search results
here gave the same advice of using

33
00:01:37,850 --> 00:01:39,190
a ScrollView.

34
00:01:39,190 --> 00:01:44,110
So let's change our search query
to search for ScrollView android.

35
00:01:44,110 --> 00:01:47,500
Awesome.
So it is a view in Android.

36
00:01:47,500 --> 00:01:50,480
And there's a description here.

37
00:01:50,480 --> 00:01:53,180
There's a lot of text here, so
I'm going to skip reading it, but

38
00:01:53,180 --> 00:01:54,405
if you want to skim it, you can.

39
00:01:54,405 --> 00:01:56,570
Then I'm going to hit Back.

40
00:01:56,570 --> 00:01:58,860
I prefer looking for a code example.

41
00:01:58,860 --> 00:02:01,590
So, the code examples that
we had earlier were good,

42
00:02:01,590 --> 00:02:03,950
and this one is good as well.

43
00:02:03,950 --> 00:02:05,240
So let's go back to Android Studio.

44
00:02:06,270 --> 00:02:09,880
All of those XML examples
started with ScrollView.

45
00:02:09,880 --> 00:02:12,740
Immediately there's an error that says
I don't have the required width and

46
00:02:12,740 --> 00:02:13,990
height of the view.

47
00:02:13,990 --> 00:02:17,705
So, I just added those in and
specified them to be match_parent.

48
00:02:18,780 --> 00:02:22,390
If I add a closing bracket, then I
immediately get the closing tag here.

49
00:02:22,390 --> 00:02:23,974
So, I'm going to copy that and

50
00:02:23,974 --> 00:02:29,860
then paste it at the bottom
of this file down here.

51
00:02:31,372 --> 00:02:36,240
That means the existing linear layout
is now a child of this ScrollView.

52
00:02:36,240 --> 00:02:41,250
I'm going to select all of this and
then try to indent it by four spaces, so

53
00:02:41,250 --> 00:02:43,624
it's easier to read as
a child of this ScrollView.

54
00:02:44,790 --> 00:02:48,850
In Android Studio, if I click on the
Edit menu, I can go to Indent Selection,

55
00:02:48,850 --> 00:02:51,830
and that will indent it
over by four spaces.

56
00:02:51,830 --> 00:02:53,270
There.
Now that looks better.

57
00:02:54,280 --> 00:02:55,350
Oh, but I still have an error here.

58
00:02:55,350 --> 00:02:59,090
It says,
namespace 'android' is not bound.

59
00:02:59,090 --> 00:03:00,280
I can click for more information.

60
00:03:00,280 --> 00:03:06,150
It says, this inspection checks for
unbound namespace prefixes in XML.

61
00:03:06,150 --> 00:03:08,315
If you remember way back in lesson one,

62
00:03:08,315 --> 00:03:11,866
I said that Android colon comes
from this name space right here.

63
00:03:11,866 --> 00:03:16,040
So I think we need to copy this and
then put it up here.

64
00:03:16,040 --> 00:03:20,940
You should also move
the tools name space up here.

65
00:03:20,940 --> 00:03:24,570
The tools name space is to provide
additional attributes that you can add

66
00:03:24,570 --> 00:03:28,110
to your XML to help you debug and
build your app.

67
00:03:28,110 --> 00:03:30,530
Okay, I'm going to run
this on my device now.

68
00:03:30,530 --> 00:03:34,755
Okay, there's no visible difference
to the app because there's not enough

69
00:03:34,755 --> 00:03:37,950
content in the order form to
make it need to be scrollable.

70
00:03:37,950 --> 00:03:41,321
To really test this,
I need to add more views to this layout.

71
00:03:41,321 --> 00:03:43,740
I'm going to do same trick as before.

72
00:03:43,740 --> 00:03:47,390
I'm going to copy all these views and
then paste it into the layout so

73
00:03:47,390 --> 00:03:49,020
that we have a really long order form.

74
00:03:50,040 --> 00:03:54,050
Okay, now the order form is
really long and it scrolls.

75
00:03:54,050 --> 00:03:55,810
That's exciting.

76
00:03:55,810 --> 00:03:59,280
If I rotate the device,
then it also scrolls.

77
00:04:00,650 --> 00:04:04,270
Now I can undo those changes and
go back to our original order form.

78
00:04:05,280 --> 00:04:06,910
I'm still going to leave
the ScrollView in, though,

79
00:04:06,910 --> 00:04:09,480
because our app will work
better across all devices.

80
00:04:10,540 --> 00:04:13,230
For users with devices that
are shorter than this,

81
00:04:13,230 --> 00:04:15,730
they'll still be able to scroll and
see all the fields.
