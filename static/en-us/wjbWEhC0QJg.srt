1
00:00:00,160 --> 00:00:04,778
So let's see how performance is affected by the number of cores. Suppose we take

2
00:00:04,778 --> 00:00:09,870
a single-core execution and we break down the time in it, according to how much

3
00:00:09,870 --> 00:00:15,086
available parallelism there would be. So for 20% of the time, we

4
00:00:15,086 --> 00:00:20,350
really can only run on one core. For 30% of the time, we

5
00:00:20,350 --> 00:00:25,573
could use two cores if we had them. For 40% of the time, we could

6
00:00:25,573 --> 00:00:32,168
use three cores if we had them. And for 10% of the time, we can use four cores

7
00:00:32,168 --> 00:00:38,270
if we had them. Now suppose that we have a chip whose total power is 100 watts.

8
00:00:38,270 --> 00:00:41,489
If that power is enough to get five gigahertz

9
00:00:41,489 --> 00:00:44,273
if the chip only has one core, then how

10
00:00:44,273 --> 00:00:47,231
many gigahertz can we get when we have two

11
00:00:47,231 --> 00:00:50,711
cores, and how many gigahertz when we have four

12
00:00:50,711 --> 00:00:56,323
cores on the chip? Also if our execution time is 100 seconds for a

13
00:00:56,323 --> 00:01:01,979
one-core chip, it will be how many seconds for a two-core chip,

14
00:01:01,979 --> 00:01:06,751
and how many seconds for a four-core chip? Keep in mind that you

15
00:01:06,751 --> 00:01:10,000
need to take into account the change in frequency for this as well.
