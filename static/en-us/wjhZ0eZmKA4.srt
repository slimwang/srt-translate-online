1
00:00:00,060 --> 00:00:02,520
Here I'm going to show you a median filter and image processing.

2
00:00:02,520 --> 00:00:04,970
At the top here, we have a chunk of our image and

3
00:00:04,970 --> 00:00:09,920
notice that in the middle is a pixel that probably is not right.

4
00:00:09,920 --> 00:00:11,030
Probably is a piece of salt.

5
00:00:11,030 --> 00:00:11,720
All right.

6
00:00:11,720 --> 00:00:14,519
Because there are all these other lower numbers and then poof a 90.

7
00:00:15,710 --> 00:00:17,750
So the question is, what should we replace that with?

8
00:00:17,750 --> 00:00:20,570
If we just do the regular filter, then we would take the local average of

9
00:00:20,570 --> 00:00:23,620
everything, including the 90, and stick that there.

10
00:00:23,620 --> 00:00:27,840
A better idea is to do a median filtering.

11
00:00:27,840 --> 00:00:30,090
So we sort all those pixels.

12
00:00:30,090 --> 00:00:30,960
Whoops, I left out the 10.

13
00:00:30,960 --> 00:00:31,940
There we go.

14
00:00:31,940 --> 00:00:34,410
And we pull out the middle value, the 27.

15
00:00:34,410 --> 00:00:36,750
And we replace that here.

16
00:00:36,750 --> 00:00:38,970
So now you see the 90 is totally gone.

17
00:00:38,970 --> 00:00:41,110
The 27 happens to be replicated.

18
00:00:41,110 --> 00:00:42,070
We don't care.

19
00:00:42,070 --> 00:00:46,150
But the idea is that we replace that pixel with this median value.

20
00:00:46,150 --> 00:00:48,120
So before you're gone, we ask some questions about that.

21
00:00:48,120 --> 00:00:52,930
First of all, what's kind of nice is every value we put in

22
00:00:52,930 --> 00:00:56,410
the picture was present locally.

23
00:00:56,410 --> 00:00:57,160
Especially if it's odd.

24
00:00:57,160 --> 00:00:58,580
If it's even, then it's the average of the two,

25
00:00:58,580 --> 00:01:00,260
but if it's an odd number of pixels,

26
00:01:00,260 --> 00:01:04,099
the median is one of those pixels whose value is somewhere around me.

27
00:01:04,099 --> 00:01:07,500
So I'm not introducing any sort of really weird values.

28
00:01:07,500 --> 00:01:10,610
So that's good for when I have these weird spikes, like this salt and

29
00:01:10,610 --> 00:01:12,840
pepper, but here's a question for you.

30
00:01:12,840 --> 00:01:15,090
Is it a linear operation?

31
00:01:15,090 --> 00:01:17,590
What do you think Megan?

32
00:01:17,590 --> 00:01:18,480
>> No?

33
00:01:18,480 --> 00:01:18,990
>> Good. Yeah.

34
00:01:18,990 --> 00:01:23,300
Right. No, look median is not a linear thing right.

35
00:01:23,300 --> 00:01:24,800
I add in a couple different things.

36
00:01:24,800 --> 00:01:27,950
I summed them up and the median can move however the median going to move.

37
00:01:27,950 --> 00:01:29,530
It's not going to behave nicely.

38
00:01:29,530 --> 00:01:31,740
So what is this look like in a real picture?

39
00:01:31,740 --> 00:01:33,700
So here we have our pepper image.

40
00:01:33,700 --> 00:01:37,120
So here is the salt and pepper version of it.

41
00:01:37,120 --> 00:01:38,510
Again, different peppers.

42
00:01:38,510 --> 00:01:40,630
And here it is with the median applied.

43
00:01:40,630 --> 00:01:44,760
If you zoom on that you'll see that that's a really well cleaned up image.

44
00:01:44,760 --> 00:01:45,410
And you can see,

45
00:01:45,410 --> 00:01:50,620
this was a scan line, the plot of a single row across the image.

46
00:01:50,620 --> 00:01:53,660
And you can see all the salt and no pepper noise.

47
00:01:53,660 --> 00:01:59,070
And when I replace that with the median, I get a much nicer signal over here.

48
00:01:59,070 --> 00:02:02,860
And that's why median filtering works so much better for salt and pepper noise.

49
00:02:02,860 --> 00:02:06,850
So I'm showing you this because the median is really an example of

50
00:02:06,850 --> 00:02:08,060
a non-linear thing.

51
00:02:08,060 --> 00:02:11,000
It's also sometimes refered to as edge preserving.

52
00:02:11,000 --> 00:02:14,930
And the reason for that is shown on this simple drawing here.

53
00:02:14,930 --> 00:02:18,280
Suppose I have, I've got a signal that's supposed to be like this but

54
00:02:18,280 --> 00:02:21,460
there was a single spike added to that.

55
00:02:21,460 --> 00:02:24,650
If I take the median, I get this nice effect.

56
00:02:24,650 --> 00:02:26,310
This thing comes here, this, et cetera.

57
00:02:26,310 --> 00:02:29,970
If I were to take the mean or the average or a blur.

58
00:02:29,970 --> 00:02:33,400
I would tend to blur across that nice sharp edge and

59
00:02:33,400 --> 00:02:36,120
that's why median filtering is referred to as edge preserving.

60
00:02:36,120 --> 00:02:40,765
And so this is class of nonlinear filters that are useful but

61
00:02:40,765 --> 00:02:43,540
they're a little less well behaved in terms of the mathematics.
