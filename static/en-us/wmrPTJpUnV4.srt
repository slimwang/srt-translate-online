1
00:00:00,008 --> 00:00:03,770
In cycle seven, we no longer have any instructions to issue.

2
00:00:03,770 --> 00:00:09,810
So from now we will not be issuing things. Let's see what can we dispatch. Well,

3
00:00:09,810 --> 00:00:13,500
we have an instruction here that is ready and, we have an instruction here.

4
00:00:13,500 --> 00:00:16,400
They are going to different units, so they can actually both dispatch in

5
00:00:16,400 --> 00:00:20,916
the same cycle. [SOUND] So now, both of these instructions have been dispatched.

6
00:00:20,916 --> 00:00:25,043
And we will, broadcast the result, but there is nothing executing currently, so,

7
00:00:25,043 --> 00:00:29,700
so we don't broadcast anything. So we will mark that the, subtract here,

8
00:00:29,700 --> 00:00:34,260
which is this instruction, started executing in cycle seven,

9
00:00:34,260 --> 00:00:38,700
is going to become eligible for, because, adds and subtracts take two cycles.

10
00:00:38,700 --> 00:00:40,730
So in seven and eight, this is ex, going to execute,

11
00:00:40,730 --> 00:00:45,250
is going to try to broadcast in cycle nine. The multiplication here,

12
00:00:45,250 --> 00:00:49,850
which is this instruction, also starts executing in cycle seven,

13
00:00:49,850 --> 00:00:55,890
is going to take ten cycles, so in cycle 17, it's going to try to

14
00:00:55,890 --> 00:00:59,710
broadcast the result. The other instructions are going to wait for these two so

15
00:00:59,710 --> 00:01:03,423
basically. What that means is that, nothing is really going to happen now,

16
00:01:03,423 --> 00:01:07,104
until the cycle in which one of these two tries to broadcast anything because

17
00:01:07,104 --> 00:01:10,840
dispatches are not going to happen because there is nothing that can go.

18
00:01:10,840 --> 00:01:14,140
Issue cannot happen because we are done issuing everything.

19
00:01:14,140 --> 00:01:17,540
So, we can now kind of fast forward in this, I mean cycle pretty much.

20
00:01:17,540 --> 00:01:21,020
Nothing happened except these two are executing. In cycle nine,

21
00:01:21,020 --> 00:01:24,810
what's going to happen is, this instruction's going to try to broadcast. And

22
00:01:24,810 --> 00:01:27,640
because there is nothing else that wants to broadcast in this cycle,

23
00:01:27,640 --> 00:01:31,770
this broadcast will happen. So what's now going to happen is,

24
00:01:31,770 --> 00:01:37,450
this subtract is going to, find a register, that matches it's tag, which is F8,

25
00:01:37,450 --> 00:01:43,960
write the value, to F8 and the value's going to be minus 2.5 minus 7.1.

26
00:01:43,960 --> 00:01:49,740
So it's going to be minus 9.6. We're going to un-rename F8, so

27
00:01:49,740 --> 00:01:55,120
that it now forces future instructions to read from F8. We're going to

28
00:01:55,120 --> 00:02:01,220
find instructions that are waiting for AD1, like here. And put minus 9.6,

29
00:02:01,220 --> 00:02:07,970
instead of the, tag. And then, we are going to, free this reservation station.

30
00:02:07,970 --> 00:02:12,534
Okay and the, the subtract, has been writing the result in nine.
