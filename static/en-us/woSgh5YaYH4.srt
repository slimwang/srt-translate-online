1
00:00:00,000 --> 00:00:03,073
MainActivity is launched 
when you start the app.

2
00:00:03,073 --> 00:00:06,716
At the bottom of MainActivity,
we have PlaceholderFragment.

3
00:00:06,716 --> 00:00:10,170
PlaceholderFragment was generated
by the template we used

4
00:00:10,170 --> 00:00:12,060
when creating our project.

5
00:00:12,060 --> 00:00:16,160
A fragment is a modular container 
within your activity.

6
00:00:16,160 --> 00:00:19,590
In later lessons, we'll look at how 
to use multiple fragments

7
00:00:19,590 --> 00:00:21,340
in a single activity.

8
00:00:21,340 --> 00:00:24,830
And we'll actually explain why, 
we're using them at all.

9
00:00:24,830 --> 00:00:29,700
But for now, our activity contains 
just this one fragment.

10
00:00:29,700 --> 00:00:32,360
So here in PlaceholderFragment,
is where we reference

11
00:00:32,360 --> 00:00:35,720
our UI layout resource, 
called fragment main.

12
00:00:35,720 --> 00:00:41,720
This XML file lives in the Resource's 
RES directory of our Project Folder.

13
00:00:41,720 --> 00:00:45,020
You can see other kinds of resources 
here besides layouts,

14
00:00:45,020 --> 00:00:50,123
such as design assets 
or drawables, or strings.

15
00:00:50,123 --> 00:00:53,206
When our activity runs, 
it creates this placeholder

16
00:00:53,206 --> 00:00:56,420
fragment which then inflates 
the XML layout resource,

17
00:00:56,420 --> 00:01:01,496
converting everything in the XML file 
to a hierarchy of view objects in memory.

18
00:01:01,496 --> 00:01:05,402
By holding CTRL or CMD, 
depending on your operating system,

19
00:01:05,402 --> 00:01:08,454
and clicking on this reference 
to fragment main.

20
00:01:08,454 --> 00:01:12,606
Android studio will drop us 
right into the visual layout editor.

21
00:01:12,606 --> 00:01:17,340
Once we're inside a layout XML file, 
we can switch between the design tab,

22
00:01:17,340 --> 00:01:19,106
where we can drag and drop new

23
00:01:19,106 --> 00:01:21,672
UI elements 
and modify the layout visually.

24
00:01:21,672 --> 00:01:26,330
And the Text tab, where we can see 
and edit the XML that defined the layout

25
00:01:26,330 --> 00:01:27,936
and UI elements.

26
00:01:27,936 --> 00:01:32,852
All of the views we'll talk about here 
ultimately extend the view base class.

27
00:01:32,852 --> 00:01:36,460
The template we used gives us 
a relative layout, with some padding

28
00:01:36,460 --> 00:01:38,215
around the edges.

29
00:01:38,215 --> 00:01:42,000
We'll get into layout features 
like padding and margins, later.

30
00:01:42,000 --> 00:01:45,850
Inside our relative layout,
is a single TextView that says,

31
00:01:45,850 --> 00:01:47,530
hello world.

32
00:01:47,530 --> 00:01:51,630
EditText, is a text entry field 
that is an editable version of text view.

33
00:01:51,630 --> 00:01:56,240
It has many options, such as 
whether it supports single or multi line.

34
00:01:56,240 --> 00:02:00,380
There are several styled versions 
of editText, in the text field section

35
00:02:00,380 --> 00:02:01,956
of android studio,

36
00:02:01,956 --> 00:02:07,612
such as Name, E-mail, 
Phone, or Postal Address

37
00:02:07,612 --> 00:02:11,440
Each one sets the soft keyboard 
into an appropriate entry mode.

38
00:02:12,920 --> 00:02:17,580
ImageView displays the image 
defined in its source attribute.

39
00:02:17,580 --> 00:02:21,990
It has some really useful features,
like zooming and cropping

40
00:02:21,990 --> 00:02:24,706
if the source file is too large 
or has a different aspect ratio

41
00:02:24,706 --> 00:02:27,092
than the image view itself.

42
00:02:27,092 --> 00:02:30,140
A list view is a special kind 
of view that contains one

43
00:02:30,140 --> 00:02:34,490
or more view that are replicated 
to display sets of data.

44
00:02:34,490 --> 00:02:37,289
In this case, this single textView 
is used to display

45
00:02:37,289 --> 00:02:40,069
the weather information replicated 
throughout the list.

46
00:02:40,939 --> 00:02:44,429
We'll get into much more detail 
about list view later on.
