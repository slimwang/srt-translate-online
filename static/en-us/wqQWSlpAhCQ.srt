1
00:00:00,240 --> 00:00:03,342
So, for example, the simple projectile class defines an onTouch function that

2
00:00:03,342 --> 00:00:06,760
does some crazy things. Now, I'm going to walk through them, so that you can

3
00:00:06,760 --> 00:00:10,430
see, the type of logic that can occur here. First off, we ensure that we have a

4
00:00:10,430 --> 00:00:12,830
physics body, to make sure that the onTouch function isn't being called

5
00:00:12,830 --> 00:00:16,500
erroneously. In addition, we also ensure that the other physics body that's

6
00:00:16,500 --> 00:00:20,600
being handed to us is valid, and it has user data as well. Otherwise it might

7
00:00:20,600 --> 00:00:24,320
be an invalid object or a wall or some other static trigger object. Finally, we

8
00:00:24,320 --> 00:00:27,788
can actually call otherBody.GetUser entity Data to actually get the entity from

9
00:00:27,788 --> 00:00:31,966
the game engine that responds to this physics object. Now, this simple

10
00:00:31,966 --> 00:00:35,053
projectile class will actually spawn an impact visual when it hits another

11
00:00:35,053 --> 00:00:38,938
object, a wall or the face of a robot. This nice little block of code here

12
00:00:38,938 --> 00:00:42,337
defines whether or not we've actually defined an impact collision. And then

13
00:00:42,337 --> 00:00:45,002
it'll go through and actually spawn an InstancedEffect object and allow it to

14
00:00:45,002 --> 00:00:48,845
start doing its flip book animation. Once this is done, it actually calls the

15
00:00:48,845 --> 00:00:52,215
dealDmg function on the game engine. This will actually reduce the health of

16
00:00:52,215 --> 00:00:54,960
the physOwner, or the other object that we're running into, by the amount

17
00:00:54,960 --> 00:00:59,752
specified by this object. This allows the missile to reduce the health of any

18
00:00:59,752 --> 00:01:03,530
other robot that it hits. Once this is done, we set the markForDeath flag equal

19
00:01:03,530 --> 00:01:06,230
to true so that later on, our entity will be cleaned up using our sweeping

20
00:01:06,230 --> 00:01:07,810
process.
