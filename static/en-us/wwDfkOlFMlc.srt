1
00:00:00,470 --> 00:00:03,160
What we've written expresses a single constraint,

2
00:00:03,160 --> 00:00:06,370
that is a single property of the system which must always ho,

3
00:00:06,370 --> 00:00:13,360
hold. Okay? It happens to be an invariant as indicated by the INV, keyword.

4
00:00:13,360 --> 00:00:19,150
What, one thing that I've glossed over is, the fact that,

5
00:00:19,150 --> 00:00:25,550
we use the numbers 2 and 3, explicitly. Without any indication that they're,

6
00:00:25,550 --> 00:00:31,765
they're dates. Now that can be inferred from the type of checkout.

7
00:00:31,765 --> 00:00:35,380
But if we were to get this completely right,

8
00:00:35,380 --> 00:00:39,130
we have to make sure that all the types matched up.

9
00:00:39,130 --> 00:00:44,220
And in fact, we were talking about two weeks here or three weeks here. We do

10
00:00:44,220 --> 00:00:48,750
have a date class but we have to make sure that we're using it appropriately.

11
00:00:48,750 --> 00:00:52,240
Each OCL constraint is interpreted in the context of a particular class.

12
00:00:52,240 --> 00:00:57,650
What that means is that any names that occur without qualification.

13
00:00:57,650 --> 00:01:03,040
That means without having only a single part without any period in there

14
00:01:04,440 --> 00:01:07,540
are interpreted in the context of a particular class. And

15
00:01:07,540 --> 00:01:12,710
what that means is that the name could be the name of the class,

16
00:01:12,710 --> 00:01:16,670
it could be the name of an attribute, or it could be the name of an operation.

17
00:01:17,950 --> 00:01:23,960
We're also allowed within the language to refer to elements of other classes.

18
00:01:23,960 --> 00:01:27,430
And in that case, we're going to have to explicitly name the class. And

19
00:01:27,430 --> 00:01:30,600
then put a period separator. And then the name of the attribute or

20
00:01:30,600 --> 00:01:36,530
the name of the operation in the other class. Those are qualified names. But

21
00:01:36,530 --> 00:01:40,750
if we're doing it in, if we're referring to names that belong with the class

22
00:01:40,750 --> 00:01:43,880
itself, we don't have to which is why we have the context keyword.

23
00:01:46,050 --> 00:01:50,320
This particular constraint is conditional and says that for each book object,

24
00:01:50,320 --> 00:01:54,420
if the bestseller attribute of that object is true, then the checkout period

25
00:01:54,420 --> 00:01:58,560
attribute for that object must have the value of 2. Denoting two weeks,

26
00:01:58,560 --> 00:02:02,335
otherwise the checkout period attribute must have the value if 3
