1
00:00:00,200 --> 00:00:02,760
Let's first look at
Invariant to Rotation.

2
00:00:02,760 --> 00:00:04,360
Here's a simple example again.

3
00:00:04,360 --> 00:00:05,640
Let's look at this.

4
00:00:05,640 --> 00:00:09,470
And I have the same corner in this
instance is appearing in another image

5
00:00:09,470 --> 00:00:11,210
with a rotation.

6
00:00:11,210 --> 00:00:13,890
Now in this case, if we were to
go through the whole process, and

7
00:00:13,890 --> 00:00:17,830
computing the details that would
actually let us do the ellipse,

8
00:00:17,830 --> 00:00:20,290
which basically would have
the eigenvalues and stuff like that.

9
00:00:20,290 --> 00:00:23,130
Again, we're not doing this directly,
but we actually look at

10
00:00:23,130 --> 00:00:26,420
second movements, which allows
us to get similar information.

11
00:00:26,420 --> 00:00:31,320
For this point and this point,
the eigenvalues should be the same.

12
00:00:31,320 --> 00:00:36,500
The size of the ellipse that we're
looking at should be the same,

13
00:00:36,500 --> 00:00:40,310
but what should not be,
is of course, the rotation.

14
00:00:40,310 --> 00:00:42,910
So it's orientation has
changed from this to this, but

15
00:00:42,910 --> 00:00:45,020
the eigenvalues remain the same.

16
00:00:45,020 --> 00:00:50,240
Since r is only dependent on
the eigenvalues of the ellipse,

17
00:00:50,240 --> 00:00:53,970
it basically suggests that
the corner response function, r,

18
00:00:53,970 --> 00:00:55,890
is invariant to image rotation.

19
00:00:55,890 --> 00:00:58,990
So, this object can be
rotated completely,

20
00:00:58,990 --> 00:01:00,910
as long as these values are the same.

21
00:01:00,910 --> 00:01:04,129
We should still get the same r function,
and with threshold and stuff,

22
00:01:04,129 --> 00:01:05,690
we'll still get the same point.

23
00:01:05,690 --> 00:01:08,610
And in fact, that's what would
suggest that these two corners of

24
00:01:08,610 --> 00:01:11,300
this image would be
identified in both the pairs.
