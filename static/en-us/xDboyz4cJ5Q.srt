1
00:00:00,430 --> 00:00:04,540
I'm Michael, a course developer here at
Google and a former Nanodegree student.

2
00:00:04,540 --> 00:00:07,330
All of the course code for
this course can be found on GitHub.

3
00:00:07,330 --> 00:00:09,879
The code has been divided
into exercises for you and

4
00:00:09,880 --> 00:00:12,350
each exercise has been
separated into the steps.

5
00:00:12,349 --> 00:00:15,179
We highly recommend that you try to
complete the programming exercises

6
00:00:15,179 --> 00:00:18,379
independently, the best way to
learn is definitely by doing.

7
00:00:18,379 --> 00:00:22,359
Of course, if at any point you do find
yourself stuck, each exercise folder is

8
00:00:22,359 --> 00:00:25,429
paired up with a solution folder so you
can review the code changes made during

9
00:00:25,429 --> 00:00:28,199
each programming quiz and
compare them to your own.

10
00:00:28,199 --> 00:00:30,759
Something that used to get me through
early challenges when learning to

11
00:00:30,760 --> 00:00:31,480
code was this quote,

12
00:00:31,480 --> 00:00:35,454
The master has failed more times
than the beginner has even tried.

13
00:00:35,454 --> 00:00:38,015
So remember, failure is just
a way to verify that you're

14
00:00:38,015 --> 00:00:40,554
really working hard and
getting out of your comfort zone.

15
00:00:40,554 --> 00:00:44,524
I recommend to start each programming
exercise by moving to the next project

16
00:00:44,524 --> 00:00:47,304
folder rather than continuing
on with the previous folder.

17
00:00:47,304 --> 00:00:50,085
You'll have plenty of time to build your
own apps after you've finished learning

18
00:00:50,085 --> 00:00:50,475
here.

19
00:00:50,475 --> 00:00:53,249
And staying in sync with the course
will save you time and frustration.

20
00:00:54,409 --> 00:00:57,974
The code for each exercise step
contains helpful TODO comments that

21
00:00:57,975 --> 00:01:00,640
Android Studio displays
in the TODO tool window.

22
00:01:00,640 --> 00:01:02,140
So open the TODO tool window,

23
00:01:02,140 --> 00:01:05,314
click on the TODO tab at
the bottom of Android Studio.

24
00:01:05,314 --> 00:01:09,469
If you don't see that tab, you can
press Shift twice and type in TODO and

25
00:01:09,469 --> 00:01:10,079
then click Enter.

26
00:01:11,230 --> 00:01:14,460
Clicking on the TODO in the TODO tool
window will take you directly to that

27
00:01:14,459 --> 00:01:16,250
code in Android Studio.

28
00:01:16,250 --> 00:01:19,159
This will be incredibly helpful to
you as a student to quickly navigate

29
00:01:19,159 --> 00:01:21,409
between required tests in the code.

30
00:01:21,409 --> 00:01:24,099
These buttons on the left side of
the TODO tool window allow you to

31
00:01:24,099 --> 00:01:26,839
easily navigate to the previous or
next TODO item.

32
00:01:26,840 --> 00:01:31,670
Filtered TODO items get previews of
the source around each TODO, and more.

33
00:01:31,670 --> 00:01:33,560
Each TODO is ordered with a number.

34
00:01:33,560 --> 00:01:36,040
There's no strong need to follow
our ordering, but if you do,

35
00:01:36,040 --> 00:01:39,420
the code can be compiled
without errors at each step.

36
00:01:39,420 --> 00:01:42,609
If at any point there's a discrepancy
between the videos and the code,

37
00:01:42,609 --> 00:01:46,349
the GitHub code repository should
be considered the source of truth.

38
00:01:46,349 --> 00:01:49,199
Also make sure to always check
the text surrounding the videos if you

39
00:01:49,200 --> 00:01:50,329
are confused.

40
00:01:50,329 --> 00:01:53,689
We will often mention updates or
small discrepancies here.

41
00:01:53,689 --> 00:01:56,379
If you think we've missed something,
you can report an issue.

