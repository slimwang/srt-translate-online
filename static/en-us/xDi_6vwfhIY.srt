1
00:00:00,770 --> 00:00:03,160
Building architects use sketches and

2
00:00:03,160 --> 00:00:06,910
blueprints to convey the architecture of a proposed building.

3
00:00:07,980 --> 00:00:10,600
Similarly, software architects use a variety of

4
00:00:10,600 --> 00:00:14,610
notational devices called views for the same purpose.

5
00:00:14,610 --> 00:00:20,020
It's well to remember though that an architecture is not simply a picture,

6
00:00:20,020 --> 00:00:24,780
it is a set of these important design decisions made during

7
00:00:24,780 --> 00:00:27,410
the course of thinking about how the building or

8
00:00:27,410 --> 00:00:31,168
the software system is going to solve whatever problem it's suppose to solve.

9
00:00:31,168 --> 00:00:36,920
Specifically, software architecture conveys the set

10
00:00:36,920 --> 00:00:42,310
of components that will together compute a solution

11
00:00:42,310 --> 00:00:48,638
to the problem while satisfying or not violating any of the require

12
00:00:48,638 --> 00:00:54,520
non-functional constraints as specified in the requirements for the system.

13
00:00:55,760 --> 00:01:00,590
In this particular lesson we will look at a variety of different graphical and

14
00:01:00,590 --> 00:01:05,550
textual approaches for conveying software architecture views.

15
00:01:05,550 --> 00:01:10,360
We will start with Philip Kruchten's 4 plus 1 architectural views paper which I

16
00:01:10,360 --> 00:01:11,820
asked you to read.

17
00:01:11,820 --> 00:01:14,770
And then we will add in some different views that go beyond what

18
00:01:14,770 --> 00:01:16,648
he was talking about, the feature view,

19
00:01:16,648 --> 00:01:20,820
non-functional requirements, bug reporting, context, and utility views.
