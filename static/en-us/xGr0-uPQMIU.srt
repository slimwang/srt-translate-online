1
00:00:00,200 --> 00:00:04,490
But what happens when several projects
all want to send data to the moon?

2
00:00:04,490 --> 00:00:09,090
At each end of our laser uplink there's
a router whose job it is to decide what

3
00:00:09,090 --> 00:00:12,030
traffic needs to be sent
through the depths of space.

4
00:00:12,030 --> 00:00:13,420
When there isn't enough bandwidth for

5
00:00:13,420 --> 00:00:17,200
everyone who wants to use it that's
a condition of network congestion.

6
00:00:17,200 --> 00:00:20,221
And like we saw before,
if an IP router has more

7
00:00:20,221 --> 00:00:24,490
traffic to send onto a link than
can fit, it can drop packets.

8
00:00:24,490 --> 00:00:26,970
Routers can be set up to
do this in different ways.

9
00:00:26,970 --> 00:00:30,250
For instance, to drop some
traffic before other traffic or

10
00:00:30,250 --> 00:00:33,100
to try to split the pain
fairly among all users.

11
00:00:33,100 --> 00:00:36,380
Now we've seen earlier that when a TCP
endpoint notices that its packets

12
00:00:36,380 --> 00:00:40,640
are not getting through it retransmits
the ones that are not acknowledged.

13
00:00:40,640 --> 00:00:42,840
Now if packet loss were
mostly due to noisy lines or

14
00:00:42,840 --> 00:00:47,440
something that would be enough, but a
lot of packet loss is due to congestion.

15
00:00:47,440 --> 00:00:51,610
Given that, what else do you think TCP
should do when there's packet loss?

16
00:00:51,610 --> 00:00:54,910
Should it transmit two
copies of each new packet?

17
00:00:54,910 --> 00:00:58,550
Should it transmit two copies of
each new packet 50% of the time?

18
00:00:58,550 --> 00:01:02,010
Should it, when packets are dropped,
send more slowly?

19
00:01:02,010 --> 00:01:06,340
Should it, when packets are dropped,
close the connection with an error?

20
00:01:06,340 --> 00:01:09,320
Or should it give up on the Internet and
invest in a goat farm?
