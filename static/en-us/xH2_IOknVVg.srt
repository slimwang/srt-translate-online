1
00:00:00,230 --> 00:00:03,270
When you start building more
complicated user interactions,

2
00:00:03,270 --> 00:00:05,880
you'll come to rely on
animate with duration,

3
00:00:05,880 --> 00:00:10,140
a method used to specify the timing of
a change in the appearance of a view.

4
00:00:10,140 --> 00:00:13,220
Animate with duration
belongs to the class UI view.

5
00:00:13,220 --> 00:00:15,190
UI kits generic view class.

6
00:00:15,190 --> 00:00:18,320
You saw this method earlier
when we discussed extensions.

7
00:00:18,320 --> 00:00:22,570
As promised, I want to return to the
fate extension demo Xcode project, and

8
00:00:22,570 --> 00:00:25,350
dissect the closure expression syntax.

9
00:00:25,350 --> 00:00:29,340
Open the View Controller.swift file and
take a look at the sunrise and

10
00:00:29,340 --> 00:00:30,580
set method.

11
00:00:30,580 --> 00:00:32,670
Focus on the completion parameter.

12
00:00:32,670 --> 00:00:35,390
Do you recognize the closure
expression syntax?

13
00:00:35,390 --> 00:00:39,110
Here you can see that the method fadeout
takes in a closure expression as

14
00:00:39,110 --> 00:00:42,310
a parameter,
the parameter named completion.

15
00:00:42,310 --> 00:00:45,660
And that closure expression takes
in a bool as a parameter, and

16
00:00:45,660 --> 00:00:47,870
returns void or nothing.

17
00:00:47,870 --> 00:00:51,910
The word, in, lets us know that
the body of the closure is coming up.

18
00:00:51,910 --> 00:00:55,720
In the body of the closure we find
the code that is intended to be executed

19
00:00:55,720 --> 00:00:57,710
after the animation is complete.

20
00:00:57,710 --> 00:01:00,690
That's why this closure
expression is called completion.

21
00:01:00,690 --> 00:01:02,750
The body of the closure says.

22
00:01:02,750 --> 00:01:06,050
If the image is set to sunset,
change it to sunrise.

23
00:01:06,050 --> 00:01:09,210
If the image is set to sunrise,
change to sunset.

24
00:01:09,210 --> 00:01:13,190
This call to fade in is also
part of the completion closure.

25
00:01:13,190 --> 00:01:17,670
So what's going on here with
the completion parameter for fade in?

26
00:01:17,670 --> 00:01:22,050
You might think we'd see another closure
expression here, but all we see is nil.

27
00:01:22,050 --> 00:01:25,240
That nil is standing in for
the closure expression.

28
00:01:25,240 --> 00:01:29,160
It's saying, this is what I want to
happen after the image fades in.

29
00:01:29,160 --> 00:01:31,100
I want nothing to happen.

30
00:01:31,100 --> 00:01:34,250
Now let's switch over to the UI
view extensions file for a second.

31
00:01:34,250 --> 00:01:37,470
I know I already pointed this out, but

32
00:01:37,470 --> 00:01:41,705
I want to reiterate that this completion
parameter actually has an optional type.

33
00:01:41,705 --> 00:01:43,725
You can see the type of
the closure expression here.

34
00:01:45,555 --> 00:01:49,175
As we just saw, it takes in a bool and
returns void, but

35
00:01:49,175 --> 00:01:51,025
then notice this question mark.

36
00:01:51,025 --> 00:01:54,955
That question mark makes it possible to
pass in nil as the completion parameter.
