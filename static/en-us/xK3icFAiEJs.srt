1
00:00:00,380 --> 00:00:02,020
Okay Michael, I have two quizzes for you. Okay?

2
00:00:02,020 --> 00:00:02,760
>> Yeah, yeah.

3
00:00:02,760 --> 00:00:06,710
>> Here's the first quiz, and here's the way it's set up.

4
00:00:06,710 --> 00:00:10,720
I want you to fill in the empty boxes of this table. Okay?

5
00:00:10,720 --> 00:00:11,210
>> Ooh.

6
00:00:11,210 --> 00:00:11,640
>> Got it.

7
00:00:11,640 --> 00:00:12,460
>> There's a lot of empty boxes.

8
00:00:12,460 --> 00:00:13,600
>> There's a lot of empty boxes.

9
00:00:13,600 --> 00:00:16,239
>> Okay, but Okay, let me make sure I understand what's going

10
00:00:16,239 --> 00:00:18,785
on here. So we're looking at

11
00:00:18,785 --> 00:00:20,830
three different algorithms that are learning algorithms.

12
00:00:20,830 --> 00:00:21,000
>> Yep.

13
00:00:21,000 --> 00:00:22,840
>> There's one One neural net

14
00:00:22,840 --> 00:00:24,140
>> No

15
00:00:24,140 --> 00:00:25,200
>> Okay, one nearest neighbor.

16
00:00:25,200 --> 00:00:25,440
>> Mm-hm

17
00:00:25,440 --> 00:00:27,620
>> K nearest neighbor and linear regression.

18
00:00:27,620 --> 00:00:28,680
>> Yep

19
00:00:28,680 --> 00:00:30,960
>> And for each one you want to know running time and space.

20
00:00:30,960 --> 00:00:31,213
>> Mm-hm.

21
00:00:31,213 --> 00:00:34,150
>> And this is on n points I assume, yeah, n

22
00:00:34,150 --> 00:00:36,700
sort, what does it mean for data points to be sorted?

23
00:00:36,700 --> 00:00:38,890
>> So let's assume we're living in a world where all

24
00:00:38,890 --> 00:00:42,050
of our data points are you know in r one. Okay.

25
00:00:42,050 --> 00:00:44,090
>> Oh okay that well that. That could be sorted.

26
00:00:44,090 --> 00:00:44,840
>> That could be. Yeah that could be

27
00:00:44,840 --> 00:00:46,670
sorted. And that you know we are going to be

28
00:00:46,670 --> 00:00:50,350
out putting some real numbers as well. So they're points on a, on a number line.

29
00:00:50,350 --> 00:00:53,800
So to make things simple for you. I'm going to

30
00:00:53,800 --> 00:00:55,920
say that the points that your given are already sorted.

31
00:00:55,920 --> 00:00:59,340
>> Oh ok alright. And yeah that makes sense. Its just

32
00:00:59,340 --> 00:01:01,940
a scaler. So then a query point is going to come in.

33
00:01:01,940 --> 00:01:05,040
And then its going to be some value. And were going to have

34
00:01:05,040 --> 00:01:08,481
to find the nearest neighbor or do the linear regression or whatever.

35
00:01:08,481 --> 00:01:08,710
>> Right.

36
00:01:08,710 --> 00:01:10,250
>> Alright now that's for running time. For

37
00:01:10,250 --> 00:01:13,720
now space your talking about the space of what.

38
00:01:13,720 --> 00:01:15,420
>> How much space you are going to have

39
00:01:15,420 --> 00:01:18,070
to do in order to accomplish your task. How much space

40
00:01:18,070 --> 00:01:20,670
you going to have to use in order to accomplish your task?

41
00:01:20,670 --> 00:01:22,810
>> So this is kind of like the the. The

42
00:01:22,810 --> 00:01:27,020
space that's representing the class enviro. Or the regression. After training.

43
00:01:27,020 --> 00:01:29,310
>> Yes. So actually that question

44
00:01:29,310 --> 00:01:30,750
about after training is important. You'll notice

45
00:01:30,750 --> 00:01:32,400
I've divided each of these algorithms

46
00:01:32,400 --> 00:01:34,870
into two phases. There's the learning phase.

47
00:01:34,870 --> 00:01:37,390
How much time it takes to learn. How much space you need to

48
00:01:37,390 --> 00:01:40,440
learn. Then there's the query phase. When I give you some new value and

49
00:01:40,440 --> 00:01:43,070
you have to output and answer. What's the running time for that

50
00:01:43,070 --> 00:01:45,550
and what are the space requirements for that? Okay? You got that?

51
00:01:45,550 --> 00:01:45,650
>> Yeah

52
00:01:45,650 --> 00:01:49,240
>> I want that for each one. Of these three algorithms.

53
00:01:49,240 --> 00:01:52,490
>> Except for one nearest neighbor which the, it appears

54
00:01:52,490 --> 00:01:54,440
as though you filled in for me to get me started.

55
00:01:54,440 --> 00:01:56,230
>> Right so just to get you started and make it easier for you know

56
00:01:56,230 --> 00:01:58,710
to know what I'm talking about. I'm talking about big o times here. Right. I'm

57
00:01:58,710 --> 00:02:02,420
not going to make you write out big o. Big o is implicit. So if we

58
00:02:02,420 --> 00:02:03,950
look at one nearest neighbor, and we

59
00:02:03,950 --> 00:02:05,730
ask well what's the running time of learning?

60
00:02:05,730 --> 00:02:09,530
Well, it's constant. Right? Because there's no learning.

61
00:02:09,530 --> 00:02:11,630
>> I see. You just take that sorted set of data

62
00:02:11,630 --> 00:02:14,450
points and you just pass it along through the query here.

63
00:02:14,450 --> 00:02:18,830
>> Right. Now, you could say that" Well, I'm going to

64
00:02:18,830 --> 00:02:20,930
take the data points or I'm going to copy them into this

65
00:02:20,930 --> 00:02:24,070
database," and so it's linear. But let's assume they already come in

66
00:02:24,070 --> 00:02:26,380
a data base, or some data structure that you can use, okay?

67
00:02:26,380 --> 00:02:27,140
>> Gotcha.

68
00:02:27,140 --> 00:02:29,480
>> Okay, so now that actually brings us

69
00:02:29,480 --> 00:02:30,980
to a nice little question about how much space,

70
00:02:30,980 --> 00:02:33,970
learning takes here. And, well because you have to store those points,

71
00:02:33,970 --> 00:02:37,300
and keep them around. The space requirements are big O of N.

72
00:02:37,300 --> 00:02:38,340
>> Yeah, that makes sense.

73
00:02:38,340 --> 00:02:40,800
>> Okay, good. So given that as an example. Do

74
00:02:40,800 --> 00:02:44,950
you think your one example in your data base. Mm, do

75
00:02:44,950 --> 00:02:48,240
you think you can use that to build up labels

76
00:02:48,240 --> 00:02:50,680
for all the rest of the phases of the different algorithms?

77
00:02:50,680 --> 00:02:51,620
>> Yeah, I think so.

78
00:02:51,620 --> 00:02:53,230
>> Okay, cool. Go for it.
