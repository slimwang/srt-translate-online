1
00:00:00,000 --> 00:00:07,859
Now, let's have you figure out the running time of another algorithm using Big O Notation.

2
00:00:07,859 --> 00:00:10,910
So, this is the algorithm that we are going to look at, it's just four lines

3
00:00:10,910 --> 00:00:15,637
and actually the algorithm does not perform any very useful function.

4
00:00:15,637 --> 00:00:19,240
The most important part is that it's interesting to analyze its running times.

5
00:00:19,240 --> 00:00:23,729
So, there's not really any value or at least none that I can see

6
00:00:23,729 --> 00:00:26,650
of actually producing this result down here.

7
00:00:26,650 --> 00:00:30,330
So, what I would like you to do is to figure out the running time

8
00:00:30,330 --> 00:00:37,720
as a function of this value n here, and I'm going to give you a number of choices for your answer.

9
00:00:37,720 --> 00:00:41,810
So, the first choice is O (n) so it would be a linear algorithm.

10
00:00:41,810 --> 00:00:56,440
The second one is O(n¹. ⁵). Next one is O(n²). And the final one is O(n³).

11
00:00:56,440 --> 00:01:00,740
So, I want you to check the box that states the correct running time of this algorithm

12
00:01:00,740 --> 00:01:06,390
expressed as a function of n, and I'm also going to give you a little hint,

13
00:01:06,390 --> 00:01:23,750
which is that if you add n + n-1+ n-2 and so on plus 2 plus 1 that is equal to n²+n/2.

14
00:01:23,750 --> 99:59:59,999
And once you analyzed the algorithm, you'll see that this hint is actually quite useful.
