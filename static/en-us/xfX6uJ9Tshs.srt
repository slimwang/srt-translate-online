1
00:00:00,160 --> 00:00:02,735
So going back to our mani-core challenges. Now

2
00:00:02,735 --> 00:00:04,824
we have seen that the issue of power

3
00:00:04,824 --> 00:00:07,704
budget splitting among cores is solved by using

4
00:00:07,704 --> 00:00:10,512
a turbo frequency when using only one core, so

5
00:00:10,512 --> 00:00:14,328
that a single-threaded program doesn't suffer just because

6
00:00:14,328 --> 00:00:18,800
it's running in a multi-core system. Pretty much then

7
00:00:18,800 --> 00:00:21,920
one core gets to use all the power

8
00:00:21,920 --> 00:00:25,060
of the chip, with some limitations because of cooling.

9
00:00:25,060 --> 00:00:27,180
And the final issue that we will look at

10
00:00:27,180 --> 00:00:30,350
is the confusion that all of this brings to the

11
00:00:30,350 --> 00:00:33,265
operating system. Keep in mind that it has to deal

12
00:00:33,265 --> 00:00:37,880
with multi-threading, where each core can really execute several threads

13
00:00:37,880 --> 00:00:41,450
in hardware. Then you have cores that can share

14
00:00:41,450 --> 00:00:44,678
caches. Then if you have a larger system, you can

15
00:00:44,678 --> 00:00:47,716
have multiple chips, each with its own large caches, and

16
00:00:47,716 --> 00:00:49,980
you can have all of these at the same time.
