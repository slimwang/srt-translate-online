1
00:00:00,000 --> 00:00:05,000
One thing you might have done is look in the Python documentation and hashable here is a link.

2
00:00:05,000 --> 00:00:11,000
If you click on it, you'll get to the glossary that explains what hashable means.

3
00:00:11,000 --> 00:00:16,000
It says that an object is hashable if it's hash value never changes during its lifetime.

4
00:00:16,000 --> 00:00:21,000
That means it has an underscore hash method and it can be compared to other objects.

5
00:00:21,000 --> 00:00:25,000
This is still quite a difficult definition.

6
00:00:25,000 --> 00:00:29,000
It's not something that tells you very clearly what's hashable and what's not.

7
00:00:29,000 --> 00:00:31,000
The second part of it is more useful.

8
00:00:31,000 --> 00:00:36,000
It says that all of Python's immutable built-in objects are hashable.

9
00:00:36,000 --> 00:00:38,000
That makes sense because their value doesn't change.

10
00:00:38,000 --> 00:00:44,000
They can map to the same object using hash and none of the immutable containers are,

11
00:00:44,000 --> 00:00:49,000
and their examples are one that you should be familiar with, list and dictionaries

12
00:00:49,000 --> 00:00:52,000
as immutable containers that are not hashable,

13
00:00:52,000 --> 00:00:55,000
and the reason it's important for things to be hashable,

14
00:00:55,000 --> 00:00:58,000
well we've seen this with dictionary keys.

15
00:00:58,000 --> 00:01:02,000
If we want to use a hash function to look up the value of the key,

16
00:01:02,000 --> 00:01:04,000
well we need to know that that key can't change.

17
00:01:04,000 --> 00:01:08,000
If it could change when we did our look up in the dictionary,

18
00:01:08,000 --> 00:01:12,000
if you remember what we did with dictionaries, well we had a key.

19
00:01:12,000 --> 00:01:17,000
That was the input to some hash function along with the dictionary size

20
00:01:17,000 --> 00:01:20,000
and that would give us a mapping to some bucket.

21
00:01:20,000 --> 00:01:24,000
If the hash of the key could change, so if the key was something it could be mutated,

22
00:01:24,000 --> 00:01:29,000
well the next time we look it up if the key has changed, we're going to hash it,

23
00:01:29,000 --> 00:01:31,000
and we're going to look in the wrong bucket.

24
00:01:31,000 --> 00:01:38,000
So, that's why things need to be hashable to be put in a dictionary. That's the same thing for sets.

25
00:01:38,000 --> 00:01:41,000
And if the value of an item could change, well that would break the representation of the set.
