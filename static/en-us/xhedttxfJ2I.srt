1
00:00:00,500 --> 00:00:03,828
I want you to look at the toString method that I added to this class. You can

2
00:00:03,828 --> 00:00:07,217
use toString to print out all of the scores. It might help if you find that you

3
00:00:07,217 --> 00:00:10,060
need to debug a bit. It's also worth spending a moment to look at this

4
00:00:10,060 --> 00:00:13,460
carefully. The arrays class has a lot of useful methods for working with

5
00:00:13,460 --> 00:00:18,064
arrays. It's structured a little bit like the math class. So to use these

6
00:00:18,064 --> 00:00:23,545
methods you call Arrays.toString or Arrays.copyOf. Now, if I call

7
00:00:23,545 --> 00:00:27,010
Arrays.toString, and I just gave it the scores, which is a partially filled

8
00:00:27,010 --> 00:00:31,975
array, it would print out a whole lot of zeroes at the end. And I'm not really

9
00:00:31,975 --> 00:00:35,440
couting those as part of my array right now. So I need to trim down the array

10
00:00:35,440 --> 00:00:41,073
first. I'm using Arrays.copyOf, to trim down the array. Arrays.copyOf takes the

11
00:00:41,073 --> 00:00:45,819
array that you want to copy and the desired new length. So this method call

12
00:00:45,819 --> 00:00:49,849
makes a shorter array that is a copy of the original and then when I pass that

13
00:00:49,849 --> 00:00:54,074
to arrays toString it will now return a string representation of only the part

14
00:00:54,074 --> 00:00:58,519
of scores that i am interested in
