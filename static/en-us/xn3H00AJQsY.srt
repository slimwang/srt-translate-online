1
00:00:00,000 --> 00:00:02,000
The answer is the second choice.

2
00:00:02,000 --> 00:00:04,000
What we want to know is that we can get the message back,

3
00:00:04,000 --> 00:00:07,000
so to get the message back.

4
00:00:07,000 --> 00:00:09,000
We started by encrypting the message.

5
00:00:09,000 --> 00:00:14,000
Then to decrypt it, now this is what goes in as the cipher text,

6
00:00:14,000 --> 00:00:17,000
so we're going to raise this to the d power mod n.

7
00:00:17,000 --> 00:00:20,000
And then if you remember when we looked at Diffie-Hellman,

8
00:00:20,000 --> 00:00:23,000
we have this rule for combining powers of powers,

9
00:00:23,000 --> 00:00:27,000
that this is equivalent to m to the ed mod n,

10
00:00:27,000 --> 00:00:30,000
and we want that to be equivalent to the message.

11
00:00:30,000 --> 00:00:33,000
If we divide both sides by m,

12
00:00:33,000 --> 00:00:35,000
this becomes 1.

13
00:00:35,000 --> 00:00:37,000
This becomes m to the ed - 1.

14
00:00:37,000 --> 00:00:40,000
We've reduced the power by 1 because dividing by m.

15
00:00:40,000 --> 00:00:42,000
This is the property we want.

16
00:00:42,000 --> 00:00:47,000
If we had this property, all messages would decrypt as one.

17
00:00:47,000 --> 00:00:49,000
That wouldn't be very useful.

18
00:00:49,000 --> 00:00:51,000
This property is always true but not useful,

19
00:00:51,000 --> 00:00:54,000
and this property is unlikely to be true.

20
00:00:54,000 --> 00:01:00,000
That means our goal is to select values for e, d, and n

21
00:01:00,000 --> 00:01:06,000
that satisfy for all m values, that m to the ed - 1

22
00:01:06,000 --> 00:01:11,000
is congruent to 1 mod n.

23
00:01:11,000 --> 00:01:13,000
That's our goal.

24
00:01:13,000 --> 99:59:59,999
If we have that, we have the correctness property we need for RSA.
