1
00:00:00,000 --> 00:00:02,000
Let's go through the answers.

2
00:00:02,000 --> 00:00:05,000
a) can't be right. b) could be right.

3
00:00:05,000 --> 00:00:10,000
It's perfectly acceptable to return i for a question about the square root of -1,

4
00:00:10,000 --> 00:00:13,000
assuming that we're working in a domain of complex numbers.

5
00:00:13,000 --> 00:00:16,000
c) is probably an acceptable result as well.

6
00:00:16,000 --> 00:00:21,000
Not a number is often returned for numerical queries in the floating-point domain

7
00:00:21,000 --> 00:00:24,000
that have no good actual answer.

8
00:00:24,000 --> 00:00:28,000
d) is also most likely a good answer, throwing an exception.

9
00:00:28,000 --> 00:00:32,000
e) is not a good answer. -1 can never be the square root of -1.

10
00:00:32,000 --> 00:00:37,000
And crashing the machine is probably never a good response.

11
00:00:37,000 --> 00:00:40,000
So the answer is some combination of b, c, and d.

12
00:00:40,000 --> 00:00:43,000
And so again here, what's happening is just running a simple test case

13
00:00:43,000 --> 00:00:46,000
is forcing us to think about the specification for the software under test.

14
00:00:46,000 --> 00:00:50,000
And in fact, this is really, really common that as soon as we start testing a piece of software,

15
00:00:50,000 --> 00:00:54,000
we start to really have to think about what the software is actually supposed to be doing.

16
00:00:54,000 --> 00:00:56,000
And this is a good thing.

17
00:00:56,000 --> 00:01:00,000
Often when we're testing software, we're not so much just looking for bugs in the software,

18
00:01:00,000 --> 99:59:59,999
but we're helping to refine the specification for the software under test.
