1
00:00:00,210 --> 00:00:03,927
The cool thing about the way plus works in Python is, there's nothing really

2
00:00:03,927 --> 00:00:07,882
special about it, it's just a short way of calling a magic method. What that

3
00:00:07,882 --> 00:00:12,859
means is when you have an expression, a plus b, what's really going on here is

4
00:00:12,859 --> 00:00:17,994
that you're calling a function and it's the function that you get by looking at

5
00:00:17,994 --> 00:00:22,739
the type of a for the attribute_ <u>add</u> _. Which is function that takes two

6
00:00:22,739 --> 00:00:27,050
inputs and, a and b are those inputs. So the only thing that's magic about plus

7
00:00:27,050 --> 00:00:30,720
is that there's a special syntax that makes it easier to use. When you start

8
00:00:30,720 --> 00:00:34,295
defining your own types, which we'll get to pretty soon, well you define a plus

9
00:00:34,295 --> 00:00:38,215
operator for your own types. So what that means is that you can actually make

10
00:00:38,215 --> 00:00:42,015
plus work for your own types by defining an add method. And, we're getting a

11
00:00:42,015 --> 00:00:45,280
little ahead of ourselves, so we'll get to that later. But that's something to

12
00:00:45,280 --> 00:00:48,452
look forward to that you'll be able to define your own types, and give plus

13
00:00:48,452 --> 00:00:50,153
whatever meaning you want, for them.
