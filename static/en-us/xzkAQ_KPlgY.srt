1
00:00:00,080 --> 00:00:04,270
So look at the macro operators at a high level abstraction, consider this one

2
00:00:04,270 --> 00:00:07,630
part of the current problem. Here is the initial state, here is the goal state,

3
00:00:07,630 --> 00:00:11,440
there is the final plan. To enlist this idea of macro operators, and

4
00:00:11,440 --> 00:00:15,608
hierarchical planning, at multiple [UNKNOWN] of abstraction, let us read with

5
00:00:15,608 --> 00:00:19,810
this problem that we had encountered earlier. This was the initial state,

6
00:00:19,810 --> 00:00:24,600
this was the goal state. And we come up, we came up with this as the final plan.

7
00:00:24,600 --> 00:00:29,590
Now, we can think of these three operations as being abstracted out

8
00:00:29,590 --> 00:00:35,980
into a macro operator that we can call unstack. And these three operations

9
00:00:35,980 --> 00:00:40,630
being abstracted out into a macro operator that we can call stack-ascending.

10
00:00:40,630 --> 00:00:44,340
Just simply saying stacking them in a particular ascending order. Here is

11
00:00:44,340 --> 00:00:48,670
the specification of the two macro operators. Unstack, and stack-ascending.

12
00:00:48,670 --> 00:00:52,260
You do preconditions and post conditions. And this macro operator,

13
00:00:52,260 --> 00:00:57,150
also tells you how this macro operator can be expanded in to the lower level

14
00:00:57,150 --> 00:01:01,700
move operations. Similarly for the stack ascending macro operator.
