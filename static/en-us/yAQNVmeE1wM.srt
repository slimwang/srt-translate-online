1
00:00:00,230 --> 00:00:03,770
Now that we have a database that's not
empty, let's start reading from it.

2
00:00:03,770 --> 00:00:07,030
In the last video, you saw me call
session.query(Restaurant).all.

3
00:00:07,030 --> 00:00:10,914
If I create a variable called
firstResult and set it equal to

4
00:00:10,914 --> 00:00:14,810
session.query(Restaurant) and
use .first this time,

5
00:00:14,810 --> 00:00:18,660
I now have a variable that corresponds
to a single row in my database.

6
00:00:18,660 --> 00:00:22,870
These single row references allow me to
extract column entries as method names.

7
00:00:22,870 --> 00:00:25,930
So if I were to write firstResult.name,

8
00:00:25,930 --> 00:00:29,500
I'm given the name of my restaurant
object as it is stored in the database.

9
00:00:29,500 --> 00:00:33,740
Currently, I only have one restaurant
and one menu item stored in my database.

10
00:00:33,740 --> 00:00:37,030
Well that's kind of boring, but with
the help from some fellow Udations I've

11
00:00:37,030 --> 00:00:40,040
created a Python script that will
populate my database with several

12
00:00:40,040 --> 00:00:43,216
different restaurants and menu items
popular amongst the Udasity team.

13
00:00:43,216 --> 00:00:47,180
Download the lotsofmenus.py script
into your working directory and

14
00:00:47,180 --> 00:00:49,680
execute it from the command line as so.

15
00:00:49,680 --> 00:00:53,589
Now when we perform executions like
session.query(Restaurant).all,

16
00:00:53,589 --> 00:00:56,110
we get back a whole list of results.

17
00:00:56,110 --> 00:00:59,370
So what happens when I have a query
that returns a collection of results and

18
00:00:59,370 --> 00:01:02,180
we want to display column
information for each item?

19
00:01:02,180 --> 00:01:06,230
For this, we can use a python for loop
to return the data that we want to see.

20
00:01:06,230 --> 00:01:07,980
Here, let's do an example.

21
00:01:07,980 --> 00:01:09,900
I will make a variable called items and

22
00:01:09,900 --> 00:01:13,270
set it equal to a query that
retrieves all of my menu items.

23
00:01:13,270 --> 00:01:17,710
Now, I can say for
item in items, print item.name.

24
00:01:17,710 --> 00:01:21,522
Now I get back a printed line of
each item name in our database.

25
00:01:21,522 --> 00:01:24,710
SQL Alchemy has an extensive
collection of queries we can perform on

26
00:01:24,710 --> 00:01:25,720
our database.

27
00:01:25,720 --> 00:01:28,570
Take some time to explore
the query documentation here and

28
00:01:28,570 --> 00:01:30,280
play around with the database for
a while.

29
00:01:30,280 --> 00:01:31,240
When you're ready,

30
00:01:31,240 --> 00:01:33,340
move on to some of the challenge
problems in the next section.
