1
00:00:00,550 --> 00:00:03,410
Now I'll move forward with
the JSON example, and

2
00:00:03,410 --> 00:00:06,200
I think you're really
going to like this.

3
00:00:06,200 --> 00:00:09,350
Now the code is almost identical, but

4
00:00:09,350 --> 00:00:12,202
what happened to all of our functions
that help us visualize the maze?

5
00:00:12,202 --> 00:00:16,670
I'm going to show you something
that's pretty cool with playgrounds.

6
00:00:16,670 --> 00:00:19,296
So we're looking at
the maze JSON example.

7
00:00:19,296 --> 00:00:24,049
If we drop this down,
let's look in this Sources.swift file.

8
00:00:24,049 --> 00:00:25,800
Now here it is.

9
00:00:25,800 --> 00:00:29,710
In this file, we have all
the functions that we defined earlier

10
00:00:29,710 --> 00:00:31,530
that help us visualize the maze.

11
00:00:32,540 --> 00:00:37,030
So everything defined in the Sources
folder, so this Sources.swift file, and

12
00:00:37,030 --> 00:00:38,870
any additional files we may have,

13
00:00:38,870 --> 00:00:41,520
they can be accessed by
our Maze JSON Example.

14
00:00:42,890 --> 00:00:46,070
So let's go back to that file here.

15
00:00:46,070 --> 00:00:49,490
And you'll notice just some small
differences between this example with

16
00:00:49,490 --> 00:00:52,240
JSON and
the PList examples that we've seen.

17
00:00:52,240 --> 00:00:54,080
But the difference is small.

18
00:00:54,080 --> 00:00:57,686
First, we need to create a URL that
points to the JSON file instead of

19
00:00:57,686 --> 00:00:58,587
the PList file.

20
00:00:58,587 --> 00:01:02,526
Then we load the JSON data
into an NSData object.

21
00:01:02,526 --> 00:01:05,110
Now this is a little bit
different than we saw earlier.

22
00:01:05,110 --> 00:01:08,970
At this point our data is raw,
it's not organized into an array, or

23
00:01:08,970 --> 00:01:11,700
a dictionary, we're going to
have to do that ourselves.

24
00:01:11,700 --> 00:01:15,260
These next few lines of
code use the do keyword,

25
00:01:15,260 --> 00:01:18,030
which we'll discuss later
when we get to errors.

26
00:01:18,030 --> 00:01:21,580
Do will allow us to run some code that
could potentially cause an error, but

27
00:01:21,580 --> 00:01:22,860
in our case, it'll work,

28
00:01:22,860 --> 00:01:26,640
as long as we specify the file name
here and the extension correctly.

29
00:01:27,720 --> 00:01:28,740
Inside the do block,

30
00:01:28,740 --> 00:01:33,970
we run some code that'll convert the raw
JSON data into a usable dictionary.

31
00:01:33,970 --> 00:01:37,370
Then from there, we call our
visualizeMaze function again and

32
00:01:37,370 --> 00:01:39,240
it visualizes the maze as this string.

33
00:01:40,250 --> 00:01:44,250
So now we've created the same maze
from two different data formats,

34
00:01:44,250 --> 00:01:47,120
with a Plist and with JSON.

35
00:01:47,120 --> 00:01:50,390
That's awesome, and for
a little fun I encourage you to try

36
00:01:50,390 --> 00:01:53,260
messing with the truth values
in either of the files, and

37
00:01:53,260 --> 00:01:56,020
see how it affects this maze
that's ultimately generated.
