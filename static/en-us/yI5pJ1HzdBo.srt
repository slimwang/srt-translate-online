1
00:00:00,090 --> 00:00:02,719
Let's put everything together now by looking at a trace

2
00:00:02,719 --> 00:00:05,320
of an entire lookup. Now in the examples before, we didn't

3
00:00:05,320 --> 00:00:08,420
get to see the full lookup hierarchy because we issued

4
00:00:08,420 --> 00:00:11,570
a recursive query. But let's suppose we wanted to see every

5
00:00:11,570 --> 00:00:15,010
step of the DNS lookup process. You can do this

6
00:00:15,010 --> 00:00:17,850
by using the trace option in dig. Here you can see

7
00:00:17,850 --> 00:00:21,140
exactly what we saw before, which is the local resolver.

8
00:00:21,140 --> 00:00:25,880
In this case, issuing a query to a local resolver and

9
00:00:25,880 --> 00:00:28,840
receiving a referral to an authoritative server

10
00:00:28,840 --> 00:00:30,480
for dot which could be any of the

11
00:00:30,480 --> 00:00:33,415
following. That query, lists an answer for the

12
00:00:33,415 --> 00:00:37,450
.edu servers which subsequently issues a referral to

13
00:00:37,450 --> 00:00:40,700
the servers that are authoritative for gatech. Which

14
00:00:40,700 --> 00:00:43,882
ultimately reply with the appropriate a records as

15
00:00:43,882 --> 00:00:47,657
well as the authoritative nameservers for gatech.edu. A

16
00:00:47,657 --> 00:00:50,937
final interesting example explores how to map an

17
00:00:50,937 --> 00:00:52,898
ip address. Back to a name, in

18
00:00:52,898 --> 00:00:56,486
this case, we're ultimately looking for PTRrecord, which

19
00:00:56,486 --> 00:00:59,394
the name corresponding to this ip address. But

20
00:00:59,394 --> 00:01:02,576
first, what happens is we receive a special

21
00:01:02,576 --> 00:01:05,672
referral when we ask the root servers about

22
00:01:05,672 --> 00:01:09,658
this particular IP address. Instead of being referred

23
00:01:09,658 --> 00:01:12,736
to a particular .com or .edu. We referred

24
00:01:12,736 --> 00:01:16,344
to a special top level domain called inaddr.arpa,

25
00:01:16,344 --> 00:01:20,034
which maintains referrals to authoritative servers

26
00:01:20,034 --> 00:01:23,314
that are maintained by the respective internet

27
00:01:23,314 --> 00:01:28,406
routing registries, such as ARN, RIPE, APNIC and so forth. So here we

28
00:01:28,406 --> 00:01:32,030
see a referral to inaddr.arpa. Subsequently,

29
00:01:32,030 --> 00:01:37,510
we see a referral to 130.in-addr.arpa corresponding

30
00:01:37,510 --> 00:01:41,590
to the first octet of the IP address. Next when we ask errant

31
00:01:41,590 --> 00:01:47,090
about 130.in-addr.arpa we receive another referral, which is to

32
00:01:47,090 --> 00:01:53,160
207.130.in-addr.arpa. And because 130.207

33
00:01:53,160 --> 00:01:58,890
is allocated to gatech.edu. Aaron knows that the appropriate referral

34
00:01:58,890 --> 00:02:03,170
for this part of the address space is to DNS 1,

35
00:02:03,170 --> 00:02:06,730
2, or 3.gottech.edu. Next we issue a query for the next part

36
00:02:06,730 --> 00:02:11,700
of the octet. 7.207.130.inanter.arpa

37
00:02:11,700 --> 00:02:16,732
corresponding to the first 3 octets. And now we actually get the PTR.

38
00:02:16,732 --> 00:02:21,700
Because DNS3.gatech.edu knows the reverse mapping

39
00:02:21,700 --> 00:02:26,960
between 130207.7.36 and the name for that IP address. So you can see

40
00:02:26,960 --> 00:02:31,840
that the PTR records, or those that map IP

41
00:02:31,840 --> 00:02:36,195
addresses to names, are resolved through a special hierarchy through

42
00:02:36,195 --> 00:02:40,300
in-addr.arpa at the root. Followed by a walk through the

43
00:02:40,300 --> 00:02:44,640
regional registries and ultimately, to the domains, such as gatech,

44
00:02:44,640 --> 00:02:48,480
that are responsible for particular regions of the IP address space.
