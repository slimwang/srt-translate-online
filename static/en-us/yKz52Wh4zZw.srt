1
00:00:00,190 --> 00:00:03,550
Okay. So one of the handy properties of memcached, and one of

2
00:00:03,550 --> 00:00:06,530
the things that makes a difference from a normal data base is, it

3
00:00:06,530 --> 00:00:10,030
stores everything in memory. That's why it's so fast because reading from

4
00:00:10,030 --> 00:00:12,990
memory is very fast. Reading from disk can be very slow. Which, which

5
00:00:12,990 --> 00:00:16,300
gives memcached a couple of properties. One is that it's fast. Two

6
00:00:16,300 --> 00:00:19,330
is that if you restart memcached, you lose all your data. So it's

7
00:00:19,330 --> 00:00:22,160
not durable. You know, if you have to restart that machine or

8
00:00:22,160 --> 00:00:25,130
restart memcached, the data isn't on disk. It's just in memory, and it's,

9
00:00:25,130 --> 00:00:27,370
and it's, and it disappears. So, you need to keep that in

10
00:00:27,370 --> 00:00:31,050
mind, that memcached is really just for caching, not for storing permanent

11
00:00:31,050 --> 00:00:34,150
data. Finally, the amount of data we can store in, in, in

12
00:00:34,150 --> 00:00:37,760
a particular instance of memechached is limited by how much memory that machine

13
00:00:37,760 --> 00:00:40,470
has. Or maybe you have a system of machines and your memcached

14
00:00:40,470 --> 00:00:45,220
library is bouncing over them. You can still only store so much data.

15
00:00:45,220 --> 00:00:47,590
So what happens when you try to store more data than there

16
00:00:47,590 --> 00:00:50,700
is memory available? And let's do this in the form of a quiz.

17
00:00:50,700 --> 00:00:54,320
Now, I know I haven't told you the answer to this, but see if you can figure

18
00:00:54,320 --> 00:00:56,428
it out. One of these answers is correct,

19
00:00:56,428 --> 00:00:58,400
and I'll explain after you give it a shot.
