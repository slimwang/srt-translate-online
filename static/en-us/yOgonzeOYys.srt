1
00:00:00,450 --> 00:00:04,600
So let's get started by looking
at the example Roman discussed.

2
00:00:04,600 --> 00:00:09,140
The awesome thing about this is that
most of the logic lies in the layout

3
00:00:09,140 --> 00:00:12,810
file and
the Java code stays pretty tame.

4
00:00:12,810 --> 00:00:17,240
The only time you refer to
the collapsing toolbar layout is here,

5
00:00:17,240 --> 00:00:18,930
where we assigned the title.

6
00:00:18,930 --> 00:00:23,360
Collapsing tool bar layout allows us to
set the title style when the tool bar

7
00:00:23,360 --> 00:00:25,670
is expanded or collapsed.

8
00:00:25,670 --> 00:00:28,460
We'll explore in a moment
why this is useful.

9
00:00:28,460 --> 00:00:32,049
So, let's take a look at
another food inspired app.

10
00:00:32,049 --> 00:00:36,300
As we can see, we don't have to be
limited to a solid background when

11
00:00:36,300 --> 00:00:38,310
dealing with a collapsing toolbar.

12
00:00:38,310 --> 00:00:41,200
When you scroll,
the image disappears and

13
00:00:41,200 --> 00:00:44,680
the word eclairs appears in the app bar.

14
00:00:44,680 --> 00:00:48,400
The interesting bits about this
image view are right here.

15
00:00:48,400 --> 00:00:52,070
We want the image to have
a parallax effect as it collapses.

16
00:00:52,070 --> 00:00:55,280
That's to say that the foreground
moves faster than the background,

17
00:00:55,280 --> 00:00:58,600
providing a sense of depth to the scene.

18
00:00:58,600 --> 00:01:02,860
In this layout we have a text view
whose content takes up a lot of space.

19
00:01:02,860 --> 00:01:05,790
We would expect to need
to use a scroll view.

20
00:01:05,790 --> 00:01:09,760
Without this line, the app doesn't
know when to scroll the toolbar, so

21
00:01:09,760 --> 00:01:12,210
your toolbar remains stationary.

22
00:01:12,210 --> 00:01:15,760
This is because AppBarLayout
expects to have a sibling

23
00:01:15,760 --> 00:01:19,320
in CoordinatorLayout that is
capable of nested scrolling.

24
00:01:19,320 --> 00:01:23,100
You can do that with a nested scroll
view from the support library, or

25
00:01:23,100 --> 00:01:26,090
by setting
nestedScrollingEnabled to true.

26
00:01:26,090 --> 00:01:29,950
The nestedScrollingEnabled property
is only present on scroll view for

27
00:01:29,950 --> 00:01:31,655
Lollipop and above.

28
00:01:31,655 --> 00:01:34,630
Nested scrolling works with
CoordinatorLayout to notify and

29
00:01:34,630 --> 00:01:36,840
manage when the app bar
should be scrolling,

30
00:01:36,840 --> 00:01:41,050
the nested view should be scrolling,
both should be scrolling, or none.

31
00:01:41,050 --> 00:01:43,915
Check the instructor's notes for
some resources on AppBarLayout.
