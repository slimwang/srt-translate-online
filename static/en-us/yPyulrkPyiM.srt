1
00:00:00,560 --> 00:00:01,649
David is right.

2
00:00:01,649 --> 00:00:03,215
The tester could, in fact,

3
00:00:03,215 --> 00:00:08,020
test and dismiss the state using the
kind of rule David was talking about.

4
00:00:08,020 --> 00:00:11,310
But, David, do you think there is
another way that this could be done?

5
00:00:11,310 --> 00:00:14,593
>> So, I guess, actually,
the generator could do it as well.

6
00:00:14,593 --> 00:00:19,309
So, in this case, we could also have
the generator say, I don't need to ever

7
00:00:19,309 --> 00:00:24,460
generate a state that involves sending
one person over to an empty coast.

8
00:00:24,460 --> 00:00:27,581
That's always going to result in a state
that the tester would have thrown out.

9
00:00:27,581 --> 00:00:30,432
And it's not going to result in any
states that the tester wouldn't have

10
00:00:30,432 --> 00:00:30,971
thrown out.

11
00:00:30,971 --> 00:00:32,549
So, generator could do it, too.

12
00:00:32,549 --> 00:00:34,327
>> That sounds like a good answer to me.

13
00:00:34,327 --> 00:00:38,146
So once again, we are back to the issue
of where do we draw the balance

14
00:00:38,146 --> 00:00:41,431
of responsibility between
the generator and the tester?

15
00:00:41,431 --> 00:00:45,510
The important thing to note from here,
however, is that generate and test,

16
00:00:45,510 --> 00:00:48,021
when endowed with the right
kind of knowledge,

17
00:00:48,021 --> 00:00:49,680
can be a very powerful method.
