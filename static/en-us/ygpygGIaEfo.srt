1
00:00:00,000 --> 00:00:03,000
In order to use the backward Euler method to come up with an expression

2
00:00:03,000 --> 00:00:08,000
for w at the n+1 step, we know that we're going to need an expression for w dot.

3
00:00:08,000 --> 00:00:12,000
So that's the first thing we deal with. Beginning with our equation for the force of friction.

4
00:00:12,000 --> 00:00:16,000
We know that the acceleration of the wheel depends on the force of friction

5
00:00:16,000 --> 00:00:18,000
divided by the mass of the wheel.

6
00:00:18,000 --> 00:00:21,000
So we plug in this expanded version of the equation for the force of friction

7
00:00:21,000 --> 00:00:25,000
into the equation for w dot and of course the track b.

8
00:00:25,000 --> 00:00:30,000
In the backward Euler method, it says that w at the n+1 step is equal to w at the n step

9
00:00:30,000 --> 00:00:35,000
plus the step size times the change in w at the n+1 step.

10
00:00:35,000 --> 00:00:39,000
Now that we have expression for w dot, we can plug into the proper location in the equation below.

11
00:00:39,000 --> 00:00:47,000
If rewritten as the wheel slip to see here and here as 1-w at the n+1 step over v,

12
00:00:47,000 --> 00:00:49,000
which of course is just an equivalent expression.

13
00:00:49,000 --> 00:00:52,000
This gets rid of any explicit dependents on this.

14
00:00:52,000 --> 00:00:57,000
Remember from what I said earlier that v here changes much more slowly than w.

15
00:00:57,000 --> 00:01:00,000
We then specify which v we're referring to right here.

16
00:01:00,000 --> 00:01:03,000
But if you were to be more clear, this is the subn+1.

17
00:01:03,000 --> 00:01:09,000
There's a little bit of rearranging we can rewrite this equation for w n+1 as this equation right here.

18
00:01:09,000 --> 00:01:12,000
The amazing slightly counter intuitive to rearrange things like this

19
00:01:12,000 --> 00:01:16,000
since this expression looks maybe longer and more awkward than this one does.

20
00:01:16,000 --> 00:01:19,000
Remember, however, that our initial request for w

21
00:01:19,000 --> 00:01:23,000
was that it obey an equation of the form that I wrote up here.

22
00:01:23,000 --> 00:01:29,000
We have a term with w subn+1 and then term with e to that value and also a constant.

23
00:01:29,000 --> 00:01:34,000
All just added together equal in 0. That's exactly what we have down here now.

24
00:01:34,000 --> 00:01:39,000
This makes our job very simple. Remember, we want to identify what c, d, f, and k are.

25
00:01:39,000 --> 00:01:41,000
And now, we can just read them directly off of this equation.

26
00:01:41,000 --> 00:01:44,000
In order to implement the backward Euler method and the code now,

27
00:01:44,000 --> 00:01:50,000
all we have to do is translate the variables c, d, f, and k into code just like I've done right here.

28
00:01:50,000 --> 00:01:53,000
The expression for w that the solver is going to output.

29
00:01:53,000 --> 00:01:56,000
is equivalent to the one that we just found using the backward Euler method.

30
00:01:56,000 --> 00:02:00,000
It's very simple since the solver has already established for this.

31
00:02:00,000 --> 00:02:03,000
All we have to do is fill in the proper values for these variables.

32
00:02:03,000 --> 00:02:07,000
In the introduction video, I didn't talk much about what the solver is actually doing.

33
00:02:07,000 --> 00:02:09,000
So now just take a second to explain that.

34
00:02:09,000 --> 00:02:12,000
It's implementing something called a Newton-Raphson method.

35
00:02:12,000 --> 00:02:15,000
This is a method used for solving implicit equations that are not linear.

36
00:02:15,000 --> 00:02:18,000
So it's a perfect fit for the situation that we are faced with right now.

37
00:02:18,000 --> 00:02:21,000
Let's say I have a function like this green curve right here

38
00:02:21,000 --> 00:02:24,000
for which I want to find the x value of a certain point.

39
00:02:24,000 --> 00:02:28,000
Maybe for example I'd like to find the x value of this x intercept right here.

40
00:02:28,000 --> 00:02:32,000
So the thing that we actually know about this point then is the y value, which is 0.

41
00:02:32,000 --> 00:02:35,000
To use in Newton-Raphson method, I start by making a guess

42
00:02:35,000 --> 00:02:38,000
at what the x value that appears to that y value is.

43
00:02:38,000 --> 00:02:42,000
Maybe I guess the x coordinate that corresponds this blue line right here.

44
00:02:42,000 --> 00:02:45,000
What the Newton-Raphson method does is it takes the slope of the line

45
00:02:45,000 --> 00:02:47,000
tangent to the green curve at this point.

46
00:02:47,000 --> 00:02:50,000
This may be that tangent line looks a little something like this

47
00:02:50,000 --> 00:02:54,000
and extends that line down to the y value that we're interested in.

48
00:02:54,000 --> 00:02:59,000
Now, the next x value that I will guess is going to be the point of that tangent line

49
00:02:59,000 --> 00:03:04,000
intersects the x axis in this case then I will do the same thing for this point and so on and so forth.

50
00:03:04,000 --> 00:03:08,000
And eventually, my results will converge to the actual point that I'm looking for.

51
00:03:08,000 --> 00:03:11,000
This is a very effective method for solving implicit equations.

52
00:03:11,000 --> 00:03:16,000
The general equation showing the movement from one guess to the next guess is shown right here.

53
00:03:16,000 --> 00:03:21,000
We can specify this to deal with the situation we're looking at by using this equation right here.

54
00:03:21,000 --> 00:03:26,000
And in fact, that's exactly what's written in the code in this expression for w_new.

55
00:03:26,000 --> 00:03:29,000
Now that we understand how are solvers working, let's look at the plot we get.

56
00:03:29,000 --> 00:03:32,000
What we have here is a series of plot that all depends on time.

57
00:03:32,000 --> 00:03:37,000
First, we have position then car velocity then wheel velocity and then wheel slip.

58
00:03:37,000 --> 00:03:40,000
The difference series shown by the different colors in each plot

59
00:03:40,000 --> 00:03:43,000
represent different values for the magnitude of the breaking acceleration.

60
00:03:43,000 --> 00:03:47,000
Fusing them really close in the different parts of the top graph, you'll be able to tell

61
00:03:47,000 --> 00:03:52,000
that 70 m/s² is the blue line; 100 m/s² is the green line;

62
00:03:52,000 --> 00:03:57,000
130 the red line; 160 the cyan line; and 190 the magenta line.

63
00:03:57,000 --> 00:04:03,000
So we can see then how different braking accelerations affect these 4 different quantities.

64
00:04:03,000 --> 00:04:06,000
Interestingly enough, it's the 130 m to second braking,

65
00:04:06,000 --> 00:04:09,000
which is one of the middle values that makes the car stopped first.

66
00:04:09,000 --> 00:04:14,000
When we slam on the brakes really hard which is shown at the magenta and cyan lines,

67
00:04:14,000 --> 00:04:18,000
the wheel stopped rotating very quickly and see the wheel velocity was 0 right away.

68
00:04:18,000 --> 00:04:21,000
However, in tandem with that, the wheel slip increases dramatically,

69
00:04:21,000 --> 00:04:23,000
and the wheels are locked very early on.

70
00:04:23,000 --> 00:04:26,000
As a result, the car velocity does not actually slid down much.

71
00:04:26,000 --> 00:04:31,000
Of course, as we would expect, we just don't put the brakes on very hard like with the blue one

72
00:04:31,000 --> 00:04:35,000
then the car does go a pretty far distance, and it actually does not come to stop it all

73
00:04:35,000 --> 00:04:38,000
in the time that we've allowed; however, this is the great example of how slamming on your brakes

74
00:04:38,000 --> 00:04:41,000
is not the most effective braking method.

75
00:04:41,000 --> 99:59:59,999
Great job on this problem.
