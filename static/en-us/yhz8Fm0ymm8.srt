1
00:00:00,150 --> 00:00:01,490
So let's take a look at a result.

2
00:00:01,490 --> 00:00:04,640
This comes from this nice little
database that was published,

3
00:00:04,640 --> 00:00:06,070
based upon this Pami paper.

4
00:00:06,070 --> 00:00:09,270
Comanici was one of the original
developers of mean shift as applied to

5
00:00:09,270 --> 00:00:10,260
Computer Vision.

6
00:00:10,260 --> 00:00:13,030
And what you can see here is, so here's
our original image, all right, and

7
00:00:13,030 --> 00:00:18,300
you apply mean shift, and,
it does a really fine job, all right?

8
00:00:18,300 --> 00:00:21,470
I mean, take a look at
this brick structure here.

9
00:00:21,470 --> 00:00:25,770
And you see all of those pixels
are put in the same region.

10
00:00:25,770 --> 00:00:29,543
Likewise, you get this front
of this building here.

11
00:00:29,543 --> 00:00:34,043
The whole sidewalk is on one cluster
with the exception of over this area,

12
00:00:34,043 --> 00:00:34,800
right?

13
00:00:34,800 --> 00:00:37,080
Well, that's in a dark
shadow from the tree.

14
00:00:37,080 --> 00:00:40,670
You'll notice the whole shadow
has been put into one cluster,

15
00:00:40,670 --> 00:00:43,910
because the system can't,
at this point know that it's a shadow.

16
00:00:43,910 --> 00:00:44,870
All right?

17
00:00:44,870 --> 00:00:49,510
But I think you would agree that if you
take a look at this picture here, and

18
00:00:49,510 --> 00:00:54,960
you were to draw boundaries around where
the different clusters were, okay,

19
00:00:54,960 --> 00:00:59,030
you would probably end up with an image
that looked something like that.

20
00:00:59,030 --> 00:01:03,660
Here are some more examples of
a mean shift segmentation result.

21
00:01:03,660 --> 00:01:05,069
And you can see it
does a pretty good job.

22
00:01:05,069 --> 00:01:06,830
You know,
take a look at this picture down here.

23
00:01:06,830 --> 00:01:10,120
All the water is put
into one cluster there.

24
00:01:10,120 --> 00:01:13,808
This foliage is broken out nicely,
the islands, etc.

25
00:01:13,808 --> 00:01:16,920
So if you've got
the right feature space,

26
00:01:16,920 --> 00:01:20,110
it does a pretty good job
of finding the clusters.

27
00:01:20,110 --> 00:01:23,060
Finally, I want to show you an example
that also comes from that same original

28
00:01:23,060 --> 00:01:23,700
database.

29
00:01:23,700 --> 00:01:27,570
And again, it has a nice, original
image here of a, of the mountain.

30
00:01:27,570 --> 00:01:30,940
And on the right hand side
are the segmentation results.

31
00:01:30,940 --> 00:01:34,190
So, the good news is, you can see
it does a pretty reasonable job.

32
00:01:34,190 --> 00:01:35,730
I mean, it pulls out this section,

33
00:01:35,730 --> 00:01:38,430
all of the section up here that
didn't have the snow on it.

34
00:01:38,430 --> 00:01:41,090
And maybe this, section here as well.

35
00:01:41,090 --> 00:01:45,230
But, notice all the texture
that's going on in here, okay?

36
00:01:45,230 --> 00:01:51,200
Well it's not that that's wrong, it's
just less clear [LAUGH] than it's right.

37
00:01:51,200 --> 00:01:55,800
What I mean by that is, it's not
totally clear what you're trying to do

38
00:01:55,800 --> 00:01:58,880
with this picture,
that you're carving it up into segments.

39
00:01:58,880 --> 00:02:01,380
That was original idea
behind the super pixels.

40
00:02:01,380 --> 00:02:05,330
The idea was,
let me carve this thing up into

41
00:02:05,330 --> 00:02:09,460
little atomic units that I know
don't have to be broken up again.

42
00:02:09,460 --> 00:02:13,140
But, whether I recombine them, or
use them together in some way,

43
00:02:13,140 --> 00:02:16,220
depends on upon the future
processing that you have to do.

44
00:02:16,220 --> 00:02:16,740
So often,

45
00:02:16,740 --> 00:02:21,640
what you'll do is a segmentation step to
create these broken up, these regions,

46
00:02:21,640 --> 00:02:25,120
and then figure out how to process
those regions going forward.

47
00:02:25,120 --> 00:02:27,020
So the segmentation then, in some sense,

48
00:02:27,020 --> 00:02:31,540
is a preprocessing step to give you a
much smaller set of units to work with.
