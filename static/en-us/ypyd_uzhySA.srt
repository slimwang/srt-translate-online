1
00:00:00,390 --> 00:00:02,810
So thus far, we have seen, two examples with

2
00:00:02,810 --> 00:00:07,010
classes. One, when we drew shapes using Turtles. And

3
00:00:07,010 --> 00:00:08,920
then the other one, when we sent out text

4
00:00:08,920 --> 00:00:13,710
messages using Twilio. Now, when we created shapes using Turtle.

5
00:00:13,710 --> 00:00:16,090
We hold a line of code that read, brad

6
00:00:16,090 --> 00:00:19,880
is equal to turtle.Turtle(). Now, what we are really trying

7
00:00:19,880 --> 00:00:21,840
to say with this line of code here, is

8
00:00:21,840 --> 00:00:26,580
that inside Python, there is a file called turtle, and

9
00:00:26,580 --> 00:00:29,640
inside that file, is a class called turtle. There

10
00:00:29,640 --> 00:00:31,720
it is. And when we try to access that

11
00:00:31,720 --> 00:00:35,180
class using this statement, specially with this, open, close

12
00:00:35,180 --> 00:00:37,950
brackets. What we are really doing behind the scenes, is

13
00:00:37,950 --> 00:00:41,290
calling the, init function defined inside the class. And

14
00:00:41,290 --> 00:00:44,360
what this function init does, is that it initializes, or

15
00:00:44,360 --> 00:00:47,910
creates space in memory for a new instance, which

16
00:00:47,910 --> 00:00:51,720
we called, brad. Brad is an object or instance of

17
00:00:51,720 --> 00:00:55,020
the class turtle. This instance brad, can then

18
00:00:55,020 --> 00:00:57,880
do things defined inside the class turtle, like,

19
00:00:57,880 --> 00:01:01,440
move the turtle forward. Similarly, when we, write

20
00:01:01,440 --> 00:01:03,940
a line of code that says client is

21
00:01:03,940 --> 00:01:07,950
equal to, rest.TwilioRestCclient(). What we are really trying

22
00:01:07,950 --> 00:01:10,900
to say, is that, inside Twilio, there is

23
00:01:10,900 --> 00:01:14,630
a folder called, rest. And inside that folder,

24
00:01:14,630 --> 00:01:16,920
is a Python file which has a class

25
00:01:16,920 --> 00:01:20,600
called TwilioRestClient. Now, when we call this

26
00:01:20,600 --> 00:01:22,780
line of code, the one where we access

27
00:01:22,780 --> 00:01:26,980
the class, TwilioRestClient(), with these open-closed brackets,

28
00:01:26,980 --> 00:01:28,945
what we are really doing, is calling a

29
00:01:28,945 --> 00:01:33,450
function,init. Defined inside that class TwilioRestClient. And

30
00:01:33,450 --> 00:01:35,450
what this function in it does, is again

31
00:01:35,450 --> 00:01:39,080
initializes or creates spaces in memory, for

32
00:01:39,080 --> 00:01:42,970
an object or instance of that class, TwilioRestClient.

33
00:01:42,970 --> 00:01:46,080
We call that object, client. The object

34
00:01:46,080 --> 00:01:49,050
client, can then do things defined inside that

35
00:01:49,050 --> 00:01:54,780
class, TwillioRestClient, like send smses or texts. So,

36
00:01:54,780 --> 00:01:57,390
in summation. You can think of a class,

37
00:01:57,390 --> 00:02:00,390
as a blueprint of a building. Now, this

38
00:02:00,390 --> 00:02:02,690
blueprint will have certain pieces of information about

39
00:02:02,690 --> 00:02:04,700
the building, like a number of rooms in

40
00:02:04,700 --> 00:02:07,900
the building, the area under the building etc.

41
00:02:07,900 --> 00:02:10,620
Now we can use the same blueprint, to build

42
00:02:10,620 --> 00:02:14,860
multiple buildings. For instance, a residential complex with yellow walls

43
00:02:14,860 --> 00:02:18,300
and an office building with, blue walls. Similarly, a

44
00:02:18,300 --> 00:02:21,290
class. Let's take the example of class Turtle that we've

45
00:02:21,290 --> 00:02:23,980
used thus far. Now, this has information about the

46
00:02:23,980 --> 00:02:26,890
turtle, for instance, how to make the turtle move forward,

47
00:02:26,890 --> 00:02:30,010
how to make the turtle turn right,etc. Now, we

48
00:02:30,010 --> 00:02:33,430
can use one class as a blueprint or a template

49
00:02:33,430 --> 00:02:37,920
to create, multiple instances like Brad and Angie.

50
00:02:37,920 --> 00:02:40,570
Now, these instances. They can do things that

51
00:02:40,570 --> 00:02:43,290
are defined inside our class or blue print.

52
00:02:43,290 --> 00:02:46,440
Things like, move forward, turn right, and draw

53
00:02:46,440 --> 00:02:50,160
a circle. Now, recently, we've seen another class,

54
00:02:50,160 --> 00:02:53,080
and this class is called Twilio Rest Client.

55
00:02:53,080 --> 00:02:54,930
Which I have just abbreviated here for lack

56
00:02:54,930 --> 00:02:58,500
of space. This class, has information about how

57
00:02:58,500 --> 00:03:00,570
to connect with Twillio and send a text

58
00:03:00,570 --> 00:03:04,560
message. And from, this blueprint. We can then create

59
00:03:04,560 --> 00:03:07,530
an instance called, client. Client can then do

60
00:03:07,530 --> 00:03:10,690
things that are defined inside the class, like, send

61
00:03:10,690 --> 00:03:12,950
out texts. So you can think of a

62
00:03:12,950 --> 00:03:16,700
class, as a blueprint, which have some basic information

63
00:03:16,700 --> 00:03:18,940
defined inside of them. And you can think of

64
00:03:18,940 --> 00:03:23,330
its objects, as examples or instances, of that blueprint.
