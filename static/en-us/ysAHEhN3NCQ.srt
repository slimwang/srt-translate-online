1
00:00:00,138 --> 00:00:03,090
Let's revisit the string
to int conversion problem.

2
00:00:03,090 --> 00:00:06,650
Remember that this invocation
should return an int value or

3
00:00:06,650 --> 00:00:09,008
nil if the string can't be converted.

4
00:00:09,008 --> 00:00:11,593
But of course, z is a plain old int.

5
00:00:11,593 --> 00:00:13,136
It can't store nil.

6
00:00:13,136 --> 00:00:15,792
That's why the compiler's complaining.

7
00:00:15,792 --> 00:00:17,496
It's time to make an optional.

8
00:00:17,496 --> 00:00:19,149
Z shouldn't be an int.

9
00:00:19,149 --> 00:00:24,244
It should be an optional that can store
either of two things, an int or nil.

10
00:00:24,244 --> 00:00:28,159
We change the data type of z,
and the compiler is happy.

11
00:00:28,159 --> 00:00:32,340
Let's look at our other example, a
property that should be able to be nil.

12
00:00:32,340 --> 00:00:34,998
Here's our simple
View Controller subclass, and

13
00:00:34,998 --> 00:00:38,905
we want it to have a button property,
but it won't have a value right away.

14
00:00:38,905 --> 00:00:43,785
The value will be assigned after it's
constructed, perhaps by Storyboard.

15
00:00:43,785 --> 00:00:47,193
But the compiler won't accept it,
because this is not an optional,

16
00:00:47,193 --> 00:00:48,263
it can't store nil.

17
00:00:48,263 --> 00:00:51,152
So the class can't ever be created.

18
00:00:51,152 --> 00:00:54,328
There's no button value
set in the constructor.

19
00:00:54,328 --> 00:00:57,313
We need this property
to be a conditional, so

20
00:00:57,313 --> 00:01:00,311
that its value can be nil
until it gets set up.

21
00:01:00,311 --> 00:01:04,040
So we redeclare it with a question mark,
and the compiler is happy
