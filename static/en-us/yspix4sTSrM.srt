1
00:00:00,210 --> 00:00:05,460
Okay, so let's see the ROB quiz solution. So we do need the ROB to.

2
00:00:05,460 --> 00:00:09,080
Remember the program order. That's the only place where the program order is

3
00:00:09,080 --> 00:00:12,970
preserved between the issue which is done in program order, and the commit which

4
00:00:12,970 --> 00:00:16,309
is also done in program order because things in between are done out of order.

5
00:00:16,309 --> 00:00:21,060
So, we definitely need the ROB for that. To temporarily store the instructions

6
00:00:21,060 --> 00:00:25,670
result, yes. The ROB holds the instruction's result between the time when it is

7
00:00:25,670 --> 00:00:29,480
produced, meaning when we're actually broadcasting it on the bus.

8
00:00:29,480 --> 00:00:33,280
And the time when the instruction's result is committed to the register file, so

9
00:00:33,280 --> 00:00:38,260
we definitely have that role for the ROB. To service the name or the TAG for

10
00:00:38,260 --> 00:00:42,990
the result. Yes. With [UNKNOWN] algorithm the reservation station was playing

11
00:00:42,990 --> 00:00:47,680
this role bit with the ROB, the ROB entry is really going to serve this role for

12
00:00:47,680 --> 00:00:52,511
an instruction. To store the source operands, until dispatch,

13
00:00:52,511 --> 00:00:57,040
know the reservation's station still. Will retain this role, basically

14
00:00:57,040 --> 00:00:59,990
the reservation station still stores the source operand until dispatch, so

15
00:00:59,990 --> 00:01:04,090
this answer is not correct. And to determine which instruction goes to which

16
00:01:04,090 --> 00:01:08,530
execution unit, again ROB doesn't play this role, the rob is usually unified

17
00:01:08,530 --> 00:01:11,870
meaning all of the instructions go to the same ROB, they just get different

18
00:01:11,870 --> 00:01:16,220
entries in it. We know which execution unit instructions should go to because,

19
00:01:16,220 --> 00:01:19,440
different execution units have different reservation stations. So, when we

20
00:01:19,440 --> 00:01:22,740
issue an instruction we send it to the right set of reservation stations and

21
00:01:22,740 --> 00:01:25,590
that determines what is going to be the execution unit.

22
00:01:25,590 --> 00:01:27,200
So, this answer is also not correct.
