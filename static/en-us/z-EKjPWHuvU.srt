1
00:00:00,190 --> 00:00:03,280
I decided to do example number two. First off,

2
00:00:03,280 --> 00:00:06,440
we request the page and start receiving the HTML.

3
00:00:06,440 --> 00:00:08,570
We start parsing it immediately and building the DOM.

4
00:00:09,710 --> 00:00:14,790
We come across two style sheets. Style.css and print.css

5
00:00:14,790 --> 00:00:17,390
with a media query for print. We aren't printing,

6
00:00:17,390 --> 00:00:20,050
so print.css isn't a part of the critical rendering

7
00:00:20,050 --> 00:00:22,220
path. We only have to send out a request

8
00:00:22,220 --> 00:00:25,520
for style.css. And then we continue parsing the DOM.

9
00:00:25,520 --> 00:00:27,330
We run into two script tags at the end of

10
00:00:27,330 --> 00:00:32,600
the body. One for app.js and another for analytics.js. analytics.js

11
00:00:32,600 --> 00:00:34,960
is async, so it's not a part of the critical

12
00:00:34,960 --> 00:00:38,570
rendering path. We fire off a request for app.js and

13
00:00:38,570 --> 00:00:41,380
halt building the DOM while we wait for CSS to

14
00:00:41,380 --> 00:00:44,401
arrive and the CSSOM to be built. Now that we

15
00:00:44,401 --> 00:00:47,384
have the CSSOM, the job script engine is unblocked, so

16
00:00:47,384 --> 00:00:50,556
we can run app.js, finish building the DOM and then render

17
00:00:50,556 --> 00:00:52,680
the page. That wasn't to bad.
