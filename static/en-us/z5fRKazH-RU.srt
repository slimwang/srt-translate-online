1
00:00:00,000 --> 00:00:04,075
To begin writing our task for GET
method, I'm still in this split view.

2
00:00:04,075 --> 00:00:05,816
And on the left, I have the task for

3
00:00:05,816 --> 00:00:09,250
GET method that we're going to
implement in the TMDB client.

4
00:00:09,250 --> 00:00:09,810
And on the right,

5
00:00:09,810 --> 00:00:14,230
we're looking at the get SessionID
method in the login view controller.

6
00:00:14,230 --> 00:00:16,960
And if you don't know how to use
the split view, you just need to select

7
00:00:16,960 --> 00:00:21,120
the assistant editor here and
then you can select which files you want

8
00:00:21,120 --> 00:00:25,760
using these file navigators here at
the top for the left and right views.

9
00:00:25,760 --> 00:00:30,260
Now, what we want to do is pull the
common code elements out of getSessionID

10
00:00:30,260 --> 00:00:33,240
from here on the right into
the taskForGETMethod on the left.

11
00:00:34,290 --> 00:00:38,230
Now as we stated earlier, each method
may have different parameters, but

12
00:00:38,230 --> 00:00:40,190
they all take the ApiKey.

13
00:00:42,260 --> 00:00:43,380
So as our first step for

14
00:00:43,380 --> 00:00:47,880
test for GEt method, we can ensure that
the APIs included in our request by

15
00:00:47,880 --> 00:00:52,180
adding it to our parameters dictionary,
that's past in the function.

16
00:00:52,180 --> 00:00:56,620
And remember, this can change, because
the dictionary itself can change,

17
00:00:56,620 --> 00:00:59,840
because we declared it
as a variable parameter.

18
00:00:59,840 --> 00:01:02,830
Next, we need to build the URL
on the requested object.

19
00:01:02,830 --> 00:01:06,557
So I've copied over the two and
three steps here from getSessionID, but

20
00:01:06,557 --> 00:01:08,450
they need to be tweaked slightly, so

21
00:01:08,450 --> 00:01:12,197
that we can construct the URL depending
on the method that we're using.

22
00:01:12,197 --> 00:01:16,042
And remember, we pass in the method
strain as the first parameter for

23
00:01:16,042 --> 00:01:17,245
taskForGETMethod.

24
00:01:17,245 --> 00:01:22,905
So for the withPathExtension argument,
let's just change this to method.

25
00:01:22,905 --> 00:01:27,353
Now let's create the request and start
to finding the completion handler for

26
00:01:27,353 --> 00:01:29,419
the data task with request method.

27
00:01:29,419 --> 00:01:33,238
In getSessionID, the first thing that
we do is to find the display error

28
00:01:33,238 --> 00:01:36,625
function, but we don't need
that here in taskForGETMethod.

29
00:01:36,625 --> 00:01:41,175
Instead, we'll let whoever calls task
for GET method handle any errors that

30
00:01:41,175 --> 00:01:44,264
we pass back using that
completionHandlerForGET.

31
00:01:44,264 --> 00:01:47,879
Remember, how when we looked at
taskForGETImage, I think it was.

32
00:01:47,879 --> 00:01:51,228
Yep and login view controller that we
can respond to the image data that was

33
00:01:51,228 --> 00:01:54,846
being passed back or the error that was
being passed back, that's where we're

34
00:01:54,846 --> 00:01:58,104
going to let people respond to the
errors using this completion handler.

35
00:01:58,104 --> 00:02:00,686
So, we're not going to add that here.

36
00:02:00,686 --> 00:02:03,513
Instead, the first thing that we're
going to do is make these GUARD checks.

37
00:02:03,513 --> 00:02:07,767
So, let's copy the GUARD statements
that we've been using all along and

38
00:02:07,767 --> 00:02:09,422
let's move them over here.

39
00:02:12,686 --> 00:02:15,145
And instead of calling it displayError,

40
00:02:15,145 --> 00:02:18,951
we can use the completionHandlerforGET
to send the error back.

41
00:02:22,389 --> 00:02:24,552
So I'll define a method
called sendError,

42
00:02:24,552 --> 00:02:26,895
which is going to be similar
to our displayError.

43
00:02:26,895 --> 00:02:30,406
It's going to construct
a NSError like we need and

44
00:02:30,406 --> 00:02:35,846
then our result that it's going to pass
back is nil and then we can just simply

45
00:02:35,846 --> 00:02:40,793
replace diplayError with sendError,
sendError and sendError.

46
00:02:40,793 --> 00:02:42,244
There we go.

47
00:02:42,244 --> 00:02:46,900
Now, we're ready to turn our JSON
into a usable dictionary after

48
00:02:46,900 --> 00:02:49,279
we've made these GUARD checks.

49
00:02:49,279 --> 00:02:52,165
Now, we can do that by
copying this code over or

50
00:02:52,165 --> 00:02:56,161
we can use a method that's already
defined in the TMDB client and

51
00:02:56,161 --> 00:03:00,026
that method is called
convertDataWithCompletionHandler.

52
00:03:00,026 --> 00:03:05,201
So if we pass in our data and then it
also takes a completion handler and

53
00:03:05,201 --> 00:03:08,504
this completion handler, its signature,

54
00:03:08,504 --> 00:03:12,988
it matches the signature of
our completionHandleForGET.

55
00:03:15,871 --> 00:03:20,800
So, let's do that and then let's go
down to see what this or we could scroll

56
00:03:20,800 --> 00:03:25,051
down or we can click to see what
this method actually looks like.

57
00:03:25,051 --> 00:03:30,309
Now, this method takes our data and then
it takes a completion handler or closure

58
00:03:30,309 --> 00:03:35,663
matching the closure type that we saw
for what is it, completionHandlerForGET.

59
00:03:35,663 --> 00:03:40,023
So let's go back down here and what
this is going to allowed us method to do

60
00:03:40,023 --> 00:03:43,954
is to handle the converting of our
data into usable dictionary and

61
00:03:43,954 --> 00:03:47,470
because it takes our completion handler,
it can call it.

62
00:03:47,470 --> 00:03:51,756
So if this conversion into
usable dictionary fails,

63
00:03:51,756 --> 00:03:55,186
then it can call our
completion handler and

64
00:03:55,186 --> 00:03:59,485
it will pass nil for
the results and pass the NSError.

65
00:03:59,485 --> 00:04:01,879
Our error with
the ConvertDataWithCompletionHandler.

66
00:04:01,879 --> 00:04:05,778
Otherwise, it'll call it and
pass our results back,

67
00:04:05,778 --> 00:04:08,840
our usable dictionary and
an error of nil.

68
00:04:08,840 --> 00:04:12,936
And this will bubble backup to
where it's being called here,

69
00:04:12,936 --> 00:04:17,108
which in turn, you can think of
it as bubbling back u to wherever

70
00:04:17,108 --> 00:04:21,870
the completionHandlerForGET is defined,
so in our view controller.

71
00:04:21,870 --> 00:04:26,588
It will bubble back up with either
the resulting data or our error and

72
00:04:26,588 --> 00:04:30,722
the last thing we need to do is
to make sure we start the task,

73
00:04:30,722 --> 00:04:34,141
which we already have that there and
that's it.

74
00:04:34,141 --> 00:04:38,069
We now have a reusable method
that will make a GET request and

75
00:04:38,069 --> 00:04:41,616
return some data or
an error from the movie database.

76
00:04:41,616 --> 00:04:44,930
So next, we're going to do the same
thing for task for POST method.
