1
00:00:00,850 --> 00:00:04,960
For our second exercise, you might
be shocked that you need to open up

2
00:00:06,320 --> 00:00:09,620
the second exercise project,
display toy list.

3
00:00:11,439 --> 00:00:15,155
It will contain the next
valuable to-do items.

4
00:00:15,156 --> 00:00:19,780
Any feeling of deja vu that you might be
experiencing at this point is completely

5
00:00:19,780 --> 00:00:20,893
understandable.

6
00:00:20,893 --> 00:00:24,821
Your next task is to go to
the Java Source Code, and

7
00:00:24,821 --> 00:00:28,230
declare the text view variable.

8
00:00:28,230 --> 00:00:31,440
But then we need to get a reference
to the text view from the layout, and

9
00:00:31,440 --> 00:00:34,929
set the text view to display
the string containing the large list of

10
00:00:34,929 --> 00:00:37,750
toys we've given you as part
of our concerted effort

11
00:00:37,750 --> 00:00:41,060
to relieve you from
unnecessary creativity.

12
00:00:41,060 --> 00:00:43,784
Feel free to come up with your
own toys if you don't like ours.

13
00:00:43,783 --> 00:00:47,506
But how do we get a reference to our
text view that was created when our

14
00:00:47,506 --> 00:00:49,679
layout was inflated?

15
00:00:49,679 --> 00:00:54,185
First, we'll have to go to the layout,
and give the text view an ID.

16
00:00:54,185 --> 00:00:58,505
Which is a numeric identifier
that Android uses to identify and

17
00:00:58,505 --> 00:01:01,115
located the text view fortunately

18
00:01:01,115 --> 00:01:04,504
the Android tool will actually
come up with a number for us.

19
00:01:04,504 --> 00:01:10,002
We just need to assign it
a descriptive name like this,

20
00:01:10,001 --> 00:01:12,882
@+id/tv_toy_names.

21
00:01:12,882 --> 00:01:17,685
The @ sign tells the tools not to treat
the stuff inside the quotes as a string

22
00:01:17,685 --> 00:01:18,600
literal.

23
00:01:18,599 --> 00:01:22,268
And to instead, look for the contents
inside of the Android resources.

24
00:01:22,268 --> 00:01:27,579
While the plus sign tells the tool to
create the id if it doesn't yet exist.

25
00:01:27,579 --> 00:01:32,569
The id preceding the slash, lets
the tools know that we're creating an id

26
00:01:32,569 --> 00:01:37,419
rather than a reference to something
like a style, string, or image drawable.

27
00:01:37,420 --> 00:01:44,260
Then we return to the text view,
and use r.id.tv_to_named

28
00:01:44,260 --> 00:01:48,380
with the findViewById
method to find our view.

29
00:01:49,560 --> 00:01:53,870
But where did that mysterious
TV toy names constant come from,

30
00:01:53,870 --> 00:01:56,200
that's very similar to what
we entered into the layout.

31
00:01:57,329 --> 00:02:01,140
Well the R class is autogenerated
by the Android tool chain.

32
00:02:01,140 --> 00:02:05,283
But because Java doesn't allow for
slashes in variable names,

33
00:02:05,283 --> 00:02:08,824
the tools replace the slash
after the id with a period.

34
00:02:08,824 --> 00:02:11,640
Then we get our toy names arraigned and

35
00:02:11,639 --> 00:02:17,419
we can just call text view append
method with each of the toy names.

36
00:02:17,419 --> 00:02:21,059
Separating each toy with with
a series of three line separators,

37
00:02:21,060 --> 00:02:24,939
which on Android happens to be a \n.

38
00:02:24,939 --> 00:02:26,807
All right, now it's your turn.

39
00:02:26,807 --> 00:02:29,009
So we really want to do this in order.

40
00:02:29,009 --> 00:02:33,549
We first add the ID to
the TextView to the layout XML.

41
00:02:33,550 --> 00:02:35,930
This allows us to find it
within the Java source.

42
00:02:36,949 --> 00:02:40,919
Finally, we've given you array of
strings containing different toy names.

43
00:02:40,919 --> 00:02:43,799
You write code to take each of
these strings from the array and

44
00:02:43,800 --> 00:02:46,240
append them one at time to the tax view.

45
00:02:46,240 --> 00:02:49,405
Separating each one with 3\n

