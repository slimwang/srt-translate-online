1
00:00:00,370 --> 00:00:02,200
I've always said that the fun part of

2
00:00:02,200 --> 00:00:05,770
any systems research is the technical details and implementing

3
00:00:05,770 --> 00:00:08,440
an idea. So let's look at some of

4
00:00:08,440 --> 00:00:12,170
the implementation details here. So what's going to happen is

5
00:00:12,170 --> 00:00:19,930
that when a process or a thread on a processor Tries to write to a page X.

6
00:00:19,930 --> 00:00:22,770
At the point of writing to that page X,

7
00:00:22,770 --> 00:00:25,520
the operating system is going to say this guy wants

8
00:00:25,520 --> 00:00:29,630
to write to this X, I'm going to make a twin for this page, so there's the

9
00:00:29,630 --> 00:00:32,729
original page, and then the twin for the

10
00:00:32,729 --> 00:00:38,030
same page, and the original page is writeable by

11
00:00:38,030 --> 00:00:40,870
this process. That mapping is there in the

12
00:00:40,870 --> 00:00:44,240
page table. This new copy, a twin, has been

13
00:00:44,240 --> 00:00:47,030
created in physical memory. It's not mapped into the

14
00:00:47,030 --> 00:00:50,940
page table of any process. It is just additional

15
00:00:50,940 --> 00:00:55,110
copy of the same page created by the operating system as a twin. So this page

16
00:00:55,110 --> 00:00:57,170
has been made writable and therefore the thread

17
00:00:57,170 --> 00:00:59,840
can make changes to the X, which is the

18
00:00:59,840 --> 00:01:05,860
original copy of the page. So the thread reaches the release point.

19
00:01:05,860 --> 00:01:10,550
So when the thread reaches the release point, what the DSM software is going to

20
00:01:10,550 --> 00:01:16,110
do, is compute the depth between the changes

21
00:01:16,110 --> 00:01:19,430
that have been made, and the original

22
00:01:19,430 --> 00:01:23,180
version. The original version, we created a twin,

23
00:01:23,180 --> 00:01:28,210
right? So this is the twin, and this is the original page, but this original

24
00:01:28,210 --> 00:01:34,210
page we made modifications to. X has now become x prime, and this is the twin,

25
00:01:34,210 --> 00:01:41,332
which is containing the page as it was before The thread started writing to it.

26
00:01:41,332 --> 00:01:44,190
So the DSM software at the release point, is

27
00:01:44,190 --> 00:01:48,020
going to compute the diff between the original copy of

28
00:01:48,020 --> 00:01:50,310
the page, and the modified copy of the page.

29
00:01:51,320 --> 00:01:54,800
And the diff is going to be computed as a

30
00:01:54,800 --> 00:01:59,150
run link encoded diff. Meaning that all of the

31
00:01:59,150 --> 00:02:01,840
Page is not been modified. It's only this portion

32
00:02:01,840 --> 00:02:03,120
and this portion of the page that have been

33
00:02:03,120 --> 00:02:06,650
modified. So the diff is going to be computed as

34
00:02:06,650 --> 00:02:09,919
oh, the page is changed starting from here

35
00:02:09,919 --> 00:02:13,060
up until here and starting from here up until

36
00:02:13,060 --> 00:02:15,420
here. This is the starting point for the change

37
00:02:15,420 --> 00:02:17,370
and this is the amount of change and this

38
00:02:17,370 --> 00:02:20,040
is the content of the change. The diff in

39
00:02:20,040 --> 00:02:23,510
the data structure that had been created by the

40
00:02:23,510 --> 00:02:26,890
DSM software to remember the changes that had been

41
00:02:26,890 --> 00:02:31,660
made to this data x prior to release as

42
00:02:31,660 --> 00:02:37,558
you may have imagined already when the same block That governs

43
00:02:37,558 --> 00:02:44,160
[UNKNOWN] to this page which was released over here is acquired by a

44
00:02:44,160 --> 00:02:51,510
different processor at the point of acquisition. What we're going to do is we're

45
00:02:51,510 --> 00:02:56,900
going to invalidate all the pages that were touched In this critical section,

46
00:02:56,900 --> 00:03:00,080
including x. So, x will be invalidated at

47
00:03:00,080 --> 00:03:03,460
the point of acquisition of the same lock

48
00:03:03,460 --> 00:03:06,540
that is governing this critical section. And when

49
00:03:06,540 --> 00:03:10,200
that processor has a page fault for page

50
00:03:10,200 --> 00:03:15,820
x. A DSM software knows that, oh, there is a Diff lying around on this node

51
00:03:15,820 --> 00:03:18,400
which is needed in order to update the

52
00:03:18,400 --> 00:03:22,000
page and give it to the current lock acquirer.

53
00:03:22,000 --> 00:03:24,080
So, that's part of what goes on under

54
00:03:24,080 --> 00:03:27,670
the covers in the implementation. But so far

55
00:03:27,670 --> 00:03:31,780
as this node is concerned When the release

56
00:03:31,780 --> 00:03:34,440
operation is done, at that point, the DSM

57
00:03:34,440 --> 00:03:38,260
software is going to compute the diff between

58
00:03:38,260 --> 00:03:41,890
changes made to this page and its original

59
00:03:41,890 --> 00:03:44,510
copy of the page and keep that as

60
00:03:44,510 --> 00:03:47,310
a diff data structure. And there are multiple pages,

61
00:03:47,310 --> 00:03:49,980
all of the diffs will be created. At the

62
00:03:49,980 --> 00:03:52,880
point of release. And once this thread that was in

63
00:03:52,880 --> 00:03:56,080
this critical section has completed its release operation, we will

64
00:03:56,080 --> 00:04:00,920
write protect this page X. We're write protecting it to

65
00:04:00,920 --> 00:04:03,290
indicate that this guy cannot write to it anymore

66
00:04:03,290 --> 00:04:05,130
unless he gets in the critical section and we have

67
00:04:05,130 --> 00:04:08,320
to do the coherence actions again. And that's the implementation

68
00:04:08,320 --> 00:04:12,400
of the protocol. And at this point we write-protect the

69
00:04:12,400 --> 00:04:14,740
original page and we can also get rid of

70
00:04:14,740 --> 00:04:18,779
the twin. The use for this twin is complete. We

71
00:04:18,779 --> 00:04:21,310
only needed it in order to compute this dift.

72
00:04:21,310 --> 00:04:26,500
We've computed it and we write-protected the original page and

73
00:04:26,500 --> 00:04:28,720
everything that needs to be done on this node

74
00:04:28,720 --> 00:04:31,620
is complete and we can get rid of this twin

75
00:04:31,620 --> 00:04:34,390
and getting rid of this twin essentially means That

76
00:04:34,390 --> 00:04:37,890
we are freeing up the physical memory that we allocated

77
00:04:37,890 --> 00:04:39,950
for creating the twin in the first place.
