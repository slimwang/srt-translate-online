1
00:00:00,590 --> 00:00:03,480
GitHub is a website that makes it easy to share an entire git

2
00:00:03,480 --> 00:00:05,400
repository with other people.

3
00:00:05,400 --> 00:00:08,850
For example, here's a repository that we've created at Udacity.

4
00:00:08,850 --> 00:00:10,650
This repository is the source for

5
00:00:10,650 --> 00:00:13,620
a browser-based, create your own adventure story.

6
00:00:13,620 --> 00:00:15,850
Here are all the files in the repository.

7
00:00:15,850 --> 00:00:17,080
I can click round and

8
00:00:17,080 --> 00:00:20,990
navigate the directory structure and I can look at the commit history.

9
00:00:20,990 --> 00:00:24,150
If I go back to the main page and scroll down a little bit,

10
00:00:24,150 --> 00:00:26,160
you can see some information about the project.

11
00:00:26,160 --> 00:00:29,580
I can also directly view the contents of files, assuming they're plain text,

12
00:00:29,580 --> 00:00:31,710
like code or the story.

13
00:00:31,710 --> 00:00:33,990
GitHub also supports a couple of other formats for

14
00:00:33,990 --> 00:00:37,190
things like images, 3D models, and map data.

15
00:00:37,190 --> 00:00:40,260
In this file, I can click through to the story itself and

16
00:00:40,260 --> 00:00:42,190
start making some choices.

17
00:00:42,190 --> 00:00:45,880
You can always go back to the main page at the repository by clicking here.

18
00:00:45,880 --> 00:00:49,130
This is a public repository so anybody can look at these contents and

19
00:00:49,130 --> 00:00:50,300
suggest changes.

20
00:00:50,300 --> 00:00:53,720
Caroline and I will go over how this works in detail in this lesson and

21
00:00:53,720 --> 00:00:56,690
by the end of the lesson, you'll be able to contribute to it yourself.

22
00:00:56,690 --> 00:01:00,220
This is a living project, so by the time you visit this page things might look

23
00:01:00,220 --> 00:01:03,520
a little bit different, but the basics will be the same.

24
00:01:03,520 --> 00:01:06,860
GitHub is the home of many public projects like this one.

25
00:01:06,860 --> 00:01:09,970
A lot of public projects are open source, meaning that you can copy and

26
00:01:09,970 --> 00:01:12,460
modify the code for your own purposes.

27
00:01:12,460 --> 00:01:14,590
GitHub also lets you suggest changes and

28
00:01:14,590 --> 00:01:17,100
send them back to the creator of the project.

29
00:01:17,100 --> 00:01:19,990
Some of these open source projects are pretty small, and

30
00:01:19,990 --> 00:01:24,470
relatively unknown, like mathquill, which only has ten contributors.

31
00:01:24,470 --> 00:01:26,070
You might recognize this one.

32
00:01:26,070 --> 00:01:30,460
Some projects are much larger, like iPython, an interactive shell for

33
00:01:30,460 --> 00:01:32,680
Python that's nicer than the one you get by default.

34
00:01:33,930 --> 00:01:36,070
Another large project is Bootstrap,

35
00:01:36,070 --> 00:01:38,280
which is a framework that makes it easier to do web development.

36
00:01:39,320 --> 00:01:42,360
There's also jQuery, a JavaScript Library that makes it

37
00:01:42,360 --> 00:01:47,170
easy to interact with HTML and Atom, a text editor designed for

38
00:01:47,170 --> 00:01:50,740
editing code, and allowing users to customize their experience.

39
00:01:50,740 --> 00:01:54,430
These are projects that anyone could theoretically contribute to, of course,

40
00:01:54,430 --> 00:01:58,260
any changes must be accepted by the people maintaining the project.

41
00:01:58,260 --> 00:02:01,770
But even if the original author chooses not to incorporate your changes,

42
00:02:01,770 --> 00:02:03,990
you can still keep your own version.

43
00:02:03,990 --> 00:02:06,890
GitHub aims to promote open source by allowing anyone to

44
00:02:06,890 --> 00:02:12,350
host public repositories for free and charging for private repositories.

45
00:02:12,350 --> 00:02:16,210
Many companies including Udacity use Git to keep track of changes to their

46
00:02:16,210 --> 00:02:20,727
proprietary code and use GitHub to host a private copy of their repository and

47
00:02:20,727 --> 00:02:24,700
allow for easy code reviews when developers submit changes.

48
00:02:24,700 --> 00:02:27,580
For this lesson you'll be interacting with GitHub a lot.

49
00:02:27,580 --> 00:02:31,510
Creating, modifying, and suggesting changes to public repositories.

50
00:02:31,510 --> 00:02:32,560
So you'll need to set up an account.

51
00:02:33,570 --> 00:02:34,940
This is pretty straightforward but

52
00:02:34,940 --> 00:02:37,730
you'll probably also want to get set up to smoothly interact with

53
00:02:37,730 --> 00:02:41,480
GitHub from the command line which is a little bit more involved.

54
00:02:41,480 --> 00:02:44,410
You'll see instructions for how to get everything set up after this video.
