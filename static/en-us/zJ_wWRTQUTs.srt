1
00:00:00,290 --> 00:00:03,690
To find the number of enrollments
I'll use the len function.

2
00:00:03,690 --> 00:00:07,650
And running this cell I can see
that there were 1,640 enrollments.

3
00:00:08,710 --> 00:00:11,210
To find the number of unique
students who enrolled,

4
00:00:11,210 --> 00:00:14,960
I'll add the account keys to a set and
then look at the length of the set.

5
00:00:14,960 --> 00:00:17,904
So, first I'll create an empty set
called unique_enrolled_students.

6
00:00:19,020 --> 00:00:21,400
Then I'll loop through the enrollments.

7
00:00:21,400 --> 00:00:23,900
And I'll add the account key from
each enrollment to this set.

8
00:00:25,000 --> 00:00:27,700
Finally, I'll look at
the length of the set.

9
00:00:27,700 --> 00:00:31,500
And it turns out that there were
1302 unique students who enrolled.

10
00:00:31,500 --> 00:00:34,500
The reason these two numbers are
different is that students can enroll

11
00:00:34,500 --> 00:00:35,248
then cancel.

12
00:00:35,248 --> 00:00:37,450
Then re-enroll later.

13
00:00:37,450 --> 00:00:41,120
Next I'll check how many entries
are in the daily engagement table, and

14
00:00:41,120 --> 00:00:41,990
there are a lot more,

15
00:00:41,990 --> 00:00:46,030
which makes sense since there should
be multiple entries for each student.

16
00:00:46,030 --> 00:00:49,110
To find the unique number of students
in the daily engagement table

17
00:00:49,110 --> 00:00:52,850
I'll need similar code to before,
so I'll copy and paste it.

18
00:00:52,850 --> 00:00:54,980
First, I'll need to change
the table I'm lifting over.

19
00:00:56,270 --> 00:00:59,300
Now, I don't technically need
to change the name of the set.

20
00:00:59,300 --> 00:01:02,810
I could name both sets
unique students for example.

21
00:01:02,810 --> 00:01:05,540
But then the second set would
overwrite the first set.

22
00:01:05,540 --> 00:01:09,310
So when using iPython Notebook it's
often a good idea to give a new name to

23
00:01:09,310 --> 00:01:10,410
each new variable so

24
00:01:10,410 --> 00:01:12,980
that you'll still have access to
the previous variable if you want.

25
00:01:14,180 --> 00:01:16,770
So I'll change the set name also.

26
00:01:16,770 --> 00:01:20,360
I'll also change the looping variable
to make the code more clear.

27
00:01:20,360 --> 00:01:23,640
Finally I'll need to change
the account key column name to ACCT.

28
00:01:25,320 --> 00:01:27,470
Again since I copied and
pasted some code here,

29
00:01:27,470 --> 00:01:30,080
writing a function would
have been a good idea.

30
00:01:30,080 --> 00:01:32,330
I'll get to that in a later video.

31
00:01:32,330 --> 00:01:35,280
The main difficulty in this case
would be that this account key

32
00:01:35,280 --> 00:01:39,370
has become ACT in this loop but
it's possible to handle that.

33
00:01:39,370 --> 00:01:44,030
And I saw that there where 1237 unique
students in the engagement table.

34
00:01:44,030 --> 00:01:45,440
When I first ran this code,

35
00:01:45,440 --> 00:01:48,380
I was surprised that these
two numbers weren't the same.

36
00:01:48,380 --> 00:01:51,200
We'll see in a later
video why that happened.

37
00:01:51,200 --> 00:01:54,340
And finally, I followed a similar
process for the projects submission

38
00:01:54,340 --> 00:01:59,650
table and found there were 3642 project
submissions from 743 unique students.
