1
00:00:00,000 --> 00:00:03,000
Okay, for this last question, I'd like you to prove

2
00:00:03,000 --> 00:00:06,000
that the 4coloring problem is NP-complete,

3
00:00:06,000 --> 00:00:09,500
assuming that it's already known that 3coloring is NP-complete.

4
00:00:09,500 --> 00:00:15,000
And we're going to do that by writing a program that models the reduction proof.

5
00:00:15,000 --> 00:00:20,500
So let's say we're given a magical graph is 4colorable function.

6
00:00:20,500 --> 00:00:25,500
Now, in order to perform this reduction program, we're going to give you

7
00:00:25,500 --> 00:00:28,000
a function graph is 4colorable.

8
00:00:28,000 --> 00:00:33,000
And this function takes as input a graph in the form of an adjacency matrix,

9
00:00:33,000 --> 00:00:37,000
like we've previously discussed, and it returns a boolean--either true or false--

10
00:00:37,000 --> 00:00:42,000
indicating if the input graph is 4colorable in polynomial time.

11
00:00:42,000 --> 00:00:49,000
Now, what I'd like you to do is define a function graph is 3colorable that, again,

12
00:00:49,000 --> 00:00:53,000
takes an adjacency matrix as input and returns a boolean

13
00:00:53,000 --> 00:00:57,500
indicating if the input graph is 3colorable in polynomial time.

14
00:00:57,500 --> 00:01:03,000
Now, as I said, the point of this is to show that the 4coloring problem is NP-complete.

15
00:01:03,000 --> 00:01:09,000
So we'll want you to do a reduction program reducing the graph

16
00:01:09,000 --> 00:01:14,000
that is taken as input to 3colorable and change it into a graph

17
00:01:14,000 --> 99:59:59,999
that is an input to 4colorable to show this reduction.
