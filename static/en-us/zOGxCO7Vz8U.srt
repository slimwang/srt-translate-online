1
00:00:00,130 --> 00:00:01,060
That's right.

2
00:00:01,060 --> 00:00:05,430
The width is the difference between the two x-axis limits,

3
00:00:05,430 --> 00:00:08,450
330 minus 10 equals 320.

4
00:00:08,450 --> 00:00:11,612
Similarly, the height is 258.

5
00:00:11,612 --> 00:00:14,950
And the area is simply width times height.

6
00:00:14,950 --> 00:00:18,786
And that comes out to 82,560.

7
00:00:18,786 --> 00:00:23,820
For digital images, the height is the same as the number of rows.

8
00:00:23,820 --> 00:00:26,080
And width is the number of columns.

9
00:00:26,080 --> 00:00:32,810
Thus, the area is the total number of picture elements, or pixels.

10
00:00:32,810 --> 00:00:38,770
Now, if each pixel has three color values for red, green and blue, a color

11
00:00:38,770 --> 00:00:44,640
image, specifically an RGB image, has three different values at each pixel.

12
00:00:44,640 --> 00:00:52,940
This means a color image of this size has 82,560 times 3 total color values.

13
00:00:52,940 --> 00:00:56,320
If each color value is represented by one byte,

14
00:00:56,320 --> 00:01:00,670
then you need as many bytes to represent the entire color image.

15
00:01:00,670 --> 00:01:04,349
This should give you a sense of how much memory you need to store an image on

16
00:01:04,349 --> 00:01:09,770
a computer and how it depends on the width, height and number of color channels.
