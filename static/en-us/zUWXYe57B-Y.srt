1
00:00:00,540 --> 00:00:03,060
One of the biggest
misconceptions about monitoring

2
00:00:03,060 --> 00:00:04,640
is that it's only for alerting.

3
00:00:04,640 --> 00:00:08,770
That monitoring is there to page
Ops when the service is broken.

4
00:00:08,770 --> 00:00:12,043
But alerting is really only one of many
different ways that monitoring can

5
00:00:12,043 --> 00:00:13,539
help you and your organization.

6
00:00:14,940 --> 00:00:18,000
Monitoring doesn't just tell you
when your service is misbehaving,

7
00:00:18,000 --> 00:00:19,910
it also tells you things
that are business relevant,

8
00:00:19,910 --> 00:00:23,480
such as how your service's
traffic is growing.

9
00:00:23,480 --> 00:00:27,860
That's important not only for capacity
planning, hey, we need more servers, but

10
00:00:27,860 --> 00:00:29,740
also for business purposes.

11
00:00:29,740 --> 00:00:31,510
Like, you want to buy our website?

12
00:00:31,510 --> 00:00:33,360
We get 10,000 page views per second.

13
00:00:34,380 --> 00:00:38,840
Your service exists for some purpose,
like making money or teaching people or

14
00:00:38,840 --> 00:00:42,610
letting the world read your brilliant
postmodern hypertext novel.

15
00:00:42,610 --> 00:00:45,470
Your monitoring can tell you something
about how well your service is meeting

16
00:00:45,470 --> 00:00:46,630
that purpose.

17
00:00:46,630 --> 00:00:48,689
For instance,
when you're AB testing new features.

18
00:00:49,770 --> 00:00:52,750
Monitoring can also be
a big help to developers.

19
00:00:52,750 --> 00:00:56,680
Let's say you want to make optimizations
to the code to make your service faster.

20
00:00:56,680 --> 00:00:58,920
How are you going to know
whether you've succeeded?

21
00:00:58,920 --> 00:01:02,300
The service monitoring provides
you a source of truth on that.

22
00:01:02,300 --> 00:01:05,120
It's also good for
finding certain kinds of bugs.

23
00:01:05,120 --> 00:01:08,840
If you see your service's memory
usage creeping up over time,

24
00:01:08,840 --> 00:01:13,080
that's a pretty good sign that it has
a specific kind of bug, a memory leak.

25
00:01:13,080 --> 00:01:16,800
And if something changes during
a release, like say a big increase

26
00:01:16,800 --> 00:01:19,590
in CPU usage, that can be
a good sign of a bug as well.

27
00:01:20,950 --> 00:01:24,310
Because good monitoring can be generally
useful throughout the organization,

28
00:01:24,310 --> 00:01:26,220
it should be widely accessible.

29
00:01:26,220 --> 00:01:28,120
When business managers, sales people, or

30
00:01:28,120 --> 00:01:31,180
developers want to know the growth
trends of the service, they should be

31
00:01:31,180 --> 00:01:34,630
able to go to the same stats that
the services operations people use.
