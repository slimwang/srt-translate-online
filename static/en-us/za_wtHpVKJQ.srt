1
00:00:00,000 --> 00:00:03,000
So if we were able to assume the discrete log is hard,

2
00:00:03,000 --> 00:00:05,000
then we could prove that Diffie-Hellman is secure

3
00:00:05,000 --> 00:00:07,000
if we could show that breaking Diffie-Hellman

4
00:00:07,000 --> 00:00:11,000
implies that one can also solve the discrete log problem.

5
00:00:11,000 --> 00:00:13,000
No one has been able to prove that.

6
00:00:13,000 --> 00:00:16,000
Instead the security of Diffie-Hellman relies on a stronger assumption--

7
00:00:16,000 --> 00:00:19,000
what's known as the Decisional Diffie-Hellman Assumption.

8
00:00:19,000 --> 00:00:25,000
This is a little bit circular that we're basing the security argument for Diffie-Hellman

9
00:00:25,000 --> 00:00:29,000
on an assumption that was invented because this is what Diffie-Hellman relies on.

10
00:00:29,000 --> 00:00:32,000
That seems a bit circular, and indeed it is.

11
00:00:32,000 --> 00:00:35,000
But it is a useful way of crystallizing what we really rely on

12
00:00:35,000 --> 00:00:37,000
to know that the Diffie-Hellman protocol is secure.

13
00:00:37,000 --> 00:00:40,000
And what we're relying on is this property that

14
00:00:40,000 --> 00:00:44,000
G to the XY mod Q, and this is how we're computing the key

15
00:00:44,000 --> 00:00:46,000
when the XY values--

16
00:00:46,000 --> 00:00:51,000
one is a secret value, and one is the value that was sent in the previous message--

17
00:00:51,000 --> 00:00:54,000
and the assumption is that this value, which is G to the XY mod Q,

18
00:00:54,000 --> 00:00:58,000
and that's the value that's computed as the key in the Diffie-Hellman protocol,

19
00:00:58,000 --> 00:01:01,000
is indistinguishable from random

20
00:01:01,000 --> 00:01:06,000
even to an attacker who knows G, G to the X, G to the Y, and Q--

21
00:01:06,000 --> 00:01:09,000
these are the messages that would be intercepted.

22
00:01:09,000 --> 00:01:11,000
So if this assumption is true,

23
00:01:11,000 --> 00:01:14,000
that would be enough to prove that the Diffie-Hellman protocol is secure,

24
00:01:14,000 --> 00:01:18,000
and that an attacker who eavesdrops on all the messages can't compute the key

25
00:01:18,000 --> 00:01:21,000
because what the assumption is stating is that there is no way that they could tell

26
00:01:21,000 --> 00:01:25,000
that that value, which is the correct key, is any different from a random number

27
00:01:25,000 --> 00:01:28,000
even when they have access to this information.

28
00:01:28,000 --> 00:01:30,000
So this is an assumption, and it's even worse than that--

29
00:01:30,000 --> 00:01:33,000
it's known that it's not true for certain values.

30
00:01:33,000 --> 00:01:36,000
We can show that it is distinguishable from random.

31
00:01:36,000 --> 00:01:39,000
So the security of the Diffie-Hellman protocol would follow from this assumption

32
00:01:39,000 --> 00:01:41,000
if we knew this assumption were true.

33
00:01:41,000 --> 00:01:45,000
We don't, but people have been trying for a long time to break Diffie-Hellman,

34
00:01:45,000 --> 00:01:49,000
and so far it seems to be adequately secure.

35
00:01:49,000 --> 00:01:52,000
That is certainly not enough to guarantee that it always will be.

36
00:01:52,000 --> 00:01:56,000
Next we're going to talk about some issues in actually implementing Diffie-Hellman.
