1
00:00:00,410 --> 00:00:05,410
Session Authentication, simply attempts to ensure that BGP

2
00:00:05,410 --> 00:00:09,860
Routing messages sent between routers between AS's are

3
00:00:09,860 --> 00:00:11,920
authentic. Now, this turns out to be a

4
00:00:11,920 --> 00:00:15,390
little bit easier than it might appear, because

5
00:00:15,390 --> 00:00:17,850
the session between these routers is a TCP

6
00:00:17,850 --> 00:00:19,840
session. Therefore, all we have to do is

7
00:00:19,840 --> 00:00:22,210
authenticate this session. The way that this is

8
00:00:22,210 --> 00:00:26,600
done, in practice, is done using TCP's MD5

9
00:00:26,600 --> 00:00:30,020
authentication option. In such a setup, every message

10
00:00:30,020 --> 00:00:33,340
exchanged on the TCP connection not only contains the

11
00:00:33,340 --> 00:00:36,730
message, but also a hash of the message with

12
00:00:36,730 --> 00:00:39,840
a shared secret key. Now this key distribution is

13
00:00:39,840 --> 00:00:43,860
manual. The operator in AS1 and the operator in

14
00:00:43,860 --> 00:00:46,980
AS2, must agree on what key is, and typically

15
00:00:46,980 --> 00:00:49,360
they do that out of band. For example, by

16
00:00:49,360 --> 00:00:51,650
calling each other on the phone, but by calling

17
00:00:51,650 --> 00:00:53,350
each other on the phone and manually

18
00:00:53,350 --> 00:00:55,980
setting that key in the router configuration. But

19
00:00:55,980 --> 00:00:59,490
once that key is set, all messages between

20
00:00:59,490 --> 00:01:02,170
this pair of routers is authenticated. Another way

21
00:01:02,170 --> 00:01:05,803
to guarantee session authentication, is to have

22
00:01:05,803 --> 00:01:08,110
AS1 transmit packets with the of TTL of

23
00:01:08,110 --> 00:01:16,380
255, and have the receiving AS drop any packet that has a TTL less than 254.

24
00:01:16,380 --> 00:01:20,590
Because most [UNKNOWN] sessions are only a

25
00:01:20,590 --> 00:01:24,040
single hop and attackers are typically remote.

26
00:01:24,040 --> 00:01:28,710
It is not possible for the recipient AS to accept a packet from a

27
00:01:28,710 --> 00:01:32,670
remote attacker, because likely that attacker's packets

28
00:01:32,670 --> 00:01:34,930
will have a TTL value of less

29
00:01:34,930 --> 00:01:38,070
than 254. This defense is aptly called

30
00:01:38,070 --> 00:01:42,170
the TTL hack defense for BGP Session Authentication.
