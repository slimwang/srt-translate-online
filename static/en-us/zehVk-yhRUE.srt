1
00:00:00,070 --> 00:00:03,530
To insert a question,
think about this set of formulas.

2
00:00:03,530 --> 00:00:07,992
p is our probability that
a single component will fail.

3
00:00:07,992 --> 00:00:12,800
Then 1-p is the probability that
a single component will not fail.

4
00:00:12,800 --> 00:00:16,880
For there not to be a failure
anywhere in this system, so

5
00:00:16,880 --> 00:00:19,960
we're trying to answer
the inverse of this question.

6
00:00:19,960 --> 00:00:24,450
That means that not a single one of the
components in the system should fail.

7
00:00:24,450 --> 00:00:28,610
If the probability of one
component not failing is 1-p,

8
00:00:28,610 --> 00:00:34,800
then the probability of no components in
the system failing is (1-p) to the nth.

9
00:00:34,800 --> 00:00:37,710
Their total of end
components in the system.

10
00:00:37,710 --> 00:00:42,500
So this will be the probability that
nothing will go wrong in the system.

11
00:00:42,500 --> 00:00:46,410
And the question here is what is
the probability that something

12
00:00:46,410 --> 00:00:47,060
will go wrong?

13
00:00:47,060 --> 00:00:49,610
So there will be a failure
somewhere in the system,

14
00:00:49,610 --> 00:00:54,060
that's clearly 1 minus this result.

15
00:00:54,060 --> 00:01:00,680
The formula for the total answer is,
on parentheses, 1 ,minus p to the n.

16
00:01:00,680 --> 00:01:04,849
If you do the math, you will see
that with this probability, so

17
00:01:04,849 --> 00:01:09,690
there's a 3% of something failing and
you have ten components.

18
00:01:09,690 --> 00:01:14,890
If you do this math, you have a 26%
chance that something will go wrong.

19
00:01:14,890 --> 00:01:19,610
If you increase the scale and your n
becomes 100, then if you do this math

20
00:01:19,610 --> 00:01:23,145
you'll realize that with this
high probability of failure,

21
00:01:23,145 --> 00:01:27,640
95% of the time you will have
a failure at some point.

22
00:01:27,640 --> 00:01:31,010
Our cloud systems don't have 10 or
100 components.

23
00:01:31,010 --> 00:01:34,120
They have thousands and
hundreds of thousands of components.

24
00:01:34,120 --> 00:01:39,700
Yes, they may be more stable than
this 0.03 probability of failure,

25
00:01:39,700 --> 00:01:42,270
but the point is that things will fail.

26
00:01:42,270 --> 00:01:44,650
The more components you put together,

27
00:01:44,650 --> 00:01:49,310
the more you'll have situations in
which something, somewhere, is failing.

28
00:01:49,310 --> 00:01:52,750
So you have to have mechanisms that

29
00:01:52,750 --> 00:01:56,380
are prepared to deal with
those kinds of failures.

30
00:01:56,380 --> 00:01:57,590
For instance,

31
00:01:57,590 --> 00:02:02,610
your software may have to incorporate
mechanisms that include timeouts, so

32
00:02:02,610 --> 00:02:07,950
that you can detect that a failure has
occurred or to integrate mechanisms for

33
00:02:07,950 --> 00:02:13,460
restart and retry in order to
be able to recover from failure.

34
00:02:13,460 --> 00:02:17,350
You have to incorporate mechanisms for
backup, for application, for

35
00:02:17,350 --> 00:02:18,650
checkpointing.

36
00:02:18,650 --> 00:02:21,990
So you have to accept, you have to
embrace the fact that failures will

37
00:02:21,990 --> 00:02:28,100
happen, and so you have to build robust
software that will be able to detect and

38
00:02:28,100 --> 00:02:30,770
recover or
avoid failures from occurring.
