1
00:00:00,000 --> 00:00:05,000
Now you, via the interpreter, are going to write the first part of our parser.

2
00:00:05,000 --> 00:00:09,000
Our parser is just going to build up this big variable chart.

3
00:00:09,000 --> 00:00:14,000
We've already seen how to seed it with an initial value for chart state 0

4
00:00:14,000 --> 00:00:19,000
and also how to see if a string is accepted by a grammar--

5
00:00:19,000 --> 00:00:22,000
it's in the language of the grammar--by checking chart t if there are t tokens

6
00:00:22,000 --> 00:00:24,000
to see if it has the final state.

7
00:00:24,000 --> 00:00:26,000
Let's say we're deep in the middle of this.

8
00:00:26,000 --> 00:00:33,000
We're currently looking at chart sub i, and we see that x goes to ab dot cd from j.

9
00:00:33,000 --> 00:00:37,000
We're going to write the following code in our parser.

10
00:00:37,000 --> 00:00:40,000
We're going to call a special function called "closure"

11
00:00:40,000 --> 00:00:43,000
and pass it the grammar, just as we described before.

12
00:00:43,000 --> 00:00:47,000
I, which is going to be a number, that's the chart state we're looking at.

13
00:00:47,000 --> 00:00:50,000
X, that's going to be a single nonterminal.

14
00:00:50,000 --> 00:00:54,000
Ab, that's going to be this list here--could be empty, could have many things.

15
00:00:54,000 --> 00:00:57,000
And cd, that's this list here--could be empty, could have many thing.

16
00:00:57,000 --> 00:01:03,000
This closure function is going to return all the new parsing states

17
00:01:03,000 --> 00:01:06,000
that we want to add to chart position i.

18
00:01:06,000 --> 00:01:08,000
It's going to return a list of next states.

19
00:01:08,000 --> 00:01:10,000
For each one of those, we're going to add it to the chart.

20
00:01:10,000 --> 00:01:13,000
We've already written addtochart together,

21
00:01:13,000 --> 00:01:18,000
and we're going to figure out if there were any changes over all of the things you returned.

22
00:01:18,000 --> 00:01:22,000
For example, let's say you returned three things but two of them were already in the chart.

23
00:01:22,000 --> 00:01:27,000
Since at least one of those was a change, then we want any changes to be true.

24
00:01:27,000 --> 00:01:31,000
This blue code here, this is locked is stone. I'm definitely going to use this.

25
00:01:31,000 --> 00:01:34,000
But you can write any definition for closure that you like

26
00:01:34,000 --> 00:01:39,000
as long as it correctly implements how the closure is supposed to work.

27
00:01:39,000 --> 00:01:41,000
Go forth.

28
00:01:41,000 --> 00:01:43,000
This is relatively tricky, and here is my hint.

29
00:01:43,000 --> 00:01:48,000
If you're stuck, do a list comprehension over the grammar rules.

30
00:01:48,000 --> 00:01:51,000
Remember that you're trying to return states,

31
00:01:51,000 --> 00:01:53,000
and every state is pretty much like a grammar rule

32
00:01:53,000 --> 99:59:59,999
but with the addition of that red dot somewhere in the middle.
