1
00:00:00,340 --> 00:00:01,200
I'd like to take a moment and

2
00:00:01,200 --> 00:00:03,610
show you the process of
creating an object diagram.

3
00:00:03,610 --> 00:00:08,280
You might also hear this process
referred to as object decomposition.

4
00:00:08,280 --> 00:00:11,230
That is, we're taking something
that's a big object, like an app,

5
00:00:11,230 --> 00:00:13,740
and we're breaking it down into
its individual components.

6
00:00:13,740 --> 00:00:16,800
Now, there's no right or
wrong way to do this.

7
00:00:16,800 --> 00:00:19,110
If 100 people create
an object diagram for an app,

8
00:00:19,110 --> 00:00:22,570
there might be 100 completely
different diagrams.

9
00:00:22,570 --> 00:00:26,260
Also there are some informal and
formal ways to create them.

10
00:00:26,260 --> 00:00:30,390
A formal way might be creating an object
diagram using the universal modeling

11
00:00:30,390 --> 00:00:32,350
language or UML.

12
00:00:32,350 --> 00:00:35,940
And an example object diagram's
given here on the left.

13
00:00:35,940 --> 00:00:39,660
Now UML as a modeling language contains
a bunch of standard symbols and

14
00:00:39,660 --> 00:00:43,450
icons that are helpful for
laying out the components of a project.

15
00:00:43,450 --> 00:00:47,580
But for many UML can be
really bulky to work with.

16
00:00:47,580 --> 00:00:48,810
And I fall into that category.

17
00:00:48,810 --> 00:00:52,080
I'm more of a fan of an informal
approach that takes some ideas from UML,

18
00:00:52,080 --> 00:00:56,250
but it doesn't get bogged down
in the nitty gritty details.

19
00:00:56,250 --> 00:01:00,920
And an example of a more informal object
diagram is given here on the right.

20
00:01:00,920 --> 00:01:01,740
So for this example,

21
00:01:01,740 --> 00:01:05,410
I'm going to take an app that you'll
see later called Alien Adventure.

22
00:01:05,410 --> 00:01:06,740
This is the main screen for the app and

23
00:01:06,740 --> 00:01:09,960
I can interact with it by
tapping on the screen.

24
00:01:09,960 --> 00:01:13,390
And we can see that this robot
will animate across the screen and

25
00:01:13,390 --> 00:01:14,660
there's an alien.

26
00:01:14,660 --> 00:01:17,180
There's actually multiple aliens,
and the robot and

27
00:01:17,180 --> 00:01:20,900
the alien will have a discussion and
will go back and forth.

28
00:01:20,900 --> 00:01:24,580
And if the robot answers the aliens
question correctly then these little

29
00:01:24,580 --> 00:01:28,340
badges will appear in the lower
left hand corner of the screen.

30
00:01:28,340 --> 00:01:29,800
I'm going to stop right here.

31
00:01:29,800 --> 00:01:33,280
At this point, we've already seen
enough of this app to actually start

32
00:01:33,280 --> 00:01:35,270
the object decomposition process.

33
00:01:35,270 --> 00:01:38,820
So I'm going to open a Google
drawing to build the diagram.

34
00:01:38,820 --> 00:01:42,100
But you could use a piece of paper,
a napkin,

35
00:01:42,100 --> 00:01:46,780
a tool like draw.io, which I have that
opened up in this other tab here.

36
00:01:46,780 --> 00:01:49,860
This is a draw io diagram or really just

37
00:01:49,860 --> 00:01:54,200
any tool that gives you the ability
to put your ideas into a diagram.

38
00:01:54,200 --> 00:01:58,570
Personally, I'm a big fan of napkins and
then I can say from personal experience

39
00:01:58,570 --> 00:02:01,430
that a lot of great ideas
I've diagrammed on napkins.

40
00:02:01,430 --> 00:02:04,490
Idling to say that there's probably some
other amazing apps out there that have

41
00:02:04,490 --> 00:02:08,400
been diagramed on napkins but,
that's a different story.

42
00:02:08,400 --> 00:02:11,060
The first thing will start with
is the first big object which is

43
00:02:11,060 --> 00:02:12,250
the app itself.

44
00:02:12,250 --> 00:02:16,070
Now, the app is an actual object and
code but that's okay.

45
00:02:16,070 --> 00:02:18,880
We're going to use that
as our starting point and

46
00:02:18,880 --> 00:02:22,080
if we think about what we saw when
you're playing around with the app,

47
00:02:22,080 --> 00:02:24,960
we can start adding those
objects to the diagram.

48
00:02:24,960 --> 00:02:28,540
So we know that there's a robot and
that there were aliens, so

49
00:02:28,540 --> 00:02:31,790
I'm going to go ahead make some
rectangles to represent those and

50
00:02:31,790 --> 00:02:35,060
we'll add labels for
the robot object and the alien object.

51
00:02:35,060 --> 00:02:38,820
You'll notice that I'm using the
singular form of alien and not aliens,

52
00:02:38,820 --> 00:02:41,680
even though there are multiple
aliens in the app

53
00:02:41,680 --> 00:02:43,830
if we were to continue playing it.

54
00:02:43,830 --> 00:02:47,480
And this is a personal preference,
and it's one of those aspects of UML

55
00:02:47,480 --> 00:02:50,290
that I'm blending with
this informal approach.

56
00:02:50,290 --> 00:02:54,090
In UML you typically refer to
objects in their singular form.

57
00:02:54,090 --> 00:02:56,890
Also if I was using a more
formal process I might use

58
00:02:56,890 --> 00:03:00,010
a certain type of symbol for
an object, maybe a rectangle and

59
00:03:00,010 --> 00:03:04,740
then a certain type of symbol for
a struct like a rounded rectangle.

60
00:03:04,740 --> 00:03:07,110
But again because we're
keeping it pretty informal,

61
00:03:07,110 --> 00:03:09,090
I'm just going to use rectangles for
everything.

62
00:03:10,120 --> 00:03:11,810
Now what else did we notice in the app?

63
00:03:11,810 --> 00:03:15,770
What else seemed to stand out in our
mind as a self-contained entity?

64
00:03:15,770 --> 00:03:19,140
What else could be considered
part of the application.

65
00:03:19,140 --> 00:03:21,860
Some of the things that I can
think of are the background.

66
00:03:21,860 --> 00:03:25,170
We also had badges that appeared
in the lower left hand corner.

67
00:03:25,170 --> 00:03:27,620
And there was a dialogue
bubble at the top and

68
00:03:27,620 --> 00:03:30,360
it consisted of multiple lines of text.

69
00:03:30,360 --> 00:03:32,620
This is a pretty good set
of objects to start with.

70
00:03:32,620 --> 00:03:36,150
These were all things that we
could clearly see with our eyes.

71
00:03:36,150 --> 00:03:38,890
But there could also be objects
that are behind the scenes.

72
00:03:38,890 --> 00:03:43,640
Things that we can't see, but still make
up some part of the application itself.

73
00:03:43,640 --> 00:03:46,860
For example,
what about the concept of a game world.

74
00:03:46,860 --> 00:03:48,630
Maybe the aliens, the robot and

75
00:03:48,630 --> 00:03:52,630
everything within it could be
thought as parts of a game world.

76
00:03:52,630 --> 00:03:56,430
So I'm going to go ahead and add a
symbol for world to our object diagram.

77
00:03:56,430 --> 00:03:59,380
In adding world here is just another
example of what I really want to

78
00:03:59,380 --> 00:04:00,440
stress to you.

79
00:04:00,440 --> 00:04:03,240
This process is not exact science.

80
00:04:03,240 --> 00:04:06,920
It's a very creative abstract
thinking type of process.

81
00:04:06,920 --> 00:04:10,395
No two people probably create
the same object diagram.

82
00:04:10,395 --> 00:04:12,385
Now, I'm going to go ahead stop here.

83
00:04:12,385 --> 00:04:14,595
In just a moment we're
going to refine this diagram.

84
00:04:14,595 --> 00:04:17,765
We're going to think about how
the objects are interconnected and

85
00:04:17,765 --> 00:04:20,535
we're also going to look to see if any
of the objects have similarities because

86
00:04:20,535 --> 00:04:22,865
that's a big deal when designing apps.

87
00:04:22,865 --> 00:04:27,155
That some of the objects share traits
and other similar functionality,

88
00:04:27,155 --> 00:04:29,925
then we can take advantage of that
later when we start writing code.
