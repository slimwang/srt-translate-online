1
00:00:00,012 --> 00:00:03,285
Well, if this is my image and these are the pixels on the boundary,

2
00:00:03,285 --> 00:00:07,845
I've assigned 1 thread per element or 1 thread per pixel.

3
00:00:07,845 --> 00:00:11,688
A warp somewhere in the center of the image is not going to have any divergence.

4
00:00:11,688 --> 00:00:17,369
And similarly, a warp along the top or bottom rows is also not going to have any divergence

5
00:00:17,369 --> 00:00:22,535
because in this case all of the threads responsible for the pixels along this row

6
00:00:22,535 --> 00:00:26,234
are going to call that special boundary handling code.

7
00:00:26,234 --> 00:00:33,246
So it's really only warps like these that are at the beginning or end of a row,

8
00:00:33,246 --> 00:00:36,422
of an interior row, that have any divergence.

9
00:00:36,422 --> 00:00:39,549
In this case 1 thread will execute the boundary code.

10
00:00:39,549 --> 00:00:42,057
That's the one responsible for the pixel in the boundary.

11
00:00:42,057 --> 00:00:45,754
The rest of the threads will execute the mainline code, the interior code.

12
00:00:45,754 --> 00:00:51,394
So in all these cases you have 2-way divergence, and that's the answer to our question.
