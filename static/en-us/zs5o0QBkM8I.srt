1
00:00:00,400 --> 00:00:02,390
Let's start with the simplest case.

2
00:00:02,390 --> 00:00:05,500
That is, we have a one-to-one association and

3
00:00:05,500 --> 00:00:07,800
we're always going to traverse it in a single direction.

4
00:00:07,800 --> 00:00:10,430
We can do that with a simple pointer.

5
00:00:10,430 --> 00:00:13,350
Instances of class a are always going to refer to instances of class,

6
00:00:13,350 --> 00:00:14,800
exactly one instance of class b.

7
00:00:14,800 --> 00:00:18,380
And we're always going to go from the direction from a to b.

8
00:00:18,380 --> 00:00:21,686
You just have a simple pointer, which means in an object-oriented language,

9
00:00:21,686 --> 00:00:27,930
we have an attribute of the target type in our, in our class.

10
00:00:27,930 --> 00:00:29,510
Okay, this is quite simple to do.

11
00:00:29,510 --> 00:00:34,610
And it even extends in the case where there might be multiple instances in

12
00:00:34,610 --> 00:00:38,840
the target class associated with a particular instance in the source class.

13
00:00:38,840 --> 00:00:41,160
In that case, instead of just using a simple pointer,

14
00:00:41,160 --> 00:00:42,350
we use a vector of pointers.
