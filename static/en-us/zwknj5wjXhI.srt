1
00:00:00,000 --> 00:00:03,000
Let's say I'd asked you to write the following procedure:

2
00:00:03,000 --> 00:00:06,000
Find last given a haystack and a needle,

3
00:00:06,000 --> 00:00:12,000
returns the index of the last instance of needle in haystack, or -1 if it's not present.

4
00:00:12,000 --> 00:00:16,000
For example, if we're trying to find the last o in philosophy, we're going to get

5
00:00:16,000 --> 00:00:24,000
this one 0,1,2,3,4,5,6 instead of this earlier 1,0,1,2,3,4 find the last occurence.

6
00:00:24,000 --> 00:00:26,000
Some of you may already be familiar with this procedure.

7
00:00:26,000 --> 00:00:30,000
You may have seen it in the previous class, but it doesn't matter--I'm going to write it for you.

8
00:00:30,000 --> 00:00:36,000
I've written find last for you but actually I've written a version that has a bug.

9
00:00:36,000 --> 00:00:38,000
This works pretty much correctly.

10
00:00:38,000 --> 00:00:42,000
What we're going to do is work our way backwards, but we're going to use two variables--

11
00:00:42,000 --> 00:00:45,000
one to store where we're currently are and one to remember

12
00:00:45,000 --> 00:00:48,000
the last time we found something successful.

13
00:00:48,000 --> 00:00:54,000
Let's imagine we're looking in haystack for a, we're going to find this a first--gray

14
00:00:54,000 --> 00:00:57,000
and then we're going to go over and find this a--gray

15
00:00:57,000 --> 00:01:00,000
and then we're going to get -1 so we want to return this a.

16
00:01:00,000 --> 00:01:04,000
We're going to find the last one by repeatedly searching forward

17
00:01:04,000 --> 00:01:08,000
until we get -1 and then conceptually we'll back up one.

18
00:01:08,000 --> 00:01:13,000
Remember we get -1 because the find procedure in Python returns -1 if something isn't found.

19
00:01:13,000 --> 00:01:20,000
Forever, I'm going to start finding the needle in the haystack, find this a--great!

20
00:01:20,000 --> 00:01:26,000
If that didn't work, I return, otherwise, I look again until it doesn't work.

21
00:01:26,000 --> 00:01:30,000
Down here at the bottom, I have four possible inputs,

22
00:01:30,000 --> 00:01:33,000
findlast haystack a, findlast haystack z,

23
00:01:33,000 --> 00:01:36,000
findlast haystack empty string, findlast haystack empty string needle.

24
00:01:36,000 --> 00:01:40,000
Only some of these will actually show off the bug.

25
00:01:40,000 --> 00:01:43,000
The bug is that I am returning this pos instead of last pos.

26
00:01:43,000 --> 00:01:50,000
What I'd like you to do is check each box corresponding to an input that shows the bug.

27
00:01:50,000 --> 00:01:54,000
Remember what it means to show the bug--on the buggy code you get one answer

28
00:01:54,000 --> 99:59:59,999
but on the correct code and in our minds, you get another.
