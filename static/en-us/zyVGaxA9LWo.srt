1
00:00:00,390 --> 00:00:04,019
>> Continuous delivery is the next
logical step after continuous

2
00:00:04,019 --> 00:00:05,420
integration.

3
00:00:05,420 --> 00:00:06,990
Now you know that after each commit,

4
00:00:06,990 --> 00:00:12,340
developers need to integrate their code
and see if it builds and passes tests.

5
00:00:12,340 --> 00:00:13,620
Hopefully, it will.

6
00:00:13,620 --> 00:00:16,569
And if not, you'll get very fast
feedback about what went wrong.

7
00:00:16,569 --> 00:00:19,989
>> But the code itself is not the only
thing that is needed to get the product

8
00:00:19,989 --> 00:00:21,246
in front of the customer.

9
00:00:21,246 --> 00:00:25,170
The code has to be deployed
somewhere in the right environment.

10
00:00:25,170 --> 00:00:28,236
It has to be tested for
big picture issues beyond just,

11
00:00:28,236 --> 00:00:29,576
does this method work?

12
00:00:29,576 --> 00:00:32,768
It should be tested for usability,
performance and security.

13
00:00:32,768 --> 00:00:36,907
A lot of these steps can be automated,
like configuration of the environment or

14
00:00:36,907 --> 00:00:39,510
the deployed processes themselves.

15
00:00:39,510 --> 00:00:42,180
Some of the tests can be out
of it as well, some cannot.

16
00:00:43,440 --> 00:00:46,320
>> And this brings us to some
elements that form the basis of

17
00:00:46,320 --> 00:00:47,170
continuous delivery.

18
00:00:48,230 --> 00:00:51,920
Every commit is treated,
as a potential release candidate.

19
00:00:51,920 --> 00:00:56,030
Feedback is immediate, so
that the team can fix problems ASAP.

20
00:00:57,370 --> 00:01:00,910
All steps of the process are visible
to every member of the team to

21
00:01:00,910 --> 00:01:01,980
promote collaboration.

22
00:01:03,180 --> 00:01:05,740
Build once, deploy anywhere.

23
00:01:05,740 --> 00:01:09,754
Binary should be built only once to
avoid hard to debug problems that may be

24
00:01:09,754 --> 00:01:13,070
caused by rebuilding in slightly
different environments.

25
00:01:13,070 --> 00:01:16,804
>> And the process that the code
undergoes before being deployed is often

26
00:01:16,804 --> 00:01:19,156
called the continuous delivery pipeline.

27
00:01:19,156 --> 00:01:23,090
Let's explore the parts of this pipeline
and discuss what you gain by using it.
